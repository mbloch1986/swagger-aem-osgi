/**
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


#include "OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties.h"

#include "OAIHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace OpenAPI {

OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties(QString json) {
    this->fromJson(json);
}

OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties() {
    this->init();
}

OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::~OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties() {
    
}

void
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::init() {
    m_com_adobe_cq_cdn_cdn_rewriter_isSet = false;
    m_com_adobe_cq_cloud_config_components_isSet = false;
    m_com_adobe_cq_cloud_config_core_isSet = false;
    m_com_adobe_cq_cloud_config_ui_isSet = false;
    m_com_adobe_cq_com_adobe_cq_editor_isSet = false;
    m_com_adobe_cq_com_adobe_cq_projects_core_isSet = false;
    m_com_adobe_cq_com_adobe_cq_projects_wcm_core_isSet = false;
    m_com_adobe_cq_com_adobe_cq_ui_commons_isSet = false;
    m_com_adobe_cq_com_adobe_cq_wcm_style_isSet = false;
    m_com_adobe_cq_cq_activitymap_integration_isSet = false;
    m_com_adobe_cq_cq_contexthub_commons_isSet = false;
    m_com_adobe_cq_cq_dtm_isSet = false;
    m_com_adobe_cq_cq_healthcheck_isSet = false;
    m_com_adobe_cq_cq_multisite_targeting_isSet = false;
    m_com_adobe_cq_cq_pre_upgrade_cleanup_isSet = false;
    m_com_adobe_cq_cq_product_info_provider_isSet = false;
    m_com_adobe_cq_cq_rest_sites_isSet = false;
    m_com_adobe_cq_cq_security_hc_isSet = false;
    m_com_adobe_cq_dam_cq_dam_svg_handler_isSet = false;
    m_com_adobe_cq_dam_cq_scene7_imaging_isSet = false;
    m_com_adobe_cq_dtm_reactor_core_isSet = false;
    m_com_adobe_cq_dtm_reactor_ui_isSet = false;
    m_com_adobe_cq_exp_jspel_resolver_isSet = false;
    m_com_adobe_cq_inbox_cq_inbox_isSet = false;
    m_com_adobe_cq_json_schema_parser_isSet = false;
    m_com_adobe_cq_media_cq_media_publishing_dps_fp_core_isSet = false;
    m_com_adobe_cq_mobile_cq_mobile_caas_isSet = false;
    m_com_adobe_cq_mobile_cq_mobile_index_builder_isSet = false;
    m_com_adobe_cq_mobile_cq_mobile_phonegap_build_isSet = false;
    m_com_adobe_cq_myspell_isSet = false;
    m_com_adobe_cq_sample_we_retail_core_isSet = false;
    m_com_adobe_cq_screens_com_adobe_cq_screens_dcc_isSet = false;
    m_com_adobe_cq_screens_com_adobe_cq_screens_mq_core_isSet = false;
    m_com_adobe_cq_social_cq_social_as_provider_isSet = false;
    m_com_adobe_cq_social_cq_social_badging_basic_impl_isSet = false;
    m_com_adobe_cq_social_cq_social_badging_impl_isSet = false;
    m_com_adobe_cq_social_cq_social_calendar_impl_isSet = false;
    m_com_adobe_cq_social_cq_social_content_fragments_impl_isSet = false;
    m_com_adobe_cq_social_cq_social_enablement_impl_isSet = false;
    m_com_adobe_cq_social_cq_social_graph_impl_isSet = false;
    m_com_adobe_cq_social_cq_social_ideation_impl_isSet = false;
    m_com_adobe_cq_social_cq_social_jcr_provider_isSet = false;
    m_com_adobe_cq_social_cq_social_members_impl_isSet = false;
    m_com_adobe_cq_social_cq_social_ms_provider_isSet = false;
    m_com_adobe_cq_social_cq_social_notifications_channels_web_isSet = false;
    m_com_adobe_cq_social_cq_social_notifications_impl_isSet = false;
    m_com_adobe_cq_social_cq_social_rdb_provider_isSet = false;
    m_com_adobe_cq_social_cq_social_scf_impl_isSet = false;
    m_com_adobe_cq_social_cq_social_scoring_basic_impl_isSet = false;
    m_com_adobe_cq_social_cq_social_scoring_impl_isSet = false;
    m_com_adobe_cq_social_cq_social_serviceusers_impl_isSet = false;
    m_com_adobe_cq_social_cq_social_srp_impl_isSet = false;
    m_com_adobe_cq_social_cq_social_ugcbase_impl_isSet = false;
    m_com_adobe_dam_cq_dam_cfm_impl_isSet = false;
    m_com_adobe_forms_foundation_forms_foundation_base_isSet = false;
    m_com_adobe_granite_apicontroller_isSet = false;
    m_com_adobe_granite_asset_core_isSet = false;
    m_com_adobe_granite_auth_sso_isSet = false;
    m_com_adobe_granite_bundles_hc_impl_isSet = false;
    m_com_adobe_granite_compat_router_isSet = false;
    m_com_adobe_granite_conf_isSet = false;
    m_com_adobe_granite_conf_ui_core_isSet = false;
    m_com_adobe_granite_cors_isSet = false;
    m_com_adobe_granite_crx_explorer_isSet = false;
    m_com_adobe_granite_crxde_lite_isSet = false;
    m_com_adobe_granite_crypto_config_isSet = false;
    m_com_adobe_granite_crypto_extension_isSet = false;
    m_com_adobe_granite_crypto_file_isSet = false;
    m_com_adobe_granite_crypto_jcr_isSet = false;
    m_com_adobe_granite_csrf_isSet = false;
    m_com_adobe_granite_distribution_core_isSet = false;
    m_com_adobe_granite_dropwizard_metrics_isSet = false;
    m_com_adobe_granite_frags_impl_isSet = false;
    m_com_adobe_granite_gibson_isSet = false;
    m_com_adobe_granite_infocollector_isSet = false;
    m_com_adobe_granite_installer_factory_packages_isSet = false;
    m_com_adobe_granite_jetty_ssl_isSet = false;
    m_com_adobe_granite_jobs_async_isSet = false;
    m_com_adobe_granite_maintenance_oak_isSet = false;
    m_com_adobe_granite_monitoring_core_isSet = false;
    m_com_adobe_granite_queries_isSet = false;
    m_com_adobe_granite_replication_hc_impl_isSet = false;
    m_com_adobe_granite_repository_checker_isSet = false;
    m_com_adobe_granite_repository_hc_impl_isSet = false;
    m_com_adobe_granite_rest_assets_isSet = false;
    m_com_adobe_granite_security_ui_isSet = false;
    m_com_adobe_granite_startup_isSet = false;
    m_com_adobe_granite_tagsoup_isSet = false;
    m_com_adobe_granite_taskmanagement_core_isSet = false;
    m_com_adobe_granite_taskmanagement_workflow_isSet = false;
    m_com_adobe_granite_ui_clientlibs_compiler_less_isSet = false;
    m_com_adobe_granite_ui_clientlibs_processor_gcc_isSet = false;
    m_com_adobe_granite_webconsole_plugins_isSet = false;
    m_com_adobe_granite_workflow_console_isSet = false;
    m_com_adobe_xmp_worker_files_native_fragment_linux_isSet = false;
    m_com_adobe_xmp_worker_files_native_fragment_macosx_isSet = false;
    m_com_adobe_xmp_worker_files_native_fragment_win_isSet = false;
    m_com_day_commons_osgi_wrapper_simple_jndi_isSet = false;
    m_com_day_cq_cq_authhandler_isSet = false;
    m_com_day_cq_cq_compat_configupdate_isSet = false;
    m_com_day_cq_cq_licensebranding_isSet = false;
    m_com_day_cq_cq_notifcation_impl_isSet = false;
    m_com_day_cq_cq_replication_audit_isSet = false;
    m_com_day_cq_cq_search_ext_isSet = false;
    m_com_day_cq_dam_cq_dam_annotation_print_isSet = false;
    m_com_day_cq_dam_cq_dam_asset_usage_isSet = false;
    m_com_day_cq_dam_cq_dam_s7dam_isSet = false;
    m_com_day_cq_dam_cq_dam_similaritysearch_isSet = false;
    m_com_day_cq_dam_dam_webdav_support_isSet = false;
    m_com_day_cq_pre_upgrade_tasks_isSet = false;
    m_com_day_cq_replication_extensions_isSet = false;
    m_com_day_cq_wcm_cq_msm_core_isSet = false;
    m_com_day_cq_wcm_cq_wcm_translation_isSet = false;
    m_day_commons_jrawio_isSet = false;
    m_org_apache_aries_jmx_whiteboard_isSet = false;
    m_org_apache_felix_http_sslfilter_isSet = false;
    m_org_apache_felix_org_apache_felix_threaddump_isSet = false;
    m_org_apache_felix_webconsole_plugins_ds_isSet = false;
    m_org_apache_felix_webconsole_plugins_event_isSet = false;
    m_org_apache_felix_webconsole_plugins_memoryusage_isSet = false;
    m_org_apache_felix_webconsole_plugins_packageadmin_isSet = false;
    m_org_apache_jackrabbit_oak_auth_ldap_isSet = false;
    m_org_apache_jackrabbit_oak_segment_tar_isSet = false;
    m_org_apache_jackrabbit_oak_solr_osgi_isSet = false;
    m_org_apache_sling_bundleresource_impl_isSet = false;
    m_org_apache_sling_commons_fsclassloader_isSet = false;
    m_org_apache_sling_commons_log_webconsole_isSet = false;
    m_org_apache_sling_datasource_isSet = false;
    m_org_apache_sling_discovery_base_isSet = false;
    m_org_apache_sling_discovery_oak_isSet = false;
    m_org_apache_sling_discovery_support_isSet = false;
    m_org_apache_sling_distribution_api_isSet = false;
    m_org_apache_sling_distribution_core_isSet = false;
    m_org_apache_sling_extensions_webconsolesecurityprovider_isSet = false;
    m_org_apache_sling_hc_webconsole_isSet = false;
    m_org_apache_sling_installer_console_isSet = false;
    m_org_apache_sling_installer_provider_file_isSet = false;
    m_org_apache_sling_installer_provider_jcr_isSet = false;
    m_org_apache_sling_jcr_davex_isSet = false;
    m_org_apache_sling_jcr_resourcesecurity_isSet = false;
    m_org_apache_sling_jmx_provider_isSet = false;
    m_org_apache_sling_launchpad_installer_isSet = false;
    m_org_apache_sling_models_impl_isSet = false;
    m_org_apache_sling_repoinit_parser_isSet = false;
    m_org_apache_sling_resource_inventory_isSet = false;
    m_org_apache_sling_resourceresolver_isSet = false;
    m_org_apache_sling_scripting_javascript_isSet = false;
    m_org_apache_sling_scripting_jst_isSet = false;
    m_org_apache_sling_scripting_sightly_js_provider_isSet = false;
    m_org_apache_sling_scripting_sightly_models_provider_isSet = false;
    m_org_apache_sling_security_isSet = false;
    m_org_apache_sling_servlets_compat_isSet = false;
    m_org_apache_sling_servlets_get_isSet = false;
    m_org_apache_sling_startupfilter_disabler_isSet = false;
    m_org_apache_sling_tracer_isSet = false;
    m_we_retail_client_app_core_isSet = false;
}

void
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::fromJson(QString jsonString) {
    QByteArray array (jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::fromJsonObject(QJsonObject json) {
    ::OpenAPI::fromJsonValue(com_adobe_cq_cdn_cdn_rewriter, json[QString("com.adobe.cq.cdn.cdn-rewriter")]);
    
    ::OpenAPI::fromJsonValue(com_adobe_cq_cloud_config_components, json[QString("com.adobe.cq.cloud-config.components")]);
    
    ::OpenAPI::fromJsonValue(com_adobe_cq_cloud_config_core, json[QString("com.adobe.cq.cloud-config.core")]);
    
    ::OpenAPI::fromJsonValue(com_adobe_cq_cloud_config_ui, json[QString("com.adobe.cq.cloud-config.ui")]);
    
    ::OpenAPI::fromJsonValue(com_adobe_cq_com_adobe_cq_editor, json[QString("com.adobe.cq.com.adobe.cq.editor")]);
    
    ::OpenAPI::fromJsonValue(com_adobe_cq_com_adobe_cq_projects_core, json[QString("com.adobe.cq.com.adobe.cq.projects.core")]);
    
    ::OpenAPI::fromJsonValue(com_adobe_cq_com_adobe_cq_projects_wcm_core, json[QString("com.adobe.cq.com.adobe.cq.projects.wcm.core")]);
    
    ::OpenAPI::fromJsonValue(com_adobe_cq_com_adobe_cq_ui_commons, json[QString("com.adobe.cq.com.adobe.cq.ui.commons")]);
    
    ::OpenAPI::fromJsonValue(com_adobe_cq_com_adobe_cq_wcm_style, json[QString("com.adobe.cq.com.adobe.cq.wcm.style")]);
    
    ::OpenAPI::fromJsonValue(com_adobe_cq_cq_activitymap_integration, json[QString("com.adobe.cq.cq-activitymap-integration")]);
    
    ::OpenAPI::fromJsonValue(com_adobe_cq_cq_contexthub_commons, json[QString("com.adobe.cq.cq-contexthub-commons")]);
    
    ::OpenAPI::fromJsonValue(com_adobe_cq_cq_dtm, json[QString("com.adobe.cq.cq-dtm")]);
    
    ::OpenAPI::fromJsonValue(com_adobe_cq_cq_healthcheck, json[QString("com.adobe.cq.cq-healthcheck")]);
    
    ::OpenAPI::fromJsonValue(com_adobe_cq_cq_multisite_targeting, json[QString("com.adobe.cq.cq-multisite-targeting")]);
    
    ::OpenAPI::fromJsonValue(com_adobe_cq_cq_pre_upgrade_cleanup, json[QString("com.adobe.cq.cq-pre-upgrade-cleanup")]);
    
    ::OpenAPI::fromJsonValue(com_adobe_cq_cq_product_info_provider, json[QString("com.adobe.cq.cq-product-info-provider")]);
    
    ::OpenAPI::fromJsonValue(com_adobe_cq_cq_rest_sites, json[QString("com.adobe.cq.cq-rest-sites")]);
    
    ::OpenAPI::fromJsonValue(com_adobe_cq_cq_security_hc, json[QString("com.adobe.cq.cq-security-hc")]);
    
    ::OpenAPI::fromJsonValue(com_adobe_cq_dam_cq_dam_svg_handler, json[QString("com.adobe.cq.dam.cq-dam-svg-handler")]);
    
    ::OpenAPI::fromJsonValue(com_adobe_cq_dam_cq_scene7_imaging, json[QString("com.adobe.cq.dam.cq-scene7-imaging")]);
    
    ::OpenAPI::fromJsonValue(com_adobe_cq_dtm_reactor_core, json[QString("com.adobe.cq.dtm-reactor.core")]);
    
    ::OpenAPI::fromJsonValue(com_adobe_cq_dtm_reactor_ui, json[QString("com.adobe.cq.dtm-reactor.ui")]);
    
    ::OpenAPI::fromJsonValue(com_adobe_cq_exp_jspel_resolver, json[QString("com.adobe.cq.exp-jspel-resolver")]);
    
    ::OpenAPI::fromJsonValue(com_adobe_cq_inbox_cq_inbox, json[QString("com.adobe.cq.inbox.cq-inbox")]);
    
    ::OpenAPI::fromJsonValue(com_adobe_cq_json_schema_parser, json[QString("com.adobe.cq.json-schema-parser")]);
    
    ::OpenAPI::fromJsonValue(com_adobe_cq_media_cq_media_publishing_dps_fp_core, json[QString("com.adobe.cq.media.cq-media-publishing-dps-fp-core")]);
    
    ::OpenAPI::fromJsonValue(com_adobe_cq_mobile_cq_mobile_caas, json[QString("com.adobe.cq.mobile.cq-mobile-caas")]);
    
    ::OpenAPI::fromJsonValue(com_adobe_cq_mobile_cq_mobile_index_builder, json[QString("com.adobe.cq.mobile.cq-mobile-index-builder")]);
    
    ::OpenAPI::fromJsonValue(com_adobe_cq_mobile_cq_mobile_phonegap_build, json[QString("com.adobe.cq.mobile.cq-mobile-phonegap-build")]);
    
    ::OpenAPI::fromJsonValue(com_adobe_cq_myspell, json[QString("com.adobe.cq.myspell")]);
    
    ::OpenAPI::fromJsonValue(com_adobe_cq_sample_we_retail_core, json[QString("com.adobe.cq.sample.we.retail.core")]);
    
    ::OpenAPI::fromJsonValue(com_adobe_cq_screens_com_adobe_cq_screens_dcc, json[QString("com.adobe.cq.screens.com.adobe.cq.screens.dcc")]);
    
    ::OpenAPI::fromJsonValue(com_adobe_cq_screens_com_adobe_cq_screens_mq_core, json[QString("com.adobe.cq.screens.com.adobe.cq.screens.mq.core")]);
    
    ::OpenAPI::fromJsonValue(com_adobe_cq_social_cq_social_as_provider, json[QString("com.adobe.cq.social.cq-social-as-provider")]);
    
    ::OpenAPI::fromJsonValue(com_adobe_cq_social_cq_social_badging_basic_impl, json[QString("com.adobe.cq.social.cq-social-badging-basic-impl")]);
    
    ::OpenAPI::fromJsonValue(com_adobe_cq_social_cq_social_badging_impl, json[QString("com.adobe.cq.social.cq-social-badging-impl")]);
    
    ::OpenAPI::fromJsonValue(com_adobe_cq_social_cq_social_calendar_impl, json[QString("com.adobe.cq.social.cq-social-calendar-impl")]);
    
    ::OpenAPI::fromJsonValue(com_adobe_cq_social_cq_social_content_fragments_impl, json[QString("com.adobe.cq.social.cq-social-content-fragments-impl")]);
    
    ::OpenAPI::fromJsonValue(com_adobe_cq_social_cq_social_enablement_impl, json[QString("com.adobe.cq.social.cq-social-enablement-impl")]);
    
    ::OpenAPI::fromJsonValue(com_adobe_cq_social_cq_social_graph_impl, json[QString("com.adobe.cq.social.cq-social-graph-impl")]);
    
    ::OpenAPI::fromJsonValue(com_adobe_cq_social_cq_social_ideation_impl, json[QString("com.adobe.cq.social.cq-social-ideation-impl")]);
    
    ::OpenAPI::fromJsonValue(com_adobe_cq_social_cq_social_jcr_provider, json[QString("com.adobe.cq.social.cq-social-jcr-provider")]);
    
    ::OpenAPI::fromJsonValue(com_adobe_cq_social_cq_social_members_impl, json[QString("com.adobe.cq.social.cq-social-members-impl")]);
    
    ::OpenAPI::fromJsonValue(com_adobe_cq_social_cq_social_ms_provider, json[QString("com.adobe.cq.social.cq-social-ms-provider")]);
    
    ::OpenAPI::fromJsonValue(com_adobe_cq_social_cq_social_notifications_channels_web, json[QString("com.adobe.cq.social.cq-social-notifications-channels-web")]);
    
    ::OpenAPI::fromJsonValue(com_adobe_cq_social_cq_social_notifications_impl, json[QString("com.adobe.cq.social.cq-social-notifications-impl")]);
    
    ::OpenAPI::fromJsonValue(com_adobe_cq_social_cq_social_rdb_provider, json[QString("com.adobe.cq.social.cq-social-rdb-provider")]);
    
    ::OpenAPI::fromJsonValue(com_adobe_cq_social_cq_social_scf_impl, json[QString("com.adobe.cq.social.cq-social-scf-impl")]);
    
    ::OpenAPI::fromJsonValue(com_adobe_cq_social_cq_social_scoring_basic_impl, json[QString("com.adobe.cq.social.cq-social-scoring-basic-impl")]);
    
    ::OpenAPI::fromJsonValue(com_adobe_cq_social_cq_social_scoring_impl, json[QString("com.adobe.cq.social.cq-social-scoring-impl")]);
    
    ::OpenAPI::fromJsonValue(com_adobe_cq_social_cq_social_serviceusers_impl, json[QString("com.adobe.cq.social.cq-social-serviceusers-impl")]);
    
    ::OpenAPI::fromJsonValue(com_adobe_cq_social_cq_social_srp_impl, json[QString("com.adobe.cq.social.cq-social-srp-impl")]);
    
    ::OpenAPI::fromJsonValue(com_adobe_cq_social_cq_social_ugcbase_impl, json[QString("com.adobe.cq.social.cq-social-ugcbase-impl")]);
    
    ::OpenAPI::fromJsonValue(com_adobe_dam_cq_dam_cfm_impl, json[QString("com.adobe.dam.cq-dam-cfm-impl")]);
    
    ::OpenAPI::fromJsonValue(com_adobe_forms_foundation_forms_foundation_base, json[QString("com.adobe.forms.foundation-forms-foundation-base")]);
    
    ::OpenAPI::fromJsonValue(com_adobe_granite_apicontroller, json[QString("com.adobe.granite.apicontroller")]);
    
    ::OpenAPI::fromJsonValue(com_adobe_granite_asset_core, json[QString("com.adobe.granite.asset.core")]);
    
    ::OpenAPI::fromJsonValue(com_adobe_granite_auth_sso, json[QString("com.adobe.granite.auth.sso")]);
    
    ::OpenAPI::fromJsonValue(com_adobe_granite_bundles_hc_impl, json[QString("com.adobe.granite.bundles.hc.impl")]);
    
    ::OpenAPI::fromJsonValue(com_adobe_granite_compat_router, json[QString("com.adobe.granite.compat-router")]);
    
    ::OpenAPI::fromJsonValue(com_adobe_granite_conf, json[QString("com.adobe.granite.conf")]);
    
    ::OpenAPI::fromJsonValue(com_adobe_granite_conf_ui_core, json[QString("com.adobe.granite.conf.ui.core")]);
    
    ::OpenAPI::fromJsonValue(com_adobe_granite_cors, json[QString("com.adobe.granite.cors")]);
    
    ::OpenAPI::fromJsonValue(com_adobe_granite_crx_explorer, json[QString("com.adobe.granite.crx-explorer")]);
    
    ::OpenAPI::fromJsonValue(com_adobe_granite_crxde_lite, json[QString("com.adobe.granite.crxde-lite")]);
    
    ::OpenAPI::fromJsonValue(com_adobe_granite_crypto_config, json[QString("com.adobe.granite.crypto.config")]);
    
    ::OpenAPI::fromJsonValue(com_adobe_granite_crypto_extension, json[QString("com.adobe.granite.crypto.extension")]);
    
    ::OpenAPI::fromJsonValue(com_adobe_granite_crypto_file, json[QString("com.adobe.granite.crypto.file")]);
    
    ::OpenAPI::fromJsonValue(com_adobe_granite_crypto_jcr, json[QString("com.adobe.granite.crypto.jcr")]);
    
    ::OpenAPI::fromJsonValue(com_adobe_granite_csrf, json[QString("com.adobe.granite.csrf")]);
    
    ::OpenAPI::fromJsonValue(com_adobe_granite_distribution_core, json[QString("com.adobe.granite.distribution.core")]);
    
    ::OpenAPI::fromJsonValue(com_adobe_granite_dropwizard_metrics, json[QString("com.adobe.granite.dropwizard.metrics")]);
    
    ::OpenAPI::fromJsonValue(com_adobe_granite_frags_impl, json[QString("com.adobe.granite.frags.impl")]);
    
    ::OpenAPI::fromJsonValue(com_adobe_granite_gibson, json[QString("com.adobe.granite.gibson")]);
    
    ::OpenAPI::fromJsonValue(com_adobe_granite_infocollector, json[QString("com.adobe.granite.infocollector")]);
    
    ::OpenAPI::fromJsonValue(com_adobe_granite_installer_factory_packages, json[QString("com.adobe.granite.installer.factory.packages")]);
    
    ::OpenAPI::fromJsonValue(com_adobe_granite_jetty_ssl, json[QString("com.adobe.granite.jetty.ssl")]);
    
    ::OpenAPI::fromJsonValue(com_adobe_granite_jobs_async, json[QString("com.adobe.granite.jobs.async")]);
    
    ::OpenAPI::fromJsonValue(com_adobe_granite_maintenance_oak, json[QString("com.adobe.granite.maintenance.oak")]);
    
    ::OpenAPI::fromJsonValue(com_adobe_granite_monitoring_core, json[QString("com.adobe.granite.monitoring.core")]);
    
    ::OpenAPI::fromJsonValue(com_adobe_granite_queries, json[QString("com.adobe.granite.queries")]);
    
    ::OpenAPI::fromJsonValue(com_adobe_granite_replication_hc_impl, json[QString("com.adobe.granite.replication.hc.impl")]);
    
    ::OpenAPI::fromJsonValue(com_adobe_granite_repository_checker, json[QString("com.adobe.granite.repository.checker")]);
    
    ::OpenAPI::fromJsonValue(com_adobe_granite_repository_hc_impl, json[QString("com.adobe.granite.repository.hc.impl")]);
    
    ::OpenAPI::fromJsonValue(com_adobe_granite_rest_assets, json[QString("com.adobe.granite.rest.assets")]);
    
    ::OpenAPI::fromJsonValue(com_adobe_granite_security_ui, json[QString("com.adobe.granite.security.ui")]);
    
    ::OpenAPI::fromJsonValue(com_adobe_granite_startup, json[QString("com.adobe.granite.startup")]);
    
    ::OpenAPI::fromJsonValue(com_adobe_granite_tagsoup, json[QString("com.adobe.granite.tagsoup")]);
    
    ::OpenAPI::fromJsonValue(com_adobe_granite_taskmanagement_core, json[QString("com.adobe.granite.taskmanagement.core")]);
    
    ::OpenAPI::fromJsonValue(com_adobe_granite_taskmanagement_workflow, json[QString("com.adobe.granite.taskmanagement.workflow")]);
    
    ::OpenAPI::fromJsonValue(com_adobe_granite_ui_clientlibs_compiler_less, json[QString("com.adobe.granite.ui.clientlibs.compiler.less")]);
    
    ::OpenAPI::fromJsonValue(com_adobe_granite_ui_clientlibs_processor_gcc, json[QString("com.adobe.granite.ui.clientlibs.processor.gcc")]);
    
    ::OpenAPI::fromJsonValue(com_adobe_granite_webconsole_plugins, json[QString("com.adobe.granite.webconsole.plugins")]);
    
    ::OpenAPI::fromJsonValue(com_adobe_granite_workflow_console, json[QString("com.adobe.granite.workflow.console")]);
    
    ::OpenAPI::fromJsonValue(com_adobe_xmp_worker_files_native_fragment_linux, json[QString("com.adobe.xmp.worker.files.native.fragment.linux")]);
    
    ::OpenAPI::fromJsonValue(com_adobe_xmp_worker_files_native_fragment_macosx, json[QString("com.adobe.xmp.worker.files.native.fragment.macosx")]);
    
    ::OpenAPI::fromJsonValue(com_adobe_xmp_worker_files_native_fragment_win, json[QString("com.adobe.xmp.worker.files.native.fragment.win")]);
    
    ::OpenAPI::fromJsonValue(com_day_commons_osgi_wrapper_simple_jndi, json[QString("com.day.commons.osgi.wrapper.simple-jndi")]);
    
    ::OpenAPI::fromJsonValue(com_day_cq_cq_authhandler, json[QString("com.day.cq.cq-authhandler")]);
    
    ::OpenAPI::fromJsonValue(com_day_cq_cq_compat_configupdate, json[QString("com.day.cq.cq-compat-configupdate")]);
    
    ::OpenAPI::fromJsonValue(com_day_cq_cq_licensebranding, json[QString("com.day.cq.cq-licensebranding")]);
    
    ::OpenAPI::fromJsonValue(com_day_cq_cq_notifcation_impl, json[QString("com.day.cq.cq-notifcation-impl")]);
    
    ::OpenAPI::fromJsonValue(com_day_cq_cq_replication_audit, json[QString("com.day.cq.cq-replication-audit")]);
    
    ::OpenAPI::fromJsonValue(com_day_cq_cq_search_ext, json[QString("com.day.cq.cq-search-ext")]);
    
    ::OpenAPI::fromJsonValue(com_day_cq_dam_cq_dam_annotation_print, json[QString("com.day.cq.dam.cq-dam-annotation-print")]);
    
    ::OpenAPI::fromJsonValue(com_day_cq_dam_cq_dam_asset_usage, json[QString("com.day.cq.dam.cq-dam-asset-usage")]);
    
    ::OpenAPI::fromJsonValue(com_day_cq_dam_cq_dam_s7dam, json[QString("com.day.cq.dam.cq-dam-s7dam")]);
    
    ::OpenAPI::fromJsonValue(com_day_cq_dam_cq_dam_similaritysearch, json[QString("com.day.cq.dam.cq-dam-similaritysearch")]);
    
    ::OpenAPI::fromJsonValue(com_day_cq_dam_dam_webdav_support, json[QString("com.day.cq.dam.dam-webdav-support")]);
    
    ::OpenAPI::fromJsonValue(com_day_cq_pre_upgrade_tasks, json[QString("com.day.cq.pre-upgrade-tasks")]);
    
    ::OpenAPI::fromJsonValue(com_day_cq_replication_extensions, json[QString("com.day.cq.replication.extensions")]);
    
    ::OpenAPI::fromJsonValue(com_day_cq_wcm_cq_msm_core, json[QString("com.day.cq.wcm.cq-msm-core")]);
    
    ::OpenAPI::fromJsonValue(com_day_cq_wcm_cq_wcm_translation, json[QString("com.day.cq.wcm.cq-wcm-translation")]);
    
    ::OpenAPI::fromJsonValue(day_commons_jrawio, json[QString("day-commons-jrawio")]);
    
    ::OpenAPI::fromJsonValue(org_apache_aries_jmx_whiteboard, json[QString("org.apache.aries.jmx.whiteboard")]);
    
    ::OpenAPI::fromJsonValue(org_apache_felix_http_sslfilter, json[QString("org.apache.felix.http.sslfilter")]);
    
    ::OpenAPI::fromJsonValue(org_apache_felix_org_apache_felix_threaddump, json[QString("org.apache.felix.org.apache.felix.threaddump")]);
    
    ::OpenAPI::fromJsonValue(org_apache_felix_webconsole_plugins_ds, json[QString("org.apache.felix.webconsole.plugins.ds")]);
    
    ::OpenAPI::fromJsonValue(org_apache_felix_webconsole_plugins_event, json[QString("org.apache.felix.webconsole.plugins.event")]);
    
    ::OpenAPI::fromJsonValue(org_apache_felix_webconsole_plugins_memoryusage, json[QString("org.apache.felix.webconsole.plugins.memoryusage")]);
    
    ::OpenAPI::fromJsonValue(org_apache_felix_webconsole_plugins_packageadmin, json[QString("org.apache.felix.webconsole.plugins.packageadmin")]);
    
    ::OpenAPI::fromJsonValue(org_apache_jackrabbit_oak_auth_ldap, json[QString("org.apache.jackrabbit.oak-auth-ldap")]);
    
    ::OpenAPI::fromJsonValue(org_apache_jackrabbit_oak_segment_tar, json[QString("org.apache.jackrabbit.oak-segment-tar")]);
    
    ::OpenAPI::fromJsonValue(org_apache_jackrabbit_oak_solr_osgi, json[QString("org.apache.jackrabbit.oak-solr-osgi")]);
    
    ::OpenAPI::fromJsonValue(org_apache_sling_bundleresource_impl, json[QString("org.apache.sling.bundleresource.impl")]);
    
    ::OpenAPI::fromJsonValue(org_apache_sling_commons_fsclassloader, json[QString("org.apache.sling.commons.fsclassloader")]);
    
    ::OpenAPI::fromJsonValue(org_apache_sling_commons_log_webconsole, json[QString("org.apache.sling.commons.log.webconsole")]);
    
    ::OpenAPI::fromJsonValue(org_apache_sling_datasource, json[QString("org.apache.sling.datasource")]);
    
    ::OpenAPI::fromJsonValue(org_apache_sling_discovery_base, json[QString("org.apache.sling.discovery.base")]);
    
    ::OpenAPI::fromJsonValue(org_apache_sling_discovery_oak, json[QString("org.apache.sling.discovery.oak")]);
    
    ::OpenAPI::fromJsonValue(org_apache_sling_discovery_support, json[QString("org.apache.sling.discovery.support")]);
    
    ::OpenAPI::fromJsonValue(org_apache_sling_distribution_api, json[QString("org.apache.sling.distribution.api")]);
    
    ::OpenAPI::fromJsonValue(org_apache_sling_distribution_core, json[QString("org.apache.sling.distribution.core")]);
    
    ::OpenAPI::fromJsonValue(org_apache_sling_extensions_webconsolesecurityprovider, json[QString("org.apache.sling.extensions.webconsolesecurityprovider")]);
    
    ::OpenAPI::fromJsonValue(org_apache_sling_hc_webconsole, json[QString("org.apache.sling.hc.webconsole")]);
    
    ::OpenAPI::fromJsonValue(org_apache_sling_installer_console, json[QString("org.apache.sling.installer.console")]);
    
    ::OpenAPI::fromJsonValue(org_apache_sling_installer_provider_file, json[QString("org.apache.sling.installer.provider.file")]);
    
    ::OpenAPI::fromJsonValue(org_apache_sling_installer_provider_jcr, json[QString("org.apache.sling.installer.provider.jcr")]);
    
    ::OpenAPI::fromJsonValue(org_apache_sling_jcr_davex, json[QString("org.apache.sling.jcr.davex")]);
    
    ::OpenAPI::fromJsonValue(org_apache_sling_jcr_resourcesecurity, json[QString("org.apache.sling.jcr.resourcesecurity")]);
    
    ::OpenAPI::fromJsonValue(org_apache_sling_jmx_provider, json[QString("org.apache.sling.jmx.provider")]);
    
    ::OpenAPI::fromJsonValue(org_apache_sling_launchpad_installer, json[QString("org.apache.sling.launchpad.installer")]);
    
    ::OpenAPI::fromJsonValue(org_apache_sling_models_impl, json[QString("org.apache.sling.models.impl")]);
    
    ::OpenAPI::fromJsonValue(org_apache_sling_repoinit_parser, json[QString("org.apache.sling.repoinit.parser")]);
    
    ::OpenAPI::fromJsonValue(org_apache_sling_resource_inventory, json[QString("org.apache.sling.resource.inventory")]);
    
    ::OpenAPI::fromJsonValue(org_apache_sling_resourceresolver, json[QString("org.apache.sling.resourceresolver")]);
    
    ::OpenAPI::fromJsonValue(org_apache_sling_scripting_javascript, json[QString("org.apache.sling.scripting.javascript")]);
    
    ::OpenAPI::fromJsonValue(org_apache_sling_scripting_jst, json[QString("org.apache.sling.scripting.jst")]);
    
    ::OpenAPI::fromJsonValue(org_apache_sling_scripting_sightly_js_provider, json[QString("org.apache.sling.scripting.sightly.js.provider")]);
    
    ::OpenAPI::fromJsonValue(org_apache_sling_scripting_sightly_models_provider, json[QString("org.apache.sling.scripting.sightly.models.provider")]);
    
    ::OpenAPI::fromJsonValue(org_apache_sling_security, json[QString("org.apache.sling.security")]);
    
    ::OpenAPI::fromJsonValue(org_apache_sling_servlets_compat, json[QString("org.apache.sling.servlets.compat")]);
    
    ::OpenAPI::fromJsonValue(org_apache_sling_servlets_get, json[QString("org.apache.sling.servlets.get")]);
    
    ::OpenAPI::fromJsonValue(org_apache_sling_startupfilter_disabler, json[QString("org.apache.sling.startupfilter.disabler")]);
    
    ::OpenAPI::fromJsonValue(org_apache_sling_tracer, json[QString("org.apache.sling.tracer")]);
    
    ::OpenAPI::fromJsonValue(we_retail_client_app_core, json[QString("we.retail.client.app.core")]);
    
}

QString
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::asJson () const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::asJsonObject() const {
    QJsonObject obj;
	if(com_adobe_cq_cdn_cdn_rewriter.isSet()){
        obj.insert(QString("com.adobe.cq.cdn.cdn-rewriter"), ::OpenAPI::toJsonValue(com_adobe_cq_cdn_cdn_rewriter));
    }
	if(com_adobe_cq_cloud_config_components.isSet()){
        obj.insert(QString("com.adobe.cq.cloud-config.components"), ::OpenAPI::toJsonValue(com_adobe_cq_cloud_config_components));
    }
	if(com_adobe_cq_cloud_config_core.isSet()){
        obj.insert(QString("com.adobe.cq.cloud-config.core"), ::OpenAPI::toJsonValue(com_adobe_cq_cloud_config_core));
    }
	if(com_adobe_cq_cloud_config_ui.isSet()){
        obj.insert(QString("com.adobe.cq.cloud-config.ui"), ::OpenAPI::toJsonValue(com_adobe_cq_cloud_config_ui));
    }
	if(com_adobe_cq_com_adobe_cq_editor.isSet()){
        obj.insert(QString("com.adobe.cq.com.adobe.cq.editor"), ::OpenAPI::toJsonValue(com_adobe_cq_com_adobe_cq_editor));
    }
	if(com_adobe_cq_com_adobe_cq_projects_core.isSet()){
        obj.insert(QString("com.adobe.cq.com.adobe.cq.projects.core"), ::OpenAPI::toJsonValue(com_adobe_cq_com_adobe_cq_projects_core));
    }
	if(com_adobe_cq_com_adobe_cq_projects_wcm_core.isSet()){
        obj.insert(QString("com.adobe.cq.com.adobe.cq.projects.wcm.core"), ::OpenAPI::toJsonValue(com_adobe_cq_com_adobe_cq_projects_wcm_core));
    }
	if(com_adobe_cq_com_adobe_cq_ui_commons.isSet()){
        obj.insert(QString("com.adobe.cq.com.adobe.cq.ui.commons"), ::OpenAPI::toJsonValue(com_adobe_cq_com_adobe_cq_ui_commons));
    }
	if(com_adobe_cq_com_adobe_cq_wcm_style.isSet()){
        obj.insert(QString("com.adobe.cq.com.adobe.cq.wcm.style"), ::OpenAPI::toJsonValue(com_adobe_cq_com_adobe_cq_wcm_style));
    }
	if(com_adobe_cq_cq_activitymap_integration.isSet()){
        obj.insert(QString("com.adobe.cq.cq-activitymap-integration"), ::OpenAPI::toJsonValue(com_adobe_cq_cq_activitymap_integration));
    }
	if(com_adobe_cq_cq_contexthub_commons.isSet()){
        obj.insert(QString("com.adobe.cq.cq-contexthub-commons"), ::OpenAPI::toJsonValue(com_adobe_cq_cq_contexthub_commons));
    }
	if(com_adobe_cq_cq_dtm.isSet()){
        obj.insert(QString("com.adobe.cq.cq-dtm"), ::OpenAPI::toJsonValue(com_adobe_cq_cq_dtm));
    }
	if(com_adobe_cq_cq_healthcheck.isSet()){
        obj.insert(QString("com.adobe.cq.cq-healthcheck"), ::OpenAPI::toJsonValue(com_adobe_cq_cq_healthcheck));
    }
	if(com_adobe_cq_cq_multisite_targeting.isSet()){
        obj.insert(QString("com.adobe.cq.cq-multisite-targeting"), ::OpenAPI::toJsonValue(com_adobe_cq_cq_multisite_targeting));
    }
	if(com_adobe_cq_cq_pre_upgrade_cleanup.isSet()){
        obj.insert(QString("com.adobe.cq.cq-pre-upgrade-cleanup"), ::OpenAPI::toJsonValue(com_adobe_cq_cq_pre_upgrade_cleanup));
    }
	if(com_adobe_cq_cq_product_info_provider.isSet()){
        obj.insert(QString("com.adobe.cq.cq-product-info-provider"), ::OpenAPI::toJsonValue(com_adobe_cq_cq_product_info_provider));
    }
	if(com_adobe_cq_cq_rest_sites.isSet()){
        obj.insert(QString("com.adobe.cq.cq-rest-sites"), ::OpenAPI::toJsonValue(com_adobe_cq_cq_rest_sites));
    }
	if(com_adobe_cq_cq_security_hc.isSet()){
        obj.insert(QString("com.adobe.cq.cq-security-hc"), ::OpenAPI::toJsonValue(com_adobe_cq_cq_security_hc));
    }
	if(com_adobe_cq_dam_cq_dam_svg_handler.isSet()){
        obj.insert(QString("com.adobe.cq.dam.cq-dam-svg-handler"), ::OpenAPI::toJsonValue(com_adobe_cq_dam_cq_dam_svg_handler));
    }
	if(com_adobe_cq_dam_cq_scene7_imaging.isSet()){
        obj.insert(QString("com.adobe.cq.dam.cq-scene7-imaging"), ::OpenAPI::toJsonValue(com_adobe_cq_dam_cq_scene7_imaging));
    }
	if(com_adobe_cq_dtm_reactor_core.isSet()){
        obj.insert(QString("com.adobe.cq.dtm-reactor.core"), ::OpenAPI::toJsonValue(com_adobe_cq_dtm_reactor_core));
    }
	if(com_adobe_cq_dtm_reactor_ui.isSet()){
        obj.insert(QString("com.adobe.cq.dtm-reactor.ui"), ::OpenAPI::toJsonValue(com_adobe_cq_dtm_reactor_ui));
    }
	if(com_adobe_cq_exp_jspel_resolver.isSet()){
        obj.insert(QString("com.adobe.cq.exp-jspel-resolver"), ::OpenAPI::toJsonValue(com_adobe_cq_exp_jspel_resolver));
    }
	if(com_adobe_cq_inbox_cq_inbox.isSet()){
        obj.insert(QString("com.adobe.cq.inbox.cq-inbox"), ::OpenAPI::toJsonValue(com_adobe_cq_inbox_cq_inbox));
    }
	if(com_adobe_cq_json_schema_parser.isSet()){
        obj.insert(QString("com.adobe.cq.json-schema-parser"), ::OpenAPI::toJsonValue(com_adobe_cq_json_schema_parser));
    }
	if(com_adobe_cq_media_cq_media_publishing_dps_fp_core.isSet()){
        obj.insert(QString("com.adobe.cq.media.cq-media-publishing-dps-fp-core"), ::OpenAPI::toJsonValue(com_adobe_cq_media_cq_media_publishing_dps_fp_core));
    }
	if(com_adobe_cq_mobile_cq_mobile_caas.isSet()){
        obj.insert(QString("com.adobe.cq.mobile.cq-mobile-caas"), ::OpenAPI::toJsonValue(com_adobe_cq_mobile_cq_mobile_caas));
    }
	if(com_adobe_cq_mobile_cq_mobile_index_builder.isSet()){
        obj.insert(QString("com.adobe.cq.mobile.cq-mobile-index-builder"), ::OpenAPI::toJsonValue(com_adobe_cq_mobile_cq_mobile_index_builder));
    }
	if(com_adobe_cq_mobile_cq_mobile_phonegap_build.isSet()){
        obj.insert(QString("com.adobe.cq.mobile.cq-mobile-phonegap-build"), ::OpenAPI::toJsonValue(com_adobe_cq_mobile_cq_mobile_phonegap_build));
    }
	if(com_adobe_cq_myspell.isSet()){
        obj.insert(QString("com.adobe.cq.myspell"), ::OpenAPI::toJsonValue(com_adobe_cq_myspell));
    }
	if(com_adobe_cq_sample_we_retail_core.isSet()){
        obj.insert(QString("com.adobe.cq.sample.we.retail.core"), ::OpenAPI::toJsonValue(com_adobe_cq_sample_we_retail_core));
    }
	if(com_adobe_cq_screens_com_adobe_cq_screens_dcc.isSet()){
        obj.insert(QString("com.adobe.cq.screens.com.adobe.cq.screens.dcc"), ::OpenAPI::toJsonValue(com_adobe_cq_screens_com_adobe_cq_screens_dcc));
    }
	if(com_adobe_cq_screens_com_adobe_cq_screens_mq_core.isSet()){
        obj.insert(QString("com.adobe.cq.screens.com.adobe.cq.screens.mq.core"), ::OpenAPI::toJsonValue(com_adobe_cq_screens_com_adobe_cq_screens_mq_core));
    }
	if(com_adobe_cq_social_cq_social_as_provider.isSet()){
        obj.insert(QString("com.adobe.cq.social.cq-social-as-provider"), ::OpenAPI::toJsonValue(com_adobe_cq_social_cq_social_as_provider));
    }
	if(com_adobe_cq_social_cq_social_badging_basic_impl.isSet()){
        obj.insert(QString("com.adobe.cq.social.cq-social-badging-basic-impl"), ::OpenAPI::toJsonValue(com_adobe_cq_social_cq_social_badging_basic_impl));
    }
	if(com_adobe_cq_social_cq_social_badging_impl.isSet()){
        obj.insert(QString("com.adobe.cq.social.cq-social-badging-impl"), ::OpenAPI::toJsonValue(com_adobe_cq_social_cq_social_badging_impl));
    }
	if(com_adobe_cq_social_cq_social_calendar_impl.isSet()){
        obj.insert(QString("com.adobe.cq.social.cq-social-calendar-impl"), ::OpenAPI::toJsonValue(com_adobe_cq_social_cq_social_calendar_impl));
    }
	if(com_adobe_cq_social_cq_social_content_fragments_impl.isSet()){
        obj.insert(QString("com.adobe.cq.social.cq-social-content-fragments-impl"), ::OpenAPI::toJsonValue(com_adobe_cq_social_cq_social_content_fragments_impl));
    }
	if(com_adobe_cq_social_cq_social_enablement_impl.isSet()){
        obj.insert(QString("com.adobe.cq.social.cq-social-enablement-impl"), ::OpenAPI::toJsonValue(com_adobe_cq_social_cq_social_enablement_impl));
    }
	if(com_adobe_cq_social_cq_social_graph_impl.isSet()){
        obj.insert(QString("com.adobe.cq.social.cq-social-graph-impl"), ::OpenAPI::toJsonValue(com_adobe_cq_social_cq_social_graph_impl));
    }
	if(com_adobe_cq_social_cq_social_ideation_impl.isSet()){
        obj.insert(QString("com.adobe.cq.social.cq-social-ideation-impl"), ::OpenAPI::toJsonValue(com_adobe_cq_social_cq_social_ideation_impl));
    }
	if(com_adobe_cq_social_cq_social_jcr_provider.isSet()){
        obj.insert(QString("com.adobe.cq.social.cq-social-jcr-provider"), ::OpenAPI::toJsonValue(com_adobe_cq_social_cq_social_jcr_provider));
    }
	if(com_adobe_cq_social_cq_social_members_impl.isSet()){
        obj.insert(QString("com.adobe.cq.social.cq-social-members-impl"), ::OpenAPI::toJsonValue(com_adobe_cq_social_cq_social_members_impl));
    }
	if(com_adobe_cq_social_cq_social_ms_provider.isSet()){
        obj.insert(QString("com.adobe.cq.social.cq-social-ms-provider"), ::OpenAPI::toJsonValue(com_adobe_cq_social_cq_social_ms_provider));
    }
	if(com_adobe_cq_social_cq_social_notifications_channels_web.isSet()){
        obj.insert(QString("com.adobe.cq.social.cq-social-notifications-channels-web"), ::OpenAPI::toJsonValue(com_adobe_cq_social_cq_social_notifications_channels_web));
    }
	if(com_adobe_cq_social_cq_social_notifications_impl.isSet()){
        obj.insert(QString("com.adobe.cq.social.cq-social-notifications-impl"), ::OpenAPI::toJsonValue(com_adobe_cq_social_cq_social_notifications_impl));
    }
	if(com_adobe_cq_social_cq_social_rdb_provider.isSet()){
        obj.insert(QString("com.adobe.cq.social.cq-social-rdb-provider"), ::OpenAPI::toJsonValue(com_adobe_cq_social_cq_social_rdb_provider));
    }
	if(com_adobe_cq_social_cq_social_scf_impl.isSet()){
        obj.insert(QString("com.adobe.cq.social.cq-social-scf-impl"), ::OpenAPI::toJsonValue(com_adobe_cq_social_cq_social_scf_impl));
    }
	if(com_adobe_cq_social_cq_social_scoring_basic_impl.isSet()){
        obj.insert(QString("com.adobe.cq.social.cq-social-scoring-basic-impl"), ::OpenAPI::toJsonValue(com_adobe_cq_social_cq_social_scoring_basic_impl));
    }
	if(com_adobe_cq_social_cq_social_scoring_impl.isSet()){
        obj.insert(QString("com.adobe.cq.social.cq-social-scoring-impl"), ::OpenAPI::toJsonValue(com_adobe_cq_social_cq_social_scoring_impl));
    }
	if(com_adobe_cq_social_cq_social_serviceusers_impl.isSet()){
        obj.insert(QString("com.adobe.cq.social.cq-social-serviceusers-impl"), ::OpenAPI::toJsonValue(com_adobe_cq_social_cq_social_serviceusers_impl));
    }
	if(com_adobe_cq_social_cq_social_srp_impl.isSet()){
        obj.insert(QString("com.adobe.cq.social.cq-social-srp-impl"), ::OpenAPI::toJsonValue(com_adobe_cq_social_cq_social_srp_impl));
    }
	if(com_adobe_cq_social_cq_social_ugcbase_impl.isSet()){
        obj.insert(QString("com.adobe.cq.social.cq-social-ugcbase-impl"), ::OpenAPI::toJsonValue(com_adobe_cq_social_cq_social_ugcbase_impl));
    }
	if(com_adobe_dam_cq_dam_cfm_impl.isSet()){
        obj.insert(QString("com.adobe.dam.cq-dam-cfm-impl"), ::OpenAPI::toJsonValue(com_adobe_dam_cq_dam_cfm_impl));
    }
	if(com_adobe_forms_foundation_forms_foundation_base.isSet()){
        obj.insert(QString("com.adobe.forms.foundation-forms-foundation-base"), ::OpenAPI::toJsonValue(com_adobe_forms_foundation_forms_foundation_base));
    }
	if(com_adobe_granite_apicontroller.isSet()){
        obj.insert(QString("com.adobe.granite.apicontroller"), ::OpenAPI::toJsonValue(com_adobe_granite_apicontroller));
    }
	if(com_adobe_granite_asset_core.isSet()){
        obj.insert(QString("com.adobe.granite.asset.core"), ::OpenAPI::toJsonValue(com_adobe_granite_asset_core));
    }
	if(com_adobe_granite_auth_sso.isSet()){
        obj.insert(QString("com.adobe.granite.auth.sso"), ::OpenAPI::toJsonValue(com_adobe_granite_auth_sso));
    }
	if(com_adobe_granite_bundles_hc_impl.isSet()){
        obj.insert(QString("com.adobe.granite.bundles.hc.impl"), ::OpenAPI::toJsonValue(com_adobe_granite_bundles_hc_impl));
    }
	if(com_adobe_granite_compat_router.isSet()){
        obj.insert(QString("com.adobe.granite.compat-router"), ::OpenAPI::toJsonValue(com_adobe_granite_compat_router));
    }
	if(com_adobe_granite_conf.isSet()){
        obj.insert(QString("com.adobe.granite.conf"), ::OpenAPI::toJsonValue(com_adobe_granite_conf));
    }
	if(com_adobe_granite_conf_ui_core.isSet()){
        obj.insert(QString("com.adobe.granite.conf.ui.core"), ::OpenAPI::toJsonValue(com_adobe_granite_conf_ui_core));
    }
	if(com_adobe_granite_cors.isSet()){
        obj.insert(QString("com.adobe.granite.cors"), ::OpenAPI::toJsonValue(com_adobe_granite_cors));
    }
	if(com_adobe_granite_crx_explorer.isSet()){
        obj.insert(QString("com.adobe.granite.crx-explorer"), ::OpenAPI::toJsonValue(com_adobe_granite_crx_explorer));
    }
	if(com_adobe_granite_crxde_lite.isSet()){
        obj.insert(QString("com.adobe.granite.crxde-lite"), ::OpenAPI::toJsonValue(com_adobe_granite_crxde_lite));
    }
	if(com_adobe_granite_crypto_config.isSet()){
        obj.insert(QString("com.adobe.granite.crypto.config"), ::OpenAPI::toJsonValue(com_adobe_granite_crypto_config));
    }
	if(com_adobe_granite_crypto_extension.isSet()){
        obj.insert(QString("com.adobe.granite.crypto.extension"), ::OpenAPI::toJsonValue(com_adobe_granite_crypto_extension));
    }
	if(com_adobe_granite_crypto_file.isSet()){
        obj.insert(QString("com.adobe.granite.crypto.file"), ::OpenAPI::toJsonValue(com_adobe_granite_crypto_file));
    }
	if(com_adobe_granite_crypto_jcr.isSet()){
        obj.insert(QString("com.adobe.granite.crypto.jcr"), ::OpenAPI::toJsonValue(com_adobe_granite_crypto_jcr));
    }
	if(com_adobe_granite_csrf.isSet()){
        obj.insert(QString("com.adobe.granite.csrf"), ::OpenAPI::toJsonValue(com_adobe_granite_csrf));
    }
	if(com_adobe_granite_distribution_core.isSet()){
        obj.insert(QString("com.adobe.granite.distribution.core"), ::OpenAPI::toJsonValue(com_adobe_granite_distribution_core));
    }
	if(com_adobe_granite_dropwizard_metrics.isSet()){
        obj.insert(QString("com.adobe.granite.dropwizard.metrics"), ::OpenAPI::toJsonValue(com_adobe_granite_dropwizard_metrics));
    }
	if(com_adobe_granite_frags_impl.isSet()){
        obj.insert(QString("com.adobe.granite.frags.impl"), ::OpenAPI::toJsonValue(com_adobe_granite_frags_impl));
    }
	if(com_adobe_granite_gibson.isSet()){
        obj.insert(QString("com.adobe.granite.gibson"), ::OpenAPI::toJsonValue(com_adobe_granite_gibson));
    }
	if(com_adobe_granite_infocollector.isSet()){
        obj.insert(QString("com.adobe.granite.infocollector"), ::OpenAPI::toJsonValue(com_adobe_granite_infocollector));
    }
	if(com_adobe_granite_installer_factory_packages.isSet()){
        obj.insert(QString("com.adobe.granite.installer.factory.packages"), ::OpenAPI::toJsonValue(com_adobe_granite_installer_factory_packages));
    }
	if(com_adobe_granite_jetty_ssl.isSet()){
        obj.insert(QString("com.adobe.granite.jetty.ssl"), ::OpenAPI::toJsonValue(com_adobe_granite_jetty_ssl));
    }
	if(com_adobe_granite_jobs_async.isSet()){
        obj.insert(QString("com.adobe.granite.jobs.async"), ::OpenAPI::toJsonValue(com_adobe_granite_jobs_async));
    }
	if(com_adobe_granite_maintenance_oak.isSet()){
        obj.insert(QString("com.adobe.granite.maintenance.oak"), ::OpenAPI::toJsonValue(com_adobe_granite_maintenance_oak));
    }
	if(com_adobe_granite_monitoring_core.isSet()){
        obj.insert(QString("com.adobe.granite.monitoring.core"), ::OpenAPI::toJsonValue(com_adobe_granite_monitoring_core));
    }
	if(com_adobe_granite_queries.isSet()){
        obj.insert(QString("com.adobe.granite.queries"), ::OpenAPI::toJsonValue(com_adobe_granite_queries));
    }
	if(com_adobe_granite_replication_hc_impl.isSet()){
        obj.insert(QString("com.adobe.granite.replication.hc.impl"), ::OpenAPI::toJsonValue(com_adobe_granite_replication_hc_impl));
    }
	if(com_adobe_granite_repository_checker.isSet()){
        obj.insert(QString("com.adobe.granite.repository.checker"), ::OpenAPI::toJsonValue(com_adobe_granite_repository_checker));
    }
	if(com_adobe_granite_repository_hc_impl.isSet()){
        obj.insert(QString("com.adobe.granite.repository.hc.impl"), ::OpenAPI::toJsonValue(com_adobe_granite_repository_hc_impl));
    }
	if(com_adobe_granite_rest_assets.isSet()){
        obj.insert(QString("com.adobe.granite.rest.assets"), ::OpenAPI::toJsonValue(com_adobe_granite_rest_assets));
    }
	if(com_adobe_granite_security_ui.isSet()){
        obj.insert(QString("com.adobe.granite.security.ui"), ::OpenAPI::toJsonValue(com_adobe_granite_security_ui));
    }
	if(com_adobe_granite_startup.isSet()){
        obj.insert(QString("com.adobe.granite.startup"), ::OpenAPI::toJsonValue(com_adobe_granite_startup));
    }
	if(com_adobe_granite_tagsoup.isSet()){
        obj.insert(QString("com.adobe.granite.tagsoup"), ::OpenAPI::toJsonValue(com_adobe_granite_tagsoup));
    }
	if(com_adobe_granite_taskmanagement_core.isSet()){
        obj.insert(QString("com.adobe.granite.taskmanagement.core"), ::OpenAPI::toJsonValue(com_adobe_granite_taskmanagement_core));
    }
	if(com_adobe_granite_taskmanagement_workflow.isSet()){
        obj.insert(QString("com.adobe.granite.taskmanagement.workflow"), ::OpenAPI::toJsonValue(com_adobe_granite_taskmanagement_workflow));
    }
	if(com_adobe_granite_ui_clientlibs_compiler_less.isSet()){
        obj.insert(QString("com.adobe.granite.ui.clientlibs.compiler.less"), ::OpenAPI::toJsonValue(com_adobe_granite_ui_clientlibs_compiler_less));
    }
	if(com_adobe_granite_ui_clientlibs_processor_gcc.isSet()){
        obj.insert(QString("com.adobe.granite.ui.clientlibs.processor.gcc"), ::OpenAPI::toJsonValue(com_adobe_granite_ui_clientlibs_processor_gcc));
    }
	if(com_adobe_granite_webconsole_plugins.isSet()){
        obj.insert(QString("com.adobe.granite.webconsole.plugins"), ::OpenAPI::toJsonValue(com_adobe_granite_webconsole_plugins));
    }
	if(com_adobe_granite_workflow_console.isSet()){
        obj.insert(QString("com.adobe.granite.workflow.console"), ::OpenAPI::toJsonValue(com_adobe_granite_workflow_console));
    }
	if(com_adobe_xmp_worker_files_native_fragment_linux.isSet()){
        obj.insert(QString("com.adobe.xmp.worker.files.native.fragment.linux"), ::OpenAPI::toJsonValue(com_adobe_xmp_worker_files_native_fragment_linux));
    }
	if(com_adobe_xmp_worker_files_native_fragment_macosx.isSet()){
        obj.insert(QString("com.adobe.xmp.worker.files.native.fragment.macosx"), ::OpenAPI::toJsonValue(com_adobe_xmp_worker_files_native_fragment_macosx));
    }
	if(com_adobe_xmp_worker_files_native_fragment_win.isSet()){
        obj.insert(QString("com.adobe.xmp.worker.files.native.fragment.win"), ::OpenAPI::toJsonValue(com_adobe_xmp_worker_files_native_fragment_win));
    }
	if(com_day_commons_osgi_wrapper_simple_jndi.isSet()){
        obj.insert(QString("com.day.commons.osgi.wrapper.simple-jndi"), ::OpenAPI::toJsonValue(com_day_commons_osgi_wrapper_simple_jndi));
    }
	if(com_day_cq_cq_authhandler.isSet()){
        obj.insert(QString("com.day.cq.cq-authhandler"), ::OpenAPI::toJsonValue(com_day_cq_cq_authhandler));
    }
	if(com_day_cq_cq_compat_configupdate.isSet()){
        obj.insert(QString("com.day.cq.cq-compat-configupdate"), ::OpenAPI::toJsonValue(com_day_cq_cq_compat_configupdate));
    }
	if(com_day_cq_cq_licensebranding.isSet()){
        obj.insert(QString("com.day.cq.cq-licensebranding"), ::OpenAPI::toJsonValue(com_day_cq_cq_licensebranding));
    }
	if(com_day_cq_cq_notifcation_impl.isSet()){
        obj.insert(QString("com.day.cq.cq-notifcation-impl"), ::OpenAPI::toJsonValue(com_day_cq_cq_notifcation_impl));
    }
	if(com_day_cq_cq_replication_audit.isSet()){
        obj.insert(QString("com.day.cq.cq-replication-audit"), ::OpenAPI::toJsonValue(com_day_cq_cq_replication_audit));
    }
	if(com_day_cq_cq_search_ext.isSet()){
        obj.insert(QString("com.day.cq.cq-search-ext"), ::OpenAPI::toJsonValue(com_day_cq_cq_search_ext));
    }
	if(com_day_cq_dam_cq_dam_annotation_print.isSet()){
        obj.insert(QString("com.day.cq.dam.cq-dam-annotation-print"), ::OpenAPI::toJsonValue(com_day_cq_dam_cq_dam_annotation_print));
    }
	if(com_day_cq_dam_cq_dam_asset_usage.isSet()){
        obj.insert(QString("com.day.cq.dam.cq-dam-asset-usage"), ::OpenAPI::toJsonValue(com_day_cq_dam_cq_dam_asset_usage));
    }
	if(com_day_cq_dam_cq_dam_s7dam.isSet()){
        obj.insert(QString("com.day.cq.dam.cq-dam-s7dam"), ::OpenAPI::toJsonValue(com_day_cq_dam_cq_dam_s7dam));
    }
	if(com_day_cq_dam_cq_dam_similaritysearch.isSet()){
        obj.insert(QString("com.day.cq.dam.cq-dam-similaritysearch"), ::OpenAPI::toJsonValue(com_day_cq_dam_cq_dam_similaritysearch));
    }
	if(com_day_cq_dam_dam_webdav_support.isSet()){
        obj.insert(QString("com.day.cq.dam.dam-webdav-support"), ::OpenAPI::toJsonValue(com_day_cq_dam_dam_webdav_support));
    }
	if(com_day_cq_pre_upgrade_tasks.isSet()){
        obj.insert(QString("com.day.cq.pre-upgrade-tasks"), ::OpenAPI::toJsonValue(com_day_cq_pre_upgrade_tasks));
    }
	if(com_day_cq_replication_extensions.isSet()){
        obj.insert(QString("com.day.cq.replication.extensions"), ::OpenAPI::toJsonValue(com_day_cq_replication_extensions));
    }
	if(com_day_cq_wcm_cq_msm_core.isSet()){
        obj.insert(QString("com.day.cq.wcm.cq-msm-core"), ::OpenAPI::toJsonValue(com_day_cq_wcm_cq_msm_core));
    }
	if(com_day_cq_wcm_cq_wcm_translation.isSet()){
        obj.insert(QString("com.day.cq.wcm.cq-wcm-translation"), ::OpenAPI::toJsonValue(com_day_cq_wcm_cq_wcm_translation));
    }
	if(day_commons_jrawio.isSet()){
        obj.insert(QString("day-commons-jrawio"), ::OpenAPI::toJsonValue(day_commons_jrawio));
    }
	if(org_apache_aries_jmx_whiteboard.isSet()){
        obj.insert(QString("org.apache.aries.jmx.whiteboard"), ::OpenAPI::toJsonValue(org_apache_aries_jmx_whiteboard));
    }
	if(org_apache_felix_http_sslfilter.isSet()){
        obj.insert(QString("org.apache.felix.http.sslfilter"), ::OpenAPI::toJsonValue(org_apache_felix_http_sslfilter));
    }
	if(org_apache_felix_org_apache_felix_threaddump.isSet()){
        obj.insert(QString("org.apache.felix.org.apache.felix.threaddump"), ::OpenAPI::toJsonValue(org_apache_felix_org_apache_felix_threaddump));
    }
	if(org_apache_felix_webconsole_plugins_ds.isSet()){
        obj.insert(QString("org.apache.felix.webconsole.plugins.ds"), ::OpenAPI::toJsonValue(org_apache_felix_webconsole_plugins_ds));
    }
	if(org_apache_felix_webconsole_plugins_event.isSet()){
        obj.insert(QString("org.apache.felix.webconsole.plugins.event"), ::OpenAPI::toJsonValue(org_apache_felix_webconsole_plugins_event));
    }
	if(org_apache_felix_webconsole_plugins_memoryusage.isSet()){
        obj.insert(QString("org.apache.felix.webconsole.plugins.memoryusage"), ::OpenAPI::toJsonValue(org_apache_felix_webconsole_plugins_memoryusage));
    }
	if(org_apache_felix_webconsole_plugins_packageadmin.isSet()){
        obj.insert(QString("org.apache.felix.webconsole.plugins.packageadmin"), ::OpenAPI::toJsonValue(org_apache_felix_webconsole_plugins_packageadmin));
    }
	if(org_apache_jackrabbit_oak_auth_ldap.isSet()){
        obj.insert(QString("org.apache.jackrabbit.oak-auth-ldap"), ::OpenAPI::toJsonValue(org_apache_jackrabbit_oak_auth_ldap));
    }
	if(org_apache_jackrabbit_oak_segment_tar.isSet()){
        obj.insert(QString("org.apache.jackrabbit.oak-segment-tar"), ::OpenAPI::toJsonValue(org_apache_jackrabbit_oak_segment_tar));
    }
	if(org_apache_jackrabbit_oak_solr_osgi.isSet()){
        obj.insert(QString("org.apache.jackrabbit.oak-solr-osgi"), ::OpenAPI::toJsonValue(org_apache_jackrabbit_oak_solr_osgi));
    }
	if(org_apache_sling_bundleresource_impl.isSet()){
        obj.insert(QString("org.apache.sling.bundleresource.impl"), ::OpenAPI::toJsonValue(org_apache_sling_bundleresource_impl));
    }
	if(org_apache_sling_commons_fsclassloader.isSet()){
        obj.insert(QString("org.apache.sling.commons.fsclassloader"), ::OpenAPI::toJsonValue(org_apache_sling_commons_fsclassloader));
    }
	if(org_apache_sling_commons_log_webconsole.isSet()){
        obj.insert(QString("org.apache.sling.commons.log.webconsole"), ::OpenAPI::toJsonValue(org_apache_sling_commons_log_webconsole));
    }
	if(org_apache_sling_datasource.isSet()){
        obj.insert(QString("org.apache.sling.datasource"), ::OpenAPI::toJsonValue(org_apache_sling_datasource));
    }
	if(org_apache_sling_discovery_base.isSet()){
        obj.insert(QString("org.apache.sling.discovery.base"), ::OpenAPI::toJsonValue(org_apache_sling_discovery_base));
    }
	if(org_apache_sling_discovery_oak.isSet()){
        obj.insert(QString("org.apache.sling.discovery.oak"), ::OpenAPI::toJsonValue(org_apache_sling_discovery_oak));
    }
	if(org_apache_sling_discovery_support.isSet()){
        obj.insert(QString("org.apache.sling.discovery.support"), ::OpenAPI::toJsonValue(org_apache_sling_discovery_support));
    }
	if(org_apache_sling_distribution_api.isSet()){
        obj.insert(QString("org.apache.sling.distribution.api"), ::OpenAPI::toJsonValue(org_apache_sling_distribution_api));
    }
	if(org_apache_sling_distribution_core.isSet()){
        obj.insert(QString("org.apache.sling.distribution.core"), ::OpenAPI::toJsonValue(org_apache_sling_distribution_core));
    }
	if(org_apache_sling_extensions_webconsolesecurityprovider.isSet()){
        obj.insert(QString("org.apache.sling.extensions.webconsolesecurityprovider"), ::OpenAPI::toJsonValue(org_apache_sling_extensions_webconsolesecurityprovider));
    }
	if(org_apache_sling_hc_webconsole.isSet()){
        obj.insert(QString("org.apache.sling.hc.webconsole"), ::OpenAPI::toJsonValue(org_apache_sling_hc_webconsole));
    }
	if(org_apache_sling_installer_console.isSet()){
        obj.insert(QString("org.apache.sling.installer.console"), ::OpenAPI::toJsonValue(org_apache_sling_installer_console));
    }
	if(org_apache_sling_installer_provider_file.isSet()){
        obj.insert(QString("org.apache.sling.installer.provider.file"), ::OpenAPI::toJsonValue(org_apache_sling_installer_provider_file));
    }
	if(org_apache_sling_installer_provider_jcr.isSet()){
        obj.insert(QString("org.apache.sling.installer.provider.jcr"), ::OpenAPI::toJsonValue(org_apache_sling_installer_provider_jcr));
    }
	if(org_apache_sling_jcr_davex.isSet()){
        obj.insert(QString("org.apache.sling.jcr.davex"), ::OpenAPI::toJsonValue(org_apache_sling_jcr_davex));
    }
	if(org_apache_sling_jcr_resourcesecurity.isSet()){
        obj.insert(QString("org.apache.sling.jcr.resourcesecurity"), ::OpenAPI::toJsonValue(org_apache_sling_jcr_resourcesecurity));
    }
	if(org_apache_sling_jmx_provider.isSet()){
        obj.insert(QString("org.apache.sling.jmx.provider"), ::OpenAPI::toJsonValue(org_apache_sling_jmx_provider));
    }
	if(org_apache_sling_launchpad_installer.isSet()){
        obj.insert(QString("org.apache.sling.launchpad.installer"), ::OpenAPI::toJsonValue(org_apache_sling_launchpad_installer));
    }
	if(org_apache_sling_models_impl.isSet()){
        obj.insert(QString("org.apache.sling.models.impl"), ::OpenAPI::toJsonValue(org_apache_sling_models_impl));
    }
	if(org_apache_sling_repoinit_parser.isSet()){
        obj.insert(QString("org.apache.sling.repoinit.parser"), ::OpenAPI::toJsonValue(org_apache_sling_repoinit_parser));
    }
	if(org_apache_sling_resource_inventory.isSet()){
        obj.insert(QString("org.apache.sling.resource.inventory"), ::OpenAPI::toJsonValue(org_apache_sling_resource_inventory));
    }
	if(org_apache_sling_resourceresolver.isSet()){
        obj.insert(QString("org.apache.sling.resourceresolver"), ::OpenAPI::toJsonValue(org_apache_sling_resourceresolver));
    }
	if(org_apache_sling_scripting_javascript.isSet()){
        obj.insert(QString("org.apache.sling.scripting.javascript"), ::OpenAPI::toJsonValue(org_apache_sling_scripting_javascript));
    }
	if(org_apache_sling_scripting_jst.isSet()){
        obj.insert(QString("org.apache.sling.scripting.jst"), ::OpenAPI::toJsonValue(org_apache_sling_scripting_jst));
    }
	if(org_apache_sling_scripting_sightly_js_provider.isSet()){
        obj.insert(QString("org.apache.sling.scripting.sightly.js.provider"), ::OpenAPI::toJsonValue(org_apache_sling_scripting_sightly_js_provider));
    }
	if(org_apache_sling_scripting_sightly_models_provider.isSet()){
        obj.insert(QString("org.apache.sling.scripting.sightly.models.provider"), ::OpenAPI::toJsonValue(org_apache_sling_scripting_sightly_models_provider));
    }
	if(org_apache_sling_security.isSet()){
        obj.insert(QString("org.apache.sling.security"), ::OpenAPI::toJsonValue(org_apache_sling_security));
    }
	if(org_apache_sling_servlets_compat.isSet()){
        obj.insert(QString("org.apache.sling.servlets.compat"), ::OpenAPI::toJsonValue(org_apache_sling_servlets_compat));
    }
	if(org_apache_sling_servlets_get.isSet()){
        obj.insert(QString("org.apache.sling.servlets.get"), ::OpenAPI::toJsonValue(org_apache_sling_servlets_get));
    }
	if(org_apache_sling_startupfilter_disabler.isSet()){
        obj.insert(QString("org.apache.sling.startupfilter.disabler"), ::OpenAPI::toJsonValue(org_apache_sling_startupfilter_disabler));
    }
	if(org_apache_sling_tracer.isSet()){
        obj.insert(QString("org.apache.sling.tracer"), ::OpenAPI::toJsonValue(org_apache_sling_tracer));
    }
	if(we_retail_client_app_core.isSet()){
        obj.insert(QString("we.retail.client.app.core"), ::OpenAPI::toJsonValue(we_retail_client_app_core));
    }
    return obj;
}

OAIConfigNodePropertyString
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getComAdobeCqCdnCdnRewriter() const {
    return com_adobe_cq_cdn_cdn_rewriter;
}
void
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setComAdobeCqCdnCdnRewriter(const OAIConfigNodePropertyString &com_adobe_cq_cdn_cdn_rewriter) {
    this->com_adobe_cq_cdn_cdn_rewriter = com_adobe_cq_cdn_cdn_rewriter;
    this->m_com_adobe_cq_cdn_cdn_rewriter_isSet = true;
}

OAIConfigNodePropertyString
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getComAdobeCqCloudConfigComponents() const {
    return com_adobe_cq_cloud_config_components;
}
void
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setComAdobeCqCloudConfigComponents(const OAIConfigNodePropertyString &com_adobe_cq_cloud_config_components) {
    this->com_adobe_cq_cloud_config_components = com_adobe_cq_cloud_config_components;
    this->m_com_adobe_cq_cloud_config_components_isSet = true;
}

OAIConfigNodePropertyString
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getComAdobeCqCloudConfigCore() const {
    return com_adobe_cq_cloud_config_core;
}
void
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setComAdobeCqCloudConfigCore(const OAIConfigNodePropertyString &com_adobe_cq_cloud_config_core) {
    this->com_adobe_cq_cloud_config_core = com_adobe_cq_cloud_config_core;
    this->m_com_adobe_cq_cloud_config_core_isSet = true;
}

OAIConfigNodePropertyString
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getComAdobeCqCloudConfigUi() const {
    return com_adobe_cq_cloud_config_ui;
}
void
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setComAdobeCqCloudConfigUi(const OAIConfigNodePropertyString &com_adobe_cq_cloud_config_ui) {
    this->com_adobe_cq_cloud_config_ui = com_adobe_cq_cloud_config_ui;
    this->m_com_adobe_cq_cloud_config_ui_isSet = true;
}

OAIConfigNodePropertyString
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getComAdobeCqComAdobeCqEditor() const {
    return com_adobe_cq_com_adobe_cq_editor;
}
void
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setComAdobeCqComAdobeCqEditor(const OAIConfigNodePropertyString &com_adobe_cq_com_adobe_cq_editor) {
    this->com_adobe_cq_com_adobe_cq_editor = com_adobe_cq_com_adobe_cq_editor;
    this->m_com_adobe_cq_com_adobe_cq_editor_isSet = true;
}

OAIConfigNodePropertyString
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getComAdobeCqComAdobeCqProjectsCore() const {
    return com_adobe_cq_com_adobe_cq_projects_core;
}
void
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setComAdobeCqComAdobeCqProjectsCore(const OAIConfigNodePropertyString &com_adobe_cq_com_adobe_cq_projects_core) {
    this->com_adobe_cq_com_adobe_cq_projects_core = com_adobe_cq_com_adobe_cq_projects_core;
    this->m_com_adobe_cq_com_adobe_cq_projects_core_isSet = true;
}

OAIConfigNodePropertyString
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getComAdobeCqComAdobeCqProjectsWcmCore() const {
    return com_adobe_cq_com_adobe_cq_projects_wcm_core;
}
void
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setComAdobeCqComAdobeCqProjectsWcmCore(const OAIConfigNodePropertyString &com_adobe_cq_com_adobe_cq_projects_wcm_core) {
    this->com_adobe_cq_com_adobe_cq_projects_wcm_core = com_adobe_cq_com_adobe_cq_projects_wcm_core;
    this->m_com_adobe_cq_com_adobe_cq_projects_wcm_core_isSet = true;
}

OAIConfigNodePropertyString
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getComAdobeCqComAdobeCqUiCommons() const {
    return com_adobe_cq_com_adobe_cq_ui_commons;
}
void
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setComAdobeCqComAdobeCqUiCommons(const OAIConfigNodePropertyString &com_adobe_cq_com_adobe_cq_ui_commons) {
    this->com_adobe_cq_com_adobe_cq_ui_commons = com_adobe_cq_com_adobe_cq_ui_commons;
    this->m_com_adobe_cq_com_adobe_cq_ui_commons_isSet = true;
}

OAIConfigNodePropertyString
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getComAdobeCqComAdobeCqWcmStyle() const {
    return com_adobe_cq_com_adobe_cq_wcm_style;
}
void
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setComAdobeCqComAdobeCqWcmStyle(const OAIConfigNodePropertyString &com_adobe_cq_com_adobe_cq_wcm_style) {
    this->com_adobe_cq_com_adobe_cq_wcm_style = com_adobe_cq_com_adobe_cq_wcm_style;
    this->m_com_adobe_cq_com_adobe_cq_wcm_style_isSet = true;
}

OAIConfigNodePropertyString
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getComAdobeCqCqActivitymapIntegration() const {
    return com_adobe_cq_cq_activitymap_integration;
}
void
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setComAdobeCqCqActivitymapIntegration(const OAIConfigNodePropertyString &com_adobe_cq_cq_activitymap_integration) {
    this->com_adobe_cq_cq_activitymap_integration = com_adobe_cq_cq_activitymap_integration;
    this->m_com_adobe_cq_cq_activitymap_integration_isSet = true;
}

OAIConfigNodePropertyString
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getComAdobeCqCqContexthubCommons() const {
    return com_adobe_cq_cq_contexthub_commons;
}
void
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setComAdobeCqCqContexthubCommons(const OAIConfigNodePropertyString &com_adobe_cq_cq_contexthub_commons) {
    this->com_adobe_cq_cq_contexthub_commons = com_adobe_cq_cq_contexthub_commons;
    this->m_com_adobe_cq_cq_contexthub_commons_isSet = true;
}

OAIConfigNodePropertyString
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getComAdobeCqCqDtm() const {
    return com_adobe_cq_cq_dtm;
}
void
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setComAdobeCqCqDtm(const OAIConfigNodePropertyString &com_adobe_cq_cq_dtm) {
    this->com_adobe_cq_cq_dtm = com_adobe_cq_cq_dtm;
    this->m_com_adobe_cq_cq_dtm_isSet = true;
}

OAIConfigNodePropertyString
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getComAdobeCqCqHealthcheck() const {
    return com_adobe_cq_cq_healthcheck;
}
void
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setComAdobeCqCqHealthcheck(const OAIConfigNodePropertyString &com_adobe_cq_cq_healthcheck) {
    this->com_adobe_cq_cq_healthcheck = com_adobe_cq_cq_healthcheck;
    this->m_com_adobe_cq_cq_healthcheck_isSet = true;
}

OAIConfigNodePropertyString
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getComAdobeCqCqMultisiteTargeting() const {
    return com_adobe_cq_cq_multisite_targeting;
}
void
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setComAdobeCqCqMultisiteTargeting(const OAIConfigNodePropertyString &com_adobe_cq_cq_multisite_targeting) {
    this->com_adobe_cq_cq_multisite_targeting = com_adobe_cq_cq_multisite_targeting;
    this->m_com_adobe_cq_cq_multisite_targeting_isSet = true;
}

OAIConfigNodePropertyString
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getComAdobeCqCqPreUpgradeCleanup() const {
    return com_adobe_cq_cq_pre_upgrade_cleanup;
}
void
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setComAdobeCqCqPreUpgradeCleanup(const OAIConfigNodePropertyString &com_adobe_cq_cq_pre_upgrade_cleanup) {
    this->com_adobe_cq_cq_pre_upgrade_cleanup = com_adobe_cq_cq_pre_upgrade_cleanup;
    this->m_com_adobe_cq_cq_pre_upgrade_cleanup_isSet = true;
}

OAIConfigNodePropertyString
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getComAdobeCqCqProductInfoProvider() const {
    return com_adobe_cq_cq_product_info_provider;
}
void
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setComAdobeCqCqProductInfoProvider(const OAIConfigNodePropertyString &com_adobe_cq_cq_product_info_provider) {
    this->com_adobe_cq_cq_product_info_provider = com_adobe_cq_cq_product_info_provider;
    this->m_com_adobe_cq_cq_product_info_provider_isSet = true;
}

OAIConfigNodePropertyString
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getComAdobeCqCqRestSites() const {
    return com_adobe_cq_cq_rest_sites;
}
void
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setComAdobeCqCqRestSites(const OAIConfigNodePropertyString &com_adobe_cq_cq_rest_sites) {
    this->com_adobe_cq_cq_rest_sites = com_adobe_cq_cq_rest_sites;
    this->m_com_adobe_cq_cq_rest_sites_isSet = true;
}

OAIConfigNodePropertyString
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getComAdobeCqCqSecurityHc() const {
    return com_adobe_cq_cq_security_hc;
}
void
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setComAdobeCqCqSecurityHc(const OAIConfigNodePropertyString &com_adobe_cq_cq_security_hc) {
    this->com_adobe_cq_cq_security_hc = com_adobe_cq_cq_security_hc;
    this->m_com_adobe_cq_cq_security_hc_isSet = true;
}

OAIConfigNodePropertyString
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getComAdobeCqDamCqDamSvgHandler() const {
    return com_adobe_cq_dam_cq_dam_svg_handler;
}
void
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setComAdobeCqDamCqDamSvgHandler(const OAIConfigNodePropertyString &com_adobe_cq_dam_cq_dam_svg_handler) {
    this->com_adobe_cq_dam_cq_dam_svg_handler = com_adobe_cq_dam_cq_dam_svg_handler;
    this->m_com_adobe_cq_dam_cq_dam_svg_handler_isSet = true;
}

OAIConfigNodePropertyString
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getComAdobeCqDamCqScene7Imaging() const {
    return com_adobe_cq_dam_cq_scene7_imaging;
}
void
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setComAdobeCqDamCqScene7Imaging(const OAIConfigNodePropertyString &com_adobe_cq_dam_cq_scene7_imaging) {
    this->com_adobe_cq_dam_cq_scene7_imaging = com_adobe_cq_dam_cq_scene7_imaging;
    this->m_com_adobe_cq_dam_cq_scene7_imaging_isSet = true;
}

OAIConfigNodePropertyString
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getComAdobeCqDtmReactorCore() const {
    return com_adobe_cq_dtm_reactor_core;
}
void
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setComAdobeCqDtmReactorCore(const OAIConfigNodePropertyString &com_adobe_cq_dtm_reactor_core) {
    this->com_adobe_cq_dtm_reactor_core = com_adobe_cq_dtm_reactor_core;
    this->m_com_adobe_cq_dtm_reactor_core_isSet = true;
}

OAIConfigNodePropertyString
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getComAdobeCqDtmReactorUi() const {
    return com_adobe_cq_dtm_reactor_ui;
}
void
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setComAdobeCqDtmReactorUi(const OAIConfigNodePropertyString &com_adobe_cq_dtm_reactor_ui) {
    this->com_adobe_cq_dtm_reactor_ui = com_adobe_cq_dtm_reactor_ui;
    this->m_com_adobe_cq_dtm_reactor_ui_isSet = true;
}

OAIConfigNodePropertyString
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getComAdobeCqExpJspelResolver() const {
    return com_adobe_cq_exp_jspel_resolver;
}
void
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setComAdobeCqExpJspelResolver(const OAIConfigNodePropertyString &com_adobe_cq_exp_jspel_resolver) {
    this->com_adobe_cq_exp_jspel_resolver = com_adobe_cq_exp_jspel_resolver;
    this->m_com_adobe_cq_exp_jspel_resolver_isSet = true;
}

OAIConfigNodePropertyString
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getComAdobeCqInboxCqInbox() const {
    return com_adobe_cq_inbox_cq_inbox;
}
void
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setComAdobeCqInboxCqInbox(const OAIConfigNodePropertyString &com_adobe_cq_inbox_cq_inbox) {
    this->com_adobe_cq_inbox_cq_inbox = com_adobe_cq_inbox_cq_inbox;
    this->m_com_adobe_cq_inbox_cq_inbox_isSet = true;
}

OAIConfigNodePropertyString
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getComAdobeCqJsonSchemaParser() const {
    return com_adobe_cq_json_schema_parser;
}
void
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setComAdobeCqJsonSchemaParser(const OAIConfigNodePropertyString &com_adobe_cq_json_schema_parser) {
    this->com_adobe_cq_json_schema_parser = com_adobe_cq_json_schema_parser;
    this->m_com_adobe_cq_json_schema_parser_isSet = true;
}

OAIConfigNodePropertyString
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getComAdobeCqMediaCqMediaPublishingDpsFpCore() const {
    return com_adobe_cq_media_cq_media_publishing_dps_fp_core;
}
void
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setComAdobeCqMediaCqMediaPublishingDpsFpCore(const OAIConfigNodePropertyString &com_adobe_cq_media_cq_media_publishing_dps_fp_core) {
    this->com_adobe_cq_media_cq_media_publishing_dps_fp_core = com_adobe_cq_media_cq_media_publishing_dps_fp_core;
    this->m_com_adobe_cq_media_cq_media_publishing_dps_fp_core_isSet = true;
}

OAIConfigNodePropertyString
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getComAdobeCqMobileCqMobileCaas() const {
    return com_adobe_cq_mobile_cq_mobile_caas;
}
void
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setComAdobeCqMobileCqMobileCaas(const OAIConfigNodePropertyString &com_adobe_cq_mobile_cq_mobile_caas) {
    this->com_adobe_cq_mobile_cq_mobile_caas = com_adobe_cq_mobile_cq_mobile_caas;
    this->m_com_adobe_cq_mobile_cq_mobile_caas_isSet = true;
}

OAIConfigNodePropertyString
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getComAdobeCqMobileCqMobileIndexBuilder() const {
    return com_adobe_cq_mobile_cq_mobile_index_builder;
}
void
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setComAdobeCqMobileCqMobileIndexBuilder(const OAIConfigNodePropertyString &com_adobe_cq_mobile_cq_mobile_index_builder) {
    this->com_adobe_cq_mobile_cq_mobile_index_builder = com_adobe_cq_mobile_cq_mobile_index_builder;
    this->m_com_adobe_cq_mobile_cq_mobile_index_builder_isSet = true;
}

OAIConfigNodePropertyString
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getComAdobeCqMobileCqMobilePhonegapBuild() const {
    return com_adobe_cq_mobile_cq_mobile_phonegap_build;
}
void
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setComAdobeCqMobileCqMobilePhonegapBuild(const OAIConfigNodePropertyString &com_adobe_cq_mobile_cq_mobile_phonegap_build) {
    this->com_adobe_cq_mobile_cq_mobile_phonegap_build = com_adobe_cq_mobile_cq_mobile_phonegap_build;
    this->m_com_adobe_cq_mobile_cq_mobile_phonegap_build_isSet = true;
}

OAIConfigNodePropertyString
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getComAdobeCqMyspell() const {
    return com_adobe_cq_myspell;
}
void
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setComAdobeCqMyspell(const OAIConfigNodePropertyString &com_adobe_cq_myspell) {
    this->com_adobe_cq_myspell = com_adobe_cq_myspell;
    this->m_com_adobe_cq_myspell_isSet = true;
}

OAIConfigNodePropertyString
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getComAdobeCqSampleWeRetailCore() const {
    return com_adobe_cq_sample_we_retail_core;
}
void
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setComAdobeCqSampleWeRetailCore(const OAIConfigNodePropertyString &com_adobe_cq_sample_we_retail_core) {
    this->com_adobe_cq_sample_we_retail_core = com_adobe_cq_sample_we_retail_core;
    this->m_com_adobe_cq_sample_we_retail_core_isSet = true;
}

OAIConfigNodePropertyString
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getComAdobeCqScreensComAdobeCqScreensDcc() const {
    return com_adobe_cq_screens_com_adobe_cq_screens_dcc;
}
void
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setComAdobeCqScreensComAdobeCqScreensDcc(const OAIConfigNodePropertyString &com_adobe_cq_screens_com_adobe_cq_screens_dcc) {
    this->com_adobe_cq_screens_com_adobe_cq_screens_dcc = com_adobe_cq_screens_com_adobe_cq_screens_dcc;
    this->m_com_adobe_cq_screens_com_adobe_cq_screens_dcc_isSet = true;
}

OAIConfigNodePropertyString
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getComAdobeCqScreensComAdobeCqScreensMqCore() const {
    return com_adobe_cq_screens_com_adobe_cq_screens_mq_core;
}
void
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setComAdobeCqScreensComAdobeCqScreensMqCore(const OAIConfigNodePropertyString &com_adobe_cq_screens_com_adobe_cq_screens_mq_core) {
    this->com_adobe_cq_screens_com_adobe_cq_screens_mq_core = com_adobe_cq_screens_com_adobe_cq_screens_mq_core;
    this->m_com_adobe_cq_screens_com_adobe_cq_screens_mq_core_isSet = true;
}

OAIConfigNodePropertyString
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getComAdobeCqSocialCqSocialAsProvider() const {
    return com_adobe_cq_social_cq_social_as_provider;
}
void
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setComAdobeCqSocialCqSocialAsProvider(const OAIConfigNodePropertyString &com_adobe_cq_social_cq_social_as_provider) {
    this->com_adobe_cq_social_cq_social_as_provider = com_adobe_cq_social_cq_social_as_provider;
    this->m_com_adobe_cq_social_cq_social_as_provider_isSet = true;
}

OAIConfigNodePropertyString
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getComAdobeCqSocialCqSocialBadgingBasicImpl() const {
    return com_adobe_cq_social_cq_social_badging_basic_impl;
}
void
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setComAdobeCqSocialCqSocialBadgingBasicImpl(const OAIConfigNodePropertyString &com_adobe_cq_social_cq_social_badging_basic_impl) {
    this->com_adobe_cq_social_cq_social_badging_basic_impl = com_adobe_cq_social_cq_social_badging_basic_impl;
    this->m_com_adobe_cq_social_cq_social_badging_basic_impl_isSet = true;
}

OAIConfigNodePropertyString
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getComAdobeCqSocialCqSocialBadgingImpl() const {
    return com_adobe_cq_social_cq_social_badging_impl;
}
void
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setComAdobeCqSocialCqSocialBadgingImpl(const OAIConfigNodePropertyString &com_adobe_cq_social_cq_social_badging_impl) {
    this->com_adobe_cq_social_cq_social_badging_impl = com_adobe_cq_social_cq_social_badging_impl;
    this->m_com_adobe_cq_social_cq_social_badging_impl_isSet = true;
}

OAIConfigNodePropertyString
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getComAdobeCqSocialCqSocialCalendarImpl() const {
    return com_adobe_cq_social_cq_social_calendar_impl;
}
void
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setComAdobeCqSocialCqSocialCalendarImpl(const OAIConfigNodePropertyString &com_adobe_cq_social_cq_social_calendar_impl) {
    this->com_adobe_cq_social_cq_social_calendar_impl = com_adobe_cq_social_cq_social_calendar_impl;
    this->m_com_adobe_cq_social_cq_social_calendar_impl_isSet = true;
}

OAIConfigNodePropertyString
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getComAdobeCqSocialCqSocialContentFragmentsImpl() const {
    return com_adobe_cq_social_cq_social_content_fragments_impl;
}
void
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setComAdobeCqSocialCqSocialContentFragmentsImpl(const OAIConfigNodePropertyString &com_adobe_cq_social_cq_social_content_fragments_impl) {
    this->com_adobe_cq_social_cq_social_content_fragments_impl = com_adobe_cq_social_cq_social_content_fragments_impl;
    this->m_com_adobe_cq_social_cq_social_content_fragments_impl_isSet = true;
}

OAIConfigNodePropertyString
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getComAdobeCqSocialCqSocialEnablementImpl() const {
    return com_adobe_cq_social_cq_social_enablement_impl;
}
void
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setComAdobeCqSocialCqSocialEnablementImpl(const OAIConfigNodePropertyString &com_adobe_cq_social_cq_social_enablement_impl) {
    this->com_adobe_cq_social_cq_social_enablement_impl = com_adobe_cq_social_cq_social_enablement_impl;
    this->m_com_adobe_cq_social_cq_social_enablement_impl_isSet = true;
}

OAIConfigNodePropertyString
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getComAdobeCqSocialCqSocialGraphImpl() const {
    return com_adobe_cq_social_cq_social_graph_impl;
}
void
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setComAdobeCqSocialCqSocialGraphImpl(const OAIConfigNodePropertyString &com_adobe_cq_social_cq_social_graph_impl) {
    this->com_adobe_cq_social_cq_social_graph_impl = com_adobe_cq_social_cq_social_graph_impl;
    this->m_com_adobe_cq_social_cq_social_graph_impl_isSet = true;
}

OAIConfigNodePropertyString
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getComAdobeCqSocialCqSocialIdeationImpl() const {
    return com_adobe_cq_social_cq_social_ideation_impl;
}
void
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setComAdobeCqSocialCqSocialIdeationImpl(const OAIConfigNodePropertyString &com_adobe_cq_social_cq_social_ideation_impl) {
    this->com_adobe_cq_social_cq_social_ideation_impl = com_adobe_cq_social_cq_social_ideation_impl;
    this->m_com_adobe_cq_social_cq_social_ideation_impl_isSet = true;
}

OAIConfigNodePropertyString
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getComAdobeCqSocialCqSocialJcrProvider() const {
    return com_adobe_cq_social_cq_social_jcr_provider;
}
void
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setComAdobeCqSocialCqSocialJcrProvider(const OAIConfigNodePropertyString &com_adobe_cq_social_cq_social_jcr_provider) {
    this->com_adobe_cq_social_cq_social_jcr_provider = com_adobe_cq_social_cq_social_jcr_provider;
    this->m_com_adobe_cq_social_cq_social_jcr_provider_isSet = true;
}

OAIConfigNodePropertyString
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getComAdobeCqSocialCqSocialMembersImpl() const {
    return com_adobe_cq_social_cq_social_members_impl;
}
void
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setComAdobeCqSocialCqSocialMembersImpl(const OAIConfigNodePropertyString &com_adobe_cq_social_cq_social_members_impl) {
    this->com_adobe_cq_social_cq_social_members_impl = com_adobe_cq_social_cq_social_members_impl;
    this->m_com_adobe_cq_social_cq_social_members_impl_isSet = true;
}

OAIConfigNodePropertyString
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getComAdobeCqSocialCqSocialMsProvider() const {
    return com_adobe_cq_social_cq_social_ms_provider;
}
void
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setComAdobeCqSocialCqSocialMsProvider(const OAIConfigNodePropertyString &com_adobe_cq_social_cq_social_ms_provider) {
    this->com_adobe_cq_social_cq_social_ms_provider = com_adobe_cq_social_cq_social_ms_provider;
    this->m_com_adobe_cq_social_cq_social_ms_provider_isSet = true;
}

OAIConfigNodePropertyString
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getComAdobeCqSocialCqSocialNotificationsChannelsWeb() const {
    return com_adobe_cq_social_cq_social_notifications_channels_web;
}
void
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setComAdobeCqSocialCqSocialNotificationsChannelsWeb(const OAIConfigNodePropertyString &com_adobe_cq_social_cq_social_notifications_channels_web) {
    this->com_adobe_cq_social_cq_social_notifications_channels_web = com_adobe_cq_social_cq_social_notifications_channels_web;
    this->m_com_adobe_cq_social_cq_social_notifications_channels_web_isSet = true;
}

OAIConfigNodePropertyString
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getComAdobeCqSocialCqSocialNotificationsImpl() const {
    return com_adobe_cq_social_cq_social_notifications_impl;
}
void
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setComAdobeCqSocialCqSocialNotificationsImpl(const OAIConfigNodePropertyString &com_adobe_cq_social_cq_social_notifications_impl) {
    this->com_adobe_cq_social_cq_social_notifications_impl = com_adobe_cq_social_cq_social_notifications_impl;
    this->m_com_adobe_cq_social_cq_social_notifications_impl_isSet = true;
}

OAIConfigNodePropertyString
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getComAdobeCqSocialCqSocialRdbProvider() const {
    return com_adobe_cq_social_cq_social_rdb_provider;
}
void
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setComAdobeCqSocialCqSocialRdbProvider(const OAIConfigNodePropertyString &com_adobe_cq_social_cq_social_rdb_provider) {
    this->com_adobe_cq_social_cq_social_rdb_provider = com_adobe_cq_social_cq_social_rdb_provider;
    this->m_com_adobe_cq_social_cq_social_rdb_provider_isSet = true;
}

OAIConfigNodePropertyString
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getComAdobeCqSocialCqSocialScfImpl() const {
    return com_adobe_cq_social_cq_social_scf_impl;
}
void
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setComAdobeCqSocialCqSocialScfImpl(const OAIConfigNodePropertyString &com_adobe_cq_social_cq_social_scf_impl) {
    this->com_adobe_cq_social_cq_social_scf_impl = com_adobe_cq_social_cq_social_scf_impl;
    this->m_com_adobe_cq_social_cq_social_scf_impl_isSet = true;
}

OAIConfigNodePropertyString
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getComAdobeCqSocialCqSocialScoringBasicImpl() const {
    return com_adobe_cq_social_cq_social_scoring_basic_impl;
}
void
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setComAdobeCqSocialCqSocialScoringBasicImpl(const OAIConfigNodePropertyString &com_adobe_cq_social_cq_social_scoring_basic_impl) {
    this->com_adobe_cq_social_cq_social_scoring_basic_impl = com_adobe_cq_social_cq_social_scoring_basic_impl;
    this->m_com_adobe_cq_social_cq_social_scoring_basic_impl_isSet = true;
}

OAIConfigNodePropertyString
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getComAdobeCqSocialCqSocialScoringImpl() const {
    return com_adobe_cq_social_cq_social_scoring_impl;
}
void
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setComAdobeCqSocialCqSocialScoringImpl(const OAIConfigNodePropertyString &com_adobe_cq_social_cq_social_scoring_impl) {
    this->com_adobe_cq_social_cq_social_scoring_impl = com_adobe_cq_social_cq_social_scoring_impl;
    this->m_com_adobe_cq_social_cq_social_scoring_impl_isSet = true;
}

OAIConfigNodePropertyString
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getComAdobeCqSocialCqSocialServiceusersImpl() const {
    return com_adobe_cq_social_cq_social_serviceusers_impl;
}
void
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setComAdobeCqSocialCqSocialServiceusersImpl(const OAIConfigNodePropertyString &com_adobe_cq_social_cq_social_serviceusers_impl) {
    this->com_adobe_cq_social_cq_social_serviceusers_impl = com_adobe_cq_social_cq_social_serviceusers_impl;
    this->m_com_adobe_cq_social_cq_social_serviceusers_impl_isSet = true;
}

OAIConfigNodePropertyString
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getComAdobeCqSocialCqSocialSrpImpl() const {
    return com_adobe_cq_social_cq_social_srp_impl;
}
void
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setComAdobeCqSocialCqSocialSrpImpl(const OAIConfigNodePropertyString &com_adobe_cq_social_cq_social_srp_impl) {
    this->com_adobe_cq_social_cq_social_srp_impl = com_adobe_cq_social_cq_social_srp_impl;
    this->m_com_adobe_cq_social_cq_social_srp_impl_isSet = true;
}

OAIConfigNodePropertyString
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getComAdobeCqSocialCqSocialUgcbaseImpl() const {
    return com_adobe_cq_social_cq_social_ugcbase_impl;
}
void
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setComAdobeCqSocialCqSocialUgcbaseImpl(const OAIConfigNodePropertyString &com_adobe_cq_social_cq_social_ugcbase_impl) {
    this->com_adobe_cq_social_cq_social_ugcbase_impl = com_adobe_cq_social_cq_social_ugcbase_impl;
    this->m_com_adobe_cq_social_cq_social_ugcbase_impl_isSet = true;
}

OAIConfigNodePropertyString
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getComAdobeDamCqDamCfmImpl() const {
    return com_adobe_dam_cq_dam_cfm_impl;
}
void
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setComAdobeDamCqDamCfmImpl(const OAIConfigNodePropertyString &com_adobe_dam_cq_dam_cfm_impl) {
    this->com_adobe_dam_cq_dam_cfm_impl = com_adobe_dam_cq_dam_cfm_impl;
    this->m_com_adobe_dam_cq_dam_cfm_impl_isSet = true;
}

OAIConfigNodePropertyString
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getComAdobeFormsFoundationFormsFoundationBase() const {
    return com_adobe_forms_foundation_forms_foundation_base;
}
void
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setComAdobeFormsFoundationFormsFoundationBase(const OAIConfigNodePropertyString &com_adobe_forms_foundation_forms_foundation_base) {
    this->com_adobe_forms_foundation_forms_foundation_base = com_adobe_forms_foundation_forms_foundation_base;
    this->m_com_adobe_forms_foundation_forms_foundation_base_isSet = true;
}

OAIConfigNodePropertyString
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getComAdobeGraniteApicontroller() const {
    return com_adobe_granite_apicontroller;
}
void
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setComAdobeGraniteApicontroller(const OAIConfigNodePropertyString &com_adobe_granite_apicontroller) {
    this->com_adobe_granite_apicontroller = com_adobe_granite_apicontroller;
    this->m_com_adobe_granite_apicontroller_isSet = true;
}

OAIConfigNodePropertyString
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getComAdobeGraniteAssetCore() const {
    return com_adobe_granite_asset_core;
}
void
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setComAdobeGraniteAssetCore(const OAIConfigNodePropertyString &com_adobe_granite_asset_core) {
    this->com_adobe_granite_asset_core = com_adobe_granite_asset_core;
    this->m_com_adobe_granite_asset_core_isSet = true;
}

OAIConfigNodePropertyString
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getComAdobeGraniteAuthSso() const {
    return com_adobe_granite_auth_sso;
}
void
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setComAdobeGraniteAuthSso(const OAIConfigNodePropertyString &com_adobe_granite_auth_sso) {
    this->com_adobe_granite_auth_sso = com_adobe_granite_auth_sso;
    this->m_com_adobe_granite_auth_sso_isSet = true;
}

OAIConfigNodePropertyString
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getComAdobeGraniteBundlesHcImpl() const {
    return com_adobe_granite_bundles_hc_impl;
}
void
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setComAdobeGraniteBundlesHcImpl(const OAIConfigNodePropertyString &com_adobe_granite_bundles_hc_impl) {
    this->com_adobe_granite_bundles_hc_impl = com_adobe_granite_bundles_hc_impl;
    this->m_com_adobe_granite_bundles_hc_impl_isSet = true;
}

OAIConfigNodePropertyString
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getComAdobeGraniteCompatRouter() const {
    return com_adobe_granite_compat_router;
}
void
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setComAdobeGraniteCompatRouter(const OAIConfigNodePropertyString &com_adobe_granite_compat_router) {
    this->com_adobe_granite_compat_router = com_adobe_granite_compat_router;
    this->m_com_adobe_granite_compat_router_isSet = true;
}

OAIConfigNodePropertyString
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getComAdobeGraniteConf() const {
    return com_adobe_granite_conf;
}
void
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setComAdobeGraniteConf(const OAIConfigNodePropertyString &com_adobe_granite_conf) {
    this->com_adobe_granite_conf = com_adobe_granite_conf;
    this->m_com_adobe_granite_conf_isSet = true;
}

OAIConfigNodePropertyString
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getComAdobeGraniteConfUiCore() const {
    return com_adobe_granite_conf_ui_core;
}
void
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setComAdobeGraniteConfUiCore(const OAIConfigNodePropertyString &com_adobe_granite_conf_ui_core) {
    this->com_adobe_granite_conf_ui_core = com_adobe_granite_conf_ui_core;
    this->m_com_adobe_granite_conf_ui_core_isSet = true;
}

OAIConfigNodePropertyString
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getComAdobeGraniteCors() const {
    return com_adobe_granite_cors;
}
void
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setComAdobeGraniteCors(const OAIConfigNodePropertyString &com_adobe_granite_cors) {
    this->com_adobe_granite_cors = com_adobe_granite_cors;
    this->m_com_adobe_granite_cors_isSet = true;
}

OAIConfigNodePropertyString
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getComAdobeGraniteCrxExplorer() const {
    return com_adobe_granite_crx_explorer;
}
void
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setComAdobeGraniteCrxExplorer(const OAIConfigNodePropertyString &com_adobe_granite_crx_explorer) {
    this->com_adobe_granite_crx_explorer = com_adobe_granite_crx_explorer;
    this->m_com_adobe_granite_crx_explorer_isSet = true;
}

OAIConfigNodePropertyString
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getComAdobeGraniteCrxdeLite() const {
    return com_adobe_granite_crxde_lite;
}
void
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setComAdobeGraniteCrxdeLite(const OAIConfigNodePropertyString &com_adobe_granite_crxde_lite) {
    this->com_adobe_granite_crxde_lite = com_adobe_granite_crxde_lite;
    this->m_com_adobe_granite_crxde_lite_isSet = true;
}

OAIConfigNodePropertyString
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getComAdobeGraniteCryptoConfig() const {
    return com_adobe_granite_crypto_config;
}
void
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setComAdobeGraniteCryptoConfig(const OAIConfigNodePropertyString &com_adobe_granite_crypto_config) {
    this->com_adobe_granite_crypto_config = com_adobe_granite_crypto_config;
    this->m_com_adobe_granite_crypto_config_isSet = true;
}

OAIConfigNodePropertyString
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getComAdobeGraniteCryptoExtension() const {
    return com_adobe_granite_crypto_extension;
}
void
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setComAdobeGraniteCryptoExtension(const OAIConfigNodePropertyString &com_adobe_granite_crypto_extension) {
    this->com_adobe_granite_crypto_extension = com_adobe_granite_crypto_extension;
    this->m_com_adobe_granite_crypto_extension_isSet = true;
}

OAIConfigNodePropertyString
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getComAdobeGraniteCryptoFile() const {
    return com_adobe_granite_crypto_file;
}
void
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setComAdobeGraniteCryptoFile(const OAIConfigNodePropertyString &com_adobe_granite_crypto_file) {
    this->com_adobe_granite_crypto_file = com_adobe_granite_crypto_file;
    this->m_com_adobe_granite_crypto_file_isSet = true;
}

OAIConfigNodePropertyString
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getComAdobeGraniteCryptoJcr() const {
    return com_adobe_granite_crypto_jcr;
}
void
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setComAdobeGraniteCryptoJcr(const OAIConfigNodePropertyString &com_adobe_granite_crypto_jcr) {
    this->com_adobe_granite_crypto_jcr = com_adobe_granite_crypto_jcr;
    this->m_com_adobe_granite_crypto_jcr_isSet = true;
}

OAIConfigNodePropertyString
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getComAdobeGraniteCsrf() const {
    return com_adobe_granite_csrf;
}
void
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setComAdobeGraniteCsrf(const OAIConfigNodePropertyString &com_adobe_granite_csrf) {
    this->com_adobe_granite_csrf = com_adobe_granite_csrf;
    this->m_com_adobe_granite_csrf_isSet = true;
}

OAIConfigNodePropertyString
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getComAdobeGraniteDistributionCore() const {
    return com_adobe_granite_distribution_core;
}
void
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setComAdobeGraniteDistributionCore(const OAIConfigNodePropertyString &com_adobe_granite_distribution_core) {
    this->com_adobe_granite_distribution_core = com_adobe_granite_distribution_core;
    this->m_com_adobe_granite_distribution_core_isSet = true;
}

OAIConfigNodePropertyString
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getComAdobeGraniteDropwizardMetrics() const {
    return com_adobe_granite_dropwizard_metrics;
}
void
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setComAdobeGraniteDropwizardMetrics(const OAIConfigNodePropertyString &com_adobe_granite_dropwizard_metrics) {
    this->com_adobe_granite_dropwizard_metrics = com_adobe_granite_dropwizard_metrics;
    this->m_com_adobe_granite_dropwizard_metrics_isSet = true;
}

OAIConfigNodePropertyString
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getComAdobeGraniteFragsImpl() const {
    return com_adobe_granite_frags_impl;
}
void
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setComAdobeGraniteFragsImpl(const OAIConfigNodePropertyString &com_adobe_granite_frags_impl) {
    this->com_adobe_granite_frags_impl = com_adobe_granite_frags_impl;
    this->m_com_adobe_granite_frags_impl_isSet = true;
}

OAIConfigNodePropertyString
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getComAdobeGraniteGibson() const {
    return com_adobe_granite_gibson;
}
void
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setComAdobeGraniteGibson(const OAIConfigNodePropertyString &com_adobe_granite_gibson) {
    this->com_adobe_granite_gibson = com_adobe_granite_gibson;
    this->m_com_adobe_granite_gibson_isSet = true;
}

OAIConfigNodePropertyString
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getComAdobeGraniteInfocollector() const {
    return com_adobe_granite_infocollector;
}
void
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setComAdobeGraniteInfocollector(const OAIConfigNodePropertyString &com_adobe_granite_infocollector) {
    this->com_adobe_granite_infocollector = com_adobe_granite_infocollector;
    this->m_com_adobe_granite_infocollector_isSet = true;
}

OAIConfigNodePropertyString
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getComAdobeGraniteInstallerFactoryPackages() const {
    return com_adobe_granite_installer_factory_packages;
}
void
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setComAdobeGraniteInstallerFactoryPackages(const OAIConfigNodePropertyString &com_adobe_granite_installer_factory_packages) {
    this->com_adobe_granite_installer_factory_packages = com_adobe_granite_installer_factory_packages;
    this->m_com_adobe_granite_installer_factory_packages_isSet = true;
}

OAIConfigNodePropertyString
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getComAdobeGraniteJettySsl() const {
    return com_adobe_granite_jetty_ssl;
}
void
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setComAdobeGraniteJettySsl(const OAIConfigNodePropertyString &com_adobe_granite_jetty_ssl) {
    this->com_adobe_granite_jetty_ssl = com_adobe_granite_jetty_ssl;
    this->m_com_adobe_granite_jetty_ssl_isSet = true;
}

OAIConfigNodePropertyString
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getComAdobeGraniteJobsAsync() const {
    return com_adobe_granite_jobs_async;
}
void
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setComAdobeGraniteJobsAsync(const OAIConfigNodePropertyString &com_adobe_granite_jobs_async) {
    this->com_adobe_granite_jobs_async = com_adobe_granite_jobs_async;
    this->m_com_adobe_granite_jobs_async_isSet = true;
}

OAIConfigNodePropertyString
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getComAdobeGraniteMaintenanceOak() const {
    return com_adobe_granite_maintenance_oak;
}
void
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setComAdobeGraniteMaintenanceOak(const OAIConfigNodePropertyString &com_adobe_granite_maintenance_oak) {
    this->com_adobe_granite_maintenance_oak = com_adobe_granite_maintenance_oak;
    this->m_com_adobe_granite_maintenance_oak_isSet = true;
}

OAIConfigNodePropertyString
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getComAdobeGraniteMonitoringCore() const {
    return com_adobe_granite_monitoring_core;
}
void
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setComAdobeGraniteMonitoringCore(const OAIConfigNodePropertyString &com_adobe_granite_monitoring_core) {
    this->com_adobe_granite_monitoring_core = com_adobe_granite_monitoring_core;
    this->m_com_adobe_granite_monitoring_core_isSet = true;
}

OAIConfigNodePropertyString
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getComAdobeGraniteQueries() const {
    return com_adobe_granite_queries;
}
void
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setComAdobeGraniteQueries(const OAIConfigNodePropertyString &com_adobe_granite_queries) {
    this->com_adobe_granite_queries = com_adobe_granite_queries;
    this->m_com_adobe_granite_queries_isSet = true;
}

OAIConfigNodePropertyString
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getComAdobeGraniteReplicationHcImpl() const {
    return com_adobe_granite_replication_hc_impl;
}
void
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setComAdobeGraniteReplicationHcImpl(const OAIConfigNodePropertyString &com_adobe_granite_replication_hc_impl) {
    this->com_adobe_granite_replication_hc_impl = com_adobe_granite_replication_hc_impl;
    this->m_com_adobe_granite_replication_hc_impl_isSet = true;
}

OAIConfigNodePropertyString
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getComAdobeGraniteRepositoryChecker() const {
    return com_adobe_granite_repository_checker;
}
void
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setComAdobeGraniteRepositoryChecker(const OAIConfigNodePropertyString &com_adobe_granite_repository_checker) {
    this->com_adobe_granite_repository_checker = com_adobe_granite_repository_checker;
    this->m_com_adobe_granite_repository_checker_isSet = true;
}

OAIConfigNodePropertyString
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getComAdobeGraniteRepositoryHcImpl() const {
    return com_adobe_granite_repository_hc_impl;
}
void
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setComAdobeGraniteRepositoryHcImpl(const OAIConfigNodePropertyString &com_adobe_granite_repository_hc_impl) {
    this->com_adobe_granite_repository_hc_impl = com_adobe_granite_repository_hc_impl;
    this->m_com_adobe_granite_repository_hc_impl_isSet = true;
}

OAIConfigNodePropertyString
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getComAdobeGraniteRestAssets() const {
    return com_adobe_granite_rest_assets;
}
void
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setComAdobeGraniteRestAssets(const OAIConfigNodePropertyString &com_adobe_granite_rest_assets) {
    this->com_adobe_granite_rest_assets = com_adobe_granite_rest_assets;
    this->m_com_adobe_granite_rest_assets_isSet = true;
}

OAIConfigNodePropertyString
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getComAdobeGraniteSecurityUi() const {
    return com_adobe_granite_security_ui;
}
void
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setComAdobeGraniteSecurityUi(const OAIConfigNodePropertyString &com_adobe_granite_security_ui) {
    this->com_adobe_granite_security_ui = com_adobe_granite_security_ui;
    this->m_com_adobe_granite_security_ui_isSet = true;
}

OAIConfigNodePropertyString
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getComAdobeGraniteStartup() const {
    return com_adobe_granite_startup;
}
void
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setComAdobeGraniteStartup(const OAIConfigNodePropertyString &com_adobe_granite_startup) {
    this->com_adobe_granite_startup = com_adobe_granite_startup;
    this->m_com_adobe_granite_startup_isSet = true;
}

OAIConfigNodePropertyString
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getComAdobeGraniteTagsoup() const {
    return com_adobe_granite_tagsoup;
}
void
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setComAdobeGraniteTagsoup(const OAIConfigNodePropertyString &com_adobe_granite_tagsoup) {
    this->com_adobe_granite_tagsoup = com_adobe_granite_tagsoup;
    this->m_com_adobe_granite_tagsoup_isSet = true;
}

OAIConfigNodePropertyString
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getComAdobeGraniteTaskmanagementCore() const {
    return com_adobe_granite_taskmanagement_core;
}
void
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setComAdobeGraniteTaskmanagementCore(const OAIConfigNodePropertyString &com_adobe_granite_taskmanagement_core) {
    this->com_adobe_granite_taskmanagement_core = com_adobe_granite_taskmanagement_core;
    this->m_com_adobe_granite_taskmanagement_core_isSet = true;
}

OAIConfigNodePropertyString
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getComAdobeGraniteTaskmanagementWorkflow() const {
    return com_adobe_granite_taskmanagement_workflow;
}
void
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setComAdobeGraniteTaskmanagementWorkflow(const OAIConfigNodePropertyString &com_adobe_granite_taskmanagement_workflow) {
    this->com_adobe_granite_taskmanagement_workflow = com_adobe_granite_taskmanagement_workflow;
    this->m_com_adobe_granite_taskmanagement_workflow_isSet = true;
}

OAIConfigNodePropertyString
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getComAdobeGraniteUiClientlibsCompilerLess() const {
    return com_adobe_granite_ui_clientlibs_compiler_less;
}
void
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setComAdobeGraniteUiClientlibsCompilerLess(const OAIConfigNodePropertyString &com_adobe_granite_ui_clientlibs_compiler_less) {
    this->com_adobe_granite_ui_clientlibs_compiler_less = com_adobe_granite_ui_clientlibs_compiler_less;
    this->m_com_adobe_granite_ui_clientlibs_compiler_less_isSet = true;
}

OAIConfigNodePropertyString
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getComAdobeGraniteUiClientlibsProcessorGcc() const {
    return com_adobe_granite_ui_clientlibs_processor_gcc;
}
void
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setComAdobeGraniteUiClientlibsProcessorGcc(const OAIConfigNodePropertyString &com_adobe_granite_ui_clientlibs_processor_gcc) {
    this->com_adobe_granite_ui_clientlibs_processor_gcc = com_adobe_granite_ui_clientlibs_processor_gcc;
    this->m_com_adobe_granite_ui_clientlibs_processor_gcc_isSet = true;
}

OAIConfigNodePropertyString
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getComAdobeGraniteWebconsolePlugins() const {
    return com_adobe_granite_webconsole_plugins;
}
void
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setComAdobeGraniteWebconsolePlugins(const OAIConfigNodePropertyString &com_adobe_granite_webconsole_plugins) {
    this->com_adobe_granite_webconsole_plugins = com_adobe_granite_webconsole_plugins;
    this->m_com_adobe_granite_webconsole_plugins_isSet = true;
}

OAIConfigNodePropertyString
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getComAdobeGraniteWorkflowConsole() const {
    return com_adobe_granite_workflow_console;
}
void
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setComAdobeGraniteWorkflowConsole(const OAIConfigNodePropertyString &com_adobe_granite_workflow_console) {
    this->com_adobe_granite_workflow_console = com_adobe_granite_workflow_console;
    this->m_com_adobe_granite_workflow_console_isSet = true;
}

OAIConfigNodePropertyString
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getComAdobeXmpWorkerFilesNativeFragmentLinux() const {
    return com_adobe_xmp_worker_files_native_fragment_linux;
}
void
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setComAdobeXmpWorkerFilesNativeFragmentLinux(const OAIConfigNodePropertyString &com_adobe_xmp_worker_files_native_fragment_linux) {
    this->com_adobe_xmp_worker_files_native_fragment_linux = com_adobe_xmp_worker_files_native_fragment_linux;
    this->m_com_adobe_xmp_worker_files_native_fragment_linux_isSet = true;
}

OAIConfigNodePropertyString
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getComAdobeXmpWorkerFilesNativeFragmentMacosx() const {
    return com_adobe_xmp_worker_files_native_fragment_macosx;
}
void
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setComAdobeXmpWorkerFilesNativeFragmentMacosx(const OAIConfigNodePropertyString &com_adobe_xmp_worker_files_native_fragment_macosx) {
    this->com_adobe_xmp_worker_files_native_fragment_macosx = com_adobe_xmp_worker_files_native_fragment_macosx;
    this->m_com_adobe_xmp_worker_files_native_fragment_macosx_isSet = true;
}

OAIConfigNodePropertyString
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getComAdobeXmpWorkerFilesNativeFragmentWin() const {
    return com_adobe_xmp_worker_files_native_fragment_win;
}
void
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setComAdobeXmpWorkerFilesNativeFragmentWin(const OAIConfigNodePropertyString &com_adobe_xmp_worker_files_native_fragment_win) {
    this->com_adobe_xmp_worker_files_native_fragment_win = com_adobe_xmp_worker_files_native_fragment_win;
    this->m_com_adobe_xmp_worker_files_native_fragment_win_isSet = true;
}

OAIConfigNodePropertyString
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getComDayCommonsOsgiWrapperSimpleJndi() const {
    return com_day_commons_osgi_wrapper_simple_jndi;
}
void
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setComDayCommonsOsgiWrapperSimpleJndi(const OAIConfigNodePropertyString &com_day_commons_osgi_wrapper_simple_jndi) {
    this->com_day_commons_osgi_wrapper_simple_jndi = com_day_commons_osgi_wrapper_simple_jndi;
    this->m_com_day_commons_osgi_wrapper_simple_jndi_isSet = true;
}

OAIConfigNodePropertyString
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getComDayCqCqAuthhandler() const {
    return com_day_cq_cq_authhandler;
}
void
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setComDayCqCqAuthhandler(const OAIConfigNodePropertyString &com_day_cq_cq_authhandler) {
    this->com_day_cq_cq_authhandler = com_day_cq_cq_authhandler;
    this->m_com_day_cq_cq_authhandler_isSet = true;
}

OAIConfigNodePropertyString
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getComDayCqCqCompatConfigupdate() const {
    return com_day_cq_cq_compat_configupdate;
}
void
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setComDayCqCqCompatConfigupdate(const OAIConfigNodePropertyString &com_day_cq_cq_compat_configupdate) {
    this->com_day_cq_cq_compat_configupdate = com_day_cq_cq_compat_configupdate;
    this->m_com_day_cq_cq_compat_configupdate_isSet = true;
}

OAIConfigNodePropertyString
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getComDayCqCqLicensebranding() const {
    return com_day_cq_cq_licensebranding;
}
void
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setComDayCqCqLicensebranding(const OAIConfigNodePropertyString &com_day_cq_cq_licensebranding) {
    this->com_day_cq_cq_licensebranding = com_day_cq_cq_licensebranding;
    this->m_com_day_cq_cq_licensebranding_isSet = true;
}

OAIConfigNodePropertyString
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getComDayCqCqNotifcationImpl() const {
    return com_day_cq_cq_notifcation_impl;
}
void
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setComDayCqCqNotifcationImpl(const OAIConfigNodePropertyString &com_day_cq_cq_notifcation_impl) {
    this->com_day_cq_cq_notifcation_impl = com_day_cq_cq_notifcation_impl;
    this->m_com_day_cq_cq_notifcation_impl_isSet = true;
}

OAIConfigNodePropertyString
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getComDayCqCqReplicationAudit() const {
    return com_day_cq_cq_replication_audit;
}
void
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setComDayCqCqReplicationAudit(const OAIConfigNodePropertyString &com_day_cq_cq_replication_audit) {
    this->com_day_cq_cq_replication_audit = com_day_cq_cq_replication_audit;
    this->m_com_day_cq_cq_replication_audit_isSet = true;
}

OAIConfigNodePropertyString
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getComDayCqCqSearchExt() const {
    return com_day_cq_cq_search_ext;
}
void
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setComDayCqCqSearchExt(const OAIConfigNodePropertyString &com_day_cq_cq_search_ext) {
    this->com_day_cq_cq_search_ext = com_day_cq_cq_search_ext;
    this->m_com_day_cq_cq_search_ext_isSet = true;
}

OAIConfigNodePropertyString
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getComDayCqDamCqDamAnnotationPrint() const {
    return com_day_cq_dam_cq_dam_annotation_print;
}
void
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setComDayCqDamCqDamAnnotationPrint(const OAIConfigNodePropertyString &com_day_cq_dam_cq_dam_annotation_print) {
    this->com_day_cq_dam_cq_dam_annotation_print = com_day_cq_dam_cq_dam_annotation_print;
    this->m_com_day_cq_dam_cq_dam_annotation_print_isSet = true;
}

OAIConfigNodePropertyString
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getComDayCqDamCqDamAssetUsage() const {
    return com_day_cq_dam_cq_dam_asset_usage;
}
void
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setComDayCqDamCqDamAssetUsage(const OAIConfigNodePropertyString &com_day_cq_dam_cq_dam_asset_usage) {
    this->com_day_cq_dam_cq_dam_asset_usage = com_day_cq_dam_cq_dam_asset_usage;
    this->m_com_day_cq_dam_cq_dam_asset_usage_isSet = true;
}

OAIConfigNodePropertyString
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getComDayCqDamCqDamS7dam() const {
    return com_day_cq_dam_cq_dam_s7dam;
}
void
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setComDayCqDamCqDamS7dam(const OAIConfigNodePropertyString &com_day_cq_dam_cq_dam_s7dam) {
    this->com_day_cq_dam_cq_dam_s7dam = com_day_cq_dam_cq_dam_s7dam;
    this->m_com_day_cq_dam_cq_dam_s7dam_isSet = true;
}

OAIConfigNodePropertyString
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getComDayCqDamCqDamSimilaritysearch() const {
    return com_day_cq_dam_cq_dam_similaritysearch;
}
void
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setComDayCqDamCqDamSimilaritysearch(const OAIConfigNodePropertyString &com_day_cq_dam_cq_dam_similaritysearch) {
    this->com_day_cq_dam_cq_dam_similaritysearch = com_day_cq_dam_cq_dam_similaritysearch;
    this->m_com_day_cq_dam_cq_dam_similaritysearch_isSet = true;
}

OAIConfigNodePropertyString
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getComDayCqDamDamWebdavSupport() const {
    return com_day_cq_dam_dam_webdav_support;
}
void
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setComDayCqDamDamWebdavSupport(const OAIConfigNodePropertyString &com_day_cq_dam_dam_webdav_support) {
    this->com_day_cq_dam_dam_webdav_support = com_day_cq_dam_dam_webdav_support;
    this->m_com_day_cq_dam_dam_webdav_support_isSet = true;
}

OAIConfigNodePropertyString
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getComDayCqPreUpgradeTasks() const {
    return com_day_cq_pre_upgrade_tasks;
}
void
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setComDayCqPreUpgradeTasks(const OAIConfigNodePropertyString &com_day_cq_pre_upgrade_tasks) {
    this->com_day_cq_pre_upgrade_tasks = com_day_cq_pre_upgrade_tasks;
    this->m_com_day_cq_pre_upgrade_tasks_isSet = true;
}

OAIConfigNodePropertyString
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getComDayCqReplicationExtensions() const {
    return com_day_cq_replication_extensions;
}
void
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setComDayCqReplicationExtensions(const OAIConfigNodePropertyString &com_day_cq_replication_extensions) {
    this->com_day_cq_replication_extensions = com_day_cq_replication_extensions;
    this->m_com_day_cq_replication_extensions_isSet = true;
}

OAIConfigNodePropertyString
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getComDayCqWcmCqMsmCore() const {
    return com_day_cq_wcm_cq_msm_core;
}
void
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setComDayCqWcmCqMsmCore(const OAIConfigNodePropertyString &com_day_cq_wcm_cq_msm_core) {
    this->com_day_cq_wcm_cq_msm_core = com_day_cq_wcm_cq_msm_core;
    this->m_com_day_cq_wcm_cq_msm_core_isSet = true;
}

OAIConfigNodePropertyString
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getComDayCqWcmCqWcmTranslation() const {
    return com_day_cq_wcm_cq_wcm_translation;
}
void
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setComDayCqWcmCqWcmTranslation(const OAIConfigNodePropertyString &com_day_cq_wcm_cq_wcm_translation) {
    this->com_day_cq_wcm_cq_wcm_translation = com_day_cq_wcm_cq_wcm_translation;
    this->m_com_day_cq_wcm_cq_wcm_translation_isSet = true;
}

OAIConfigNodePropertyString
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getDayCommonsJrawio() const {
    return day_commons_jrawio;
}
void
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setDayCommonsJrawio(const OAIConfigNodePropertyString &day_commons_jrawio) {
    this->day_commons_jrawio = day_commons_jrawio;
    this->m_day_commons_jrawio_isSet = true;
}

OAIConfigNodePropertyString
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getOrgApacheAriesJmxWhiteboard() const {
    return org_apache_aries_jmx_whiteboard;
}
void
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setOrgApacheAriesJmxWhiteboard(const OAIConfigNodePropertyString &org_apache_aries_jmx_whiteboard) {
    this->org_apache_aries_jmx_whiteboard = org_apache_aries_jmx_whiteboard;
    this->m_org_apache_aries_jmx_whiteboard_isSet = true;
}

OAIConfigNodePropertyString
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getOrgApacheFelixHttpSslfilter() const {
    return org_apache_felix_http_sslfilter;
}
void
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setOrgApacheFelixHttpSslfilter(const OAIConfigNodePropertyString &org_apache_felix_http_sslfilter) {
    this->org_apache_felix_http_sslfilter = org_apache_felix_http_sslfilter;
    this->m_org_apache_felix_http_sslfilter_isSet = true;
}

OAIConfigNodePropertyString
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getOrgApacheFelixOrgApacheFelixThreaddump() const {
    return org_apache_felix_org_apache_felix_threaddump;
}
void
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setOrgApacheFelixOrgApacheFelixThreaddump(const OAIConfigNodePropertyString &org_apache_felix_org_apache_felix_threaddump) {
    this->org_apache_felix_org_apache_felix_threaddump = org_apache_felix_org_apache_felix_threaddump;
    this->m_org_apache_felix_org_apache_felix_threaddump_isSet = true;
}

OAIConfigNodePropertyString
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getOrgApacheFelixWebconsolePluginsDs() const {
    return org_apache_felix_webconsole_plugins_ds;
}
void
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setOrgApacheFelixWebconsolePluginsDs(const OAIConfigNodePropertyString &org_apache_felix_webconsole_plugins_ds) {
    this->org_apache_felix_webconsole_plugins_ds = org_apache_felix_webconsole_plugins_ds;
    this->m_org_apache_felix_webconsole_plugins_ds_isSet = true;
}

OAIConfigNodePropertyString
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getOrgApacheFelixWebconsolePluginsEvent() const {
    return org_apache_felix_webconsole_plugins_event;
}
void
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setOrgApacheFelixWebconsolePluginsEvent(const OAIConfigNodePropertyString &org_apache_felix_webconsole_plugins_event) {
    this->org_apache_felix_webconsole_plugins_event = org_apache_felix_webconsole_plugins_event;
    this->m_org_apache_felix_webconsole_plugins_event_isSet = true;
}

OAIConfigNodePropertyString
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getOrgApacheFelixWebconsolePluginsMemoryusage() const {
    return org_apache_felix_webconsole_plugins_memoryusage;
}
void
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setOrgApacheFelixWebconsolePluginsMemoryusage(const OAIConfigNodePropertyString &org_apache_felix_webconsole_plugins_memoryusage) {
    this->org_apache_felix_webconsole_plugins_memoryusage = org_apache_felix_webconsole_plugins_memoryusage;
    this->m_org_apache_felix_webconsole_plugins_memoryusage_isSet = true;
}

OAIConfigNodePropertyString
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getOrgApacheFelixWebconsolePluginsPackageadmin() const {
    return org_apache_felix_webconsole_plugins_packageadmin;
}
void
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setOrgApacheFelixWebconsolePluginsPackageadmin(const OAIConfigNodePropertyString &org_apache_felix_webconsole_plugins_packageadmin) {
    this->org_apache_felix_webconsole_plugins_packageadmin = org_apache_felix_webconsole_plugins_packageadmin;
    this->m_org_apache_felix_webconsole_plugins_packageadmin_isSet = true;
}

OAIConfigNodePropertyString
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getOrgApacheJackrabbitOakAuthLdap() const {
    return org_apache_jackrabbit_oak_auth_ldap;
}
void
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setOrgApacheJackrabbitOakAuthLdap(const OAIConfigNodePropertyString &org_apache_jackrabbit_oak_auth_ldap) {
    this->org_apache_jackrabbit_oak_auth_ldap = org_apache_jackrabbit_oak_auth_ldap;
    this->m_org_apache_jackrabbit_oak_auth_ldap_isSet = true;
}

OAIConfigNodePropertyString
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getOrgApacheJackrabbitOakSegmentTar() const {
    return org_apache_jackrabbit_oak_segment_tar;
}
void
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setOrgApacheJackrabbitOakSegmentTar(const OAIConfigNodePropertyString &org_apache_jackrabbit_oak_segment_tar) {
    this->org_apache_jackrabbit_oak_segment_tar = org_apache_jackrabbit_oak_segment_tar;
    this->m_org_apache_jackrabbit_oak_segment_tar_isSet = true;
}

OAIConfigNodePropertyString
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getOrgApacheJackrabbitOakSolrOsgi() const {
    return org_apache_jackrabbit_oak_solr_osgi;
}
void
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setOrgApacheJackrabbitOakSolrOsgi(const OAIConfigNodePropertyString &org_apache_jackrabbit_oak_solr_osgi) {
    this->org_apache_jackrabbit_oak_solr_osgi = org_apache_jackrabbit_oak_solr_osgi;
    this->m_org_apache_jackrabbit_oak_solr_osgi_isSet = true;
}

OAIConfigNodePropertyString
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getOrgApacheSlingBundleresourceImpl() const {
    return org_apache_sling_bundleresource_impl;
}
void
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setOrgApacheSlingBundleresourceImpl(const OAIConfigNodePropertyString &org_apache_sling_bundleresource_impl) {
    this->org_apache_sling_bundleresource_impl = org_apache_sling_bundleresource_impl;
    this->m_org_apache_sling_bundleresource_impl_isSet = true;
}

OAIConfigNodePropertyString
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getOrgApacheSlingCommonsFsclassloader() const {
    return org_apache_sling_commons_fsclassloader;
}
void
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setOrgApacheSlingCommonsFsclassloader(const OAIConfigNodePropertyString &org_apache_sling_commons_fsclassloader) {
    this->org_apache_sling_commons_fsclassloader = org_apache_sling_commons_fsclassloader;
    this->m_org_apache_sling_commons_fsclassloader_isSet = true;
}

OAIConfigNodePropertyString
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getOrgApacheSlingCommonsLogWebconsole() const {
    return org_apache_sling_commons_log_webconsole;
}
void
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setOrgApacheSlingCommonsLogWebconsole(const OAIConfigNodePropertyString &org_apache_sling_commons_log_webconsole) {
    this->org_apache_sling_commons_log_webconsole = org_apache_sling_commons_log_webconsole;
    this->m_org_apache_sling_commons_log_webconsole_isSet = true;
}

OAIConfigNodePropertyString
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getOrgApacheSlingDatasource() const {
    return org_apache_sling_datasource;
}
void
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setOrgApacheSlingDatasource(const OAIConfigNodePropertyString &org_apache_sling_datasource) {
    this->org_apache_sling_datasource = org_apache_sling_datasource;
    this->m_org_apache_sling_datasource_isSet = true;
}

OAIConfigNodePropertyString
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getOrgApacheSlingDiscoveryBase() const {
    return org_apache_sling_discovery_base;
}
void
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setOrgApacheSlingDiscoveryBase(const OAIConfigNodePropertyString &org_apache_sling_discovery_base) {
    this->org_apache_sling_discovery_base = org_apache_sling_discovery_base;
    this->m_org_apache_sling_discovery_base_isSet = true;
}

OAIConfigNodePropertyString
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getOrgApacheSlingDiscoveryOak() const {
    return org_apache_sling_discovery_oak;
}
void
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setOrgApacheSlingDiscoveryOak(const OAIConfigNodePropertyString &org_apache_sling_discovery_oak) {
    this->org_apache_sling_discovery_oak = org_apache_sling_discovery_oak;
    this->m_org_apache_sling_discovery_oak_isSet = true;
}

OAIConfigNodePropertyString
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getOrgApacheSlingDiscoverySupport() const {
    return org_apache_sling_discovery_support;
}
void
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setOrgApacheSlingDiscoverySupport(const OAIConfigNodePropertyString &org_apache_sling_discovery_support) {
    this->org_apache_sling_discovery_support = org_apache_sling_discovery_support;
    this->m_org_apache_sling_discovery_support_isSet = true;
}

OAIConfigNodePropertyString
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getOrgApacheSlingDistributionApi() const {
    return org_apache_sling_distribution_api;
}
void
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setOrgApacheSlingDistributionApi(const OAIConfigNodePropertyString &org_apache_sling_distribution_api) {
    this->org_apache_sling_distribution_api = org_apache_sling_distribution_api;
    this->m_org_apache_sling_distribution_api_isSet = true;
}

OAIConfigNodePropertyString
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getOrgApacheSlingDistributionCore() const {
    return org_apache_sling_distribution_core;
}
void
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setOrgApacheSlingDistributionCore(const OAIConfigNodePropertyString &org_apache_sling_distribution_core) {
    this->org_apache_sling_distribution_core = org_apache_sling_distribution_core;
    this->m_org_apache_sling_distribution_core_isSet = true;
}

OAIConfigNodePropertyString
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getOrgApacheSlingExtensionsWebconsolesecurityprovider() const {
    return org_apache_sling_extensions_webconsolesecurityprovider;
}
void
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setOrgApacheSlingExtensionsWebconsolesecurityprovider(const OAIConfigNodePropertyString &org_apache_sling_extensions_webconsolesecurityprovider) {
    this->org_apache_sling_extensions_webconsolesecurityprovider = org_apache_sling_extensions_webconsolesecurityprovider;
    this->m_org_apache_sling_extensions_webconsolesecurityprovider_isSet = true;
}

OAIConfigNodePropertyString
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getOrgApacheSlingHcWebconsole() const {
    return org_apache_sling_hc_webconsole;
}
void
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setOrgApacheSlingHcWebconsole(const OAIConfigNodePropertyString &org_apache_sling_hc_webconsole) {
    this->org_apache_sling_hc_webconsole = org_apache_sling_hc_webconsole;
    this->m_org_apache_sling_hc_webconsole_isSet = true;
}

OAIConfigNodePropertyString
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getOrgApacheSlingInstallerConsole() const {
    return org_apache_sling_installer_console;
}
void
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setOrgApacheSlingInstallerConsole(const OAIConfigNodePropertyString &org_apache_sling_installer_console) {
    this->org_apache_sling_installer_console = org_apache_sling_installer_console;
    this->m_org_apache_sling_installer_console_isSet = true;
}

OAIConfigNodePropertyString
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getOrgApacheSlingInstallerProviderFile() const {
    return org_apache_sling_installer_provider_file;
}
void
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setOrgApacheSlingInstallerProviderFile(const OAIConfigNodePropertyString &org_apache_sling_installer_provider_file) {
    this->org_apache_sling_installer_provider_file = org_apache_sling_installer_provider_file;
    this->m_org_apache_sling_installer_provider_file_isSet = true;
}

OAIConfigNodePropertyString
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getOrgApacheSlingInstallerProviderJcr() const {
    return org_apache_sling_installer_provider_jcr;
}
void
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setOrgApacheSlingInstallerProviderJcr(const OAIConfigNodePropertyString &org_apache_sling_installer_provider_jcr) {
    this->org_apache_sling_installer_provider_jcr = org_apache_sling_installer_provider_jcr;
    this->m_org_apache_sling_installer_provider_jcr_isSet = true;
}

OAIConfigNodePropertyString
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getOrgApacheSlingJcrDavex() const {
    return org_apache_sling_jcr_davex;
}
void
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setOrgApacheSlingJcrDavex(const OAIConfigNodePropertyString &org_apache_sling_jcr_davex) {
    this->org_apache_sling_jcr_davex = org_apache_sling_jcr_davex;
    this->m_org_apache_sling_jcr_davex_isSet = true;
}

OAIConfigNodePropertyString
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getOrgApacheSlingJcrResourcesecurity() const {
    return org_apache_sling_jcr_resourcesecurity;
}
void
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setOrgApacheSlingJcrResourcesecurity(const OAIConfigNodePropertyString &org_apache_sling_jcr_resourcesecurity) {
    this->org_apache_sling_jcr_resourcesecurity = org_apache_sling_jcr_resourcesecurity;
    this->m_org_apache_sling_jcr_resourcesecurity_isSet = true;
}

OAIConfigNodePropertyString
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getOrgApacheSlingJmxProvider() const {
    return org_apache_sling_jmx_provider;
}
void
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setOrgApacheSlingJmxProvider(const OAIConfigNodePropertyString &org_apache_sling_jmx_provider) {
    this->org_apache_sling_jmx_provider = org_apache_sling_jmx_provider;
    this->m_org_apache_sling_jmx_provider_isSet = true;
}

OAIConfigNodePropertyString
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getOrgApacheSlingLaunchpadInstaller() const {
    return org_apache_sling_launchpad_installer;
}
void
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setOrgApacheSlingLaunchpadInstaller(const OAIConfigNodePropertyString &org_apache_sling_launchpad_installer) {
    this->org_apache_sling_launchpad_installer = org_apache_sling_launchpad_installer;
    this->m_org_apache_sling_launchpad_installer_isSet = true;
}

OAIConfigNodePropertyString
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getOrgApacheSlingModelsImpl() const {
    return org_apache_sling_models_impl;
}
void
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setOrgApacheSlingModelsImpl(const OAIConfigNodePropertyString &org_apache_sling_models_impl) {
    this->org_apache_sling_models_impl = org_apache_sling_models_impl;
    this->m_org_apache_sling_models_impl_isSet = true;
}

OAIConfigNodePropertyString
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getOrgApacheSlingRepoinitParser() const {
    return org_apache_sling_repoinit_parser;
}
void
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setOrgApacheSlingRepoinitParser(const OAIConfigNodePropertyString &org_apache_sling_repoinit_parser) {
    this->org_apache_sling_repoinit_parser = org_apache_sling_repoinit_parser;
    this->m_org_apache_sling_repoinit_parser_isSet = true;
}

OAIConfigNodePropertyString
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getOrgApacheSlingResourceInventory() const {
    return org_apache_sling_resource_inventory;
}
void
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setOrgApacheSlingResourceInventory(const OAIConfigNodePropertyString &org_apache_sling_resource_inventory) {
    this->org_apache_sling_resource_inventory = org_apache_sling_resource_inventory;
    this->m_org_apache_sling_resource_inventory_isSet = true;
}

OAIConfigNodePropertyString
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getOrgApacheSlingResourceresolver() const {
    return org_apache_sling_resourceresolver;
}
void
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setOrgApacheSlingResourceresolver(const OAIConfigNodePropertyString &org_apache_sling_resourceresolver) {
    this->org_apache_sling_resourceresolver = org_apache_sling_resourceresolver;
    this->m_org_apache_sling_resourceresolver_isSet = true;
}

OAIConfigNodePropertyString
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getOrgApacheSlingScriptingJavascript() const {
    return org_apache_sling_scripting_javascript;
}
void
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setOrgApacheSlingScriptingJavascript(const OAIConfigNodePropertyString &org_apache_sling_scripting_javascript) {
    this->org_apache_sling_scripting_javascript = org_apache_sling_scripting_javascript;
    this->m_org_apache_sling_scripting_javascript_isSet = true;
}

OAIConfigNodePropertyString
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getOrgApacheSlingScriptingJst() const {
    return org_apache_sling_scripting_jst;
}
void
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setOrgApacheSlingScriptingJst(const OAIConfigNodePropertyString &org_apache_sling_scripting_jst) {
    this->org_apache_sling_scripting_jst = org_apache_sling_scripting_jst;
    this->m_org_apache_sling_scripting_jst_isSet = true;
}

OAIConfigNodePropertyString
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getOrgApacheSlingScriptingSightlyJsProvider() const {
    return org_apache_sling_scripting_sightly_js_provider;
}
void
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setOrgApacheSlingScriptingSightlyJsProvider(const OAIConfigNodePropertyString &org_apache_sling_scripting_sightly_js_provider) {
    this->org_apache_sling_scripting_sightly_js_provider = org_apache_sling_scripting_sightly_js_provider;
    this->m_org_apache_sling_scripting_sightly_js_provider_isSet = true;
}

OAIConfigNodePropertyString
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getOrgApacheSlingScriptingSightlyModelsProvider() const {
    return org_apache_sling_scripting_sightly_models_provider;
}
void
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setOrgApacheSlingScriptingSightlyModelsProvider(const OAIConfigNodePropertyString &org_apache_sling_scripting_sightly_models_provider) {
    this->org_apache_sling_scripting_sightly_models_provider = org_apache_sling_scripting_sightly_models_provider;
    this->m_org_apache_sling_scripting_sightly_models_provider_isSet = true;
}

OAIConfigNodePropertyString
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getOrgApacheSlingSecurity() const {
    return org_apache_sling_security;
}
void
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setOrgApacheSlingSecurity(const OAIConfigNodePropertyString &org_apache_sling_security) {
    this->org_apache_sling_security = org_apache_sling_security;
    this->m_org_apache_sling_security_isSet = true;
}

OAIConfigNodePropertyString
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getOrgApacheSlingServletsCompat() const {
    return org_apache_sling_servlets_compat;
}
void
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setOrgApacheSlingServletsCompat(const OAIConfigNodePropertyString &org_apache_sling_servlets_compat) {
    this->org_apache_sling_servlets_compat = org_apache_sling_servlets_compat;
    this->m_org_apache_sling_servlets_compat_isSet = true;
}

OAIConfigNodePropertyString
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getOrgApacheSlingServletsGet() const {
    return org_apache_sling_servlets_get;
}
void
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setOrgApacheSlingServletsGet(const OAIConfigNodePropertyString &org_apache_sling_servlets_get) {
    this->org_apache_sling_servlets_get = org_apache_sling_servlets_get;
    this->m_org_apache_sling_servlets_get_isSet = true;
}

OAIConfigNodePropertyString
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getOrgApacheSlingStartupfilterDisabler() const {
    return org_apache_sling_startupfilter_disabler;
}
void
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setOrgApacheSlingStartupfilterDisabler(const OAIConfigNodePropertyString &org_apache_sling_startupfilter_disabler) {
    this->org_apache_sling_startupfilter_disabler = org_apache_sling_startupfilter_disabler;
    this->m_org_apache_sling_startupfilter_disabler_isSet = true;
}

OAIConfigNodePropertyString
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getOrgApacheSlingTracer() const {
    return org_apache_sling_tracer;
}
void
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setOrgApacheSlingTracer(const OAIConfigNodePropertyString &org_apache_sling_tracer) {
    this->org_apache_sling_tracer = org_apache_sling_tracer;
    this->m_org_apache_sling_tracer_isSet = true;
}

OAIConfigNodePropertyString
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getWeRetailClientAppCore() const {
    return we_retail_client_app_core;
}
void
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setWeRetailClientAppCore(const OAIConfigNodePropertyString &we_retail_client_app_core) {
    this->we_retail_client_app_core = we_retail_client_app_core;
    this->m_we_retail_client_app_core_isSet = true;
}


bool
OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::isSet() const {
    bool isObjectUpdated = false;
    do{ 
        if(com_adobe_cq_cdn_cdn_rewriter.isSet()){ isObjectUpdated = true; break;}
    
        if(com_adobe_cq_cloud_config_components.isSet()){ isObjectUpdated = true; break;}
    
        if(com_adobe_cq_cloud_config_core.isSet()){ isObjectUpdated = true; break;}
    
        if(com_adobe_cq_cloud_config_ui.isSet()){ isObjectUpdated = true; break;}
    
        if(com_adobe_cq_com_adobe_cq_editor.isSet()){ isObjectUpdated = true; break;}
    
        if(com_adobe_cq_com_adobe_cq_projects_core.isSet()){ isObjectUpdated = true; break;}
    
        if(com_adobe_cq_com_adobe_cq_projects_wcm_core.isSet()){ isObjectUpdated = true; break;}
    
        if(com_adobe_cq_com_adobe_cq_ui_commons.isSet()){ isObjectUpdated = true; break;}
    
        if(com_adobe_cq_com_adobe_cq_wcm_style.isSet()){ isObjectUpdated = true; break;}
    
        if(com_adobe_cq_cq_activitymap_integration.isSet()){ isObjectUpdated = true; break;}
    
        if(com_adobe_cq_cq_contexthub_commons.isSet()){ isObjectUpdated = true; break;}
    
        if(com_adobe_cq_cq_dtm.isSet()){ isObjectUpdated = true; break;}
    
        if(com_adobe_cq_cq_healthcheck.isSet()){ isObjectUpdated = true; break;}
    
        if(com_adobe_cq_cq_multisite_targeting.isSet()){ isObjectUpdated = true; break;}
    
        if(com_adobe_cq_cq_pre_upgrade_cleanup.isSet()){ isObjectUpdated = true; break;}
    
        if(com_adobe_cq_cq_product_info_provider.isSet()){ isObjectUpdated = true; break;}
    
        if(com_adobe_cq_cq_rest_sites.isSet()){ isObjectUpdated = true; break;}
    
        if(com_adobe_cq_cq_security_hc.isSet()){ isObjectUpdated = true; break;}
    
        if(com_adobe_cq_dam_cq_dam_svg_handler.isSet()){ isObjectUpdated = true; break;}
    
        if(com_adobe_cq_dam_cq_scene7_imaging.isSet()){ isObjectUpdated = true; break;}
    
        if(com_adobe_cq_dtm_reactor_core.isSet()){ isObjectUpdated = true; break;}
    
        if(com_adobe_cq_dtm_reactor_ui.isSet()){ isObjectUpdated = true; break;}
    
        if(com_adobe_cq_exp_jspel_resolver.isSet()){ isObjectUpdated = true; break;}
    
        if(com_adobe_cq_inbox_cq_inbox.isSet()){ isObjectUpdated = true; break;}
    
        if(com_adobe_cq_json_schema_parser.isSet()){ isObjectUpdated = true; break;}
    
        if(com_adobe_cq_media_cq_media_publishing_dps_fp_core.isSet()){ isObjectUpdated = true; break;}
    
        if(com_adobe_cq_mobile_cq_mobile_caas.isSet()){ isObjectUpdated = true; break;}
    
        if(com_adobe_cq_mobile_cq_mobile_index_builder.isSet()){ isObjectUpdated = true; break;}
    
        if(com_adobe_cq_mobile_cq_mobile_phonegap_build.isSet()){ isObjectUpdated = true; break;}
    
        if(com_adobe_cq_myspell.isSet()){ isObjectUpdated = true; break;}
    
        if(com_adobe_cq_sample_we_retail_core.isSet()){ isObjectUpdated = true; break;}
    
        if(com_adobe_cq_screens_com_adobe_cq_screens_dcc.isSet()){ isObjectUpdated = true; break;}
    
        if(com_adobe_cq_screens_com_adobe_cq_screens_mq_core.isSet()){ isObjectUpdated = true; break;}
    
        if(com_adobe_cq_social_cq_social_as_provider.isSet()){ isObjectUpdated = true; break;}
    
        if(com_adobe_cq_social_cq_social_badging_basic_impl.isSet()){ isObjectUpdated = true; break;}
    
        if(com_adobe_cq_social_cq_social_badging_impl.isSet()){ isObjectUpdated = true; break;}
    
        if(com_adobe_cq_social_cq_social_calendar_impl.isSet()){ isObjectUpdated = true; break;}
    
        if(com_adobe_cq_social_cq_social_content_fragments_impl.isSet()){ isObjectUpdated = true; break;}
    
        if(com_adobe_cq_social_cq_social_enablement_impl.isSet()){ isObjectUpdated = true; break;}
    
        if(com_adobe_cq_social_cq_social_graph_impl.isSet()){ isObjectUpdated = true; break;}
    
        if(com_adobe_cq_social_cq_social_ideation_impl.isSet()){ isObjectUpdated = true; break;}
    
        if(com_adobe_cq_social_cq_social_jcr_provider.isSet()){ isObjectUpdated = true; break;}
    
        if(com_adobe_cq_social_cq_social_members_impl.isSet()){ isObjectUpdated = true; break;}
    
        if(com_adobe_cq_social_cq_social_ms_provider.isSet()){ isObjectUpdated = true; break;}
    
        if(com_adobe_cq_social_cq_social_notifications_channels_web.isSet()){ isObjectUpdated = true; break;}
    
        if(com_adobe_cq_social_cq_social_notifications_impl.isSet()){ isObjectUpdated = true; break;}
    
        if(com_adobe_cq_social_cq_social_rdb_provider.isSet()){ isObjectUpdated = true; break;}
    
        if(com_adobe_cq_social_cq_social_scf_impl.isSet()){ isObjectUpdated = true; break;}
    
        if(com_adobe_cq_social_cq_social_scoring_basic_impl.isSet()){ isObjectUpdated = true; break;}
    
        if(com_adobe_cq_social_cq_social_scoring_impl.isSet()){ isObjectUpdated = true; break;}
    
        if(com_adobe_cq_social_cq_social_serviceusers_impl.isSet()){ isObjectUpdated = true; break;}
    
        if(com_adobe_cq_social_cq_social_srp_impl.isSet()){ isObjectUpdated = true; break;}
    
        if(com_adobe_cq_social_cq_social_ugcbase_impl.isSet()){ isObjectUpdated = true; break;}
    
        if(com_adobe_dam_cq_dam_cfm_impl.isSet()){ isObjectUpdated = true; break;}
    
        if(com_adobe_forms_foundation_forms_foundation_base.isSet()){ isObjectUpdated = true; break;}
    
        if(com_adobe_granite_apicontroller.isSet()){ isObjectUpdated = true; break;}
    
        if(com_adobe_granite_asset_core.isSet()){ isObjectUpdated = true; break;}
    
        if(com_adobe_granite_auth_sso.isSet()){ isObjectUpdated = true; break;}
    
        if(com_adobe_granite_bundles_hc_impl.isSet()){ isObjectUpdated = true; break;}
    
        if(com_adobe_granite_compat_router.isSet()){ isObjectUpdated = true; break;}
    
        if(com_adobe_granite_conf.isSet()){ isObjectUpdated = true; break;}
    
        if(com_adobe_granite_conf_ui_core.isSet()){ isObjectUpdated = true; break;}
    
        if(com_adobe_granite_cors.isSet()){ isObjectUpdated = true; break;}
    
        if(com_adobe_granite_crx_explorer.isSet()){ isObjectUpdated = true; break;}
    
        if(com_adobe_granite_crxde_lite.isSet()){ isObjectUpdated = true; break;}
    
        if(com_adobe_granite_crypto_config.isSet()){ isObjectUpdated = true; break;}
    
        if(com_adobe_granite_crypto_extension.isSet()){ isObjectUpdated = true; break;}
    
        if(com_adobe_granite_crypto_file.isSet()){ isObjectUpdated = true; break;}
    
        if(com_adobe_granite_crypto_jcr.isSet()){ isObjectUpdated = true; break;}
    
        if(com_adobe_granite_csrf.isSet()){ isObjectUpdated = true; break;}
    
        if(com_adobe_granite_distribution_core.isSet()){ isObjectUpdated = true; break;}
    
        if(com_adobe_granite_dropwizard_metrics.isSet()){ isObjectUpdated = true; break;}
    
        if(com_adobe_granite_frags_impl.isSet()){ isObjectUpdated = true; break;}
    
        if(com_adobe_granite_gibson.isSet()){ isObjectUpdated = true; break;}
    
        if(com_adobe_granite_infocollector.isSet()){ isObjectUpdated = true; break;}
    
        if(com_adobe_granite_installer_factory_packages.isSet()){ isObjectUpdated = true; break;}
    
        if(com_adobe_granite_jetty_ssl.isSet()){ isObjectUpdated = true; break;}
    
        if(com_adobe_granite_jobs_async.isSet()){ isObjectUpdated = true; break;}
    
        if(com_adobe_granite_maintenance_oak.isSet()){ isObjectUpdated = true; break;}
    
        if(com_adobe_granite_monitoring_core.isSet()){ isObjectUpdated = true; break;}
    
        if(com_adobe_granite_queries.isSet()){ isObjectUpdated = true; break;}
    
        if(com_adobe_granite_replication_hc_impl.isSet()){ isObjectUpdated = true; break;}
    
        if(com_adobe_granite_repository_checker.isSet()){ isObjectUpdated = true; break;}
    
        if(com_adobe_granite_repository_hc_impl.isSet()){ isObjectUpdated = true; break;}
    
        if(com_adobe_granite_rest_assets.isSet()){ isObjectUpdated = true; break;}
    
        if(com_adobe_granite_security_ui.isSet()){ isObjectUpdated = true; break;}
    
        if(com_adobe_granite_startup.isSet()){ isObjectUpdated = true; break;}
    
        if(com_adobe_granite_tagsoup.isSet()){ isObjectUpdated = true; break;}
    
        if(com_adobe_granite_taskmanagement_core.isSet()){ isObjectUpdated = true; break;}
    
        if(com_adobe_granite_taskmanagement_workflow.isSet()){ isObjectUpdated = true; break;}
    
        if(com_adobe_granite_ui_clientlibs_compiler_less.isSet()){ isObjectUpdated = true; break;}
    
        if(com_adobe_granite_ui_clientlibs_processor_gcc.isSet()){ isObjectUpdated = true; break;}
    
        if(com_adobe_granite_webconsole_plugins.isSet()){ isObjectUpdated = true; break;}
    
        if(com_adobe_granite_workflow_console.isSet()){ isObjectUpdated = true; break;}
    
        if(com_adobe_xmp_worker_files_native_fragment_linux.isSet()){ isObjectUpdated = true; break;}
    
        if(com_adobe_xmp_worker_files_native_fragment_macosx.isSet()){ isObjectUpdated = true; break;}
    
        if(com_adobe_xmp_worker_files_native_fragment_win.isSet()){ isObjectUpdated = true; break;}
    
        if(com_day_commons_osgi_wrapper_simple_jndi.isSet()){ isObjectUpdated = true; break;}
    
        if(com_day_cq_cq_authhandler.isSet()){ isObjectUpdated = true; break;}
    
        if(com_day_cq_cq_compat_configupdate.isSet()){ isObjectUpdated = true; break;}
    
        if(com_day_cq_cq_licensebranding.isSet()){ isObjectUpdated = true; break;}
    
        if(com_day_cq_cq_notifcation_impl.isSet()){ isObjectUpdated = true; break;}
    
        if(com_day_cq_cq_replication_audit.isSet()){ isObjectUpdated = true; break;}
    
        if(com_day_cq_cq_search_ext.isSet()){ isObjectUpdated = true; break;}
    
        if(com_day_cq_dam_cq_dam_annotation_print.isSet()){ isObjectUpdated = true; break;}
    
        if(com_day_cq_dam_cq_dam_asset_usage.isSet()){ isObjectUpdated = true; break;}
    
        if(com_day_cq_dam_cq_dam_s7dam.isSet()){ isObjectUpdated = true; break;}
    
        if(com_day_cq_dam_cq_dam_similaritysearch.isSet()){ isObjectUpdated = true; break;}
    
        if(com_day_cq_dam_dam_webdav_support.isSet()){ isObjectUpdated = true; break;}
    
        if(com_day_cq_pre_upgrade_tasks.isSet()){ isObjectUpdated = true; break;}
    
        if(com_day_cq_replication_extensions.isSet()){ isObjectUpdated = true; break;}
    
        if(com_day_cq_wcm_cq_msm_core.isSet()){ isObjectUpdated = true; break;}
    
        if(com_day_cq_wcm_cq_wcm_translation.isSet()){ isObjectUpdated = true; break;}
    
        if(day_commons_jrawio.isSet()){ isObjectUpdated = true; break;}
    
        if(org_apache_aries_jmx_whiteboard.isSet()){ isObjectUpdated = true; break;}
    
        if(org_apache_felix_http_sslfilter.isSet()){ isObjectUpdated = true; break;}
    
        if(org_apache_felix_org_apache_felix_threaddump.isSet()){ isObjectUpdated = true; break;}
    
        if(org_apache_felix_webconsole_plugins_ds.isSet()){ isObjectUpdated = true; break;}
    
        if(org_apache_felix_webconsole_plugins_event.isSet()){ isObjectUpdated = true; break;}
    
        if(org_apache_felix_webconsole_plugins_memoryusage.isSet()){ isObjectUpdated = true; break;}
    
        if(org_apache_felix_webconsole_plugins_packageadmin.isSet()){ isObjectUpdated = true; break;}
    
        if(org_apache_jackrabbit_oak_auth_ldap.isSet()){ isObjectUpdated = true; break;}
    
        if(org_apache_jackrabbit_oak_segment_tar.isSet()){ isObjectUpdated = true; break;}
    
        if(org_apache_jackrabbit_oak_solr_osgi.isSet()){ isObjectUpdated = true; break;}
    
        if(org_apache_sling_bundleresource_impl.isSet()){ isObjectUpdated = true; break;}
    
        if(org_apache_sling_commons_fsclassloader.isSet()){ isObjectUpdated = true; break;}
    
        if(org_apache_sling_commons_log_webconsole.isSet()){ isObjectUpdated = true; break;}
    
        if(org_apache_sling_datasource.isSet()){ isObjectUpdated = true; break;}
    
        if(org_apache_sling_discovery_base.isSet()){ isObjectUpdated = true; break;}
    
        if(org_apache_sling_discovery_oak.isSet()){ isObjectUpdated = true; break;}
    
        if(org_apache_sling_discovery_support.isSet()){ isObjectUpdated = true; break;}
    
        if(org_apache_sling_distribution_api.isSet()){ isObjectUpdated = true; break;}
    
        if(org_apache_sling_distribution_core.isSet()){ isObjectUpdated = true; break;}
    
        if(org_apache_sling_extensions_webconsolesecurityprovider.isSet()){ isObjectUpdated = true; break;}
    
        if(org_apache_sling_hc_webconsole.isSet()){ isObjectUpdated = true; break;}
    
        if(org_apache_sling_installer_console.isSet()){ isObjectUpdated = true; break;}
    
        if(org_apache_sling_installer_provider_file.isSet()){ isObjectUpdated = true; break;}
    
        if(org_apache_sling_installer_provider_jcr.isSet()){ isObjectUpdated = true; break;}
    
        if(org_apache_sling_jcr_davex.isSet()){ isObjectUpdated = true; break;}
    
        if(org_apache_sling_jcr_resourcesecurity.isSet()){ isObjectUpdated = true; break;}
    
        if(org_apache_sling_jmx_provider.isSet()){ isObjectUpdated = true; break;}
    
        if(org_apache_sling_launchpad_installer.isSet()){ isObjectUpdated = true; break;}
    
        if(org_apache_sling_models_impl.isSet()){ isObjectUpdated = true; break;}
    
        if(org_apache_sling_repoinit_parser.isSet()){ isObjectUpdated = true; break;}
    
        if(org_apache_sling_resource_inventory.isSet()){ isObjectUpdated = true; break;}
    
        if(org_apache_sling_resourceresolver.isSet()){ isObjectUpdated = true; break;}
    
        if(org_apache_sling_scripting_javascript.isSet()){ isObjectUpdated = true; break;}
    
        if(org_apache_sling_scripting_jst.isSet()){ isObjectUpdated = true; break;}
    
        if(org_apache_sling_scripting_sightly_js_provider.isSet()){ isObjectUpdated = true; break;}
    
        if(org_apache_sling_scripting_sightly_models_provider.isSet()){ isObjectUpdated = true; break;}
    
        if(org_apache_sling_security.isSet()){ isObjectUpdated = true; break;}
    
        if(org_apache_sling_servlets_compat.isSet()){ isObjectUpdated = true; break;}
    
        if(org_apache_sling_servlets_get.isSet()){ isObjectUpdated = true; break;}
    
        if(org_apache_sling_startupfilter_disabler.isSet()){ isObjectUpdated = true; break;}
    
        if(org_apache_sling_tracer.isSet()){ isObjectUpdated = true; break;}
    
        if(we_retail_client_app_core.isSet()){ isObjectUpdated = true; break;}
    }while(false);
    return isObjectUpdated;
}

}

