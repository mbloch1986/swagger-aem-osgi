/**
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 3.2.1-SNAPSHOT.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OrgApacheSlingServletsPostImplSlingPostServletProperties.h
 *
 * 
 */

#ifndef OrgApacheSlingServletsPostImplSlingPostServletProperties_H_
#define OrgApacheSlingServletsPostImplSlingPostServletProperties_H_



#include "ConfigNodePropertyBoolean.h"
#include "ConfigNodePropertyInteger.h"
#include "ConfigNodePropertyArray.h"
#include "ConfigNodePropertyString.h"
#include <memory>

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
/// 
/// </summary>
class  OrgApacheSlingServletsPostImplSlingPostServletProperties
{
public:
    OrgApacheSlingServletsPostImplSlingPostServletProperties();
    virtual ~OrgApacheSlingServletsPostImplSlingPostServletProperties();
    
    std::string toJsonString();
    void fromJsonString(std::string const& jsonString);

    /////////////////////////////////////////////
    /// OrgApacheSlingServletsPostImplSlingPostServletProperties members
    
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyArray> getServletPostDateFormats() const;
    void setServletPostDateFormats(std::shared_ptr<ConfigNodePropertyArray> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyArray> getServletPostNodeNameHints() const;
    void setServletPostNodeNameHints(std::shared_ptr<ConfigNodePropertyArray> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyInteger> getServletPostNodeNameMaxLength() const;
    void setServletPostNodeNameMaxLength(std::shared_ptr<ConfigNodePropertyInteger> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyBoolean> getServletPostCheckinNewVersionableNodes() const;
    void setServletPostCheckinNewVersionableNodes(std::shared_ptr<ConfigNodePropertyBoolean> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyBoolean> getServletPostAutoCheckout() const;
    void setServletPostAutoCheckout(std::shared_ptr<ConfigNodePropertyBoolean> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyBoolean> getServletPostAutoCheckin() const;
    void setServletPostAutoCheckin(std::shared_ptr<ConfigNodePropertyBoolean> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyString> getServletPostIgnorePattern() const;
    void setServletPostIgnorePattern(std::shared_ptr<ConfigNodePropertyString> value);

protected:
    std::shared_ptr<ConfigNodePropertyArray> m_Servlet_post_dateFormats;
    std::shared_ptr<ConfigNodePropertyArray> m_Servlet_post_nodeNameHints;
    std::shared_ptr<ConfigNodePropertyInteger> m_Servlet_post_nodeNameMaxLength;
    std::shared_ptr<ConfigNodePropertyBoolean> m_Servlet_post_checkinNewVersionableNodes;
    std::shared_ptr<ConfigNodePropertyBoolean> m_Servlet_post_autoCheckout;
    std::shared_ptr<ConfigNodePropertyBoolean> m_Servlet_post_autoCheckin;
    std::shared_ptr<ConfigNodePropertyString> m_Servlet_post_ignorePattern;
};

}
}
}
}

#endif /* OrgApacheSlingServletsPostImplSlingPostServletProperties_H_ */
