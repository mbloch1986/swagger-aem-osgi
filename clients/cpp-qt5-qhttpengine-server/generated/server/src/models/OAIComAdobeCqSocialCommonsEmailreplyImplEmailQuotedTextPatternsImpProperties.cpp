/**
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


#include "OAIComAdobeCqSocialCommonsEmailreplyImplEmailQuotedTextPatternsImpProperties.h"

#include "OAIHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace OpenAPI {

OAIComAdobeCqSocialCommonsEmailreplyImplEmailQuotedTextPatternsImpProperties::OAIComAdobeCqSocialCommonsEmailreplyImplEmailQuotedTextPatternsImpProperties(QString json) {
    this->fromJson(json);
}

OAIComAdobeCqSocialCommonsEmailreplyImplEmailQuotedTextPatternsImpProperties::OAIComAdobeCqSocialCommonsEmailreplyImplEmailQuotedTextPatternsImpProperties() {
    this->init();
}

OAIComAdobeCqSocialCommonsEmailreplyImplEmailQuotedTextPatternsImpProperties::~OAIComAdobeCqSocialCommonsEmailreplyImplEmailQuotedTextPatternsImpProperties() {
    
}

void
OAIComAdobeCqSocialCommonsEmailreplyImplEmailQuotedTextPatternsImpProperties::init() {
    m_pattern_time_isSet = false;
    m_pattern_newline_isSet = false;
    m_pattern_day_of_month_isSet = false;
    m_pattern_month_isSet = false;
    m_pattern_year_isSet = false;
    m_pattern_date_isSet = false;
    m_pattern_date_time_isSet = false;
    m_pattern_email_isSet = false;
}

void
OAIComAdobeCqSocialCommonsEmailreplyImplEmailQuotedTextPatternsImpProperties::fromJson(QString jsonString) {
    QByteArray array (jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void
OAIComAdobeCqSocialCommonsEmailreplyImplEmailQuotedTextPatternsImpProperties::fromJsonObject(QJsonObject json) {
    ::OpenAPI::fromJsonValue(pattern_time, json[QString("pattern.time")]);
    
    ::OpenAPI::fromJsonValue(pattern_newline, json[QString("pattern.newline")]);
    
    ::OpenAPI::fromJsonValue(pattern_day_of_month, json[QString("pattern.dayOfMonth")]);
    
    ::OpenAPI::fromJsonValue(pattern_month, json[QString("pattern.month")]);
    
    ::OpenAPI::fromJsonValue(pattern_year, json[QString("pattern.year")]);
    
    ::OpenAPI::fromJsonValue(pattern_date, json[QString("pattern.date")]);
    
    ::OpenAPI::fromJsonValue(pattern_date_time, json[QString("pattern.dateTime")]);
    
    ::OpenAPI::fromJsonValue(pattern_email, json[QString("pattern.email")]);
    
}

QString
OAIComAdobeCqSocialCommonsEmailreplyImplEmailQuotedTextPatternsImpProperties::asJson () const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject
OAIComAdobeCqSocialCommonsEmailreplyImplEmailQuotedTextPatternsImpProperties::asJsonObject() const {
    QJsonObject obj;
	if(pattern_time.isSet()){
        obj.insert(QString("pattern.time"), ::OpenAPI::toJsonValue(pattern_time));
    }
	if(pattern_newline.isSet()){
        obj.insert(QString("pattern.newline"), ::OpenAPI::toJsonValue(pattern_newline));
    }
	if(pattern_day_of_month.isSet()){
        obj.insert(QString("pattern.dayOfMonth"), ::OpenAPI::toJsonValue(pattern_day_of_month));
    }
	if(pattern_month.isSet()){
        obj.insert(QString("pattern.month"), ::OpenAPI::toJsonValue(pattern_month));
    }
	if(pattern_year.isSet()){
        obj.insert(QString("pattern.year"), ::OpenAPI::toJsonValue(pattern_year));
    }
	if(pattern_date.isSet()){
        obj.insert(QString("pattern.date"), ::OpenAPI::toJsonValue(pattern_date));
    }
	if(pattern_date_time.isSet()){
        obj.insert(QString("pattern.dateTime"), ::OpenAPI::toJsonValue(pattern_date_time));
    }
	if(pattern_email.isSet()){
        obj.insert(QString("pattern.email"), ::OpenAPI::toJsonValue(pattern_email));
    }
    return obj;
}

OAIConfigNodePropertyString
OAIComAdobeCqSocialCommonsEmailreplyImplEmailQuotedTextPatternsImpProperties::getPatternTime() const {
    return pattern_time;
}
void
OAIComAdobeCqSocialCommonsEmailreplyImplEmailQuotedTextPatternsImpProperties::setPatternTime(const OAIConfigNodePropertyString &pattern_time) {
    this->pattern_time = pattern_time;
    this->m_pattern_time_isSet = true;
}

OAIConfigNodePropertyString
OAIComAdobeCqSocialCommonsEmailreplyImplEmailQuotedTextPatternsImpProperties::getPatternNewline() const {
    return pattern_newline;
}
void
OAIComAdobeCqSocialCommonsEmailreplyImplEmailQuotedTextPatternsImpProperties::setPatternNewline(const OAIConfigNodePropertyString &pattern_newline) {
    this->pattern_newline = pattern_newline;
    this->m_pattern_newline_isSet = true;
}

OAIConfigNodePropertyString
OAIComAdobeCqSocialCommonsEmailreplyImplEmailQuotedTextPatternsImpProperties::getPatternDayOfMonth() const {
    return pattern_day_of_month;
}
void
OAIComAdobeCqSocialCommonsEmailreplyImplEmailQuotedTextPatternsImpProperties::setPatternDayOfMonth(const OAIConfigNodePropertyString &pattern_day_of_month) {
    this->pattern_day_of_month = pattern_day_of_month;
    this->m_pattern_day_of_month_isSet = true;
}

OAIConfigNodePropertyString
OAIComAdobeCqSocialCommonsEmailreplyImplEmailQuotedTextPatternsImpProperties::getPatternMonth() const {
    return pattern_month;
}
void
OAIComAdobeCqSocialCommonsEmailreplyImplEmailQuotedTextPatternsImpProperties::setPatternMonth(const OAIConfigNodePropertyString &pattern_month) {
    this->pattern_month = pattern_month;
    this->m_pattern_month_isSet = true;
}

OAIConfigNodePropertyString
OAIComAdobeCqSocialCommonsEmailreplyImplEmailQuotedTextPatternsImpProperties::getPatternYear() const {
    return pattern_year;
}
void
OAIComAdobeCqSocialCommonsEmailreplyImplEmailQuotedTextPatternsImpProperties::setPatternYear(const OAIConfigNodePropertyString &pattern_year) {
    this->pattern_year = pattern_year;
    this->m_pattern_year_isSet = true;
}

OAIConfigNodePropertyString
OAIComAdobeCqSocialCommonsEmailreplyImplEmailQuotedTextPatternsImpProperties::getPatternDate() const {
    return pattern_date;
}
void
OAIComAdobeCqSocialCommonsEmailreplyImplEmailQuotedTextPatternsImpProperties::setPatternDate(const OAIConfigNodePropertyString &pattern_date) {
    this->pattern_date = pattern_date;
    this->m_pattern_date_isSet = true;
}

OAIConfigNodePropertyString
OAIComAdobeCqSocialCommonsEmailreplyImplEmailQuotedTextPatternsImpProperties::getPatternDateTime() const {
    return pattern_date_time;
}
void
OAIComAdobeCqSocialCommonsEmailreplyImplEmailQuotedTextPatternsImpProperties::setPatternDateTime(const OAIConfigNodePropertyString &pattern_date_time) {
    this->pattern_date_time = pattern_date_time;
    this->m_pattern_date_time_isSet = true;
}

OAIConfigNodePropertyString
OAIComAdobeCqSocialCommonsEmailreplyImplEmailQuotedTextPatternsImpProperties::getPatternEmail() const {
    return pattern_email;
}
void
OAIComAdobeCqSocialCommonsEmailreplyImplEmailQuotedTextPatternsImpProperties::setPatternEmail(const OAIConfigNodePropertyString &pattern_email) {
    this->pattern_email = pattern_email;
    this->m_pattern_email_isSet = true;
}


bool
OAIComAdobeCqSocialCommonsEmailreplyImplEmailQuotedTextPatternsImpProperties::isSet() const {
    bool isObjectUpdated = false;
    do{ 
        if(pattern_time.isSet()){ isObjectUpdated = true; break;}
    
        if(pattern_newline.isSet()){ isObjectUpdated = true; break;}
    
        if(pattern_day_of_month.isSet()){ isObjectUpdated = true; break;}
    
        if(pattern_month.isSet()){ isObjectUpdated = true; break;}
    
        if(pattern_year.isSet()){ isObjectUpdated = true; break;}
    
        if(pattern_date.isSet()){ isObjectUpdated = true; break;}
    
        if(pattern_date_time.isSet()){ isObjectUpdated = true; break;}
    
        if(pattern_email.isSet()){ isObjectUpdated = true; break;}
    }while(false);
    return isObjectUpdated;
}

}

