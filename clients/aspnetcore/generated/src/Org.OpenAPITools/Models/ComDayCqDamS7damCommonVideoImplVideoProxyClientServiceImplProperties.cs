/*
 * Adobe Experience Manager OSGI config (AEM) API
 *
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Linq;
using System.Text;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;

namespace Org.OpenAPITools.Models
{ 
    /// <summary>
    /// 
    /// </summary>
    [DataContract]
    public partial class ComDayCqDamS7damCommonVideoImplVideoProxyClientServiceImplProperties : IEquatable<ComDayCqDamS7damCommonVideoImplVideoProxyClientServiceImplProperties>
    { 
        /// <summary>
        /// Gets or Sets CqDamS7damVideoproxyclientserviceMultipartuploadMinsizeName
        /// </summary>
        [DataMember(Name="cq.dam.s7dam.videoproxyclientservice.multipartupload.minsize.name")]
        public ConfigNodePropertyInteger CqDamS7damVideoproxyclientserviceMultipartuploadMinsizeName { get; set; }

        /// <summary>
        /// Gets or Sets CqDamS7damVideoproxyclientserviceMultipartuploadPartsizeName
        /// </summary>
        [DataMember(Name="cq.dam.s7dam.videoproxyclientservice.multipartupload.partsize.name")]
        public ConfigNodePropertyInteger CqDamS7damVideoproxyclientserviceMultipartuploadPartsizeName { get; set; }

        /// <summary>
        /// Gets or Sets CqDamS7damVideoproxyclientserviceMultipartuploadNumthreadName
        /// </summary>
        [DataMember(Name="cq.dam.s7dam.videoproxyclientservice.multipartupload.numthread.name")]
        public ConfigNodePropertyInteger CqDamS7damVideoproxyclientserviceMultipartuploadNumthreadName { get; set; }

        /// <summary>
        /// Gets or Sets CqDamS7damVideoproxyclientserviceHttpReadtimeoutName
        /// </summary>
        [DataMember(Name="cq.dam.s7dam.videoproxyclientservice.http.readtimeout.name")]
        public ConfigNodePropertyInteger CqDamS7damVideoproxyclientserviceHttpReadtimeoutName { get; set; }

        /// <summary>
        /// Gets or Sets CqDamS7damVideoproxyclientserviceHttpConnectiontimeoutName
        /// </summary>
        [DataMember(Name="cq.dam.s7dam.videoproxyclientservice.http.connectiontimeout.name")]
        public ConfigNodePropertyInteger CqDamS7damVideoproxyclientserviceHttpConnectiontimeoutName { get; set; }

        /// <summary>
        /// Gets or Sets CqDamS7damVideoproxyclientserviceHttpMaxretrycountName
        /// </summary>
        [DataMember(Name="cq.dam.s7dam.videoproxyclientservice.http.maxretrycount.name")]
        public ConfigNodePropertyInteger CqDamS7damVideoproxyclientserviceHttpMaxretrycountName { get; set; }

        /// <summary>
        /// Gets or Sets CqDamS7damVideoproxyclientserviceUploadprogressIntervalName
        /// </summary>
        [DataMember(Name="cq.dam.s7dam.videoproxyclientservice.uploadprogress.interval.name")]
        public ConfigNodePropertyInteger CqDamS7damVideoproxyclientserviceUploadprogressIntervalName { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class ComDayCqDamS7damCommonVideoImplVideoProxyClientServiceImplProperties {\n");
            sb.Append("  CqDamS7damVideoproxyclientserviceMultipartuploadMinsizeName: ").Append(CqDamS7damVideoproxyclientserviceMultipartuploadMinsizeName).Append("\n");
            sb.Append("  CqDamS7damVideoproxyclientserviceMultipartuploadPartsizeName: ").Append(CqDamS7damVideoproxyclientserviceMultipartuploadPartsizeName).Append("\n");
            sb.Append("  CqDamS7damVideoproxyclientserviceMultipartuploadNumthreadName: ").Append(CqDamS7damVideoproxyclientserviceMultipartuploadNumthreadName).Append("\n");
            sb.Append("  CqDamS7damVideoproxyclientserviceHttpReadtimeoutName: ").Append(CqDamS7damVideoproxyclientserviceHttpReadtimeoutName).Append("\n");
            sb.Append("  CqDamS7damVideoproxyclientserviceHttpConnectiontimeoutName: ").Append(CqDamS7damVideoproxyclientserviceHttpConnectiontimeoutName).Append("\n");
            sb.Append("  CqDamS7damVideoproxyclientserviceHttpMaxretrycountName: ").Append(CqDamS7damVideoproxyclientserviceHttpMaxretrycountName).Append("\n");
            sb.Append("  CqDamS7damVideoproxyclientserviceUploadprogressIntervalName: ").Append(CqDamS7damVideoproxyclientserviceUploadprogressIntervalName).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="obj">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object obj)
        {
            if (obj is null) return false;
            if (ReferenceEquals(this, obj)) return true;
            return obj.GetType() == GetType() && Equals((ComDayCqDamS7damCommonVideoImplVideoProxyClientServiceImplProperties)obj);
        }

        /// <summary>
        /// Returns true if ComDayCqDamS7damCommonVideoImplVideoProxyClientServiceImplProperties instances are equal
        /// </summary>
        /// <param name="other">Instance of ComDayCqDamS7damCommonVideoImplVideoProxyClientServiceImplProperties to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(ComDayCqDamS7damCommonVideoImplVideoProxyClientServiceImplProperties other)
        {
            if (other is null) return false;
            if (ReferenceEquals(this, other)) return true;

            return 
                (
                    CqDamS7damVideoproxyclientserviceMultipartuploadMinsizeName == other.CqDamS7damVideoproxyclientserviceMultipartuploadMinsizeName ||
                    CqDamS7damVideoproxyclientserviceMultipartuploadMinsizeName != null &&
                    CqDamS7damVideoproxyclientserviceMultipartuploadMinsizeName.Equals(other.CqDamS7damVideoproxyclientserviceMultipartuploadMinsizeName)
                ) && 
                (
                    CqDamS7damVideoproxyclientserviceMultipartuploadPartsizeName == other.CqDamS7damVideoproxyclientserviceMultipartuploadPartsizeName ||
                    CqDamS7damVideoproxyclientserviceMultipartuploadPartsizeName != null &&
                    CqDamS7damVideoproxyclientserviceMultipartuploadPartsizeName.Equals(other.CqDamS7damVideoproxyclientserviceMultipartuploadPartsizeName)
                ) && 
                (
                    CqDamS7damVideoproxyclientserviceMultipartuploadNumthreadName == other.CqDamS7damVideoproxyclientserviceMultipartuploadNumthreadName ||
                    CqDamS7damVideoproxyclientserviceMultipartuploadNumthreadName != null &&
                    CqDamS7damVideoproxyclientserviceMultipartuploadNumthreadName.Equals(other.CqDamS7damVideoproxyclientserviceMultipartuploadNumthreadName)
                ) && 
                (
                    CqDamS7damVideoproxyclientserviceHttpReadtimeoutName == other.CqDamS7damVideoproxyclientserviceHttpReadtimeoutName ||
                    CqDamS7damVideoproxyclientserviceHttpReadtimeoutName != null &&
                    CqDamS7damVideoproxyclientserviceHttpReadtimeoutName.Equals(other.CqDamS7damVideoproxyclientserviceHttpReadtimeoutName)
                ) && 
                (
                    CqDamS7damVideoproxyclientserviceHttpConnectiontimeoutName == other.CqDamS7damVideoproxyclientserviceHttpConnectiontimeoutName ||
                    CqDamS7damVideoproxyclientserviceHttpConnectiontimeoutName != null &&
                    CqDamS7damVideoproxyclientserviceHttpConnectiontimeoutName.Equals(other.CqDamS7damVideoproxyclientserviceHttpConnectiontimeoutName)
                ) && 
                (
                    CqDamS7damVideoproxyclientserviceHttpMaxretrycountName == other.CqDamS7damVideoproxyclientserviceHttpMaxretrycountName ||
                    CqDamS7damVideoproxyclientserviceHttpMaxretrycountName != null &&
                    CqDamS7damVideoproxyclientserviceHttpMaxretrycountName.Equals(other.CqDamS7damVideoproxyclientserviceHttpMaxretrycountName)
                ) && 
                (
                    CqDamS7damVideoproxyclientserviceUploadprogressIntervalName == other.CqDamS7damVideoproxyclientserviceUploadprogressIntervalName ||
                    CqDamS7damVideoproxyclientserviceUploadprogressIntervalName != null &&
                    CqDamS7damVideoproxyclientserviceUploadprogressIntervalName.Equals(other.CqDamS7damVideoproxyclientserviceUploadprogressIntervalName)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                var hashCode = 41;
                // Suitable nullity checks etc, of course :)
                    if (CqDamS7damVideoproxyclientserviceMultipartuploadMinsizeName != null)
                    hashCode = hashCode * 59 + CqDamS7damVideoproxyclientserviceMultipartuploadMinsizeName.GetHashCode();
                    if (CqDamS7damVideoproxyclientserviceMultipartuploadPartsizeName != null)
                    hashCode = hashCode * 59 + CqDamS7damVideoproxyclientserviceMultipartuploadPartsizeName.GetHashCode();
                    if (CqDamS7damVideoproxyclientserviceMultipartuploadNumthreadName != null)
                    hashCode = hashCode * 59 + CqDamS7damVideoproxyclientserviceMultipartuploadNumthreadName.GetHashCode();
                    if (CqDamS7damVideoproxyclientserviceHttpReadtimeoutName != null)
                    hashCode = hashCode * 59 + CqDamS7damVideoproxyclientserviceHttpReadtimeoutName.GetHashCode();
                    if (CqDamS7damVideoproxyclientserviceHttpConnectiontimeoutName != null)
                    hashCode = hashCode * 59 + CqDamS7damVideoproxyclientserviceHttpConnectiontimeoutName.GetHashCode();
                    if (CqDamS7damVideoproxyclientserviceHttpMaxretrycountName != null)
                    hashCode = hashCode * 59 + CqDamS7damVideoproxyclientserviceHttpMaxretrycountName.GetHashCode();
                    if (CqDamS7damVideoproxyclientserviceUploadprogressIntervalName != null)
                    hashCode = hashCode * 59 + CqDamS7damVideoproxyclientserviceUploadprogressIntervalName.GetHashCode();
                return hashCode;
            }
        }

        #region Operators
        #pragma warning disable 1591

        public static bool operator ==(ComDayCqDamS7damCommonVideoImplVideoProxyClientServiceImplProperties left, ComDayCqDamS7damCommonVideoImplVideoProxyClientServiceImplProperties right)
        {
            return Equals(left, right);
        }

        public static bool operator !=(ComDayCqDamS7damCommonVideoImplVideoProxyClientServiceImplProperties left, ComDayCqDamS7damCommonVideoImplVideoProxyClientServiceImplProperties right)
        {
            return !Equals(left, right);
        }

        #pragma warning restore 1591
        #endregion Operators
    }
}
