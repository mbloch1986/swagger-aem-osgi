/**
* Adobe Experience Manager OSGI config (AEM) API
* Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
*
* OpenAPI spec version: 1.0.0-pre.0
* Contact: opensource@shinesolutions.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/


#include "ComAdobeCqSocialCommonsMaintainanceImplDeleteTempUGCImageUploadProperties.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

ComAdobeCqSocialCommonsMaintainanceImplDeleteTempUGCImageUploadProperties::ComAdobeCqSocialCommonsMaintainanceImplDeleteTempUGCImageUploadProperties()
{
    m_NumberOfDaysIsSet = false;
    m_AgeOfFileIsSet = false;
    
}

ComAdobeCqSocialCommonsMaintainanceImplDeleteTempUGCImageUploadProperties::~ComAdobeCqSocialCommonsMaintainanceImplDeleteTempUGCImageUploadProperties()
{
}

void ComAdobeCqSocialCommonsMaintainanceImplDeleteTempUGCImageUploadProperties::validate()
{
    // TODO: implement validation
}

nlohmann::json ComAdobeCqSocialCommonsMaintainanceImplDeleteTempUGCImageUploadProperties::toJson() const
{
    nlohmann::json val = nlohmann::json::object();

    if(m_NumberOfDaysIsSet)
    {
        val["numberOfDays"] = ModelBase::toJson(m_NumberOfDays);
    }
    if(m_AgeOfFileIsSet)
    {
        val["ageOfFile"] = ModelBase::toJson(m_AgeOfFile);
    }
    

    return val;
}

void ComAdobeCqSocialCommonsMaintainanceImplDeleteTempUGCImageUploadProperties::fromJson(nlohmann::json& val)
{
    if(val.find("numberOfDays") != val.end())
    {
        if(!val["numberOfDays"].is_null())
        {
            ConfigNodePropertyInteger newItem;
            newItem.fromJson(val["numberOfDays"]);
            setNumberOfDays( newItem );
        }
        
    }
    if(val.find("ageOfFile") != val.end())
    {
        if(!val["ageOfFile"].is_null())
        {
            ConfigNodePropertyInteger newItem;
            newItem.fromJson(val["ageOfFile"]);
            setAgeOfFile( newItem );
        }
        
    }
    
}


ConfigNodePropertyInteger ComAdobeCqSocialCommonsMaintainanceImplDeleteTempUGCImageUploadProperties::getNumberOfDays() const
{
    return m_NumberOfDays;
}
void ComAdobeCqSocialCommonsMaintainanceImplDeleteTempUGCImageUploadProperties::setNumberOfDays(ConfigNodePropertyInteger const& value)
{
    m_NumberOfDays = value;
    m_NumberOfDaysIsSet = true;
}
bool ComAdobeCqSocialCommonsMaintainanceImplDeleteTempUGCImageUploadProperties::numberOfDaysIsSet() const
{
    return m_NumberOfDaysIsSet;
}
void ComAdobeCqSocialCommonsMaintainanceImplDeleteTempUGCImageUploadProperties::unsetNumberOfDays()
{
    m_NumberOfDaysIsSet = false;
}
ConfigNodePropertyInteger ComAdobeCqSocialCommonsMaintainanceImplDeleteTempUGCImageUploadProperties::getAgeOfFile() const
{
    return m_AgeOfFile;
}
void ComAdobeCqSocialCommonsMaintainanceImplDeleteTempUGCImageUploadProperties::setAgeOfFile(ConfigNodePropertyInteger const& value)
{
    m_AgeOfFile = value;
    m_AgeOfFileIsSet = true;
}
bool ComAdobeCqSocialCommonsMaintainanceImplDeleteTempUGCImageUploadProperties::ageOfFileIsSet() const
{
    return m_AgeOfFileIsSet;
}
void ComAdobeCqSocialCommonsMaintainanceImplDeleteTempUGCImageUploadProperties::unsetAgeOfFile()
{
    m_AgeOfFileIsSet = false;
}

}
}
}
}

