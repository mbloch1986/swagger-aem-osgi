note
 description:"[
		Adobe Experience Manager OSGI config (AEM) API
 		Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
  		OpenAPI spec version: 1.0.0-pre.0
 	    Contact: opensource@shinesolutions.com

  	NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

 		 Do not edit the class manually.
 	]"
	date: "$Date$"
	revision: "$Revision$"
	EIS:"Eiffel openapi generator", "src=https://openapi-generator.tech", "protocol=uri"
class COM_DAY_CQ_DAM_COMMONS_UTIL_IMPL_ASSET_CACHE_IMPL_PROPERTIES 

inherit

  ANY
      redefine
          out 
      end


feature --Access

    large_file_min: detachable CONFIG_NODE_PROPERTY_INTEGER 
      
    cache_apply: detachable CONFIG_NODE_PROPERTY_BOOLEAN 
      
    mime_types: detachable CONFIG_NODE_PROPERTY_ARRAY 
      

feature -- Change Element  
 
    set_large_file_min (a_name: like large_file_min)
        -- Set 'large_file_min' with 'a_name'.
      do
        large_file_min := a_name
      ensure
        large_file_min_set: large_file_min = a_name		
      end

    set_cache_apply (a_name: like cache_apply)
        -- Set 'cache_apply' with 'a_name'.
      do
        cache_apply := a_name
      ensure
        cache_apply_set: cache_apply = a_name		
      end

    set_mime_types (a_name: like mime_types)
        -- Set 'mime_types' with 'a_name'.
      do
        mime_types := a_name
      ensure
        mime_types_set: mime_types = a_name		
      end


 feature -- Status Report

    out: STRING
          -- <Precursor>
      do
        create Result.make_empty
        Result.append("%Nclass COM_DAY_CQ_DAM_COMMONS_UTIL_IMPL_ASSET_CACHE_IMPL_PROPERTIES%N")
        if attached large_file_min as l_large_file_min then
          Result.append ("%Nlarge_file_min:")
          Result.append (l_large_file_min.out)
          Result.append ("%N")    
        end  
        if attached cache_apply as l_cache_apply then
          Result.append ("%Ncache_apply:")
          Result.append (l_cache_apply.out)
          Result.append ("%N")    
        end  
        if attached mime_types as l_mime_types then
          Result.append ("%Nmime_types:")
          Result.append (l_mime_types.out)
          Result.append ("%N")    
        end  
      end
end


