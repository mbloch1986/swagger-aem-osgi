/**
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIComDayCqWcmCoreImplVersionPurgeTaskProperties.h
 *
 * 
 */

#ifndef OAIComDayCqWcmCoreImplVersionPurgeTaskProperties_H_
#define OAIComDayCqWcmCoreImplVersionPurgeTaskProperties_H_

#include <QJsonObject>


#include "OAIOAIConfigNodePropertyArray.h"
#include "OAIOAIConfigNodePropertyBoolean.h"
#include "OAIOAIConfigNodePropertyInteger.h"

#include "OAIObject.h"

namespace OpenAPI {

class OAIComDayCqWcmCoreImplVersionPurgeTaskProperties: public OAIObject {
public:
    OAIComDayCqWcmCoreImplVersionPurgeTaskProperties();
    OAIComDayCqWcmCoreImplVersionPurgeTaskProperties(QString json);
    ~OAIComDayCqWcmCoreImplVersionPurgeTaskProperties();
    void init();
    void cleanup();

    QString asJson () override;
    QJsonObject asJsonObject() override;
    void fromJsonObject(QJsonObject json) override;
    OAIComDayCqWcmCoreImplVersionPurgeTaskProperties* fromJson(QString jsonString) override;

    OAIConfigNodePropertyArray* getVersionpurgePaths();
    void setVersionpurgePaths(OAIConfigNodePropertyArray* versionpurge_paths);

    OAIConfigNodePropertyBoolean* getVersionpurgeRecursive();
    void setVersionpurgeRecursive(OAIConfigNodePropertyBoolean* versionpurge_recursive);

    OAIConfigNodePropertyInteger* getVersionpurgeMaxVersions();
    void setVersionpurgeMaxVersions(OAIConfigNodePropertyInteger* versionpurge_max_versions);

    OAIConfigNodePropertyInteger* getVersionpurgeMinVersions();
    void setVersionpurgeMinVersions(OAIConfigNodePropertyInteger* versionpurge_min_versions);

    OAIConfigNodePropertyInteger* getVersionpurgeMaxAgeDays();
    void setVersionpurgeMaxAgeDays(OAIConfigNodePropertyInteger* versionpurge_max_age_days);


    virtual bool isSet() override;

private:
    OAIConfigNodePropertyArray* versionpurge_paths;
    bool m_versionpurge_paths_isSet;

    OAIConfigNodePropertyBoolean* versionpurge_recursive;
    bool m_versionpurge_recursive_isSet;

    OAIConfigNodePropertyInteger* versionpurge_max_versions;
    bool m_versionpurge_max_versions_isSet;

    OAIConfigNodePropertyInteger* versionpurge_min_versions;
    bool m_versionpurge_min_versions_isSet;

    OAIConfigNodePropertyInteger* versionpurge_max_age_days;
    bool m_versionpurge_max_age_days_isSet;

};

}

#endif /* OAIComDayCqWcmCoreImplVersionPurgeTaskProperties_H_ */
