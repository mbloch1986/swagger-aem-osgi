/* 
 * Adobe Experience Manager OSGI config (AEM) API
 *
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 * Generated by: https://openapi-generator.tech
 */


#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct ComAdobeCqSocialContentFragmentsServicesImplCommunitiesFragmenProperties {
  #[serde(rename = "cq.social.content.fragments.services.enabled")]
  cq_social_content_fragments_services_enabled: Option<::models::ConfigNodePropertyBoolean>,
  #[serde(rename = "cq.social.content.fragments.services.waitTimeSeconds")]
  cq_social_content_fragments_services_wait_time_seconds: Option<::models::ConfigNodePropertyInteger>
}

impl ComAdobeCqSocialContentFragmentsServicesImplCommunitiesFragmenProperties {
  pub fn new() -> ComAdobeCqSocialContentFragmentsServicesImplCommunitiesFragmenProperties {
    ComAdobeCqSocialContentFragmentsServicesImplCommunitiesFragmenProperties {
      cq_social_content_fragments_services_enabled: None,
      cq_social_content_fragments_services_wait_time_seconds: None
    }
  }

  pub fn set_cq_social_content_fragments_services_enabled(&mut self, cq_social_content_fragments_services_enabled: ::models::ConfigNodePropertyBoolean) {
    self.cq_social_content_fragments_services_enabled = Some(cq_social_content_fragments_services_enabled);
  }

  pub fn with_cq_social_content_fragments_services_enabled(mut self, cq_social_content_fragments_services_enabled: ::models::ConfigNodePropertyBoolean) -> ComAdobeCqSocialContentFragmentsServicesImplCommunitiesFragmenProperties {
    self.cq_social_content_fragments_services_enabled = Some(cq_social_content_fragments_services_enabled);
    self
  }

  pub fn cq_social_content_fragments_services_enabled(&self) -> Option<&::models::ConfigNodePropertyBoolean> {
    self.cq_social_content_fragments_services_enabled.as_ref()
  }

  pub fn reset_cq_social_content_fragments_services_enabled(&mut self) {
    self.cq_social_content_fragments_services_enabled = None;
  }

  pub fn set_cq_social_content_fragments_services_wait_time_seconds(&mut self, cq_social_content_fragments_services_wait_time_seconds: ::models::ConfigNodePropertyInteger) {
    self.cq_social_content_fragments_services_wait_time_seconds = Some(cq_social_content_fragments_services_wait_time_seconds);
  }

  pub fn with_cq_social_content_fragments_services_wait_time_seconds(mut self, cq_social_content_fragments_services_wait_time_seconds: ::models::ConfigNodePropertyInteger) -> ComAdobeCqSocialContentFragmentsServicesImplCommunitiesFragmenProperties {
    self.cq_social_content_fragments_services_wait_time_seconds = Some(cq_social_content_fragments_services_wait_time_seconds);
    self
  }

  pub fn cq_social_content_fragments_services_wait_time_seconds(&self) -> Option<&::models::ConfigNodePropertyInteger> {
    self.cq_social_content_fragments_services_wait_time_seconds.as_ref()
  }

  pub fn reset_cq_social_content_fragments_services_wait_time_seconds(&mut self) {
    self.cq_social_content_fragments_services_wait_time_seconds = None;
  }

}



