/**
* Adobe Experience Manager OSGI config (AEM) API
* Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
*
* OpenAPI spec version: 1.0.0-pre.0
* Contact: opensource@shinesolutions.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/


#include "ComDayCqWcmDesignimporterImplEntryPreprocessorImplProperties.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

ComDayCqWcmDesignimporterImplEntryPreprocessorImplProperties::ComDayCqWcmDesignimporterImplEntryPreprocessorImplProperties()
{
    m_Search_patternIsSet = false;
    m_Replace_patternIsSet = false;
    
}

ComDayCqWcmDesignimporterImplEntryPreprocessorImplProperties::~ComDayCqWcmDesignimporterImplEntryPreprocessorImplProperties()
{
}

void ComDayCqWcmDesignimporterImplEntryPreprocessorImplProperties::validate()
{
    // TODO: implement validation
}

nlohmann::json ComDayCqWcmDesignimporterImplEntryPreprocessorImplProperties::toJson() const
{
    nlohmann::json val = nlohmann::json::object();

    if(m_Search_patternIsSet)
    {
        val["search.pattern"] = ModelBase::toJson(m_Search_pattern);
    }
    if(m_Replace_patternIsSet)
    {
        val["replace.pattern"] = ModelBase::toJson(m_Replace_pattern);
    }
    

    return val;
}

void ComDayCqWcmDesignimporterImplEntryPreprocessorImplProperties::fromJson(nlohmann::json& val)
{
    if(val.find("search.pattern") != val.end())
    {
        if(!val["search.pattern"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["search.pattern"]);
            setSearchPattern( newItem );
        }
        
    }
    if(val.find("replace.pattern") != val.end())
    {
        if(!val["replace.pattern"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["replace.pattern"]);
            setReplacePattern( newItem );
        }
        
    }
    
}


ConfigNodePropertyString ComDayCqWcmDesignimporterImplEntryPreprocessorImplProperties::getSearchPattern() const
{
    return m_Search_pattern;
}
void ComDayCqWcmDesignimporterImplEntryPreprocessorImplProperties::setSearchPattern(ConfigNodePropertyString const& value)
{
    m_Search_pattern = value;
    m_Search_patternIsSet = true;
}
bool ComDayCqWcmDesignimporterImplEntryPreprocessorImplProperties::searchPatternIsSet() const
{
    return m_Search_patternIsSet;
}
void ComDayCqWcmDesignimporterImplEntryPreprocessorImplProperties::unsetSearch_pattern()
{
    m_Search_patternIsSet = false;
}
ConfigNodePropertyString ComDayCqWcmDesignimporterImplEntryPreprocessorImplProperties::getReplacePattern() const
{
    return m_Replace_pattern;
}
void ComDayCqWcmDesignimporterImplEntryPreprocessorImplProperties::setReplacePattern(ConfigNodePropertyString const& value)
{
    m_Replace_pattern = value;
    m_Replace_patternIsSet = true;
}
bool ComDayCqWcmDesignimporterImplEntryPreprocessorImplProperties::replacePatternIsSet() const
{
    return m_Replace_patternIsSet;
}
void ComDayCqWcmDesignimporterImplEntryPreprocessorImplProperties::unsetReplace_pattern()
{
    m_Replace_patternIsSet = false;
}

}
}
}
}

