/**
* Adobe Experience Manager OSGI config (AEM) API
* Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
*
* OpenAPI spec version: 1.0.0-pre.0
* Contact: opensource@shinesolutions.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/


#include "ComDayCqAnalyticsTestandtargetImplServiceWebServiceImplProperties.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

ComDayCqAnalyticsTestandtargetImplServiceWebServiceImplProperties::ComDayCqAnalyticsTestandtargetImplServiceWebServiceImplProperties()
{
    m_EndpointUriIsSet = false;
    m_ConnectionTimeoutIsSet = false;
    m_SocketTimeoutIsSet = false;
    
}

ComDayCqAnalyticsTestandtargetImplServiceWebServiceImplProperties::~ComDayCqAnalyticsTestandtargetImplServiceWebServiceImplProperties()
{
}

void ComDayCqAnalyticsTestandtargetImplServiceWebServiceImplProperties::validate()
{
    // TODO: implement validation
}

nlohmann::json ComDayCqAnalyticsTestandtargetImplServiceWebServiceImplProperties::toJson() const
{
    nlohmann::json val = nlohmann::json::object();

    if(m_EndpointUriIsSet)
    {
        val["endpointUri"] = ModelBase::toJson(m_EndpointUri);
    }
    if(m_ConnectionTimeoutIsSet)
    {
        val["connectionTimeout"] = ModelBase::toJson(m_ConnectionTimeout);
    }
    if(m_SocketTimeoutIsSet)
    {
        val["socketTimeout"] = ModelBase::toJson(m_SocketTimeout);
    }
    

    return val;
}

void ComDayCqAnalyticsTestandtargetImplServiceWebServiceImplProperties::fromJson(nlohmann::json& val)
{
    if(val.find("endpointUri") != val.end())
    {
        if(!val["endpointUri"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["endpointUri"]);
            setEndpointUri( newItem );
        }
        
    }
    if(val.find("connectionTimeout") != val.end())
    {
        if(!val["connectionTimeout"].is_null())
        {
            ConfigNodePropertyInteger newItem;
            newItem.fromJson(val["connectionTimeout"]);
            setConnectionTimeout( newItem );
        }
        
    }
    if(val.find("socketTimeout") != val.end())
    {
        if(!val["socketTimeout"].is_null())
        {
            ConfigNodePropertyInteger newItem;
            newItem.fromJson(val["socketTimeout"]);
            setSocketTimeout( newItem );
        }
        
    }
    
}


ConfigNodePropertyString ComDayCqAnalyticsTestandtargetImplServiceWebServiceImplProperties::getEndpointUri() const
{
    return m_EndpointUri;
}
void ComDayCqAnalyticsTestandtargetImplServiceWebServiceImplProperties::setEndpointUri(ConfigNodePropertyString const& value)
{
    m_EndpointUri = value;
    m_EndpointUriIsSet = true;
}
bool ComDayCqAnalyticsTestandtargetImplServiceWebServiceImplProperties::endpointUriIsSet() const
{
    return m_EndpointUriIsSet;
}
void ComDayCqAnalyticsTestandtargetImplServiceWebServiceImplProperties::unsetEndpointUri()
{
    m_EndpointUriIsSet = false;
}
ConfigNodePropertyInteger ComDayCqAnalyticsTestandtargetImplServiceWebServiceImplProperties::getConnectionTimeout() const
{
    return m_ConnectionTimeout;
}
void ComDayCqAnalyticsTestandtargetImplServiceWebServiceImplProperties::setConnectionTimeout(ConfigNodePropertyInteger const& value)
{
    m_ConnectionTimeout = value;
    m_ConnectionTimeoutIsSet = true;
}
bool ComDayCqAnalyticsTestandtargetImplServiceWebServiceImplProperties::connectionTimeoutIsSet() const
{
    return m_ConnectionTimeoutIsSet;
}
void ComDayCqAnalyticsTestandtargetImplServiceWebServiceImplProperties::unsetConnectionTimeout()
{
    m_ConnectionTimeoutIsSet = false;
}
ConfigNodePropertyInteger ComDayCqAnalyticsTestandtargetImplServiceWebServiceImplProperties::getSocketTimeout() const
{
    return m_SocketTimeout;
}
void ComDayCqAnalyticsTestandtargetImplServiceWebServiceImplProperties::setSocketTimeout(ConfigNodePropertyInteger const& value)
{
    m_SocketTimeout = value;
    m_SocketTimeoutIsSet = true;
}
bool ComDayCqAnalyticsTestandtargetImplServiceWebServiceImplProperties::socketTimeoutIsSet() const
{
    return m_SocketTimeoutIsSet;
}
void ComDayCqAnalyticsTestandtargetImplServiceWebServiceImplProperties::unsetSocketTimeout()
{
    m_SocketTimeoutIsSet = false;
}

}
}
}
}

