# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server.models.config_node_property_array import ConfigNodePropertyArray  # noqa: F401,E501
from openapi_server.models.config_node_property_boolean import ConfigNodePropertyBoolean  # noqa: F401,E501
from openapi_server.models.config_node_property_integer import ConfigNodePropertyInteger  # noqa: F401,E501
from openapi_server import util


class OrgApacheJackrabbitOakPluginsDocumentSecondarySecondaryStoreCacProperties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, included_paths: ConfigNodePropertyArray=None, enable_async_observer: ConfigNodePropertyBoolean=None, observer_queue_size: ConfigNodePropertyInteger=None):  # noqa: E501
        """OrgApacheJackrabbitOakPluginsDocumentSecondarySecondaryStoreCacProperties - a model defined in OpenAPI

        :param included_paths: The included_paths of this OrgApacheJackrabbitOakPluginsDocumentSecondarySecondaryStoreCacProperties.  # noqa: E501
        :type included_paths: ConfigNodePropertyArray
        :param enable_async_observer: The enable_async_observer of this OrgApacheJackrabbitOakPluginsDocumentSecondarySecondaryStoreCacProperties.  # noqa: E501
        :type enable_async_observer: ConfigNodePropertyBoolean
        :param observer_queue_size: The observer_queue_size of this OrgApacheJackrabbitOakPluginsDocumentSecondarySecondaryStoreCacProperties.  # noqa: E501
        :type observer_queue_size: ConfigNodePropertyInteger
        """
        self.openapi_types = {
            'included_paths': ConfigNodePropertyArray,
            'enable_async_observer': ConfigNodePropertyBoolean,
            'observer_queue_size': ConfigNodePropertyInteger
        }

        self.attribute_map = {
            'included_paths': 'includedPaths',
            'enable_async_observer': 'enableAsyncObserver',
            'observer_queue_size': 'observerQueueSize'
        }

        self._included_paths = included_paths
        self._enable_async_observer = enable_async_observer
        self._observer_queue_size = observer_queue_size

    @classmethod
    def from_dict(cls, dikt) -> 'OrgApacheJackrabbitOakPluginsDocumentSecondarySecondaryStoreCacProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The orgApacheJackrabbitOakPluginsDocumentSecondarySecondaryStoreCacProperties of this OrgApacheJackrabbitOakPluginsDocumentSecondarySecondaryStoreCacProperties.  # noqa: E501
        :rtype: OrgApacheJackrabbitOakPluginsDocumentSecondarySecondaryStoreCacProperties
        """
        return util.deserialize_model(dikt, cls)

    @property
    def included_paths(self) -> ConfigNodePropertyArray:
        """Gets the included_paths of this OrgApacheJackrabbitOakPluginsDocumentSecondarySecondaryStoreCacProperties.


        :return: The included_paths of this OrgApacheJackrabbitOakPluginsDocumentSecondarySecondaryStoreCacProperties.
        :rtype: ConfigNodePropertyArray
        """
        return self._included_paths

    @included_paths.setter
    def included_paths(self, included_paths: ConfigNodePropertyArray):
        """Sets the included_paths of this OrgApacheJackrabbitOakPluginsDocumentSecondarySecondaryStoreCacProperties.


        :param included_paths: The included_paths of this OrgApacheJackrabbitOakPluginsDocumentSecondarySecondaryStoreCacProperties.
        :type included_paths: ConfigNodePropertyArray
        """

        self._included_paths = included_paths

    @property
    def enable_async_observer(self) -> ConfigNodePropertyBoolean:
        """Gets the enable_async_observer of this OrgApacheJackrabbitOakPluginsDocumentSecondarySecondaryStoreCacProperties.


        :return: The enable_async_observer of this OrgApacheJackrabbitOakPluginsDocumentSecondarySecondaryStoreCacProperties.
        :rtype: ConfigNodePropertyBoolean
        """
        return self._enable_async_observer

    @enable_async_observer.setter
    def enable_async_observer(self, enable_async_observer: ConfigNodePropertyBoolean):
        """Sets the enable_async_observer of this OrgApacheJackrabbitOakPluginsDocumentSecondarySecondaryStoreCacProperties.


        :param enable_async_observer: The enable_async_observer of this OrgApacheJackrabbitOakPluginsDocumentSecondarySecondaryStoreCacProperties.
        :type enable_async_observer: ConfigNodePropertyBoolean
        """

        self._enable_async_observer = enable_async_observer

    @property
    def observer_queue_size(self) -> ConfigNodePropertyInteger:
        """Gets the observer_queue_size of this OrgApacheJackrabbitOakPluginsDocumentSecondarySecondaryStoreCacProperties.


        :return: The observer_queue_size of this OrgApacheJackrabbitOakPluginsDocumentSecondarySecondaryStoreCacProperties.
        :rtype: ConfigNodePropertyInteger
        """
        return self._observer_queue_size

    @observer_queue_size.setter
    def observer_queue_size(self, observer_queue_size: ConfigNodePropertyInteger):
        """Sets the observer_queue_size of this OrgApacheJackrabbitOakPluginsDocumentSecondarySecondaryStoreCacProperties.


        :param observer_queue_size: The observer_queue_size of this OrgApacheJackrabbitOakPluginsDocumentSecondarySecondaryStoreCacProperties.
        :type observer_queue_size: ConfigNodePropertyInteger
        """

        self._observer_queue_size = observer_queue_size
