<?php
/**
 * ComDayCqWcmCoreImplVersionPurgeTaskProperties
 *
 * PHP version 5
 *
 * @category Class
 * @package  OpenAPI\Server\Model
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * Adobe Experience Manager OSGI config (AEM) API
 *
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 *
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Do not edit the class manually.
 */

namespace OpenAPI\Server\Model;

use Symfony\Component\Validator\Constraints as Assert;
use JMS\Serializer\Annotation\Type;
use JMS\Serializer\Annotation\SerializedName;

/**
 * Class representing the ComDayCqWcmCoreImplVersionPurgeTaskProperties model.
 *
 * @package OpenAPI\Server\Model
 * @author  OpenAPI Generator team
 */
class ComDayCqWcmCoreImplVersionPurgeTaskProperties 
{
        /**
     * @var OpenAPI\Server\Model\ConfigNodePropertyArray|null
     * @SerializedName("versionpurge.paths")
     * @Assert\Type("OpenAPI\Server\Model\ConfigNodePropertyArray")
     * @Type("OpenAPI\Server\Model\ConfigNodePropertyArray")
     */
    protected $versionpurgePaths;

    /**
     * @var OpenAPI\Server\Model\ConfigNodePropertyBoolean|null
     * @SerializedName("versionpurge.recursive")
     * @Assert\Type("OpenAPI\Server\Model\ConfigNodePropertyBoolean")
     * @Type("OpenAPI\Server\Model\ConfigNodePropertyBoolean")
     */
    protected $versionpurgeRecursive;

    /**
     * @var OpenAPI\Server\Model\ConfigNodePropertyInteger|null
     * @SerializedName("versionpurge.maxVersions")
     * @Assert\Type("OpenAPI\Server\Model\ConfigNodePropertyInteger")
     * @Type("OpenAPI\Server\Model\ConfigNodePropertyInteger")
     */
    protected $versionpurgeMaxVersions;

    /**
     * @var OpenAPI\Server\Model\ConfigNodePropertyInteger|null
     * @SerializedName("versionpurge.minVersions")
     * @Assert\Type("OpenAPI\Server\Model\ConfigNodePropertyInteger")
     * @Type("OpenAPI\Server\Model\ConfigNodePropertyInteger")
     */
    protected $versionpurgeMinVersions;

    /**
     * @var OpenAPI\Server\Model\ConfigNodePropertyInteger|null
     * @SerializedName("versionpurge.maxAgeDays")
     * @Assert\Type("OpenAPI\Server\Model\ConfigNodePropertyInteger")
     * @Type("OpenAPI\Server\Model\ConfigNodePropertyInteger")
     */
    protected $versionpurgeMaxAgeDays;

    /**
     * Constructor
     * @param mixed[] $data Associated array of property values initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->versionpurgePaths = isset($data['versionpurgePaths']) ? $data['versionpurgePaths'] : null;
        $this->versionpurgeRecursive = isset($data['versionpurgeRecursive']) ? $data['versionpurgeRecursive'] : null;
        $this->versionpurgeMaxVersions = isset($data['versionpurgeMaxVersions']) ? $data['versionpurgeMaxVersions'] : null;
        $this->versionpurgeMinVersions = isset($data['versionpurgeMinVersions']) ? $data['versionpurgeMinVersions'] : null;
        $this->versionpurgeMaxAgeDays = isset($data['versionpurgeMaxAgeDays']) ? $data['versionpurgeMaxAgeDays'] : null;
    }

    /**
     * Gets versionpurgePaths.
     *
     * @return OpenAPI\Server\Model\ConfigNodePropertyArray|null
     */
    public function getVersionpurgePaths()
    {
        return $this->versionpurgePaths;
    }

    /**
     * Sets versionpurgePaths.
     *
     * @param OpenAPI\Server\Model\ConfigNodePropertyArray|null $versionpurgePaths
     *
     * @return $this
     */
    public function setVersionpurgePaths(ConfigNodePropertyArray $versionpurgePaths = null)
    {
        $this->versionpurgePaths = $versionpurgePaths;

        return $this;
    }

    /**
     * Gets versionpurgeRecursive.
     *
     * @return OpenAPI\Server\Model\ConfigNodePropertyBoolean|null
     */
    public function getVersionpurgeRecursive()
    {
        return $this->versionpurgeRecursive;
    }

    /**
     * Sets versionpurgeRecursive.
     *
     * @param OpenAPI\Server\Model\ConfigNodePropertyBoolean|null $versionpurgeRecursive
     *
     * @return $this
     */
    public function setVersionpurgeRecursive(ConfigNodePropertyBoolean $versionpurgeRecursive = null)
    {
        $this->versionpurgeRecursive = $versionpurgeRecursive;

        return $this;
    }

    /**
     * Gets versionpurgeMaxVersions.
     *
     * @return OpenAPI\Server\Model\ConfigNodePropertyInteger|null
     */
    public function getVersionpurgeMaxVersions()
    {
        return $this->versionpurgeMaxVersions;
    }

    /**
     * Sets versionpurgeMaxVersions.
     *
     * @param OpenAPI\Server\Model\ConfigNodePropertyInteger|null $versionpurgeMaxVersions
     *
     * @return $this
     */
    public function setVersionpurgeMaxVersions(ConfigNodePropertyInteger $versionpurgeMaxVersions = null)
    {
        $this->versionpurgeMaxVersions = $versionpurgeMaxVersions;

        return $this;
    }

    /**
     * Gets versionpurgeMinVersions.
     *
     * @return OpenAPI\Server\Model\ConfigNodePropertyInteger|null
     */
    public function getVersionpurgeMinVersions()
    {
        return $this->versionpurgeMinVersions;
    }

    /**
     * Sets versionpurgeMinVersions.
     *
     * @param OpenAPI\Server\Model\ConfigNodePropertyInteger|null $versionpurgeMinVersions
     *
     * @return $this
     */
    public function setVersionpurgeMinVersions(ConfigNodePropertyInteger $versionpurgeMinVersions = null)
    {
        $this->versionpurgeMinVersions = $versionpurgeMinVersions;

        return $this;
    }

    /**
     * Gets versionpurgeMaxAgeDays.
     *
     * @return OpenAPI\Server\Model\ConfigNodePropertyInteger|null
     */
    public function getVersionpurgeMaxAgeDays()
    {
        return $this->versionpurgeMaxAgeDays;
    }

    /**
     * Sets versionpurgeMaxAgeDays.
     *
     * @param OpenAPI\Server\Model\ConfigNodePropertyInteger|null $versionpurgeMaxAgeDays
     *
     * @return $this
     */
    public function setVersionpurgeMaxAgeDays(ConfigNodePropertyInteger $versionpurgeMaxAgeDays = null)
    {
        $this->versionpurgeMaxAgeDays = $versionpurgeMaxAgeDays;

        return $this;
    }
}


