/**
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


#include "OAIComAdobeAemUpgradePrechecksHcImplDeprecateIndexesHCProperties.h"

#include "OAIHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace OpenAPI {

OAIComAdobeAemUpgradePrechecksHcImplDeprecateIndexesHCProperties::OAIComAdobeAemUpgradePrechecksHcImplDeprecateIndexesHCProperties(QString json) {
    init();
    this->fromJson(json);
}

OAIComAdobeAemUpgradePrechecksHcImplDeprecateIndexesHCProperties::OAIComAdobeAemUpgradePrechecksHcImplDeprecateIndexesHCProperties() {
    init();
}

OAIComAdobeAemUpgradePrechecksHcImplDeprecateIndexesHCProperties::~OAIComAdobeAemUpgradePrechecksHcImplDeprecateIndexesHCProperties() {
    this->cleanup();
}

void
OAIComAdobeAemUpgradePrechecksHcImplDeprecateIndexesHCProperties::init() {
    hc_name = new OAIConfigNodePropertyString();
    m_hc_name_isSet = false;
    hc_tags = new OAIConfigNodePropertyArray();
    m_hc_tags_isSet = false;
    hc_mbean_name = new OAIConfigNodePropertyString();
    m_hc_mbean_name_isSet = false;
}

void
OAIComAdobeAemUpgradePrechecksHcImplDeprecateIndexesHCProperties::cleanup() {
    if(hc_name != nullptr) { 
        delete hc_name;
    }
    if(hc_tags != nullptr) { 
        delete hc_tags;
    }
    if(hc_mbean_name != nullptr) { 
        delete hc_mbean_name;
    }
}

OAIComAdobeAemUpgradePrechecksHcImplDeprecateIndexesHCProperties*
OAIComAdobeAemUpgradePrechecksHcImplDeprecateIndexesHCProperties::fromJson(QString json) {
    QByteArray array (json.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
    return this;
}

void
OAIComAdobeAemUpgradePrechecksHcImplDeprecateIndexesHCProperties::fromJsonObject(QJsonObject pJson) {
    ::OpenAPI::setValue(&hc_name, pJson["hc.name"], "OAIConfigNodePropertyString", "OAIConfigNodePropertyString");
    
    ::OpenAPI::setValue(&hc_tags, pJson["hc.tags"], "OAIConfigNodePropertyArray", "OAIConfigNodePropertyArray");
    
    ::OpenAPI::setValue(&hc_mbean_name, pJson["hc.mbean.name"], "OAIConfigNodePropertyString", "OAIConfigNodePropertyString");
    
}

QString
OAIComAdobeAemUpgradePrechecksHcImplDeprecateIndexesHCProperties::asJson ()
{
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject
OAIComAdobeAemUpgradePrechecksHcImplDeprecateIndexesHCProperties::asJsonObject() {
    QJsonObject obj;
    if((hc_name != nullptr) && (hc_name->isSet())){
        toJsonValue(QString("hc.name"), hc_name, obj, QString("OAIConfigNodePropertyString"));
    }
    if((hc_tags != nullptr) && (hc_tags->isSet())){
        toJsonValue(QString("hc.tags"), hc_tags, obj, QString("OAIConfigNodePropertyArray"));
    }
    if((hc_mbean_name != nullptr) && (hc_mbean_name->isSet())){
        toJsonValue(QString("hc.mbean.name"), hc_mbean_name, obj, QString("OAIConfigNodePropertyString"));
    }

    return obj;
}

OAIConfigNodePropertyString*
OAIComAdobeAemUpgradePrechecksHcImplDeprecateIndexesHCProperties::getHcName() {
    return hc_name;
}
void
OAIComAdobeAemUpgradePrechecksHcImplDeprecateIndexesHCProperties::setHcName(OAIConfigNodePropertyString* hc_name) {
    this->hc_name = hc_name;
    this->m_hc_name_isSet = true;
}

OAIConfigNodePropertyArray*
OAIComAdobeAemUpgradePrechecksHcImplDeprecateIndexesHCProperties::getHcTags() {
    return hc_tags;
}
void
OAIComAdobeAemUpgradePrechecksHcImplDeprecateIndexesHCProperties::setHcTags(OAIConfigNodePropertyArray* hc_tags) {
    this->hc_tags = hc_tags;
    this->m_hc_tags_isSet = true;
}

OAIConfigNodePropertyString*
OAIComAdobeAemUpgradePrechecksHcImplDeprecateIndexesHCProperties::getHcMbeanName() {
    return hc_mbean_name;
}
void
OAIComAdobeAemUpgradePrechecksHcImplDeprecateIndexesHCProperties::setHcMbeanName(OAIConfigNodePropertyString* hc_mbean_name) {
    this->hc_mbean_name = hc_mbean_name;
    this->m_hc_mbean_name_isSet = true;
}


bool
OAIComAdobeAemUpgradePrechecksHcImplDeprecateIndexesHCProperties::isSet(){
    bool isObjectUpdated = false;
    do{
        if(hc_name != nullptr && hc_name->isSet()){ isObjectUpdated = true; break;}
        if(hc_tags != nullptr && hc_tags->isSet()){ isObjectUpdated = true; break;}
        if(hc_mbean_name != nullptr && hc_mbean_name->isSet()){ isObjectUpdated = true; break;}
    }while(false);
    return isObjectUpdated;
}
}

