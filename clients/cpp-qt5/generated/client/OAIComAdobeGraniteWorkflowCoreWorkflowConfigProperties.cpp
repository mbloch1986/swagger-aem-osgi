/**
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


#include "OAIComAdobeGraniteWorkflowCoreWorkflowConfigProperties.h"

#include "OAIHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace OpenAPI {

OAIComAdobeGraniteWorkflowCoreWorkflowConfigProperties::OAIComAdobeGraniteWorkflowCoreWorkflowConfigProperties(QString json) {
    init();
    this->fromJson(json);
}

OAIComAdobeGraniteWorkflowCoreWorkflowConfigProperties::OAIComAdobeGraniteWorkflowCoreWorkflowConfigProperties() {
    init();
}

OAIComAdobeGraniteWorkflowCoreWorkflowConfigProperties::~OAIComAdobeGraniteWorkflowCoreWorkflowConfigProperties() {
    this->cleanup();
}

void
OAIComAdobeGraniteWorkflowCoreWorkflowConfigProperties::init() {
    cq_workflow_config_workflow_packages_root_path = new OAIConfigNodePropertyArray();
    m_cq_workflow_config_workflow_packages_root_path_isSet = false;
    cq_workflow_config_workflow_process_legacy_mode = new OAIConfigNodePropertyBoolean();
    m_cq_workflow_config_workflow_process_legacy_mode_isSet = false;
    cq_workflow_config_allow_locking = new OAIConfigNodePropertyBoolean();
    m_cq_workflow_config_allow_locking_isSet = false;
}

void
OAIComAdobeGraniteWorkflowCoreWorkflowConfigProperties::cleanup() {
    if(cq_workflow_config_workflow_packages_root_path != nullptr) { 
        delete cq_workflow_config_workflow_packages_root_path;
    }
    if(cq_workflow_config_workflow_process_legacy_mode != nullptr) { 
        delete cq_workflow_config_workflow_process_legacy_mode;
    }
    if(cq_workflow_config_allow_locking != nullptr) { 
        delete cq_workflow_config_allow_locking;
    }
}

OAIComAdobeGraniteWorkflowCoreWorkflowConfigProperties*
OAIComAdobeGraniteWorkflowCoreWorkflowConfigProperties::fromJson(QString json) {
    QByteArray array (json.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
    return this;
}

void
OAIComAdobeGraniteWorkflowCoreWorkflowConfigProperties::fromJsonObject(QJsonObject pJson) {
    ::OpenAPI::setValue(&cq_workflow_config_workflow_packages_root_path, pJson["cq.workflow.config.workflow.packages.root.path"], "OAIConfigNodePropertyArray", "OAIConfigNodePropertyArray");
    
    ::OpenAPI::setValue(&cq_workflow_config_workflow_process_legacy_mode, pJson["cq.workflow.config.workflow.process.legacy.mode"], "OAIConfigNodePropertyBoolean", "OAIConfigNodePropertyBoolean");
    
    ::OpenAPI::setValue(&cq_workflow_config_allow_locking, pJson["cq.workflow.config.allow.locking"], "OAIConfigNodePropertyBoolean", "OAIConfigNodePropertyBoolean");
    
}

QString
OAIComAdobeGraniteWorkflowCoreWorkflowConfigProperties::asJson ()
{
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject
OAIComAdobeGraniteWorkflowCoreWorkflowConfigProperties::asJsonObject() {
    QJsonObject obj;
    if((cq_workflow_config_workflow_packages_root_path != nullptr) && (cq_workflow_config_workflow_packages_root_path->isSet())){
        toJsonValue(QString("cq.workflow.config.workflow.packages.root.path"), cq_workflow_config_workflow_packages_root_path, obj, QString("OAIConfigNodePropertyArray"));
    }
    if((cq_workflow_config_workflow_process_legacy_mode != nullptr) && (cq_workflow_config_workflow_process_legacy_mode->isSet())){
        toJsonValue(QString("cq.workflow.config.workflow.process.legacy.mode"), cq_workflow_config_workflow_process_legacy_mode, obj, QString("OAIConfigNodePropertyBoolean"));
    }
    if((cq_workflow_config_allow_locking != nullptr) && (cq_workflow_config_allow_locking->isSet())){
        toJsonValue(QString("cq.workflow.config.allow.locking"), cq_workflow_config_allow_locking, obj, QString("OAIConfigNodePropertyBoolean"));
    }

    return obj;
}

OAIConfigNodePropertyArray*
OAIComAdobeGraniteWorkflowCoreWorkflowConfigProperties::getCqWorkflowConfigWorkflowPackagesRootPath() {
    return cq_workflow_config_workflow_packages_root_path;
}
void
OAIComAdobeGraniteWorkflowCoreWorkflowConfigProperties::setCqWorkflowConfigWorkflowPackagesRootPath(OAIConfigNodePropertyArray* cq_workflow_config_workflow_packages_root_path) {
    this->cq_workflow_config_workflow_packages_root_path = cq_workflow_config_workflow_packages_root_path;
    this->m_cq_workflow_config_workflow_packages_root_path_isSet = true;
}

OAIConfigNodePropertyBoolean*
OAIComAdobeGraniteWorkflowCoreWorkflowConfigProperties::getCqWorkflowConfigWorkflowProcessLegacyMode() {
    return cq_workflow_config_workflow_process_legacy_mode;
}
void
OAIComAdobeGraniteWorkflowCoreWorkflowConfigProperties::setCqWorkflowConfigWorkflowProcessLegacyMode(OAIConfigNodePropertyBoolean* cq_workflow_config_workflow_process_legacy_mode) {
    this->cq_workflow_config_workflow_process_legacy_mode = cq_workflow_config_workflow_process_legacy_mode;
    this->m_cq_workflow_config_workflow_process_legacy_mode_isSet = true;
}

OAIConfigNodePropertyBoolean*
OAIComAdobeGraniteWorkflowCoreWorkflowConfigProperties::getCqWorkflowConfigAllowLocking() {
    return cq_workflow_config_allow_locking;
}
void
OAIComAdobeGraniteWorkflowCoreWorkflowConfigProperties::setCqWorkflowConfigAllowLocking(OAIConfigNodePropertyBoolean* cq_workflow_config_allow_locking) {
    this->cq_workflow_config_allow_locking = cq_workflow_config_allow_locking;
    this->m_cq_workflow_config_allow_locking_isSet = true;
}


bool
OAIComAdobeGraniteWorkflowCoreWorkflowConfigProperties::isSet(){
    bool isObjectUpdated = false;
    do{
        if(cq_workflow_config_workflow_packages_root_path != nullptr && cq_workflow_config_workflow_packages_root_path->isSet()){ isObjectUpdated = true; break;}
        if(cq_workflow_config_workflow_process_legacy_mode != nullptr && cq_workflow_config_workflow_process_legacy_mode->isSet()){ isObjectUpdated = true; break;}
        if(cq_workflow_config_allow_locking != nullptr && cq_workflow_config_allow_locking->isSet()){ isObjectUpdated = true; break;}
    }while(false);
    return isObjectUpdated;
}
}

