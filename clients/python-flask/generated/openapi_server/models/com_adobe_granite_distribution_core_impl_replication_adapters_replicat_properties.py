# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server.models.config_node_property_boolean import ConfigNodePropertyBoolean  # noqa: F401,E501
from openapi_server.models.config_node_property_string import ConfigNodePropertyString  # noqa: F401,E501
from openapi_server import util


class ComAdobeGraniteDistributionCoreImplReplicationAdaptersReplicatProperties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, provider_name: ConfigNodePropertyString=None, forward_requests: ConfigNodePropertyBoolean=None):  # noqa: E501
        """ComAdobeGraniteDistributionCoreImplReplicationAdaptersReplicatProperties - a model defined in OpenAPI

        :param provider_name: The provider_name of this ComAdobeGraniteDistributionCoreImplReplicationAdaptersReplicatProperties.  # noqa: E501
        :type provider_name: ConfigNodePropertyString
        :param forward_requests: The forward_requests of this ComAdobeGraniteDistributionCoreImplReplicationAdaptersReplicatProperties.  # noqa: E501
        :type forward_requests: ConfigNodePropertyBoolean
        """
        self.openapi_types = {
            'provider_name': ConfigNodePropertyString,
            'forward_requests': ConfigNodePropertyBoolean
        }

        self.attribute_map = {
            'provider_name': 'providerName',
            'forward_requests': 'forward.requests'
        }

        self._provider_name = provider_name
        self._forward_requests = forward_requests

    @classmethod
    def from_dict(cls, dikt) -> 'ComAdobeGraniteDistributionCoreImplReplicationAdaptersReplicatProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The comAdobeGraniteDistributionCoreImplReplicationAdaptersReplicatProperties of this ComAdobeGraniteDistributionCoreImplReplicationAdaptersReplicatProperties.  # noqa: E501
        :rtype: ComAdobeGraniteDistributionCoreImplReplicationAdaptersReplicatProperties
        """
        return util.deserialize_model(dikt, cls)

    @property
    def provider_name(self) -> ConfigNodePropertyString:
        """Gets the provider_name of this ComAdobeGraniteDistributionCoreImplReplicationAdaptersReplicatProperties.


        :return: The provider_name of this ComAdobeGraniteDistributionCoreImplReplicationAdaptersReplicatProperties.
        :rtype: ConfigNodePropertyString
        """
        return self._provider_name

    @provider_name.setter
    def provider_name(self, provider_name: ConfigNodePropertyString):
        """Sets the provider_name of this ComAdobeGraniteDistributionCoreImplReplicationAdaptersReplicatProperties.


        :param provider_name: The provider_name of this ComAdobeGraniteDistributionCoreImplReplicationAdaptersReplicatProperties.
        :type provider_name: ConfigNodePropertyString
        """

        self._provider_name = provider_name

    @property
    def forward_requests(self) -> ConfigNodePropertyBoolean:
        """Gets the forward_requests of this ComAdobeGraniteDistributionCoreImplReplicationAdaptersReplicatProperties.


        :return: The forward_requests of this ComAdobeGraniteDistributionCoreImplReplicationAdaptersReplicatProperties.
        :rtype: ConfigNodePropertyBoolean
        """
        return self._forward_requests

    @forward_requests.setter
    def forward_requests(self, forward_requests: ConfigNodePropertyBoolean):
        """Sets the forward_requests of this ComAdobeGraniteDistributionCoreImplReplicationAdaptersReplicatProperties.


        :param forward_requests: The forward_requests of this ComAdobeGraniteDistributionCoreImplReplicationAdaptersReplicatProperties.
        :type forward_requests: ConfigNodePropertyBoolean
        """

        self._forward_requests = forward_requests
