/**
* Adobe Experience Manager OSGI config (AEM) API
* Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
*
* OpenAPI spec version: 1.0.0-pre.0
* Contact: opensource@shinesolutions.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/


#include "ComDayCqDamCoreImplMissingMetadataNotificationJobProperties.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

ComDayCqDamCoreImplMissingMetadataNotificationJobProperties::ComDayCqDamCoreImplMissingMetadataNotificationJobProperties()
{
    m_Cq_dam_missingmetadata_notification_scheduler_istimebasedIsSet = false;
    m_Cq_dam_missingmetadata_notification_scheduler_timebased_ruleIsSet = false;
    m_Cq_dam_missingmetadata_notification_scheduler_period_ruleIsSet = false;
    m_Cq_dam_missingmetadata_notification_recipientIsSet = false;
    
}

ComDayCqDamCoreImplMissingMetadataNotificationJobProperties::~ComDayCqDamCoreImplMissingMetadataNotificationJobProperties()
{
}

void ComDayCqDamCoreImplMissingMetadataNotificationJobProperties::validate()
{
    // TODO: implement validation
}

nlohmann::json ComDayCqDamCoreImplMissingMetadataNotificationJobProperties::toJson() const
{
    nlohmann::json val = nlohmann::json::object();

    if(m_Cq_dam_missingmetadata_notification_scheduler_istimebasedIsSet)
    {
        val["cq.dam.missingmetadata.notification.scheduler.istimebased"] = ModelBase::toJson(m_Cq_dam_missingmetadata_notification_scheduler_istimebased);
    }
    if(m_Cq_dam_missingmetadata_notification_scheduler_timebased_ruleIsSet)
    {
        val["cq.dam.missingmetadata.notification.scheduler.timebased.rule"] = ModelBase::toJson(m_Cq_dam_missingmetadata_notification_scheduler_timebased_rule);
    }
    if(m_Cq_dam_missingmetadata_notification_scheduler_period_ruleIsSet)
    {
        val["cq.dam.missingmetadata.notification.scheduler.period.rule"] = ModelBase::toJson(m_Cq_dam_missingmetadata_notification_scheduler_period_rule);
    }
    if(m_Cq_dam_missingmetadata_notification_recipientIsSet)
    {
        val["cq.dam.missingmetadata.notification.recipient"] = ModelBase::toJson(m_Cq_dam_missingmetadata_notification_recipient);
    }
    

    return val;
}

void ComDayCqDamCoreImplMissingMetadataNotificationJobProperties::fromJson(nlohmann::json& val)
{
    if(val.find("cq.dam.missingmetadata.notification.scheduler.istimebased") != val.end())
    {
        if(!val["cq.dam.missingmetadata.notification.scheduler.istimebased"].is_null())
        {
            ConfigNodePropertyBoolean newItem;
            newItem.fromJson(val["cq.dam.missingmetadata.notification.scheduler.istimebased"]);
            setCqDamMissingmetadataNotificationSchedulerIstimebased( newItem );
        }
        
    }
    if(val.find("cq.dam.missingmetadata.notification.scheduler.timebased.rule") != val.end())
    {
        if(!val["cq.dam.missingmetadata.notification.scheduler.timebased.rule"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["cq.dam.missingmetadata.notification.scheduler.timebased.rule"]);
            setCqDamMissingmetadataNotificationSchedulerTimebasedRule( newItem );
        }
        
    }
    if(val.find("cq.dam.missingmetadata.notification.scheduler.period.rule") != val.end())
    {
        if(!val["cq.dam.missingmetadata.notification.scheduler.period.rule"].is_null())
        {
            ConfigNodePropertyInteger newItem;
            newItem.fromJson(val["cq.dam.missingmetadata.notification.scheduler.period.rule"]);
            setCqDamMissingmetadataNotificationSchedulerPeriodRule( newItem );
        }
        
    }
    if(val.find("cq.dam.missingmetadata.notification.recipient") != val.end())
    {
        if(!val["cq.dam.missingmetadata.notification.recipient"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["cq.dam.missingmetadata.notification.recipient"]);
            setCqDamMissingmetadataNotificationRecipient( newItem );
        }
        
    }
    
}


ConfigNodePropertyBoolean ComDayCqDamCoreImplMissingMetadataNotificationJobProperties::getCqDamMissingmetadataNotificationSchedulerIstimebased() const
{
    return m_Cq_dam_missingmetadata_notification_scheduler_istimebased;
}
void ComDayCqDamCoreImplMissingMetadataNotificationJobProperties::setCqDamMissingmetadataNotificationSchedulerIstimebased(ConfigNodePropertyBoolean const& value)
{
    m_Cq_dam_missingmetadata_notification_scheduler_istimebased = value;
    m_Cq_dam_missingmetadata_notification_scheduler_istimebasedIsSet = true;
}
bool ComDayCqDamCoreImplMissingMetadataNotificationJobProperties::cqDamMissingmetadataNotificationSchedulerIstimebasedIsSet() const
{
    return m_Cq_dam_missingmetadata_notification_scheduler_istimebasedIsSet;
}
void ComDayCqDamCoreImplMissingMetadataNotificationJobProperties::unsetCq_dam_missingmetadata_notification_scheduler_istimebased()
{
    m_Cq_dam_missingmetadata_notification_scheduler_istimebasedIsSet = false;
}
ConfigNodePropertyString ComDayCqDamCoreImplMissingMetadataNotificationJobProperties::getCqDamMissingmetadataNotificationSchedulerTimebasedRule() const
{
    return m_Cq_dam_missingmetadata_notification_scheduler_timebased_rule;
}
void ComDayCqDamCoreImplMissingMetadataNotificationJobProperties::setCqDamMissingmetadataNotificationSchedulerTimebasedRule(ConfigNodePropertyString const& value)
{
    m_Cq_dam_missingmetadata_notification_scheduler_timebased_rule = value;
    m_Cq_dam_missingmetadata_notification_scheduler_timebased_ruleIsSet = true;
}
bool ComDayCqDamCoreImplMissingMetadataNotificationJobProperties::cqDamMissingmetadataNotificationSchedulerTimebasedRuleIsSet() const
{
    return m_Cq_dam_missingmetadata_notification_scheduler_timebased_ruleIsSet;
}
void ComDayCqDamCoreImplMissingMetadataNotificationJobProperties::unsetCq_dam_missingmetadata_notification_scheduler_timebased_rule()
{
    m_Cq_dam_missingmetadata_notification_scheduler_timebased_ruleIsSet = false;
}
ConfigNodePropertyInteger ComDayCqDamCoreImplMissingMetadataNotificationJobProperties::getCqDamMissingmetadataNotificationSchedulerPeriodRule() const
{
    return m_Cq_dam_missingmetadata_notification_scheduler_period_rule;
}
void ComDayCqDamCoreImplMissingMetadataNotificationJobProperties::setCqDamMissingmetadataNotificationSchedulerPeriodRule(ConfigNodePropertyInteger const& value)
{
    m_Cq_dam_missingmetadata_notification_scheduler_period_rule = value;
    m_Cq_dam_missingmetadata_notification_scheduler_period_ruleIsSet = true;
}
bool ComDayCqDamCoreImplMissingMetadataNotificationJobProperties::cqDamMissingmetadataNotificationSchedulerPeriodRuleIsSet() const
{
    return m_Cq_dam_missingmetadata_notification_scheduler_period_ruleIsSet;
}
void ComDayCqDamCoreImplMissingMetadataNotificationJobProperties::unsetCq_dam_missingmetadata_notification_scheduler_period_rule()
{
    m_Cq_dam_missingmetadata_notification_scheduler_period_ruleIsSet = false;
}
ConfigNodePropertyString ComDayCqDamCoreImplMissingMetadataNotificationJobProperties::getCqDamMissingmetadataNotificationRecipient() const
{
    return m_Cq_dam_missingmetadata_notification_recipient;
}
void ComDayCqDamCoreImplMissingMetadataNotificationJobProperties::setCqDamMissingmetadataNotificationRecipient(ConfigNodePropertyString const& value)
{
    m_Cq_dam_missingmetadata_notification_recipient = value;
    m_Cq_dam_missingmetadata_notification_recipientIsSet = true;
}
bool ComDayCqDamCoreImplMissingMetadataNotificationJobProperties::cqDamMissingmetadataNotificationRecipientIsSet() const
{
    return m_Cq_dam_missingmetadata_notification_recipientIsSet;
}
void ComDayCqDamCoreImplMissingMetadataNotificationJobProperties::unsetCq_dam_missingmetadata_notification_recipient()
{
    m_Cq_dam_missingmetadata_notification_recipientIsSet = false;
}

}
}
}
}

