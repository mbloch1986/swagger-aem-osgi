/* 
 * Adobe Experience Manager OSGI config (AEM) API
 *
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using NUnit.Framework;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using Org.OpenAPITools.Api;
using Org.OpenAPITools.Model;
using Org.OpenAPITools.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace Org.OpenAPITools.Test
{
    /// <summary>
    ///  Class for testing OrgApacheJackrabbitOakSegmentSegmentNodeStoreFactoryProperties
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    [TestFixture]
    public class OrgApacheJackrabbitOakSegmentSegmentNodeStoreFactoryPropertiesTests
    {
        // TODO uncomment below to declare an instance variable for OrgApacheJackrabbitOakSegmentSegmentNodeStoreFactoryProperties
        //private OrgApacheJackrabbitOakSegmentSegmentNodeStoreFactoryProperties instance;

        /// <summary>
        /// Setup before each test
        /// </summary>
        [SetUp]
        public void Init()
        {
            // TODO uncomment below to create an instance of OrgApacheJackrabbitOakSegmentSegmentNodeStoreFactoryProperties
            //instance = new OrgApacheJackrabbitOakSegmentSegmentNodeStoreFactoryProperties();
        }

        /// <summary>
        /// Clean up after each test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of OrgApacheJackrabbitOakSegmentSegmentNodeStoreFactoryProperties
        /// </summary>
        [Test]
        public void OrgApacheJackrabbitOakSegmentSegmentNodeStoreFactoryPropertiesInstanceTest()
        {
            // TODO uncomment below to test "IsInstanceOfType" OrgApacheJackrabbitOakSegmentSegmentNodeStoreFactoryProperties
            //Assert.IsInstanceOfType<OrgApacheJackrabbitOakSegmentSegmentNodeStoreFactoryProperties> (instance, "variable 'instance' is a OrgApacheJackrabbitOakSegmentSegmentNodeStoreFactoryProperties");
        }


        /// <summary>
        /// Test the property 'RepositoryHome'
        /// </summary>
        [Test]
        public void RepositoryHomeTest()
        {
            // TODO unit test for the property 'RepositoryHome'
        }
        /// <summary>
        /// Test the property 'TarmkMode'
        /// </summary>
        [Test]
        public void TarmkModeTest()
        {
            // TODO unit test for the property 'TarmkMode'
        }
        /// <summary>
        /// Test the property 'TarmkSize'
        /// </summary>
        [Test]
        public void TarmkSizeTest()
        {
            // TODO unit test for the property 'TarmkSize'
        }
        /// <summary>
        /// Test the property 'SegmentCacheSize'
        /// </summary>
        [Test]
        public void SegmentCacheSizeTest()
        {
            // TODO unit test for the property 'SegmentCacheSize'
        }
        /// <summary>
        /// Test the property 'StringCacheSize'
        /// </summary>
        [Test]
        public void StringCacheSizeTest()
        {
            // TODO unit test for the property 'StringCacheSize'
        }
        /// <summary>
        /// Test the property 'TemplateCacheSize'
        /// </summary>
        [Test]
        public void TemplateCacheSizeTest()
        {
            // TODO unit test for the property 'TemplateCacheSize'
        }
        /// <summary>
        /// Test the property 'StringDeduplicationCacheSize'
        /// </summary>
        [Test]
        public void StringDeduplicationCacheSizeTest()
        {
            // TODO unit test for the property 'StringDeduplicationCacheSize'
        }
        /// <summary>
        /// Test the property 'TemplateDeduplicationCacheSize'
        /// </summary>
        [Test]
        public void TemplateDeduplicationCacheSizeTest()
        {
            // TODO unit test for the property 'TemplateDeduplicationCacheSize'
        }
        /// <summary>
        /// Test the property 'NodeDeduplicationCacheSize'
        /// </summary>
        [Test]
        public void NodeDeduplicationCacheSizeTest()
        {
            // TODO unit test for the property 'NodeDeduplicationCacheSize'
        }
        /// <summary>
        /// Test the property 'PauseCompaction'
        /// </summary>
        [Test]
        public void PauseCompactionTest()
        {
            // TODO unit test for the property 'PauseCompaction'
        }
        /// <summary>
        /// Test the property 'CompactionRetryCount'
        /// </summary>
        [Test]
        public void CompactionRetryCountTest()
        {
            // TODO unit test for the property 'CompactionRetryCount'
        }
        /// <summary>
        /// Test the property 'CompactionForceTimeout'
        /// </summary>
        [Test]
        public void CompactionForceTimeoutTest()
        {
            // TODO unit test for the property 'CompactionForceTimeout'
        }
        /// <summary>
        /// Test the property 'CompactionSizeDeltaEstimation'
        /// </summary>
        [Test]
        public void CompactionSizeDeltaEstimationTest()
        {
            // TODO unit test for the property 'CompactionSizeDeltaEstimation'
        }
        /// <summary>
        /// Test the property 'CompactionDisableEstimation'
        /// </summary>
        [Test]
        public void CompactionDisableEstimationTest()
        {
            // TODO unit test for the property 'CompactionDisableEstimation'
        }
        /// <summary>
        /// Test the property 'CompactionRetainedGenerations'
        /// </summary>
        [Test]
        public void CompactionRetainedGenerationsTest()
        {
            // TODO unit test for the property 'CompactionRetainedGenerations'
        }
        /// <summary>
        /// Test the property 'CompactionMemoryThreshold'
        /// </summary>
        [Test]
        public void CompactionMemoryThresholdTest()
        {
            // TODO unit test for the property 'CompactionMemoryThreshold'
        }
        /// <summary>
        /// Test the property 'CompactionProgressLog'
        /// </summary>
        [Test]
        public void CompactionProgressLogTest()
        {
            // TODO unit test for the property 'CompactionProgressLog'
        }
        /// <summary>
        /// Test the property 'Standby'
        /// </summary>
        [Test]
        public void StandbyTest()
        {
            // TODO unit test for the property 'Standby'
        }
        /// <summary>
        /// Test the property 'CustomBlobStore'
        /// </summary>
        [Test]
        public void CustomBlobStoreTest()
        {
            // TODO unit test for the property 'CustomBlobStore'
        }
        /// <summary>
        /// Test the property 'CustomSegmentStore'
        /// </summary>
        [Test]
        public void CustomSegmentStoreTest()
        {
            // TODO unit test for the property 'CustomSegmentStore'
        }
        /// <summary>
        /// Test the property 'SplitPersistence'
        /// </summary>
        [Test]
        public void SplitPersistenceTest()
        {
            // TODO unit test for the property 'SplitPersistence'
        }
        /// <summary>
        /// Test the property 'RepositoryBackupDir'
        /// </summary>
        [Test]
        public void RepositoryBackupDirTest()
        {
            // TODO unit test for the property 'RepositoryBackupDir'
        }
        /// <summary>
        /// Test the property 'BlobGcMaxAgeInSecs'
        /// </summary>
        [Test]
        public void BlobGcMaxAgeInSecsTest()
        {
            // TODO unit test for the property 'BlobGcMaxAgeInSecs'
        }
        /// <summary>
        /// Test the property 'BlobTrackSnapshotIntervalInSecs'
        /// </summary>
        [Test]
        public void BlobTrackSnapshotIntervalInSecsTest()
        {
            // TODO unit test for the property 'BlobTrackSnapshotIntervalInSecs'
        }
        /// <summary>
        /// Test the property 'Role'
        /// </summary>
        [Test]
        public void RoleTest()
        {
            // TODO unit test for the property 'Role'
        }
        /// <summary>
        /// Test the property 'RegisterDescriptors'
        /// </summary>
        [Test]
        public void RegisterDescriptorsTest()
        {
            // TODO unit test for the property 'RegisterDescriptors'
        }
        /// <summary>
        /// Test the property 'DispatchChanges'
        /// </summary>
        [Test]
        public void DispatchChangesTest()
        {
            // TODO unit test for the property 'DispatchChanges'
        }

    }

}
