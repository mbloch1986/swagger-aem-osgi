/**
* Adobe Experience Manager OSGI config (AEM) API
* Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
*
* OpenAPI spec version: 1.0.0-pre.0
* Contact: opensource@shinesolutions.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/


#include "ComDayCqDamCoreImplJobsMetadataimportAsyncMetadataImportConfigProperties.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

ComDayCqDamCoreImplJobsMetadataimportAsyncMetadataImportConfigProperties::ComDayCqDamCoreImplJobsMetadataimportAsyncMetadataImportConfigProperties()
{
    m_OperationIsSet = false;
    m_OperationIconIsSet = false;
    m_TopicNameIsSet = false;
    m_EmailEnabledIsSet = false;
    
}

ComDayCqDamCoreImplJobsMetadataimportAsyncMetadataImportConfigProperties::~ComDayCqDamCoreImplJobsMetadataimportAsyncMetadataImportConfigProperties()
{
}

void ComDayCqDamCoreImplJobsMetadataimportAsyncMetadataImportConfigProperties::validate()
{
    // TODO: implement validation
}

nlohmann::json ComDayCqDamCoreImplJobsMetadataimportAsyncMetadataImportConfigProperties::toJson() const
{
    nlohmann::json val = nlohmann::json::object();

    if(m_OperationIsSet)
    {
        val["operation"] = ModelBase::toJson(m_Operation);
    }
    if(m_OperationIconIsSet)
    {
        val["operationIcon"] = ModelBase::toJson(m_OperationIcon);
    }
    if(m_TopicNameIsSet)
    {
        val["topicName"] = ModelBase::toJson(m_TopicName);
    }
    if(m_EmailEnabledIsSet)
    {
        val["emailEnabled"] = ModelBase::toJson(m_EmailEnabled);
    }
    

    return val;
}

void ComDayCqDamCoreImplJobsMetadataimportAsyncMetadataImportConfigProperties::fromJson(nlohmann::json& val)
{
    if(val.find("operation") != val.end())
    {
        if(!val["operation"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["operation"]);
            setOperation( newItem );
        }
        
    }
    if(val.find("operationIcon") != val.end())
    {
        if(!val["operationIcon"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["operationIcon"]);
            setOperationIcon( newItem );
        }
        
    }
    if(val.find("topicName") != val.end())
    {
        if(!val["topicName"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["topicName"]);
            setTopicName( newItem );
        }
        
    }
    if(val.find("emailEnabled") != val.end())
    {
        if(!val["emailEnabled"].is_null())
        {
            ConfigNodePropertyBoolean newItem;
            newItem.fromJson(val["emailEnabled"]);
            setEmailEnabled( newItem );
        }
        
    }
    
}


ConfigNodePropertyString ComDayCqDamCoreImplJobsMetadataimportAsyncMetadataImportConfigProperties::getOperation() const
{
    return m_Operation;
}
void ComDayCqDamCoreImplJobsMetadataimportAsyncMetadataImportConfigProperties::setOperation(ConfigNodePropertyString const& value)
{
    m_Operation = value;
    m_OperationIsSet = true;
}
bool ComDayCqDamCoreImplJobsMetadataimportAsyncMetadataImportConfigProperties::operationIsSet() const
{
    return m_OperationIsSet;
}
void ComDayCqDamCoreImplJobsMetadataimportAsyncMetadataImportConfigProperties::unsetOperation()
{
    m_OperationIsSet = false;
}
ConfigNodePropertyString ComDayCqDamCoreImplJobsMetadataimportAsyncMetadataImportConfigProperties::getOperationIcon() const
{
    return m_OperationIcon;
}
void ComDayCqDamCoreImplJobsMetadataimportAsyncMetadataImportConfigProperties::setOperationIcon(ConfigNodePropertyString const& value)
{
    m_OperationIcon = value;
    m_OperationIconIsSet = true;
}
bool ComDayCqDamCoreImplJobsMetadataimportAsyncMetadataImportConfigProperties::operationIconIsSet() const
{
    return m_OperationIconIsSet;
}
void ComDayCqDamCoreImplJobsMetadataimportAsyncMetadataImportConfigProperties::unsetOperationIcon()
{
    m_OperationIconIsSet = false;
}
ConfigNodePropertyString ComDayCqDamCoreImplJobsMetadataimportAsyncMetadataImportConfigProperties::getTopicName() const
{
    return m_TopicName;
}
void ComDayCqDamCoreImplJobsMetadataimportAsyncMetadataImportConfigProperties::setTopicName(ConfigNodePropertyString const& value)
{
    m_TopicName = value;
    m_TopicNameIsSet = true;
}
bool ComDayCqDamCoreImplJobsMetadataimportAsyncMetadataImportConfigProperties::topicNameIsSet() const
{
    return m_TopicNameIsSet;
}
void ComDayCqDamCoreImplJobsMetadataimportAsyncMetadataImportConfigProperties::unsetTopicName()
{
    m_TopicNameIsSet = false;
}
ConfigNodePropertyBoolean ComDayCqDamCoreImplJobsMetadataimportAsyncMetadataImportConfigProperties::getEmailEnabled() const
{
    return m_EmailEnabled;
}
void ComDayCqDamCoreImplJobsMetadataimportAsyncMetadataImportConfigProperties::setEmailEnabled(ConfigNodePropertyBoolean const& value)
{
    m_EmailEnabled = value;
    m_EmailEnabledIsSet = true;
}
bool ComDayCqDamCoreImplJobsMetadataimportAsyncMetadataImportConfigProperties::emailEnabledIsSet() const
{
    return m_EmailEnabledIsSet;
}
void ComDayCqDamCoreImplJobsMetadataimportAsyncMetadataImportConfigProperties::unsetEmailEnabled()
{
    m_EmailEnabledIsSet = false;
}

}
}
}
}

