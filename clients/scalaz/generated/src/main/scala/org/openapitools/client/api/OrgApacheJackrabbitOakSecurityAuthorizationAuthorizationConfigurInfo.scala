package org.openapitools.client.api

import argonaut._
import argonaut.EncodeJson._
import argonaut.DecodeJson._

import org.http4s.{EntityDecoder, EntityEncoder}
import org.http4s.argonaut._
import org.joda.time.DateTime
import OrgApacheJackrabbitOakSecurityAuthorizationAuthorizationConfigurInfo._

case class OrgApacheJackrabbitOakSecurityAuthorizationAuthorizationConfigurInfo (
  pid: Option[String],
title: Option[String],
description: Option[String],
properties: Option[OrgApacheJackrabbitOakSecurityAuthorizationAuthorizationConfigurProperties],
bundleLocation: Option[String],
serviceLocation: Option[String])

object OrgApacheJackrabbitOakSecurityAuthorizationAuthorizationConfigurInfo {
  import DateTimeCodecs._

  implicit val OrgApacheJackrabbitOakSecurityAuthorizationAuthorizationConfigurInfoCodecJson: CodecJson[OrgApacheJackrabbitOakSecurityAuthorizationAuthorizationConfigurInfo] = CodecJson.derive[OrgApacheJackrabbitOakSecurityAuthorizationAuthorizationConfigurInfo]
  implicit val OrgApacheJackrabbitOakSecurityAuthorizationAuthorizationConfigurInfoDecoder: EntityDecoder[OrgApacheJackrabbitOakSecurityAuthorizationAuthorizationConfigurInfo] = jsonOf[OrgApacheJackrabbitOakSecurityAuthorizationAuthorizationConfigurInfo]
  implicit val OrgApacheJackrabbitOakSecurityAuthorizationAuthorizationConfigurInfoEncoder: EntityEncoder[OrgApacheJackrabbitOakSecurityAuthorizationAuthorizationConfigurInfo] = jsonEncoderOf[OrgApacheJackrabbitOakSecurityAuthorizationAuthorizationConfigurInfo]
}
