# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server.models.config_node_property_array import ConfigNodePropertyArray  # noqa: F401,E501
from openapi_server.models.config_node_property_string import ConfigNodePropertyString  # noqa: F401,E501
from openapi_server import util


class OrgApacheSlingHcCoreImplScriptableHealthCheckProperties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, hc_name: ConfigNodePropertyString=None, hc_tags: ConfigNodePropertyArray=None, hc_mbean_name: ConfigNodePropertyString=None, expression: ConfigNodePropertyString=None, language_extension: ConfigNodePropertyString=None):  # noqa: E501
        """OrgApacheSlingHcCoreImplScriptableHealthCheckProperties - a model defined in OpenAPI

        :param hc_name: The hc_name of this OrgApacheSlingHcCoreImplScriptableHealthCheckProperties.  # noqa: E501
        :type hc_name: ConfigNodePropertyString
        :param hc_tags: The hc_tags of this OrgApacheSlingHcCoreImplScriptableHealthCheckProperties.  # noqa: E501
        :type hc_tags: ConfigNodePropertyArray
        :param hc_mbean_name: The hc_mbean_name of this OrgApacheSlingHcCoreImplScriptableHealthCheckProperties.  # noqa: E501
        :type hc_mbean_name: ConfigNodePropertyString
        :param expression: The expression of this OrgApacheSlingHcCoreImplScriptableHealthCheckProperties.  # noqa: E501
        :type expression: ConfigNodePropertyString
        :param language_extension: The language_extension of this OrgApacheSlingHcCoreImplScriptableHealthCheckProperties.  # noqa: E501
        :type language_extension: ConfigNodePropertyString
        """
        self.openapi_types = {
            'hc_name': ConfigNodePropertyString,
            'hc_tags': ConfigNodePropertyArray,
            'hc_mbean_name': ConfigNodePropertyString,
            'expression': ConfigNodePropertyString,
            'language_extension': ConfigNodePropertyString
        }

        self.attribute_map = {
            'hc_name': 'hc.name',
            'hc_tags': 'hc.tags',
            'hc_mbean_name': 'hc.mbean.name',
            'expression': 'expression',
            'language_extension': 'language.extension'
        }

        self._hc_name = hc_name
        self._hc_tags = hc_tags
        self._hc_mbean_name = hc_mbean_name
        self._expression = expression
        self._language_extension = language_extension

    @classmethod
    def from_dict(cls, dikt) -> 'OrgApacheSlingHcCoreImplScriptableHealthCheckProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The orgApacheSlingHcCoreImplScriptableHealthCheckProperties of this OrgApacheSlingHcCoreImplScriptableHealthCheckProperties.  # noqa: E501
        :rtype: OrgApacheSlingHcCoreImplScriptableHealthCheckProperties
        """
        return util.deserialize_model(dikt, cls)

    @property
    def hc_name(self) -> ConfigNodePropertyString:
        """Gets the hc_name of this OrgApacheSlingHcCoreImplScriptableHealthCheckProperties.


        :return: The hc_name of this OrgApacheSlingHcCoreImplScriptableHealthCheckProperties.
        :rtype: ConfigNodePropertyString
        """
        return self._hc_name

    @hc_name.setter
    def hc_name(self, hc_name: ConfigNodePropertyString):
        """Sets the hc_name of this OrgApacheSlingHcCoreImplScriptableHealthCheckProperties.


        :param hc_name: The hc_name of this OrgApacheSlingHcCoreImplScriptableHealthCheckProperties.
        :type hc_name: ConfigNodePropertyString
        """

        self._hc_name = hc_name

    @property
    def hc_tags(self) -> ConfigNodePropertyArray:
        """Gets the hc_tags of this OrgApacheSlingHcCoreImplScriptableHealthCheckProperties.


        :return: The hc_tags of this OrgApacheSlingHcCoreImplScriptableHealthCheckProperties.
        :rtype: ConfigNodePropertyArray
        """
        return self._hc_tags

    @hc_tags.setter
    def hc_tags(self, hc_tags: ConfigNodePropertyArray):
        """Sets the hc_tags of this OrgApacheSlingHcCoreImplScriptableHealthCheckProperties.


        :param hc_tags: The hc_tags of this OrgApacheSlingHcCoreImplScriptableHealthCheckProperties.
        :type hc_tags: ConfigNodePropertyArray
        """

        self._hc_tags = hc_tags

    @property
    def hc_mbean_name(self) -> ConfigNodePropertyString:
        """Gets the hc_mbean_name of this OrgApacheSlingHcCoreImplScriptableHealthCheckProperties.


        :return: The hc_mbean_name of this OrgApacheSlingHcCoreImplScriptableHealthCheckProperties.
        :rtype: ConfigNodePropertyString
        """
        return self._hc_mbean_name

    @hc_mbean_name.setter
    def hc_mbean_name(self, hc_mbean_name: ConfigNodePropertyString):
        """Sets the hc_mbean_name of this OrgApacheSlingHcCoreImplScriptableHealthCheckProperties.


        :param hc_mbean_name: The hc_mbean_name of this OrgApacheSlingHcCoreImplScriptableHealthCheckProperties.
        :type hc_mbean_name: ConfigNodePropertyString
        """

        self._hc_mbean_name = hc_mbean_name

    @property
    def expression(self) -> ConfigNodePropertyString:
        """Gets the expression of this OrgApacheSlingHcCoreImplScriptableHealthCheckProperties.


        :return: The expression of this OrgApacheSlingHcCoreImplScriptableHealthCheckProperties.
        :rtype: ConfigNodePropertyString
        """
        return self._expression

    @expression.setter
    def expression(self, expression: ConfigNodePropertyString):
        """Sets the expression of this OrgApacheSlingHcCoreImplScriptableHealthCheckProperties.


        :param expression: The expression of this OrgApacheSlingHcCoreImplScriptableHealthCheckProperties.
        :type expression: ConfigNodePropertyString
        """

        self._expression = expression

    @property
    def language_extension(self) -> ConfigNodePropertyString:
        """Gets the language_extension of this OrgApacheSlingHcCoreImplScriptableHealthCheckProperties.


        :return: The language_extension of this OrgApacheSlingHcCoreImplScriptableHealthCheckProperties.
        :rtype: ConfigNodePropertyString
        """
        return self._language_extension

    @language_extension.setter
    def language_extension(self, language_extension: ConfigNodePropertyString):
        """Sets the language_extension of this OrgApacheSlingHcCoreImplScriptableHealthCheckProperties.


        :param language_extension: The language_extension of this OrgApacheSlingHcCoreImplScriptableHealthCheckProperties.
        :type language_extension: ConfigNodePropertyString
        """

        self._language_extension = language_extension
