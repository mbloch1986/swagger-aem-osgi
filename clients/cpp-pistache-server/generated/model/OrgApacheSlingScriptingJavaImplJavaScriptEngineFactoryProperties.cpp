/**
* Adobe Experience Manager OSGI config (AEM) API
* Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
*
* OpenAPI spec version: 1.0.0-pre.0
* Contact: opensource@shinesolutions.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/


#include "OrgApacheSlingScriptingJavaImplJavaScriptEngineFactoryProperties.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

OrgApacheSlingScriptingJavaImplJavaScriptEngineFactoryProperties::OrgApacheSlingScriptingJavaImplJavaScriptEngineFactoryProperties()
{
    m_Java_classdebuginfoIsSet = false;
    m_Java_javaEncodingIsSet = false;
    m_Java_compilerSourceVMIsSet = false;
    m_Java_compilerTargetVMIsSet = false;
    
}

OrgApacheSlingScriptingJavaImplJavaScriptEngineFactoryProperties::~OrgApacheSlingScriptingJavaImplJavaScriptEngineFactoryProperties()
{
}

void OrgApacheSlingScriptingJavaImplJavaScriptEngineFactoryProperties::validate()
{
    // TODO: implement validation
}

nlohmann::json OrgApacheSlingScriptingJavaImplJavaScriptEngineFactoryProperties::toJson() const
{
    nlohmann::json val = nlohmann::json::object();

    if(m_Java_classdebuginfoIsSet)
    {
        val["java.classdebuginfo"] = ModelBase::toJson(m_Java_classdebuginfo);
    }
    if(m_Java_javaEncodingIsSet)
    {
        val["java.javaEncoding"] = ModelBase::toJson(m_Java_javaEncoding);
    }
    if(m_Java_compilerSourceVMIsSet)
    {
        val["java.compilerSourceVM"] = ModelBase::toJson(m_Java_compilerSourceVM);
    }
    if(m_Java_compilerTargetVMIsSet)
    {
        val["java.compilerTargetVM"] = ModelBase::toJson(m_Java_compilerTargetVM);
    }
    

    return val;
}

void OrgApacheSlingScriptingJavaImplJavaScriptEngineFactoryProperties::fromJson(nlohmann::json& val)
{
    if(val.find("java.classdebuginfo") != val.end())
    {
        if(!val["java.classdebuginfo"].is_null())
        {
            ConfigNodePropertyBoolean newItem;
            newItem.fromJson(val["java.classdebuginfo"]);
            setJavaClassdebuginfo( newItem );
        }
        
    }
    if(val.find("java.javaEncoding") != val.end())
    {
        if(!val["java.javaEncoding"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["java.javaEncoding"]);
            setJavaJavaEncoding( newItem );
        }
        
    }
    if(val.find("java.compilerSourceVM") != val.end())
    {
        if(!val["java.compilerSourceVM"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["java.compilerSourceVM"]);
            setJavaCompilerSourceVM( newItem );
        }
        
    }
    if(val.find("java.compilerTargetVM") != val.end())
    {
        if(!val["java.compilerTargetVM"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["java.compilerTargetVM"]);
            setJavaCompilerTargetVM( newItem );
        }
        
    }
    
}


ConfigNodePropertyBoolean OrgApacheSlingScriptingJavaImplJavaScriptEngineFactoryProperties::getJavaClassdebuginfo() const
{
    return m_Java_classdebuginfo;
}
void OrgApacheSlingScriptingJavaImplJavaScriptEngineFactoryProperties::setJavaClassdebuginfo(ConfigNodePropertyBoolean const& value)
{
    m_Java_classdebuginfo = value;
    m_Java_classdebuginfoIsSet = true;
}
bool OrgApacheSlingScriptingJavaImplJavaScriptEngineFactoryProperties::javaClassdebuginfoIsSet() const
{
    return m_Java_classdebuginfoIsSet;
}
void OrgApacheSlingScriptingJavaImplJavaScriptEngineFactoryProperties::unsetJava_classdebuginfo()
{
    m_Java_classdebuginfoIsSet = false;
}
ConfigNodePropertyString OrgApacheSlingScriptingJavaImplJavaScriptEngineFactoryProperties::getJavaJavaEncoding() const
{
    return m_Java_javaEncoding;
}
void OrgApacheSlingScriptingJavaImplJavaScriptEngineFactoryProperties::setJavaJavaEncoding(ConfigNodePropertyString const& value)
{
    m_Java_javaEncoding = value;
    m_Java_javaEncodingIsSet = true;
}
bool OrgApacheSlingScriptingJavaImplJavaScriptEngineFactoryProperties::javaJavaEncodingIsSet() const
{
    return m_Java_javaEncodingIsSet;
}
void OrgApacheSlingScriptingJavaImplJavaScriptEngineFactoryProperties::unsetJava_javaEncoding()
{
    m_Java_javaEncodingIsSet = false;
}
ConfigNodePropertyString OrgApacheSlingScriptingJavaImplJavaScriptEngineFactoryProperties::getJavaCompilerSourceVM() const
{
    return m_Java_compilerSourceVM;
}
void OrgApacheSlingScriptingJavaImplJavaScriptEngineFactoryProperties::setJavaCompilerSourceVM(ConfigNodePropertyString const& value)
{
    m_Java_compilerSourceVM = value;
    m_Java_compilerSourceVMIsSet = true;
}
bool OrgApacheSlingScriptingJavaImplJavaScriptEngineFactoryProperties::javaCompilerSourceVMIsSet() const
{
    return m_Java_compilerSourceVMIsSet;
}
void OrgApacheSlingScriptingJavaImplJavaScriptEngineFactoryProperties::unsetJava_compilerSourceVM()
{
    m_Java_compilerSourceVMIsSet = false;
}
ConfigNodePropertyString OrgApacheSlingScriptingJavaImplJavaScriptEngineFactoryProperties::getJavaCompilerTargetVM() const
{
    return m_Java_compilerTargetVM;
}
void OrgApacheSlingScriptingJavaImplJavaScriptEngineFactoryProperties::setJavaCompilerTargetVM(ConfigNodePropertyString const& value)
{
    m_Java_compilerTargetVM = value;
    m_Java_compilerTargetVMIsSet = true;
}
bool OrgApacheSlingScriptingJavaImplJavaScriptEngineFactoryProperties::javaCompilerTargetVMIsSet() const
{
    return m_Java_compilerTargetVMIsSet;
}
void OrgApacheSlingScriptingJavaImplJavaScriptEngineFactoryProperties::unsetJava_compilerTargetVM()
{
    m_Java_compilerTargetVMIsSet = false;
}

}
}
}
}

