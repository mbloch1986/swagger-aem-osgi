/**
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


#include "OAIComDayCqDamCoreImplJmxAssetIndexUpdateMonitorProperties.h"

#include "OAIHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace OpenAPI {

OAIComDayCqDamCoreImplJmxAssetIndexUpdateMonitorProperties::OAIComDayCqDamCoreImplJmxAssetIndexUpdateMonitorProperties(QString json) {
    this->fromJson(json);
}

OAIComDayCqDamCoreImplJmxAssetIndexUpdateMonitorProperties::OAIComDayCqDamCoreImplJmxAssetIndexUpdateMonitorProperties() {
    this->init();
}

OAIComDayCqDamCoreImplJmxAssetIndexUpdateMonitorProperties::~OAIComDayCqDamCoreImplJmxAssetIndexUpdateMonitorProperties() {
    
}

void
OAIComDayCqDamCoreImplJmxAssetIndexUpdateMonitorProperties::init() {
    m_jmx_objectname_isSet = false;
    m_property_measure_enabled_isSet = false;
    m_property_name_isSet = false;
    m_property_max_wait_ms_isSet = false;
    m_property_max_rate_isSet = false;
    m_fulltext_measure_enabled_isSet = false;
    m_fulltext_name_isSet = false;
    m_fulltext_max_wait_ms_isSet = false;
    m_fulltext_max_rate_isSet = false;
}

void
OAIComDayCqDamCoreImplJmxAssetIndexUpdateMonitorProperties::fromJson(QString jsonString) {
    QByteArray array (jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void
OAIComDayCqDamCoreImplJmxAssetIndexUpdateMonitorProperties::fromJsonObject(QJsonObject json) {
    ::OpenAPI::fromJsonValue(jmx_objectname, json[QString("jmx.objectname")]);
    
    ::OpenAPI::fromJsonValue(property_measure_enabled, json[QString("property.measure.enabled")]);
    
    ::OpenAPI::fromJsonValue(property_name, json[QString("property.name")]);
    
    ::OpenAPI::fromJsonValue(property_max_wait_ms, json[QString("property.max.wait.ms")]);
    
    ::OpenAPI::fromJsonValue(property_max_rate, json[QString("property.max.rate")]);
    
    ::OpenAPI::fromJsonValue(fulltext_measure_enabled, json[QString("fulltext.measure.enabled")]);
    
    ::OpenAPI::fromJsonValue(fulltext_name, json[QString("fulltext.name")]);
    
    ::OpenAPI::fromJsonValue(fulltext_max_wait_ms, json[QString("fulltext.max.wait.ms")]);
    
    ::OpenAPI::fromJsonValue(fulltext_max_rate, json[QString("fulltext.max.rate")]);
    
}

QString
OAIComDayCqDamCoreImplJmxAssetIndexUpdateMonitorProperties::asJson () const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject
OAIComDayCqDamCoreImplJmxAssetIndexUpdateMonitorProperties::asJsonObject() const {
    QJsonObject obj;
	if(jmx_objectname.isSet()){
        obj.insert(QString("jmx.objectname"), ::OpenAPI::toJsonValue(jmx_objectname));
    }
	if(property_measure_enabled.isSet()){
        obj.insert(QString("property.measure.enabled"), ::OpenAPI::toJsonValue(property_measure_enabled));
    }
	if(property_name.isSet()){
        obj.insert(QString("property.name"), ::OpenAPI::toJsonValue(property_name));
    }
	if(property_max_wait_ms.isSet()){
        obj.insert(QString("property.max.wait.ms"), ::OpenAPI::toJsonValue(property_max_wait_ms));
    }
	if(property_max_rate.isSet()){
        obj.insert(QString("property.max.rate"), ::OpenAPI::toJsonValue(property_max_rate));
    }
	if(fulltext_measure_enabled.isSet()){
        obj.insert(QString("fulltext.measure.enabled"), ::OpenAPI::toJsonValue(fulltext_measure_enabled));
    }
	if(fulltext_name.isSet()){
        obj.insert(QString("fulltext.name"), ::OpenAPI::toJsonValue(fulltext_name));
    }
	if(fulltext_max_wait_ms.isSet()){
        obj.insert(QString("fulltext.max.wait.ms"), ::OpenAPI::toJsonValue(fulltext_max_wait_ms));
    }
	if(fulltext_max_rate.isSet()){
        obj.insert(QString("fulltext.max.rate"), ::OpenAPI::toJsonValue(fulltext_max_rate));
    }
    return obj;
}

OAIConfigNodePropertyString
OAIComDayCqDamCoreImplJmxAssetIndexUpdateMonitorProperties::getJmxObjectname() const {
    return jmx_objectname;
}
void
OAIComDayCqDamCoreImplJmxAssetIndexUpdateMonitorProperties::setJmxObjectname(const OAIConfigNodePropertyString &jmx_objectname) {
    this->jmx_objectname = jmx_objectname;
    this->m_jmx_objectname_isSet = true;
}

OAIConfigNodePropertyBoolean
OAIComDayCqDamCoreImplJmxAssetIndexUpdateMonitorProperties::getPropertyMeasureEnabled() const {
    return property_measure_enabled;
}
void
OAIComDayCqDamCoreImplJmxAssetIndexUpdateMonitorProperties::setPropertyMeasureEnabled(const OAIConfigNodePropertyBoolean &property_measure_enabled) {
    this->property_measure_enabled = property_measure_enabled;
    this->m_property_measure_enabled_isSet = true;
}

OAIConfigNodePropertyString
OAIComDayCqDamCoreImplJmxAssetIndexUpdateMonitorProperties::getPropertyName() const {
    return property_name;
}
void
OAIComDayCqDamCoreImplJmxAssetIndexUpdateMonitorProperties::setPropertyName(const OAIConfigNodePropertyString &property_name) {
    this->property_name = property_name;
    this->m_property_name_isSet = true;
}

OAIConfigNodePropertyInteger
OAIComDayCqDamCoreImplJmxAssetIndexUpdateMonitorProperties::getPropertyMaxWaitMs() const {
    return property_max_wait_ms;
}
void
OAIComDayCqDamCoreImplJmxAssetIndexUpdateMonitorProperties::setPropertyMaxWaitMs(const OAIConfigNodePropertyInteger &property_max_wait_ms) {
    this->property_max_wait_ms = property_max_wait_ms;
    this->m_property_max_wait_ms_isSet = true;
}

OAIConfigNodePropertyFloat
OAIComDayCqDamCoreImplJmxAssetIndexUpdateMonitorProperties::getPropertyMaxRate() const {
    return property_max_rate;
}
void
OAIComDayCqDamCoreImplJmxAssetIndexUpdateMonitorProperties::setPropertyMaxRate(const OAIConfigNodePropertyFloat &property_max_rate) {
    this->property_max_rate = property_max_rate;
    this->m_property_max_rate_isSet = true;
}

OAIConfigNodePropertyBoolean
OAIComDayCqDamCoreImplJmxAssetIndexUpdateMonitorProperties::getFulltextMeasureEnabled() const {
    return fulltext_measure_enabled;
}
void
OAIComDayCqDamCoreImplJmxAssetIndexUpdateMonitorProperties::setFulltextMeasureEnabled(const OAIConfigNodePropertyBoolean &fulltext_measure_enabled) {
    this->fulltext_measure_enabled = fulltext_measure_enabled;
    this->m_fulltext_measure_enabled_isSet = true;
}

OAIConfigNodePropertyString
OAIComDayCqDamCoreImplJmxAssetIndexUpdateMonitorProperties::getFulltextName() const {
    return fulltext_name;
}
void
OAIComDayCqDamCoreImplJmxAssetIndexUpdateMonitorProperties::setFulltextName(const OAIConfigNodePropertyString &fulltext_name) {
    this->fulltext_name = fulltext_name;
    this->m_fulltext_name_isSet = true;
}

OAIConfigNodePropertyInteger
OAIComDayCqDamCoreImplJmxAssetIndexUpdateMonitorProperties::getFulltextMaxWaitMs() const {
    return fulltext_max_wait_ms;
}
void
OAIComDayCqDamCoreImplJmxAssetIndexUpdateMonitorProperties::setFulltextMaxWaitMs(const OAIConfigNodePropertyInteger &fulltext_max_wait_ms) {
    this->fulltext_max_wait_ms = fulltext_max_wait_ms;
    this->m_fulltext_max_wait_ms_isSet = true;
}

OAIConfigNodePropertyFloat
OAIComDayCqDamCoreImplJmxAssetIndexUpdateMonitorProperties::getFulltextMaxRate() const {
    return fulltext_max_rate;
}
void
OAIComDayCqDamCoreImplJmxAssetIndexUpdateMonitorProperties::setFulltextMaxRate(const OAIConfigNodePropertyFloat &fulltext_max_rate) {
    this->fulltext_max_rate = fulltext_max_rate;
    this->m_fulltext_max_rate_isSet = true;
}


bool
OAIComDayCqDamCoreImplJmxAssetIndexUpdateMonitorProperties::isSet() const {
    bool isObjectUpdated = false;
    do{ 
        if(jmx_objectname.isSet()){ isObjectUpdated = true; break;}
    
        if(property_measure_enabled.isSet()){ isObjectUpdated = true; break;}
    
        if(property_name.isSet()){ isObjectUpdated = true; break;}
    
        if(property_max_wait_ms.isSet()){ isObjectUpdated = true; break;}
    
        if(property_max_rate.isSet()){ isObjectUpdated = true; break;}
    
        if(fulltext_measure_enabled.isSet()){ isObjectUpdated = true; break;}
    
        if(fulltext_name.isSet()){ isObjectUpdated = true; break;}
    
        if(fulltext_max_wait_ms.isSet()){ isObjectUpdated = true; break;}
    
        if(fulltext_max_rate.isSet()){ isObjectUpdated = true; break;}
    }while(false);
    return isObjectUpdated;
}

}

