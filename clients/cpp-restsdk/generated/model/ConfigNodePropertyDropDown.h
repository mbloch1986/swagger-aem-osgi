/**
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 3.2.1-SNAPSHOT.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * ConfigNodePropertyDropDown.h
 *
 * 
 */

#ifndef ORG_OPENAPITOOLS_CLIENT_MODEL_ConfigNodePropertyDropDown_H_
#define ORG_OPENAPITOOLS_CLIENT_MODEL_ConfigNodePropertyDropDown_H_


#include "../ModelBase.h"

#include <cpprest/details/basic_types.h>
#include "Object.h"
#include "ConfigNodePropertyDropDown_type.h"

namespace org {
namespace openapitools {
namespace client {
namespace model {

/// <summary>
/// 
/// </summary>
class  ConfigNodePropertyDropDown
    : public ModelBase
{
public:
    ConfigNodePropertyDropDown();
    virtual ~ConfigNodePropertyDropDown();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    void fromJson(web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    void fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// ConfigNodePropertyDropDown members

    /// <summary>
    /// property name
    /// </summary>
    utility::string_t getName() const;
    bool nameIsSet() const;
    void unsetName();
    void setName(utility::string_t value);
    /// <summary>
    /// True if optional
    /// </summary>
    bool isOptional() const;
    bool optionalIsSet() const;
    void unsetOptional();
    void setOptional(bool value);
    /// <summary>
    /// True if property is set
    /// </summary>
    bool isIsSet() const;
    bool isSetIsSet() const;
    void unsetIs_set();
    void setIsSet(bool value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyDropDown_type> getType() const;
    bool typeIsSet() const;
    void unsetType();
    void setType(std::shared_ptr<ConfigNodePropertyDropDown_type> value);
    /// <summary>
    /// Property value
    /// </summary>
    std::shared_ptr<Object> getValue() const;
    bool valueIsSet() const;
    void unsetValue();
    void setValue(std::shared_ptr<Object> value);
    /// <summary>
    /// Property description
    /// </summary>
    utility::string_t getDescription() const;
    bool descriptionIsSet() const;
    void unsetDescription();
    void setDescription(utility::string_t value);

protected:
    utility::string_t m_Name;
    bool m_NameIsSet;
    bool m_Optional;
    bool m_OptionalIsSet;
    bool m_Is_set;
    bool m_Is_setIsSet;
    std::shared_ptr<ConfigNodePropertyDropDown_type> m_Type;
    bool m_TypeIsSet;
    std::shared_ptr<Object> m_Value;
    bool m_ValueIsSet;
    utility::string_t m_Description;
    bool m_DescriptionIsSet;
};

}
}
}
}

#endif /* ORG_OPENAPITOOLS_CLIENT_MODEL_ConfigNodePropertyDropDown_H_ */
