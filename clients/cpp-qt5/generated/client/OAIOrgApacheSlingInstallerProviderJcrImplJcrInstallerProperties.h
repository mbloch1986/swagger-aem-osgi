/**
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIOrgApacheSlingInstallerProviderJcrImplJcrInstallerProperties.h
 *
 * 
 */

#ifndef OAIOrgApacheSlingInstallerProviderJcrImplJcrInstallerProperties_H_
#define OAIOrgApacheSlingInstallerProviderJcrImplJcrInstallerProperties_H_

#include <QJsonObject>


#include "OAIOAIConfigNodePropertyArray.h"
#include "OAIOAIConfigNodePropertyBoolean.h"
#include "OAIOAIConfigNodePropertyInteger.h"
#include "OAIOAIConfigNodePropertyString.h"

#include "OAIObject.h"

namespace OpenAPI {

class OAIOrgApacheSlingInstallerProviderJcrImplJcrInstallerProperties: public OAIObject {
public:
    OAIOrgApacheSlingInstallerProviderJcrImplJcrInstallerProperties();
    OAIOrgApacheSlingInstallerProviderJcrImplJcrInstallerProperties(QString json);
    ~OAIOrgApacheSlingInstallerProviderJcrImplJcrInstallerProperties();
    void init();
    void cleanup();

    QString asJson () override;
    QJsonObject asJsonObject() override;
    void fromJsonObject(QJsonObject json) override;
    OAIOrgApacheSlingInstallerProviderJcrImplJcrInstallerProperties* fromJson(QString jsonString) override;

    OAIConfigNodePropertyArray* getHandlerSchemes();
    void setHandlerSchemes(OAIConfigNodePropertyArray* handler_schemes);

    OAIConfigNodePropertyString* getSlingJcrinstallFolderNameRegexp();
    void setSlingJcrinstallFolderNameRegexp(OAIConfigNodePropertyString* sling_jcrinstall_folder_name_regexp);

    OAIConfigNodePropertyInteger* getSlingJcrinstallFolderMaxDepth();
    void setSlingJcrinstallFolderMaxDepth(OAIConfigNodePropertyInteger* sling_jcrinstall_folder_max_depth);

    OAIConfigNodePropertyArray* getSlingJcrinstallSearchPath();
    void setSlingJcrinstallSearchPath(OAIConfigNodePropertyArray* sling_jcrinstall_search_path);

    OAIConfigNodePropertyString* getSlingJcrinstallNewConfigPath();
    void setSlingJcrinstallNewConfigPath(OAIConfigNodePropertyString* sling_jcrinstall_new_config_path);

    OAIConfigNodePropertyString* getSlingJcrinstallSignalPath();
    void setSlingJcrinstallSignalPath(OAIConfigNodePropertyString* sling_jcrinstall_signal_path);

    OAIConfigNodePropertyBoolean* getSlingJcrinstallEnableWriteback();
    void setSlingJcrinstallEnableWriteback(OAIConfigNodePropertyBoolean* sling_jcrinstall_enable_writeback);


    virtual bool isSet() override;

private:
    OAIConfigNodePropertyArray* handler_schemes;
    bool m_handler_schemes_isSet;

    OAIConfigNodePropertyString* sling_jcrinstall_folder_name_regexp;
    bool m_sling_jcrinstall_folder_name_regexp_isSet;

    OAIConfigNodePropertyInteger* sling_jcrinstall_folder_max_depth;
    bool m_sling_jcrinstall_folder_max_depth_isSet;

    OAIConfigNodePropertyArray* sling_jcrinstall_search_path;
    bool m_sling_jcrinstall_search_path_isSet;

    OAIConfigNodePropertyString* sling_jcrinstall_new_config_path;
    bool m_sling_jcrinstall_new_config_path_isSet;

    OAIConfigNodePropertyString* sling_jcrinstall_signal_path;
    bool m_sling_jcrinstall_signal_path_isSet;

    OAIConfigNodePropertyBoolean* sling_jcrinstall_enable_writeback;
    bool m_sling_jcrinstall_enable_writeback_isSet;

};

}

#endif /* OAIOrgApacheSlingInstallerProviderJcrImplJcrInstallerProperties_H_ */
