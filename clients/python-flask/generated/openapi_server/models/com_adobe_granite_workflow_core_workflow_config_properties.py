# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server.models.config_node_property_array import ConfigNodePropertyArray  # noqa: F401,E501
from openapi_server.models.config_node_property_boolean import ConfigNodePropertyBoolean  # noqa: F401,E501
from openapi_server import util


class ComAdobeGraniteWorkflowCoreWorkflowConfigProperties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, cq_workflow_config_workflow_packages_root_path: ConfigNodePropertyArray=None, cq_workflow_config_workflow_process_legacy_mode: ConfigNodePropertyBoolean=None, cq_workflow_config_allow_locking: ConfigNodePropertyBoolean=None):  # noqa: E501
        """ComAdobeGraniteWorkflowCoreWorkflowConfigProperties - a model defined in OpenAPI

        :param cq_workflow_config_workflow_packages_root_path: The cq_workflow_config_workflow_packages_root_path of this ComAdobeGraniteWorkflowCoreWorkflowConfigProperties.  # noqa: E501
        :type cq_workflow_config_workflow_packages_root_path: ConfigNodePropertyArray
        :param cq_workflow_config_workflow_process_legacy_mode: The cq_workflow_config_workflow_process_legacy_mode of this ComAdobeGraniteWorkflowCoreWorkflowConfigProperties.  # noqa: E501
        :type cq_workflow_config_workflow_process_legacy_mode: ConfigNodePropertyBoolean
        :param cq_workflow_config_allow_locking: The cq_workflow_config_allow_locking of this ComAdobeGraniteWorkflowCoreWorkflowConfigProperties.  # noqa: E501
        :type cq_workflow_config_allow_locking: ConfigNodePropertyBoolean
        """
        self.openapi_types = {
            'cq_workflow_config_workflow_packages_root_path': ConfigNodePropertyArray,
            'cq_workflow_config_workflow_process_legacy_mode': ConfigNodePropertyBoolean,
            'cq_workflow_config_allow_locking': ConfigNodePropertyBoolean
        }

        self.attribute_map = {
            'cq_workflow_config_workflow_packages_root_path': 'cq.workflow.config.workflow.packages.root.path',
            'cq_workflow_config_workflow_process_legacy_mode': 'cq.workflow.config.workflow.process.legacy.mode',
            'cq_workflow_config_allow_locking': 'cq.workflow.config.allow.locking'
        }

        self._cq_workflow_config_workflow_packages_root_path = cq_workflow_config_workflow_packages_root_path
        self._cq_workflow_config_workflow_process_legacy_mode = cq_workflow_config_workflow_process_legacy_mode
        self._cq_workflow_config_allow_locking = cq_workflow_config_allow_locking

    @classmethod
    def from_dict(cls, dikt) -> 'ComAdobeGraniteWorkflowCoreWorkflowConfigProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The comAdobeGraniteWorkflowCoreWorkflowConfigProperties of this ComAdobeGraniteWorkflowCoreWorkflowConfigProperties.  # noqa: E501
        :rtype: ComAdobeGraniteWorkflowCoreWorkflowConfigProperties
        """
        return util.deserialize_model(dikt, cls)

    @property
    def cq_workflow_config_workflow_packages_root_path(self) -> ConfigNodePropertyArray:
        """Gets the cq_workflow_config_workflow_packages_root_path of this ComAdobeGraniteWorkflowCoreWorkflowConfigProperties.


        :return: The cq_workflow_config_workflow_packages_root_path of this ComAdobeGraniteWorkflowCoreWorkflowConfigProperties.
        :rtype: ConfigNodePropertyArray
        """
        return self._cq_workflow_config_workflow_packages_root_path

    @cq_workflow_config_workflow_packages_root_path.setter
    def cq_workflow_config_workflow_packages_root_path(self, cq_workflow_config_workflow_packages_root_path: ConfigNodePropertyArray):
        """Sets the cq_workflow_config_workflow_packages_root_path of this ComAdobeGraniteWorkflowCoreWorkflowConfigProperties.


        :param cq_workflow_config_workflow_packages_root_path: The cq_workflow_config_workflow_packages_root_path of this ComAdobeGraniteWorkflowCoreWorkflowConfigProperties.
        :type cq_workflow_config_workflow_packages_root_path: ConfigNodePropertyArray
        """

        self._cq_workflow_config_workflow_packages_root_path = cq_workflow_config_workflow_packages_root_path

    @property
    def cq_workflow_config_workflow_process_legacy_mode(self) -> ConfigNodePropertyBoolean:
        """Gets the cq_workflow_config_workflow_process_legacy_mode of this ComAdobeGraniteWorkflowCoreWorkflowConfigProperties.


        :return: The cq_workflow_config_workflow_process_legacy_mode of this ComAdobeGraniteWorkflowCoreWorkflowConfigProperties.
        :rtype: ConfigNodePropertyBoolean
        """
        return self._cq_workflow_config_workflow_process_legacy_mode

    @cq_workflow_config_workflow_process_legacy_mode.setter
    def cq_workflow_config_workflow_process_legacy_mode(self, cq_workflow_config_workflow_process_legacy_mode: ConfigNodePropertyBoolean):
        """Sets the cq_workflow_config_workflow_process_legacy_mode of this ComAdobeGraniteWorkflowCoreWorkflowConfigProperties.


        :param cq_workflow_config_workflow_process_legacy_mode: The cq_workflow_config_workflow_process_legacy_mode of this ComAdobeGraniteWorkflowCoreWorkflowConfigProperties.
        :type cq_workflow_config_workflow_process_legacy_mode: ConfigNodePropertyBoolean
        """

        self._cq_workflow_config_workflow_process_legacy_mode = cq_workflow_config_workflow_process_legacy_mode

    @property
    def cq_workflow_config_allow_locking(self) -> ConfigNodePropertyBoolean:
        """Gets the cq_workflow_config_allow_locking of this ComAdobeGraniteWorkflowCoreWorkflowConfigProperties.


        :return: The cq_workflow_config_allow_locking of this ComAdobeGraniteWorkflowCoreWorkflowConfigProperties.
        :rtype: ConfigNodePropertyBoolean
        """
        return self._cq_workflow_config_allow_locking

    @cq_workflow_config_allow_locking.setter
    def cq_workflow_config_allow_locking(self, cq_workflow_config_allow_locking: ConfigNodePropertyBoolean):
        """Sets the cq_workflow_config_allow_locking of this ComAdobeGraniteWorkflowCoreWorkflowConfigProperties.


        :param cq_workflow_config_allow_locking: The cq_workflow_config_allow_locking of this ComAdobeGraniteWorkflowCoreWorkflowConfigProperties.
        :type cq_workflow_config_allow_locking: ConfigNodePropertyBoolean
        """

        self._cq_workflow_config_allow_locking = cq_workflow_config_allow_locking
