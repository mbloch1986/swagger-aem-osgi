/**
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIComAdobeCqSocialTranslationImplUGCLanguageDetectorProperties.h
 *
 * 
 */

#ifndef OAIComAdobeCqSocialTranslationImplUGCLanguageDetectorProperties_H
#define OAIComAdobeCqSocialTranslationImplUGCLanguageDetectorProperties_H

#include <QJsonObject>


#include "OAIConfigNodePropertyArray.h"
#include "OAIConfigNodePropertyInteger.h"
#include "OAIConfigNodePropertyString.h"

#include "OAIObject.h"

namespace OpenAPI {

class OAIComAdobeCqSocialTranslationImplUGCLanguageDetectorProperties: public OAIObject {
public:
    OAIComAdobeCqSocialTranslationImplUGCLanguageDetectorProperties();
    OAIComAdobeCqSocialTranslationImplUGCLanguageDetectorProperties(QString json);
    ~OAIComAdobeCqSocialTranslationImplUGCLanguageDetectorProperties() override;
    void init();

    QString asJson () const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIConfigNodePropertyString getEventTopics() const;
    void setEventTopics(const OAIConfigNodePropertyString &event_topics);

    OAIConfigNodePropertyString getEventFilter() const;
    void setEventFilter(const OAIConfigNodePropertyString &event_filter);

    OAIConfigNodePropertyArray getTranslateListenerType() const;
    void setTranslateListenerType(const OAIConfigNodePropertyArray &translate_listener_type);

    OAIConfigNodePropertyArray getTranslatePropertyList() const;
    void setTranslatePropertyList(const OAIConfigNodePropertyArray &translate_property_list);

    OAIConfigNodePropertyInteger getPoolSize() const;
    void setPoolSize(const OAIConfigNodePropertyInteger &pool_size);

    OAIConfigNodePropertyInteger getMaxPoolSize() const;
    void setMaxPoolSize(const OAIConfigNodePropertyInteger &max_pool_size);

    OAIConfigNodePropertyInteger getQueueSize() const;
    void setQueueSize(const OAIConfigNodePropertyInteger &queue_size);

    OAIConfigNodePropertyInteger getKeepAliveTime() const;
    void setKeepAliveTime(const OAIConfigNodePropertyInteger &keep_alive_time);

    virtual bool isSet() const override;

private:
    OAIConfigNodePropertyString event_topics;
    bool m_event_topics_isSet;

    OAIConfigNodePropertyString event_filter;
    bool m_event_filter_isSet;

    OAIConfigNodePropertyArray translate_listener_type;
    bool m_translate_listener_type_isSet;

    OAIConfigNodePropertyArray translate_property_list;
    bool m_translate_property_list_isSet;

    OAIConfigNodePropertyInteger pool_size;
    bool m_pool_size_isSet;

    OAIConfigNodePropertyInteger max_pool_size;
    bool m_max_pool_size_isSet;

    OAIConfigNodePropertyInteger queue_size;
    bool m_queue_size_isSet;

    OAIConfigNodePropertyInteger keep_alive_time;
    bool m_keep_alive_time_isSet;

};

}

#endif // OAIComAdobeCqSocialTranslationImplUGCLanguageDetectorProperties_H
