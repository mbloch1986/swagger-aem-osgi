/**
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


#include "OAIComDayCqCommonsImplExternalizerImplProperties.h"

#include "OAIHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace OpenAPI {

OAIComDayCqCommonsImplExternalizerImplProperties::OAIComDayCqCommonsImplExternalizerImplProperties(QString json) {
    this->fromJson(json);
}

OAIComDayCqCommonsImplExternalizerImplProperties::OAIComDayCqCommonsImplExternalizerImplProperties() {
    this->init();
}

OAIComDayCqCommonsImplExternalizerImplProperties::~OAIComDayCqCommonsImplExternalizerImplProperties() {
    
}

void
OAIComDayCqCommonsImplExternalizerImplProperties::init() {
    m_externalizer_domains_isSet = false;
    m_externalizer_host_isSet = false;
    m_externalizer_contextpath_isSet = false;
    m_externalizer_encodedpath_isSet = false;
}

void
OAIComDayCqCommonsImplExternalizerImplProperties::fromJson(QString jsonString) {
    QByteArray array (jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void
OAIComDayCqCommonsImplExternalizerImplProperties::fromJsonObject(QJsonObject json) {
    ::OpenAPI::fromJsonValue(externalizer_domains, json[QString("externalizer.domains")]);
    
    ::OpenAPI::fromJsonValue(externalizer_host, json[QString("externalizer.host")]);
    
    ::OpenAPI::fromJsonValue(externalizer_contextpath, json[QString("externalizer.contextpath")]);
    
    ::OpenAPI::fromJsonValue(externalizer_encodedpath, json[QString("externalizer.encodedpath")]);
    
}

QString
OAIComDayCqCommonsImplExternalizerImplProperties::asJson () const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject
OAIComDayCqCommonsImplExternalizerImplProperties::asJsonObject() const {
    QJsonObject obj;
	if(externalizer_domains.isSet()){
        obj.insert(QString("externalizer.domains"), ::OpenAPI::toJsonValue(externalizer_domains));
    }
	if(externalizer_host.isSet()){
        obj.insert(QString("externalizer.host"), ::OpenAPI::toJsonValue(externalizer_host));
    }
	if(externalizer_contextpath.isSet()){
        obj.insert(QString("externalizer.contextpath"), ::OpenAPI::toJsonValue(externalizer_contextpath));
    }
	if(externalizer_encodedpath.isSet()){
        obj.insert(QString("externalizer.encodedpath"), ::OpenAPI::toJsonValue(externalizer_encodedpath));
    }
    return obj;
}

OAIConfigNodePropertyArray
OAIComDayCqCommonsImplExternalizerImplProperties::getExternalizerDomains() const {
    return externalizer_domains;
}
void
OAIComDayCqCommonsImplExternalizerImplProperties::setExternalizerDomains(const OAIConfigNodePropertyArray &externalizer_domains) {
    this->externalizer_domains = externalizer_domains;
    this->m_externalizer_domains_isSet = true;
}

OAIConfigNodePropertyString
OAIComDayCqCommonsImplExternalizerImplProperties::getExternalizerHost() const {
    return externalizer_host;
}
void
OAIComDayCqCommonsImplExternalizerImplProperties::setExternalizerHost(const OAIConfigNodePropertyString &externalizer_host) {
    this->externalizer_host = externalizer_host;
    this->m_externalizer_host_isSet = true;
}

OAIConfigNodePropertyString
OAIComDayCqCommonsImplExternalizerImplProperties::getExternalizerContextpath() const {
    return externalizer_contextpath;
}
void
OAIComDayCqCommonsImplExternalizerImplProperties::setExternalizerContextpath(const OAIConfigNodePropertyString &externalizer_contextpath) {
    this->externalizer_contextpath = externalizer_contextpath;
    this->m_externalizer_contextpath_isSet = true;
}

OAIConfigNodePropertyBoolean
OAIComDayCqCommonsImplExternalizerImplProperties::getExternalizerEncodedpath() const {
    return externalizer_encodedpath;
}
void
OAIComDayCqCommonsImplExternalizerImplProperties::setExternalizerEncodedpath(const OAIConfigNodePropertyBoolean &externalizer_encodedpath) {
    this->externalizer_encodedpath = externalizer_encodedpath;
    this->m_externalizer_encodedpath_isSet = true;
}


bool
OAIComDayCqCommonsImplExternalizerImplProperties::isSet() const {
    bool isObjectUpdated = false;
    do{ 
        if(externalizer_domains.isSet()){ isObjectUpdated = true; break;}
    
        if(externalizer_host.isSet()){ isObjectUpdated = true; break;}
    
        if(externalizer_contextpath.isSet()){ isObjectUpdated = true; break;}
    
        if(externalizer_encodedpath.isSet()){ isObjectUpdated = true; break;}
    }while(false);
    return isObjectUpdated;
}

}

