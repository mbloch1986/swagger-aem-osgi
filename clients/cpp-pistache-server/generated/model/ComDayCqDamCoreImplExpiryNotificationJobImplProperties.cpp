/**
* Adobe Experience Manager OSGI config (AEM) API
* Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
*
* OpenAPI spec version: 1.0.0-pre.0
* Contact: opensource@shinesolutions.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/


#include "ComDayCqDamCoreImplExpiryNotificationJobImplProperties.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

ComDayCqDamCoreImplExpiryNotificationJobImplProperties::ComDayCqDamCoreImplExpiryNotificationJobImplProperties()
{
    m_Cq_dam_expiry_notification_scheduler_istimebasedIsSet = false;
    m_Cq_dam_expiry_notification_scheduler_timebased_ruleIsSet = false;
    m_Cq_dam_expiry_notification_scheduler_period_ruleIsSet = false;
    m_Send_emailIsSet = false;
    m_Asset_expired_limitIsSet = false;
    m_Prior_notification_secondsIsSet = false;
    m_Cq_dam_expiry_notification_url_protocolIsSet = false;
    
}

ComDayCqDamCoreImplExpiryNotificationJobImplProperties::~ComDayCqDamCoreImplExpiryNotificationJobImplProperties()
{
}

void ComDayCqDamCoreImplExpiryNotificationJobImplProperties::validate()
{
    // TODO: implement validation
}

nlohmann::json ComDayCqDamCoreImplExpiryNotificationJobImplProperties::toJson() const
{
    nlohmann::json val = nlohmann::json::object();

    if(m_Cq_dam_expiry_notification_scheduler_istimebasedIsSet)
    {
        val["cq.dam.expiry.notification.scheduler.istimebased"] = ModelBase::toJson(m_Cq_dam_expiry_notification_scheduler_istimebased);
    }
    if(m_Cq_dam_expiry_notification_scheduler_timebased_ruleIsSet)
    {
        val["cq.dam.expiry.notification.scheduler.timebased.rule"] = ModelBase::toJson(m_Cq_dam_expiry_notification_scheduler_timebased_rule);
    }
    if(m_Cq_dam_expiry_notification_scheduler_period_ruleIsSet)
    {
        val["cq.dam.expiry.notification.scheduler.period.rule"] = ModelBase::toJson(m_Cq_dam_expiry_notification_scheduler_period_rule);
    }
    if(m_Send_emailIsSet)
    {
        val["send_email"] = ModelBase::toJson(m_Send_email);
    }
    if(m_Asset_expired_limitIsSet)
    {
        val["asset_expired_limit"] = ModelBase::toJson(m_Asset_expired_limit);
    }
    if(m_Prior_notification_secondsIsSet)
    {
        val["prior_notification_seconds"] = ModelBase::toJson(m_Prior_notification_seconds);
    }
    if(m_Cq_dam_expiry_notification_url_protocolIsSet)
    {
        val["cq.dam.expiry.notification.url.protocol"] = ModelBase::toJson(m_Cq_dam_expiry_notification_url_protocol);
    }
    

    return val;
}

void ComDayCqDamCoreImplExpiryNotificationJobImplProperties::fromJson(nlohmann::json& val)
{
    if(val.find("cq.dam.expiry.notification.scheduler.istimebased") != val.end())
    {
        if(!val["cq.dam.expiry.notification.scheduler.istimebased"].is_null())
        {
            ConfigNodePropertyBoolean newItem;
            newItem.fromJson(val["cq.dam.expiry.notification.scheduler.istimebased"]);
            setCqDamExpiryNotificationSchedulerIstimebased( newItem );
        }
        
    }
    if(val.find("cq.dam.expiry.notification.scheduler.timebased.rule") != val.end())
    {
        if(!val["cq.dam.expiry.notification.scheduler.timebased.rule"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["cq.dam.expiry.notification.scheduler.timebased.rule"]);
            setCqDamExpiryNotificationSchedulerTimebasedRule( newItem );
        }
        
    }
    if(val.find("cq.dam.expiry.notification.scheduler.period.rule") != val.end())
    {
        if(!val["cq.dam.expiry.notification.scheduler.period.rule"].is_null())
        {
            ConfigNodePropertyInteger newItem;
            newItem.fromJson(val["cq.dam.expiry.notification.scheduler.period.rule"]);
            setCqDamExpiryNotificationSchedulerPeriodRule( newItem );
        }
        
    }
    if(val.find("send_email") != val.end())
    {
        if(!val["send_email"].is_null())
        {
            ConfigNodePropertyBoolean newItem;
            newItem.fromJson(val["send_email"]);
            setSendEmail( newItem );
        }
        
    }
    if(val.find("asset_expired_limit") != val.end())
    {
        if(!val["asset_expired_limit"].is_null())
        {
            ConfigNodePropertyInteger newItem;
            newItem.fromJson(val["asset_expired_limit"]);
            setAssetExpiredLimit( newItem );
        }
        
    }
    if(val.find("prior_notification_seconds") != val.end())
    {
        if(!val["prior_notification_seconds"].is_null())
        {
            ConfigNodePropertyInteger newItem;
            newItem.fromJson(val["prior_notification_seconds"]);
            setPriorNotificationSeconds( newItem );
        }
        
    }
    if(val.find("cq.dam.expiry.notification.url.protocol") != val.end())
    {
        if(!val["cq.dam.expiry.notification.url.protocol"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["cq.dam.expiry.notification.url.protocol"]);
            setCqDamExpiryNotificationUrlProtocol( newItem );
        }
        
    }
    
}


ConfigNodePropertyBoolean ComDayCqDamCoreImplExpiryNotificationJobImplProperties::getCqDamExpiryNotificationSchedulerIstimebased() const
{
    return m_Cq_dam_expiry_notification_scheduler_istimebased;
}
void ComDayCqDamCoreImplExpiryNotificationJobImplProperties::setCqDamExpiryNotificationSchedulerIstimebased(ConfigNodePropertyBoolean const& value)
{
    m_Cq_dam_expiry_notification_scheduler_istimebased = value;
    m_Cq_dam_expiry_notification_scheduler_istimebasedIsSet = true;
}
bool ComDayCqDamCoreImplExpiryNotificationJobImplProperties::cqDamExpiryNotificationSchedulerIstimebasedIsSet() const
{
    return m_Cq_dam_expiry_notification_scheduler_istimebasedIsSet;
}
void ComDayCqDamCoreImplExpiryNotificationJobImplProperties::unsetCq_dam_expiry_notification_scheduler_istimebased()
{
    m_Cq_dam_expiry_notification_scheduler_istimebasedIsSet = false;
}
ConfigNodePropertyString ComDayCqDamCoreImplExpiryNotificationJobImplProperties::getCqDamExpiryNotificationSchedulerTimebasedRule() const
{
    return m_Cq_dam_expiry_notification_scheduler_timebased_rule;
}
void ComDayCqDamCoreImplExpiryNotificationJobImplProperties::setCqDamExpiryNotificationSchedulerTimebasedRule(ConfigNodePropertyString const& value)
{
    m_Cq_dam_expiry_notification_scheduler_timebased_rule = value;
    m_Cq_dam_expiry_notification_scheduler_timebased_ruleIsSet = true;
}
bool ComDayCqDamCoreImplExpiryNotificationJobImplProperties::cqDamExpiryNotificationSchedulerTimebasedRuleIsSet() const
{
    return m_Cq_dam_expiry_notification_scheduler_timebased_ruleIsSet;
}
void ComDayCqDamCoreImplExpiryNotificationJobImplProperties::unsetCq_dam_expiry_notification_scheduler_timebased_rule()
{
    m_Cq_dam_expiry_notification_scheduler_timebased_ruleIsSet = false;
}
ConfigNodePropertyInteger ComDayCqDamCoreImplExpiryNotificationJobImplProperties::getCqDamExpiryNotificationSchedulerPeriodRule() const
{
    return m_Cq_dam_expiry_notification_scheduler_period_rule;
}
void ComDayCqDamCoreImplExpiryNotificationJobImplProperties::setCqDamExpiryNotificationSchedulerPeriodRule(ConfigNodePropertyInteger const& value)
{
    m_Cq_dam_expiry_notification_scheduler_period_rule = value;
    m_Cq_dam_expiry_notification_scheduler_period_ruleIsSet = true;
}
bool ComDayCqDamCoreImplExpiryNotificationJobImplProperties::cqDamExpiryNotificationSchedulerPeriodRuleIsSet() const
{
    return m_Cq_dam_expiry_notification_scheduler_period_ruleIsSet;
}
void ComDayCqDamCoreImplExpiryNotificationJobImplProperties::unsetCq_dam_expiry_notification_scheduler_period_rule()
{
    m_Cq_dam_expiry_notification_scheduler_period_ruleIsSet = false;
}
ConfigNodePropertyBoolean ComDayCqDamCoreImplExpiryNotificationJobImplProperties::getSendEmail() const
{
    return m_Send_email;
}
void ComDayCqDamCoreImplExpiryNotificationJobImplProperties::setSendEmail(ConfigNodePropertyBoolean const& value)
{
    m_Send_email = value;
    m_Send_emailIsSet = true;
}
bool ComDayCqDamCoreImplExpiryNotificationJobImplProperties::sendEmailIsSet() const
{
    return m_Send_emailIsSet;
}
void ComDayCqDamCoreImplExpiryNotificationJobImplProperties::unsetSend_email()
{
    m_Send_emailIsSet = false;
}
ConfigNodePropertyInteger ComDayCqDamCoreImplExpiryNotificationJobImplProperties::getAssetExpiredLimit() const
{
    return m_Asset_expired_limit;
}
void ComDayCqDamCoreImplExpiryNotificationJobImplProperties::setAssetExpiredLimit(ConfigNodePropertyInteger const& value)
{
    m_Asset_expired_limit = value;
    m_Asset_expired_limitIsSet = true;
}
bool ComDayCqDamCoreImplExpiryNotificationJobImplProperties::assetExpiredLimitIsSet() const
{
    return m_Asset_expired_limitIsSet;
}
void ComDayCqDamCoreImplExpiryNotificationJobImplProperties::unsetAsset_expired_limit()
{
    m_Asset_expired_limitIsSet = false;
}
ConfigNodePropertyInteger ComDayCqDamCoreImplExpiryNotificationJobImplProperties::getPriorNotificationSeconds() const
{
    return m_Prior_notification_seconds;
}
void ComDayCqDamCoreImplExpiryNotificationJobImplProperties::setPriorNotificationSeconds(ConfigNodePropertyInteger const& value)
{
    m_Prior_notification_seconds = value;
    m_Prior_notification_secondsIsSet = true;
}
bool ComDayCqDamCoreImplExpiryNotificationJobImplProperties::priorNotificationSecondsIsSet() const
{
    return m_Prior_notification_secondsIsSet;
}
void ComDayCqDamCoreImplExpiryNotificationJobImplProperties::unsetPrior_notification_seconds()
{
    m_Prior_notification_secondsIsSet = false;
}
ConfigNodePropertyString ComDayCqDamCoreImplExpiryNotificationJobImplProperties::getCqDamExpiryNotificationUrlProtocol() const
{
    return m_Cq_dam_expiry_notification_url_protocol;
}
void ComDayCqDamCoreImplExpiryNotificationJobImplProperties::setCqDamExpiryNotificationUrlProtocol(ConfigNodePropertyString const& value)
{
    m_Cq_dam_expiry_notification_url_protocol = value;
    m_Cq_dam_expiry_notification_url_protocolIsSet = true;
}
bool ComDayCqDamCoreImplExpiryNotificationJobImplProperties::cqDamExpiryNotificationUrlProtocolIsSet() const
{
    return m_Cq_dam_expiry_notification_url_protocolIsSet;
}
void ComDayCqDamCoreImplExpiryNotificationJobImplProperties::unsetCq_dam_expiry_notification_url_protocol()
{
    m_Cq_dam_expiry_notification_url_protocolIsSet = false;
}

}
}
}
}

