# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server.models.config_node_property_integer import ConfigNodePropertyInteger  # noqa: F401,E501
from openapi_server.models.config_node_property_string import ConfigNodePropertyString  # noqa: F401,E501
from openapi_server import util


class ComAdobeGraniteCsrfImplCSRFServletProperties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, csrf_token_expires_in: ConfigNodePropertyInteger=None, sling_auth_requirements: ConfigNodePropertyString=None):  # noqa: E501
        """ComAdobeGraniteCsrfImplCSRFServletProperties - a model defined in OpenAPI

        :param csrf_token_expires_in: The csrf_token_expires_in of this ComAdobeGraniteCsrfImplCSRFServletProperties.  # noqa: E501
        :type csrf_token_expires_in: ConfigNodePropertyInteger
        :param sling_auth_requirements: The sling_auth_requirements of this ComAdobeGraniteCsrfImplCSRFServletProperties.  # noqa: E501
        :type sling_auth_requirements: ConfigNodePropertyString
        """
        self.openapi_types = {
            'csrf_token_expires_in': ConfigNodePropertyInteger,
            'sling_auth_requirements': ConfigNodePropertyString
        }

        self.attribute_map = {
            'csrf_token_expires_in': 'csrf.token.expires.in',
            'sling_auth_requirements': 'sling.auth.requirements'
        }

        self._csrf_token_expires_in = csrf_token_expires_in
        self._sling_auth_requirements = sling_auth_requirements

    @classmethod
    def from_dict(cls, dikt) -> 'ComAdobeGraniteCsrfImplCSRFServletProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The comAdobeGraniteCsrfImplCSRFServletProperties of this ComAdobeGraniteCsrfImplCSRFServletProperties.  # noqa: E501
        :rtype: ComAdobeGraniteCsrfImplCSRFServletProperties
        """
        return util.deserialize_model(dikt, cls)

    @property
    def csrf_token_expires_in(self) -> ConfigNodePropertyInteger:
        """Gets the csrf_token_expires_in of this ComAdobeGraniteCsrfImplCSRFServletProperties.


        :return: The csrf_token_expires_in of this ComAdobeGraniteCsrfImplCSRFServletProperties.
        :rtype: ConfigNodePropertyInteger
        """
        return self._csrf_token_expires_in

    @csrf_token_expires_in.setter
    def csrf_token_expires_in(self, csrf_token_expires_in: ConfigNodePropertyInteger):
        """Sets the csrf_token_expires_in of this ComAdobeGraniteCsrfImplCSRFServletProperties.


        :param csrf_token_expires_in: The csrf_token_expires_in of this ComAdobeGraniteCsrfImplCSRFServletProperties.
        :type csrf_token_expires_in: ConfigNodePropertyInteger
        """

        self._csrf_token_expires_in = csrf_token_expires_in

    @property
    def sling_auth_requirements(self) -> ConfigNodePropertyString:
        """Gets the sling_auth_requirements of this ComAdobeGraniteCsrfImplCSRFServletProperties.


        :return: The sling_auth_requirements of this ComAdobeGraniteCsrfImplCSRFServletProperties.
        :rtype: ConfigNodePropertyString
        """
        return self._sling_auth_requirements

    @sling_auth_requirements.setter
    def sling_auth_requirements(self, sling_auth_requirements: ConfigNodePropertyString):
        """Sets the sling_auth_requirements of this ComAdobeGraniteCsrfImplCSRFServletProperties.


        :param sling_auth_requirements: The sling_auth_requirements of this ComAdobeGraniteCsrfImplCSRFServletProperties.
        :type sling_auth_requirements: ConfigNodePropertyString
        """

        self._sling_auth_requirements = sling_auth_requirements
