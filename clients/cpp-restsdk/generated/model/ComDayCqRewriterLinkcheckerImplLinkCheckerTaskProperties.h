/**
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 3.2.1-SNAPSHOT.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * ComDayCqRewriterLinkcheckerImplLinkCheckerTaskProperties.h
 *
 * 
 */

#ifndef ORG_OPENAPITOOLS_CLIENT_MODEL_ComDayCqRewriterLinkcheckerImplLinkCheckerTaskProperties_H_
#define ORG_OPENAPITOOLS_CLIENT_MODEL_ComDayCqRewriterLinkcheckerImplLinkCheckerTaskProperties_H_


#include "../ModelBase.h"

#include "ConfigNodePropertyBoolean.h"
#include "ConfigNodePropertyInteger.h"

namespace org {
namespace openapitools {
namespace client {
namespace model {

/// <summary>
/// 
/// </summary>
class  ComDayCqRewriterLinkcheckerImplLinkCheckerTaskProperties
    : public ModelBase
{
public:
    ComDayCqRewriterLinkcheckerImplLinkCheckerTaskProperties();
    virtual ~ComDayCqRewriterLinkcheckerImplLinkCheckerTaskProperties();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    void fromJson(web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    void fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// ComDayCqRewriterLinkcheckerImplLinkCheckerTaskProperties members

    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyInteger> getSchedulerPeriod() const;
    bool schedulerPeriodIsSet() const;
    void unsetScheduler_period();
    void setSchedulerPeriod(std::shared_ptr<ConfigNodePropertyInteger> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyBoolean> getSchedulerConcurrent() const;
    bool schedulerConcurrentIsSet() const;
    void unsetScheduler_concurrent();
    void setSchedulerConcurrent(std::shared_ptr<ConfigNodePropertyBoolean> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyInteger> getGoodLinkTestInterval() const;
    bool goodLinkTestIntervalIsSet() const;
    void unsetGood_link_test_interval();
    void setGoodLinkTestInterval(std::shared_ptr<ConfigNodePropertyInteger> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyInteger> getBadLinkTestInterval() const;
    bool badLinkTestIntervalIsSet() const;
    void unsetBad_link_test_interval();
    void setBadLinkTestInterval(std::shared_ptr<ConfigNodePropertyInteger> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyInteger> getLinkUnusedInterval() const;
    bool linkUnusedIntervalIsSet() const;
    void unsetLink_unused_interval();
    void setLinkUnusedInterval(std::shared_ptr<ConfigNodePropertyInteger> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyInteger> getConnectionTimeout() const;
    bool connectionTimeoutIsSet() const;
    void unsetConnection_timeout();
    void setConnectionTimeout(std::shared_ptr<ConfigNodePropertyInteger> value);

protected:
    std::shared_ptr<ConfigNodePropertyInteger> m_Scheduler_period;
    bool m_Scheduler_periodIsSet;
    std::shared_ptr<ConfigNodePropertyBoolean> m_Scheduler_concurrent;
    bool m_Scheduler_concurrentIsSet;
    std::shared_ptr<ConfigNodePropertyInteger> m_Good_link_test_interval;
    bool m_Good_link_test_intervalIsSet;
    std::shared_ptr<ConfigNodePropertyInteger> m_Bad_link_test_interval;
    bool m_Bad_link_test_intervalIsSet;
    std::shared_ptr<ConfigNodePropertyInteger> m_Link_unused_interval;
    bool m_Link_unused_intervalIsSet;
    std::shared_ptr<ConfigNodePropertyInteger> m_Connection_timeout;
    bool m_Connection_timeoutIsSet;
};

}
}
}
}

#endif /* ORG_OPENAPITOOLS_CLIENT_MODEL_ComDayCqRewriterLinkcheckerImplLinkCheckerTaskProperties_H_ */
