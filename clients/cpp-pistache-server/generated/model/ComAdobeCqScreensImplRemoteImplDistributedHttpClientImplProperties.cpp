/**
* Adobe Experience Manager OSGI config (AEM) API
* Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
*
* OpenAPI spec version: 1.0.0-pre.0
* Contact: opensource@shinesolutions.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/


#include "ComAdobeCqScreensImplRemoteImplDistributedHttpClientImplProperties.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

ComAdobeCqScreensImplRemoteImplDistributedHttpClientImplProperties::ComAdobeCqScreensImplRemoteImplDistributedHttpClientImplProperties()
{
    m_Com_adobe_aem_screens_impl_remote_request_timeoutIsSet = false;
    
}

ComAdobeCqScreensImplRemoteImplDistributedHttpClientImplProperties::~ComAdobeCqScreensImplRemoteImplDistributedHttpClientImplProperties()
{
}

void ComAdobeCqScreensImplRemoteImplDistributedHttpClientImplProperties::validate()
{
    // TODO: implement validation
}

nlohmann::json ComAdobeCqScreensImplRemoteImplDistributedHttpClientImplProperties::toJson() const
{
    nlohmann::json val = nlohmann::json::object();

    if(m_Com_adobe_aem_screens_impl_remote_request_timeoutIsSet)
    {
        val["com.adobe.aem.screens.impl.remote.request_timeout"] = ModelBase::toJson(m_Com_adobe_aem_screens_impl_remote_request_timeout);
    }
    

    return val;
}

void ComAdobeCqScreensImplRemoteImplDistributedHttpClientImplProperties::fromJson(nlohmann::json& val)
{
    if(val.find("com.adobe.aem.screens.impl.remote.request_timeout") != val.end())
    {
        if(!val["com.adobe.aem.screens.impl.remote.request_timeout"].is_null())
        {
            ConfigNodePropertyInteger newItem;
            newItem.fromJson(val["com.adobe.aem.screens.impl.remote.request_timeout"]);
            setComAdobeAemScreensImplRemoteRequestTimeout( newItem );
        }
        
    }
    
}


ConfigNodePropertyInteger ComAdobeCqScreensImplRemoteImplDistributedHttpClientImplProperties::getComAdobeAemScreensImplRemoteRequestTimeout() const
{
    return m_Com_adobe_aem_screens_impl_remote_request_timeout;
}
void ComAdobeCqScreensImplRemoteImplDistributedHttpClientImplProperties::setComAdobeAemScreensImplRemoteRequestTimeout(ConfigNodePropertyInteger const& value)
{
    m_Com_adobe_aem_screens_impl_remote_request_timeout = value;
    m_Com_adobe_aem_screens_impl_remote_request_timeoutIsSet = true;
}
bool ComAdobeCqScreensImplRemoteImplDistributedHttpClientImplProperties::comAdobeAemScreensImplRemoteRequestTimeoutIsSet() const
{
    return m_Com_adobe_aem_screens_impl_remote_request_timeoutIsSet;
}
void ComAdobeCqScreensImplRemoteImplDistributedHttpClientImplProperties::unsetCom_adobe_aem_screens_impl_remote_request_timeout()
{
    m_Com_adobe_aem_screens_impl_remote_request_timeoutIsSet = false;
}

}
}
}
}

