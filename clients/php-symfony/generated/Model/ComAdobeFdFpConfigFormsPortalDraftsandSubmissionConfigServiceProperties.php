<?php
/**
 * ComAdobeFdFpConfigFormsPortalDraftsandSubmissionConfigServiceProperties
 *
 * PHP version 5
 *
 * @category Class
 * @package  OpenAPI\Server\Model
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * Adobe Experience Manager OSGI config (AEM) API
 *
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 *
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Do not edit the class manually.
 */

namespace OpenAPI\Server\Model;

use Symfony\Component\Validator\Constraints as Assert;
use JMS\Serializer\Annotation\Type;
use JMS\Serializer\Annotation\SerializedName;

/**
 * Class representing the ComAdobeFdFpConfigFormsPortalDraftsandSubmissionConfigServiceProperties model.
 *
 * @package OpenAPI\Server\Model
 * @author  OpenAPI Generator team
 */
class ComAdobeFdFpConfigFormsPortalDraftsandSubmissionConfigServiceProperties 
{
        /**
     * @var OpenAPI\Server\Model\ConfigNodePropertyArray|null
     * @SerializedName("portal.outboxes")
     * @Assert\Type("OpenAPI\Server\Model\ConfigNodePropertyArray")
     * @Type("OpenAPI\Server\Model\ConfigNodePropertyArray")
     */
    protected $portalOutboxes;

    /**
     * @var OpenAPI\Server\Model\ConfigNodePropertyString|null
     * @SerializedName("draft.data.service")
     * @Assert\Type("OpenAPI\Server\Model\ConfigNodePropertyString")
     * @Type("OpenAPI\Server\Model\ConfigNodePropertyString")
     */
    protected $draftDataService;

    /**
     * @var OpenAPI\Server\Model\ConfigNodePropertyString|null
     * @SerializedName("draft.metadata.service")
     * @Assert\Type("OpenAPI\Server\Model\ConfigNodePropertyString")
     * @Type("OpenAPI\Server\Model\ConfigNodePropertyString")
     */
    protected $draftMetadataService;

    /**
     * @var OpenAPI\Server\Model\ConfigNodePropertyString|null
     * @SerializedName("submit.data.service")
     * @Assert\Type("OpenAPI\Server\Model\ConfigNodePropertyString")
     * @Type("OpenAPI\Server\Model\ConfigNodePropertyString")
     */
    protected $submitDataService;

    /**
     * @var OpenAPI\Server\Model\ConfigNodePropertyString|null
     * @SerializedName("submit.metadata.service")
     * @Assert\Type("OpenAPI\Server\Model\ConfigNodePropertyString")
     * @Type("OpenAPI\Server\Model\ConfigNodePropertyString")
     */
    protected $submitMetadataService;

    /**
     * @var OpenAPI\Server\Model\ConfigNodePropertyString|null
     * @SerializedName("pendingSign.data.service")
     * @Assert\Type("OpenAPI\Server\Model\ConfigNodePropertyString")
     * @Type("OpenAPI\Server\Model\ConfigNodePropertyString")
     */
    protected $pendingSignDataService;

    /**
     * @var OpenAPI\Server\Model\ConfigNodePropertyString|null
     * @SerializedName("pendingSign.metadata.service")
     * @Assert\Type("OpenAPI\Server\Model\ConfigNodePropertyString")
     * @Type("OpenAPI\Server\Model\ConfigNodePropertyString")
     */
    protected $pendingSignMetadataService;

    /**
     * Constructor
     * @param mixed[] $data Associated array of property values initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->portalOutboxes = isset($data['portalOutboxes']) ? $data['portalOutboxes'] : null;
        $this->draftDataService = isset($data['draftDataService']) ? $data['draftDataService'] : null;
        $this->draftMetadataService = isset($data['draftMetadataService']) ? $data['draftMetadataService'] : null;
        $this->submitDataService = isset($data['submitDataService']) ? $data['submitDataService'] : null;
        $this->submitMetadataService = isset($data['submitMetadataService']) ? $data['submitMetadataService'] : null;
        $this->pendingSignDataService = isset($data['pendingSignDataService']) ? $data['pendingSignDataService'] : null;
        $this->pendingSignMetadataService = isset($data['pendingSignMetadataService']) ? $data['pendingSignMetadataService'] : null;
    }

    /**
     * Gets portalOutboxes.
     *
     * @return OpenAPI\Server\Model\ConfigNodePropertyArray|null
     */
    public function getPortalOutboxes()
    {
        return $this->portalOutboxes;
    }

    /**
     * Sets portalOutboxes.
     *
     * @param OpenAPI\Server\Model\ConfigNodePropertyArray|null $portalOutboxes
     *
     * @return $this
     */
    public function setPortalOutboxes(ConfigNodePropertyArray $portalOutboxes = null)
    {
        $this->portalOutboxes = $portalOutboxes;

        return $this;
    }

    /**
     * Gets draftDataService.
     *
     * @return OpenAPI\Server\Model\ConfigNodePropertyString|null
     */
    public function getDraftDataService()
    {
        return $this->draftDataService;
    }

    /**
     * Sets draftDataService.
     *
     * @param OpenAPI\Server\Model\ConfigNodePropertyString|null $draftDataService
     *
     * @return $this
     */
    public function setDraftDataService(ConfigNodePropertyString $draftDataService = null)
    {
        $this->draftDataService = $draftDataService;

        return $this;
    }

    /**
     * Gets draftMetadataService.
     *
     * @return OpenAPI\Server\Model\ConfigNodePropertyString|null
     */
    public function getDraftMetadataService()
    {
        return $this->draftMetadataService;
    }

    /**
     * Sets draftMetadataService.
     *
     * @param OpenAPI\Server\Model\ConfigNodePropertyString|null $draftMetadataService
     *
     * @return $this
     */
    public function setDraftMetadataService(ConfigNodePropertyString $draftMetadataService = null)
    {
        $this->draftMetadataService = $draftMetadataService;

        return $this;
    }

    /**
     * Gets submitDataService.
     *
     * @return OpenAPI\Server\Model\ConfigNodePropertyString|null
     */
    public function getSubmitDataService()
    {
        return $this->submitDataService;
    }

    /**
     * Sets submitDataService.
     *
     * @param OpenAPI\Server\Model\ConfigNodePropertyString|null $submitDataService
     *
     * @return $this
     */
    public function setSubmitDataService(ConfigNodePropertyString $submitDataService = null)
    {
        $this->submitDataService = $submitDataService;

        return $this;
    }

    /**
     * Gets submitMetadataService.
     *
     * @return OpenAPI\Server\Model\ConfigNodePropertyString|null
     */
    public function getSubmitMetadataService()
    {
        return $this->submitMetadataService;
    }

    /**
     * Sets submitMetadataService.
     *
     * @param OpenAPI\Server\Model\ConfigNodePropertyString|null $submitMetadataService
     *
     * @return $this
     */
    public function setSubmitMetadataService(ConfigNodePropertyString $submitMetadataService = null)
    {
        $this->submitMetadataService = $submitMetadataService;

        return $this;
    }

    /**
     * Gets pendingSignDataService.
     *
     * @return OpenAPI\Server\Model\ConfigNodePropertyString|null
     */
    public function getPendingSignDataService()
    {
        return $this->pendingSignDataService;
    }

    /**
     * Sets pendingSignDataService.
     *
     * @param OpenAPI\Server\Model\ConfigNodePropertyString|null $pendingSignDataService
     *
     * @return $this
     */
    public function setPendingSignDataService(ConfigNodePropertyString $pendingSignDataService = null)
    {
        $this->pendingSignDataService = $pendingSignDataService;

        return $this;
    }

    /**
     * Gets pendingSignMetadataService.
     *
     * @return OpenAPI\Server\Model\ConfigNodePropertyString|null
     */
    public function getPendingSignMetadataService()
    {
        return $this->pendingSignMetadataService;
    }

    /**
     * Sets pendingSignMetadataService.
     *
     * @param OpenAPI\Server\Model\ConfigNodePropertyString|null $pendingSignMetadataService
     *
     * @return $this
     */
    public function setPendingSignMetadataService(ConfigNodePropertyString $pendingSignMetadataService = null)
    {
        $this->pendingSignMetadataService = $pendingSignMetadataService;

        return $this;
    }
}


