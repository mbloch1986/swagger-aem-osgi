/* 
 * Adobe Experience Manager OSGI config (AEM) API
 *
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 * Generated by: https://openapi-generator.tech
 */


#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct ComAdobeCqDamProcessorNuiImplNuiAssetProcessorProperties {
  #[serde(rename = "nuiEnabled")]
  nui_enabled: Option<::models::ConfigNodePropertyBoolean>,
  #[serde(rename = "nuiServiceUrl")]
  nui_service_url: Option<::models::ConfigNodePropertyString>,
  #[serde(rename = "nuiApiKey")]
  nui_api_key: Option<::models::ConfigNodePropertyString>
}

impl ComAdobeCqDamProcessorNuiImplNuiAssetProcessorProperties {
  pub fn new() -> ComAdobeCqDamProcessorNuiImplNuiAssetProcessorProperties {
    ComAdobeCqDamProcessorNuiImplNuiAssetProcessorProperties {
      nui_enabled: None,
      nui_service_url: None,
      nui_api_key: None
    }
  }

  pub fn set_nui_enabled(&mut self, nui_enabled: ::models::ConfigNodePropertyBoolean) {
    self.nui_enabled = Some(nui_enabled);
  }

  pub fn with_nui_enabled(mut self, nui_enabled: ::models::ConfigNodePropertyBoolean) -> ComAdobeCqDamProcessorNuiImplNuiAssetProcessorProperties {
    self.nui_enabled = Some(nui_enabled);
    self
  }

  pub fn nui_enabled(&self) -> Option<&::models::ConfigNodePropertyBoolean> {
    self.nui_enabled.as_ref()
  }

  pub fn reset_nui_enabled(&mut self) {
    self.nui_enabled = None;
  }

  pub fn set_nui_service_url(&mut self, nui_service_url: ::models::ConfigNodePropertyString) {
    self.nui_service_url = Some(nui_service_url);
  }

  pub fn with_nui_service_url(mut self, nui_service_url: ::models::ConfigNodePropertyString) -> ComAdobeCqDamProcessorNuiImplNuiAssetProcessorProperties {
    self.nui_service_url = Some(nui_service_url);
    self
  }

  pub fn nui_service_url(&self) -> Option<&::models::ConfigNodePropertyString> {
    self.nui_service_url.as_ref()
  }

  pub fn reset_nui_service_url(&mut self) {
    self.nui_service_url = None;
  }

  pub fn set_nui_api_key(&mut self, nui_api_key: ::models::ConfigNodePropertyString) {
    self.nui_api_key = Some(nui_api_key);
  }

  pub fn with_nui_api_key(mut self, nui_api_key: ::models::ConfigNodePropertyString) -> ComAdobeCqDamProcessorNuiImplNuiAssetProcessorProperties {
    self.nui_api_key = Some(nui_api_key);
    self
  }

  pub fn nui_api_key(&self) -> Option<&::models::ConfigNodePropertyString> {
    self.nui_api_key.as_ref()
  }

  pub fn reset_nui_api_key(&mut self) {
    self.nui_api_key = None;
  }

}



