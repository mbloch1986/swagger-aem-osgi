/**
* Adobe Experience Manager OSGI config (AEM) API
* Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
*
* OpenAPI spec version: 1.0.0-pre.0
* Contact: opensource@shinesolutions.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
/*
 * OrgApacheSlingEngineImplSlingMainServletProperties.h
 *
 * 
 */

#ifndef OrgApacheSlingEngineImplSlingMainServletProperties_H_
#define OrgApacheSlingEngineImplSlingMainServletProperties_H_


#include "ModelBase.h"

#include "ConfigNodePropertyBoolean.h"
#include "ConfigNodePropertyInteger.h"
#include "ConfigNodePropertyArray.h"
#include "ConfigNodePropertyString.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
/// 
/// </summary>
class  OrgApacheSlingEngineImplSlingMainServletProperties
    : public ModelBase
{
public:
    OrgApacheSlingEngineImplSlingMainServletProperties();
    virtual ~OrgApacheSlingEngineImplSlingMainServletProperties();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    nlohmann::json toJson() const override;
    void fromJson(nlohmann::json& json) override;

    /////////////////////////////////////////////
    /// OrgApacheSlingEngineImplSlingMainServletProperties members

    /// <summary>
    /// 
    /// </summary>
    ConfigNodePropertyInteger getSlingMaxCalls() const;
    void setSlingMaxCalls(ConfigNodePropertyInteger const& value);
    bool slingMaxCallsIsSet() const;
    void unsetSling_max_calls();
    /// <summary>
    /// 
    /// </summary>
    ConfigNodePropertyInteger getSlingMaxInclusions() const;
    void setSlingMaxInclusions(ConfigNodePropertyInteger const& value);
    bool slingMaxInclusionsIsSet() const;
    void unsetSling_max_inclusions();
    /// <summary>
    /// 
    /// </summary>
    ConfigNodePropertyBoolean getSlingTraceAllow() const;
    void setSlingTraceAllow(ConfigNodePropertyBoolean const& value);
    bool slingTraceAllowIsSet() const;
    void unsetSling_trace_allow();
    /// <summary>
    /// 
    /// </summary>
    ConfigNodePropertyInteger getSlingMaxRecordRequests() const;
    void setSlingMaxRecordRequests(ConfigNodePropertyInteger const& value);
    bool slingMaxRecordRequestsIsSet() const;
    void unsetSling_max_record_requests();
    /// <summary>
    /// 
    /// </summary>
    ConfigNodePropertyArray getSlingStorePatternRequests() const;
    void setSlingStorePatternRequests(ConfigNodePropertyArray const& value);
    bool slingStorePatternRequestsIsSet() const;
    void unsetSling_store_pattern_requests();
    /// <summary>
    /// 
    /// </summary>
    ConfigNodePropertyString getSlingServerinfo() const;
    void setSlingServerinfo(ConfigNodePropertyString const& value);
    bool slingServerinfoIsSet() const;
    void unsetSling_serverinfo();
    /// <summary>
    /// 
    /// </summary>
    ConfigNodePropertyArray getSlingAdditionalResponseHeaders() const;
    void setSlingAdditionalResponseHeaders(ConfigNodePropertyArray const& value);
    bool slingAdditionalResponseHeadersIsSet() const;
    void unsetSling_additional_response_headers();

protected:
    ConfigNodePropertyInteger m_Sling_max_calls;
    bool m_Sling_max_callsIsSet;
    ConfigNodePropertyInteger m_Sling_max_inclusions;
    bool m_Sling_max_inclusionsIsSet;
    ConfigNodePropertyBoolean m_Sling_trace_allow;
    bool m_Sling_trace_allowIsSet;
    ConfigNodePropertyInteger m_Sling_max_record_requests;
    bool m_Sling_max_record_requestsIsSet;
    ConfigNodePropertyArray m_Sling_store_pattern_requests;
    bool m_Sling_store_pattern_requestsIsSet;
    ConfigNodePropertyString m_Sling_serverinfo;
    bool m_Sling_serverinfoIsSet;
    ConfigNodePropertyArray m_Sling_additional_response_headers;
    bool m_Sling_additional_response_headersIsSet;
};

}
}
}
}

#endif /* OrgApacheSlingEngineImplSlingMainServletProperties_H_ */
