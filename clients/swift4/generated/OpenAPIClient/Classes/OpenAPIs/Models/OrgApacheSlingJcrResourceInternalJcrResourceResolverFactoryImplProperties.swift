//
// OrgApacheSlingJcrResourceInternalJcrResourceResolverFactoryImplProperties.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation



public struct OrgApacheSlingJcrResourceInternalJcrResourceResolverFactoryImplProperties: Codable {

    public var resourceResolverSearchpath: ConfigNodePropertyArray?
    public var resourceResolverManglenamespaces: ConfigNodePropertyBoolean?
    public var resourceResolverAllowDirect: ConfigNodePropertyBoolean?
    public var resourceResolverRequiredProviders: ConfigNodePropertyArray?
    public var resourceResolverRequiredProvidernames: ConfigNodePropertyArray?
    public var resourceResolverVirtual: ConfigNodePropertyArray?
    public var resourceResolverMapping: ConfigNodePropertyArray?
    public var resourceResolverMapLocation: ConfigNodePropertyString?
    public var resourceResolverMapObservation: ConfigNodePropertyArray?
    public var resourceResolverDefaultVanityRedirectStatus: ConfigNodePropertyInteger?
    public var resourceResolverEnableVanitypath: ConfigNodePropertyBoolean?
    public var resourceResolverVanitypathMaxEntries: ConfigNodePropertyInteger?
    public var resourceResolverVanitypathMaxEntriesStartup: ConfigNodePropertyBoolean?
    public var resourceResolverVanitypathBloomfilterMaxBytes: ConfigNodePropertyInteger?
    public var resourceResolverOptimizeAliasResolution: ConfigNodePropertyBoolean?
    public var resourceResolverVanitypathWhitelist: ConfigNodePropertyArray?
    public var resourceResolverVanitypathBlacklist: ConfigNodePropertyArray?
    public var resourceResolverVanityPrecedence: ConfigNodePropertyBoolean?
    public var resourceResolverProviderhandlingParanoid: ConfigNodePropertyBoolean?
    public var resourceResolverLogClosing: ConfigNodePropertyBoolean?
    public var resourceResolverLogUnclosed: ConfigNodePropertyBoolean?

    public init(resourceResolverSearchpath: ConfigNodePropertyArray?, resourceResolverManglenamespaces: ConfigNodePropertyBoolean?, resourceResolverAllowDirect: ConfigNodePropertyBoolean?, resourceResolverRequiredProviders: ConfigNodePropertyArray?, resourceResolverRequiredProvidernames: ConfigNodePropertyArray?, resourceResolverVirtual: ConfigNodePropertyArray?, resourceResolverMapping: ConfigNodePropertyArray?, resourceResolverMapLocation: ConfigNodePropertyString?, resourceResolverMapObservation: ConfigNodePropertyArray?, resourceResolverDefaultVanityRedirectStatus: ConfigNodePropertyInteger?, resourceResolverEnableVanitypath: ConfigNodePropertyBoolean?, resourceResolverVanitypathMaxEntries: ConfigNodePropertyInteger?, resourceResolverVanitypathMaxEntriesStartup: ConfigNodePropertyBoolean?, resourceResolverVanitypathBloomfilterMaxBytes: ConfigNodePropertyInteger?, resourceResolverOptimizeAliasResolution: ConfigNodePropertyBoolean?, resourceResolverVanitypathWhitelist: ConfigNodePropertyArray?, resourceResolverVanitypathBlacklist: ConfigNodePropertyArray?, resourceResolverVanityPrecedence: ConfigNodePropertyBoolean?, resourceResolverProviderhandlingParanoid: ConfigNodePropertyBoolean?, resourceResolverLogClosing: ConfigNodePropertyBoolean?, resourceResolverLogUnclosed: ConfigNodePropertyBoolean?) {
        self.resourceResolverSearchpath = resourceResolverSearchpath
        self.resourceResolverManglenamespaces = resourceResolverManglenamespaces
        self.resourceResolverAllowDirect = resourceResolverAllowDirect
        self.resourceResolverRequiredProviders = resourceResolverRequiredProviders
        self.resourceResolverRequiredProvidernames = resourceResolverRequiredProvidernames
        self.resourceResolverVirtual = resourceResolverVirtual
        self.resourceResolverMapping = resourceResolverMapping
        self.resourceResolverMapLocation = resourceResolverMapLocation
        self.resourceResolverMapObservation = resourceResolverMapObservation
        self.resourceResolverDefaultVanityRedirectStatus = resourceResolverDefaultVanityRedirectStatus
        self.resourceResolverEnableVanitypath = resourceResolverEnableVanitypath
        self.resourceResolverVanitypathMaxEntries = resourceResolverVanitypathMaxEntries
        self.resourceResolverVanitypathMaxEntriesStartup = resourceResolverVanitypathMaxEntriesStartup
        self.resourceResolverVanitypathBloomfilterMaxBytes = resourceResolverVanitypathBloomfilterMaxBytes
        self.resourceResolverOptimizeAliasResolution = resourceResolverOptimizeAliasResolution
        self.resourceResolverVanitypathWhitelist = resourceResolverVanitypathWhitelist
        self.resourceResolverVanitypathBlacklist = resourceResolverVanitypathBlacklist
        self.resourceResolverVanityPrecedence = resourceResolverVanityPrecedence
        self.resourceResolverProviderhandlingParanoid = resourceResolverProviderhandlingParanoid
        self.resourceResolverLogClosing = resourceResolverLogClosing
        self.resourceResolverLogUnclosed = resourceResolverLogUnclosed
    }

    public enum CodingKeys: String, CodingKey { 
        case resourceResolverSearchpath = "resource.resolver.searchpath"
        case resourceResolverManglenamespaces = "resource.resolver.manglenamespaces"
        case resourceResolverAllowDirect = "resource.resolver.allowDirect"
        case resourceResolverRequiredProviders = "resource.resolver.required.providers"
        case resourceResolverRequiredProvidernames = "resource.resolver.required.providernames"
        case resourceResolverVirtual = "resource.resolver.virtual"
        case resourceResolverMapping = "resource.resolver.mapping"
        case resourceResolverMapLocation = "resource.resolver.map.location"
        case resourceResolverMapObservation = "resource.resolver.map.observation"
        case resourceResolverDefaultVanityRedirectStatus = "resource.resolver.default.vanity.redirect.status"
        case resourceResolverEnableVanitypath = "resource.resolver.enable.vanitypath"
        case resourceResolverVanitypathMaxEntries = "resource.resolver.vanitypath.maxEntries"
        case resourceResolverVanitypathMaxEntriesStartup = "resource.resolver.vanitypath.maxEntries.startup"
        case resourceResolverVanitypathBloomfilterMaxBytes = "resource.resolver.vanitypath.bloomfilter.maxBytes"
        case resourceResolverOptimizeAliasResolution = "resource.resolver.optimize.alias.resolution"
        case resourceResolverVanitypathWhitelist = "resource.resolver.vanitypath.whitelist"
        case resourceResolverVanitypathBlacklist = "resource.resolver.vanitypath.blacklist"
        case resourceResolverVanityPrecedence = "resource.resolver.vanity.precedence"
        case resourceResolverProviderhandlingParanoid = "resource.resolver.providerhandling.paranoid"
        case resourceResolverLogClosing = "resource.resolver.log.closing"
        case resourceResolverLogUnclosed = "resource.resolver.log.unclosed"
    }


}

