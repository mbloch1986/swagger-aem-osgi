/**
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIOrgApacheSlingEngineImplAuthSlingAuthenticatorProperties.h
 *
 * 
 */

#ifndef OAIOrgApacheSlingEngineImplAuthSlingAuthenticatorProperties_H_
#define OAIOrgApacheSlingEngineImplAuthSlingAuthenticatorProperties_H_

#include <QJsonObject>


#include "OAIOAIConfigNodePropertyArray.h"
#include "OAIOAIConfigNodePropertyBoolean.h"
#include "OAIOAIConfigNodePropertyDropDown.h"
#include "OAIOAIConfigNodePropertyString.h"

#include "OAIObject.h"

namespace OpenAPI {

class OAIOrgApacheSlingEngineImplAuthSlingAuthenticatorProperties: public OAIObject {
public:
    OAIOrgApacheSlingEngineImplAuthSlingAuthenticatorProperties();
    OAIOrgApacheSlingEngineImplAuthSlingAuthenticatorProperties(QString json);
    ~OAIOrgApacheSlingEngineImplAuthSlingAuthenticatorProperties();
    void init();
    void cleanup();

    QString asJson () override;
    QJsonObject asJsonObject() override;
    void fromJsonObject(QJsonObject json) override;
    OAIOrgApacheSlingEngineImplAuthSlingAuthenticatorProperties* fromJson(QString jsonString) override;

    OAIConfigNodePropertyString* getOsgiHttpWhiteboardContextSelect();
    void setOsgiHttpWhiteboardContextSelect(OAIConfigNodePropertyString* osgi_http_whiteboard_context_select);

    OAIConfigNodePropertyString* getOsgiHttpWhiteboardListener();
    void setOsgiHttpWhiteboardListener(OAIConfigNodePropertyString* osgi_http_whiteboard_listener);

    OAIConfigNodePropertyString* getAuthSudoCookie();
    void setAuthSudoCookie(OAIConfigNodePropertyString* auth_sudo_cookie);

    OAIConfigNodePropertyString* getAuthSudoParameter();
    void setAuthSudoParameter(OAIConfigNodePropertyString* auth_sudo_parameter);

    OAIConfigNodePropertyBoolean* getAuthAnnonymous();
    void setAuthAnnonymous(OAIConfigNodePropertyBoolean* auth_annonymous);

    OAIConfigNodePropertyArray* getSlingAuthRequirements();
    void setSlingAuthRequirements(OAIConfigNodePropertyArray* sling_auth_requirements);

    OAIConfigNodePropertyString* getSlingAuthAnonymousUser();
    void setSlingAuthAnonymousUser(OAIConfigNodePropertyString* sling_auth_anonymous_user);

    OAIConfigNodePropertyString* getSlingAuthAnonymousPassword();
    void setSlingAuthAnonymousPassword(OAIConfigNodePropertyString* sling_auth_anonymous_password);

    OAIConfigNodePropertyDropDown* getAuthHttp();
    void setAuthHttp(OAIConfigNodePropertyDropDown* auth_http);

    OAIConfigNodePropertyString* getAuthHttpRealm();
    void setAuthHttpRealm(OAIConfigNodePropertyString* auth_http_realm);

    OAIConfigNodePropertyArray* getAuthUriSuffix();
    void setAuthUriSuffix(OAIConfigNodePropertyArray* auth_uri_suffix);


    virtual bool isSet() override;

private:
    OAIConfigNodePropertyString* osgi_http_whiteboard_context_select;
    bool m_osgi_http_whiteboard_context_select_isSet;

    OAIConfigNodePropertyString* osgi_http_whiteboard_listener;
    bool m_osgi_http_whiteboard_listener_isSet;

    OAIConfigNodePropertyString* auth_sudo_cookie;
    bool m_auth_sudo_cookie_isSet;

    OAIConfigNodePropertyString* auth_sudo_parameter;
    bool m_auth_sudo_parameter_isSet;

    OAIConfigNodePropertyBoolean* auth_annonymous;
    bool m_auth_annonymous_isSet;

    OAIConfigNodePropertyArray* sling_auth_requirements;
    bool m_sling_auth_requirements_isSet;

    OAIConfigNodePropertyString* sling_auth_anonymous_user;
    bool m_sling_auth_anonymous_user_isSet;

    OAIConfigNodePropertyString* sling_auth_anonymous_password;
    bool m_sling_auth_anonymous_password_isSet;

    OAIConfigNodePropertyDropDown* auth_http;
    bool m_auth_http_isSet;

    OAIConfigNodePropertyString* auth_http_realm;
    bool m_auth_http_realm_isSet;

    OAIConfigNodePropertyArray* auth_uri_suffix;
    bool m_auth_uri_suffix_isSet;

};

}

#endif /* OAIOrgApacheSlingEngineImplAuthSlingAuthenticatorProperties_H_ */
