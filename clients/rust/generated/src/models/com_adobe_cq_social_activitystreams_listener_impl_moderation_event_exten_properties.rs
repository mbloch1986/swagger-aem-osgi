/* 
 * Adobe Experience Manager OSGI config (AEM) API
 *
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 * Generated by: https://openapi-generator.tech
 */


#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct ComAdobeCqSocialActivitystreamsListenerImplModerationEventExtenProperties {
  #[serde(rename = "accepted")]
  accepted: Option<::models::ConfigNodePropertyBoolean>,
  #[serde(rename = "ranked")]
  ranked: Option<::models::ConfigNodePropertyInteger>
}

impl ComAdobeCqSocialActivitystreamsListenerImplModerationEventExtenProperties {
  pub fn new() -> ComAdobeCqSocialActivitystreamsListenerImplModerationEventExtenProperties {
    ComAdobeCqSocialActivitystreamsListenerImplModerationEventExtenProperties {
      accepted: None,
      ranked: None
    }
  }

  pub fn set_accepted(&mut self, accepted: ::models::ConfigNodePropertyBoolean) {
    self.accepted = Some(accepted);
  }

  pub fn with_accepted(mut self, accepted: ::models::ConfigNodePropertyBoolean) -> ComAdobeCqSocialActivitystreamsListenerImplModerationEventExtenProperties {
    self.accepted = Some(accepted);
    self
  }

  pub fn accepted(&self) -> Option<&::models::ConfigNodePropertyBoolean> {
    self.accepted.as_ref()
  }

  pub fn reset_accepted(&mut self) {
    self.accepted = None;
  }

  pub fn set_ranked(&mut self, ranked: ::models::ConfigNodePropertyInteger) {
    self.ranked = Some(ranked);
  }

  pub fn with_ranked(mut self, ranked: ::models::ConfigNodePropertyInteger) -> ComAdobeCqSocialActivitystreamsListenerImplModerationEventExtenProperties {
    self.ranked = Some(ranked);
    self
  }

  pub fn ranked(&self) -> Option<&::models::ConfigNodePropertyInteger> {
    self.ranked.as_ref()
  }

  pub fn reset_ranked(&mut self) {
    self.ranked = None;
  }

}



