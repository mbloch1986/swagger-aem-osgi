/**
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


#include "OAIComDayCqSearchImplBuilderQueryBuilderImplProperties.h"

#include "OAIHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace OpenAPI {

OAIComDayCqSearchImplBuilderQueryBuilderImplProperties::OAIComDayCqSearchImplBuilderQueryBuilderImplProperties(QString json) {
    this->fromJson(json);
}

OAIComDayCqSearchImplBuilderQueryBuilderImplProperties::OAIComDayCqSearchImplBuilderQueryBuilderImplProperties() {
    this->init();
}

OAIComDayCqSearchImplBuilderQueryBuilderImplProperties::~OAIComDayCqSearchImplBuilderQueryBuilderImplProperties() {
    
}

void
OAIComDayCqSearchImplBuilderQueryBuilderImplProperties::init() {
    m_excerpt_properties_isSet = false;
    m_cache_max_entries_isSet = false;
    m_cache_entry_lifetime_isSet = false;
    m_xpath_union_isSet = false;
}

void
OAIComDayCqSearchImplBuilderQueryBuilderImplProperties::fromJson(QString jsonString) {
    QByteArray array (jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void
OAIComDayCqSearchImplBuilderQueryBuilderImplProperties::fromJsonObject(QJsonObject json) {
    ::OpenAPI::fromJsonValue(excerpt_properties, json[QString("excerpt.properties")]);
    
    ::OpenAPI::fromJsonValue(cache_max_entries, json[QString("cache.max.entries")]);
    
    ::OpenAPI::fromJsonValue(cache_entry_lifetime, json[QString("cache.entry.lifetime")]);
    
    ::OpenAPI::fromJsonValue(xpath_union, json[QString("xpath.union")]);
    
}

QString
OAIComDayCqSearchImplBuilderQueryBuilderImplProperties::asJson () const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject
OAIComDayCqSearchImplBuilderQueryBuilderImplProperties::asJsonObject() const {
    QJsonObject obj;
	if(excerpt_properties.isSet()){
        obj.insert(QString("excerpt.properties"), ::OpenAPI::toJsonValue(excerpt_properties));
    }
	if(cache_max_entries.isSet()){
        obj.insert(QString("cache.max.entries"), ::OpenAPI::toJsonValue(cache_max_entries));
    }
	if(cache_entry_lifetime.isSet()){
        obj.insert(QString("cache.entry.lifetime"), ::OpenAPI::toJsonValue(cache_entry_lifetime));
    }
	if(xpath_union.isSet()){
        obj.insert(QString("xpath.union"), ::OpenAPI::toJsonValue(xpath_union));
    }
    return obj;
}

OAIConfigNodePropertyArray
OAIComDayCqSearchImplBuilderQueryBuilderImplProperties::getExcerptProperties() const {
    return excerpt_properties;
}
void
OAIComDayCqSearchImplBuilderQueryBuilderImplProperties::setExcerptProperties(const OAIConfigNodePropertyArray &excerpt_properties) {
    this->excerpt_properties = excerpt_properties;
    this->m_excerpt_properties_isSet = true;
}

OAIConfigNodePropertyInteger
OAIComDayCqSearchImplBuilderQueryBuilderImplProperties::getCacheMaxEntries() const {
    return cache_max_entries;
}
void
OAIComDayCqSearchImplBuilderQueryBuilderImplProperties::setCacheMaxEntries(const OAIConfigNodePropertyInteger &cache_max_entries) {
    this->cache_max_entries = cache_max_entries;
    this->m_cache_max_entries_isSet = true;
}

OAIConfigNodePropertyInteger
OAIComDayCqSearchImplBuilderQueryBuilderImplProperties::getCacheEntryLifetime() const {
    return cache_entry_lifetime;
}
void
OAIComDayCqSearchImplBuilderQueryBuilderImplProperties::setCacheEntryLifetime(const OAIConfigNodePropertyInteger &cache_entry_lifetime) {
    this->cache_entry_lifetime = cache_entry_lifetime;
    this->m_cache_entry_lifetime_isSet = true;
}

OAIConfigNodePropertyBoolean
OAIComDayCqSearchImplBuilderQueryBuilderImplProperties::getXpathUnion() const {
    return xpath_union;
}
void
OAIComDayCqSearchImplBuilderQueryBuilderImplProperties::setXpathUnion(const OAIConfigNodePropertyBoolean &xpath_union) {
    this->xpath_union = xpath_union;
    this->m_xpath_union_isSet = true;
}


bool
OAIComDayCqSearchImplBuilderQueryBuilderImplProperties::isSet() const {
    bool isObjectUpdated = false;
    do{ 
        if(excerpt_properties.isSet()){ isObjectUpdated = true; break;}
    
        if(cache_max_entries.isSet()){ isObjectUpdated = true; break;}
    
        if(cache_entry_lifetime.isSet()){ isObjectUpdated = true; break;}
    
        if(xpath_union.isSet()){ isObjectUpdated = true; break;}
    }while(false);
    return isObjectUpdated;
}

}

