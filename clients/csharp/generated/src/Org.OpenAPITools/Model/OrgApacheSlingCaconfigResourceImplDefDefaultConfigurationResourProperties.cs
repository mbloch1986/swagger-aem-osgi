/* 
 * Adobe Experience Manager OSGI config (AEM) API
 *
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Org.OpenAPITools.Client.OpenAPIDateConverter;

namespace Org.OpenAPITools.Model
{
    /// <summary>
    /// OrgApacheSlingCaconfigResourceImplDefDefaultConfigurationResourProperties
    /// </summary>
    [DataContract]
    public partial class OrgApacheSlingCaconfigResourceImplDefDefaultConfigurationResourProperties :  IEquatable<OrgApacheSlingCaconfigResourceImplDefDefaultConfigurationResourProperties>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="OrgApacheSlingCaconfigResourceImplDefDefaultConfigurationResourProperties" /> class.
        /// </summary>
        /// <param name="enabled">enabled.</param>
        /// <param name="configPath">configPath.</param>
        /// <param name="fallbackPaths">fallbackPaths.</param>
        /// <param name="configCollectionInheritancePropertyNames">configCollectionInheritancePropertyNames.</param>
        public OrgApacheSlingCaconfigResourceImplDefDefaultConfigurationResourProperties(ConfigNodePropertyBoolean enabled = default(ConfigNodePropertyBoolean), ConfigNodePropertyString configPath = default(ConfigNodePropertyString), ConfigNodePropertyArray fallbackPaths = default(ConfigNodePropertyArray), ConfigNodePropertyArray configCollectionInheritancePropertyNames = default(ConfigNodePropertyArray))
        {
            this.Enabled = enabled;
            this.ConfigPath = configPath;
            this.FallbackPaths = fallbackPaths;
            this.ConfigCollectionInheritancePropertyNames = configCollectionInheritancePropertyNames;
        }
        
        /// <summary>
        /// Gets or Sets Enabled
        /// </summary>
        [DataMember(Name="enabled", EmitDefaultValue=false)]
        public ConfigNodePropertyBoolean Enabled { get; set; }

        /// <summary>
        /// Gets or Sets ConfigPath
        /// </summary>
        [DataMember(Name="configPath", EmitDefaultValue=false)]
        public ConfigNodePropertyString ConfigPath { get; set; }

        /// <summary>
        /// Gets or Sets FallbackPaths
        /// </summary>
        [DataMember(Name="fallbackPaths", EmitDefaultValue=false)]
        public ConfigNodePropertyArray FallbackPaths { get; set; }

        /// <summary>
        /// Gets or Sets ConfigCollectionInheritancePropertyNames
        /// </summary>
        [DataMember(Name="configCollectionInheritancePropertyNames", EmitDefaultValue=false)]
        public ConfigNodePropertyArray ConfigCollectionInheritancePropertyNames { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class OrgApacheSlingCaconfigResourceImplDefDefaultConfigurationResourProperties {\n");
            sb.Append("  Enabled: ").Append(Enabled).Append("\n");
            sb.Append("  ConfigPath: ").Append(ConfigPath).Append("\n");
            sb.Append("  FallbackPaths: ").Append(FallbackPaths).Append("\n");
            sb.Append("  ConfigCollectionInheritancePropertyNames: ").Append(ConfigCollectionInheritancePropertyNames).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as OrgApacheSlingCaconfigResourceImplDefDefaultConfigurationResourProperties);
        }

        /// <summary>
        /// Returns true if OrgApacheSlingCaconfigResourceImplDefDefaultConfigurationResourProperties instances are equal
        /// </summary>
        /// <param name="input">Instance of OrgApacheSlingCaconfigResourceImplDefDefaultConfigurationResourProperties to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(OrgApacheSlingCaconfigResourceImplDefDefaultConfigurationResourProperties input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.Enabled == input.Enabled ||
                    (this.Enabled != null &&
                    this.Enabled.Equals(input.Enabled))
                ) && 
                (
                    this.ConfigPath == input.ConfigPath ||
                    (this.ConfigPath != null &&
                    this.ConfigPath.Equals(input.ConfigPath))
                ) && 
                (
                    this.FallbackPaths == input.FallbackPaths ||
                    (this.FallbackPaths != null &&
                    this.FallbackPaths.Equals(input.FallbackPaths))
                ) && 
                (
                    this.ConfigCollectionInheritancePropertyNames == input.ConfigCollectionInheritancePropertyNames ||
                    (this.ConfigCollectionInheritancePropertyNames != null &&
                    this.ConfigCollectionInheritancePropertyNames.Equals(input.ConfigCollectionInheritancePropertyNames))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Enabled != null)
                    hashCode = hashCode * 59 + this.Enabled.GetHashCode();
                if (this.ConfigPath != null)
                    hashCode = hashCode * 59 + this.ConfigPath.GetHashCode();
                if (this.FallbackPaths != null)
                    hashCode = hashCode * 59 + this.FallbackPaths.GetHashCode();
                if (this.ConfigCollectionInheritancePropertyNames != null)
                    hashCode = hashCode * 59 + this.ConfigCollectionInheritancePropertyNames.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
