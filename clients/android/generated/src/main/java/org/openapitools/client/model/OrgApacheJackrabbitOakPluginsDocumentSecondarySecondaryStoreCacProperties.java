/**
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.client.model;

import org.openapitools.client.model.ConfigNodePropertyArray;
import org.openapitools.client.model.ConfigNodePropertyBoolean;
import org.openapitools.client.model.ConfigNodePropertyInteger;
import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

@ApiModel(description = "")
public class OrgApacheJackrabbitOakPluginsDocumentSecondarySecondaryStoreCacProperties {
  
  @SerializedName("includedPaths")
  private ConfigNodePropertyArray includedPaths = null;
  @SerializedName("enableAsyncObserver")
  private ConfigNodePropertyBoolean enableAsyncObserver = null;
  @SerializedName("observerQueueSize")
  private ConfigNodePropertyInteger observerQueueSize = null;

  /**
   **/
  @ApiModelProperty(value = "")
  public ConfigNodePropertyArray getIncludedPaths() {
    return includedPaths;
  }
  public void setIncludedPaths(ConfigNodePropertyArray includedPaths) {
    this.includedPaths = includedPaths;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public ConfigNodePropertyBoolean getEnableAsyncObserver() {
    return enableAsyncObserver;
  }
  public void setEnableAsyncObserver(ConfigNodePropertyBoolean enableAsyncObserver) {
    this.enableAsyncObserver = enableAsyncObserver;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public ConfigNodePropertyInteger getObserverQueueSize() {
    return observerQueueSize;
  }
  public void setObserverQueueSize(ConfigNodePropertyInteger observerQueueSize) {
    this.observerQueueSize = observerQueueSize;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    OrgApacheJackrabbitOakPluginsDocumentSecondarySecondaryStoreCacProperties orgApacheJackrabbitOakPluginsDocumentSecondarySecondaryStoreCacProperties = (OrgApacheJackrabbitOakPluginsDocumentSecondarySecondaryStoreCacProperties) o;
    return (this.includedPaths == null ? orgApacheJackrabbitOakPluginsDocumentSecondarySecondaryStoreCacProperties.includedPaths == null : this.includedPaths.equals(orgApacheJackrabbitOakPluginsDocumentSecondarySecondaryStoreCacProperties.includedPaths)) &&
        (this.enableAsyncObserver == null ? orgApacheJackrabbitOakPluginsDocumentSecondarySecondaryStoreCacProperties.enableAsyncObserver == null : this.enableAsyncObserver.equals(orgApacheJackrabbitOakPluginsDocumentSecondarySecondaryStoreCacProperties.enableAsyncObserver)) &&
        (this.observerQueueSize == null ? orgApacheJackrabbitOakPluginsDocumentSecondarySecondaryStoreCacProperties.observerQueueSize == null : this.observerQueueSize.equals(orgApacheJackrabbitOakPluginsDocumentSecondarySecondaryStoreCacProperties.observerQueueSize));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.includedPaths == null ? 0: this.includedPaths.hashCode());
    result = 31 * result + (this.enableAsyncObserver == null ? 0: this.enableAsyncObserver.hashCode());
    result = 31 * result + (this.observerQueueSize == null ? 0: this.observerQueueSize.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class OrgApacheJackrabbitOakPluginsDocumentSecondarySecondaryStoreCacProperties {\n");
    
    sb.append("  includedPaths: ").append(includedPaths).append("\n");
    sb.append("  enableAsyncObserver: ").append(enableAsyncObserver).append("\n");
    sb.append("  observerQueueSize: ").append(observerQueueSize).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
