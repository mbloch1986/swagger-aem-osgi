/**
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 3.2.1-SNAPSHOT.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */



#include "OrgApacheSlingScriptingJspJspScriptEngineFactoryProperties.h"

#include <string>
#include <sstream>
#include <boost/property_tree/ptree.hpp>
#include <boost/property_tree/json_parser.hpp>

using boost::property_tree::ptree;
using boost::property_tree::read_json;
using boost::property_tree::write_json;

namespace org {
namespace openapitools {
namespace server {
namespace model {

OrgApacheSlingScriptingJspJspScriptEngineFactoryProperties::OrgApacheSlingScriptingJspJspScriptEngineFactoryProperties()
{
    
}

OrgApacheSlingScriptingJspJspScriptEngineFactoryProperties::~OrgApacheSlingScriptingJspJspScriptEngineFactoryProperties()
{
}

std::string OrgApacheSlingScriptingJspJspScriptEngineFactoryProperties::toJsonString()
{
	std::stringstream ss;
	ptree pt;
	write_json(ss, pt, false);
	return ss.str();
}

void OrgApacheSlingScriptingJspJspScriptEngineFactoryProperties::fromJsonString(std::string const& jsonString)
{
	std::stringstream ss(jsonString);
	ptree pt;
	read_json(ss,pt);
}

std::shared_ptr<ConfigNodePropertyString> OrgApacheSlingScriptingJspJspScriptEngineFactoryProperties::getJasperCompilerTargetVM() const
{
    return m_Jasper_compilerTargetVM;
}
void OrgApacheSlingScriptingJspJspScriptEngineFactoryProperties::setJasperCompilerTargetVM(std::shared_ptr<ConfigNodePropertyString> value)
{
    m_Jasper_compilerTargetVM = value;
}
std::shared_ptr<ConfigNodePropertyString> OrgApacheSlingScriptingJspJspScriptEngineFactoryProperties::getJasperCompilerSourceVM() const
{
    return m_Jasper_compilerSourceVM;
}
void OrgApacheSlingScriptingJspJspScriptEngineFactoryProperties::setJasperCompilerSourceVM(std::shared_ptr<ConfigNodePropertyString> value)
{
    m_Jasper_compilerSourceVM = value;
}
std::shared_ptr<ConfigNodePropertyBoolean> OrgApacheSlingScriptingJspJspScriptEngineFactoryProperties::getJasperClassdebuginfo() const
{
    return m_Jasper_classdebuginfo;
}
void OrgApacheSlingScriptingJspJspScriptEngineFactoryProperties::setJasperClassdebuginfo(std::shared_ptr<ConfigNodePropertyBoolean> value)
{
    m_Jasper_classdebuginfo = value;
}
std::shared_ptr<ConfigNodePropertyBoolean> OrgApacheSlingScriptingJspJspScriptEngineFactoryProperties::getJasperEnablePooling() const
{
    return m_Jasper_enablePooling;
}
void OrgApacheSlingScriptingJspJspScriptEngineFactoryProperties::setJasperEnablePooling(std::shared_ptr<ConfigNodePropertyBoolean> value)
{
    m_Jasper_enablePooling = value;
}
std::shared_ptr<ConfigNodePropertyString> OrgApacheSlingScriptingJspJspScriptEngineFactoryProperties::getJasperIeClassId() const
{
    return m_Jasper_ieClassId;
}
void OrgApacheSlingScriptingJspJspScriptEngineFactoryProperties::setJasperIeClassId(std::shared_ptr<ConfigNodePropertyString> value)
{
    m_Jasper_ieClassId = value;
}
std::shared_ptr<ConfigNodePropertyBoolean> OrgApacheSlingScriptingJspJspScriptEngineFactoryProperties::getJasperGenStringAsCharArray() const
{
    return m_Jasper_genStringAsCharArray;
}
void OrgApacheSlingScriptingJspJspScriptEngineFactoryProperties::setJasperGenStringAsCharArray(std::shared_ptr<ConfigNodePropertyBoolean> value)
{
    m_Jasper_genStringAsCharArray = value;
}
std::shared_ptr<ConfigNodePropertyBoolean> OrgApacheSlingScriptingJspJspScriptEngineFactoryProperties::getJasperKeepgenerated() const
{
    return m_Jasper_keepgenerated;
}
void OrgApacheSlingScriptingJspJspScriptEngineFactoryProperties::setJasperKeepgenerated(std::shared_ptr<ConfigNodePropertyBoolean> value)
{
    m_Jasper_keepgenerated = value;
}
std::shared_ptr<ConfigNodePropertyBoolean> OrgApacheSlingScriptingJspJspScriptEngineFactoryProperties::getJasperMappedfile() const
{
    return m_Jasper_mappedfile;
}
void OrgApacheSlingScriptingJspJspScriptEngineFactoryProperties::setJasperMappedfile(std::shared_ptr<ConfigNodePropertyBoolean> value)
{
    m_Jasper_mappedfile = value;
}
std::shared_ptr<ConfigNodePropertyBoolean> OrgApacheSlingScriptingJspJspScriptEngineFactoryProperties::getJasperTrimSpaces() const
{
    return m_Jasper_trimSpaces;
}
void OrgApacheSlingScriptingJspJspScriptEngineFactoryProperties::setJasperTrimSpaces(std::shared_ptr<ConfigNodePropertyBoolean> value)
{
    m_Jasper_trimSpaces = value;
}
std::shared_ptr<ConfigNodePropertyBoolean> OrgApacheSlingScriptingJspJspScriptEngineFactoryProperties::getJasperDisplaySourceFragments() const
{
    return m_Jasper_displaySourceFragments;
}
void OrgApacheSlingScriptingJspJspScriptEngineFactoryProperties::setJasperDisplaySourceFragments(std::shared_ptr<ConfigNodePropertyBoolean> value)
{
    m_Jasper_displaySourceFragments = value;
}
std::shared_ptr<ConfigNodePropertyBoolean> OrgApacheSlingScriptingJspJspScriptEngineFactoryProperties::getDefaultIsSession() const
{
    return m_Default_is_session;
}
void OrgApacheSlingScriptingJspJspScriptEngineFactoryProperties::setDefaultIsSession(std::shared_ptr<ConfigNodePropertyBoolean> value)
{
    m_Default_is_session = value;
}

}
}
}
}

