-module(openapi_api).

-export([request_params/1]).
-export([request_param_info/2]).
-export([populate_request/3]).
-export([validate_response/4]).
%% exported to silence openapi complains
-export([get_value/3, validate_response_body/4]).

-type operation_id() :: atom().
-type request_param() :: atom().

-export_type([operation_id/0]).

-spec request_params(OperationID :: operation_id()) -> [Param :: request_param()].


request_params('AdaptiveFormAndInteractiveCommunicationWebChannelConfiguration') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'showPlaceholder',
        'maximumCacheEntries',
        'af.scripting.compatversion',
        'makeFileNameUnique',
        'generatingCompliantData'
    ];

request_params('AdaptiveFormAndInteractiveCommunicationWebChannelThemeConfigur') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'fontList'
    ];

request_params('AnalyticsComponentQueryCacheService') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'cq.analytics.component.query.cache.size'
    ];

request_params('ApacheSlingHealthCheckResultHTMLSerializer') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'styleString'
    ];

request_params('ComAdobeAemFormsndocumentsConfigAEMFormsManagerConfiguration') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'formsManagerConfig.includeOOTBTemplates',
        'formsManagerConfig.includeDeprecatedTemplates'
    ];

request_params('ComAdobeAemTransactionCoreImplTransactionRecorder') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'isTransactionRecordingEnabled'
    ];

request_params('ComAdobeAemUpgradePrechecksHcImplDeprecateIndexesHC') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'hc.name',
        'hc.tags',
        'hc.mbean.name'
    ];

request_params('ComAdobeAemUpgradePrechecksHcImplReplicationAgentsDisabledHC') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'hc.name',
        'hc.tags',
        'hc.mbean.name'
    ];

request_params('ComAdobeAemUpgradePrechecksMbeanImplPreUpgradeTasksMBeanImpl') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'pre-upgrade.maintenance.tasks',
        'pre-upgrade.hc.tags'
    ];

request_params('ComAdobeAemUpgradePrechecksTasksImplConsistencyCheckTaskImpl') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'root.path',
        'fix.inconsistencies'
    ];

request_params('ComAdobeCqAccountApiAccountManagementService') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'cq.accountmanager.token.validity.period',
        'cq.accountmanager.config.requestnewaccount.mail',
        'cq.accountmanager.config.requestnewpwd.mail'
    ];

request_params('ComAdobeCqAccountImplAccountManagementServlet') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'cq.accountmanager.config.informnewaccount.mail',
        'cq.accountmanager.config.informnewpwd.mail'
    ];

request_params('ComAdobeCqAddressImplLocationLocationListServlet') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'cq.address.location.default.maxResults'
    ];

request_params('ComAdobeCqAuditPurgeDam') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'auditlog.rule.name',
        'auditlog.rule.contentpath',
        'auditlog.rule.minimumage',
        'auditlog.rule.types'
    ];

request_params('ComAdobeCqAuditPurgePages') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'auditlog.rule.name',
        'auditlog.rule.contentpath',
        'auditlog.rule.minimumage',
        'auditlog.rule.types'
    ];

request_params('ComAdobeCqAuditPurgeReplication') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'auditlog.rule.name',
        'auditlog.rule.contentpath',
        'auditlog.rule.minimumage',
        'auditlog.rule.types'
    ];

request_params('ComAdobeCqCdnRewriterImplAWSCloudFrontRewriter') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'service.ranking',
        'keypair.id',
        'keypair.alias',
        'cdnrewriter.attributes',
        'cdn.rewriter.distribution.domain'
    ];

request_params('ComAdobeCqCdnRewriterImplCDNConfigServiceImpl') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'cdn.config.distribution.domain',
        'cdn.config.enable.rewriting',
        'cdn.config.path.prefixes',
        'cdn.config.cdnttl',
        'cdn.config.application.protocol'
    ];

request_params('ComAdobeCqCdnRewriterImplCDNRewriter') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'service.ranking',
        'cdnrewriter.attributes',
        'cdn.rewriter.distribution.domain'
    ];

request_params('ComAdobeCqCloudconfigCoreImplConfigurationReplicationEventHandle') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'flush.agents'
    ];

request_params('ComAdobeCqCommerceImplAssetDynamicImageHandler') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'cq.commerce.asset.handler.active',
        'cq.commerce.asset.handler.name'
    ];

request_params('ComAdobeCqCommerceImplAssetProductAssetHandlerProviderImpl') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'cq.commerce.asset.handler.fallback'
    ];

request_params('ComAdobeCqCommerceImplAssetStaticImageHandler') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'cq.commerce.asset.handler.active',
        'cq.commerce.asset.handler.name'
    ];

request_params('ComAdobeCqCommerceImplAssetVideoHandler') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'cq.commerce.asset.handler.active',
        'cq.commerce.asset.handler.name'
    ];

request_params('ComAdobeCqCommerceImplPromotionPromotionManagerImpl') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'cq.commerce.promotion.root'
    ];

request_params('ComAdobeCqCommercePimImplCataloggeneratorCatalogGeneratorImpl') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'cq.commerce.cataloggenerator.bucketsize',
        'cq.commerce.cataloggenerator.bucketname',
        'cq.commerce.cataloggenerator.excludedtemplateproperties'
    ];

request_params('ComAdobeCqCommercePimImplPageEventListener') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'cq.commerce.pageeventlistener.enabled'
    ];

request_params('ComAdobeCqCommercePimImplProductfeedProductFeedServiceImpl') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'Feed generator algorithm'
    ];

request_params('ComAdobeCqContentinsightImplReportingServicesSettingsProvider') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'reportingservices.url'
    ];

request_params('ComAdobeCqContentinsightImplServletsBrightEdgeProxyServlet') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'brightedge.url'
    ];

request_params('ComAdobeCqContentinsightImplServletsReportingServicesProxyServle') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'reportingservices.proxy.whitelist'
    ];

request_params('ComAdobeCqDamCfmImplComponentComponentConfigImpl') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'dam.cfm.component.resourceType',
        'dam.cfm.component.fileReferenceProp',
        'dam.cfm.component.elementsProp',
        'dam.cfm.component.variationProp'
    ];

request_params('ComAdobeCqDamCfmImplConfFeatureConfigImpl') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'dam.cfm.resourceTypes',
        'dam.cfm.referenceProperties'
    ];

request_params('ComAdobeCqDamCfmImplContentRewriterAssetProcessor') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'pipeline.type'
    ];

request_params('ComAdobeCqDamCfmImplContentRewriterParRangeFilter') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'pipeline.type'
    ];

request_params('ComAdobeCqDamCfmImplContentRewriterPayloadFilter') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'pipeline.type'
    ];

request_params('ComAdobeCqDamDmProcessImagePTiffManagerImpl') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'maxMemory'
    ];

request_params('ComAdobeCqDamIpsImplReplicationTriggerReplicateOnModifyWorker') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'dmreplicateonmodify.enabled',
        'dmreplicateonmodify.forcesyncdeletes'
    ];

request_params('ComAdobeCqDamMacSyncHelperImplMACSyncClientImpl') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'com.adobe.dam.mac.sync.client.so.timeout'
    ];

request_params('ComAdobeCqDamMacSyncImplDAMSyncServiceImpl') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'com.adobe.cq.dam.mac.sync.damsyncservice.registered_paths',
        'com.adobe.cq.dam.mac.sync.damsyncservice.sync.renditions',
        'com.adobe.cq.dam.mac.sync.damsyncservice.replicate.thread.wait.ms',
        'com.adobe.cq.dam.mac.sync.damsyncservice.platform'
    ];

request_params('ComAdobeCqDamProcessorNuiImplNuiAssetProcessor') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'nuiEnabled',
        'nuiServiceUrl',
        'nuiApiKey'
    ];

request_params('ComAdobeCqDamS7imagingImplIsImageServerComponent') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'TcpPort',
        'AllowRemoteAccess',
        'MaxRenderRgnPixels',
        'MaxMessageSize',
        'RandomAccessUrlTimeout',
        'WorkerThreads'
    ];

request_params('ComAdobeCqDamS7imagingImplPsPlatformServerServlet') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'cache.enable',
        'cache.rootPaths',
        'cache.maxSize',
        'cache.maxEntries'
    ];

request_params('ComAdobeCqDamWebdavImplIoAssetIOHandler') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'service.ranking',
        'pathPrefix',
        'createVersion'
    ];

request_params('ComAdobeCqDamWebdavImplIoDamWebdavVersionLinkingJob') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'cq.dam.webdav.version.linking.enable',
        'cq.dam.webdav.version.linking.scheduler.period',
        'cq.dam.webdav.version.linking.staging.timeout'
    ];

request_params('ComAdobeCqDamWebdavImplIoSpecialFilesHandler') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'com.day.cq.dam.core.impl.io.SpecialFilesHandler.filepatters'
    ];

request_params('ComAdobeCqDeserfwImplDeserializationFirewallImpl') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'firewall.deserialization.whitelist',
        'firewall.deserialization.blacklist',
        'firewall.deserialization.diagnostics'
    ];

request_params('ComAdobeCqDtmImplServiceDTMWebServiceImpl') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'connection.timeout',
        'socket.timeout'
    ];

request_params('ComAdobeCqDtmImplServletsDTMDeployHookServlet') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'dtm.staging.ip.whitelist',
        'dtm.production.ip.whitelist'
    ];

request_params('ComAdobeCqDtmReactorImplServiceWebServiceImpl') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'endpointUri',
        'connectionTimeout',
        'socketTimeout'
    ];

request_params('ComAdobeCqExperiencelogImplExperienceLogConfigServlet') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'enabled',
        'disabledForGroups'
    ];

request_params('ComAdobeCqHcContentPackagesHealthCheck') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'hc.name',
        'hc.tags',
        'hc.mbean.name',
        'package.names'
    ];

request_params('ComAdobeCqHistoryImplHistoryRequestFilter') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'history.requestFilter.excludedSelectors',
        'history.requestFilter.excludedExtensions'
    ];

request_params('ComAdobeCqHistoryImplHistoryServiceImpl') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'history.service.resourceTypes',
        'history.service.pathFilter'
    ];

request_params('ComAdobeCqInboxImplTypeproviderItemTypeProvider') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'inbox.impl.typeprovider.registrypaths',
        'inbox.impl.typeprovider.legacypaths',
        'inbox.impl.typeprovider.defaulturl.failureitem',
        'inbox.impl.typeprovider.defaulturl.workitem',
        'inbox.impl.typeprovider.defaulturl.task'
    ];

request_params('ComAdobeCqProjectsImplServletProjectImageServlet') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'image.quality',
        'image.supported.resolutions'
    ];

request_params('ComAdobeCqProjectsPurgeScheduler') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'scheduledpurge.name',
        'scheduledpurge.purgeActive',
        'scheduledpurge.templates',
        'scheduledpurge.purgeGroups',
        'scheduledpurge.purgeAssets',
        'scheduledpurge.terminateRunningWorkflows',
        'scheduledpurge.daysold',
        'scheduledpurge.saveThreshold'
    ];

request_params('ComAdobeCqScheduledExporterImplScheduledExporterImpl') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'include.paths',
        'exporter.user'
    ];

request_params('ComAdobeCqScreensAnalyticsImplScreensAnalyticsServiceImpl') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'com.adobe.cq.screens.analytics.impl.url',
        'com.adobe.cq.screens.analytics.impl.apikey',
        'com.adobe.cq.screens.analytics.impl.project',
        'com.adobe.cq.screens.analytics.impl.environment',
        'com.adobe.cq.screens.analytics.impl.sendFrequency'
    ];

request_params('ComAdobeCqScreensDeviceImplDeviceService') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'com.adobe.aem.screens.player.pingfrequency',
        'com.adobe.aem.screens.device.pasword.specialchars',
        'com.adobe.aem.screens.device.pasword.minlowercasechars',
        'com.adobe.aem.screens.device.pasword.minuppercasechars',
        'com.adobe.aem.screens.device.pasword.minnumberchars',
        'com.adobe.aem.screens.device.pasword.minspecialchars',
        'com.adobe.aem.screens.device.pasword.minlength'
    ];

request_params('ComAdobeCqScreensDeviceRegistrationImplRegistrationServiceImpl') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'deviceRegistrationTimeout'
    ];

request_params('ComAdobeCqScreensImplHandlerChannelsUpdateHandler') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'cq.pagesupdatehandler.imageresourcetypes',
        'cq.pagesupdatehandler.productresourcetypes',
        'cq.pagesupdatehandler.videoresourcetypes',
        'cq.pagesupdatehandler.dynamicsequenceresourcetypes',
        'cq.pagesupdatehandler.previewmodepaths'
    ];

request_params('ComAdobeCqScreensImplJobsDistributedDevicesStatiUpdateJob') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'scheduler.expression'
    ];

request_params('ComAdobeCqScreensImplRemoteImplDistributedHttpClientImpl') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'com.adobe.aem.screens.impl.remote.request_timeout'
    ];

request_params('ComAdobeCqScreensImplScreensChannelPostProcessor') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'screens.channels.properties.to.remove'
    ];

request_params('ComAdobeCqScreensMonitoringImplScreensMonitoringServiceImpl') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'com.adobe.cq.screens.monitoring.impl.ScreensMonitoringServiceImpl.projectPath',
        'com.adobe.cq.screens.monitoring.impl.ScreensMonitoringServiceImpl.scheduleFrequency',
        'com.adobe.cq.screens.monitoring.impl.ScreensMonitoringServiceImpl.pingTimeout',
        'com.adobe.cq.screens.monitoring.impl.ScreensMonitoringServiceImpl.recipients',
        'com.adobe.cq.screens.monitoring.impl.ScreensMonitoringServiceImpl.smtpserver',
        'com.adobe.cq.screens.monitoring.impl.ScreensMonitoringServiceImpl.smtpport',
        'com.adobe.cq.screens.monitoring.impl.ScreensMonitoringServiceImpl.usetls',
        'com.adobe.cq.screens.monitoring.impl.ScreensMonitoringServiceImpl.username',
        'com.adobe.cq.screens.monitoring.impl.ScreensMonitoringServiceImpl.password'
    ];

request_params('ComAdobeCqScreensMqActivemqImplArtemisJMSProvider') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'service.ranking',
        'global.size',
        'max.disk.usage',
        'persistence.enabled',
        'thread.pool.max.size',
        'scheduled.thread.pool.max.size',
        'graceful.shutdown.timeout',
        'queues',
        'topics',
        'addresses.max.delivery.attempts',
        'addresses.expiry.delay',
        'addresses.address.full.message.policy',
        'addresses.max.size.bytes',
        'addresses.page.size.bytes',
        'addresses.page.cache.max.size',
        'cluster.user',
        'cluster.password',
        'cluster.call.timeout',
        'cluster.call.failover.timeout',
        'cluster.client.failure.check.period',
        'cluster.notification.attempts',
        'cluster.notification.interval',
        'id.cache.size',
        'cluster.confirmation.window.size',
        'cluster.connection.ttl',
        'cluster.duplicate.detection',
        'cluster.initial.connect.attempts',
        'cluster.max.retry.interval',
        'cluster.min.large.message.size',
        'cluster.producer.window.size',
        'cluster.reconnect.attempts',
        'cluster.retry.interval',
        'cluster.retry.interval.multiplier'
    ];

request_params('ComAdobeCqScreensOfflinecontentImplBulkOfflineUpdateServiceImpl') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'com.adobe.cq.screens.offlinecontent.impl.BulkOfflineUpdateServiceImpl.projectPath',
        'com.adobe.cq.screens.offlinecontent.impl.BulkOfflineUpdateServiceImpl.scheduleFrequency'
    ];

request_params('ComAdobeCqScreensOfflinecontentImplOfflineContentServiceImpl') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'disableSmartSync'
    ];

request_params('ComAdobeCqScreensSegmentationImplSegmentationFeatureFlag') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'enableDataTriggeredContent'
    ];

request_params('ComAdobeCqSecurityHcBundlesImplHtmlLibraryManagerConfigHealthCh') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'hc.tags'
    ];

request_params('ComAdobeCqSecurityHcBundlesImplWcmFilterHealthCheck') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'hc.tags'
    ];

request_params('ComAdobeCqSecurityHcDispatcherImplDispatcherAccessHealthCheck') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'hc.tags',
        'dispatcher.address',
        'dispatcher.filter.allowed',
        'dispatcher.filter.blocked'
    ];

request_params('ComAdobeCqSecurityHcPackagesImplExampleContentHealthCheck') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'hc.tags'
    ];

request_params('ComAdobeCqSecurityHcWebserverImplClickjackingHealthCheck') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'hc.tags',
        'webserver.address'
    ];

request_params('ComAdobeCqSocialAccountverificationImplAccountManagementConfigIm') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'enable',
        'ttl1',
        'ttl2'
    ];

request_params('ComAdobeCqSocialActivitystreamsClientImplSocialActivityComponen') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'priority'
    ];

request_params('ComAdobeCqSocialActivitystreamsClientImplSocialActivityStreamCo') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'priority'
    ];

request_params('ComAdobeCqSocialActivitystreamsListenerImplEventListenerHandler') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'event.topics',
        'event.filter'
    ];

request_params('ComAdobeCqSocialActivitystreamsListenerImplModerationEventExten') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'accepted',
        'ranked'
    ];

request_params('ComAdobeCqSocialActivitystreamsListenerImplRatingEventActivityS') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'ranking',
        'enable'
    ];

request_params('ComAdobeCqSocialActivitystreamsListenerImplResourceActivityStre') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'streamPath',
        'streamName'
    ];

request_params('ComAdobeCqSocialCalendarClientEndpointsImplCalendarOperationsI') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'MaxRetry',
        'fieldWhitelist',
        'attachmentTypeBlacklist'
    ];

request_params('ComAdobeCqSocialCalendarClientOperationextensionsEventAttachmen') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'attachmentTypeBlacklist',
        'extension.order'
    ];

request_params('ComAdobeCqSocialCalendarServletsTimeZoneServlet') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'timezones.expirytime'
    ];

request_params('ComAdobeCqSocialCommonsCommentsEndpointsImplCommentDeleteEvent') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'ranking'
    ];

request_params('ComAdobeCqSocialCommonsCommentsEndpointsImplCommentOperationSe') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'fieldWhitelist',
        'attachmentTypeBlacklist'
    ];

request_params('ComAdobeCqSocialCommonsCommentsEndpointsImplTranslationOperati') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'fieldWhitelist',
        'attachmentTypeBlacklist'
    ];

request_params('ComAdobeCqSocialCommonsCommentsListingImplSearchCommentSocialC') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'numUserLimit'
    ];

request_params('ComAdobeCqSocialCommonsCommentsSchedulerImplSearchScheduledPos') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'enableScheduledPostsSearch',
        'numberOfMinutes',
        'maxSearchLimit'
    ];

request_params('ComAdobeCqSocialCommonsCorsCORSAuthenticationFilter') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'cors.enabling'
    ];

request_params('ComAdobeCqSocialCommonsEmailreplyImplAndroidEmailClientProvider') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'priorityOrder',
        'replyEmailPatterns'
    ];

request_params('ComAdobeCqSocialCommonsEmailreplyImplCommentEmailBuilderImpl') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'context.path'
    ];

request_params('ComAdobeCqSocialCommonsEmailreplyImplCommentEmailEventListener') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'event.topics'
    ];

request_params('ComAdobeCqSocialCommonsEmailreplyImplCustomEmailClientProvider') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'priorityOrder',
        'replyEmailPatterns'
    ];

request_params('ComAdobeCqSocialCommonsEmailreplyImplEmailQuotedTextPatternsImp') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'pattern.time',
        'pattern.newline',
        'pattern.dayOfMonth',
        'pattern.month',
        'pattern.year',
        'pattern.date',
        'pattern.dateTime',
        'pattern.email'
    ];

request_params('ComAdobeCqSocialCommonsEmailreplyImplEmailReplyConfigurationImp') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'email.name',
        'email.createPostFromReply',
        'email.addCommentIdTo',
        'email.subjectMaximumLength',
        'email.replyToAddress',
        'email.replyToDelimiter',
        'email.trackerIdPrefixInSubject',
        'email.trackerIdPrefixInBody',
        'email.asHTML',
        'email.defaultUserName',
        'email.templates.rootPath'
    ];

request_params('ComAdobeCqSocialCommonsEmailreplyImplEmailReplyImporter') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'connectProtocol'
    ];

request_params('ComAdobeCqSocialCommonsEmailreplyImplGmailEmailClientProvider') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'priorityOrder',
        'replyEmailPatterns'
    ];

request_params('ComAdobeCqSocialCommonsEmailreplyImplIOSEmailClientProvider') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'priorityOrder',
        'replyEmailPatterns'
    ];

request_params('ComAdobeCqSocialCommonsEmailreplyImplMacmailEmailClientProvider') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'priorityOrder',
        'replyEmailPatterns'
    ];

request_params('ComAdobeCqSocialCommonsEmailreplyImplOutLookEmailClientProvider') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'priorityOrder',
        'replyEmailPatterns'
    ];

request_params('ComAdobeCqSocialCommonsEmailreplyImplUnknownEmailClientProvider') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'replyEmailPatterns',
        'priorityOrder'
    ];

request_params('ComAdobeCqSocialCommonsEmailreplyImplYahooEmailClientProvider') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'priorityOrder',
        'replyEmailPatterns'
    ];

request_params('ComAdobeCqSocialCommonsMaintainanceImplDeleteTempUGCImageUpload') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'numberOfDays',
        'ageOfFile'
    ];

request_params('ComAdobeCqSocialCommonsUgclimiterImplUGCLimiterServiceImpl') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'event.topics',
        'event.filter',
        'verbs'
    ];

request_params('ComAdobeCqSocialCommonsUgclimitsconfigImplCommunityUserUGCLimit') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'enable',
        'UGCLimit',
        'ugcLimitDuration',
        'domains',
        'toList'
    ];

request_params('ComAdobeCqSocialConnectOauthImplFacebookProviderImpl') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'oauth.provider.id',
        'oauth.cloud.config.root',
        'provider.config.root',
        'provider.config.create.tags.enabled',
        'provider.config.user.folder',
        'provider.config.facebook.fetch.fields',
        'provider.config.facebook.fields',
        'provider.config.refresh.userdata.enabled'
    ];

request_params('ComAdobeCqSocialConnectOauthImplSocialOAuthAuthenticationHandle') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'path',
        'service.ranking'
    ];

request_params('ComAdobeCqSocialConnectOauthImplSocialOAuthUserProfileMapper') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'facebook',
        'twitter',
        'provider.config.user.folder'
    ];

request_params('ComAdobeCqSocialConnectOauthImplTwitterProviderImpl') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'oauth.provider.id',
        'oauth.cloud.config.root',
        'provider.config.root',
        'provider.config.user.folder',
        'provider.config.twitter.enable.params',
        'provider.config.twitter.params',
        'provider.config.refresh.userdata.enabled'
    ];

request_params('ComAdobeCqSocialContentFragmentsServicesImplCommunitiesFragmen') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'cq.social.content.fragments.services.enabled',
        'cq.social.content.fragments.services.waitTimeSeconds'
    ];

request_params('ComAdobeCqSocialDatastoreAsImplASResourceProviderFactory') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'version.id',
        'cache.on',
        'concurrency.level',
        'cache.start.size',
        'cache.ttl',
        'cache.size',
        'time.limit'
    ];

request_params('ComAdobeCqSocialDatastoreOpImplSocialMSResourceProviderFactory') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'solr.zk.timeout',
        'solr.commit',
        'cache.on',
        'concurrency.level',
        'cache.start.size',
        'cache.ttl',
        'cache.size'
    ];

request_params('ComAdobeCqSocialDatastoreRdbImplSocialRDBResourceProviderFactor') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'solr.zk.timeout',
        'solr.commit',
        'cache.on',
        'concurrency.level',
        'cache.start.size',
        'cache.ttl',
        'cache.size'
    ];

request_params('ComAdobeCqSocialEnablementAdaptorsEnablementLearningPathAdaptorF') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'isMemberCheck'
    ];

request_params('ComAdobeCqSocialEnablementAdaptorsEnablementResourceAdaptorFacto') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'isMemberCheck'
    ];

request_params('ComAdobeCqSocialEnablementLearningpathEndpointsImplEnablementL') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'fieldWhitelist'
    ];

request_params('ComAdobeCqSocialEnablementResourceEndpointsImplEnablementResou') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'fieldWhitelist'
    ];

request_params('ComAdobeCqSocialEnablementServicesImplAuthorMarkerImpl') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'service.ranking'
    ];

request_params('ComAdobeCqSocialFilelibraryClientEndpointsFilelibraryDownloadGe') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'sling.servlet.selectors',
        'sling.servlet.extensions'
    ];

request_params('ComAdobeCqSocialFilelibraryClientEndpointsImplFileLibraryOpera') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'fieldWhitelist',
        'attachmentTypeBlacklist'
    ];

request_params('ComAdobeCqSocialForumClientEndpointsImplForumOperationsService') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'fieldWhitelist',
        'attachmentTypeBlacklist'
    ];

request_params('ComAdobeCqSocialForumDispatcherImplFlushOperations') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'extension.order',
        'flush.forumontopic'
    ];

request_params('ComAdobeCqSocialGroupClientImplCommunityGroupCollectionComponen') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'group.listing.pagination.enable',
        'group.listing.lazyloading.enable',
        'page.size',
        'priority'
    ];

request_params('ComAdobeCqSocialGroupImplGroupServiceImpl') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'maxWaitTime',
        'minWaitBetweenRetries'
    ];

request_params('ComAdobeCqSocialHandlebarsGuavaTemplateCacheImpl') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'parameter.guava.cache.enabled',
        'parameter.guava.cache.params',
        'parameter.guava.cache.reload',
        'service.ranking'
    ];

request_params('ComAdobeCqSocialIdeationClientEndpointsImplIdeationOperationsS') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'fieldWhitelist',
        'attachmentTypeBlacklist'
    ];

request_params('ComAdobeCqSocialJournalClientEndpointsImplJournalOperationsSer') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'fieldWhitelist',
        'attachmentTypeBlacklist'
    ];

request_params('ComAdobeCqSocialMembersEndpointsImplCommunityMemberGroupProfile') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'fieldWhitelist'
    ];

request_params('ComAdobeCqSocialMembersEndpointsImplCommunityMemberUserProfileO') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'fieldWhitelist'
    ];

request_params('ComAdobeCqSocialMembersImplCommunityMemberGroupProfileComponentF') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'everyoneLimit',
        'priority'
    ];

request_params('ComAdobeCqSocialMessagingClientEndpointsImplMessagingOperation') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'message.properties',
        'messageBoxSizeLimit',
        'messageCountLimit',
        'notifyFailure',
        'failureMessageFrom',
        'failureTemplatePath',
        'maxRetries',
        'minWaitBetweenRetries',
        'countUpdatePoolSize',
        'inbox.path',
        'sentitems.path',
        'supportAttachments',
        'supportGroupMessaging',
        'maxTotalRecipients',
        'batchSize',
        'maxTotalAttachmentSize',
        'attachmentTypeBlacklist',
        'allowedAttachmentTypes',
        'serviceSelector',
        'fieldWhitelist'
    ];

request_params('ComAdobeCqSocialModerationDashboardApiFilterGroupSocialComponen') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'resourceType.filters',
        'priority'
    ];

request_params('ComAdobeCqSocialModerationDashboardApiModerationDashboardSocial') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'priority'
    ];

request_params('ComAdobeCqSocialModerationDashboardApiUserDetailsSocialComponen') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'priority'
    ];

request_params('ComAdobeCqSocialModerationDashboardInternalImplFilterGroupSoci') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'resourceType.filters',
        'priority'
    ];

request_params('ComAdobeCqSocialNotificationsImplMentionsRouter') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'event.topics',
        'event.filter'
    ];

request_params('ComAdobeCqSocialNotificationsImplNotificationManagerImpl') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'max.unread.notification.count'
    ];

request_params('ComAdobeCqSocialNotificationsImplNotificationsRouter') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'event.topics',
        'event.filter'
    ];

request_params('ComAdobeCqSocialQnaClientEndpointsImplQnaForumOperationsServic') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'fieldWhitelist',
        'attachmentTypeBlacklist'
    ];

request_params('ComAdobeCqSocialReportingAnalyticsServicesImplAnalyticsReportI') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'cq.social.reporting.analytics.polling.importer.interval',
        'cq.social.reporting.analytics.polling.importer.pageSize'
    ];

request_params('ComAdobeCqSocialReportingAnalyticsServicesImplAnalyticsReportM') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'report.fetch.delay'
    ];

request_params('ComAdobeCqSocialReportingAnalyticsServicesImplSiteTrendReportS') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'cq.social.console.analytics.sites.mapping',
        'priority'
    ];

request_params('ComAdobeCqSocialReviewClientEndpointsImplReviewOperationsServi') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'fieldWhitelist',
        'attachmentTypeBlacklist'
    ];

request_params('ComAdobeCqSocialScfCoreOperationsImplSocialOperationsServlet') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'sling.servlet.selectors',
        'sling.servlet.extensions'
    ];

request_params('ComAdobeCqSocialScfEndpointsImplDefaultSocialGetServlet') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'sling.servlet.selectors',
        'sling.servlet.extensions'
    ];

request_params('ComAdobeCqSocialScoringImplScoringEventListener') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'event.topics',
        'event.filter'
    ];

request_params('ComAdobeCqSocialServiceusersInternalImplServiceUserWrapperImpl') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'enableFallback'
    ];

request_params('ComAdobeCqSocialSiteEndpointsImplSiteOperationService') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'fieldWhitelist',
        'sitePathFilters',
        'sitePackageGroup'
    ];

request_params('ComAdobeCqSocialSiteImplAnalyticsComponentConfigurationServiceIm') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'cq.social.console.analytics.components'
    ];

request_params('ComAdobeCqSocialSiteImplSiteConfiguratorImpl') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'componentsUsingTags'
    ];

request_params('ComAdobeCqSocialSrpImplSocialSolrConnector') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'srp.type'
    ];

request_params('ComAdobeCqSocialSyncImplDiffChangesObserver') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'enabled',
        'agentName',
        'diffPath',
        'propertyNames'
    ];

request_params('ComAdobeCqSocialSyncImplGroupSyncListenerImpl') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'nodetypes',
        'ignorableprops',
        'ignorablenodes',
        'enabled',
        'distfolders'
    ];

request_params('ComAdobeCqSocialSyncImplPublisherSyncServiceImpl') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'activeRunModes'
    ];

request_params('ComAdobeCqSocialSyncImplUserSyncListenerImpl') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'nodetypes',
        'ignorableprops',
        'ignorablenodes',
        'enabled',
        'distfolders'
    ];

request_params('ComAdobeCqSocialTranslationImplTranslationServiceConfigManager') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'translate.language',
        'translate.display',
        'translate.attribution',
        'translate.caching',
        'translate.smart.rendering',
        'translate.caching.duration',
        'translate.session.save.interval',
        'translate.session.save.batchLimit'
    ];

request_params('ComAdobeCqSocialTranslationImplUGCLanguageDetector') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'event.topics',
        'event.filter',
        'translate.listener.type',
        'translate.property.list',
        'poolSize',
        'maxPoolSize',
        'queueSize',
        'keepAliveTime'
    ];

request_params('ComAdobeCqSocialUgcbaseDispatcherImplFlushServiceImpl') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'threadPoolSize',
        'delayTime',
        'workerSleepTime'
    ];

request_params('ComAdobeCqSocialUgcbaseImplAysncReverseReplicatorImpl') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'poolSize',
        'maxPoolSize',
        'queueSize',
        'keepAliveTime'
    ];

request_params('ComAdobeCqSocialUgcbaseImplPublisherConfigurationImpl') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'isPrimaryPublisher'
    ];

request_params('ComAdobeCqSocialUgcbaseImplSocialUtilsImpl') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'legacyCloudUGCPathMapping'
    ];

request_params('ComAdobeCqSocialUgcbaseModerationImplAutoModerationImpl') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'automoderation.sequence',
        'automoderation.onfailurestop'
    ];

request_params('ComAdobeCqSocialUgcbaseModerationImplSentimentProcess') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'watchwords.positive',
        'watchwords.negative',
        'watchwords.path',
        'sentiment.path'
    ];

request_params('ComAdobeCqSocialUgcbaseSecurityImplDefaultAttachmentTypeBlackli') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'default.attachment.type.blacklist',
        'baseline.attachment.type.blacklist'
    ];

request_params('ComAdobeCqSocialUgcbaseSecurityImplSaferSlingPostValidatorImpl') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'parameter.whitelist',
        'parameter.whitelist.prefixes',
        'binary.parameter.whitelist',
        'modifier.whitelist',
        'operation.whitelist',
        'operation.whitelist.prefixes',
        'typehint.whitelist',
        'resourcetype.whitelist'
    ];

request_params('ComAdobeCqSocialUserEndpointsImplUsersGroupFromPublishServlet') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'sling.servlet.extensions',
        'sling.servlet.paths',
        'sling.servlet.methods'
    ];

request_params('ComAdobeCqSocialUserImplTransportHttpToPublisher') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'enable',
        'agent.configuration',
        'context.path',
        'disabled.cipher.suites',
        'enabled.cipher.suites'
    ];

request_params('ComAdobeCqUiWcmCommonsInternalServletsRteRTEFilterServletFact') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'resource.types'
    ];

request_params('ComAdobeCqUpgradesCleanupImplUpgradeContentCleanup') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'delete.path.regexps',
        'delete.sql2.query'
    ];

request_params('ComAdobeCqUpgradesCleanupImplUpgradeInstallFolderCleanup') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'delete.name.regexps'
    ];

request_params('ComAdobeCqWcmJobsAsyncImplAsyncDeleteConfigProviderService') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'threshold',
        'jobTopicName',
        'emailEnabled'
    ];

request_params('ComAdobeCqWcmJobsAsyncImplAsyncJobCleanUpTask') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'scheduler.expression',
        'job.purge.threshold',
        'job.purge.max.jobs'
    ];

request_params('ComAdobeCqWcmJobsAsyncImplAsyncMoveConfigProviderService') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'threshold',
        'jobTopicName',
        'emailEnabled'
    ];

request_params('ComAdobeCqWcmJobsAsyncImplAsyncPageMoveConfigProviderService') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'threshold',
        'jobTopicName',
        'emailEnabled'
    ];

request_params('ComAdobeCqWcmLaunchesImplLaunchesEventHandler') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'event.filter',
        'launches.eventhandler.threadpool.maxsize',
        'launches.eventhandler.threadpool.priority',
        'launches.eventhandler.updatelastmodification'
    ];

request_params('ComAdobeCqWcmMobileQrcodeServletQRCodeImageGenerator') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'cq.wcm.qrcode.servlet.whitelist'
    ];

request_params('ComAdobeCqWcmStyleInternalComponentStyleInfoCacheImpl') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'size'
    ];

request_params('ComAdobeCqWcmTranslationImplTranslationPlatformConfigurationImpl') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'syncTranslationState.schedulingFormat',
        'schedulingRepeatTranslation.schedulingFormat',
        'syncTranslationState.lockTimeoutInMinutes',
        'export.format'
    ];

request_params('ComAdobeFdFpConfigFormsPortalDraftsandSubmissionConfigService') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'portal.outboxes',
        'draft.data.service',
        'draft.metadata.service',
        'submit.data.service',
        'submit.metadata.service',
        'pendingSign.data.service',
        'pendingSign.metadata.service'
    ];

request_params('ComAdobeFdFpConfigFormsPortalSchedulerService') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'formportal.interval'
    ];

request_params('ComAdobeFormsCommonServiceImplDefaultDataProvider') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'alloweddataFileLocations'
    ];

request_params('ComAdobeFormsCommonServiceImplFormsCommonConfigurationServiceImp') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'tempStorageConfig'
    ];

request_params('ComAdobeFormsCommonServletTempCleanUpTask') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'scheduler.expression',
        'Duration for Temporary Storage',
        'Duration for Anonymous Storage'
    ];

request_params('ComAdobeGraniteAcpPlatformPlatformServlet') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'query.limit',
        'file.type.extension.map'
    ];

request_params('ComAdobeGraniteActivitystreamsImplActivityManagerImpl') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'aggregate.relationships',
        'aggregate.descend.virtual'
    ];

request_params('ComAdobeGraniteAnalyzerBaseSystemStatusServlet') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'disabled'
    ];

request_params('ComAdobeGraniteAnalyzerScriptsCompileAllScriptsCompilerServlet') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'disabled'
    ];

request_params('ComAdobeGraniteApicontrollerFilterResolverHookFactory') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'com.adobe.cq.cdn.cdn-rewriter',
        'com.adobe.cq.cloud-config.components',
        'com.adobe.cq.cloud-config.core',
        'com.adobe.cq.cloud-config.ui',
        'com.adobe.cq.com.adobe.cq.editor',
        'com.adobe.cq.com.adobe.cq.projects.core',
        'com.adobe.cq.com.adobe.cq.projects.wcm.core',
        'com.adobe.cq.com.adobe.cq.ui.commons',
        'com.adobe.cq.com.adobe.cq.wcm.style',
        'com.adobe.cq.cq-activitymap-integration',
        'com.adobe.cq.cq-contexthub-commons',
        'com.adobe.cq.cq-dtm',
        'com.adobe.cq.cq-healthcheck',
        'com.adobe.cq.cq-multisite-targeting',
        'com.adobe.cq.cq-pre-upgrade-cleanup',
        'com.adobe.cq.cq-product-info-provider',
        'com.adobe.cq.cq-rest-sites',
        'com.adobe.cq.cq-security-hc',
        'com.adobe.cq.dam.cq-dam-svg-handler',
        'com.adobe.cq.dam.cq-scene7-imaging',
        'com.adobe.cq.dtm-reactor.core',
        'com.adobe.cq.dtm-reactor.ui',
        'com.adobe.cq.exp-jspel-resolver',
        'com.adobe.cq.inbox.cq-inbox',
        'com.adobe.cq.json-schema-parser',
        'com.adobe.cq.media.cq-media-publishing-dps-fp-core',
        'com.adobe.cq.mobile.cq-mobile-caas',
        'com.adobe.cq.mobile.cq-mobile-index-builder',
        'com.adobe.cq.mobile.cq-mobile-phonegap-build',
        'com.adobe.cq.myspell',
        'com.adobe.cq.sample.we.retail.core',
        'com.adobe.cq.screens.com.adobe.cq.screens.dcc',
        'com.adobe.cq.screens.com.adobe.cq.screens.mq.core',
        'com.adobe.cq.social.cq-social-as-provider',
        'com.adobe.cq.social.cq-social-badging-basic-impl',
        'com.adobe.cq.social.cq-social-badging-impl',
        'com.adobe.cq.social.cq-social-calendar-impl',
        'com.adobe.cq.social.cq-social-content-fragments-impl',
        'com.adobe.cq.social.cq-social-enablement-impl',
        'com.adobe.cq.social.cq-social-graph-impl',
        'com.adobe.cq.social.cq-social-ideation-impl',
        'com.adobe.cq.social.cq-social-jcr-provider',
        'com.adobe.cq.social.cq-social-members-impl',
        'com.adobe.cq.social.cq-social-ms-provider',
        'com.adobe.cq.social.cq-social-notifications-channels-web',
        'com.adobe.cq.social.cq-social-notifications-impl',
        'com.adobe.cq.social.cq-social-rdb-provider',
        'com.adobe.cq.social.cq-social-scf-impl',
        'com.adobe.cq.social.cq-social-scoring-basic-impl',
        'com.adobe.cq.social.cq-social-scoring-impl',
        'com.adobe.cq.social.cq-social-serviceusers-impl',
        'com.adobe.cq.social.cq-social-srp-impl',
        'com.adobe.cq.social.cq-social-ugcbase-impl',
        'com.adobe.dam.cq-dam-cfm-impl',
        'com.adobe.forms.foundation-forms-foundation-base',
        'com.adobe.granite.apicontroller',
        'com.adobe.granite.asset.core',
        'com.adobe.granite.auth.sso',
        'com.adobe.granite.bundles.hc.impl',
        'com.adobe.granite.compat-router',
        'com.adobe.granite.conf',
        'com.adobe.granite.conf.ui.core',
        'com.adobe.granite.cors',
        'com.adobe.granite.crx-explorer',
        'com.adobe.granite.crxde-lite',
        'com.adobe.granite.crypto.config',
        'com.adobe.granite.crypto.extension',
        'com.adobe.granite.crypto.file',
        'com.adobe.granite.crypto.jcr',
        'com.adobe.granite.csrf',
        'com.adobe.granite.distribution.core',
        'com.adobe.granite.dropwizard.metrics',
        'com.adobe.granite.frags.impl',
        'com.adobe.granite.gibson',
        'com.adobe.granite.infocollector',
        'com.adobe.granite.installer.factory.packages',
        'com.adobe.granite.jetty.ssl',
        'com.adobe.granite.jobs.async',
        'com.adobe.granite.maintenance.oak',
        'com.adobe.granite.monitoring.core',
        'com.adobe.granite.queries',
        'com.adobe.granite.replication.hc.impl',
        'com.adobe.granite.repository.checker',
        'com.adobe.granite.repository.hc.impl',
        'com.adobe.granite.rest.assets',
        'com.adobe.granite.security.ui',
        'com.adobe.granite.startup',
        'com.adobe.granite.tagsoup',
        'com.adobe.granite.taskmanagement.core',
        'com.adobe.granite.taskmanagement.workflow',
        'com.adobe.granite.ui.clientlibs.compiler.less',
        'com.adobe.granite.ui.clientlibs.processor.gcc',
        'com.adobe.granite.webconsole.plugins',
        'com.adobe.granite.workflow.console',
        'com.adobe.xmp.worker.files.native.fragment.linux',
        'com.adobe.xmp.worker.files.native.fragment.macosx',
        'com.adobe.xmp.worker.files.native.fragment.win',
        'com.day.commons.osgi.wrapper.simple-jndi',
        'com.day.cq.cq-authhandler',
        'com.day.cq.cq-compat-configupdate',
        'com.day.cq.cq-licensebranding',
        'com.day.cq.cq-notifcation-impl',
        'com.day.cq.cq-replication-audit',
        'com.day.cq.cq-search-ext',
        'com.day.cq.dam.cq-dam-annotation-print',
        'com.day.cq.dam.cq-dam-asset-usage',
        'com.day.cq.dam.cq-dam-s7dam',
        'com.day.cq.dam.cq-dam-similaritysearch',
        'com.day.cq.dam.dam-webdav-support',
        'com.day.cq.pre-upgrade-tasks',
        'com.day.cq.replication.extensions',
        'com.day.cq.wcm.cq-msm-core',
        'com.day.cq.wcm.cq-wcm-translation',
        'day-commons-jrawio',
        'org.apache.aries.jmx.whiteboard',
        'org.apache.felix.http.sslfilter',
        'org.apache.felix.org.apache.felix.threaddump',
        'org.apache.felix.webconsole.plugins.ds',
        'org.apache.felix.webconsole.plugins.event',
        'org.apache.felix.webconsole.plugins.memoryusage',
        'org.apache.felix.webconsole.plugins.packageadmin',
        'org.apache.jackrabbit.oak-auth-ldap',
        'org.apache.jackrabbit.oak-segment-tar',
        'org.apache.jackrabbit.oak-solr-osgi',
        'org.apache.sling.bundleresource.impl',
        'org.apache.sling.commons.fsclassloader',
        'org.apache.sling.commons.log.webconsole',
        'org.apache.sling.datasource',
        'org.apache.sling.discovery.base',
        'org.apache.sling.discovery.oak',
        'org.apache.sling.discovery.support',
        'org.apache.sling.distribution.api',
        'org.apache.sling.distribution.core',
        'org.apache.sling.extensions.webconsolesecurityprovider',
        'org.apache.sling.hc.webconsole',
        'org.apache.sling.installer.console',
        'org.apache.sling.installer.provider.file',
        'org.apache.sling.installer.provider.jcr',
        'org.apache.sling.jcr.davex',
        'org.apache.sling.jcr.resourcesecurity',
        'org.apache.sling.jmx.provider',
        'org.apache.sling.launchpad.installer',
        'org.apache.sling.models.impl',
        'org.apache.sling.repoinit.parser',
        'org.apache.sling.resource.inventory',
        'org.apache.sling.resourceresolver',
        'org.apache.sling.scripting.javascript',
        'org.apache.sling.scripting.jst',
        'org.apache.sling.scripting.sightly.js.provider',
        'org.apache.sling.scripting.sightly.models.provider',
        'org.apache.sling.security',
        'org.apache.sling.servlets.compat',
        'org.apache.sling.servlets.get',
        'org.apache.sling.startupfilter.disabler',
        'org.apache.sling.tracer',
        'we.retail.client.app.core'
    ];

request_params('ComAdobeGraniteAuthCertImplClientCertAuthHandler') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'path',
        'service.ranking'
    ];

request_params('ComAdobeGraniteAuthIms') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'configid',
        'scope'
    ];

request_params('ComAdobeGraniteAuthImsImplExternalUserIdMappingProviderExtension') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'oauth.provider.id'
    ];

request_params('ComAdobeGraniteAuthImsImplIMSAccessTokenRequestCustomizerImpl') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'auth.ims.client.secret',
        'customizer.type'
    ];

request_params('ComAdobeGraniteAuthImsImplIMSInstanceCredentialsValidator') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'oauth.provider.id'
    ];

request_params('ComAdobeGraniteAuthImsImplIMSProviderImpl') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'oauth.provider.id',
        'oauth.provider.ims.authorization.url',
        'oauth.provider.ims.token.url',
        'oauth.provider.ims.profile.url',
        'oauth.provider.ims.extended.details.urls',
        'oauth.provider.ims.validate.token.url',
        'oauth.provider.ims.session.property',
        'oauth.provider.ims.service.token.client.id',
        'oauth.provider.ims.service.token.client.secret',
        'oauth.provider.ims.service.token',
        'ims.org.ref',
        'ims.group.mapping',
        'oauth.provider.ims.only.license.group'
    ];

request_params('ComAdobeGraniteAuthImsImplImsConfigProviderImpl') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'oauth.configmanager.ims.configid',
        'ims.owningEntity',
        'aem.instanceId',
        'ims.serviceCode'
    ];

request_params('ComAdobeGraniteAuthOauthAccesstokenProvider') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'name',
        'auth.token.provider.title',
        'auth.token.provider.default.claims',
        'auth.token.provider.endpoint',
        'auth.access.token.request',
        'auth.token.provider.keypair.alias',
        'auth.token.provider.conn.timeout',
        'auth.token.provider.so.timeout',
        'auth.token.provider.client.id',
        'auth.token.provider.scope',
        'auth.token.provider.reuse.access.token',
        'auth.token.provider.relaxed.ssl',
        'token.request.customizer.type',
        'auth.token.validator.type'
    ];

request_params('ComAdobeGraniteAuthOauthImplBearerAuthenticationHandler') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'path',
        'oauth.clientIds.allowed',
        'auth.bearer.sync.ims',
        'auth.tokenRequestParameter',
        'oauth.bearer.configid',
        'oauth.jwt.support'
    ];

request_params('ComAdobeGraniteAuthOauthImplDefaultTokenValidatorImpl') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'auth.token.validator.type'
    ];

request_params('ComAdobeGraniteAuthOauthImplFacebookProviderImpl') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'oauth.provider.id'
    ];

request_params('ComAdobeGraniteAuthOauthImplGithubProviderImpl') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'oauth.provider.id',
        'oauth.provider.github.authorization.url',
        'oauth.provider.github.token.url',
        'oauth.provider.github.profile.url'
    ];

request_params('ComAdobeGraniteAuthOauthImplGraniteProvider') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'oauth.provider.id',
        'oauth.provider.granite.authorization.url',
        'oauth.provider.granite.token.url',
        'oauth.provider.granite.profile.url',
        'oauth.provider.granite.extended.details.urls'
    ];

request_params('ComAdobeGraniteAuthOauthImplHelperProviderConfigManager') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'oauth.cookie.login.timeout',
        'oauth.cookie.max.age'
    ];

request_params('ComAdobeGraniteAuthOauthImplHelperProviderConfigManagerInternal') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'oauth.cookie.login.timeout',
        'oauth.cookie.max.age'
    ];

request_params('ComAdobeGraniteAuthOauthImplOAuthAuthenticationHandler') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'path'
    ];

request_params('ComAdobeGraniteAuthOauthImplTwitterProviderImpl') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'oauth.provider.id'
    ];

request_params('ComAdobeGraniteAuthOauthProvider') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'oauth.config.id',
        'oauth.client.id',
        'oauth.client.secret',
        'oauth.scope',
        'oauth.config.provider.id',
        'oauth.create.users',
        'oauth.userid.property',
        'force.strict.username.matching',
        'oauth.encode.userids',
        'oauth.hash.userids',
        'oauth.callBackUrl',
        'oauth.access.token.persist',
        'oauth.access.token.persist.cookie',
        'oauth.csrf.state.protection',
        'oauth.redirect.request.params',
        'oauth.config.siblings.allow'
    ];

request_params('ComAdobeGraniteAuthRequirementImplDefaultRequirementHandler') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'supportedPaths'
    ];

request_params('ComAdobeGraniteAuthSamlSamlAuthenticationHandler') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'path',
        'service.ranking',
        'idpUrl',
        'idpCertAlias',
        'idpHttpRedirect',
        'serviceProviderEntityId',
        'assertionConsumerServiceURL',
        'spPrivateKeyAlias',
        'keyStorePassword',
        'defaultRedirectUrl',
        'userIDAttribute',
        'useEncryption',
        'createUser',
        'userIntermediatePath',
        'addGroupMemberships',
        'groupMembershipAttribute',
        'defaultGroups',
        'nameIdFormat',
        'synchronizeAttributes',
        'handleLogout',
        'logoutUrl',
        'clockTolerance',
        'digestMethod',
        'signatureMethod',
        'identitySyncType',
        'idpIdentifier'
    ];

request_params('ComAdobeGraniteAuthSsoImplSsoAuthenticationHandler') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'path',
        'service.ranking',
        'jaas.controlFlag',
        'jaas.realmName',
        'jaas.ranking',
        'headers',
        'cookies',
        'parameters',
        'usermap',
        'format',
        'trustedCredentialsAttribute'
    ];

request_params('ComAdobeGraniteBundlesHcImplCodeCacheHealthCheck') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'hc.tags',
        'minimum.code.cache.size'
    ];

request_params('ComAdobeGraniteBundlesHcImplCrxdeSupportBundleHealthCheck') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'hc.tags'
    ];

request_params('ComAdobeGraniteBundlesHcImplDavExBundleHealthCheck') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'hc.tags'
    ];

request_params('ComAdobeGraniteBundlesHcImplInactiveBundlesHealthCheck') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'hc.tags',
        'ignored.bundles'
    ];

request_params('ComAdobeGraniteBundlesHcImplJobsHealthCheck') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'hc.tags',
        'max.queued.jobs'
    ];

request_params('ComAdobeGraniteBundlesHcImplSlingGetServletHealthCheck') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'hc.tags'
    ];

request_params('ComAdobeGraniteBundlesHcImplSlingJavaScriptHandlerHealthCheck') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'hc.tags'
    ];

request_params('ComAdobeGraniteBundlesHcImplSlingJspScriptHandlerHealthCheck') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'hc.tags'
    ];

request_params('ComAdobeGraniteBundlesHcImplSlingReferrerFilterHealthCheck') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'hc.tags'
    ];

request_params('ComAdobeGraniteBundlesHcImplWebDavBundleHealthCheck') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'hc.tags'
    ];

request_params('ComAdobeGraniteCommentsInternalCommentReplicationContentFilterFac') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'replicate.comment.resourceTypes'
    ];

request_params('ComAdobeGraniteCompatrouterImplCompatSwitchingServiceImpl') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'compatgroups',
        'enabled'
    ];

request_params('ComAdobeGraniteCompatrouterImplRoutingConfig') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'id',
        'compatPath',
        'newPath'
    ];

request_params('ComAdobeGraniteCompatrouterImplSwitchMappingConfig') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'group',
        'ids'
    ];

request_params('ComAdobeGraniteConfImplRuntimeAwareConfigurationResourceResolving') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'enabled',
        'fallbackPaths'
    ];

request_params('ComAdobeGraniteContexthubImplContextHubImpl') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'com.adobe.granite.contexthub.silent_mode',
        'com.adobe.granite.contexthub.show_ui'
    ];

request_params('ComAdobeGraniteCorsImplCORSPolicyImpl') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'alloworigin',
        'alloworiginregexp',
        'allowedpaths',
        'exposedheaders',
        'maxage',
        'supportedheaders',
        'supportedmethods',
        'supportscredentials'
    ];

request_params('ComAdobeGraniteCsrfImplCSRFFilter') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'filter.methods',
        'filter.enable.safe.user.agents',
        'filter.safe.user.agents',
        'filter.excluded.paths'
    ];

request_params('ComAdobeGraniteCsrfImplCSRFServlet') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'csrf.token.expires.in',
        'sling.auth.requirements'
    ];

request_params('ComAdobeGraniteDistributionCoreImplCryptoDistributionTransportSe') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'name',
        'username',
        'encryptedPassword'
    ];

request_params('ComAdobeGraniteDistributionCoreImplDiffDiffChangesObserver') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'enabled',
        'agentName',
        'diffPath',
        'observedPath',
        'serviceName',
        'propertyNames',
        'distributionDelay',
        'serviceUser.target'
    ];

request_params('ComAdobeGraniteDistributionCoreImplDiffDiffEventListener') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'diffPath',
        'serviceName',
        'serviceUser.target'
    ];

request_params('ComAdobeGraniteDistributionCoreImplDistributionToReplicationEven') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'importer.name'
    ];

request_params('ComAdobeGraniteDistributionCoreImplReplicationAdaptersReplicat') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'providerName',
        'forward.requests'
    ];

request_params('ComAdobeGraniteDistributionCoreImplReplicationDistributionTrans') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'forward.requests'
    ];

request_params('ComAdobeGraniteDistributionCoreImplTransportAccessTokenDistribu') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'name',
        'serviceName',
        'userId',
        'accessTokenProvider.target'
    ];

request_params('ComAdobeGraniteFragsImplCheckHttpHeaderFlag') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'feature.name',
        'feature.description',
        'http.header.name',
        'http.header.valuepattern'
    ];

request_params('ComAdobeGraniteFragsImplRandomFeature') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'feature.name',
        'feature.description',
        'active.percentage',
        'cookie.name',
        'cookie.maxAge'
    ];

request_params('ComAdobeGraniteHttpcacheFileFileCacheStore') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'com.adobe.granite.httpcache.file.documentRoot',
        'com.adobe.granite.httpcache.file.includeHost'
    ];

request_params('ComAdobeGraniteHttpcacheImplOuterCacheFilter') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'com.adobe.granite.httpcache.url.paths'
    ];

request_params('ComAdobeGraniteI18nImplBundlePseudoTranslations') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'pseudo.patterns'
    ];

request_params('ComAdobeGraniteI18nImplPreferencesLocaleResolverService') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'security.preferences.name'
    ];

request_params('ComAdobeGraniteInfocollectorInfoCollector') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'granite.infocollector.includeThreadDumps',
        'granite.infocollector.includeHeapDump'
    ];

request_params('ComAdobeGraniteJettySslInternalGraniteSslConnectorFactory') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'com.adobe.granite.jetty.ssl.port',
        'com.adobe.granite.jetty.ssl.keystore.user',
        'com.adobe.granite.jetty.ssl.keystore.password',
        'com.adobe.granite.jetty.ssl.ciphersuites.excluded',
        'com.adobe.granite.jetty.ssl.ciphersuites.included',
        'com.adobe.granite.jetty.ssl.client.certificate'
    ];

request_params('ComAdobeGraniteLicenseImplLicenseCheckFilter') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'checkInternval',
        'excludeIds',
        'encryptPing'
    ];

request_params('ComAdobeGraniteLoggingImplLogAnalyserImpl') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'messages.queue.size',
        'logger.config',
        'messages.size'
    ];

request_params('ComAdobeGraniteLoggingImplLogErrorHealthCheck') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'hc.tags'
    ];

request_params('ComAdobeGraniteMaintenanceCrxImplDataStoreGarbageCollectionTask') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'granite.maintenance.mandatory',
        'job.topics'
    ];

request_params('ComAdobeGraniteMaintenanceCrxImplLuceneBinariesCleanupTask') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'job.topics'
    ];

request_params('ComAdobeGraniteMaintenanceCrxImplRevisionCleanupTask') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'full.gc.days'
    ];

request_params('ComAdobeGraniteMonitoringImplScriptConfigImpl') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'script.filename',
        'script.display',
        'script.path',
        'script.platform',
        'interval',
        'jmxdomain'
    ];

request_params('ComAdobeGraniteOauthServerAuthImplOAuth2ServerAuthenticationHan') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'path',
        'jaas.controlFlag',
        'jaas.realmName',
        'jaas.ranking',
        'oauth.offline.validation'
    ];

request_params('ComAdobeGraniteOauthServerImplAccessTokenCleanupTask') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'scheduler.expression'
    ];

request_params('ComAdobeGraniteOauthServerImplOAuth2ClientRevocationServlet') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'oauth.client.revocation.active'
    ];

request_params('ComAdobeGraniteOauthServerImplOAuth2RevocationEndpointServlet') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'sling.servlet.paths',
        'oauth.revocation.active'
    ];

request_params('ComAdobeGraniteOauthServerImplOAuth2TokenEndpointServlet') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'oauth.issuer',
        'oauth.access.token.expires.in',
        'osgi.http.whiteboard.servlet.pattern',
        'osgi.http.whiteboard.context.select'
    ];

request_params('ComAdobeGraniteOauthServerImplOAuth2TokenRevocationServlet') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'oauth.token.revocation.active'
    ];

request_params('ComAdobeGraniteOffloadingImplOffloadingConfigurator') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'offloading.transporter',
        'offloading.cleanup.payload'
    ];

request_params('ComAdobeGraniteOffloadingImplOffloadingJobCloner') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'offloading.jobcloner.enabled'
    ];

request_params('ComAdobeGraniteOffloadingImplOffloadingJobOffloader') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'offloading.offloader.enabled'
    ];

request_params('ComAdobeGraniteOffloadingImplTransporterOffloadingAgentManager') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'offloading.agentmanager.enabled'
    ];

request_params('ComAdobeGraniteOffloadingImplTransporterOffloadingDefaultTranspo') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'default.transport.agent-to-worker.prefix',
        'default.transport.agent-to-master.prefix',
        'default.transport.input.package',
        'default.transport.output.package',
        'default.transport.replication.synchronous',
        'default.transport.contentpackage',
        'offloading.transporter.default.enabled'
    ];

request_params('ComAdobeGraniteOmnisearchImplCoreOmniSearchServiceImpl') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'omnisearch.suggestion.requiretext.min',
        'omnisearch.suggestion.spellcheck.require'
    ];

request_params('ComAdobeGraniteOptoutImplOptOutServiceImpl') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'optout.cookies',
        'optout.headers',
        'optout.whitelist.cookies'
    ];

request_params('ComAdobeGraniteQueriesImplHcAsyncIndexHealthCheck') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'indexing.critical.threshold',
        'indexing.warn.threshold',
        'hc.tags'
    ];

request_params('ComAdobeGraniteQueriesImplHcLargeIndexHealthCheck') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'large.index.critical.threshold',
        'large.index.warn.threshold',
        'hc.tags'
    ];

request_params('ComAdobeGraniteQueriesImplHcQueriesStatusHealthCheck') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'hc.tags'
    ];

request_params('ComAdobeGraniteQueriesImplHcQueryHealthCheckMetrics') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'getPeriod'
    ];

request_params('ComAdobeGraniteQueriesImplHcQueryLimitsHealthCheck') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'hc.tags'
    ];

request_params('ComAdobeGraniteReplicationHcImplReplicationQueueHealthCheck') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'number.of.retries.allowed',
        'hc.tags'
    ];

request_params('ComAdobeGraniteReplicationHcImplReplicationTransportUsersHealthC') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'hc.tags'
    ];

request_params('ComAdobeGraniteRepositoryHcImplAuthorizableNodeNameHealthCheck') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'hc.tags'
    ];

request_params('ComAdobeGraniteRepositoryHcImplContentSlingSlingContentHealthC') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'hc.tags',
        'exclude.search.path'
    ];

request_params('ComAdobeGraniteRepositoryHcImplContinuousRGCHealthCheck') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'hc.tags'
    ];

request_params('ComAdobeGraniteRepositoryHcImplDefaultAccessUserProfileHealthChe') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'hc.tags'
    ];

request_params('ComAdobeGraniteRepositoryHcImplDefaultLoginsHealthCheck') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'hc.tags',
        'account.logins',
        'console.logins'
    ];

request_params('ComAdobeGraniteRepositoryHcImplDiskSpaceHealthCheck') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'hc.tags',
        'disk.space.warn.threshold',
        'disk.space.error.threshold'
    ];

request_params('ComAdobeGraniteRepositoryHcImplObservationQueueLengthHealthCheck') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'hc.tags'
    ];

request_params('ComAdobeGraniteRepositoryImplCommitStatsConfig') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'enabled',
        'intervalSeconds',
        'commitsPerIntervalThreshold',
        'maxLocationLength',
        'maxDetailsShown',
        'minDetailsPercentage',
        'threadMatchers',
        'maxGreedyDepth',
        'greedyStackMatchers',
        'stackFilters',
        'stackMatchers',
        'stackCategorizers',
        'stackShorteners'
    ];

request_params('ComAdobeGraniteRepositoryServiceUserConfiguration') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'service.ranking',
        'serviceusers.simpleSubjectPopulation',
        'serviceusers.list'
    ];

request_params('ComAdobeGraniteRequestsLoggingImplHcRequestsStatusHealthCheckIm') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'hc.tags'
    ];

request_params('ComAdobeGraniteResourcestatusImplCompositeStatusType') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'name',
        'types'
    ];

request_params('ComAdobeGraniteResourcestatusImplStatusResourceProviderImpl') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'provider.root'
    ];

request_params('ComAdobeGraniteRestAssetsImplAssetContentDispositionFilter') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'mime.allowEmpty',
        'mime.allowed'
    ];

request_params('ComAdobeGraniteRestImplApiEndpointResourceProviderFactoryImpl') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'provider.roots'
    ];

request_params('ComAdobeGraniteRestImplServletDefaultGETServlet') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'default.limit',
        'use.absolute.uri'
    ];

request_params('ComAdobeGraniteSecurityUserUiInternalServletsSSLConfigurationS') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'hc.tags'
    ];

request_params('ComAdobeGraniteSecurityUserUserPropertiesService') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'adapter.condition',
        'granite.userproperties.nodetypes',
        'granite.userproperties.resourcetypes'
    ];

request_params('ComAdobeGraniteSocialgraphImplSocialGraphFactoryImpl') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'group2member.relationship.outgoing',
        'group2member.excluded.outgoing',
        'group2member.relationship.incoming',
        'group2member.excluded.incoming'
    ];

request_params('ComAdobeGraniteSystemMonitoringImplSystemStatsMBeanImpl') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'scheduler.expression',
        'jmx.objectname'
    ];

request_params('ComAdobeGraniteTaskmanagementImplJcrTaskAdapterFactory') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'adapter.condition'
    ];

request_params('ComAdobeGraniteTaskmanagementImplJcrTaskArchiveService') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'archiving.enabled',
        'scheduler.expression',
        'archive.since.days.completed'
    ];

request_params('ComAdobeGraniteTaskmanagementImplPurgeTaskPurgeMaintenanceTask') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'purgeCompleted',
        'completedAge',
        'purgeActive',
        'activeAge',
        'saveThreshold'
    ];

request_params('ComAdobeGraniteTaskmanagementImplServiceTaskManagerAdapterFactor') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'adapter.condition',
        'taskmanager.admingroups'
    ];

request_params('ComAdobeGraniteThreaddumpThreadDumpCollector') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'scheduler.period',
        'scheduler.runOn',
        'granite.threaddump.enabled',
        'granite.threaddump.dumpsPerFile',
        'granite.threaddump.enableGzipCompression',
        'granite.threaddump.enableDirectoriesCompression',
        'granite.threaddump.enableJStack',
        'granite.threaddump.maxBackupDays',
        'granite.threaddump.backupCleanTrigger'
    ];

request_params('ComAdobeGraniteTranslationConnectorMsftCoreImplMicrosoftTransl') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'translationFactory',
        'defaultConnectorLabel',
        'defaultConnectorAttribution',
        'defaultConnectorWorkspaceId',
        'defaultConnectorSubscriptionKey',
        'languageMapLocation',
        'categoryMapLocation',
        'retryAttempts',
        'timeoutCount'
    ];

request_params('ComAdobeGraniteTranslationCoreImplTranslationManagerImpl') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'defaultConnectorName',
        'defaultCategory'
    ];

request_params('ComAdobeGraniteUiClientlibsImplHtmlLibraryManagerImpl') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'htmllibmanager.timing',
        'htmllibmanager.debug.init.js',
        'htmllibmanager.minify',
        'htmllibmanager.debug',
        'htmllibmanager.gzip',
        'htmllibmanager.maxDataUriSize',
        'htmllibmanager.maxage',
        'htmllibmanager.forceCQUrlInfo',
        'htmllibmanager.defaultthemename',
        'htmllibmanager.defaultuserthemename',
        'htmllibmanager.clientmanager',
        'htmllibmanager.path.list',
        'htmllibmanager.excluded.path.list',
        'htmllibmanager.processor.js',
        'htmllibmanager.processor.css',
        'htmllibmanager.longcache.patterns',
        'htmllibmanager.longcache.format',
        'htmllibmanager.useFileSystemOutputCache',
        'htmllibmanager.fileSystemOutputCacheLocation',
        'htmllibmanager.disable.replacement'
    ];

request_params('ComAdobeGraniteWorkflowConsoleFragsWorkflowWithdrawFeature') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'enabled'
    ];

request_params('ComAdobeGraniteWorkflowConsolePublishWorkflowPublishEventService') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'granite.workflow.WorkflowPublishEventService.enabled'
    ];

request_params('ComAdobeGraniteWorkflowCoreJcrWorkflowBucketManager') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'bucketSize'
    ];

request_params('ComAdobeGraniteWorkflowCoreJobExternalProcessJobHandler') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'default.timeout',
        'max.timeout',
        'default.period'
    ];

request_params('ComAdobeGraniteWorkflowCoreJobJobHandler') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'job.topics',
        'allow.self.process.termination'
    ];

request_params('ComAdobeGraniteWorkflowCoreOffloadingWorkflowOffloadingJobConsum') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'job.topics'
    ];

request_params('ComAdobeGraniteWorkflowCorePayloadMapCache') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'getSystemWorkflowModels',
        'getPackageRootPath'
    ];

request_params('ComAdobeGraniteWorkflowCorePayloadmapPayloadMoveListener') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'payload.move.white.list',
        'payload.move.handle.from.workflow.process'
    ];

request_params('ComAdobeGraniteWorkflowCoreWorkflowConfig') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'cq.workflow.config.workflow.packages.root.path',
        'cq.workflow.config.workflow.process.legacy.mode',
        'cq.workflow.config.allow.locking'
    ];

request_params('ComAdobeGraniteWorkflowCoreWorkflowSessionFactory') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'granite.workflowinbox.sort.propertyName',
        'granite.workflowinbox.sort.order',
        'cq.workflow.job.retry',
        'cq.workflow.superuser',
        'granite.workflow.inboxQuerySize',
        'granite.workflow.adminUserGroupFilter',
        'granite.workflow.enforceWorkitemAssigneePermissions',
        'granite.workflow.enforceWorkflowInitiatorPermissions',
        'granite.workflow.injectTenantIdInJobTopics',
        'granite.workflow.maxPurgeSaveThreshold',
        'granite.workflow.maxPurgeQueryCount'
    ];

request_params('ComAdobeGraniteWorkflowPurgeScheduler') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'scheduledpurge.name',
        'scheduledpurge.workflowStatus',
        'scheduledpurge.modelIds',
        'scheduledpurge.daysold'
    ];

request_params('ComAdobeOctopusNcommBootstrap') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'maxConnections',
        'maxRequests',
        'requestTimeout',
        'requestRetries',
        'launchTimeout'
    ];

request_params('ComAdobeSocialIntegrationsLivefyreUserPingforpullImplPingPullS') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'communities.integration.livefyre.sling.event.filter'
    ];

request_params('ComAdobeXmpWorkerFilesNcommXMPFilesNComm') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'maxConnections',
        'maxRequests',
        'requestTimeout',
        'logDir'
    ];

request_params('ComDayCommonsDatasourceJdbcpoolJdbcPoolService') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'jdbc.driver.class',
        'jdbc.connection.uri',
        'jdbc.username',
        'jdbc.password',
        'jdbc.validation.query',
        'default.readonly',
        'default.autocommit',
        'pool.size',
        'pool.max.wait.msec',
        'datasource.name',
        'datasource.svc.properties'
    ];

request_params('ComDayCommonsHttpclient') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'proxy.enabled',
        'proxy.host',
        'proxy.user',
        'proxy.password',
        'proxy.ntlm.host',
        'proxy.ntlm.domain',
        'proxy.exceptions'
    ];

request_params('ComDayCqAnalyticsImplStorePropertiesChangeListener') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'cq.store.listener.additionalStorePaths'
    ];

request_params('ComDayCqAnalyticsSitecatalystImplExporterClassificationsExporte') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'allowed.paths',
        'cq.analytics.saint.exporter.pagesize'
    ];

request_params('ComDayCqAnalyticsSitecatalystImplImporterReportImporter') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'report.fetch.attempts',
        'report.fetch.delay'
    ];

request_params('ComDayCqAnalyticsSitecatalystImplSitecatalystAdapterFactory') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'cq.analytics.adapterfactory.contextstores'
    ];

request_params('ComDayCqAnalyticsSitecatalystImplSitecatalystHttpClientImpl') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'cq.analytics.sitecatalyst.service.datacenter.url',
        'devhostnamepatterns',
        'connection.timeout',
        'socket.timeout'
    ];

request_params('ComDayCqAnalyticsTestandtargetImplAccountOptionsUpdater') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'cq.analytics.testandtarget.accountoptionsupdater.enabled'
    ];

request_params('ComDayCqAnalyticsTestandtargetImplDeleteAuthorActivityListener') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'cq.analytics.testandtarget.deleteauthoractivitylistener.enabled'
    ];

request_params('ComDayCqAnalyticsTestandtargetImplPushAuthorCampaignPageListener') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'cq.analytics.testandtarget.pushauthorcampaignpagelistener.enabled'
    ];

request_params('ComDayCqAnalyticsTestandtargetImplSegmentImporter') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'cq.analytics.testandtarget.segmentimporter.enabled'
    ];

request_params('ComDayCqAnalyticsTestandtargetImplServiceWebServiceImpl') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'endpointUri',
        'connectionTimeout',
        'socketTimeout'
    ];

request_params('ComDayCqAnalyticsTestandtargetImplServletsAdminServerServlet') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'testandtarget.endpoint.url'
    ];

request_params('ComDayCqAnalyticsTestandtargetImplTestandtargetHttpClientImpl') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'cq.analytics.testandtarget.api.url',
        'cq.analytics.testandtarget.timeout',
        'cq.analytics.testandtarget.sockettimeout',
        'cq.analytics.testandtarget.recommendations.url.replace',
        'cq.analytics.testandtarget.recommendations.url.replacewith'
    ];

request_params('ComDayCqAuthImplCugCugSupportImpl') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'cug.exempted.principals',
        'cug.enabled',
        'cug.principals.regex',
        'cug.principals.replacement'
    ];

request_params('ComDayCqAuthImplLoginSelectorHandler') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'path',
        'service.ranking',
        'auth.loginselector.mappings',
        'auth.loginselector.changepw.mappings',
        'auth.loginselector.defaultloginpage',
        'auth.loginselector.defaultchangepwpage',
        'auth.loginselector.handle',
        'auth.loginselector.handle.all.extensions'
    ];

request_params('ComDayCqCommonsImplExternalizerImpl') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'externalizer.domains',
        'externalizer.host',
        'externalizer.contextpath',
        'externalizer.encodedpath'
    ];

request_params('ComDayCqCommonsServletsRootMappingServlet') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'rootmapping.target'
    ];

request_params('ComDayCqCompatCodeupgradeImplCodeUpgradeExecutionConditionChecke') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'codeupgradetasks',
        'codeupgradetaskfilters'
    ];

request_params('ComDayCqCompatCodeupgradeImplUpgradeTaskIgnoreList') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'upgradeTaskIgnoreList'
    ];

request_params('ComDayCqCompatCodeupgradeImplVersionRangeTaskIgnorelist') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'effectiveBundleListPath'
    ];

request_params('ComDayCqContentsyncImplContentSyncManagerImpl') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'contentsync.fallback.authorizable',
        'contentsync.fallback.updateuser'
    ];

request_params('ComDayCqDamCommonsHandlerStandardImageHandler') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'large_file_threshold',
        'large_comment_threshold',
        'cq.dam.enable.ext.meta.extraction'
    ];

request_params('ComDayCqDamCommonsMetadataXmpFilterBlackWhite') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'xmp.filter.apply_whitelist',
        'xmp.filter.whitelist',
        'xmp.filter.apply_blacklist',
        'xmp.filter.blacklist'
    ];

request_params('ComDayCqDamCommonsUtilImplAssetCacheImpl') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'large.file.min',
        'cache.apply',
        'mime.types'
    ];

request_params('ComDayCqDamCoreImplAnnotationPdfAnnotationPdfConfig') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'cq.dam.config.annotation.pdf.document.width',
        'cq.dam.config.annotation.pdf.document.height',
        'cq.dam.config.annotation.pdf.document.padding.horizontal',
        'cq.dam.config.annotation.pdf.document.padding.vertical',
        'cq.dam.config.annotation.pdf.font.size',
        'cq.dam.config.annotation.pdf.font.color',
        'cq.dam.config.annotation.pdf.font.family',
        'cq.dam.config.annotation.pdf.font.light',
        'cq.dam.config.annotation.pdf.marginTextImage',
        'cq.dam.config.annotation.pdf.minImageHeight',
        'cq.dam.config.annotation.pdf.reviewStatus.width',
        'cq.dam.config.annotation.pdf.reviewStatus.color.approved',
        'cq.dam.config.annotation.pdf.reviewStatus.color.rejected',
        'cq.dam.config.annotation.pdf.reviewStatus.color.changesRequested',
        'cq.dam.config.annotation.pdf.annotationMarker.width',
        'cq.dam.config.annotation.pdf.asset.minheight'
    ];

request_params('ComDayCqDamCoreImplAssetMoveListener') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'enabled'
    ];

request_params('ComDayCqDamCoreImplAssethomeAssetHomePageConfiguration') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'isEnabled'
    ];

request_params('ComDayCqDamCoreImplAssetlinkshareAdhocAssetShareProxyServlet') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'cq.dam.adhoc.asset.share.prezip.maxcontentsize'
    ];

request_params('ComDayCqDamCoreImplCacheCQBufferedImageCache') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'cq.dam.image.cache.max.memory',
        'cq.dam.image.cache.max.age',
        'cq.dam.image.cache.max.dimension'
    ];

request_params('ComDayCqDamCoreImplDamChangeEventListener') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'changeeventlistener.observed.paths'
    ];

request_params('ComDayCqDamCoreImplDamEventPurgeService') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'scheduler.expression',
        'maxSavedActivities',
        'saveInterval',
        'enableActivityPurge',
        'eventTypes'
    ];

request_params('ComDayCqDamCoreImplDamEventRecorderImpl') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'event.filter',
        'event.queue.length',
        'eventrecorder.enabled',
        'eventrecorder.blacklist',
        'eventrecorder.eventtypes'
    ];

request_params('ComDayCqDamCoreImplEventDamEventAuditListener') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'event.filter',
        'enabled'
    ];

request_params('ComDayCqDamCoreImplExpiryNotificationJobImpl') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'cq.dam.expiry.notification.scheduler.istimebased',
        'cq.dam.expiry.notification.scheduler.timebased.rule',
        'cq.dam.expiry.notification.scheduler.period.rule',
        'send_email',
        'asset_expired_limit',
        'prior_notification_seconds',
        'cq.dam.expiry.notification.url.protocol'
    ];

request_params('ComDayCqDamCoreImplFoldermetadataschemaFolderMetadataSchemaFeat') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'isEnabled'
    ];

request_params('ComDayCqDamCoreImplGfxCommonsGfxRenderer') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'skip.bufferedcache'
    ];

request_params('ComDayCqDamCoreImplHandlerEPSFormatHandler') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'mimetype'
    ];

request_params('ComDayCqDamCoreImplHandlerIndesignFormatHandler') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'mimetype'
    ];

request_params('ComDayCqDamCoreImplHandlerJpegHandler') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'cq.dam.enable.ext.meta.extraction',
        'large_file_threshold',
        'large_comment_threshold'
    ];

request_params('ComDayCqDamCoreImplHandlerXmpNCommXMPHandler') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'xmphandler.cq.formats'
    ];

request_params('ComDayCqDamCoreImplJmxAssetIndexUpdateMonitor') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'jmx.objectname',
        'property.measure.enabled',
        'property.name',
        'property.max.wait.ms',
        'property.max.rate',
        'fulltext.measure.enabled',
        'fulltext.name',
        'fulltext.max.wait.ms',
        'fulltext.max.rate'
    ];

request_params('ComDayCqDamCoreImplJmxAssetMigrationMBeanImpl') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'jmx.objectname'
    ];

request_params('ComDayCqDamCoreImplJmxAssetUpdateMonitorImpl') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'jmx.objectname',
        'active'
    ];

request_params('ComDayCqDamCoreImplJobsMetadataexportAsyncMetadataExportConfig') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'operation',
        'emailEnabled'
    ];

request_params('ComDayCqDamCoreImplJobsMetadataimportAsyncMetadataImportConfig') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'operation',
        'operationIcon',
        'topicName',
        'emailEnabled'
    ];

request_params('ComDayCqDamCoreImplLightboxLightboxServlet') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'sling.servlet.paths',
        'sling.servlet.methods',
        'cq.dam.enable.anonymous'
    ];

request_params('ComDayCqDamCoreImplMetadataEditorSelectComponentHandler') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'granite:data'
    ];

request_params('ComDayCqDamCoreImplMimeTypeAssetUploadRestrictionHelper') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'cq.dam.allow.all.mime',
        'cq.dam.allowed.asset.mimes'
    ];

request_params('ComDayCqDamCoreImplMimeTypeDamMimeTypeServiceImpl') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'cq.dam.detect.asset.mime.from.content'
    ];

request_params('ComDayCqDamCoreImplMissingMetadataNotificationJob') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'cq.dam.missingmetadata.notification.scheduler.istimebased',
        'cq.dam.missingmetadata.notification.scheduler.timebased.rule',
        'cq.dam.missingmetadata.notification.scheduler.period.rule',
        'cq.dam.missingmetadata.notification.recipient'
    ];

request_params('ComDayCqDamCoreImplProcessSendTransientWorkflowCompletedEmailPr') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'process.label',
        'Notify on Complete'
    ];

request_params('ComDayCqDamCoreImplProcessTextExtractionProcess') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'mimeTypes',
        'maxExtract'
    ];

request_params('ComDayCqDamCoreImplRenditionMakerImpl') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'xmp.propagate',
        'xmp.excludes'
    ];

request_params('ComDayCqDamCoreImplReportsReportExportService') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'queryBatchSize'
    ];

request_params('ComDayCqDamCoreImplReportsReportPurgeService') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'scheduler.expression',
        'maxSavedReports',
        'timeDuration',
        'enableReportPurge'
    ];

request_params('ComDayCqDamCoreImplServletAssetDownloadServlet') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'enabled'
    ];

request_params('ComDayCqDamCoreImplServletAssetStatusServlet') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'cq.dam.batch.status.maxassets'
    ];

request_params('ComDayCqDamCoreImplServletAssetXMPSearchServlet') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'cq.dam.batch.indesign.maxassets'
    ];

request_params('ComDayCqDamCoreImplServletBatchMetadataServlet') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'cq.dam.batch.metadata.asset.default',
        'cq.dam.batch.metadata.collection.default',
        'cq.dam.batch.metadata.maxresources'
    ];

request_params('ComDayCqDamCoreImplServletBinaryProviderServlet') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'sling.servlet.resourceTypes',
        'sling.servlet.methods',
        'cq.dam.drm.enable'
    ];

request_params('ComDayCqDamCoreImplServletCollectionServlet') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'cq.dam.batch.collection.properties',
        'cq.dam.batch.collection.maxcollections'
    ];

request_params('ComDayCqDamCoreImplServletCollectionsServlet') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'cq.dam.batch.collections.properties',
        'cq.dam.batch.collections.limit'
    ];

request_params('ComDayCqDamCoreImplServletCompanionServlet') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'More Info',
        '/mnt/overlay/dam/gui/content/assets/moreinfo.html/${path}'
    ];

request_params('ComDayCqDamCoreImplServletCreateAssetServlet') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'detect_duplicate'
    ];

request_params('ComDayCqDamCoreImplServletDamContentDispositionFilter') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'cq.mime.type.blacklist',
        'cq.dam.empty.mime'
    ];

request_params('ComDayCqDamCoreImplServletGuidLookupFilter') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'cq.dam.core.guidlookupfilter.enabled'
    ];

request_params('ComDayCqDamCoreImplServletHealthCheckServlet') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'cq.dam.sync.workflow.id',
        'cq.dam.sync.folder.types'
    ];

request_params('ComDayCqDamCoreImplServletMetadataGetServlet') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'sling.servlet.resourceTypes',
        'sling.servlet.methods',
        'sling.servlet.extensions',
        'sling.servlet.selectors'
    ];

request_params('ComDayCqDamCoreImplServletMultipleLicenseAcceptServlet') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'cq.dam.drm.enable'
    ];

request_params('ComDayCqDamCoreImplServletResourceCollectionServlet') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'sling.servlet.resourceTypes',
        'sling.servlet.methods',
        'sling.servlet.selectors',
        'download.config',
        'view.selector',
        'send_email'
    ];

request_params('ComDayCqDamCoreImplUiPreviewFolderPreviewUpdaterImpl') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'createPreviewEnabled',
        'updatePreviewEnabled',
        'queueSize',
        'folderPreviewRenditionRegex'
    ];

request_params('ComDayCqDamCoreImplUnzipUnzipConfig') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'cq.dam.config.unzip.maxuncompressedsize',
        'cq.dam.config.unzip.encoding'
    ];

request_params('ComDayCqDamCoreProcessExifToolExtractMetadataProcess') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'process.label',
        'cq.dam.enable.sha1'
    ];

request_params('ComDayCqDamCoreProcessExtractMetadataProcess') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'process.label',
        'cq.dam.enable.sha1'
    ];

request_params('ComDayCqDamCoreProcessMetadataProcessorProcess') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'process.label',
        'cq.dam.enable.sha1',
        'cq.dam.metadata.xssprotected.properties'
    ];

request_params('ComDayCqDamHandlerFfmpegLocatorImpl') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'executable.searchpath'
    ];

request_params('ComDayCqDamHandlerGibsonFontmanagerImplFontManagerServiceImpl') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'event.filter',
        'fontmgr.system.font.dir',
        'fontmgr.adobe.font.dir',
        'fontmgr.customer.font.dir'
    ];

request_params('ComDayCqDamHandlerStandardPdfPdfHandler') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'raster.annotation'
    ];

request_params('ComDayCqDamHandlerStandardPsPostScriptHandler') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'raster.annotation'
    ];

request_params('ComDayCqDamHandlerStandardPsdPsdHandler') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'large_file_threshold'
    ];

request_params('ComDayCqDamIdsImplIDSJobProcessor') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'enable.multisession',
        'ids.cc.enable',
        'enable.retry',
        'enable.retry.scripterror',
        'externalizer.domain.cqhost',
        'externalizer.domain.http'
    ];

request_params('ComDayCqDamIdsImplIDSPoolManagerImpl') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'max.errors.to.blacklist',
        'retry.interval.to.whitelist',
        'connect.timeout',
        'socket.timeout',
        'process.label',
        'connection.use.max'
    ];

request_params('ComDayCqDamInddImplHandlerIndesignXMPHandler') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'process.label',
        'extract.pages'
    ];

request_params('ComDayCqDamInddImplServletSnippetCreationServlet') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'snippetcreation.maxcollections'
    ];

request_params('ComDayCqDamInddProcessINDDMediaExtractProcess') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'process.label',
        'cq.dam.indd.pages.regex',
        'ids.job.decoupled',
        'ids.job.workflow.model'
    ];

request_params('ComDayCqDamPerformanceInternalAssetPerformanceDataHandlerImpl') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'batch.commit.size'
    ];

request_params('ComDayCqDamPerformanceInternalAssetPerformanceReportSyncJob') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'scheduler.expression'
    ];

request_params('ComDayCqDamPimImplSourcingUploadProcessProductAssetsUploadPro') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'delete.zip.file'
    ];

request_params('ComDayCqDamS7damCommonAnalyticsImplS7damDynamicMediaConfigEven') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'cq.dam.s7dam.dynamicmediaconfigeventlistener.enabled'
    ];

request_params('ComDayCqDamS7damCommonAnalyticsImplSiteCatalystReportRunner') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'scheduler.expression',
        'scheduler.concurrent'
    ];

request_params('ComDayCqDamS7damCommonPostServletsSetCreateHandler') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'sling.post.operation',
        'sling.servlet.methods'
    ];

request_params('ComDayCqDamS7damCommonPostServletsSetModifyHandler') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'sling.post.operation',
        'sling.servlet.methods'
    ];

request_params('ComDayCqDamS7damCommonProcessVideoThumbnailDownloadProcess') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'process.label'
    ];

request_params('ComDayCqDamS7damCommonS7damDamChangeEventListener') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'cq.dam.s7dam.damchangeeventlistener.enabled'
    ];

request_params('ComDayCqDamS7damCommonServletsS7damProductInfoServlet') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'sling.servlet.paths',
        'sling.servlet.methods'
    ];

request_params('ComDayCqDamS7damCommonVideoImplVideoProxyClientServiceImpl') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'cq.dam.s7dam.videoproxyclientservice.multipartupload.minsize.name',
        'cq.dam.s7dam.videoproxyclientservice.multipartupload.partsize.name',
        'cq.dam.s7dam.videoproxyclientservice.multipartupload.numthread.name',
        'cq.dam.s7dam.videoproxyclientservice.http.readtimeout.name',
        'cq.dam.s7dam.videoproxyclientservice.http.connectiontimeout.name',
        'cq.dam.s7dam.videoproxyclientservice.http.maxretrycount.name',
        'cq.dam.s7dam.videoproxyclientservice.uploadprogress.interval.name'
    ];

request_params('ComDayCqDamScene7ImplScene7APIClientImpl') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'cq.dam.scene7.apiclient.recordsperpage.nofilter.name',
        'cq.dam.scene7.apiclient.recordsperpage.withfilter.name'
    ];

request_params('ComDayCqDamScene7ImplScene7AssetMimeTypeServiceImpl') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'cq.dam.scene7.assetmimetypeservice.mapping'
    ];

request_params('ComDayCqDamScene7ImplScene7ConfigurationEventListener') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'cq.dam.scene7.configurationeventlistener.enabled'
    ];

request_params('ComDayCqDamScene7ImplScene7DamChangeEventListener') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'cq.dam.scene7.damchangeeventlistener.enabled',
        'cq.dam.scene7.damchangeeventlistener.observed.paths'
    ];

request_params('ComDayCqDamScene7ImplScene7FlashTemplatesServiceImpl') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'scene7FlashTemplates.rti',
        'scene7FlashTemplates.rsi',
        'scene7FlashTemplates.rb',
        'scene7FlashTemplates.rurl',
        'scene7FlashTemplate.urlFormatParameter'
    ];

request_params('ComDayCqDamScene7ImplScene7UploadServiceImpl') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'cq.dam.scene7.uploadservice.activejobtimeout.label',
        'cq.dam.scene7.uploadservice.connectionmaxperroute.label'
    ];

request_params('ComDayCqDamStockIntegrationImplCacheStockCacheConfigurationSer') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'getCacheExpirationUnit',
        'getCacheExpirationValue'
    ];

request_params('ComDayCqDamStockIntegrationImplConfigurationStockConfiguration') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'name',
        'locale',
        'imsConfig'
    ];

request_params('ComDayCqDamVideoImplServletVideoTestServlet') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'enabled'
    ];

request_params('ComDayCqExtwidgetServletsImageSpriteServlet') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'maxWidth',
        'maxHeight'
    ];

request_params('ComDayCqImageInternalFontFontHelper') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'fontpath',
        'oversamplingFactor'
    ];

request_params('ComDayCqJcrclustersupportClusterStartLevelController') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'cluster.level.enable',
        'cluster.master.level',
        'cluster.slave.level'
    ];

request_params('ComDayCqMailerDefaultMailService') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'smtp.host',
        'smtp.port',
        'smtp.user',
        'smtp.password',
        'from.address',
        'smtp.ssl',
        'smtp.starttls',
        'debug.email'
    ];

request_params('ComDayCqMailerImplCqMailingService') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'max.recipient.count'
    ];

request_params('ComDayCqMailerImplEmailCqEmailTemplateFactory') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'mailer.email.charset'
    ];

request_params('ComDayCqMailerImplEmailCqRetrieverTemplateFactory') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'mailer.email.embed',
        'mailer.email.charset',
        'mailer.email.retrieverUserID',
        'mailer.email.retrieverUserPWD'
    ];

request_params('ComDayCqMcmCampaignImplIntegrationConfigImpl') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'aem.mcm.campaign.formConstraints',
        'aem.mcm.campaign.publicUrl',
        'aem.mcm.campaign.relaxedSSL'
    ];

request_params('ComDayCqMcmCampaignImporterPersonalizedTextHandlerFactory') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'service.ranking',
        'tagpattern'
    ];

request_params('ComDayCqMcmCoreNewsletterNewsletterEmailServiceImpl') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'from.address',
        'sender.host',
        'max.bounce.count'
    ];

request_params('ComDayCqMcmImplMCMConfiguration') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'experience.indirection',
        'touchpoint.indirection'
    ];

request_params('ComDayCqMcmLandingpageParserTaghandlersCtaClickThroughComponen') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'service.ranking',
        'tagpattern',
        'component.resourceType'
    ];

request_params('ComDayCqMcmLandingpageParserTaghandlersCtaGraphicalClickThroug') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'service.ranking',
        'tagpattern',
        'component.resourceType'
    ];

request_params('ComDayCqMcmLandingpageParserTaghandlersCtaLeadFormCTAComponent') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'service.ranking',
        'tagpattern'
    ];

request_params('ComDayCqMcmLandingpageParserTaghandlersMboxMBoxExperienceTagHa') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'service.ranking',
        'tagpattern'
    ];

request_params('ComDayCqMcmLandingpageParserTaghandlersMboxTargetComponentTagH') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'service.ranking',
        'tagpattern',
        'component.resourceType'
    ];

request_params('ComDayCqNotificationImplNotificationServiceImpl') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'event.filter'
    ];

request_params('ComDayCqPersonalizationImplServletsTargetingConfigurationServlet') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'forcelocation'
    ];

request_params('ComDayCqPollingImporterImplManagedPollConfigImpl') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'id',
        'enabled',
        'reference',
        'interval',
        'expression',
        'source',
        'target',
        'login',
        'password'
    ];

request_params('ComDayCqPollingImporterImplManagedPollingImporterImpl') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'importer.user'
    ];

request_params('ComDayCqPollingImporterImplPollingImporterImpl') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'importer.min.interval',
        'importer.user',
        'exclude.paths',
        'include.paths'
    ];

request_params('ComDayCqReplicationAuditReplicationEventListener') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'service.ranking'
    ];

request_params('ComDayCqReplicationContentStaticContentBuilder') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'host',
        'port'
    ];

request_params('ComDayCqReplicationImplAgentManagerImpl') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'job.topics',
        'serviceUser.target',
        'agentProvider.target'
    ];

request_params('ComDayCqReplicationImplContentDurboBinaryLessContentBuilder') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'binary.threshold'
    ];

request_params('ComDayCqReplicationImplContentDurboDurboImportConfigurationProv') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'preserve.hierarchy.nodes',
        'ignore.versioning',
        'import.acl',
        'save.threshold',
        'preserve.user.paths',
        'preserve.uuid',
        'preserve.uuid.nodetypes',
        'preserve.uuid.subtrees',
        'auto.commit'
    ];

request_params('ComDayCqReplicationImplReplicationContentFactoryProviderImpl') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'replication.content.useFileStorage',
        'replication.content.maxCommitAttempts'
    ];

request_params('ComDayCqReplicationImplReplicationReceiverImpl') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'receiver.tmpfile.threshold',
        'receiver.packages.use.install'
    ];

request_params('ComDayCqReplicationImplReplicatorImpl') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'distribute_events'
    ];

request_params('ComDayCqReplicationImplReverseReplicator') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'scheduler.period'
    ];

request_params('ComDayCqReplicationImplTransportBinaryLessTransportHandler') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'disabled.cipher.suites',
        'enabled.cipher.suites'
    ];

request_params('ComDayCqReplicationImplTransportHttp') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'disabled.cipher.suites',
        'enabled.cipher.suites'
    ];

request_params('ComDayCqReportingImplCacheCacheImpl') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'repcache.enable',
        'repcache.ttl',
        'repcache.max'
    ];

request_params('ComDayCqReportingImplConfigServiceImpl') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'repconf.timezone',
        'repconf.locale',
        'repconf.snapshots',
        'repconf.repdir',
        'repconf.hourofday',
        'repconf.minofhour',
        'repconf.maxrows',
        'repconf.fakedata',
        'repconf.snapshotuser',
        'repconf.enforcesnapshotuser'
    ];

request_params('ComDayCqReportingImplRLogAnalyzer') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'request.log.output'
    ];

request_params('ComDayCqRewriterLinkcheckerImplLinkCheckerImpl') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'scheduler.period',
        'scheduler.concurrent',
        'service.bad_link_tolerance_interval',
        'service.check_override_patterns',
        'service.cache_broken_internal_links',
        'service.special_link_prefix',
        'service.special_link_patterns'
    ];

request_params('ComDayCqRewriterLinkcheckerImplLinkCheckerTask') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'scheduler.period',
        'scheduler.concurrent',
        'good_link_test_interval',
        'bad_link_test_interval',
        'link_unused_interval',
        'connection.timeout'
    ];

request_params('ComDayCqRewriterLinkcheckerImplLinkCheckerTransformerFactory') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'linkcheckertransformer.disableRewriting',
        'linkcheckertransformer.disableChecking',
        'linkcheckertransformer.mapCacheSize',
        'linkcheckertransformer.strictExtensionCheck',
        'linkcheckertransformer.stripHtmltExtension',
        'linkcheckertransformer.rewriteElements',
        'linkcheckertransformer.stripExtensionPathBlacklist'
    ];

request_params('ComDayCqRewriterLinkcheckerImplLinkInfoStorageImpl') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'service.max_links_per_host',
        'service.save_external_link_references'
    ];

request_params('ComDayCqRewriterProcessorImplHtmlParserFactory') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'htmlparser.processTags',
        'htmlparser.preserveCamelCase'
    ];

request_params('ComDayCqSearchImplBuilderQueryBuilderImpl') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'excerpt.properties',
        'cache.max.entries',
        'cache.entry.lifetime',
        'xpath.union'
    ];

request_params('ComDayCqSearchSuggestImplSuggestionIndexManagerImpl') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'pathBuilder.target',
        'suggest.basepath'
    ];

request_params('ComDayCqSearchpromoteImplPublishSearchPromoteConfigHandler') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'cq.searchpromote.confighandler.enabled'
    ];

request_params('ComDayCqSearchpromoteImplSearchPromoteServiceImpl') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'cq.searchpromote.configuration.server.uri',
        'cq.searchpromote.configuration.environment',
        'connection.timeout',
        'socket.timeout'
    ];

request_params('ComDayCqSecurityACLSetup') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'cq.aclsetup.rules'
    ];

request_params('ComDayCqStatisticsImplStatisticsServiceImpl') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'scheduler.period',
        'scheduler.concurrent',
        'path',
        'workspace',
        'keywordsPath',
        'asyncEntries'
    ];

request_params('ComDayCqTaggingImplJcrTagManagerFactoryImpl') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'validation.enabled'
    ];

request_params('ComDayCqTaggingImplSearchTagPredicateEvaluator') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'ignore_path'
    ];

request_params('ComDayCqTaggingImplTagGarbageCollector') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'scheduler.expression'
    ];

request_params('ComDayCqWcmContentsyncImplHandlerPagesUpdateHandler') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'cq.pagesupdatehandler.imageresourcetypes'
    ];

request_params('ComDayCqWcmContentsyncImplRewriterPathRewriterTransformerFactor') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'cq.contentsync.pathrewritertransformer.mapping.links',
        'cq.contentsync.pathrewritertransformer.mapping.clientlibs',
        'cq.contentsync.pathrewritertransformer.mapping.images',
        'cq.contentsync.pathrewritertransformer.attribute.pattern',
        'cq.contentsync.pathrewritertransformer.clientlibrary.pattern',
        'cq.contentsync.pathrewritertransformer.clientlibrary.replace'
    ];

request_params('ComDayCqWcmCoreImplAuthoringUIModeServiceImpl') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'authoringUIModeService.default'
    ];

request_params('ComDayCqWcmCoreImplCommandsWCMCommandServlet') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'wcmcommandservlet.delete_whitelist'
    ];

request_params('ComDayCqWcmCoreImplDevicedetectionDeviceIdentificationModeImpl') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'dim.default.mode',
        'dim.appcache.enabled'
    ];

request_params('ComDayCqWcmCoreImplEventPageEventAuditListener') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'configured'
    ];

request_params('ComDayCqWcmCoreImplEventPagePostProcessor') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'paths'
    ];

request_params('ComDayCqWcmCoreImplEventRepositoryChangeEventListener') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'paths',
        'excludedPaths'
    ];

request_params('ComDayCqWcmCoreImplEventTemplatePostProcessor') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'paths'
    ];

request_params('ComDayCqWcmCoreImplLanguageManagerImpl') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'langmgr.list.path',
        'langmgr.country.default'
    ];

request_params('ComDayCqWcmCoreImplLinkCheckerConfigurationFactoryImpl') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'link.expired.prefix',
        'link.expired.remove',
        'link.expired.suffix',
        'link.invalid.prefix',
        'link.invalid.remove',
        'link.invalid.suffix',
        'link.predated.prefix',
        'link.predated.remove',
        'link.predated.suffix',
        'link.wcmmodes'
    ];

request_params('ComDayCqWcmCoreImplPagePageInfoAggregatorImpl') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'page.info.provider.property.regex.default',
        'page.info.provider.property.name'
    ];

request_params('ComDayCqWcmCoreImplPagePageManagerFactoryImpl') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'illegalCharMapping',
        'pageSubTreeActivationCheck'
    ];

request_params('ComDayCqWcmCoreImplReferencesContentContentReferenceConfig') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'contentReferenceConfig.resourceTypes'
    ];

request_params('ComDayCqWcmCoreImplServletsContentfinderAssetViewHandler') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'dam.showexpired',
        'dam.showhidden',
        'tagTitleSearch',
        'guessTotal',
        'dam.expiryProperty'
    ];

request_params('ComDayCqWcmCoreImplServletsContentfinderConnectorConnectorVie') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'item.resource.types'
    ];

request_params('ComDayCqWcmCoreImplServletsContentfinderPageViewHandler') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'guessTotal',
        'tagTitleSearch'
    ];

request_params('ComDayCqWcmCoreImplServletsFindReplaceServlet') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'scope'
    ];

request_params('ComDayCqWcmCoreImplServletsReferenceSearchServlet') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'referencesearchservlet.maxReferencesPerPage',
        'referencesearchservlet.maxPages'
    ];

request_params('ComDayCqWcmCoreImplServletsThumbnailServlet') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'workspace',
        'dimensions'
    ];

request_params('ComDayCqWcmCoreImplUtilsDefaultPageNameValidator') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'nonValidChars'
    ];

request_params('ComDayCqWcmCoreImplVariantsPageVariantsProviderImpl') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'default.externalizer.domain'
    ];

request_params('ComDayCqWcmCoreImplVersionManagerImpl') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'versionmanager.createVersionOnActivation',
        'versionmanager.purgingEnabled',
        'versionmanager.purgePaths',
        'versionmanager.ivPaths',
        'versionmanager.maxAgeDays',
        'versionmanager.maxNumberVersions',
        'versionmanager.minNumberVersions'
    ];

request_params('ComDayCqWcmCoreImplVersionPurgeTask') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'versionpurge.paths',
        'versionpurge.recursive',
        'versionpurge.maxVersions',
        'versionpurge.minVersions',
        'versionpurge.maxAgeDays'
    ];

request_params('ComDayCqWcmCoreImplWCMDebugFilter') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'wcmdbgfilter.enabled',
        'wcmdbgfilter.jspDebug'
    ];

request_params('ComDayCqWcmCoreImplWCMDeveloperModeFilter') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'wcmdevmodefilter.enabled'
    ];

request_params('ComDayCqWcmCoreImplWarpTimeWarpFilter') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'filter.order',
        'filter.scope'
    ];

request_params('ComDayCqWcmCoreMvtMVTStatisticsImpl') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'mvtstatistics.trackingurl'
    ];

request_params('ComDayCqWcmCoreStatsPageViewStatisticsImpl') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'pageviewstatistics.trackingurl',
        'pageviewstatistics.trackingscript.enabled'
    ];

request_params('ComDayCqWcmCoreWCMRequestFilter') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'wcmfilter.mode'
    ];

request_params('ComDayCqWcmDesignimporterDesignPackageImporter') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'extract.filter'
    ];

request_params('ComDayCqWcmDesignimporterImplCanvasBuilderImpl') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'filepattern',
        'build.page.nodes',
        'build.client.libs',
        'build.canvas.component'
    ];

request_params('ComDayCqWcmDesignimporterImplCanvasPageDeleteHandler') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'minThreadPoolSize',
        'maxThreadPoolSize'
    ];

request_params('ComDayCqWcmDesignimporterImplEntryPreprocessorImpl') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'search.pattern',
        'replace.pattern'
    ];

request_params('ComDayCqWcmDesignimporterImplMobileCanvasBuilderImpl') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'filepattern',
        'device.groups',
        'build.page.nodes',
        'build.client.libs',
        'build.canvas.component'
    ];

request_params('ComDayCqWcmDesignimporterParserTaghandlersFactoryCanvasCompone') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'service.ranking',
        'tagpattern'
    ];

request_params('ComDayCqWcmDesignimporterParserTaghandlersFactoryDefaultCompon') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'service.ranking',
        'tagpattern'
    ];

request_params('ComDayCqWcmDesignimporterParserTaghandlersFactoryDefaultTagHan') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'service.ranking',
        'tagpattern'
    ];

request_params('ComDayCqWcmDesignimporterParserTaghandlersFactoryHeadTagHandle') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'service.ranking',
        'tagpattern'
    ];

request_params('ComDayCqWcmDesignimporterParserTaghandlersFactoryIFrameTagHand') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'service.ranking',
        'tagpattern'
    ];

request_params('ComDayCqWcmDesignimporterParserTaghandlersFactoryImageComponen') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'service.ranking',
        'tagpattern',
        'component.resourceType'
    ];

request_params('ComDayCqWcmDesignimporterParserTaghandlersFactoryImgTagHandler') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'service.ranking',
        'tagpattern'
    ];

request_params('ComDayCqWcmDesignimporterParserTaghandlersFactoryInlineScriptT') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'service.ranking',
        'tagpattern'
    ];

request_params('ComDayCqWcmDesignimporterParserTaghandlersFactoryLinkTagHandle') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'service.ranking',
        'tagpattern'
    ];

request_params('ComDayCqWcmDesignimporterParserTaghandlersFactoryMetaTagHandle') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'service.ranking',
        'tagpattern'
    ];

request_params('ComDayCqWcmDesignimporterParserTaghandlersFactoryNonScriptTagH') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'service.ranking',
        'tagpattern'
    ];

request_params('ComDayCqWcmDesignimporterParserTaghandlersFactoryParsysCompone') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'service.ranking',
        'tagpattern',
        'component.resourceType'
    ];

request_params('ComDayCqWcmDesignimporterParserTaghandlersFactoryScriptTagHand') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'service.ranking',
        'tagpattern'
    ];

request_params('ComDayCqWcmDesignimporterParserTaghandlersFactoryStyleTagHandl') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'service.ranking',
        'tagpattern'
    ];

request_params('ComDayCqWcmDesignimporterParserTaghandlersFactoryTextComponent') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'service.ranking',
        'tagpattern',
        'component.resourceType'
    ];

request_params('ComDayCqWcmDesignimporterParserTaghandlersFactoryTitleComponen') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'service.ranking',
        'tagpattern',
        'component.resourceType'
    ];

request_params('ComDayCqWcmDesignimporterParserTaghandlersFactoryTitleTagHandl') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'service.ranking',
        'tagpattern'
    ];

request_params('ComDayCqWcmFoundationFormsImplFormChooserServlet') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'service.name',
        'sling.servlet.resourceTypes',
        'sling.servlet.selectors',
        'sling.servlet.methods',
        'forms.formchooserservlet.advansesearch.require'
    ];

request_params('ComDayCqWcmFoundationFormsImplFormParagraphPostProcessor') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'forms.formparagraphpostprocessor.enabled',
        'forms.formparagraphpostprocessor.formresourcetypes'
    ];

request_params('ComDayCqWcmFoundationFormsImplFormsHandlingServlet') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'name.whitelist',
        'allow.expressions'
    ];

request_params('ComDayCqWcmFoundationFormsImplMailServlet') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'sling.servlet.resourceTypes',
        'sling.servlet.selectors',
        'resource.whitelist',
        'resource.blacklist'
    ];

request_params('ComDayCqWcmFoundationImplAdaptiveImageComponentServlet') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'adapt.supported.widths'
    ];

request_params('ComDayCqWcmFoundationImplHTTPAuthHandler') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'path',
        'auth.http.nologin',
        'auth.http.realm',
        'auth.default.loginpage',
        'auth.cred.form',
        'auth.cred.utf8'
    ];

request_params('ComDayCqWcmFoundationImplPageImpressionsTracker') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'sling.auth.requirements'
    ];

request_params('ComDayCqWcmFoundationImplPageRedirectServlet') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'excluded.resource.types'
    ];

request_params('ComDayCqWcmFoundationSecurityImplDefaultAttachmentTypeBlacklist') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'default.attachment.type.blacklist',
        'baseline.attachment.type.blacklist'
    ];

request_params('ComDayCqWcmFoundationSecurityImplSaferSlingPostValidatorImpl') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'parameter.whitelist',
        'parameter.whitelist.prefixes',
        'binary.parameter.whitelist',
        'modifier.whitelist',
        'operation.whitelist',
        'operation.whitelist.prefixes',
        'typehint.whitelist',
        'resourcetype.whitelist'
    ];

request_params('ComDayCqWcmMobileCoreImplDeviceDeviceInfoTransformerFactory') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'device.info.transformer.enabled',
        'device.info.transformer.css.style'
    ];

request_params('ComDayCqWcmMobileCoreImplRedirectRedirectFilter') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'redirect.enabled',
        'redirect.stats.enabled',
        'redirect.extensions',
        'redirect.paths'
    ];

request_params('ComDayCqWcmMsmImplActionsContentCopyActionFactory') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'cq.wcm.msm.action.excludednodetypes',
        'cq.wcm.msm.action.excludedparagraphitems',
        'cq.wcm.msm.action.excludedprops',
        'contentcopyaction.order.style'
    ];

request_params('ComDayCqWcmMsmImplActionsContentDeleteActionFactory') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'cq.wcm.msm.action.excludednodetypes',
        'cq.wcm.msm.action.excludedparagraphitems',
        'cq.wcm.msm.action.excludedprops'
    ];

request_params('ComDayCqWcmMsmImplActionsContentUpdateActionFactory') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'cq.wcm.msm.action.excludednodetypes',
        'cq.wcm.msm.action.excludedparagraphitems',
        'cq.wcm.msm.action.excludedprops',
        'cq.wcm.msm.action.ignoredMixin'
    ];

request_params('ComDayCqWcmMsmImplActionsOrderChildrenActionFactory') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'cq.wcm.msm.action.excludednodetypes',
        'cq.wcm.msm.action.excludedparagraphitems',
        'cq.wcm.msm.action.excludedprops'
    ];

request_params('ComDayCqWcmMsmImplActionsPageMoveActionFactory') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'cq.wcm.msm.action.excludednodetypes',
        'cq.wcm.msm.action.excludedparagraphitems',
        'cq.wcm.msm.action.excludedprops',
        'cq.wcm.msm.impl.actions.pagemove.prop_referenceUpdate'
    ];

request_params('ComDayCqWcmMsmImplActionsReferencesUpdateActionFactory') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'cq.wcm.msm.action.excludednodetypes',
        'cq.wcm.msm.action.excludedparagraphitems',
        'cq.wcm.msm.action.excludedprops',
        'cq.wcm.msm.impl.action.referencesupdate.prop_updateNested'
    ];

request_params('ComDayCqWcmMsmImplActionsVersionCopyActionFactory') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'cq.wcm.msm.action.excludednodetypes',
        'cq.wcm.msm.action.excludedparagraphitems',
        'cq.wcm.msm.action.excludedprops'
    ];

request_params('ComDayCqWcmMsmImplLiveRelationshipManagerImpl') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'liverelationshipmgr.relationsconfig.default'
    ];

request_params('ComDayCqWcmMsmImplRolloutManagerImpl') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'event.filter',
        'rolloutmgr.excludedprops.default',
        'rolloutmgr.excludedparagraphprops.default',
        'rolloutmgr.excludednodetypes.default',
        'rolloutmgr.threadpool.maxsize',
        'rolloutmgr.threadpool.maxshutdowntime',
        'rolloutmgr.threadpool.priority',
        'rolloutmgr.commit.size',
        'rolloutmgr.conflicthandling.enabled'
    ];

request_params('ComDayCqWcmMsmImplServletsAuditLogServlet') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'auditlogservlet.default.events.count',
        'auditlogservlet.default.path'
    ];

request_params('ComDayCqWcmNotificationEmailImplEmailChannel') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'email.from'
    ];

request_params('ComDayCqWcmNotificationImplNotificationManagerImpl') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'event.topics'
    ];

request_params('ComDayCqWcmScriptingImplBVPManager') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'com.day.cq.wcm.scripting.bvp.script.engines'
    ];

request_params('ComDayCqWcmUndoUndoConfig') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'cq.wcm.undo.enabled',
        'cq.wcm.undo.path',
        'cq.wcm.undo.validity',
        'cq.wcm.undo.steps',
        'cq.wcm.undo.persistence',
        'cq.wcm.undo.persistence.mode',
        'cq.wcm.undo.markermode',
        'cq.wcm.undo.whitelist',
        'cq.wcm.undo.blacklist'
    ];

request_params('ComDayCqWcmWebservicesupportImplReplicationEventListener') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'Flush agents'
    ];

request_params('ComDayCqWcmWorkflowImplWcmWorkflowServiceImpl') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'event.filter',
        'minThreadPoolSize',
        'maxThreadPoolSize',
        'cq.wcm.workflow.terminate.on.activate',
        'cq.wcm.worklfow.terminate.exclusion.list'
    ];

request_params('ComDayCqWcmWorkflowImplWorkflowPackageInfoProvider') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'workflowpackageinfoprovider.filter',
        'workflowpackageinfoprovider.filter.rootpath'
    ];

request_params('ComDayCqWidgetImplHtmlLibraryManagerImpl') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'htmllibmanager.clientmanager',
        'htmllibmanager.debug',
        'htmllibmanager.debug.console',
        'htmllibmanager.debug.init.js',
        'htmllibmanager.defaultthemename',
        'htmllibmanager.defaultuserthemename',
        'htmllibmanager.firebuglite.path',
        'htmllibmanager.forceCQUrlInfo',
        'htmllibmanager.gzip',
        'htmllibmanager.maxage',
        'htmllibmanager.maxDataUriSize',
        'htmllibmanager.minify',
        'htmllibmanager.path.list',
        'htmllibmanager.timing'
    ];

request_params('ComDayCqWidgetImplWidgetExtensionProviderImpl') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'extendable.widgets',
        'widgetextensionprovider.debug'
    ];

request_params('ComDayCqWorkflowImplEmailEMailNotificationService') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'from.address',
        'host.prefix',
        'notify.onabort',
        'notify.oncomplete',
        'notify.oncontainercomplete',
        'notify.useronly'
    ];

request_params('ComDayCqWorkflowImplEmailTaskEMailNotificationService') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'notify.onupdate',
        'notify.oncomplete'
    ];

request_params('ComDayCrxSecurityTokenImplImplTokenAuthenticationHandler') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'path',
        'token.required.attr',
        'token.alternate.url',
        'token.encapsulated',
        'skip.token.refresh'
    ];

request_params('ComDayCrxSecurityTokenImplTokenCleanupTask') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'enable.token.cleanup.task',
        'scheduler.expression',
        'batch.size'
    ];

request_params('GuideLocalizationService') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'supportedLocales',
        'Localizable Properties'
    ];

request_params('MessagingUserComponentFactory') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'priority'
    ];

request_params('OrgApacheAriesJmxFrameworkStateConfig') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'attributeChangeNotificationEnabled'
    ];

request_params('OrgApacheFelixEventadminImplEventAdmin') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'org.apache.felix.eventadmin.ThreadPoolSize',
        'org.apache.felix.eventadmin.AsyncToSyncThreadRatio',
        'org.apache.felix.eventadmin.Timeout',
        'org.apache.felix.eventadmin.RequireTopic',
        'org.apache.felix.eventadmin.IgnoreTimeout',
        'org.apache.felix.eventadmin.IgnoreTopic'
    ];

request_params('OrgApacheFelixHttp') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'org.apache.felix.http.host',
        'org.apache.felix.http.enable',
        'org.osgi.service.http.port',
        'org.apache.felix.http.timeout',
        'org.apache.felix.https.enable',
        'org.osgi.service.http.port.secure',
        'org.apache.felix.https.keystore',
        'org.apache.felix.https.keystore.password',
        'org.apache.felix.https.keystore.key.password',
        'org.apache.felix.https.truststore',
        'org.apache.felix.https.truststore.password',
        'org.apache.felix.https.clientcertificate',
        'org.apache.felix.http.context_path',
        'org.apache.felix.http.mbeans',
        'org.apache.felix.http.session.timeout',
        'org.apache.felix.http.jetty.threadpool.max',
        'org.apache.felix.http.jetty.acceptors',
        'org.apache.felix.http.jetty.selectors',
        'org.apache.felix.http.jetty.headerBufferSize',
        'org.apache.felix.http.jetty.requestBufferSize',
        'org.apache.felix.http.jetty.responseBufferSize',
        'org.apache.felix.http.jetty.maxFormSize',
        'org.apache.felix.http.path_exclusions',
        'org.apache.felix.https.jetty.ciphersuites.excluded',
        'org.apache.felix.https.jetty.ciphersuites.included',
        'org.apache.felix.http.jetty.sendServerHeader',
        'org.apache.felix.https.jetty.protocols.included',
        'org.apache.felix.https.jetty.protocols.excluded',
        'org.apache.felix.proxy.load.balancer.connection.enable',
        'org.apache.felix.https.jetty.renegotiateAllowed',
        'org.apache.felix.https.jetty.session.cookie.httpOnly',
        'org.apache.felix.https.jetty.session.cookie.secure',
        'org.eclipse.jetty.servlet.SessionIdPathParameterName',
        'org.eclipse.jetty.servlet.CheckingRemoteSessionIdEncoding',
        'org.eclipse.jetty.servlet.SessionCookie',
        'org.eclipse.jetty.servlet.SessionDomain',
        'org.eclipse.jetty.servlet.SessionPath',
        'org.eclipse.jetty.servlet.MaxAge',
        'org.apache.felix.http.name',
        'org.apache.felix.jetty.gziphandler.enable',
        'org.apache.felix.jetty.gzip.minGzipSize',
        'org.apache.felix.jetty.gzip.compressionLevel',
        'org.apache.felix.jetty.gzip.inflateBufferSize',
        'org.apache.felix.jetty.gzip.syncFlush',
        'org.apache.felix.jetty.gzip.excludedUserAgents',
        'org.apache.felix.jetty.gzip.includedMethods',
        'org.apache.felix.jetty.gzip.excludedMethods',
        'org.apache.felix.jetty.gzip.includedPaths',
        'org.apache.felix.jetty.gzip.excludedPaths',
        'org.apache.felix.jetty.gzip.includedMimeTypes',
        'org.apache.felix.jetty.gzip.excludedMimeTypes',
        'org.apache.felix.http.session.invalidate',
        'org.apache.felix.http.session.uniqueid'
    ];

request_params('OrgApacheFelixHttpSslfilterSslFilter') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'ssl-forward.header',
        'ssl-forward.value',
        'ssl-forward-cert.header',
        'rewrite.absolute.urls'
    ];

request_params('OrgApacheFelixJaasConfigurationFactory') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'jaas.controlFlag',
        'jaas.ranking',
        'jaas.realmName',
        'jaas.classname',
        'jaas.options'
    ];

request_params('OrgApacheFelixJaasConfigurationSpi') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'jaas.defaultRealmName',
        'jaas.configProviderName',
        'jaas.globalConfigPolicy'
    ];

request_params('OrgApacheFelixScrScrService') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'ds.loglevel',
        'ds.factory.enabled',
        'ds.delayed.keepInstances',
        'ds.lock.timeout.milliseconds',
        'ds.stop.timeout.milliseconds',
        'ds.global.extender'
    ];

request_params('OrgApacheFelixSystemreadyImplComponentsCheck') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'components.list',
        'type'
    ];

request_params('OrgApacheFelixSystemreadyImplFrameworkStartCheck') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'timeout',
        'target.start.level',
        'target.start.level.prop.name',
        'type'
    ];

request_params('OrgApacheFelixSystemreadyImplServicesCheck') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'services.list',
        'type'
    ];

request_params('OrgApacheFelixSystemreadyImplServletSystemAliveServlet') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'osgi.http.whiteboard.servlet.pattern',
        'osgi.http.whiteboard.context.select'
    ];

request_params('OrgApacheFelixSystemreadyImplServletSystemReadyServlet') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'osgi.http.whiteboard.servlet.pattern',
        'osgi.http.whiteboard.context.select'
    ];

request_params('OrgApacheFelixSystemreadySystemReadyMonitor') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'poll.interval'
    ];

request_params('OrgApacheFelixWebconsoleInternalServletOsgiManager') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'manager.root',
        'http.service.filter',
        'default.render',
        'realm',
        'username',
        'password',
        'category',
        'locale',
        'loglevel',
        'plugins'
    ];

request_params('OrgApacheFelixWebconsolePluginsEventInternalPluginServlet') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'max.size'
    ];

request_params('OrgApacheFelixWebconsolePluginsMemoryusageInternalMemoryUsageCo') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'felix.memoryusage.dump.threshold',
        'felix.memoryusage.dump.interval',
        'felix.memoryusage.dump.location'
    ];

request_params('OrgApacheHttpProxyconfigurator') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'proxy.enabled',
        'proxy.host',
        'proxy.port',
        'proxy.user',
        'proxy.password',
        'proxy.exceptions'
    ];

request_params('OrgApacheJackrabbitOakPluginsBlobDatastoreDataStoreTextProvider') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'dir'
    ];

request_params('OrgApacheJackrabbitOakPluginsBlobDatastoreFileDataStore') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'path'
    ];

request_params('OrgApacheJackrabbitOakPluginsDocumentDocumentNodeStoreService') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'mongouri',
        'db',
        'socketKeepAlive',
        'cache',
        'nodeCachePercentage',
        'prevDocCachePercentage',
        'childrenCachePercentage',
        'diffCachePercentage',
        'cacheSegmentCount',
        'cacheStackMoveDistance',
        'blobCacheSize',
        'persistentCache',
        'journalCache',
        'customBlobStore',
        'journalGCInterval',
        'journalGCMaxAge',
        'prefetchExternalChanges',
        'role',
        'versionGcMaxAgeInSecs',
        'versionGCExpression',
        'versionGCTimeLimitInSecs',
        'blobGcMaxAgeInSecs',
        'blobTrackSnapshotIntervalInSecs',
        'repository.home',
        'maxReplicationLagInSecs',
        'documentStoreType',
        'bundlingDisabled',
        'updateLimit',
        'persistentCacheIncludes',
        'leaseCheckMode'
    ];

request_params('OrgApacheJackrabbitOakPluginsDocumentDocumentNodeStoreServicePre') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'persistentCacheIncludes'
    ];

request_params('OrgApacheJackrabbitOakPluginsDocumentSecondarySecondaryStoreCac') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'includedPaths',
        'enableAsyncObserver',
        'observerQueueSize'
    ];

request_params('OrgApacheJackrabbitOakPluginsIndexAsyncIndexerService') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'asyncConfigs',
        'leaseTimeOutMinutes',
        'failingIndexTimeoutSeconds',
        'errorWarnIntervalSeconds'
    ];

request_params('OrgApacheJackrabbitOakPluginsIndexLuceneLuceneIndexProviderServ') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'disabled',
        'debug',
        'localIndexDir',
        'enableOpenIndexAsync',
        'threadPoolSize',
        'prefetchIndexFiles',
        'extractedTextCacheSizeInMB',
        'extractedTextCacheExpiryInSecs',
        'alwaysUsePreExtractedCache',
        'booleanClauseLimit',
        'enableHybridIndexing',
        'hybridQueueSize',
        'disableStoredIndexDefinition',
        'deletedBlobsCollectionEnabled',
        'propIndexCleanerIntervalInSecs',
        'enableSingleBlobIndexFiles'
    ];

request_params('OrgApacheJackrabbitOakPluginsIndexSolrOsgiEmbeddedSolrServerCo') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'solr.home.path',
        'solr.core.name'
    ];

request_params('OrgApacheJackrabbitOakPluginsIndexSolrOsgiNodeStateSolrServers') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'enabled'
    ];

request_params('OrgApacheJackrabbitOakPluginsIndexSolrOsgiOakSolrConfiguration') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'path.desc.field',
        'path.child.field',
        'path.parent.field',
        'path.exact.field',
        'catch.all.field',
        'collapsed.path.field',
        'path.depth.field',
        'commit.policy',
        'rows',
        'path.restrictions',
        'property.restrictions',
        'primarytypes.restrictions',
        'ignored.properties',
        'used.properties',
        'type.mappings',
        'property.mappings',
        'collapse.jcrcontent.nodes'
    ];

request_params('OrgApacheJackrabbitOakPluginsIndexSolrOsgiRemoteSolrServerConf') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'solr.http.url',
        'solr.zk.host',
        'solr.collection',
        'solr.socket.timeout',
        'solr.connection.timeout',
        'solr.shards.no',
        'solr.replication.factor',
        'solr.conf.dir'
    ];

request_params('OrgApacheJackrabbitOakPluginsIndexSolrOsgiSolrQueryIndexProvid') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'query.aggregation'
    ];

request_params('OrgApacheJackrabbitOakPluginsIndexSolrOsgiSolrServerProviderSe') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'server.type'
    ];

request_params('OrgApacheJackrabbitOakPluginsMetricStatisticsProviderFactory') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'providerType'
    ];

request_params('OrgApacheJackrabbitOakPluginsObservationChangeCollectorProvider') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'maxItems',
        'maxPathDepth',
        'enabled'
    ];

request_params('OrgApacheJackrabbitOakQueryQueryEngineSettingsService') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'queryLimitInMemory',
        'queryLimitReads',
        'queryFailTraversal',
        'fastQuerySize'
    ];

request_params('OrgApacheJackrabbitOakSecurityAuthenticationAuthenticationConfig') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'org.apache.jackrabbit.oak.authentication.appName',
        'org.apache.jackrabbit.oak.authentication.configSpiName'
    ];

request_params('OrgApacheJackrabbitOakSecurityAuthenticationLdapImplLdapIdenti') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'provider.name',
        'host.name',
        'host.port',
        'host.ssl',
        'host.tls',
        'host.noCertCheck',
        'bind.dn',
        'bind.password',
        'searchTimeout',
        'adminPool.maxActive',
        'adminPool.lookupOnValidate',
        'userPool.maxActive',
        'userPool.lookupOnValidate',
        'user.baseDN',
        'user.objectclass',
        'user.idAttribute',
        'user.extraFilter',
        'user.makeDnPath',
        'group.baseDN',
        'group.objectclass',
        'group.nameAttribute',
        'group.extraFilter',
        'group.makeDnPath',
        'group.memberAttribute',
        'useUidForExtId',
        'customattributes'
    ];

request_params('OrgApacheJackrabbitOakSecurityAuthenticationTokenTokenConfigura') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'tokenExpiration',
        'tokenLength',
        'tokenRefresh',
        'tokenCleanupThreshold',
        'passwordHashAlgorithm',
        'passwordHashIterations',
        'passwordSaltSize'
    ];

request_params('OrgApacheJackrabbitOakSecurityAuthorizationAuthorizationConfigur') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'permissionsJr2',
        'importBehavior',
        'readPaths',
        'administrativePrincipals',
        'configurationRanking'
    ];

request_params('OrgApacheJackrabbitOakSecurityInternalSecurityProviderRegistrati') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'requiredServicePids',
        'authorizationCompositionType'
    ];

request_params('OrgApacheJackrabbitOakSecurityUserRandomAuthorizableNodeName') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'length'
    ];

request_params('OrgApacheJackrabbitOakSecurityUserUserConfigurationImpl') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'usersPath',
        'groupsPath',
        'systemRelativePath',
        'defaultDepth',
        'importBehavior',
        'passwordHashAlgorithm',
        'passwordHashIterations',
        'passwordSaltSize',
        'omitAdminPw',
        'supportAutoSave',
        'passwordMaxAge',
        'initialPasswordChange',
        'passwordHistorySize',
        'passwordExpiryForAdmin',
        'cacheExpiration',
        'enableRFC7613UsercaseMappedProfile'
    ];

request_params('OrgApacheJackrabbitOakSegmentAzureAzureSegmentStoreService') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'accountName',
        'containerName',
        'accessKey',
        'rootPath',
        'connectionURL'
    ];

request_params('OrgApacheJackrabbitOakSegmentSegmentNodeStoreFactory') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'repository.home',
        'tarmk.mode',
        'tarmk.size',
        'segmentCache.size',
        'stringCache.size',
        'templateCache.size',
        'stringDeduplicationCache.size',
        'templateDeduplicationCache.size',
        'nodeDeduplicationCache.size',
        'pauseCompaction',
        'compaction.retryCount',
        'compaction.force.timeout',
        'compaction.sizeDeltaEstimation',
        'compaction.disableEstimation',
        'compaction.retainedGenerations',
        'compaction.memoryThreshold',
        'compaction.progressLog',
        'standby',
        'customBlobStore',
        'customSegmentStore',
        'splitPersistence',
        'repository.backup.dir',
        'blobGcMaxAgeInSecs',
        'blobTrackSnapshotIntervalInSecs',
        'role',
        'registerDescriptors',
        'dispatchChanges'
    ];

request_params('OrgApacheJackrabbitOakSegmentSegmentNodeStoreMonitorService') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'commitsTrackerWriterGroups'
    ];

request_params('OrgApacheJackrabbitOakSegmentSegmentNodeStoreService') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'repository.home',
        'tarmk.mode',
        'tarmk.size',
        'segmentCache.size',
        'stringCache.size',
        'templateCache.size',
        'stringDeduplicationCache.size',
        'templateDeduplicationCache.size',
        'nodeDeduplicationCache.size',
        'pauseCompaction',
        'compaction.retryCount',
        'compaction.force.timeout',
        'compaction.sizeDeltaEstimation',
        'compaction.disableEstimation',
        'compaction.retainedGenerations',
        'compaction.memoryThreshold',
        'compaction.progressLog',
        'standby',
        'customBlobStore',
        'customSegmentStore',
        'splitPersistence',
        'repository.backup.dir',
        'blobGcMaxAgeInSecs',
        'blobTrackSnapshotIntervalInSecs'
    ];

request_params('OrgApacheJackrabbitOakSegmentStandbyStoreStandbyStoreService') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'org.apache.sling.installer.configuration.persist',
        'mode',
        'port',
        'primary.host',
        'interval',
        'primary.allowed-client-ip-ranges',
        'secure',
        'standby.readtimeout',
        'standby.autoclean'
    ];

request_params('OrgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplDe') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'handler.name',
        'user.expirationTime',
        'user.autoMembership',
        'user.propertyMapping',
        'user.pathPrefix',
        'user.membershipExpTime',
        'user.membershipNestingDepth',
        'user.dynamicMembership',
        'user.disableMissing',
        'group.expirationTime',
        'group.autoMembership',
        'group.propertyMapping',
        'group.pathPrefix',
        'enableRFC7613UsercaseMappedProfile'
    ];

request_params('OrgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplEx') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'jaas.ranking',
        'jaas.controlFlag',
        'jaas.realmName',
        'idp.name',
        'sync.handlerName'
    ];

request_params('OrgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplPr') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'protectExternalId'
    ];

request_params('OrgApacheJackrabbitOakSpiSecurityAuthorizationCugImplCugConfi') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'cugSupportedPaths',
        'cugEnabled',
        'configurationRanking'
    ];

request_params('OrgApacheJackrabbitOakSpiSecurityAuthorizationCugImplCugExclu') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'principalNames'
    ];

request_params('OrgApacheJackrabbitOakSpiSecurityUserActionDefaultAuthorizable') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'enabledActions',
        'userPrivilegeNames',
        'groupPrivilegeNames',
        'constraint'
    ];

request_params('OrgApacheJackrabbitVaultPackagingImplPackagingImpl') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'packageRoots'
    ];

request_params('OrgApacheJackrabbitVaultPackagingRegistryImplFSPackageRegistry') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'homePath'
    ];

request_params('OrgApacheSlingAuthCoreImplLogoutServlet') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'sling.servlet.methods',
        'sling.servlet.paths'
    ];

request_params('OrgApacheSlingCaconfigImplConfigurationBindingsValueProvider') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'enabled'
    ];

request_params('OrgApacheSlingCaconfigImplConfigurationResolverImpl') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'configBucketNames'
    ];

request_params('OrgApacheSlingCaconfigImplDefDefaultConfigurationInheritanceStra') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'enabled',
        'configPropertyInheritancePropertyNames'
    ];

request_params('OrgApacheSlingCaconfigImplDefDefaultConfigurationPersistenceStra') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'enabled'
    ];

request_params('OrgApacheSlingCaconfigImplOverrideOsgiConfigurationOverrideProvi') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'description',
        'overrides',
        'enabled',
        'service.ranking'
    ];

request_params('OrgApacheSlingCaconfigImplOverrideSystemPropertyConfigurationOve') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'enabled',
        'service.ranking'
    ];

request_params('OrgApacheSlingCaconfigManagementImplConfigurationManagementSetti') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'ignorePropertyNameRegex',
        'configCollectionPropertiesResourceNames'
    ];

request_params('OrgApacheSlingCaconfigResourceImplDefDefaultConfigurationResour') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'enabled',
        'configPath',
        'fallbackPaths',
        'configCollectionInheritancePropertyNames'
    ];

request_params('OrgApacheSlingCaconfigResourceImplDefDefaultContextPathStrategy') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'enabled',
        'configRefResourceNames',
        'configRefPropertyNames',
        'service.ranking'
    ];

request_params('OrgApacheSlingCommonsHtmlInternalTagsoupHtmlParser') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'parser.features'
    ];

request_params('OrgApacheSlingCommonsLogLogManager') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'org.apache.sling.commons.log.level',
        'org.apache.sling.commons.log.file',
        'org.apache.sling.commons.log.file.number',
        'org.apache.sling.commons.log.file.size',
        'org.apache.sling.commons.log.pattern',
        'org.apache.sling.commons.log.configurationFile',
        'org.apache.sling.commons.log.packagingDataEnabled',
        'org.apache.sling.commons.log.maxCallerDataDepth',
        'org.apache.sling.commons.log.maxOldFileCountInDump',
        'org.apache.sling.commons.log.numOfLines'
    ];

request_params('OrgApacheSlingCommonsLogLogManagerFactoryConfig') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'org.apache.sling.commons.log.level',
        'org.apache.sling.commons.log.file',
        'org.apache.sling.commons.log.pattern',
        'org.apache.sling.commons.log.names',
        'org.apache.sling.commons.log.additiv'
    ];

request_params('OrgApacheSlingCommonsLogLogManagerFactoryWriter') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'org.apache.sling.commons.log.file',
        'org.apache.sling.commons.log.file.number',
        'org.apache.sling.commons.log.file.size',
        'org.apache.sling.commons.log.file.buffered'
    ];

request_params('OrgApacheSlingCommonsMetricsInternalLogReporter') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'period',
        'timeUnit',
        'level',
        'loggerName',
        'prefix',
        'pattern',
        'registryName'
    ];

request_params('OrgApacheSlingCommonsMetricsRrd4jImplCodahaleMetricsReporter') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'datasources',
        'step',
        'archives',
        'path'
    ];

request_params('OrgApacheSlingCommonsMimeInternalMimeTypeServiceImpl') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'mime.types'
    ];

request_params('OrgApacheSlingCommonsSchedulerImplQuartzScheduler') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'poolName',
        'allowedPoolNames',
        'scheduler.useleaderforsingle',
        'metrics.filters',
        'slowThresholdMillis'
    ];

request_params('OrgApacheSlingCommonsSchedulerImplSchedulerHealthCheck') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'max.quartzJob.duration.acceptable'
    ];

request_params('OrgApacheSlingCommonsThreadsImplDefaultThreadPoolFactory') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'name',
        'minPoolSize',
        'maxPoolSize',
        'queueSize',
        'maxThreadAge',
        'keepAliveTime',
        'blockPolicy',
        'shutdownGraceful',
        'daemon',
        'shutdownWaitTime',
        'priority'
    ];

request_params('OrgApacheSlingDatasourceDataSourceFactory') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'datasource.name',
        'datasource.svc.prop.name',
        'driverClassName',
        'url',
        'username',
        'password',
        'defaultAutoCommit',
        'defaultReadOnly',
        'defaultTransactionIsolation',
        'defaultCatalog',
        'maxActive',
        'maxIdle',
        'minIdle',
        'initialSize',
        'maxWait',
        'maxAge',
        'testOnBorrow',
        'testOnReturn',
        'testWhileIdle',
        'validationQuery',
        'validationQueryTimeout',
        'timeBetweenEvictionRunsMillis',
        'minEvictableIdleTimeMillis',
        'connectionProperties',
        'initSQL',
        'jdbcInterceptors',
        'validationInterval',
        'logValidationErrors',
        'datasource.svc.properties'
    ];

request_params('OrgApacheSlingDatasourceJNDIDataSourceFactory') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'datasource.name',
        'datasource.svc.prop.name',
        'datasource.jndi.name',
        'jndi.properties'
    ];

request_params('OrgApacheSlingDiscoveryOakConfig') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'connectorPingTimeout',
        'connectorPingInterval',
        'discoveryLiteCheckInterval',
        'clusterSyncServiceTimeout',
        'clusterSyncServiceInterval',
        'enableSyncToken',
        'minEventDelay',
        'socketConnectTimeout',
        'soTimeout',
        'topologyConnectorUrls',
        'topologyConnectorWhitelist',
        'autoStopLocalLoopEnabled',
        'gzipConnectorRequestsEnabled',
        'hmacEnabled',
        'enableEncryption',
        'sharedKey',
        'hmacSharedKeyTTL',
        'backoffStandbyFactor',
        'backoffStableFactor'
    ];

request_params('OrgApacheSlingDiscoveryOakSynchronizedClocksHealthCheck') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'hc.name',
        'hc.tags',
        'hc.mbean.name'
    ];

request_params('OrgApacheSlingDistributionAgentImplForwardDistributionAgentFacto') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'name',
        'title',
        'details',
        'enabled',
        'serviceName',
        'log.level',
        'allowed.roots',
        'queue.processing.enabled',
        'packageImporter.endpoints',
        'passiveQueues',
        'priorityQueues',
        'retry.strategy',
        'retry.attempts',
        'requestAuthorizationStrategy.target',
        'transportSecretProvider.target',
        'packageBuilder.target',
        'triggers.target',
        'queue.provider',
        'async.delivery',
        'http.conn.timeout'
    ];

request_params('OrgApacheSlingDistributionAgentImplPrivilegeDistributionRequestA') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'name',
        'jcrPrivilege'
    ];

request_params('OrgApacheSlingDistributionAgentImplQueueDistributionAgentFactory') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'name',
        'title',
        'details',
        'enabled',
        'serviceName',
        'log.level',
        'allowed.roots',
        'requestAuthorizationStrategy.target',
        'queueProviderFactory.target',
        'packageBuilder.target',
        'triggers.target',
        'priorityQueues'
    ];

request_params('OrgApacheSlingDistributionAgentImplReverseDistributionAgentFacto') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'name',
        'title',
        'details',
        'enabled',
        'serviceName',
        'log.level',
        'queue.processing.enabled',
        'packageExporter.endpoints',
        'pull.items',
        'http.conn.timeout',
        'requestAuthorizationStrategy.target',
        'transportSecretProvider.target',
        'packageBuilder.target',
        'triggers.target'
    ];

request_params('OrgApacheSlingDistributionAgentImplSimpleDistributionAgentFactor') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'name',
        'title',
        'details',
        'enabled',
        'serviceName',
        'log.level',
        'queue.processing.enabled',
        'packageExporter.target',
        'packageImporter.target',
        'requestAuthorizationStrategy.target',
        'triggers.target'
    ];

request_params('OrgApacheSlingDistributionAgentImplSyncDistributionAgentFactory') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'name',
        'title',
        'details',
        'enabled',
        'serviceName',
        'log.level',
        'queue.processing.enabled',
        'passiveQueues',
        'packageExporter.endpoints',
        'packageImporter.endpoints',
        'retry.strategy',
        'retry.attempts',
        'pull.items',
        'http.conn.timeout',
        'requestAuthorizationStrategy.target',
        'transportSecretProvider.target',
        'packageBuilder.target',
        'triggers.target'
    ];

request_params('OrgApacheSlingDistributionMonitorDistributionQueueHealthCheck') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'hc.name',
        'hc.tags',
        'hc.mbean.name',
        'numberOfRetriesAllowed'
    ];

request_params('OrgApacheSlingDistributionPackagingImplExporterAgentDistributio') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'name',
        'queue',
        'drop.invalid.items',
        'agent.target'
    ];

request_params('OrgApacheSlingDistributionPackagingImplExporterLocalDistributio') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'name',
        'packageBuilder.target'
    ];

request_params('OrgApacheSlingDistributionPackagingImplExporterRemoteDistributi') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'name',
        'endpoints',
        'pull.items',
        'packageBuilder.target',
        'transportSecretProvider.target'
    ];

request_params('OrgApacheSlingDistributionPackagingImplImporterLocalDistributio') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'name',
        'packageBuilder.target'
    ];

request_params('OrgApacheSlingDistributionPackagingImplImporterRemoteDistributi') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'name',
        'endpoints',
        'transportSecretProvider.target'
    ];

request_params('OrgApacheSlingDistributionPackagingImplImporterRepositoryDistri') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'name',
        'service.name',
        'path',
        'privilege.name'
    ];

request_params('OrgApacheSlingDistributionResourcesImplDistributionConfiguration') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'provider.roots',
        'kind'
    ];

request_params('OrgApacheSlingDistributionResourcesImplDistributionServiceResour') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'provider.roots',
        'kind'
    ];

request_params('OrgApacheSlingDistributionSerializationImplDistributionPackageBu') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'name',
        'type',
        'format.target',
        'tempFsFolder',
        'fileThreshold',
        'memoryUnit',
        'useOffHeapMemory',
        'digestAlgorithm',
        'monitoringQueueSize',
        'cleanupDelay',
        'package.filters',
        'property.filters'
    ];

request_params('OrgApacheSlingDistributionSerializationImplVltVaultDistribution') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'name',
        'type',
        'importMode',
        'aclHandling',
        'package.roots',
        'package.filters',
        'property.filters',
        'tempFsFolder',
        'useBinaryReferences',
        'autoSaveThreshold',
        'cleanupDelay',
        'fileThreshold',
        'MEGA_BYTES',
        'useOffHeapMemory',
        'digestAlgorithm',
        'monitoringQueueSize',
        'pathsMapping',
        'strictImport'
    ];

request_params('OrgApacheSlingDistributionTransportImplUserCredentialsDistributi') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'name',
        'username',
        'password'
    ];

request_params('OrgApacheSlingDistributionTriggerImplDistributionEventDistribute') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'name',
        'path'
    ];

request_params('OrgApacheSlingDistributionTriggerImplJcrEventDistributionTrigger') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'name',
        'path',
        'ignoredPathsPatterns',
        'serviceName',
        'deep'
    ];

request_params('OrgApacheSlingDistributionTriggerImplPersistedJcrEventDistributi') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'name',
        'path',
        'serviceName',
        'nuggetsPath'
    ];

request_params('OrgApacheSlingDistributionTriggerImplRemoteEventDistributionTrig') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'name',
        'endpoint',
        'transportSecretProvider.target'
    ];

request_params('OrgApacheSlingDistributionTriggerImplResourceEventDistributionTr') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'name',
        'path'
    ];

request_params('OrgApacheSlingDistributionTriggerImplScheduledDistributionTrigge') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'name',
        'path',
        'seconds',
        'serviceName'
    ];

request_params('OrgApacheSlingEngineImplAuthSlingAuthenticator') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'osgi.http.whiteboard.context.select',
        'osgi.http.whiteboard.listener',
        'auth.sudo.cookie',
        'auth.sudo.parameter',
        'auth.annonymous',
        'sling.auth.requirements',
        'sling.auth.anonymous.user',
        'sling.auth.anonymous.password',
        'auth.http',
        'auth.http.realm',
        'auth.uri.suffix'
    ];

request_params('OrgApacheSlingEngineImplDebugRequestProgressTrackerLogFilter') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'extensions',
        'minDurationMs',
        'maxDurationMs',
        'compactLogFormat'
    ];

request_params('OrgApacheSlingEngineImplLogRequestLogger') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'request.log.output',
        'request.log.outputtype',
        'request.log.enabled',
        'access.log.output',
        'access.log.outputtype',
        'access.log.enabled'
    ];

request_params('OrgApacheSlingEngineImplLogRequestLoggerService') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'request.log.service.format',
        'request.log.service.output',
        'request.log.service.outputtype',
        'request.log.service.onentry'
    ];

request_params('OrgApacheSlingEngineImplSlingMainServlet') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'sling.max.calls',
        'sling.max.inclusions',
        'sling.trace.allow',
        'sling.max.record.requests',
        'sling.store.pattern.requests',
        'sling.serverinfo',
        'sling.additional.response.headers'
    ];

request_params('OrgApacheSlingEngineParameters') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'sling.default.parameter.encoding',
        'sling.default.max.parameters',
        'file.location',
        'file.threshold',
        'file.max',
        'request.max',
        'sling.default.parameter.checkForAdditionalContainerParameters'
    ];

request_params('OrgApacheSlingEventImplEventingThreadPool') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'minPoolSize'
    ];

request_params('OrgApacheSlingEventImplJobsDefaultJobManager') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'queue.priority',
        'queue.retries',
        'queue.retrydelay',
        'queue.maxparallel'
    ];

request_params('OrgApacheSlingEventImplJobsJcrPersistenceHandler') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'job.consumermanager.disableDistribution',
        'startup.delay',
        'cleanup.period'
    ];

request_params('OrgApacheSlingEventImplJobsJobConsumerManager') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'org.apache.sling.installer.configuration.persist',
        'job.consumermanager.whitelist',
        'job.consumermanager.blacklist'
    ];

request_params('OrgApacheSlingEventJobsQueueConfiguration') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'queue.name',
        'queue.topics',
        'queue.type',
        'queue.priority',
        'queue.retries',
        'queue.retrydelay',
        'queue.maxparallel',
        'queue.keepJobs',
        'queue.preferRunOnCreationInstance',
        'queue.threadPoolSize',
        'service.ranking'
    ];

request_params('OrgApacheSlingExtensionsWebconsolesecurityproviderInternalSlingW') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'users',
        'groups'
    ];

request_params('OrgApacheSlingFeatureflagsFeature') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'name',
        'description',
        'enabled'
    ];

request_params('OrgApacheSlingFeatureflagsImplConfiguredFeature') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'name',
        'description',
        'enabled'
    ];

request_params('OrgApacheSlingHapiImplHApiUtilImpl') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'org.apache.sling.hapi.tools.resourcetype',
        'org.apache.sling.hapi.tools.collectionresourcetype',
        'org.apache.sling.hapi.tools.searchpaths',
        'org.apache.sling.hapi.tools.externalurl',
        'org.apache.sling.hapi.tools.enabled'
    ];

request_params('OrgApacheSlingHcCoreImplCompositeHealthCheck') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'hc.name',
        'hc.tags',
        'hc.mbean.name',
        'filter.tags',
        'filter.combineTagsWithOr'
    ];

request_params('OrgApacheSlingHcCoreImplExecutorHealthCheckExecutorImpl') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'timeoutInMs',
        'longRunningFutureThresholdForCriticalMs',
        'resultCacheTtlInMs'
    ];

request_params('OrgApacheSlingHcCoreImplJmxAttributeHealthCheck') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'hc.name',
        'hc.tags',
        'hc.mbean.name',
        'mbean.name',
        'attribute.name',
        'attribute.value.constraint'
    ];

request_params('OrgApacheSlingHcCoreImplScriptableHealthCheck') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'hc.name',
        'hc.tags',
        'hc.mbean.name',
        'expression',
        'language.extension'
    ];

request_params('OrgApacheSlingHcCoreImplServletHealthCheckExecutorServlet') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'servletPath',
        'disabled',
        'cors.accessControlAllowOrigin'
    ];

request_params('OrgApacheSlingHcCoreImplServletResultTxtVerboseSerializer') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'totalWidth',
        'colWidthName',
        'colWidthResult',
        'colWidthTiming'
    ];

request_params('OrgApacheSlingI18nImplI18NFilter') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'service.ranking',
        'sling.filter.scope'
    ];

request_params('OrgApacheSlingI18nImplJcrResourceBundleProvider') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'locale.default',
        'preload.bundles',
        'invalidation.delay'
    ];

request_params('OrgApacheSlingInstallerProviderJcrImplJcrInstaller') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'handler.schemes',
        'sling.jcrinstall.folder.name.regexp',
        'sling.jcrinstall.folder.max.depth',
        'sling.jcrinstall.search.path',
        'sling.jcrinstall.new.config.path',
        'sling.jcrinstall.signal.path',
        'sling.jcrinstall.enable.writeback'
    ];

request_params('OrgApacheSlingJcrBaseInternalLoginAdminWhitelist') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'whitelist.bypass',
        'whitelist.bundles.regexp'
    ];

request_params('OrgApacheSlingJcrBaseInternalLoginAdminWhitelistFragment') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'whitelist.name',
        'whitelist.bundles'
    ];

request_params('OrgApacheSlingJcrDavexImplServletsSlingDavExServlet') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'alias',
        'dav.create-absolute-uri',
        'dav.protectedhandlers'
    ];

request_params('OrgApacheSlingJcrJackrabbitServerJndiRegistrationSupport') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'java.naming.factory.initial',
        'java.naming.provider.url'
    ];

request_params('OrgApacheSlingJcrJackrabbitServerRmiRegistrationSupport') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'port'
    ];

request_params('OrgApacheSlingJcrRepoinitImplRepositoryInitializer') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'references'
    ];

request_params('OrgApacheSlingJcrRepoinitRepositoryInitializer') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'references',
        'scripts'
    ];

request_params('OrgApacheSlingJcrResourceInternalJcrResourceResolverFactoryImpl') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'resource.resolver.searchpath',
        'resource.resolver.manglenamespaces',
        'resource.resolver.allowDirect',
        'resource.resolver.required.providers',
        'resource.resolver.required.providernames',
        'resource.resolver.virtual',
        'resource.resolver.mapping',
        'resource.resolver.map.location',
        'resource.resolver.map.observation',
        'resource.resolver.default.vanity.redirect.status',
        'resource.resolver.enable.vanitypath',
        'resource.resolver.vanitypath.maxEntries',
        'resource.resolver.vanitypath.maxEntries.startup',
        'resource.resolver.vanitypath.bloomfilter.maxBytes',
        'resource.resolver.optimize.alias.resolution',
        'resource.resolver.vanitypath.whitelist',
        'resource.resolver.vanitypath.blacklist',
        'resource.resolver.vanity.precedence',
        'resource.resolver.providerhandling.paranoid',
        'resource.resolver.log.closing',
        'resource.resolver.log.unclosed'
    ];

request_params('OrgApacheSlingJcrResourceInternalJcrSystemUserValidator') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'allow.only.system.user'
    ];

request_params('OrgApacheSlingJcrResourcesecurityImplResourceAccessGateFactory') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'path',
        'checkpath.prefix',
        'jcrPath'
    ];

request_params('OrgApacheSlingJcrWebdavImplHandlerDefaultHandlerService') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'service.ranking',
        'type.collections',
        'type.noncollections',
        'type.content'
    ];

request_params('OrgApacheSlingJcrWebdavImplHandlerDirListingExportHandlerServic') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'service.ranking'
    ];

request_params('OrgApacheSlingJcrWebdavImplServletsSimpleWebDavServlet') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'dav.root',
        'dav.create-absolute-uri',
        'dav.realm',
        'collection.types',
        'filter.prefixes',
        'filter.types',
        'filter.uris',
        'type.collections',
        'type.noncollections',
        'type.content'
    ];

request_params('OrgApacheSlingJmxProviderImplJMXResourceProvider') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'provider.roots'
    ];

request_params('OrgApacheSlingModelsImplModelAdapterFactory') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'osgi.http.whiteboard.listener',
        'osgi.http.whiteboard.context.select',
        'max.recursion.depth',
        'cleanup.job.period'
    ];

request_params('OrgApacheSlingModelsJacksonexporterImplResourceModuleProvider') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'max.recursion.levels'
    ];

request_params('OrgApacheSlingResourceInventoryImplResourceInventoryPrinterFacto') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'felix.inventory.printer.name',
        'felix.inventory.printer.title',
        'path'
    ];

request_params('OrgApacheSlingResourcemergerImplMergedResourceProviderFactory') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'merge.root',
        'merge.readOnly'
    ];

request_params('OrgApacheSlingResourcemergerPickerOverriding') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'merge.root',
        'merge.readOnly'
    ];

request_params('OrgApacheSlingScriptingCoreImplScriptCacheImpl') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'org.apache.sling.scripting.cache.size',
        'org.apache.sling.scripting.cache.additional_extensions'
    ];

request_params('OrgApacheSlingScriptingCoreImplScriptingResourceResolverProvider') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'log.stacktrace.onclose'
    ];

request_params('OrgApacheSlingScriptingJavaImplJavaScriptEngineFactory') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'java.classdebuginfo',
        'java.javaEncoding',
        'java.compilerSourceVM',
        'java.compilerTargetVM'
    ];

request_params('OrgApacheSlingScriptingJavascriptInternalRhinoJavaScriptEngineFa') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'org.apache.sling.scripting.javascript.rhino.optLevel'
    ];

request_params('OrgApacheSlingScriptingJspJspScriptEngineFactory') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'jasper.compilerTargetVM',
        'jasper.compilerSourceVM',
        'jasper.classdebuginfo',
        'jasper.enablePooling',
        'jasper.ieClassId',
        'jasper.genStringAsCharArray',
        'jasper.keepgenerated',
        'jasper.mappedfile',
        'jasper.trimSpaces',
        'jasper.displaySourceFragments',
        'default.is.session'
    ];

request_params('OrgApacheSlingScriptingSightlyJsImplJsapiSlyBindingsValuesProv') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'org.apache.sling.scripting.sightly.js.bindings'
    ];

request_params('OrgApacheSlingSecurityImplContentDispositionFilter') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'sling.content.disposition.paths',
        'sling.content.disposition.excluded.paths',
        'sling.content.disposition.all.paths'
    ];

request_params('OrgApacheSlingSecurityImplReferrerFilter') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'allow.empty',
        'allow.hosts',
        'allow.hosts.regexp',
        'filter.methods',
        'exclude.agents.regexp'
    ];

request_params('OrgApacheSlingServiceusermappingImplServiceUserMapperImpl') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'user.mapping',
        'user.default',
        'user.enable.default.mapping',
        'require.validation'
    ];

request_params('OrgApacheSlingServiceusermappingImplServiceUserMapperImplAmended') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'service.ranking',
        'user.mapping'
    ];

request_params('OrgApacheSlingServletsGetDefaultGetServlet') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'aliases',
        'index',
        'index.files',
        'enable.html',
        'enable.json',
        'enable.txt',
        'enable.xml',
        'json.maximumresults',
        'ecmaSuport'
    ];

request_params('OrgApacheSlingServletsGetImplVersionVersionInfoServlet') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'sling.servlet.selectors',
        'ecmaSuport'
    ];

request_params('OrgApacheSlingServletsPostImplHelperChunkCleanUpTask') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'scheduler.expression',
        'scheduler.concurrent',
        'chunk.cleanup.age'
    ];

request_params('OrgApacheSlingServletsPostImplSlingPostServlet') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'servlet.post.dateFormats',
        'servlet.post.nodeNameHints',
        'servlet.post.nodeNameMaxLength',
        'servlet.post.checkinNewVersionableNodes',
        'servlet.post.autoCheckout',
        'servlet.post.autoCheckin',
        'servlet.post.ignorePattern'
    ];

request_params('OrgApacheSlingServletsResolverSlingServletResolver') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'servletresolver.servletRoot',
        'servletresolver.cacheSize',
        'servletresolver.paths',
        'servletresolver.defaultExtensions'
    ];

request_params('OrgApacheSlingSettingsImplSlingSettingsServiceImpl') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'sling.name',
        'sling.description'
    ];

request_params('OrgApacheSlingStartupfilterImplStartupFilterImpl') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'active.by.default',
        'default.message'
    ];

request_params('OrgApacheSlingTenantInternalTenantProviderImpl') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'tenant.root',
        'tenant.path.matcher'
    ];

request_params('OrgApacheSlingTracerInternalLogTracer') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'tracerSets',
        'enabled',
        'servletEnabled',
        'recordingCacheSizeInMB',
        'recordingCacheDurationInSecs',
        'recordingCompressionEnabled',
        'gzipResponse'
    ];

request_params('OrgApacheSlingXssImplXSSFilterImpl') ->
    [
        'post',
        'apply',
        'delete',
        'action',
        '$location',
        'propertylist',
        'policyPath'
    ];

request_params(_) ->
    error(unknown_operation).

-type rule() ::
    {type, 'binary'} |
    {type, 'integer'} |
    {type, 'float'} |
    {type, 'binary'} |
    {type, 'boolean'} |
    {type, 'date'} |
    {type, 'datetime'} |
    {enum, [atom()]} |
    {max, Max :: number()} |
    {exclusive_max, Max :: number()} |
    {min, Min :: number()} |
    {exclusive_min, Min :: number()} |
    {max_length, MaxLength :: integer()} |
    {min_length, MaxLength :: integer()} |
    {pattern, Pattern :: string()} |
    schema |
    required |
    not_required.

-spec request_param_info(OperationID :: operation_id(), Name :: request_param()) -> #{
    source => qs_val | binding | header | body,
    rules => [rule()]
}.



request_param_info('AdaptiveFormAndInteractiveCommunicationWebChannelConfiguration', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('AdaptiveFormAndInteractiveCommunicationWebChannelConfiguration', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('AdaptiveFormAndInteractiveCommunicationWebChannelConfiguration', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('AdaptiveFormAndInteractiveCommunicationWebChannelConfiguration', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('AdaptiveFormAndInteractiveCommunicationWebChannelConfiguration', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('AdaptiveFormAndInteractiveCommunicationWebChannelConfiguration', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('AdaptiveFormAndInteractiveCommunicationWebChannelConfiguration', 'showPlaceholder') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('AdaptiveFormAndInteractiveCommunicationWebChannelConfiguration', 'maximumCacheEntries') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('AdaptiveFormAndInteractiveCommunicationWebChannelConfiguration', 'af.scripting.compatversion') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('AdaptiveFormAndInteractiveCommunicationWebChannelConfiguration', 'makeFileNameUnique') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('AdaptiveFormAndInteractiveCommunicationWebChannelConfiguration', 'generatingCompliantData') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('AdaptiveFormAndInteractiveCommunicationWebChannelThemeConfigur', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('AdaptiveFormAndInteractiveCommunicationWebChannelThemeConfigur', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('AdaptiveFormAndInteractiveCommunicationWebChannelThemeConfigur', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('AdaptiveFormAndInteractiveCommunicationWebChannelThemeConfigur', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('AdaptiveFormAndInteractiveCommunicationWebChannelThemeConfigur', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('AdaptiveFormAndInteractiveCommunicationWebChannelThemeConfigur', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('AdaptiveFormAndInteractiveCommunicationWebChannelThemeConfigur', 'fontList') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('AnalyticsComponentQueryCacheService', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('AnalyticsComponentQueryCacheService', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('AnalyticsComponentQueryCacheService', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('AnalyticsComponentQueryCacheService', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('AnalyticsComponentQueryCacheService', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('AnalyticsComponentQueryCacheService', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('AnalyticsComponentQueryCacheService', 'cq.analytics.component.query.cache.size') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ApacheSlingHealthCheckResultHTMLSerializer', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ApacheSlingHealthCheckResultHTMLSerializer', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ApacheSlingHealthCheckResultHTMLSerializer', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ApacheSlingHealthCheckResultHTMLSerializer', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ApacheSlingHealthCheckResultHTMLSerializer', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ApacheSlingHealthCheckResultHTMLSerializer', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ApacheSlingHealthCheckResultHTMLSerializer', 'styleString') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeAemFormsndocumentsConfigAEMFormsManagerConfiguration', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeAemFormsndocumentsConfigAEMFormsManagerConfiguration', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeAemFormsndocumentsConfigAEMFormsManagerConfiguration', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeAemFormsndocumentsConfigAEMFormsManagerConfiguration', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeAemFormsndocumentsConfigAEMFormsManagerConfiguration', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeAemFormsndocumentsConfigAEMFormsManagerConfiguration', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeAemFormsndocumentsConfigAEMFormsManagerConfiguration', 'formsManagerConfig.includeOOTBTemplates') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeAemFormsndocumentsConfigAEMFormsManagerConfiguration', 'formsManagerConfig.includeDeprecatedTemplates') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeAemTransactionCoreImplTransactionRecorder', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeAemTransactionCoreImplTransactionRecorder', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeAemTransactionCoreImplTransactionRecorder', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeAemTransactionCoreImplTransactionRecorder', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeAemTransactionCoreImplTransactionRecorder', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeAemTransactionCoreImplTransactionRecorder', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeAemTransactionCoreImplTransactionRecorder', 'isTransactionRecordingEnabled') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeAemUpgradePrechecksHcImplDeprecateIndexesHC', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeAemUpgradePrechecksHcImplDeprecateIndexesHC', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeAemUpgradePrechecksHcImplDeprecateIndexesHC', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeAemUpgradePrechecksHcImplDeprecateIndexesHC', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeAemUpgradePrechecksHcImplDeprecateIndexesHC', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeAemUpgradePrechecksHcImplDeprecateIndexesHC', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeAemUpgradePrechecksHcImplDeprecateIndexesHC', 'hc.name') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeAemUpgradePrechecksHcImplDeprecateIndexesHC', 'hc.tags') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeAemUpgradePrechecksHcImplDeprecateIndexesHC', 'hc.mbean.name') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeAemUpgradePrechecksHcImplReplicationAgentsDisabledHC', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeAemUpgradePrechecksHcImplReplicationAgentsDisabledHC', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeAemUpgradePrechecksHcImplReplicationAgentsDisabledHC', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeAemUpgradePrechecksHcImplReplicationAgentsDisabledHC', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeAemUpgradePrechecksHcImplReplicationAgentsDisabledHC', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeAemUpgradePrechecksHcImplReplicationAgentsDisabledHC', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeAemUpgradePrechecksHcImplReplicationAgentsDisabledHC', 'hc.name') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeAemUpgradePrechecksHcImplReplicationAgentsDisabledHC', 'hc.tags') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeAemUpgradePrechecksHcImplReplicationAgentsDisabledHC', 'hc.mbean.name') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeAemUpgradePrechecksMbeanImplPreUpgradeTasksMBeanImpl', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeAemUpgradePrechecksMbeanImplPreUpgradeTasksMBeanImpl', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeAemUpgradePrechecksMbeanImplPreUpgradeTasksMBeanImpl', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeAemUpgradePrechecksMbeanImplPreUpgradeTasksMBeanImpl', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeAemUpgradePrechecksMbeanImplPreUpgradeTasksMBeanImpl', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeAemUpgradePrechecksMbeanImplPreUpgradeTasksMBeanImpl', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeAemUpgradePrechecksMbeanImplPreUpgradeTasksMBeanImpl', 'pre-upgrade.maintenance.tasks') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeAemUpgradePrechecksMbeanImplPreUpgradeTasksMBeanImpl', 'pre-upgrade.hc.tags') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeAemUpgradePrechecksTasksImplConsistencyCheckTaskImpl', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeAemUpgradePrechecksTasksImplConsistencyCheckTaskImpl', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeAemUpgradePrechecksTasksImplConsistencyCheckTaskImpl', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeAemUpgradePrechecksTasksImplConsistencyCheckTaskImpl', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeAemUpgradePrechecksTasksImplConsistencyCheckTaskImpl', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeAemUpgradePrechecksTasksImplConsistencyCheckTaskImpl', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeAemUpgradePrechecksTasksImplConsistencyCheckTaskImpl', 'root.path') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeAemUpgradePrechecksTasksImplConsistencyCheckTaskImpl', 'fix.inconsistencies') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqAccountApiAccountManagementService', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqAccountApiAccountManagementService', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqAccountApiAccountManagementService', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqAccountApiAccountManagementService', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqAccountApiAccountManagementService', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqAccountApiAccountManagementService', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeCqAccountApiAccountManagementService', 'cq.accountmanager.token.validity.period') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComAdobeCqAccountApiAccountManagementService', 'cq.accountmanager.config.requestnewaccount.mail') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqAccountApiAccountManagementService', 'cq.accountmanager.config.requestnewpwd.mail') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqAccountImplAccountManagementServlet', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqAccountImplAccountManagementServlet', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqAccountImplAccountManagementServlet', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqAccountImplAccountManagementServlet', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqAccountImplAccountManagementServlet', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqAccountImplAccountManagementServlet', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeCqAccountImplAccountManagementServlet', 'cq.accountmanager.config.informnewaccount.mail') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqAccountImplAccountManagementServlet', 'cq.accountmanager.config.informnewpwd.mail') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqAddressImplLocationLocationListServlet', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqAddressImplLocationLocationListServlet', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqAddressImplLocationLocationListServlet', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqAddressImplLocationLocationListServlet', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqAddressImplLocationLocationListServlet', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqAddressImplLocationLocationListServlet', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeCqAddressImplLocationLocationListServlet', 'cq.address.location.default.maxResults') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComAdobeCqAuditPurgeDam', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqAuditPurgeDam', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqAuditPurgeDam', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqAuditPurgeDam', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqAuditPurgeDam', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqAuditPurgeDam', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeCqAuditPurgeDam', 'auditlog.rule.name') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqAuditPurgeDam', 'auditlog.rule.contentpath') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqAuditPurgeDam', 'auditlog.rule.minimumage') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComAdobeCqAuditPurgeDam', 'auditlog.rule.types') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqAuditPurgePages', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqAuditPurgePages', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqAuditPurgePages', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqAuditPurgePages', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqAuditPurgePages', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqAuditPurgePages', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeCqAuditPurgePages', 'auditlog.rule.name') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqAuditPurgePages', 'auditlog.rule.contentpath') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqAuditPurgePages', 'auditlog.rule.minimumage') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComAdobeCqAuditPurgePages', 'auditlog.rule.types') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqAuditPurgeReplication', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqAuditPurgeReplication', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqAuditPurgeReplication', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqAuditPurgeReplication', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqAuditPurgeReplication', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqAuditPurgeReplication', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeCqAuditPurgeReplication', 'auditlog.rule.name') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqAuditPurgeReplication', 'auditlog.rule.contentpath') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqAuditPurgeReplication', 'auditlog.rule.minimumage') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComAdobeCqAuditPurgeReplication', 'auditlog.rule.types') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqCdnRewriterImplAWSCloudFrontRewriter', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqCdnRewriterImplAWSCloudFrontRewriter', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqCdnRewriterImplAWSCloudFrontRewriter', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqCdnRewriterImplAWSCloudFrontRewriter', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqCdnRewriterImplAWSCloudFrontRewriter', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqCdnRewriterImplAWSCloudFrontRewriter', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeCqCdnRewriterImplAWSCloudFrontRewriter', 'service.ranking') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComAdobeCqCdnRewriterImplAWSCloudFrontRewriter', 'keypair.id') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqCdnRewriterImplAWSCloudFrontRewriter', 'keypair.alias') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqCdnRewriterImplAWSCloudFrontRewriter', 'cdnrewriter.attributes') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeCqCdnRewriterImplAWSCloudFrontRewriter', 'cdn.rewriter.distribution.domain') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqCdnRewriterImplCDNConfigServiceImpl', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqCdnRewriterImplCDNConfigServiceImpl', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqCdnRewriterImplCDNConfigServiceImpl', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqCdnRewriterImplCDNConfigServiceImpl', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqCdnRewriterImplCDNConfigServiceImpl', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqCdnRewriterImplCDNConfigServiceImpl', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeCqCdnRewriterImplCDNConfigServiceImpl', 'cdn.config.distribution.domain') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqCdnRewriterImplCDNConfigServiceImpl', 'cdn.config.enable.rewriting') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqCdnRewriterImplCDNConfigServiceImpl', 'cdn.config.path.prefixes') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeCqCdnRewriterImplCDNConfigServiceImpl', 'cdn.config.cdnttl') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComAdobeCqCdnRewriterImplCDNConfigServiceImpl', 'cdn.config.application.protocol') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqCdnRewriterImplCDNRewriter', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqCdnRewriterImplCDNRewriter', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqCdnRewriterImplCDNRewriter', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqCdnRewriterImplCDNRewriter', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqCdnRewriterImplCDNRewriter', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqCdnRewriterImplCDNRewriter', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeCqCdnRewriterImplCDNRewriter', 'service.ranking') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComAdobeCqCdnRewriterImplCDNRewriter', 'cdnrewriter.attributes') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeCqCdnRewriterImplCDNRewriter', 'cdn.rewriter.distribution.domain') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqCloudconfigCoreImplConfigurationReplicationEventHandle', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqCloudconfigCoreImplConfigurationReplicationEventHandle', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqCloudconfigCoreImplConfigurationReplicationEventHandle', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqCloudconfigCoreImplConfigurationReplicationEventHandle', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqCloudconfigCoreImplConfigurationReplicationEventHandle', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqCloudconfigCoreImplConfigurationReplicationEventHandle', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeCqCloudconfigCoreImplConfigurationReplicationEventHandle', 'flush.agents') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeCqCommerceImplAssetDynamicImageHandler', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqCommerceImplAssetDynamicImageHandler', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqCommerceImplAssetDynamicImageHandler', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqCommerceImplAssetDynamicImageHandler', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqCommerceImplAssetDynamicImageHandler', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqCommerceImplAssetDynamicImageHandler', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeCqCommerceImplAssetDynamicImageHandler', 'cq.commerce.asset.handler.active') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqCommerceImplAssetDynamicImageHandler', 'cq.commerce.asset.handler.name') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqCommerceImplAssetProductAssetHandlerProviderImpl', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqCommerceImplAssetProductAssetHandlerProviderImpl', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqCommerceImplAssetProductAssetHandlerProviderImpl', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqCommerceImplAssetProductAssetHandlerProviderImpl', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqCommerceImplAssetProductAssetHandlerProviderImpl', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqCommerceImplAssetProductAssetHandlerProviderImpl', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeCqCommerceImplAssetProductAssetHandlerProviderImpl', 'cq.commerce.asset.handler.fallback') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqCommerceImplAssetStaticImageHandler', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqCommerceImplAssetStaticImageHandler', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqCommerceImplAssetStaticImageHandler', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqCommerceImplAssetStaticImageHandler', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqCommerceImplAssetStaticImageHandler', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqCommerceImplAssetStaticImageHandler', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeCqCommerceImplAssetStaticImageHandler', 'cq.commerce.asset.handler.active') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqCommerceImplAssetStaticImageHandler', 'cq.commerce.asset.handler.name') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqCommerceImplAssetVideoHandler', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqCommerceImplAssetVideoHandler', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqCommerceImplAssetVideoHandler', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqCommerceImplAssetVideoHandler', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqCommerceImplAssetVideoHandler', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqCommerceImplAssetVideoHandler', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeCqCommerceImplAssetVideoHandler', 'cq.commerce.asset.handler.active') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqCommerceImplAssetVideoHandler', 'cq.commerce.asset.handler.name') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqCommerceImplPromotionPromotionManagerImpl', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqCommerceImplPromotionPromotionManagerImpl', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqCommerceImplPromotionPromotionManagerImpl', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqCommerceImplPromotionPromotionManagerImpl', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqCommerceImplPromotionPromotionManagerImpl', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqCommerceImplPromotionPromotionManagerImpl', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeCqCommerceImplPromotionPromotionManagerImpl', 'cq.commerce.promotion.root') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqCommercePimImplCataloggeneratorCatalogGeneratorImpl', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqCommercePimImplCataloggeneratorCatalogGeneratorImpl', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqCommercePimImplCataloggeneratorCatalogGeneratorImpl', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqCommercePimImplCataloggeneratorCatalogGeneratorImpl', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqCommercePimImplCataloggeneratorCatalogGeneratorImpl', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqCommercePimImplCataloggeneratorCatalogGeneratorImpl', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeCqCommercePimImplCataloggeneratorCatalogGeneratorImpl', 'cq.commerce.cataloggenerator.bucketsize') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComAdobeCqCommercePimImplCataloggeneratorCatalogGeneratorImpl', 'cq.commerce.cataloggenerator.bucketname') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqCommercePimImplCataloggeneratorCatalogGeneratorImpl', 'cq.commerce.cataloggenerator.excludedtemplateproperties') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeCqCommercePimImplPageEventListener', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqCommercePimImplPageEventListener', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqCommercePimImplPageEventListener', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqCommercePimImplPageEventListener', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqCommercePimImplPageEventListener', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqCommercePimImplPageEventListener', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeCqCommercePimImplPageEventListener', 'cq.commerce.pageeventlistener.enabled') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqCommercePimImplProductfeedProductFeedServiceImpl', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqCommercePimImplProductfeedProductFeedServiceImpl', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqCommercePimImplProductfeedProductFeedServiceImpl', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqCommercePimImplProductfeedProductFeedServiceImpl', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqCommercePimImplProductfeedProductFeedServiceImpl', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqCommercePimImplProductfeedProductFeedServiceImpl', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeCqCommercePimImplProductfeedProductFeedServiceImpl', 'Feed generator algorithm') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqContentinsightImplReportingServicesSettingsProvider', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqContentinsightImplReportingServicesSettingsProvider', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqContentinsightImplReportingServicesSettingsProvider', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqContentinsightImplReportingServicesSettingsProvider', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqContentinsightImplReportingServicesSettingsProvider', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqContentinsightImplReportingServicesSettingsProvider', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeCqContentinsightImplReportingServicesSettingsProvider', 'reportingservices.url') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqContentinsightImplServletsBrightEdgeProxyServlet', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqContentinsightImplServletsBrightEdgeProxyServlet', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqContentinsightImplServletsBrightEdgeProxyServlet', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqContentinsightImplServletsBrightEdgeProxyServlet', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqContentinsightImplServletsBrightEdgeProxyServlet', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqContentinsightImplServletsBrightEdgeProxyServlet', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeCqContentinsightImplServletsBrightEdgeProxyServlet', 'brightedge.url') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqContentinsightImplServletsReportingServicesProxyServle', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqContentinsightImplServletsReportingServicesProxyServle', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqContentinsightImplServletsReportingServicesProxyServle', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqContentinsightImplServletsReportingServicesProxyServle', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqContentinsightImplServletsReportingServicesProxyServle', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqContentinsightImplServletsReportingServicesProxyServle', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeCqContentinsightImplServletsReportingServicesProxyServle', 'reportingservices.proxy.whitelist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeCqDamCfmImplComponentComponentConfigImpl', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqDamCfmImplComponentComponentConfigImpl', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqDamCfmImplComponentComponentConfigImpl', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqDamCfmImplComponentComponentConfigImpl', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqDamCfmImplComponentComponentConfigImpl', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqDamCfmImplComponentComponentConfigImpl', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeCqDamCfmImplComponentComponentConfigImpl', 'dam.cfm.component.resourceType') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqDamCfmImplComponentComponentConfigImpl', 'dam.cfm.component.fileReferenceProp') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqDamCfmImplComponentComponentConfigImpl', 'dam.cfm.component.elementsProp') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqDamCfmImplComponentComponentConfigImpl', 'dam.cfm.component.variationProp') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqDamCfmImplConfFeatureConfigImpl', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqDamCfmImplConfFeatureConfigImpl', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqDamCfmImplConfFeatureConfigImpl', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqDamCfmImplConfFeatureConfigImpl', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqDamCfmImplConfFeatureConfigImpl', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqDamCfmImplConfFeatureConfigImpl', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeCqDamCfmImplConfFeatureConfigImpl', 'dam.cfm.resourceTypes') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeCqDamCfmImplConfFeatureConfigImpl', 'dam.cfm.referenceProperties') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeCqDamCfmImplContentRewriterAssetProcessor', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqDamCfmImplContentRewriterAssetProcessor', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqDamCfmImplContentRewriterAssetProcessor', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqDamCfmImplContentRewriterAssetProcessor', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqDamCfmImplContentRewriterAssetProcessor', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqDamCfmImplContentRewriterAssetProcessor', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeCqDamCfmImplContentRewriterAssetProcessor', 'pipeline.type') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqDamCfmImplContentRewriterParRangeFilter', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqDamCfmImplContentRewriterParRangeFilter', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqDamCfmImplContentRewriterParRangeFilter', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqDamCfmImplContentRewriterParRangeFilter', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqDamCfmImplContentRewriterParRangeFilter', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqDamCfmImplContentRewriterParRangeFilter', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeCqDamCfmImplContentRewriterParRangeFilter', 'pipeline.type') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqDamCfmImplContentRewriterPayloadFilter', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqDamCfmImplContentRewriterPayloadFilter', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqDamCfmImplContentRewriterPayloadFilter', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqDamCfmImplContentRewriterPayloadFilter', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqDamCfmImplContentRewriterPayloadFilter', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqDamCfmImplContentRewriterPayloadFilter', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeCqDamCfmImplContentRewriterPayloadFilter', 'pipeline.type') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqDamDmProcessImagePTiffManagerImpl', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqDamDmProcessImagePTiffManagerImpl', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqDamDmProcessImagePTiffManagerImpl', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqDamDmProcessImagePTiffManagerImpl', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqDamDmProcessImagePTiffManagerImpl', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqDamDmProcessImagePTiffManagerImpl', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeCqDamDmProcessImagePTiffManagerImpl', 'maxMemory') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComAdobeCqDamIpsImplReplicationTriggerReplicateOnModifyWorker', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqDamIpsImplReplicationTriggerReplicateOnModifyWorker', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqDamIpsImplReplicationTriggerReplicateOnModifyWorker', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqDamIpsImplReplicationTriggerReplicateOnModifyWorker', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqDamIpsImplReplicationTriggerReplicateOnModifyWorker', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqDamIpsImplReplicationTriggerReplicateOnModifyWorker', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeCqDamIpsImplReplicationTriggerReplicateOnModifyWorker', 'dmreplicateonmodify.enabled') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqDamIpsImplReplicationTriggerReplicateOnModifyWorker', 'dmreplicateonmodify.forcesyncdeletes') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqDamMacSyncHelperImplMACSyncClientImpl', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqDamMacSyncHelperImplMACSyncClientImpl', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqDamMacSyncHelperImplMACSyncClientImpl', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqDamMacSyncHelperImplMACSyncClientImpl', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqDamMacSyncHelperImplMACSyncClientImpl', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqDamMacSyncHelperImplMACSyncClientImpl', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeCqDamMacSyncHelperImplMACSyncClientImpl', 'com.adobe.dam.mac.sync.client.so.timeout') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComAdobeCqDamMacSyncImplDAMSyncServiceImpl', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqDamMacSyncImplDAMSyncServiceImpl', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqDamMacSyncImplDAMSyncServiceImpl', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqDamMacSyncImplDAMSyncServiceImpl', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqDamMacSyncImplDAMSyncServiceImpl', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqDamMacSyncImplDAMSyncServiceImpl', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeCqDamMacSyncImplDAMSyncServiceImpl', 'com.adobe.cq.dam.mac.sync.damsyncservice.registered_paths') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeCqDamMacSyncImplDAMSyncServiceImpl', 'com.adobe.cq.dam.mac.sync.damsyncservice.sync.renditions') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqDamMacSyncImplDAMSyncServiceImpl', 'com.adobe.cq.dam.mac.sync.damsyncservice.replicate.thread.wait.ms') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComAdobeCqDamMacSyncImplDAMSyncServiceImpl', 'com.adobe.cq.dam.mac.sync.damsyncservice.platform') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqDamProcessorNuiImplNuiAssetProcessor', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqDamProcessorNuiImplNuiAssetProcessor', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqDamProcessorNuiImplNuiAssetProcessor', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqDamProcessorNuiImplNuiAssetProcessor', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqDamProcessorNuiImplNuiAssetProcessor', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqDamProcessorNuiImplNuiAssetProcessor', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeCqDamProcessorNuiImplNuiAssetProcessor', 'nuiEnabled') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqDamProcessorNuiImplNuiAssetProcessor', 'nuiServiceUrl') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqDamProcessorNuiImplNuiAssetProcessor', 'nuiApiKey') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqDamS7imagingImplIsImageServerComponent', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqDamS7imagingImplIsImageServerComponent', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqDamS7imagingImplIsImageServerComponent', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqDamS7imagingImplIsImageServerComponent', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqDamS7imagingImplIsImageServerComponent', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqDamS7imagingImplIsImageServerComponent', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeCqDamS7imagingImplIsImageServerComponent', 'TcpPort') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqDamS7imagingImplIsImageServerComponent', 'AllowRemoteAccess') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqDamS7imagingImplIsImageServerComponent', 'MaxRenderRgnPixels') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqDamS7imagingImplIsImageServerComponent', 'MaxMessageSize') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqDamS7imagingImplIsImageServerComponent', 'RandomAccessUrlTimeout') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComAdobeCqDamS7imagingImplIsImageServerComponent', 'WorkerThreads') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComAdobeCqDamS7imagingImplPsPlatformServerServlet', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqDamS7imagingImplPsPlatformServerServlet', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqDamS7imagingImplPsPlatformServerServlet', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqDamS7imagingImplPsPlatformServerServlet', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqDamS7imagingImplPsPlatformServerServlet', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqDamS7imagingImplPsPlatformServerServlet', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeCqDamS7imagingImplPsPlatformServerServlet', 'cache.enable') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqDamS7imagingImplPsPlatformServerServlet', 'cache.rootPaths') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeCqDamS7imagingImplPsPlatformServerServlet', 'cache.maxSize') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComAdobeCqDamS7imagingImplPsPlatformServerServlet', 'cache.maxEntries') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComAdobeCqDamWebdavImplIoAssetIOHandler', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqDamWebdavImplIoAssetIOHandler', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqDamWebdavImplIoAssetIOHandler', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqDamWebdavImplIoAssetIOHandler', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqDamWebdavImplIoAssetIOHandler', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqDamWebdavImplIoAssetIOHandler', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeCqDamWebdavImplIoAssetIOHandler', 'service.ranking') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComAdobeCqDamWebdavImplIoAssetIOHandler', 'pathPrefix') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqDamWebdavImplIoAssetIOHandler', 'createVersion') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqDamWebdavImplIoDamWebdavVersionLinkingJob', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqDamWebdavImplIoDamWebdavVersionLinkingJob', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqDamWebdavImplIoDamWebdavVersionLinkingJob', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqDamWebdavImplIoDamWebdavVersionLinkingJob', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqDamWebdavImplIoDamWebdavVersionLinkingJob', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqDamWebdavImplIoDamWebdavVersionLinkingJob', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeCqDamWebdavImplIoDamWebdavVersionLinkingJob', 'cq.dam.webdav.version.linking.enable') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqDamWebdavImplIoDamWebdavVersionLinkingJob', 'cq.dam.webdav.version.linking.scheduler.period') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComAdobeCqDamWebdavImplIoDamWebdavVersionLinkingJob', 'cq.dam.webdav.version.linking.staging.timeout') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComAdobeCqDamWebdavImplIoSpecialFilesHandler', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqDamWebdavImplIoSpecialFilesHandler', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqDamWebdavImplIoSpecialFilesHandler', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqDamWebdavImplIoSpecialFilesHandler', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqDamWebdavImplIoSpecialFilesHandler', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqDamWebdavImplIoSpecialFilesHandler', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeCqDamWebdavImplIoSpecialFilesHandler', 'com.day.cq.dam.core.impl.io.SpecialFilesHandler.filepatters') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeCqDeserfwImplDeserializationFirewallImpl', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqDeserfwImplDeserializationFirewallImpl', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqDeserfwImplDeserializationFirewallImpl', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqDeserfwImplDeserializationFirewallImpl', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqDeserfwImplDeserializationFirewallImpl', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqDeserfwImplDeserializationFirewallImpl', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeCqDeserfwImplDeserializationFirewallImpl', 'firewall.deserialization.whitelist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeCqDeserfwImplDeserializationFirewallImpl', 'firewall.deserialization.blacklist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeCqDeserfwImplDeserializationFirewallImpl', 'firewall.deserialization.diagnostics') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqDtmImplServiceDTMWebServiceImpl', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqDtmImplServiceDTMWebServiceImpl', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqDtmImplServiceDTMWebServiceImpl', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqDtmImplServiceDTMWebServiceImpl', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqDtmImplServiceDTMWebServiceImpl', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqDtmImplServiceDTMWebServiceImpl', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeCqDtmImplServiceDTMWebServiceImpl', 'connection.timeout') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComAdobeCqDtmImplServiceDTMWebServiceImpl', 'socket.timeout') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComAdobeCqDtmImplServletsDTMDeployHookServlet', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqDtmImplServletsDTMDeployHookServlet', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqDtmImplServletsDTMDeployHookServlet', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqDtmImplServletsDTMDeployHookServlet', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqDtmImplServletsDTMDeployHookServlet', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqDtmImplServletsDTMDeployHookServlet', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeCqDtmImplServletsDTMDeployHookServlet', 'dtm.staging.ip.whitelist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeCqDtmImplServletsDTMDeployHookServlet', 'dtm.production.ip.whitelist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeCqDtmReactorImplServiceWebServiceImpl', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqDtmReactorImplServiceWebServiceImpl', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqDtmReactorImplServiceWebServiceImpl', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqDtmReactorImplServiceWebServiceImpl', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqDtmReactorImplServiceWebServiceImpl', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqDtmReactorImplServiceWebServiceImpl', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeCqDtmReactorImplServiceWebServiceImpl', 'endpointUri') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqDtmReactorImplServiceWebServiceImpl', 'connectionTimeout') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComAdobeCqDtmReactorImplServiceWebServiceImpl', 'socketTimeout') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComAdobeCqExperiencelogImplExperienceLogConfigServlet', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqExperiencelogImplExperienceLogConfigServlet', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqExperiencelogImplExperienceLogConfigServlet', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqExperiencelogImplExperienceLogConfigServlet', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqExperiencelogImplExperienceLogConfigServlet', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqExperiencelogImplExperienceLogConfigServlet', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeCqExperiencelogImplExperienceLogConfigServlet', 'enabled') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqExperiencelogImplExperienceLogConfigServlet', 'disabledForGroups') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeCqHcContentPackagesHealthCheck', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqHcContentPackagesHealthCheck', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqHcContentPackagesHealthCheck', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqHcContentPackagesHealthCheck', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqHcContentPackagesHealthCheck', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqHcContentPackagesHealthCheck', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeCqHcContentPackagesHealthCheck', 'hc.name') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqHcContentPackagesHealthCheck', 'hc.tags') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeCqHcContentPackagesHealthCheck', 'hc.mbean.name') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqHcContentPackagesHealthCheck', 'package.names') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeCqHistoryImplHistoryRequestFilter', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqHistoryImplHistoryRequestFilter', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqHistoryImplHistoryRequestFilter', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqHistoryImplHistoryRequestFilter', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqHistoryImplHistoryRequestFilter', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqHistoryImplHistoryRequestFilter', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeCqHistoryImplHistoryRequestFilter', 'history.requestFilter.excludedSelectors') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeCqHistoryImplHistoryRequestFilter', 'history.requestFilter.excludedExtensions') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeCqHistoryImplHistoryServiceImpl', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqHistoryImplHistoryServiceImpl', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqHistoryImplHistoryServiceImpl', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqHistoryImplHistoryServiceImpl', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqHistoryImplHistoryServiceImpl', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqHistoryImplHistoryServiceImpl', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeCqHistoryImplHistoryServiceImpl', 'history.service.resourceTypes') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeCqHistoryImplHistoryServiceImpl', 'history.service.pathFilter') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeCqInboxImplTypeproviderItemTypeProvider', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqInboxImplTypeproviderItemTypeProvider', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqInboxImplTypeproviderItemTypeProvider', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqInboxImplTypeproviderItemTypeProvider', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqInboxImplTypeproviderItemTypeProvider', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqInboxImplTypeproviderItemTypeProvider', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeCqInboxImplTypeproviderItemTypeProvider', 'inbox.impl.typeprovider.registrypaths') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeCqInboxImplTypeproviderItemTypeProvider', 'inbox.impl.typeprovider.legacypaths') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeCqInboxImplTypeproviderItemTypeProvider', 'inbox.impl.typeprovider.defaulturl.failureitem') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqInboxImplTypeproviderItemTypeProvider', 'inbox.impl.typeprovider.defaulturl.workitem') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqInboxImplTypeproviderItemTypeProvider', 'inbox.impl.typeprovider.defaulturl.task') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqProjectsImplServletProjectImageServlet', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqProjectsImplServletProjectImageServlet', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqProjectsImplServletProjectImageServlet', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqProjectsImplServletProjectImageServlet', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqProjectsImplServletProjectImageServlet', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqProjectsImplServletProjectImageServlet', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeCqProjectsImplServletProjectImageServlet', 'image.quality') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqProjectsImplServletProjectImageServlet', 'image.supported.resolutions') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqProjectsPurgeScheduler', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqProjectsPurgeScheduler', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqProjectsPurgeScheduler', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqProjectsPurgeScheduler', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqProjectsPurgeScheduler', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqProjectsPurgeScheduler', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeCqProjectsPurgeScheduler', 'scheduledpurge.name') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqProjectsPurgeScheduler', 'scheduledpurge.purgeActive') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqProjectsPurgeScheduler', 'scheduledpurge.templates') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeCqProjectsPurgeScheduler', 'scheduledpurge.purgeGroups') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqProjectsPurgeScheduler', 'scheduledpurge.purgeAssets') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqProjectsPurgeScheduler', 'scheduledpurge.terminateRunningWorkflows') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqProjectsPurgeScheduler', 'scheduledpurge.daysold') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComAdobeCqProjectsPurgeScheduler', 'scheduledpurge.saveThreshold') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComAdobeCqScheduledExporterImplScheduledExporterImpl', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqScheduledExporterImplScheduledExporterImpl', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqScheduledExporterImplScheduledExporterImpl', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqScheduledExporterImplScheduledExporterImpl', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqScheduledExporterImplScheduledExporterImpl', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqScheduledExporterImplScheduledExporterImpl', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeCqScheduledExporterImplScheduledExporterImpl', 'include.paths') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeCqScheduledExporterImplScheduledExporterImpl', 'exporter.user') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqScreensAnalyticsImplScreensAnalyticsServiceImpl', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqScreensAnalyticsImplScreensAnalyticsServiceImpl', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqScreensAnalyticsImplScreensAnalyticsServiceImpl', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqScreensAnalyticsImplScreensAnalyticsServiceImpl', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqScreensAnalyticsImplScreensAnalyticsServiceImpl', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqScreensAnalyticsImplScreensAnalyticsServiceImpl', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeCqScreensAnalyticsImplScreensAnalyticsServiceImpl', 'com.adobe.cq.screens.analytics.impl.url') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqScreensAnalyticsImplScreensAnalyticsServiceImpl', 'com.adobe.cq.screens.analytics.impl.apikey') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqScreensAnalyticsImplScreensAnalyticsServiceImpl', 'com.adobe.cq.screens.analytics.impl.project') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqScreensAnalyticsImplScreensAnalyticsServiceImpl', 'com.adobe.cq.screens.analytics.impl.environment') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqScreensAnalyticsImplScreensAnalyticsServiceImpl', 'com.adobe.cq.screens.analytics.impl.sendFrequency') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComAdobeCqScreensDeviceImplDeviceService', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqScreensDeviceImplDeviceService', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqScreensDeviceImplDeviceService', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqScreensDeviceImplDeviceService', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqScreensDeviceImplDeviceService', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqScreensDeviceImplDeviceService', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeCqScreensDeviceImplDeviceService', 'com.adobe.aem.screens.player.pingfrequency') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComAdobeCqScreensDeviceImplDeviceService', 'com.adobe.aem.screens.device.pasword.specialchars') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqScreensDeviceImplDeviceService', 'com.adobe.aem.screens.device.pasword.minlowercasechars') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComAdobeCqScreensDeviceImplDeviceService', 'com.adobe.aem.screens.device.pasword.minuppercasechars') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComAdobeCqScreensDeviceImplDeviceService', 'com.adobe.aem.screens.device.pasword.minnumberchars') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComAdobeCqScreensDeviceImplDeviceService', 'com.adobe.aem.screens.device.pasword.minspecialchars') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComAdobeCqScreensDeviceImplDeviceService', 'com.adobe.aem.screens.device.pasword.minlength') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComAdobeCqScreensDeviceRegistrationImplRegistrationServiceImpl', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqScreensDeviceRegistrationImplRegistrationServiceImpl', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqScreensDeviceRegistrationImplRegistrationServiceImpl', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqScreensDeviceRegistrationImplRegistrationServiceImpl', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqScreensDeviceRegistrationImplRegistrationServiceImpl', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqScreensDeviceRegistrationImplRegistrationServiceImpl', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeCqScreensDeviceRegistrationImplRegistrationServiceImpl', 'deviceRegistrationTimeout') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComAdobeCqScreensImplHandlerChannelsUpdateHandler', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqScreensImplHandlerChannelsUpdateHandler', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqScreensImplHandlerChannelsUpdateHandler', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqScreensImplHandlerChannelsUpdateHandler', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqScreensImplHandlerChannelsUpdateHandler', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqScreensImplHandlerChannelsUpdateHandler', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeCqScreensImplHandlerChannelsUpdateHandler', 'cq.pagesupdatehandler.imageresourcetypes') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeCqScreensImplHandlerChannelsUpdateHandler', 'cq.pagesupdatehandler.productresourcetypes') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeCqScreensImplHandlerChannelsUpdateHandler', 'cq.pagesupdatehandler.videoresourcetypes') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeCqScreensImplHandlerChannelsUpdateHandler', 'cq.pagesupdatehandler.dynamicsequenceresourcetypes') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeCqScreensImplHandlerChannelsUpdateHandler', 'cq.pagesupdatehandler.previewmodepaths') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeCqScreensImplJobsDistributedDevicesStatiUpdateJob', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqScreensImplJobsDistributedDevicesStatiUpdateJob', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqScreensImplJobsDistributedDevicesStatiUpdateJob', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqScreensImplJobsDistributedDevicesStatiUpdateJob', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqScreensImplJobsDistributedDevicesStatiUpdateJob', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqScreensImplJobsDistributedDevicesStatiUpdateJob', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeCqScreensImplJobsDistributedDevicesStatiUpdateJob', 'scheduler.expression') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqScreensImplRemoteImplDistributedHttpClientImpl', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqScreensImplRemoteImplDistributedHttpClientImpl', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqScreensImplRemoteImplDistributedHttpClientImpl', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqScreensImplRemoteImplDistributedHttpClientImpl', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqScreensImplRemoteImplDistributedHttpClientImpl', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqScreensImplRemoteImplDistributedHttpClientImpl', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeCqScreensImplRemoteImplDistributedHttpClientImpl', 'com.adobe.aem.screens.impl.remote.request_timeout') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComAdobeCqScreensImplScreensChannelPostProcessor', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqScreensImplScreensChannelPostProcessor', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqScreensImplScreensChannelPostProcessor', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqScreensImplScreensChannelPostProcessor', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqScreensImplScreensChannelPostProcessor', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqScreensImplScreensChannelPostProcessor', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeCqScreensImplScreensChannelPostProcessor', 'screens.channels.properties.to.remove') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeCqScreensMonitoringImplScreensMonitoringServiceImpl', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqScreensMonitoringImplScreensMonitoringServiceImpl', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqScreensMonitoringImplScreensMonitoringServiceImpl', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqScreensMonitoringImplScreensMonitoringServiceImpl', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqScreensMonitoringImplScreensMonitoringServiceImpl', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqScreensMonitoringImplScreensMonitoringServiceImpl', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeCqScreensMonitoringImplScreensMonitoringServiceImpl', 'com.adobe.cq.screens.monitoring.impl.ScreensMonitoringServiceImpl.projectPath') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeCqScreensMonitoringImplScreensMonitoringServiceImpl', 'com.adobe.cq.screens.monitoring.impl.ScreensMonitoringServiceImpl.scheduleFrequency') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqScreensMonitoringImplScreensMonitoringServiceImpl', 'com.adobe.cq.screens.monitoring.impl.ScreensMonitoringServiceImpl.pingTimeout') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComAdobeCqScreensMonitoringImplScreensMonitoringServiceImpl', 'com.adobe.cq.screens.monitoring.impl.ScreensMonitoringServiceImpl.recipients') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqScreensMonitoringImplScreensMonitoringServiceImpl', 'com.adobe.cq.screens.monitoring.impl.ScreensMonitoringServiceImpl.smtpserver') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqScreensMonitoringImplScreensMonitoringServiceImpl', 'com.adobe.cq.screens.monitoring.impl.ScreensMonitoringServiceImpl.smtpport') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComAdobeCqScreensMonitoringImplScreensMonitoringServiceImpl', 'com.adobe.cq.screens.monitoring.impl.ScreensMonitoringServiceImpl.usetls') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqScreensMonitoringImplScreensMonitoringServiceImpl', 'com.adobe.cq.screens.monitoring.impl.ScreensMonitoringServiceImpl.username') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqScreensMonitoringImplScreensMonitoringServiceImpl', 'com.adobe.cq.screens.monitoring.impl.ScreensMonitoringServiceImpl.password') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqScreensMqActivemqImplArtemisJMSProvider', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqScreensMqActivemqImplArtemisJMSProvider', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqScreensMqActivemqImplArtemisJMSProvider', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqScreensMqActivemqImplArtemisJMSProvider', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqScreensMqActivemqImplArtemisJMSProvider', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqScreensMqActivemqImplArtemisJMSProvider', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeCqScreensMqActivemqImplArtemisJMSProvider', 'service.ranking') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComAdobeCqScreensMqActivemqImplArtemisJMSProvider', 'global.size') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComAdobeCqScreensMqActivemqImplArtemisJMSProvider', 'max.disk.usage') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComAdobeCqScreensMqActivemqImplArtemisJMSProvider', 'persistence.enabled') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqScreensMqActivemqImplArtemisJMSProvider', 'thread.pool.max.size') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComAdobeCqScreensMqActivemqImplArtemisJMSProvider', 'scheduled.thread.pool.max.size') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComAdobeCqScreensMqActivemqImplArtemisJMSProvider', 'graceful.shutdown.timeout') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComAdobeCqScreensMqActivemqImplArtemisJMSProvider', 'queues') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeCqScreensMqActivemqImplArtemisJMSProvider', 'topics') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeCqScreensMqActivemqImplArtemisJMSProvider', 'addresses.max.delivery.attempts') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComAdobeCqScreensMqActivemqImplArtemisJMSProvider', 'addresses.expiry.delay') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComAdobeCqScreensMqActivemqImplArtemisJMSProvider', 'addresses.address.full.message.policy') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqScreensMqActivemqImplArtemisJMSProvider', 'addresses.max.size.bytes') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComAdobeCqScreensMqActivemqImplArtemisJMSProvider', 'addresses.page.size.bytes') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComAdobeCqScreensMqActivemqImplArtemisJMSProvider', 'addresses.page.cache.max.size') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComAdobeCqScreensMqActivemqImplArtemisJMSProvider', 'cluster.user') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqScreensMqActivemqImplArtemisJMSProvider', 'cluster.password') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqScreensMqActivemqImplArtemisJMSProvider', 'cluster.call.timeout') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComAdobeCqScreensMqActivemqImplArtemisJMSProvider', 'cluster.call.failover.timeout') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComAdobeCqScreensMqActivemqImplArtemisJMSProvider', 'cluster.client.failure.check.period') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComAdobeCqScreensMqActivemqImplArtemisJMSProvider', 'cluster.notification.attempts') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComAdobeCqScreensMqActivemqImplArtemisJMSProvider', 'cluster.notification.interval') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComAdobeCqScreensMqActivemqImplArtemisJMSProvider', 'id.cache.size') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComAdobeCqScreensMqActivemqImplArtemisJMSProvider', 'cluster.confirmation.window.size') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComAdobeCqScreensMqActivemqImplArtemisJMSProvider', 'cluster.connection.ttl') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComAdobeCqScreensMqActivemqImplArtemisJMSProvider', 'cluster.duplicate.detection') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqScreensMqActivemqImplArtemisJMSProvider', 'cluster.initial.connect.attempts') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComAdobeCqScreensMqActivemqImplArtemisJMSProvider', 'cluster.max.retry.interval') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComAdobeCqScreensMqActivemqImplArtemisJMSProvider', 'cluster.min.large.message.size') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComAdobeCqScreensMqActivemqImplArtemisJMSProvider', 'cluster.producer.window.size') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComAdobeCqScreensMqActivemqImplArtemisJMSProvider', 'cluster.reconnect.attempts') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComAdobeCqScreensMqActivemqImplArtemisJMSProvider', 'cluster.retry.interval') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComAdobeCqScreensMqActivemqImplArtemisJMSProvider', 'cluster.retry.interval.multiplier') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'float'},
            not_required
        ]
    };

request_param_info('ComAdobeCqScreensOfflinecontentImplBulkOfflineUpdateServiceImpl', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqScreensOfflinecontentImplBulkOfflineUpdateServiceImpl', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqScreensOfflinecontentImplBulkOfflineUpdateServiceImpl', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqScreensOfflinecontentImplBulkOfflineUpdateServiceImpl', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqScreensOfflinecontentImplBulkOfflineUpdateServiceImpl', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqScreensOfflinecontentImplBulkOfflineUpdateServiceImpl', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeCqScreensOfflinecontentImplBulkOfflineUpdateServiceImpl', 'com.adobe.cq.screens.offlinecontent.impl.BulkOfflineUpdateServiceImpl.projectPath') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeCqScreensOfflinecontentImplBulkOfflineUpdateServiceImpl', 'com.adobe.cq.screens.offlinecontent.impl.BulkOfflineUpdateServiceImpl.scheduleFrequency') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqScreensOfflinecontentImplOfflineContentServiceImpl', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqScreensOfflinecontentImplOfflineContentServiceImpl', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqScreensOfflinecontentImplOfflineContentServiceImpl', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqScreensOfflinecontentImplOfflineContentServiceImpl', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqScreensOfflinecontentImplOfflineContentServiceImpl', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqScreensOfflinecontentImplOfflineContentServiceImpl', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeCqScreensOfflinecontentImplOfflineContentServiceImpl', 'disableSmartSync') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqScreensSegmentationImplSegmentationFeatureFlag', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqScreensSegmentationImplSegmentationFeatureFlag', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqScreensSegmentationImplSegmentationFeatureFlag', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqScreensSegmentationImplSegmentationFeatureFlag', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqScreensSegmentationImplSegmentationFeatureFlag', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqScreensSegmentationImplSegmentationFeatureFlag', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeCqScreensSegmentationImplSegmentationFeatureFlag', 'enableDataTriggeredContent') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSecurityHcBundlesImplHtmlLibraryManagerConfigHealthCh', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSecurityHcBundlesImplHtmlLibraryManagerConfigHealthCh', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSecurityHcBundlesImplHtmlLibraryManagerConfigHealthCh', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSecurityHcBundlesImplHtmlLibraryManagerConfigHealthCh', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSecurityHcBundlesImplHtmlLibraryManagerConfigHealthCh', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSecurityHcBundlesImplHtmlLibraryManagerConfigHealthCh', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeCqSecurityHcBundlesImplHtmlLibraryManagerConfigHealthCh', 'hc.tags') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeCqSecurityHcBundlesImplWcmFilterHealthCheck', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSecurityHcBundlesImplWcmFilterHealthCheck', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSecurityHcBundlesImplWcmFilterHealthCheck', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSecurityHcBundlesImplWcmFilterHealthCheck', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSecurityHcBundlesImplWcmFilterHealthCheck', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSecurityHcBundlesImplWcmFilterHealthCheck', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeCqSecurityHcBundlesImplWcmFilterHealthCheck', 'hc.tags') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeCqSecurityHcDispatcherImplDispatcherAccessHealthCheck', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSecurityHcDispatcherImplDispatcherAccessHealthCheck', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSecurityHcDispatcherImplDispatcherAccessHealthCheck', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSecurityHcDispatcherImplDispatcherAccessHealthCheck', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSecurityHcDispatcherImplDispatcherAccessHealthCheck', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSecurityHcDispatcherImplDispatcherAccessHealthCheck', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeCqSecurityHcDispatcherImplDispatcherAccessHealthCheck', 'hc.tags') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeCqSecurityHcDispatcherImplDispatcherAccessHealthCheck', 'dispatcher.address') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSecurityHcDispatcherImplDispatcherAccessHealthCheck', 'dispatcher.filter.allowed') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeCqSecurityHcDispatcherImplDispatcherAccessHealthCheck', 'dispatcher.filter.blocked') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeCqSecurityHcPackagesImplExampleContentHealthCheck', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSecurityHcPackagesImplExampleContentHealthCheck', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSecurityHcPackagesImplExampleContentHealthCheck', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSecurityHcPackagesImplExampleContentHealthCheck', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSecurityHcPackagesImplExampleContentHealthCheck', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSecurityHcPackagesImplExampleContentHealthCheck', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeCqSecurityHcPackagesImplExampleContentHealthCheck', 'hc.tags') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeCqSecurityHcWebserverImplClickjackingHealthCheck', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSecurityHcWebserverImplClickjackingHealthCheck', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSecurityHcWebserverImplClickjackingHealthCheck', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSecurityHcWebserverImplClickjackingHealthCheck', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSecurityHcWebserverImplClickjackingHealthCheck', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSecurityHcWebserverImplClickjackingHealthCheck', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeCqSecurityHcWebserverImplClickjackingHealthCheck', 'hc.tags') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeCqSecurityHcWebserverImplClickjackingHealthCheck', 'webserver.address') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialAccountverificationImplAccountManagementConfigIm', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialAccountverificationImplAccountManagementConfigIm', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialAccountverificationImplAccountManagementConfigIm', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialAccountverificationImplAccountManagementConfigIm', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialAccountverificationImplAccountManagementConfigIm', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialAccountverificationImplAccountManagementConfigIm', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialAccountverificationImplAccountManagementConfigIm', 'enable') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialAccountverificationImplAccountManagementConfigIm', 'ttl1') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialAccountverificationImplAccountManagementConfigIm', 'ttl2') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialActivitystreamsClientImplSocialActivityComponen', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialActivitystreamsClientImplSocialActivityComponen', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialActivitystreamsClientImplSocialActivityComponen', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialActivitystreamsClientImplSocialActivityComponen', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialActivitystreamsClientImplSocialActivityComponen', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialActivitystreamsClientImplSocialActivityComponen', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialActivitystreamsClientImplSocialActivityComponen', 'priority') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialActivitystreamsClientImplSocialActivityStreamCo', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialActivitystreamsClientImplSocialActivityStreamCo', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialActivitystreamsClientImplSocialActivityStreamCo', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialActivitystreamsClientImplSocialActivityStreamCo', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialActivitystreamsClientImplSocialActivityStreamCo', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialActivitystreamsClientImplSocialActivityStreamCo', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialActivitystreamsClientImplSocialActivityStreamCo', 'priority') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialActivitystreamsListenerImplEventListenerHandler', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialActivitystreamsListenerImplEventListenerHandler', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialActivitystreamsListenerImplEventListenerHandler', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialActivitystreamsListenerImplEventListenerHandler', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialActivitystreamsListenerImplEventListenerHandler', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialActivitystreamsListenerImplEventListenerHandler', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialActivitystreamsListenerImplEventListenerHandler', 'event.topics') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialActivitystreamsListenerImplEventListenerHandler', 'event.filter') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialActivitystreamsListenerImplModerationEventExten', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialActivitystreamsListenerImplModerationEventExten', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialActivitystreamsListenerImplModerationEventExten', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialActivitystreamsListenerImplModerationEventExten', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialActivitystreamsListenerImplModerationEventExten', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialActivitystreamsListenerImplModerationEventExten', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialActivitystreamsListenerImplModerationEventExten', 'accepted') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialActivitystreamsListenerImplModerationEventExten', 'ranked') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialActivitystreamsListenerImplRatingEventActivityS', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialActivitystreamsListenerImplRatingEventActivityS', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialActivitystreamsListenerImplRatingEventActivityS', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialActivitystreamsListenerImplRatingEventActivityS', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialActivitystreamsListenerImplRatingEventActivityS', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialActivitystreamsListenerImplRatingEventActivityS', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialActivitystreamsListenerImplRatingEventActivityS', 'ranking') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialActivitystreamsListenerImplRatingEventActivityS', 'enable') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialActivitystreamsListenerImplResourceActivityStre', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialActivitystreamsListenerImplResourceActivityStre', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialActivitystreamsListenerImplResourceActivityStre', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialActivitystreamsListenerImplResourceActivityStre', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialActivitystreamsListenerImplResourceActivityStre', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialActivitystreamsListenerImplResourceActivityStre', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialActivitystreamsListenerImplResourceActivityStre', 'streamPath') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialActivitystreamsListenerImplResourceActivityStre', 'streamName') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialCalendarClientEndpointsImplCalendarOperationsI', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialCalendarClientEndpointsImplCalendarOperationsI', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialCalendarClientEndpointsImplCalendarOperationsI', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialCalendarClientEndpointsImplCalendarOperationsI', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialCalendarClientEndpointsImplCalendarOperationsI', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialCalendarClientEndpointsImplCalendarOperationsI', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialCalendarClientEndpointsImplCalendarOperationsI', 'MaxRetry') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialCalendarClientEndpointsImplCalendarOperationsI', 'fieldWhitelist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialCalendarClientEndpointsImplCalendarOperationsI', 'attachmentTypeBlacklist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialCalendarClientOperationextensionsEventAttachmen', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialCalendarClientOperationextensionsEventAttachmen', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialCalendarClientOperationextensionsEventAttachmen', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialCalendarClientOperationextensionsEventAttachmen', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialCalendarClientOperationextensionsEventAttachmen', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialCalendarClientOperationextensionsEventAttachmen', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialCalendarClientOperationextensionsEventAttachmen', 'attachmentTypeBlacklist') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialCalendarClientOperationextensionsEventAttachmen', 'extension.order') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialCalendarServletsTimeZoneServlet', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialCalendarServletsTimeZoneServlet', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialCalendarServletsTimeZoneServlet', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialCalendarServletsTimeZoneServlet', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialCalendarServletsTimeZoneServlet', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialCalendarServletsTimeZoneServlet', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialCalendarServletsTimeZoneServlet', 'timezones.expirytime') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialCommonsCommentsEndpointsImplCommentDeleteEvent', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialCommonsCommentsEndpointsImplCommentDeleteEvent', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialCommonsCommentsEndpointsImplCommentDeleteEvent', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialCommonsCommentsEndpointsImplCommentDeleteEvent', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialCommonsCommentsEndpointsImplCommentDeleteEvent', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialCommonsCommentsEndpointsImplCommentDeleteEvent', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialCommonsCommentsEndpointsImplCommentDeleteEvent', 'ranking') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialCommonsCommentsEndpointsImplCommentOperationSe', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialCommonsCommentsEndpointsImplCommentOperationSe', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialCommonsCommentsEndpointsImplCommentOperationSe', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialCommonsCommentsEndpointsImplCommentOperationSe', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialCommonsCommentsEndpointsImplCommentOperationSe', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialCommonsCommentsEndpointsImplCommentOperationSe', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialCommonsCommentsEndpointsImplCommentOperationSe', 'fieldWhitelist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialCommonsCommentsEndpointsImplCommentOperationSe', 'attachmentTypeBlacklist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialCommonsCommentsEndpointsImplTranslationOperati', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialCommonsCommentsEndpointsImplTranslationOperati', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialCommonsCommentsEndpointsImplTranslationOperati', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialCommonsCommentsEndpointsImplTranslationOperati', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialCommonsCommentsEndpointsImplTranslationOperati', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialCommonsCommentsEndpointsImplTranslationOperati', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialCommonsCommentsEndpointsImplTranslationOperati', 'fieldWhitelist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialCommonsCommentsEndpointsImplTranslationOperati', 'attachmentTypeBlacklist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialCommonsCommentsListingImplSearchCommentSocialC', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialCommonsCommentsListingImplSearchCommentSocialC', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialCommonsCommentsListingImplSearchCommentSocialC', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialCommonsCommentsListingImplSearchCommentSocialC', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialCommonsCommentsListingImplSearchCommentSocialC', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialCommonsCommentsListingImplSearchCommentSocialC', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialCommonsCommentsListingImplSearchCommentSocialC', 'numUserLimit') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialCommonsCommentsSchedulerImplSearchScheduledPos', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialCommonsCommentsSchedulerImplSearchScheduledPos', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialCommonsCommentsSchedulerImplSearchScheduledPos', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialCommonsCommentsSchedulerImplSearchScheduledPos', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialCommonsCommentsSchedulerImplSearchScheduledPos', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialCommonsCommentsSchedulerImplSearchScheduledPos', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialCommonsCommentsSchedulerImplSearchScheduledPos', 'enableScheduledPostsSearch') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialCommonsCommentsSchedulerImplSearchScheduledPos', 'numberOfMinutes') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialCommonsCommentsSchedulerImplSearchScheduledPos', 'maxSearchLimit') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialCommonsCorsCORSAuthenticationFilter', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialCommonsCorsCORSAuthenticationFilter', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialCommonsCorsCORSAuthenticationFilter', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialCommonsCorsCORSAuthenticationFilter', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialCommonsCorsCORSAuthenticationFilter', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialCommonsCorsCORSAuthenticationFilter', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialCommonsCorsCORSAuthenticationFilter', 'cors.enabling') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialCommonsEmailreplyImplAndroidEmailClientProvider', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialCommonsEmailreplyImplAndroidEmailClientProvider', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialCommonsEmailreplyImplAndroidEmailClientProvider', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialCommonsEmailreplyImplAndroidEmailClientProvider', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialCommonsEmailreplyImplAndroidEmailClientProvider', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialCommonsEmailreplyImplAndroidEmailClientProvider', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialCommonsEmailreplyImplAndroidEmailClientProvider', 'priorityOrder') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialCommonsEmailreplyImplAndroidEmailClientProvider', 'replyEmailPatterns') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialCommonsEmailreplyImplCommentEmailBuilderImpl', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialCommonsEmailreplyImplCommentEmailBuilderImpl', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialCommonsEmailreplyImplCommentEmailBuilderImpl', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialCommonsEmailreplyImplCommentEmailBuilderImpl', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialCommonsEmailreplyImplCommentEmailBuilderImpl', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialCommonsEmailreplyImplCommentEmailBuilderImpl', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialCommonsEmailreplyImplCommentEmailBuilderImpl', 'context.path') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialCommonsEmailreplyImplCommentEmailEventListener', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialCommonsEmailreplyImplCommentEmailEventListener', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialCommonsEmailreplyImplCommentEmailEventListener', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialCommonsEmailreplyImplCommentEmailEventListener', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialCommonsEmailreplyImplCommentEmailEventListener', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialCommonsEmailreplyImplCommentEmailEventListener', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialCommonsEmailreplyImplCommentEmailEventListener', 'event.topics') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialCommonsEmailreplyImplCustomEmailClientProvider', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialCommonsEmailreplyImplCustomEmailClientProvider', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialCommonsEmailreplyImplCustomEmailClientProvider', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialCommonsEmailreplyImplCustomEmailClientProvider', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialCommonsEmailreplyImplCustomEmailClientProvider', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialCommonsEmailreplyImplCustomEmailClientProvider', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialCommonsEmailreplyImplCustomEmailClientProvider', 'priorityOrder') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialCommonsEmailreplyImplCustomEmailClientProvider', 'replyEmailPatterns') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialCommonsEmailreplyImplEmailQuotedTextPatternsImp', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialCommonsEmailreplyImplEmailQuotedTextPatternsImp', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialCommonsEmailreplyImplEmailQuotedTextPatternsImp', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialCommonsEmailreplyImplEmailQuotedTextPatternsImp', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialCommonsEmailreplyImplEmailQuotedTextPatternsImp', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialCommonsEmailreplyImplEmailQuotedTextPatternsImp', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialCommonsEmailreplyImplEmailQuotedTextPatternsImp', 'pattern.time') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialCommonsEmailreplyImplEmailQuotedTextPatternsImp', 'pattern.newline') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialCommonsEmailreplyImplEmailQuotedTextPatternsImp', 'pattern.dayOfMonth') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialCommonsEmailreplyImplEmailQuotedTextPatternsImp', 'pattern.month') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialCommonsEmailreplyImplEmailQuotedTextPatternsImp', 'pattern.year') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialCommonsEmailreplyImplEmailQuotedTextPatternsImp', 'pattern.date') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialCommonsEmailreplyImplEmailQuotedTextPatternsImp', 'pattern.dateTime') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialCommonsEmailreplyImplEmailQuotedTextPatternsImp', 'pattern.email') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialCommonsEmailreplyImplEmailReplyConfigurationImp', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialCommonsEmailreplyImplEmailReplyConfigurationImp', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialCommonsEmailreplyImplEmailReplyConfigurationImp', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialCommonsEmailreplyImplEmailReplyConfigurationImp', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialCommonsEmailreplyImplEmailReplyConfigurationImp', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialCommonsEmailreplyImplEmailReplyConfigurationImp', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialCommonsEmailreplyImplEmailReplyConfigurationImp', 'email.name') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialCommonsEmailreplyImplEmailReplyConfigurationImp', 'email.createPostFromReply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialCommonsEmailreplyImplEmailReplyConfigurationImp', 'email.addCommentIdTo') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialCommonsEmailreplyImplEmailReplyConfigurationImp', 'email.subjectMaximumLength') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialCommonsEmailreplyImplEmailReplyConfigurationImp', 'email.replyToAddress') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialCommonsEmailreplyImplEmailReplyConfigurationImp', 'email.replyToDelimiter') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialCommonsEmailreplyImplEmailReplyConfigurationImp', 'email.trackerIdPrefixInSubject') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialCommonsEmailreplyImplEmailReplyConfigurationImp', 'email.trackerIdPrefixInBody') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialCommonsEmailreplyImplEmailReplyConfigurationImp', 'email.asHTML') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialCommonsEmailreplyImplEmailReplyConfigurationImp', 'email.defaultUserName') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialCommonsEmailreplyImplEmailReplyConfigurationImp', 'email.templates.rootPath') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialCommonsEmailreplyImplEmailReplyImporter', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialCommonsEmailreplyImplEmailReplyImporter', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialCommonsEmailreplyImplEmailReplyImporter', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialCommonsEmailreplyImplEmailReplyImporter', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialCommonsEmailreplyImplEmailReplyImporter', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialCommonsEmailreplyImplEmailReplyImporter', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialCommonsEmailreplyImplEmailReplyImporter', 'connectProtocol') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialCommonsEmailreplyImplGmailEmailClientProvider', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialCommonsEmailreplyImplGmailEmailClientProvider', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialCommonsEmailreplyImplGmailEmailClientProvider', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialCommonsEmailreplyImplGmailEmailClientProvider', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialCommonsEmailreplyImplGmailEmailClientProvider', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialCommonsEmailreplyImplGmailEmailClientProvider', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialCommonsEmailreplyImplGmailEmailClientProvider', 'priorityOrder') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialCommonsEmailreplyImplGmailEmailClientProvider', 'replyEmailPatterns') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialCommonsEmailreplyImplIOSEmailClientProvider', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialCommonsEmailreplyImplIOSEmailClientProvider', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialCommonsEmailreplyImplIOSEmailClientProvider', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialCommonsEmailreplyImplIOSEmailClientProvider', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialCommonsEmailreplyImplIOSEmailClientProvider', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialCommonsEmailreplyImplIOSEmailClientProvider', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialCommonsEmailreplyImplIOSEmailClientProvider', 'priorityOrder') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialCommonsEmailreplyImplIOSEmailClientProvider', 'replyEmailPatterns') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialCommonsEmailreplyImplMacmailEmailClientProvider', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialCommonsEmailreplyImplMacmailEmailClientProvider', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialCommonsEmailreplyImplMacmailEmailClientProvider', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialCommonsEmailreplyImplMacmailEmailClientProvider', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialCommonsEmailreplyImplMacmailEmailClientProvider', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialCommonsEmailreplyImplMacmailEmailClientProvider', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialCommonsEmailreplyImplMacmailEmailClientProvider', 'priorityOrder') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialCommonsEmailreplyImplMacmailEmailClientProvider', 'replyEmailPatterns') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialCommonsEmailreplyImplOutLookEmailClientProvider', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialCommonsEmailreplyImplOutLookEmailClientProvider', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialCommonsEmailreplyImplOutLookEmailClientProvider', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialCommonsEmailreplyImplOutLookEmailClientProvider', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialCommonsEmailreplyImplOutLookEmailClientProvider', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialCommonsEmailreplyImplOutLookEmailClientProvider', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialCommonsEmailreplyImplOutLookEmailClientProvider', 'priorityOrder') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialCommonsEmailreplyImplOutLookEmailClientProvider', 'replyEmailPatterns') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialCommonsEmailreplyImplUnknownEmailClientProvider', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialCommonsEmailreplyImplUnknownEmailClientProvider', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialCommonsEmailreplyImplUnknownEmailClientProvider', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialCommonsEmailreplyImplUnknownEmailClientProvider', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialCommonsEmailreplyImplUnknownEmailClientProvider', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialCommonsEmailreplyImplUnknownEmailClientProvider', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialCommonsEmailreplyImplUnknownEmailClientProvider', 'replyEmailPatterns') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialCommonsEmailreplyImplUnknownEmailClientProvider', 'priorityOrder') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialCommonsEmailreplyImplYahooEmailClientProvider', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialCommonsEmailreplyImplYahooEmailClientProvider', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialCommonsEmailreplyImplYahooEmailClientProvider', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialCommonsEmailreplyImplYahooEmailClientProvider', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialCommonsEmailreplyImplYahooEmailClientProvider', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialCommonsEmailreplyImplYahooEmailClientProvider', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialCommonsEmailreplyImplYahooEmailClientProvider', 'priorityOrder') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialCommonsEmailreplyImplYahooEmailClientProvider', 'replyEmailPatterns') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialCommonsMaintainanceImplDeleteTempUGCImageUpload', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialCommonsMaintainanceImplDeleteTempUGCImageUpload', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialCommonsMaintainanceImplDeleteTempUGCImageUpload', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialCommonsMaintainanceImplDeleteTempUGCImageUpload', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialCommonsMaintainanceImplDeleteTempUGCImageUpload', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialCommonsMaintainanceImplDeleteTempUGCImageUpload', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialCommonsMaintainanceImplDeleteTempUGCImageUpload', 'numberOfDays') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialCommonsMaintainanceImplDeleteTempUGCImageUpload', 'ageOfFile') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialCommonsUgclimiterImplUGCLimiterServiceImpl', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialCommonsUgclimiterImplUGCLimiterServiceImpl', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialCommonsUgclimiterImplUGCLimiterServiceImpl', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialCommonsUgclimiterImplUGCLimiterServiceImpl', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialCommonsUgclimiterImplUGCLimiterServiceImpl', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialCommonsUgclimiterImplUGCLimiterServiceImpl', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialCommonsUgclimiterImplUGCLimiterServiceImpl', 'event.topics') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialCommonsUgclimiterImplUGCLimiterServiceImpl', 'event.filter') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialCommonsUgclimiterImplUGCLimiterServiceImpl', 'verbs') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialCommonsUgclimitsconfigImplCommunityUserUGCLimit', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialCommonsUgclimitsconfigImplCommunityUserUGCLimit', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialCommonsUgclimitsconfigImplCommunityUserUGCLimit', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialCommonsUgclimitsconfigImplCommunityUserUGCLimit', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialCommonsUgclimitsconfigImplCommunityUserUGCLimit', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialCommonsUgclimitsconfigImplCommunityUserUGCLimit', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialCommonsUgclimitsconfigImplCommunityUserUGCLimit', 'enable') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialCommonsUgclimitsconfigImplCommunityUserUGCLimit', 'UGCLimit') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialCommonsUgclimitsconfigImplCommunityUserUGCLimit', 'ugcLimitDuration') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialCommonsUgclimitsconfigImplCommunityUserUGCLimit', 'domains') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialCommonsUgclimitsconfigImplCommunityUserUGCLimit', 'toList') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialConnectOauthImplFacebookProviderImpl', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialConnectOauthImplFacebookProviderImpl', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialConnectOauthImplFacebookProviderImpl', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialConnectOauthImplFacebookProviderImpl', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialConnectOauthImplFacebookProviderImpl', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialConnectOauthImplFacebookProviderImpl', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialConnectOauthImplFacebookProviderImpl', 'oauth.provider.id') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialConnectOauthImplFacebookProviderImpl', 'oauth.cloud.config.root') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialConnectOauthImplFacebookProviderImpl', 'provider.config.root') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialConnectOauthImplFacebookProviderImpl', 'provider.config.create.tags.enabled') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialConnectOauthImplFacebookProviderImpl', 'provider.config.user.folder') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialConnectOauthImplFacebookProviderImpl', 'provider.config.facebook.fetch.fields') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialConnectOauthImplFacebookProviderImpl', 'provider.config.facebook.fields') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialConnectOauthImplFacebookProviderImpl', 'provider.config.refresh.userdata.enabled') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialConnectOauthImplSocialOAuthAuthenticationHandle', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialConnectOauthImplSocialOAuthAuthenticationHandle', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialConnectOauthImplSocialOAuthAuthenticationHandle', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialConnectOauthImplSocialOAuthAuthenticationHandle', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialConnectOauthImplSocialOAuthAuthenticationHandle', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialConnectOauthImplSocialOAuthAuthenticationHandle', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialConnectOauthImplSocialOAuthAuthenticationHandle', 'path') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialConnectOauthImplSocialOAuthAuthenticationHandle', 'service.ranking') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialConnectOauthImplSocialOAuthUserProfileMapper', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialConnectOauthImplSocialOAuthUserProfileMapper', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialConnectOauthImplSocialOAuthUserProfileMapper', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialConnectOauthImplSocialOAuthUserProfileMapper', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialConnectOauthImplSocialOAuthUserProfileMapper', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialConnectOauthImplSocialOAuthUserProfileMapper', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialConnectOauthImplSocialOAuthUserProfileMapper', 'facebook') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialConnectOauthImplSocialOAuthUserProfileMapper', 'twitter') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialConnectOauthImplSocialOAuthUserProfileMapper', 'provider.config.user.folder') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialConnectOauthImplTwitterProviderImpl', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialConnectOauthImplTwitterProviderImpl', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialConnectOauthImplTwitterProviderImpl', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialConnectOauthImplTwitterProviderImpl', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialConnectOauthImplTwitterProviderImpl', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialConnectOauthImplTwitterProviderImpl', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialConnectOauthImplTwitterProviderImpl', 'oauth.provider.id') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialConnectOauthImplTwitterProviderImpl', 'oauth.cloud.config.root') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialConnectOauthImplTwitterProviderImpl', 'provider.config.root') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialConnectOauthImplTwitterProviderImpl', 'provider.config.user.folder') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialConnectOauthImplTwitterProviderImpl', 'provider.config.twitter.enable.params') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialConnectOauthImplTwitterProviderImpl', 'provider.config.twitter.params') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialConnectOauthImplTwitterProviderImpl', 'provider.config.refresh.userdata.enabled') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialContentFragmentsServicesImplCommunitiesFragmen', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialContentFragmentsServicesImplCommunitiesFragmen', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialContentFragmentsServicesImplCommunitiesFragmen', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialContentFragmentsServicesImplCommunitiesFragmen', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialContentFragmentsServicesImplCommunitiesFragmen', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialContentFragmentsServicesImplCommunitiesFragmen', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialContentFragmentsServicesImplCommunitiesFragmen', 'cq.social.content.fragments.services.enabled') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialContentFragmentsServicesImplCommunitiesFragmen', 'cq.social.content.fragments.services.waitTimeSeconds') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialDatastoreAsImplASResourceProviderFactory', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialDatastoreAsImplASResourceProviderFactory', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialDatastoreAsImplASResourceProviderFactory', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialDatastoreAsImplASResourceProviderFactory', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialDatastoreAsImplASResourceProviderFactory', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialDatastoreAsImplASResourceProviderFactory', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialDatastoreAsImplASResourceProviderFactory', 'version.id') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialDatastoreAsImplASResourceProviderFactory', 'cache.on') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialDatastoreAsImplASResourceProviderFactory', 'concurrency.level') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialDatastoreAsImplASResourceProviderFactory', 'cache.start.size') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialDatastoreAsImplASResourceProviderFactory', 'cache.ttl') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialDatastoreAsImplASResourceProviderFactory', 'cache.size') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialDatastoreAsImplASResourceProviderFactory', 'time.limit') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialDatastoreOpImplSocialMSResourceProviderFactory', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialDatastoreOpImplSocialMSResourceProviderFactory', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialDatastoreOpImplSocialMSResourceProviderFactory', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialDatastoreOpImplSocialMSResourceProviderFactory', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialDatastoreOpImplSocialMSResourceProviderFactory', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialDatastoreOpImplSocialMSResourceProviderFactory', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialDatastoreOpImplSocialMSResourceProviderFactory', 'solr.zk.timeout') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialDatastoreOpImplSocialMSResourceProviderFactory', 'solr.commit') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialDatastoreOpImplSocialMSResourceProviderFactory', 'cache.on') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialDatastoreOpImplSocialMSResourceProviderFactory', 'concurrency.level') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialDatastoreOpImplSocialMSResourceProviderFactory', 'cache.start.size') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialDatastoreOpImplSocialMSResourceProviderFactory', 'cache.ttl') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialDatastoreOpImplSocialMSResourceProviderFactory', 'cache.size') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialDatastoreRdbImplSocialRDBResourceProviderFactor', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialDatastoreRdbImplSocialRDBResourceProviderFactor', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialDatastoreRdbImplSocialRDBResourceProviderFactor', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialDatastoreRdbImplSocialRDBResourceProviderFactor', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialDatastoreRdbImplSocialRDBResourceProviderFactor', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialDatastoreRdbImplSocialRDBResourceProviderFactor', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialDatastoreRdbImplSocialRDBResourceProviderFactor', 'solr.zk.timeout') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialDatastoreRdbImplSocialRDBResourceProviderFactor', 'solr.commit') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialDatastoreRdbImplSocialRDBResourceProviderFactor', 'cache.on') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialDatastoreRdbImplSocialRDBResourceProviderFactor', 'concurrency.level') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialDatastoreRdbImplSocialRDBResourceProviderFactor', 'cache.start.size') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialDatastoreRdbImplSocialRDBResourceProviderFactor', 'cache.ttl') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialDatastoreRdbImplSocialRDBResourceProviderFactor', 'cache.size') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialEnablementAdaptorsEnablementLearningPathAdaptorF', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialEnablementAdaptorsEnablementLearningPathAdaptorF', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialEnablementAdaptorsEnablementLearningPathAdaptorF', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialEnablementAdaptorsEnablementLearningPathAdaptorF', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialEnablementAdaptorsEnablementLearningPathAdaptorF', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialEnablementAdaptorsEnablementLearningPathAdaptorF', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialEnablementAdaptorsEnablementLearningPathAdaptorF', 'isMemberCheck') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialEnablementAdaptorsEnablementResourceAdaptorFacto', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialEnablementAdaptorsEnablementResourceAdaptorFacto', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialEnablementAdaptorsEnablementResourceAdaptorFacto', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialEnablementAdaptorsEnablementResourceAdaptorFacto', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialEnablementAdaptorsEnablementResourceAdaptorFacto', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialEnablementAdaptorsEnablementResourceAdaptorFacto', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialEnablementAdaptorsEnablementResourceAdaptorFacto', 'isMemberCheck') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialEnablementLearningpathEndpointsImplEnablementL', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialEnablementLearningpathEndpointsImplEnablementL', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialEnablementLearningpathEndpointsImplEnablementL', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialEnablementLearningpathEndpointsImplEnablementL', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialEnablementLearningpathEndpointsImplEnablementL', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialEnablementLearningpathEndpointsImplEnablementL', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialEnablementLearningpathEndpointsImplEnablementL', 'fieldWhitelist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialEnablementResourceEndpointsImplEnablementResou', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialEnablementResourceEndpointsImplEnablementResou', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialEnablementResourceEndpointsImplEnablementResou', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialEnablementResourceEndpointsImplEnablementResou', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialEnablementResourceEndpointsImplEnablementResou', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialEnablementResourceEndpointsImplEnablementResou', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialEnablementResourceEndpointsImplEnablementResou', 'fieldWhitelist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialEnablementServicesImplAuthorMarkerImpl', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialEnablementServicesImplAuthorMarkerImpl', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialEnablementServicesImplAuthorMarkerImpl', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialEnablementServicesImplAuthorMarkerImpl', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialEnablementServicesImplAuthorMarkerImpl', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialEnablementServicesImplAuthorMarkerImpl', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialEnablementServicesImplAuthorMarkerImpl', 'service.ranking') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialFilelibraryClientEndpointsFilelibraryDownloadGe', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialFilelibraryClientEndpointsFilelibraryDownloadGe', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialFilelibraryClientEndpointsFilelibraryDownloadGe', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialFilelibraryClientEndpointsFilelibraryDownloadGe', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialFilelibraryClientEndpointsFilelibraryDownloadGe', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialFilelibraryClientEndpointsFilelibraryDownloadGe', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialFilelibraryClientEndpointsFilelibraryDownloadGe', 'sling.servlet.selectors') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialFilelibraryClientEndpointsFilelibraryDownloadGe', 'sling.servlet.extensions') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialFilelibraryClientEndpointsImplFileLibraryOpera', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialFilelibraryClientEndpointsImplFileLibraryOpera', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialFilelibraryClientEndpointsImplFileLibraryOpera', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialFilelibraryClientEndpointsImplFileLibraryOpera', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialFilelibraryClientEndpointsImplFileLibraryOpera', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialFilelibraryClientEndpointsImplFileLibraryOpera', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialFilelibraryClientEndpointsImplFileLibraryOpera', 'fieldWhitelist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialFilelibraryClientEndpointsImplFileLibraryOpera', 'attachmentTypeBlacklist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialForumClientEndpointsImplForumOperationsService', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialForumClientEndpointsImplForumOperationsService', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialForumClientEndpointsImplForumOperationsService', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialForumClientEndpointsImplForumOperationsService', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialForumClientEndpointsImplForumOperationsService', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialForumClientEndpointsImplForumOperationsService', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialForumClientEndpointsImplForumOperationsService', 'fieldWhitelist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialForumClientEndpointsImplForumOperationsService', 'attachmentTypeBlacklist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialForumDispatcherImplFlushOperations', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialForumDispatcherImplFlushOperations', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialForumDispatcherImplFlushOperations', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialForumDispatcherImplFlushOperations', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialForumDispatcherImplFlushOperations', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialForumDispatcherImplFlushOperations', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialForumDispatcherImplFlushOperations', 'extension.order') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialForumDispatcherImplFlushOperations', 'flush.forumontopic') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialGroupClientImplCommunityGroupCollectionComponen', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialGroupClientImplCommunityGroupCollectionComponen', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialGroupClientImplCommunityGroupCollectionComponen', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialGroupClientImplCommunityGroupCollectionComponen', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialGroupClientImplCommunityGroupCollectionComponen', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialGroupClientImplCommunityGroupCollectionComponen', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialGroupClientImplCommunityGroupCollectionComponen', 'group.listing.pagination.enable') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialGroupClientImplCommunityGroupCollectionComponen', 'group.listing.lazyloading.enable') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialGroupClientImplCommunityGroupCollectionComponen', 'page.size') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialGroupClientImplCommunityGroupCollectionComponen', 'priority') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialGroupImplGroupServiceImpl', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialGroupImplGroupServiceImpl', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialGroupImplGroupServiceImpl', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialGroupImplGroupServiceImpl', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialGroupImplGroupServiceImpl', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialGroupImplGroupServiceImpl', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialGroupImplGroupServiceImpl', 'maxWaitTime') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialGroupImplGroupServiceImpl', 'minWaitBetweenRetries') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialHandlebarsGuavaTemplateCacheImpl', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialHandlebarsGuavaTemplateCacheImpl', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialHandlebarsGuavaTemplateCacheImpl', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialHandlebarsGuavaTemplateCacheImpl', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialHandlebarsGuavaTemplateCacheImpl', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialHandlebarsGuavaTemplateCacheImpl', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialHandlebarsGuavaTemplateCacheImpl', 'parameter.guava.cache.enabled') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialHandlebarsGuavaTemplateCacheImpl', 'parameter.guava.cache.params') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialHandlebarsGuavaTemplateCacheImpl', 'parameter.guava.cache.reload') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialHandlebarsGuavaTemplateCacheImpl', 'service.ranking') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialIdeationClientEndpointsImplIdeationOperationsS', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialIdeationClientEndpointsImplIdeationOperationsS', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialIdeationClientEndpointsImplIdeationOperationsS', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialIdeationClientEndpointsImplIdeationOperationsS', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialIdeationClientEndpointsImplIdeationOperationsS', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialIdeationClientEndpointsImplIdeationOperationsS', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialIdeationClientEndpointsImplIdeationOperationsS', 'fieldWhitelist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialIdeationClientEndpointsImplIdeationOperationsS', 'attachmentTypeBlacklist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialJournalClientEndpointsImplJournalOperationsSer', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialJournalClientEndpointsImplJournalOperationsSer', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialJournalClientEndpointsImplJournalOperationsSer', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialJournalClientEndpointsImplJournalOperationsSer', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialJournalClientEndpointsImplJournalOperationsSer', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialJournalClientEndpointsImplJournalOperationsSer', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialJournalClientEndpointsImplJournalOperationsSer', 'fieldWhitelist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialJournalClientEndpointsImplJournalOperationsSer', 'attachmentTypeBlacklist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialMembersEndpointsImplCommunityMemberGroupProfile', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialMembersEndpointsImplCommunityMemberGroupProfile', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialMembersEndpointsImplCommunityMemberGroupProfile', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialMembersEndpointsImplCommunityMemberGroupProfile', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialMembersEndpointsImplCommunityMemberGroupProfile', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialMembersEndpointsImplCommunityMemberGroupProfile', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialMembersEndpointsImplCommunityMemberGroupProfile', 'fieldWhitelist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialMembersEndpointsImplCommunityMemberUserProfileO', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialMembersEndpointsImplCommunityMemberUserProfileO', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialMembersEndpointsImplCommunityMemberUserProfileO', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialMembersEndpointsImplCommunityMemberUserProfileO', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialMembersEndpointsImplCommunityMemberUserProfileO', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialMembersEndpointsImplCommunityMemberUserProfileO', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialMembersEndpointsImplCommunityMemberUserProfileO', 'fieldWhitelist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialMembersImplCommunityMemberGroupProfileComponentF', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialMembersImplCommunityMemberGroupProfileComponentF', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialMembersImplCommunityMemberGroupProfileComponentF', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialMembersImplCommunityMemberGroupProfileComponentF', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialMembersImplCommunityMemberGroupProfileComponentF', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialMembersImplCommunityMemberGroupProfileComponentF', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialMembersImplCommunityMemberGroupProfileComponentF', 'everyoneLimit') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialMembersImplCommunityMemberGroupProfileComponentF', 'priority') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialMessagingClientEndpointsImplMessagingOperation', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialMessagingClientEndpointsImplMessagingOperation', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialMessagingClientEndpointsImplMessagingOperation', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialMessagingClientEndpointsImplMessagingOperation', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialMessagingClientEndpointsImplMessagingOperation', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialMessagingClientEndpointsImplMessagingOperation', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialMessagingClientEndpointsImplMessagingOperation', 'message.properties') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialMessagingClientEndpointsImplMessagingOperation', 'messageBoxSizeLimit') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialMessagingClientEndpointsImplMessagingOperation', 'messageCountLimit') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialMessagingClientEndpointsImplMessagingOperation', 'notifyFailure') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialMessagingClientEndpointsImplMessagingOperation', 'failureMessageFrom') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialMessagingClientEndpointsImplMessagingOperation', 'failureTemplatePath') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialMessagingClientEndpointsImplMessagingOperation', 'maxRetries') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialMessagingClientEndpointsImplMessagingOperation', 'minWaitBetweenRetries') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialMessagingClientEndpointsImplMessagingOperation', 'countUpdatePoolSize') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialMessagingClientEndpointsImplMessagingOperation', 'inbox.path') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialMessagingClientEndpointsImplMessagingOperation', 'sentitems.path') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialMessagingClientEndpointsImplMessagingOperation', 'supportAttachments') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialMessagingClientEndpointsImplMessagingOperation', 'supportGroupMessaging') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialMessagingClientEndpointsImplMessagingOperation', 'maxTotalRecipients') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialMessagingClientEndpointsImplMessagingOperation', 'batchSize') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialMessagingClientEndpointsImplMessagingOperation', 'maxTotalAttachmentSize') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialMessagingClientEndpointsImplMessagingOperation', 'attachmentTypeBlacklist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialMessagingClientEndpointsImplMessagingOperation', 'allowedAttachmentTypes') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialMessagingClientEndpointsImplMessagingOperation', 'serviceSelector') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialMessagingClientEndpointsImplMessagingOperation', 'fieldWhitelist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialModerationDashboardApiFilterGroupSocialComponen', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialModerationDashboardApiFilterGroupSocialComponen', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialModerationDashboardApiFilterGroupSocialComponen', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialModerationDashboardApiFilterGroupSocialComponen', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialModerationDashboardApiFilterGroupSocialComponen', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialModerationDashboardApiFilterGroupSocialComponen', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialModerationDashboardApiFilterGroupSocialComponen', 'resourceType.filters') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialModerationDashboardApiFilterGroupSocialComponen', 'priority') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialModerationDashboardApiModerationDashboardSocial', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialModerationDashboardApiModerationDashboardSocial', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialModerationDashboardApiModerationDashboardSocial', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialModerationDashboardApiModerationDashboardSocial', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialModerationDashboardApiModerationDashboardSocial', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialModerationDashboardApiModerationDashboardSocial', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialModerationDashboardApiModerationDashboardSocial', 'priority') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialModerationDashboardApiUserDetailsSocialComponen', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialModerationDashboardApiUserDetailsSocialComponen', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialModerationDashboardApiUserDetailsSocialComponen', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialModerationDashboardApiUserDetailsSocialComponen', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialModerationDashboardApiUserDetailsSocialComponen', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialModerationDashboardApiUserDetailsSocialComponen', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialModerationDashboardApiUserDetailsSocialComponen', 'priority') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialModerationDashboardInternalImplFilterGroupSoci', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialModerationDashboardInternalImplFilterGroupSoci', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialModerationDashboardInternalImplFilterGroupSoci', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialModerationDashboardInternalImplFilterGroupSoci', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialModerationDashboardInternalImplFilterGroupSoci', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialModerationDashboardInternalImplFilterGroupSoci', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialModerationDashboardInternalImplFilterGroupSoci', 'resourceType.filters') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialModerationDashboardInternalImplFilterGroupSoci', 'priority') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialNotificationsImplMentionsRouter', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialNotificationsImplMentionsRouter', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialNotificationsImplMentionsRouter', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialNotificationsImplMentionsRouter', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialNotificationsImplMentionsRouter', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialNotificationsImplMentionsRouter', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialNotificationsImplMentionsRouter', 'event.topics') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialNotificationsImplMentionsRouter', 'event.filter') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialNotificationsImplNotificationManagerImpl', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialNotificationsImplNotificationManagerImpl', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialNotificationsImplNotificationManagerImpl', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialNotificationsImplNotificationManagerImpl', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialNotificationsImplNotificationManagerImpl', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialNotificationsImplNotificationManagerImpl', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialNotificationsImplNotificationManagerImpl', 'max.unread.notification.count') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialNotificationsImplNotificationsRouter', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialNotificationsImplNotificationsRouter', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialNotificationsImplNotificationsRouter', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialNotificationsImplNotificationsRouter', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialNotificationsImplNotificationsRouter', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialNotificationsImplNotificationsRouter', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialNotificationsImplNotificationsRouter', 'event.topics') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialNotificationsImplNotificationsRouter', 'event.filter') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialQnaClientEndpointsImplQnaForumOperationsServic', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialQnaClientEndpointsImplQnaForumOperationsServic', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialQnaClientEndpointsImplQnaForumOperationsServic', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialQnaClientEndpointsImplQnaForumOperationsServic', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialQnaClientEndpointsImplQnaForumOperationsServic', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialQnaClientEndpointsImplQnaForumOperationsServic', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialQnaClientEndpointsImplQnaForumOperationsServic', 'fieldWhitelist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialQnaClientEndpointsImplQnaForumOperationsServic', 'attachmentTypeBlacklist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialReportingAnalyticsServicesImplAnalyticsReportI', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialReportingAnalyticsServicesImplAnalyticsReportI', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialReportingAnalyticsServicesImplAnalyticsReportI', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialReportingAnalyticsServicesImplAnalyticsReportI', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialReportingAnalyticsServicesImplAnalyticsReportI', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialReportingAnalyticsServicesImplAnalyticsReportI', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialReportingAnalyticsServicesImplAnalyticsReportI', 'cq.social.reporting.analytics.polling.importer.interval') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialReportingAnalyticsServicesImplAnalyticsReportI', 'cq.social.reporting.analytics.polling.importer.pageSize') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialReportingAnalyticsServicesImplAnalyticsReportM', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialReportingAnalyticsServicesImplAnalyticsReportM', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialReportingAnalyticsServicesImplAnalyticsReportM', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialReportingAnalyticsServicesImplAnalyticsReportM', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialReportingAnalyticsServicesImplAnalyticsReportM', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialReportingAnalyticsServicesImplAnalyticsReportM', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialReportingAnalyticsServicesImplAnalyticsReportM', 'report.fetch.delay') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialReportingAnalyticsServicesImplSiteTrendReportS', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialReportingAnalyticsServicesImplSiteTrendReportS', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialReportingAnalyticsServicesImplSiteTrendReportS', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialReportingAnalyticsServicesImplSiteTrendReportS', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialReportingAnalyticsServicesImplSiteTrendReportS', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialReportingAnalyticsServicesImplSiteTrendReportS', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialReportingAnalyticsServicesImplSiteTrendReportS', 'cq.social.console.analytics.sites.mapping') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialReportingAnalyticsServicesImplSiteTrendReportS', 'priority') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialReviewClientEndpointsImplReviewOperationsServi', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialReviewClientEndpointsImplReviewOperationsServi', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialReviewClientEndpointsImplReviewOperationsServi', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialReviewClientEndpointsImplReviewOperationsServi', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialReviewClientEndpointsImplReviewOperationsServi', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialReviewClientEndpointsImplReviewOperationsServi', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialReviewClientEndpointsImplReviewOperationsServi', 'fieldWhitelist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialReviewClientEndpointsImplReviewOperationsServi', 'attachmentTypeBlacklist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialScfCoreOperationsImplSocialOperationsServlet', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialScfCoreOperationsImplSocialOperationsServlet', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialScfCoreOperationsImplSocialOperationsServlet', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialScfCoreOperationsImplSocialOperationsServlet', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialScfCoreOperationsImplSocialOperationsServlet', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialScfCoreOperationsImplSocialOperationsServlet', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialScfCoreOperationsImplSocialOperationsServlet', 'sling.servlet.selectors') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialScfCoreOperationsImplSocialOperationsServlet', 'sling.servlet.extensions') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialScfEndpointsImplDefaultSocialGetServlet', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialScfEndpointsImplDefaultSocialGetServlet', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialScfEndpointsImplDefaultSocialGetServlet', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialScfEndpointsImplDefaultSocialGetServlet', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialScfEndpointsImplDefaultSocialGetServlet', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialScfEndpointsImplDefaultSocialGetServlet', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialScfEndpointsImplDefaultSocialGetServlet', 'sling.servlet.selectors') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialScfEndpointsImplDefaultSocialGetServlet', 'sling.servlet.extensions') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialScoringImplScoringEventListener', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialScoringImplScoringEventListener', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialScoringImplScoringEventListener', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialScoringImplScoringEventListener', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialScoringImplScoringEventListener', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialScoringImplScoringEventListener', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialScoringImplScoringEventListener', 'event.topics') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialScoringImplScoringEventListener', 'event.filter') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialServiceusersInternalImplServiceUserWrapperImpl', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialServiceusersInternalImplServiceUserWrapperImpl', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialServiceusersInternalImplServiceUserWrapperImpl', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialServiceusersInternalImplServiceUserWrapperImpl', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialServiceusersInternalImplServiceUserWrapperImpl', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialServiceusersInternalImplServiceUserWrapperImpl', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialServiceusersInternalImplServiceUserWrapperImpl', 'enableFallback') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialSiteEndpointsImplSiteOperationService', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialSiteEndpointsImplSiteOperationService', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialSiteEndpointsImplSiteOperationService', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialSiteEndpointsImplSiteOperationService', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialSiteEndpointsImplSiteOperationService', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialSiteEndpointsImplSiteOperationService', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialSiteEndpointsImplSiteOperationService', 'fieldWhitelist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialSiteEndpointsImplSiteOperationService', 'sitePathFilters') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialSiteEndpointsImplSiteOperationService', 'sitePackageGroup') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialSiteImplAnalyticsComponentConfigurationServiceIm', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialSiteImplAnalyticsComponentConfigurationServiceIm', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialSiteImplAnalyticsComponentConfigurationServiceIm', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialSiteImplAnalyticsComponentConfigurationServiceIm', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialSiteImplAnalyticsComponentConfigurationServiceIm', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialSiteImplAnalyticsComponentConfigurationServiceIm', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialSiteImplAnalyticsComponentConfigurationServiceIm', 'cq.social.console.analytics.components') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialSiteImplSiteConfiguratorImpl', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialSiteImplSiteConfiguratorImpl', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialSiteImplSiteConfiguratorImpl', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialSiteImplSiteConfiguratorImpl', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialSiteImplSiteConfiguratorImpl', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialSiteImplSiteConfiguratorImpl', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialSiteImplSiteConfiguratorImpl', 'componentsUsingTags') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialSrpImplSocialSolrConnector', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialSrpImplSocialSolrConnector', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialSrpImplSocialSolrConnector', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialSrpImplSocialSolrConnector', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialSrpImplSocialSolrConnector', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialSrpImplSocialSolrConnector', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialSrpImplSocialSolrConnector', 'srp.type') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialSyncImplDiffChangesObserver', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialSyncImplDiffChangesObserver', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialSyncImplDiffChangesObserver', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialSyncImplDiffChangesObserver', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialSyncImplDiffChangesObserver', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialSyncImplDiffChangesObserver', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialSyncImplDiffChangesObserver', 'enabled') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialSyncImplDiffChangesObserver', 'agentName') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialSyncImplDiffChangesObserver', 'diffPath') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialSyncImplDiffChangesObserver', 'propertyNames') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialSyncImplGroupSyncListenerImpl', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialSyncImplGroupSyncListenerImpl', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialSyncImplGroupSyncListenerImpl', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialSyncImplGroupSyncListenerImpl', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialSyncImplGroupSyncListenerImpl', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialSyncImplGroupSyncListenerImpl', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialSyncImplGroupSyncListenerImpl', 'nodetypes') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialSyncImplGroupSyncListenerImpl', 'ignorableprops') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialSyncImplGroupSyncListenerImpl', 'ignorablenodes') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialSyncImplGroupSyncListenerImpl', 'enabled') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialSyncImplGroupSyncListenerImpl', 'distfolders') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialSyncImplPublisherSyncServiceImpl', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialSyncImplPublisherSyncServiceImpl', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialSyncImplPublisherSyncServiceImpl', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialSyncImplPublisherSyncServiceImpl', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialSyncImplPublisherSyncServiceImpl', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialSyncImplPublisherSyncServiceImpl', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialSyncImplPublisherSyncServiceImpl', 'activeRunModes') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialSyncImplUserSyncListenerImpl', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialSyncImplUserSyncListenerImpl', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialSyncImplUserSyncListenerImpl', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialSyncImplUserSyncListenerImpl', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialSyncImplUserSyncListenerImpl', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialSyncImplUserSyncListenerImpl', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialSyncImplUserSyncListenerImpl', 'nodetypes') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialSyncImplUserSyncListenerImpl', 'ignorableprops') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialSyncImplUserSyncListenerImpl', 'ignorablenodes') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialSyncImplUserSyncListenerImpl', 'enabled') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialSyncImplUserSyncListenerImpl', 'distfolders') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialTranslationImplTranslationServiceConfigManager', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialTranslationImplTranslationServiceConfigManager', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialTranslationImplTranslationServiceConfigManager', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialTranslationImplTranslationServiceConfigManager', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialTranslationImplTranslationServiceConfigManager', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialTranslationImplTranslationServiceConfigManager', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialTranslationImplTranslationServiceConfigManager', 'translate.language') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialTranslationImplTranslationServiceConfigManager', 'translate.display') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialTranslationImplTranslationServiceConfigManager', 'translate.attribution') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialTranslationImplTranslationServiceConfigManager', 'translate.caching') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialTranslationImplTranslationServiceConfigManager', 'translate.smart.rendering') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialTranslationImplTranslationServiceConfigManager', 'translate.caching.duration') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialTranslationImplTranslationServiceConfigManager', 'translate.session.save.interval') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialTranslationImplTranslationServiceConfigManager', 'translate.session.save.batchLimit') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialTranslationImplUGCLanguageDetector', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialTranslationImplUGCLanguageDetector', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialTranslationImplUGCLanguageDetector', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialTranslationImplUGCLanguageDetector', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialTranslationImplUGCLanguageDetector', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialTranslationImplUGCLanguageDetector', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialTranslationImplUGCLanguageDetector', 'event.topics') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialTranslationImplUGCLanguageDetector', 'event.filter') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialTranslationImplUGCLanguageDetector', 'translate.listener.type') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialTranslationImplUGCLanguageDetector', 'translate.property.list') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialTranslationImplUGCLanguageDetector', 'poolSize') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialTranslationImplUGCLanguageDetector', 'maxPoolSize') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialTranslationImplUGCLanguageDetector', 'queueSize') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialTranslationImplUGCLanguageDetector', 'keepAliveTime') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialUgcbaseDispatcherImplFlushServiceImpl', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialUgcbaseDispatcherImplFlushServiceImpl', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialUgcbaseDispatcherImplFlushServiceImpl', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialUgcbaseDispatcherImplFlushServiceImpl', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialUgcbaseDispatcherImplFlushServiceImpl', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialUgcbaseDispatcherImplFlushServiceImpl', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialUgcbaseDispatcherImplFlushServiceImpl', 'threadPoolSize') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialUgcbaseDispatcherImplFlushServiceImpl', 'delayTime') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialUgcbaseDispatcherImplFlushServiceImpl', 'workerSleepTime') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialUgcbaseImplAysncReverseReplicatorImpl', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialUgcbaseImplAysncReverseReplicatorImpl', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialUgcbaseImplAysncReverseReplicatorImpl', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialUgcbaseImplAysncReverseReplicatorImpl', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialUgcbaseImplAysncReverseReplicatorImpl', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialUgcbaseImplAysncReverseReplicatorImpl', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialUgcbaseImplAysncReverseReplicatorImpl', 'poolSize') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialUgcbaseImplAysncReverseReplicatorImpl', 'maxPoolSize') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialUgcbaseImplAysncReverseReplicatorImpl', 'queueSize') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialUgcbaseImplAysncReverseReplicatorImpl', 'keepAliveTime') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialUgcbaseImplPublisherConfigurationImpl', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialUgcbaseImplPublisherConfigurationImpl', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialUgcbaseImplPublisherConfigurationImpl', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialUgcbaseImplPublisherConfigurationImpl', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialUgcbaseImplPublisherConfigurationImpl', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialUgcbaseImplPublisherConfigurationImpl', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialUgcbaseImplPublisherConfigurationImpl', 'isPrimaryPublisher') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialUgcbaseImplSocialUtilsImpl', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialUgcbaseImplSocialUtilsImpl', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialUgcbaseImplSocialUtilsImpl', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialUgcbaseImplSocialUtilsImpl', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialUgcbaseImplSocialUtilsImpl', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialUgcbaseImplSocialUtilsImpl', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialUgcbaseImplSocialUtilsImpl', 'legacyCloudUGCPathMapping') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialUgcbaseModerationImplAutoModerationImpl', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialUgcbaseModerationImplAutoModerationImpl', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialUgcbaseModerationImplAutoModerationImpl', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialUgcbaseModerationImplAutoModerationImpl', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialUgcbaseModerationImplAutoModerationImpl', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialUgcbaseModerationImplAutoModerationImpl', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialUgcbaseModerationImplAutoModerationImpl', 'automoderation.sequence') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialUgcbaseModerationImplAutoModerationImpl', 'automoderation.onfailurestop') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialUgcbaseModerationImplSentimentProcess', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialUgcbaseModerationImplSentimentProcess', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialUgcbaseModerationImplSentimentProcess', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialUgcbaseModerationImplSentimentProcess', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialUgcbaseModerationImplSentimentProcess', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialUgcbaseModerationImplSentimentProcess', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialUgcbaseModerationImplSentimentProcess', 'watchwords.positive') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialUgcbaseModerationImplSentimentProcess', 'watchwords.negative') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialUgcbaseModerationImplSentimentProcess', 'watchwords.path') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialUgcbaseModerationImplSentimentProcess', 'sentiment.path') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialUgcbaseSecurityImplDefaultAttachmentTypeBlackli', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialUgcbaseSecurityImplDefaultAttachmentTypeBlackli', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialUgcbaseSecurityImplDefaultAttachmentTypeBlackli', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialUgcbaseSecurityImplDefaultAttachmentTypeBlackli', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialUgcbaseSecurityImplDefaultAttachmentTypeBlackli', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialUgcbaseSecurityImplDefaultAttachmentTypeBlackli', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialUgcbaseSecurityImplDefaultAttachmentTypeBlackli', 'default.attachment.type.blacklist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialUgcbaseSecurityImplDefaultAttachmentTypeBlackli', 'baseline.attachment.type.blacklist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialUgcbaseSecurityImplSaferSlingPostValidatorImpl', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialUgcbaseSecurityImplSaferSlingPostValidatorImpl', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialUgcbaseSecurityImplSaferSlingPostValidatorImpl', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialUgcbaseSecurityImplSaferSlingPostValidatorImpl', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialUgcbaseSecurityImplSaferSlingPostValidatorImpl', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialUgcbaseSecurityImplSaferSlingPostValidatorImpl', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialUgcbaseSecurityImplSaferSlingPostValidatorImpl', 'parameter.whitelist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialUgcbaseSecurityImplSaferSlingPostValidatorImpl', 'parameter.whitelist.prefixes') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialUgcbaseSecurityImplSaferSlingPostValidatorImpl', 'binary.parameter.whitelist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialUgcbaseSecurityImplSaferSlingPostValidatorImpl', 'modifier.whitelist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialUgcbaseSecurityImplSaferSlingPostValidatorImpl', 'operation.whitelist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialUgcbaseSecurityImplSaferSlingPostValidatorImpl', 'operation.whitelist.prefixes') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialUgcbaseSecurityImplSaferSlingPostValidatorImpl', 'typehint.whitelist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialUgcbaseSecurityImplSaferSlingPostValidatorImpl', 'resourcetype.whitelist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialUserEndpointsImplUsersGroupFromPublishServlet', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialUserEndpointsImplUsersGroupFromPublishServlet', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialUserEndpointsImplUsersGroupFromPublishServlet', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialUserEndpointsImplUsersGroupFromPublishServlet', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialUserEndpointsImplUsersGroupFromPublishServlet', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialUserEndpointsImplUsersGroupFromPublishServlet', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialUserEndpointsImplUsersGroupFromPublishServlet', 'sling.servlet.extensions') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialUserEndpointsImplUsersGroupFromPublishServlet', 'sling.servlet.paths') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialUserEndpointsImplUsersGroupFromPublishServlet', 'sling.servlet.methods') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialUserImplTransportHttpToPublisher', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialUserImplTransportHttpToPublisher', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialUserImplTransportHttpToPublisher', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialUserImplTransportHttpToPublisher', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialUserImplTransportHttpToPublisher', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialUserImplTransportHttpToPublisher', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialUserImplTransportHttpToPublisher', 'enable') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialUserImplTransportHttpToPublisher', 'agent.configuration') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialUserImplTransportHttpToPublisher', 'context.path') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialUserImplTransportHttpToPublisher', 'disabled.cipher.suites') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeCqSocialUserImplTransportHttpToPublisher', 'enabled.cipher.suites') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeCqUiWcmCommonsInternalServletsRteRTEFilterServletFact', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqUiWcmCommonsInternalServletsRteRTEFilterServletFact', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqUiWcmCommonsInternalServletsRteRTEFilterServletFact', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqUiWcmCommonsInternalServletsRteRTEFilterServletFact', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqUiWcmCommonsInternalServletsRteRTEFilterServletFact', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqUiWcmCommonsInternalServletsRteRTEFilterServletFact', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeCqUiWcmCommonsInternalServletsRteRTEFilterServletFact', 'resource.types') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeCqUpgradesCleanupImplUpgradeContentCleanup', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqUpgradesCleanupImplUpgradeContentCleanup', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqUpgradesCleanupImplUpgradeContentCleanup', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqUpgradesCleanupImplUpgradeContentCleanup', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqUpgradesCleanupImplUpgradeContentCleanup', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqUpgradesCleanupImplUpgradeContentCleanup', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeCqUpgradesCleanupImplUpgradeContentCleanup', 'delete.path.regexps') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeCqUpgradesCleanupImplUpgradeContentCleanup', 'delete.sql2.query') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqUpgradesCleanupImplUpgradeInstallFolderCleanup', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqUpgradesCleanupImplUpgradeInstallFolderCleanup', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqUpgradesCleanupImplUpgradeInstallFolderCleanup', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqUpgradesCleanupImplUpgradeInstallFolderCleanup', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqUpgradesCleanupImplUpgradeInstallFolderCleanup', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqUpgradesCleanupImplUpgradeInstallFolderCleanup', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeCqUpgradesCleanupImplUpgradeInstallFolderCleanup', 'delete.name.regexps') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeCqWcmJobsAsyncImplAsyncDeleteConfigProviderService', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqWcmJobsAsyncImplAsyncDeleteConfigProviderService', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqWcmJobsAsyncImplAsyncDeleteConfigProviderService', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqWcmJobsAsyncImplAsyncDeleteConfigProviderService', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqWcmJobsAsyncImplAsyncDeleteConfigProviderService', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqWcmJobsAsyncImplAsyncDeleteConfigProviderService', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeCqWcmJobsAsyncImplAsyncDeleteConfigProviderService', 'threshold') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComAdobeCqWcmJobsAsyncImplAsyncDeleteConfigProviderService', 'jobTopicName') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqWcmJobsAsyncImplAsyncDeleteConfigProviderService', 'emailEnabled') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqWcmJobsAsyncImplAsyncJobCleanUpTask', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqWcmJobsAsyncImplAsyncJobCleanUpTask', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqWcmJobsAsyncImplAsyncJobCleanUpTask', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqWcmJobsAsyncImplAsyncJobCleanUpTask', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqWcmJobsAsyncImplAsyncJobCleanUpTask', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqWcmJobsAsyncImplAsyncJobCleanUpTask', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeCqWcmJobsAsyncImplAsyncJobCleanUpTask', 'scheduler.expression') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqWcmJobsAsyncImplAsyncJobCleanUpTask', 'job.purge.threshold') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComAdobeCqWcmJobsAsyncImplAsyncJobCleanUpTask', 'job.purge.max.jobs') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComAdobeCqWcmJobsAsyncImplAsyncMoveConfigProviderService', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqWcmJobsAsyncImplAsyncMoveConfigProviderService', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqWcmJobsAsyncImplAsyncMoveConfigProviderService', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqWcmJobsAsyncImplAsyncMoveConfigProviderService', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqWcmJobsAsyncImplAsyncMoveConfigProviderService', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqWcmJobsAsyncImplAsyncMoveConfigProviderService', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeCqWcmJobsAsyncImplAsyncMoveConfigProviderService', 'threshold') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComAdobeCqWcmJobsAsyncImplAsyncMoveConfigProviderService', 'jobTopicName') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqWcmJobsAsyncImplAsyncMoveConfigProviderService', 'emailEnabled') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqWcmJobsAsyncImplAsyncPageMoveConfigProviderService', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqWcmJobsAsyncImplAsyncPageMoveConfigProviderService', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqWcmJobsAsyncImplAsyncPageMoveConfigProviderService', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqWcmJobsAsyncImplAsyncPageMoveConfigProviderService', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqWcmJobsAsyncImplAsyncPageMoveConfigProviderService', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqWcmJobsAsyncImplAsyncPageMoveConfigProviderService', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeCqWcmJobsAsyncImplAsyncPageMoveConfigProviderService', 'threshold') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComAdobeCqWcmJobsAsyncImplAsyncPageMoveConfigProviderService', 'jobTopicName') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqWcmJobsAsyncImplAsyncPageMoveConfigProviderService', 'emailEnabled') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqWcmLaunchesImplLaunchesEventHandler', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqWcmLaunchesImplLaunchesEventHandler', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqWcmLaunchesImplLaunchesEventHandler', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqWcmLaunchesImplLaunchesEventHandler', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqWcmLaunchesImplLaunchesEventHandler', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqWcmLaunchesImplLaunchesEventHandler', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeCqWcmLaunchesImplLaunchesEventHandler', 'event.filter') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqWcmLaunchesImplLaunchesEventHandler', 'launches.eventhandler.threadpool.maxsize') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComAdobeCqWcmLaunchesImplLaunchesEventHandler', 'launches.eventhandler.threadpool.priority') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqWcmLaunchesImplLaunchesEventHandler', 'launches.eventhandler.updatelastmodification') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqWcmMobileQrcodeServletQRCodeImageGenerator', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqWcmMobileQrcodeServletQRCodeImageGenerator', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqWcmMobileQrcodeServletQRCodeImageGenerator', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqWcmMobileQrcodeServletQRCodeImageGenerator', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqWcmMobileQrcodeServletQRCodeImageGenerator', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqWcmMobileQrcodeServletQRCodeImageGenerator', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeCqWcmMobileQrcodeServletQRCodeImageGenerator', 'cq.wcm.qrcode.servlet.whitelist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeCqWcmStyleInternalComponentStyleInfoCacheImpl', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqWcmStyleInternalComponentStyleInfoCacheImpl', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqWcmStyleInternalComponentStyleInfoCacheImpl', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqWcmStyleInternalComponentStyleInfoCacheImpl', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqWcmStyleInternalComponentStyleInfoCacheImpl', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqWcmStyleInternalComponentStyleInfoCacheImpl', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeCqWcmStyleInternalComponentStyleInfoCacheImpl', 'size') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComAdobeCqWcmTranslationImplTranslationPlatformConfigurationImpl', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqWcmTranslationImplTranslationPlatformConfigurationImpl', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqWcmTranslationImplTranslationPlatformConfigurationImpl', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeCqWcmTranslationImplTranslationPlatformConfigurationImpl', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqWcmTranslationImplTranslationPlatformConfigurationImpl', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqWcmTranslationImplTranslationPlatformConfigurationImpl', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeCqWcmTranslationImplTranslationPlatformConfigurationImpl', 'syncTranslationState.schedulingFormat') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqWcmTranslationImplTranslationPlatformConfigurationImpl', 'schedulingRepeatTranslation.schedulingFormat') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqWcmTranslationImplTranslationPlatformConfigurationImpl', 'syncTranslationState.lockTimeoutInMinutes') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeCqWcmTranslationImplTranslationPlatformConfigurationImpl', 'export.format') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeFdFpConfigFormsPortalDraftsandSubmissionConfigService', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeFdFpConfigFormsPortalDraftsandSubmissionConfigService', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeFdFpConfigFormsPortalDraftsandSubmissionConfigService', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeFdFpConfigFormsPortalDraftsandSubmissionConfigService', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeFdFpConfigFormsPortalDraftsandSubmissionConfigService', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeFdFpConfigFormsPortalDraftsandSubmissionConfigService', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeFdFpConfigFormsPortalDraftsandSubmissionConfigService', 'portal.outboxes') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeFdFpConfigFormsPortalDraftsandSubmissionConfigService', 'draft.data.service') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeFdFpConfigFormsPortalDraftsandSubmissionConfigService', 'draft.metadata.service') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeFdFpConfigFormsPortalDraftsandSubmissionConfigService', 'submit.data.service') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeFdFpConfigFormsPortalDraftsandSubmissionConfigService', 'submit.metadata.service') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeFdFpConfigFormsPortalDraftsandSubmissionConfigService', 'pendingSign.data.service') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeFdFpConfigFormsPortalDraftsandSubmissionConfigService', 'pendingSign.metadata.service') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeFdFpConfigFormsPortalSchedulerService', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeFdFpConfigFormsPortalSchedulerService', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeFdFpConfigFormsPortalSchedulerService', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeFdFpConfigFormsPortalSchedulerService', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeFdFpConfigFormsPortalSchedulerService', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeFdFpConfigFormsPortalSchedulerService', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeFdFpConfigFormsPortalSchedulerService', 'formportal.interval') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeFormsCommonServiceImplDefaultDataProvider', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeFormsCommonServiceImplDefaultDataProvider', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeFormsCommonServiceImplDefaultDataProvider', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeFormsCommonServiceImplDefaultDataProvider', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeFormsCommonServiceImplDefaultDataProvider', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeFormsCommonServiceImplDefaultDataProvider', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeFormsCommonServiceImplDefaultDataProvider', 'alloweddataFileLocations') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeFormsCommonServiceImplFormsCommonConfigurationServiceImp', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeFormsCommonServiceImplFormsCommonConfigurationServiceImp', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeFormsCommonServiceImplFormsCommonConfigurationServiceImp', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeFormsCommonServiceImplFormsCommonConfigurationServiceImp', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeFormsCommonServiceImplFormsCommonConfigurationServiceImp', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeFormsCommonServiceImplFormsCommonConfigurationServiceImp', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeFormsCommonServiceImplFormsCommonConfigurationServiceImp', 'tempStorageConfig') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeFormsCommonServletTempCleanUpTask', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeFormsCommonServletTempCleanUpTask', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeFormsCommonServletTempCleanUpTask', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeFormsCommonServletTempCleanUpTask', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeFormsCommonServletTempCleanUpTask', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeFormsCommonServletTempCleanUpTask', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeFormsCommonServletTempCleanUpTask', 'scheduler.expression') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeFormsCommonServletTempCleanUpTask', 'Duration for Temporary Storage') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeFormsCommonServletTempCleanUpTask', 'Duration for Anonymous Storage') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteAcpPlatformPlatformServlet', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteAcpPlatformPlatformServlet', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteAcpPlatformPlatformServlet', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteAcpPlatformPlatformServlet', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteAcpPlatformPlatformServlet', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteAcpPlatformPlatformServlet', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeGraniteAcpPlatformPlatformServlet', 'query.limit') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteAcpPlatformPlatformServlet', 'file.type.extension.map') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeGraniteActivitystreamsImplActivityManagerImpl', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteActivitystreamsImplActivityManagerImpl', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteActivitystreamsImplActivityManagerImpl', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteActivitystreamsImplActivityManagerImpl', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteActivitystreamsImplActivityManagerImpl', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteActivitystreamsImplActivityManagerImpl', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeGraniteActivitystreamsImplActivityManagerImpl', 'aggregate.relationships') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeGraniteActivitystreamsImplActivityManagerImpl', 'aggregate.descend.virtual') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteAnalyzerBaseSystemStatusServlet', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteAnalyzerBaseSystemStatusServlet', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteAnalyzerBaseSystemStatusServlet', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteAnalyzerBaseSystemStatusServlet', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteAnalyzerBaseSystemStatusServlet', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteAnalyzerBaseSystemStatusServlet', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeGraniteAnalyzerBaseSystemStatusServlet', 'disabled') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteAnalyzerScriptsCompileAllScriptsCompilerServlet', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteAnalyzerScriptsCompileAllScriptsCompilerServlet', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteAnalyzerScriptsCompileAllScriptsCompilerServlet', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteAnalyzerScriptsCompileAllScriptsCompilerServlet', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteAnalyzerScriptsCompileAllScriptsCompilerServlet', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteAnalyzerScriptsCompileAllScriptsCompilerServlet', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeGraniteAnalyzerScriptsCompileAllScriptsCompilerServlet', 'disabled') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteApicontrollerFilterResolverHookFactory', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteApicontrollerFilterResolverHookFactory', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteApicontrollerFilterResolverHookFactory', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteApicontrollerFilterResolverHookFactory', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteApicontrollerFilterResolverHookFactory', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteApicontrollerFilterResolverHookFactory', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeGraniteApicontrollerFilterResolverHookFactory', 'com.adobe.cq.cdn.cdn-rewriter') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteApicontrollerFilterResolverHookFactory', 'com.adobe.cq.cloud-config.components') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteApicontrollerFilterResolverHookFactory', 'com.adobe.cq.cloud-config.core') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteApicontrollerFilterResolverHookFactory', 'com.adobe.cq.cloud-config.ui') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteApicontrollerFilterResolverHookFactory', 'com.adobe.cq.com.adobe.cq.editor') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteApicontrollerFilterResolverHookFactory', 'com.adobe.cq.com.adobe.cq.projects.core') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteApicontrollerFilterResolverHookFactory', 'com.adobe.cq.com.adobe.cq.projects.wcm.core') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteApicontrollerFilterResolverHookFactory', 'com.adobe.cq.com.adobe.cq.ui.commons') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteApicontrollerFilterResolverHookFactory', 'com.adobe.cq.com.adobe.cq.wcm.style') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteApicontrollerFilterResolverHookFactory', 'com.adobe.cq.cq-activitymap-integration') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteApicontrollerFilterResolverHookFactory', 'com.adobe.cq.cq-contexthub-commons') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteApicontrollerFilterResolverHookFactory', 'com.adobe.cq.cq-dtm') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteApicontrollerFilterResolverHookFactory', 'com.adobe.cq.cq-healthcheck') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteApicontrollerFilterResolverHookFactory', 'com.adobe.cq.cq-multisite-targeting') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteApicontrollerFilterResolverHookFactory', 'com.adobe.cq.cq-pre-upgrade-cleanup') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteApicontrollerFilterResolverHookFactory', 'com.adobe.cq.cq-product-info-provider') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteApicontrollerFilterResolverHookFactory', 'com.adobe.cq.cq-rest-sites') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteApicontrollerFilterResolverHookFactory', 'com.adobe.cq.cq-security-hc') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteApicontrollerFilterResolverHookFactory', 'com.adobe.cq.dam.cq-dam-svg-handler') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteApicontrollerFilterResolverHookFactory', 'com.adobe.cq.dam.cq-scene7-imaging') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteApicontrollerFilterResolverHookFactory', 'com.adobe.cq.dtm-reactor.core') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteApicontrollerFilterResolverHookFactory', 'com.adobe.cq.dtm-reactor.ui') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteApicontrollerFilterResolverHookFactory', 'com.adobe.cq.exp-jspel-resolver') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteApicontrollerFilterResolverHookFactory', 'com.adobe.cq.inbox.cq-inbox') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteApicontrollerFilterResolverHookFactory', 'com.adobe.cq.json-schema-parser') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteApicontrollerFilterResolverHookFactory', 'com.adobe.cq.media.cq-media-publishing-dps-fp-core') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteApicontrollerFilterResolverHookFactory', 'com.adobe.cq.mobile.cq-mobile-caas') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteApicontrollerFilterResolverHookFactory', 'com.adobe.cq.mobile.cq-mobile-index-builder') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteApicontrollerFilterResolverHookFactory', 'com.adobe.cq.mobile.cq-mobile-phonegap-build') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteApicontrollerFilterResolverHookFactory', 'com.adobe.cq.myspell') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteApicontrollerFilterResolverHookFactory', 'com.adobe.cq.sample.we.retail.core') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteApicontrollerFilterResolverHookFactory', 'com.adobe.cq.screens.com.adobe.cq.screens.dcc') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteApicontrollerFilterResolverHookFactory', 'com.adobe.cq.screens.com.adobe.cq.screens.mq.core') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteApicontrollerFilterResolverHookFactory', 'com.adobe.cq.social.cq-social-as-provider') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteApicontrollerFilterResolverHookFactory', 'com.adobe.cq.social.cq-social-badging-basic-impl') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteApicontrollerFilterResolverHookFactory', 'com.adobe.cq.social.cq-social-badging-impl') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteApicontrollerFilterResolverHookFactory', 'com.adobe.cq.social.cq-social-calendar-impl') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteApicontrollerFilterResolverHookFactory', 'com.adobe.cq.social.cq-social-content-fragments-impl') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteApicontrollerFilterResolverHookFactory', 'com.adobe.cq.social.cq-social-enablement-impl') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteApicontrollerFilterResolverHookFactory', 'com.adobe.cq.social.cq-social-graph-impl') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteApicontrollerFilterResolverHookFactory', 'com.adobe.cq.social.cq-social-ideation-impl') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteApicontrollerFilterResolverHookFactory', 'com.adobe.cq.social.cq-social-jcr-provider') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteApicontrollerFilterResolverHookFactory', 'com.adobe.cq.social.cq-social-members-impl') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteApicontrollerFilterResolverHookFactory', 'com.adobe.cq.social.cq-social-ms-provider') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteApicontrollerFilterResolverHookFactory', 'com.adobe.cq.social.cq-social-notifications-channels-web') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteApicontrollerFilterResolverHookFactory', 'com.adobe.cq.social.cq-social-notifications-impl') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteApicontrollerFilterResolverHookFactory', 'com.adobe.cq.social.cq-social-rdb-provider') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteApicontrollerFilterResolverHookFactory', 'com.adobe.cq.social.cq-social-scf-impl') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteApicontrollerFilterResolverHookFactory', 'com.adobe.cq.social.cq-social-scoring-basic-impl') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteApicontrollerFilterResolverHookFactory', 'com.adobe.cq.social.cq-social-scoring-impl') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteApicontrollerFilterResolverHookFactory', 'com.adobe.cq.social.cq-social-serviceusers-impl') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteApicontrollerFilterResolverHookFactory', 'com.adobe.cq.social.cq-social-srp-impl') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteApicontrollerFilterResolverHookFactory', 'com.adobe.cq.social.cq-social-ugcbase-impl') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteApicontrollerFilterResolverHookFactory', 'com.adobe.dam.cq-dam-cfm-impl') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteApicontrollerFilterResolverHookFactory', 'com.adobe.forms.foundation-forms-foundation-base') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteApicontrollerFilterResolverHookFactory', 'com.adobe.granite.apicontroller') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteApicontrollerFilterResolverHookFactory', 'com.adobe.granite.asset.core') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteApicontrollerFilterResolverHookFactory', 'com.adobe.granite.auth.sso') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteApicontrollerFilterResolverHookFactory', 'com.adobe.granite.bundles.hc.impl') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteApicontrollerFilterResolverHookFactory', 'com.adobe.granite.compat-router') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteApicontrollerFilterResolverHookFactory', 'com.adobe.granite.conf') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteApicontrollerFilterResolverHookFactory', 'com.adobe.granite.conf.ui.core') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteApicontrollerFilterResolverHookFactory', 'com.adobe.granite.cors') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteApicontrollerFilterResolverHookFactory', 'com.adobe.granite.crx-explorer') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteApicontrollerFilterResolverHookFactory', 'com.adobe.granite.crxde-lite') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteApicontrollerFilterResolverHookFactory', 'com.adobe.granite.crypto.config') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteApicontrollerFilterResolverHookFactory', 'com.adobe.granite.crypto.extension') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteApicontrollerFilterResolverHookFactory', 'com.adobe.granite.crypto.file') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteApicontrollerFilterResolverHookFactory', 'com.adobe.granite.crypto.jcr') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteApicontrollerFilterResolverHookFactory', 'com.adobe.granite.csrf') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteApicontrollerFilterResolverHookFactory', 'com.adobe.granite.distribution.core') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteApicontrollerFilterResolverHookFactory', 'com.adobe.granite.dropwizard.metrics') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteApicontrollerFilterResolverHookFactory', 'com.adobe.granite.frags.impl') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteApicontrollerFilterResolverHookFactory', 'com.adobe.granite.gibson') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteApicontrollerFilterResolverHookFactory', 'com.adobe.granite.infocollector') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteApicontrollerFilterResolverHookFactory', 'com.adobe.granite.installer.factory.packages') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteApicontrollerFilterResolverHookFactory', 'com.adobe.granite.jetty.ssl') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteApicontrollerFilterResolverHookFactory', 'com.adobe.granite.jobs.async') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteApicontrollerFilterResolverHookFactory', 'com.adobe.granite.maintenance.oak') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteApicontrollerFilterResolverHookFactory', 'com.adobe.granite.monitoring.core') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteApicontrollerFilterResolverHookFactory', 'com.adobe.granite.queries') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteApicontrollerFilterResolverHookFactory', 'com.adobe.granite.replication.hc.impl') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteApicontrollerFilterResolverHookFactory', 'com.adobe.granite.repository.checker') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteApicontrollerFilterResolverHookFactory', 'com.adobe.granite.repository.hc.impl') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteApicontrollerFilterResolverHookFactory', 'com.adobe.granite.rest.assets') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteApicontrollerFilterResolverHookFactory', 'com.adobe.granite.security.ui') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteApicontrollerFilterResolverHookFactory', 'com.adobe.granite.startup') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteApicontrollerFilterResolverHookFactory', 'com.adobe.granite.tagsoup') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteApicontrollerFilterResolverHookFactory', 'com.adobe.granite.taskmanagement.core') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteApicontrollerFilterResolverHookFactory', 'com.adobe.granite.taskmanagement.workflow') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteApicontrollerFilterResolverHookFactory', 'com.adobe.granite.ui.clientlibs.compiler.less') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteApicontrollerFilterResolverHookFactory', 'com.adobe.granite.ui.clientlibs.processor.gcc') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteApicontrollerFilterResolverHookFactory', 'com.adobe.granite.webconsole.plugins') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteApicontrollerFilterResolverHookFactory', 'com.adobe.granite.workflow.console') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteApicontrollerFilterResolverHookFactory', 'com.adobe.xmp.worker.files.native.fragment.linux') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteApicontrollerFilterResolverHookFactory', 'com.adobe.xmp.worker.files.native.fragment.macosx') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteApicontrollerFilterResolverHookFactory', 'com.adobe.xmp.worker.files.native.fragment.win') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteApicontrollerFilterResolverHookFactory', 'com.day.commons.osgi.wrapper.simple-jndi') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteApicontrollerFilterResolverHookFactory', 'com.day.cq.cq-authhandler') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteApicontrollerFilterResolverHookFactory', 'com.day.cq.cq-compat-configupdate') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteApicontrollerFilterResolverHookFactory', 'com.day.cq.cq-licensebranding') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteApicontrollerFilterResolverHookFactory', 'com.day.cq.cq-notifcation-impl') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteApicontrollerFilterResolverHookFactory', 'com.day.cq.cq-replication-audit') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteApicontrollerFilterResolverHookFactory', 'com.day.cq.cq-search-ext') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteApicontrollerFilterResolverHookFactory', 'com.day.cq.dam.cq-dam-annotation-print') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteApicontrollerFilterResolverHookFactory', 'com.day.cq.dam.cq-dam-asset-usage') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteApicontrollerFilterResolverHookFactory', 'com.day.cq.dam.cq-dam-s7dam') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteApicontrollerFilterResolverHookFactory', 'com.day.cq.dam.cq-dam-similaritysearch') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteApicontrollerFilterResolverHookFactory', 'com.day.cq.dam.dam-webdav-support') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteApicontrollerFilterResolverHookFactory', 'com.day.cq.pre-upgrade-tasks') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteApicontrollerFilterResolverHookFactory', 'com.day.cq.replication.extensions') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteApicontrollerFilterResolverHookFactory', 'com.day.cq.wcm.cq-msm-core') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteApicontrollerFilterResolverHookFactory', 'com.day.cq.wcm.cq-wcm-translation') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteApicontrollerFilterResolverHookFactory', 'day-commons-jrawio') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteApicontrollerFilterResolverHookFactory', 'org.apache.aries.jmx.whiteboard') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteApicontrollerFilterResolverHookFactory', 'org.apache.felix.http.sslfilter') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteApicontrollerFilterResolverHookFactory', 'org.apache.felix.org.apache.felix.threaddump') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteApicontrollerFilterResolverHookFactory', 'org.apache.felix.webconsole.plugins.ds') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteApicontrollerFilterResolverHookFactory', 'org.apache.felix.webconsole.plugins.event') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteApicontrollerFilterResolverHookFactory', 'org.apache.felix.webconsole.plugins.memoryusage') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteApicontrollerFilterResolverHookFactory', 'org.apache.felix.webconsole.plugins.packageadmin') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteApicontrollerFilterResolverHookFactory', 'org.apache.jackrabbit.oak-auth-ldap') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteApicontrollerFilterResolverHookFactory', 'org.apache.jackrabbit.oak-segment-tar') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteApicontrollerFilterResolverHookFactory', 'org.apache.jackrabbit.oak-solr-osgi') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteApicontrollerFilterResolverHookFactory', 'org.apache.sling.bundleresource.impl') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteApicontrollerFilterResolverHookFactory', 'org.apache.sling.commons.fsclassloader') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteApicontrollerFilterResolverHookFactory', 'org.apache.sling.commons.log.webconsole') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteApicontrollerFilterResolverHookFactory', 'org.apache.sling.datasource') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteApicontrollerFilterResolverHookFactory', 'org.apache.sling.discovery.base') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteApicontrollerFilterResolverHookFactory', 'org.apache.sling.discovery.oak') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteApicontrollerFilterResolverHookFactory', 'org.apache.sling.discovery.support') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteApicontrollerFilterResolverHookFactory', 'org.apache.sling.distribution.api') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteApicontrollerFilterResolverHookFactory', 'org.apache.sling.distribution.core') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteApicontrollerFilterResolverHookFactory', 'org.apache.sling.extensions.webconsolesecurityprovider') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteApicontrollerFilterResolverHookFactory', 'org.apache.sling.hc.webconsole') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteApicontrollerFilterResolverHookFactory', 'org.apache.sling.installer.console') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteApicontrollerFilterResolverHookFactory', 'org.apache.sling.installer.provider.file') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteApicontrollerFilterResolverHookFactory', 'org.apache.sling.installer.provider.jcr') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteApicontrollerFilterResolverHookFactory', 'org.apache.sling.jcr.davex') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteApicontrollerFilterResolverHookFactory', 'org.apache.sling.jcr.resourcesecurity') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteApicontrollerFilterResolverHookFactory', 'org.apache.sling.jmx.provider') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteApicontrollerFilterResolverHookFactory', 'org.apache.sling.launchpad.installer') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteApicontrollerFilterResolverHookFactory', 'org.apache.sling.models.impl') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteApicontrollerFilterResolverHookFactory', 'org.apache.sling.repoinit.parser') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteApicontrollerFilterResolverHookFactory', 'org.apache.sling.resource.inventory') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteApicontrollerFilterResolverHookFactory', 'org.apache.sling.resourceresolver') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteApicontrollerFilterResolverHookFactory', 'org.apache.sling.scripting.javascript') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteApicontrollerFilterResolverHookFactory', 'org.apache.sling.scripting.jst') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteApicontrollerFilterResolverHookFactory', 'org.apache.sling.scripting.sightly.js.provider') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteApicontrollerFilterResolverHookFactory', 'org.apache.sling.scripting.sightly.models.provider') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteApicontrollerFilterResolverHookFactory', 'org.apache.sling.security') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteApicontrollerFilterResolverHookFactory', 'org.apache.sling.servlets.compat') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteApicontrollerFilterResolverHookFactory', 'org.apache.sling.servlets.get') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteApicontrollerFilterResolverHookFactory', 'org.apache.sling.startupfilter.disabler') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteApicontrollerFilterResolverHookFactory', 'org.apache.sling.tracer') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteApicontrollerFilterResolverHookFactory', 'we.retail.client.app.core') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteAuthCertImplClientCertAuthHandler', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteAuthCertImplClientCertAuthHandler', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteAuthCertImplClientCertAuthHandler', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteAuthCertImplClientCertAuthHandler', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteAuthCertImplClientCertAuthHandler', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteAuthCertImplClientCertAuthHandler', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeGraniteAuthCertImplClientCertAuthHandler', 'path') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteAuthCertImplClientCertAuthHandler', 'service.ranking') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteAuthIms', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteAuthIms', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteAuthIms', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteAuthIms', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteAuthIms', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteAuthIms', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeGraniteAuthIms', 'configid') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteAuthIms', 'scope') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteAuthImsImplExternalUserIdMappingProviderExtension', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteAuthImsImplExternalUserIdMappingProviderExtension', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteAuthImsImplExternalUserIdMappingProviderExtension', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteAuthImsImplExternalUserIdMappingProviderExtension', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteAuthImsImplExternalUserIdMappingProviderExtension', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteAuthImsImplExternalUserIdMappingProviderExtension', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeGraniteAuthImsImplExternalUserIdMappingProviderExtension', 'oauth.provider.id') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteAuthImsImplIMSAccessTokenRequestCustomizerImpl', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteAuthImsImplIMSAccessTokenRequestCustomizerImpl', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteAuthImsImplIMSAccessTokenRequestCustomizerImpl', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteAuthImsImplIMSAccessTokenRequestCustomizerImpl', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteAuthImsImplIMSAccessTokenRequestCustomizerImpl', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteAuthImsImplIMSAccessTokenRequestCustomizerImpl', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeGraniteAuthImsImplIMSAccessTokenRequestCustomizerImpl', 'auth.ims.client.secret') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteAuthImsImplIMSAccessTokenRequestCustomizerImpl', 'customizer.type') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteAuthImsImplIMSInstanceCredentialsValidator', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteAuthImsImplIMSInstanceCredentialsValidator', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteAuthImsImplIMSInstanceCredentialsValidator', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteAuthImsImplIMSInstanceCredentialsValidator', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteAuthImsImplIMSInstanceCredentialsValidator', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteAuthImsImplIMSInstanceCredentialsValidator', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeGraniteAuthImsImplIMSInstanceCredentialsValidator', 'oauth.provider.id') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteAuthImsImplIMSProviderImpl', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteAuthImsImplIMSProviderImpl', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteAuthImsImplIMSProviderImpl', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteAuthImsImplIMSProviderImpl', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteAuthImsImplIMSProviderImpl', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteAuthImsImplIMSProviderImpl', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeGraniteAuthImsImplIMSProviderImpl', 'oauth.provider.id') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteAuthImsImplIMSProviderImpl', 'oauth.provider.ims.authorization.url') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteAuthImsImplIMSProviderImpl', 'oauth.provider.ims.token.url') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteAuthImsImplIMSProviderImpl', 'oauth.provider.ims.profile.url') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteAuthImsImplIMSProviderImpl', 'oauth.provider.ims.extended.details.urls') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeGraniteAuthImsImplIMSProviderImpl', 'oauth.provider.ims.validate.token.url') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteAuthImsImplIMSProviderImpl', 'oauth.provider.ims.session.property') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteAuthImsImplIMSProviderImpl', 'oauth.provider.ims.service.token.client.id') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteAuthImsImplIMSProviderImpl', 'oauth.provider.ims.service.token.client.secret') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteAuthImsImplIMSProviderImpl', 'oauth.provider.ims.service.token') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteAuthImsImplIMSProviderImpl', 'ims.org.ref') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteAuthImsImplIMSProviderImpl', 'ims.group.mapping') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeGraniteAuthImsImplIMSProviderImpl', 'oauth.provider.ims.only.license.group') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteAuthImsImplImsConfigProviderImpl', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteAuthImsImplImsConfigProviderImpl', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteAuthImsImplImsConfigProviderImpl', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteAuthImsImplImsConfigProviderImpl', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteAuthImsImplImsConfigProviderImpl', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteAuthImsImplImsConfigProviderImpl', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeGraniteAuthImsImplImsConfigProviderImpl', 'oauth.configmanager.ims.configid') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteAuthImsImplImsConfigProviderImpl', 'ims.owningEntity') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteAuthImsImplImsConfigProviderImpl', 'aem.instanceId') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteAuthImsImplImsConfigProviderImpl', 'ims.serviceCode') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteAuthOauthAccesstokenProvider', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteAuthOauthAccesstokenProvider', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteAuthOauthAccesstokenProvider', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteAuthOauthAccesstokenProvider', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteAuthOauthAccesstokenProvider', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteAuthOauthAccesstokenProvider', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeGraniteAuthOauthAccesstokenProvider', 'name') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteAuthOauthAccesstokenProvider', 'auth.token.provider.title') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteAuthOauthAccesstokenProvider', 'auth.token.provider.default.claims') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeGraniteAuthOauthAccesstokenProvider', 'auth.token.provider.endpoint') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteAuthOauthAccesstokenProvider', 'auth.access.token.request') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteAuthOauthAccesstokenProvider', 'auth.token.provider.keypair.alias') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteAuthOauthAccesstokenProvider', 'auth.token.provider.conn.timeout') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteAuthOauthAccesstokenProvider', 'auth.token.provider.so.timeout') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteAuthOauthAccesstokenProvider', 'auth.token.provider.client.id') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteAuthOauthAccesstokenProvider', 'auth.token.provider.scope') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteAuthOauthAccesstokenProvider', 'auth.token.provider.reuse.access.token') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteAuthOauthAccesstokenProvider', 'auth.token.provider.relaxed.ssl') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteAuthOauthAccesstokenProvider', 'token.request.customizer.type') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteAuthOauthAccesstokenProvider', 'auth.token.validator.type') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteAuthOauthImplBearerAuthenticationHandler', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteAuthOauthImplBearerAuthenticationHandler', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteAuthOauthImplBearerAuthenticationHandler', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteAuthOauthImplBearerAuthenticationHandler', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteAuthOauthImplBearerAuthenticationHandler', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteAuthOauthImplBearerAuthenticationHandler', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeGraniteAuthOauthImplBearerAuthenticationHandler', 'path') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteAuthOauthImplBearerAuthenticationHandler', 'oauth.clientIds.allowed') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeGraniteAuthOauthImplBearerAuthenticationHandler', 'auth.bearer.sync.ims') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteAuthOauthImplBearerAuthenticationHandler', 'auth.tokenRequestParameter') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteAuthOauthImplBearerAuthenticationHandler', 'oauth.bearer.configid') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteAuthOauthImplBearerAuthenticationHandler', 'oauth.jwt.support') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteAuthOauthImplDefaultTokenValidatorImpl', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteAuthOauthImplDefaultTokenValidatorImpl', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteAuthOauthImplDefaultTokenValidatorImpl', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteAuthOauthImplDefaultTokenValidatorImpl', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteAuthOauthImplDefaultTokenValidatorImpl', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteAuthOauthImplDefaultTokenValidatorImpl', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeGraniteAuthOauthImplDefaultTokenValidatorImpl', 'auth.token.validator.type') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteAuthOauthImplFacebookProviderImpl', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteAuthOauthImplFacebookProviderImpl', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteAuthOauthImplFacebookProviderImpl', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteAuthOauthImplFacebookProviderImpl', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteAuthOauthImplFacebookProviderImpl', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteAuthOauthImplFacebookProviderImpl', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeGraniteAuthOauthImplFacebookProviderImpl', 'oauth.provider.id') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteAuthOauthImplGithubProviderImpl', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteAuthOauthImplGithubProviderImpl', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteAuthOauthImplGithubProviderImpl', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteAuthOauthImplGithubProviderImpl', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteAuthOauthImplGithubProviderImpl', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteAuthOauthImplGithubProviderImpl', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeGraniteAuthOauthImplGithubProviderImpl', 'oauth.provider.id') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteAuthOauthImplGithubProviderImpl', 'oauth.provider.github.authorization.url') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteAuthOauthImplGithubProviderImpl', 'oauth.provider.github.token.url') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteAuthOauthImplGithubProviderImpl', 'oauth.provider.github.profile.url') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteAuthOauthImplGraniteProvider', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteAuthOauthImplGraniteProvider', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteAuthOauthImplGraniteProvider', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteAuthOauthImplGraniteProvider', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteAuthOauthImplGraniteProvider', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteAuthOauthImplGraniteProvider', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeGraniteAuthOauthImplGraniteProvider', 'oauth.provider.id') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteAuthOauthImplGraniteProvider', 'oauth.provider.granite.authorization.url') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteAuthOauthImplGraniteProvider', 'oauth.provider.granite.token.url') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteAuthOauthImplGraniteProvider', 'oauth.provider.granite.profile.url') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteAuthOauthImplGraniteProvider', 'oauth.provider.granite.extended.details.urls') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteAuthOauthImplHelperProviderConfigManager', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteAuthOauthImplHelperProviderConfigManager', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteAuthOauthImplHelperProviderConfigManager', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteAuthOauthImplHelperProviderConfigManager', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteAuthOauthImplHelperProviderConfigManager', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteAuthOauthImplHelperProviderConfigManager', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeGraniteAuthOauthImplHelperProviderConfigManager', 'oauth.cookie.login.timeout') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteAuthOauthImplHelperProviderConfigManager', 'oauth.cookie.max.age') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteAuthOauthImplHelperProviderConfigManagerInternal', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteAuthOauthImplHelperProviderConfigManagerInternal', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteAuthOauthImplHelperProviderConfigManagerInternal', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteAuthOauthImplHelperProviderConfigManagerInternal', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteAuthOauthImplHelperProviderConfigManagerInternal', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteAuthOauthImplHelperProviderConfigManagerInternal', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeGraniteAuthOauthImplHelperProviderConfigManagerInternal', 'oauth.cookie.login.timeout') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteAuthOauthImplHelperProviderConfigManagerInternal', 'oauth.cookie.max.age') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteAuthOauthImplOAuthAuthenticationHandler', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteAuthOauthImplOAuthAuthenticationHandler', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteAuthOauthImplOAuthAuthenticationHandler', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteAuthOauthImplOAuthAuthenticationHandler', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteAuthOauthImplOAuthAuthenticationHandler', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteAuthOauthImplOAuthAuthenticationHandler', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeGraniteAuthOauthImplOAuthAuthenticationHandler', 'path') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteAuthOauthImplTwitterProviderImpl', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteAuthOauthImplTwitterProviderImpl', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteAuthOauthImplTwitterProviderImpl', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteAuthOauthImplTwitterProviderImpl', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteAuthOauthImplTwitterProviderImpl', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteAuthOauthImplTwitterProviderImpl', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeGraniteAuthOauthImplTwitterProviderImpl', 'oauth.provider.id') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteAuthOauthProvider', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteAuthOauthProvider', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteAuthOauthProvider', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteAuthOauthProvider', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteAuthOauthProvider', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteAuthOauthProvider', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeGraniteAuthOauthProvider', 'oauth.config.id') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteAuthOauthProvider', 'oauth.client.id') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteAuthOauthProvider', 'oauth.client.secret') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteAuthOauthProvider', 'oauth.scope') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeGraniteAuthOauthProvider', 'oauth.config.provider.id') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteAuthOauthProvider', 'oauth.create.users') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteAuthOauthProvider', 'oauth.userid.property') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteAuthOauthProvider', 'force.strict.username.matching') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteAuthOauthProvider', 'oauth.encode.userids') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteAuthOauthProvider', 'oauth.hash.userids') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteAuthOauthProvider', 'oauth.callBackUrl') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteAuthOauthProvider', 'oauth.access.token.persist') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteAuthOauthProvider', 'oauth.access.token.persist.cookie') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteAuthOauthProvider', 'oauth.csrf.state.protection') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteAuthOauthProvider', 'oauth.redirect.request.params') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteAuthOauthProvider', 'oauth.config.siblings.allow') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteAuthRequirementImplDefaultRequirementHandler', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteAuthRequirementImplDefaultRequirementHandler', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteAuthRequirementImplDefaultRequirementHandler', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteAuthRequirementImplDefaultRequirementHandler', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteAuthRequirementImplDefaultRequirementHandler', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteAuthRequirementImplDefaultRequirementHandler', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeGraniteAuthRequirementImplDefaultRequirementHandler', 'supportedPaths') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeGraniteAuthSamlSamlAuthenticationHandler', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteAuthSamlSamlAuthenticationHandler', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteAuthSamlSamlAuthenticationHandler', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteAuthSamlSamlAuthenticationHandler', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteAuthSamlSamlAuthenticationHandler', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteAuthSamlSamlAuthenticationHandler', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeGraniteAuthSamlSamlAuthenticationHandler', 'path') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeGraniteAuthSamlSamlAuthenticationHandler', 'service.ranking') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteAuthSamlSamlAuthenticationHandler', 'idpUrl') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteAuthSamlSamlAuthenticationHandler', 'idpCertAlias') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteAuthSamlSamlAuthenticationHandler', 'idpHttpRedirect') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteAuthSamlSamlAuthenticationHandler', 'serviceProviderEntityId') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteAuthSamlSamlAuthenticationHandler', 'assertionConsumerServiceURL') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteAuthSamlSamlAuthenticationHandler', 'spPrivateKeyAlias') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteAuthSamlSamlAuthenticationHandler', 'keyStorePassword') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteAuthSamlSamlAuthenticationHandler', 'defaultRedirectUrl') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteAuthSamlSamlAuthenticationHandler', 'userIDAttribute') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteAuthSamlSamlAuthenticationHandler', 'useEncryption') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteAuthSamlSamlAuthenticationHandler', 'createUser') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteAuthSamlSamlAuthenticationHandler', 'userIntermediatePath') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteAuthSamlSamlAuthenticationHandler', 'addGroupMemberships') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteAuthSamlSamlAuthenticationHandler', 'groupMembershipAttribute') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteAuthSamlSamlAuthenticationHandler', 'defaultGroups') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeGraniteAuthSamlSamlAuthenticationHandler', 'nameIdFormat') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteAuthSamlSamlAuthenticationHandler', 'synchronizeAttributes') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeGraniteAuthSamlSamlAuthenticationHandler', 'handleLogout') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteAuthSamlSamlAuthenticationHandler', 'logoutUrl') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteAuthSamlSamlAuthenticationHandler', 'clockTolerance') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteAuthSamlSamlAuthenticationHandler', 'digestMethod') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteAuthSamlSamlAuthenticationHandler', 'signatureMethod') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteAuthSamlSamlAuthenticationHandler', 'identitySyncType') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteAuthSamlSamlAuthenticationHandler', 'idpIdentifier') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteAuthSsoImplSsoAuthenticationHandler', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteAuthSsoImplSsoAuthenticationHandler', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteAuthSsoImplSsoAuthenticationHandler', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteAuthSsoImplSsoAuthenticationHandler', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteAuthSsoImplSsoAuthenticationHandler', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteAuthSsoImplSsoAuthenticationHandler', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeGraniteAuthSsoImplSsoAuthenticationHandler', 'path') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteAuthSsoImplSsoAuthenticationHandler', 'service.ranking') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteAuthSsoImplSsoAuthenticationHandler', 'jaas.controlFlag') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteAuthSsoImplSsoAuthenticationHandler', 'jaas.realmName') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteAuthSsoImplSsoAuthenticationHandler', 'jaas.ranking') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteAuthSsoImplSsoAuthenticationHandler', 'headers') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeGraniteAuthSsoImplSsoAuthenticationHandler', 'cookies') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeGraniteAuthSsoImplSsoAuthenticationHandler', 'parameters') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeGraniteAuthSsoImplSsoAuthenticationHandler', 'usermap') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeGraniteAuthSsoImplSsoAuthenticationHandler', 'format') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteAuthSsoImplSsoAuthenticationHandler', 'trustedCredentialsAttribute') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteBundlesHcImplCodeCacheHealthCheck', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteBundlesHcImplCodeCacheHealthCheck', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteBundlesHcImplCodeCacheHealthCheck', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteBundlesHcImplCodeCacheHealthCheck', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteBundlesHcImplCodeCacheHealthCheck', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteBundlesHcImplCodeCacheHealthCheck', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeGraniteBundlesHcImplCodeCacheHealthCheck', 'hc.tags') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeGraniteBundlesHcImplCodeCacheHealthCheck', 'minimum.code.cache.size') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteBundlesHcImplCrxdeSupportBundleHealthCheck', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteBundlesHcImplCrxdeSupportBundleHealthCheck', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteBundlesHcImplCrxdeSupportBundleHealthCheck', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteBundlesHcImplCrxdeSupportBundleHealthCheck', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteBundlesHcImplCrxdeSupportBundleHealthCheck', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteBundlesHcImplCrxdeSupportBundleHealthCheck', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeGraniteBundlesHcImplCrxdeSupportBundleHealthCheck', 'hc.tags') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeGraniteBundlesHcImplDavExBundleHealthCheck', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteBundlesHcImplDavExBundleHealthCheck', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteBundlesHcImplDavExBundleHealthCheck', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteBundlesHcImplDavExBundleHealthCheck', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteBundlesHcImplDavExBundleHealthCheck', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteBundlesHcImplDavExBundleHealthCheck', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeGraniteBundlesHcImplDavExBundleHealthCheck', 'hc.tags') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeGraniteBundlesHcImplInactiveBundlesHealthCheck', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteBundlesHcImplInactiveBundlesHealthCheck', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteBundlesHcImplInactiveBundlesHealthCheck', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteBundlesHcImplInactiveBundlesHealthCheck', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteBundlesHcImplInactiveBundlesHealthCheck', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteBundlesHcImplInactiveBundlesHealthCheck', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeGraniteBundlesHcImplInactiveBundlesHealthCheck', 'hc.tags') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeGraniteBundlesHcImplInactiveBundlesHealthCheck', 'ignored.bundles') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeGraniteBundlesHcImplJobsHealthCheck', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteBundlesHcImplJobsHealthCheck', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteBundlesHcImplJobsHealthCheck', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteBundlesHcImplJobsHealthCheck', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteBundlesHcImplJobsHealthCheck', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteBundlesHcImplJobsHealthCheck', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeGraniteBundlesHcImplJobsHealthCheck', 'hc.tags') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeGraniteBundlesHcImplJobsHealthCheck', 'max.queued.jobs') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteBundlesHcImplSlingGetServletHealthCheck', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteBundlesHcImplSlingGetServletHealthCheck', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteBundlesHcImplSlingGetServletHealthCheck', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteBundlesHcImplSlingGetServletHealthCheck', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteBundlesHcImplSlingGetServletHealthCheck', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteBundlesHcImplSlingGetServletHealthCheck', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeGraniteBundlesHcImplSlingGetServletHealthCheck', 'hc.tags') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeGraniteBundlesHcImplSlingJavaScriptHandlerHealthCheck', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteBundlesHcImplSlingJavaScriptHandlerHealthCheck', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteBundlesHcImplSlingJavaScriptHandlerHealthCheck', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteBundlesHcImplSlingJavaScriptHandlerHealthCheck', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteBundlesHcImplSlingJavaScriptHandlerHealthCheck', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteBundlesHcImplSlingJavaScriptHandlerHealthCheck', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeGraniteBundlesHcImplSlingJavaScriptHandlerHealthCheck', 'hc.tags') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeGraniteBundlesHcImplSlingJspScriptHandlerHealthCheck', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteBundlesHcImplSlingJspScriptHandlerHealthCheck', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteBundlesHcImplSlingJspScriptHandlerHealthCheck', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteBundlesHcImplSlingJspScriptHandlerHealthCheck', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteBundlesHcImplSlingJspScriptHandlerHealthCheck', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteBundlesHcImplSlingJspScriptHandlerHealthCheck', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeGraniteBundlesHcImplSlingJspScriptHandlerHealthCheck', 'hc.tags') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeGraniteBundlesHcImplSlingReferrerFilterHealthCheck', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteBundlesHcImplSlingReferrerFilterHealthCheck', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteBundlesHcImplSlingReferrerFilterHealthCheck', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteBundlesHcImplSlingReferrerFilterHealthCheck', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteBundlesHcImplSlingReferrerFilterHealthCheck', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteBundlesHcImplSlingReferrerFilterHealthCheck', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeGraniteBundlesHcImplSlingReferrerFilterHealthCheck', 'hc.tags') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeGraniteBundlesHcImplWebDavBundleHealthCheck', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteBundlesHcImplWebDavBundleHealthCheck', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteBundlesHcImplWebDavBundleHealthCheck', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteBundlesHcImplWebDavBundleHealthCheck', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteBundlesHcImplWebDavBundleHealthCheck', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteBundlesHcImplWebDavBundleHealthCheck', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeGraniteBundlesHcImplWebDavBundleHealthCheck', 'hc.tags') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeGraniteCommentsInternalCommentReplicationContentFilterFac', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteCommentsInternalCommentReplicationContentFilterFac', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteCommentsInternalCommentReplicationContentFilterFac', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteCommentsInternalCommentReplicationContentFilterFac', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteCommentsInternalCommentReplicationContentFilterFac', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteCommentsInternalCommentReplicationContentFilterFac', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeGraniteCommentsInternalCommentReplicationContentFilterFac', 'replicate.comment.resourceTypes') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeGraniteCompatrouterImplCompatSwitchingServiceImpl', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteCompatrouterImplCompatSwitchingServiceImpl', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteCompatrouterImplCompatSwitchingServiceImpl', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteCompatrouterImplCompatSwitchingServiceImpl', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteCompatrouterImplCompatSwitchingServiceImpl', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteCompatrouterImplCompatSwitchingServiceImpl', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeGraniteCompatrouterImplCompatSwitchingServiceImpl', 'compatgroups') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeGraniteCompatrouterImplCompatSwitchingServiceImpl', 'enabled') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteCompatrouterImplRoutingConfig', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteCompatrouterImplRoutingConfig', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteCompatrouterImplRoutingConfig', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteCompatrouterImplRoutingConfig', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteCompatrouterImplRoutingConfig', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteCompatrouterImplRoutingConfig', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeGraniteCompatrouterImplRoutingConfig', 'id') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteCompatrouterImplRoutingConfig', 'compatPath') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteCompatrouterImplRoutingConfig', 'newPath') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteCompatrouterImplSwitchMappingConfig', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteCompatrouterImplSwitchMappingConfig', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteCompatrouterImplSwitchMappingConfig', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteCompatrouterImplSwitchMappingConfig', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteCompatrouterImplSwitchMappingConfig', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteCompatrouterImplSwitchMappingConfig', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeGraniteCompatrouterImplSwitchMappingConfig', 'group') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteCompatrouterImplSwitchMappingConfig', 'ids') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeGraniteConfImplRuntimeAwareConfigurationResourceResolving', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteConfImplRuntimeAwareConfigurationResourceResolving', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteConfImplRuntimeAwareConfigurationResourceResolving', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteConfImplRuntimeAwareConfigurationResourceResolving', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteConfImplRuntimeAwareConfigurationResourceResolving', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteConfImplRuntimeAwareConfigurationResourceResolving', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeGraniteConfImplRuntimeAwareConfigurationResourceResolving', 'enabled') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteConfImplRuntimeAwareConfigurationResourceResolving', 'fallbackPaths') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeGraniteContexthubImplContextHubImpl', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteContexthubImplContextHubImpl', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteContexthubImplContextHubImpl', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteContexthubImplContextHubImpl', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteContexthubImplContextHubImpl', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteContexthubImplContextHubImpl', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeGraniteContexthubImplContextHubImpl', 'com.adobe.granite.contexthub.silent_mode') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteContexthubImplContextHubImpl', 'com.adobe.granite.contexthub.show_ui') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteCorsImplCORSPolicyImpl', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteCorsImplCORSPolicyImpl', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteCorsImplCORSPolicyImpl', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteCorsImplCORSPolicyImpl', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteCorsImplCORSPolicyImpl', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteCorsImplCORSPolicyImpl', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeGraniteCorsImplCORSPolicyImpl', 'alloworigin') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeGraniteCorsImplCORSPolicyImpl', 'alloworiginregexp') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeGraniteCorsImplCORSPolicyImpl', 'allowedpaths') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeGraniteCorsImplCORSPolicyImpl', 'exposedheaders') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeGraniteCorsImplCORSPolicyImpl', 'maxage') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteCorsImplCORSPolicyImpl', 'supportedheaders') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeGraniteCorsImplCORSPolicyImpl', 'supportedmethods') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeGraniteCorsImplCORSPolicyImpl', 'supportscredentials') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteCsrfImplCSRFFilter', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteCsrfImplCSRFFilter', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteCsrfImplCSRFFilter', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteCsrfImplCSRFFilter', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteCsrfImplCSRFFilter', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteCsrfImplCSRFFilter', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeGraniteCsrfImplCSRFFilter', 'filter.methods') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeGraniteCsrfImplCSRFFilter', 'filter.enable.safe.user.agents') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteCsrfImplCSRFFilter', 'filter.safe.user.agents') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeGraniteCsrfImplCSRFFilter', 'filter.excluded.paths') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeGraniteCsrfImplCSRFServlet', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteCsrfImplCSRFServlet', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteCsrfImplCSRFServlet', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteCsrfImplCSRFServlet', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteCsrfImplCSRFServlet', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteCsrfImplCSRFServlet', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeGraniteCsrfImplCSRFServlet', 'csrf.token.expires.in') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteCsrfImplCSRFServlet', 'sling.auth.requirements') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteDistributionCoreImplCryptoDistributionTransportSe', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteDistributionCoreImplCryptoDistributionTransportSe', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteDistributionCoreImplCryptoDistributionTransportSe', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteDistributionCoreImplCryptoDistributionTransportSe', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteDistributionCoreImplCryptoDistributionTransportSe', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteDistributionCoreImplCryptoDistributionTransportSe', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeGraniteDistributionCoreImplCryptoDistributionTransportSe', 'name') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteDistributionCoreImplCryptoDistributionTransportSe', 'username') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteDistributionCoreImplCryptoDistributionTransportSe', 'encryptedPassword') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteDistributionCoreImplDiffDiffChangesObserver', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteDistributionCoreImplDiffDiffChangesObserver', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteDistributionCoreImplDiffDiffChangesObserver', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteDistributionCoreImplDiffDiffChangesObserver', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteDistributionCoreImplDiffDiffChangesObserver', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteDistributionCoreImplDiffDiffChangesObserver', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeGraniteDistributionCoreImplDiffDiffChangesObserver', 'enabled') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteDistributionCoreImplDiffDiffChangesObserver', 'agentName') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteDistributionCoreImplDiffDiffChangesObserver', 'diffPath') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteDistributionCoreImplDiffDiffChangesObserver', 'observedPath') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteDistributionCoreImplDiffDiffChangesObserver', 'serviceName') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteDistributionCoreImplDiffDiffChangesObserver', 'propertyNames') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteDistributionCoreImplDiffDiffChangesObserver', 'distributionDelay') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteDistributionCoreImplDiffDiffChangesObserver', 'serviceUser.target') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteDistributionCoreImplDiffDiffEventListener', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteDistributionCoreImplDiffDiffEventListener', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteDistributionCoreImplDiffDiffEventListener', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteDistributionCoreImplDiffDiffEventListener', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteDistributionCoreImplDiffDiffEventListener', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteDistributionCoreImplDiffDiffEventListener', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeGraniteDistributionCoreImplDiffDiffEventListener', 'diffPath') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteDistributionCoreImplDiffDiffEventListener', 'serviceName') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteDistributionCoreImplDiffDiffEventListener', 'serviceUser.target') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteDistributionCoreImplDistributionToReplicationEven', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteDistributionCoreImplDistributionToReplicationEven', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteDistributionCoreImplDistributionToReplicationEven', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteDistributionCoreImplDistributionToReplicationEven', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteDistributionCoreImplDistributionToReplicationEven', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteDistributionCoreImplDistributionToReplicationEven', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeGraniteDistributionCoreImplDistributionToReplicationEven', 'importer.name') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeGraniteDistributionCoreImplReplicationAdaptersReplicat', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteDistributionCoreImplReplicationAdaptersReplicat', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteDistributionCoreImplReplicationAdaptersReplicat', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteDistributionCoreImplReplicationAdaptersReplicat', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteDistributionCoreImplReplicationAdaptersReplicat', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteDistributionCoreImplReplicationAdaptersReplicat', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeGraniteDistributionCoreImplReplicationAdaptersReplicat', 'providerName') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteDistributionCoreImplReplicationAdaptersReplicat', 'forward.requests') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteDistributionCoreImplReplicationDistributionTrans', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteDistributionCoreImplReplicationDistributionTrans', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteDistributionCoreImplReplicationDistributionTrans', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteDistributionCoreImplReplicationDistributionTrans', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteDistributionCoreImplReplicationDistributionTrans', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteDistributionCoreImplReplicationDistributionTrans', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeGraniteDistributionCoreImplReplicationDistributionTrans', 'forward.requests') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteDistributionCoreImplTransportAccessTokenDistribu', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteDistributionCoreImplTransportAccessTokenDistribu', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteDistributionCoreImplTransportAccessTokenDistribu', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteDistributionCoreImplTransportAccessTokenDistribu', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteDistributionCoreImplTransportAccessTokenDistribu', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteDistributionCoreImplTransportAccessTokenDistribu', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeGraniteDistributionCoreImplTransportAccessTokenDistribu', 'name') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteDistributionCoreImplTransportAccessTokenDistribu', 'serviceName') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteDistributionCoreImplTransportAccessTokenDistribu', 'userId') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteDistributionCoreImplTransportAccessTokenDistribu', 'accessTokenProvider.target') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteFragsImplCheckHttpHeaderFlag', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteFragsImplCheckHttpHeaderFlag', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteFragsImplCheckHttpHeaderFlag', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteFragsImplCheckHttpHeaderFlag', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteFragsImplCheckHttpHeaderFlag', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteFragsImplCheckHttpHeaderFlag', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeGraniteFragsImplCheckHttpHeaderFlag', 'feature.name') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteFragsImplCheckHttpHeaderFlag', 'feature.description') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteFragsImplCheckHttpHeaderFlag', 'http.header.name') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteFragsImplCheckHttpHeaderFlag', 'http.header.valuepattern') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteFragsImplRandomFeature', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteFragsImplRandomFeature', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteFragsImplRandomFeature', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteFragsImplRandomFeature', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteFragsImplRandomFeature', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteFragsImplRandomFeature', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeGraniteFragsImplRandomFeature', 'feature.name') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteFragsImplRandomFeature', 'feature.description') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteFragsImplRandomFeature', 'active.percentage') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteFragsImplRandomFeature', 'cookie.name') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteFragsImplRandomFeature', 'cookie.maxAge') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteHttpcacheFileFileCacheStore', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteHttpcacheFileFileCacheStore', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteHttpcacheFileFileCacheStore', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteHttpcacheFileFileCacheStore', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteHttpcacheFileFileCacheStore', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteHttpcacheFileFileCacheStore', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeGraniteHttpcacheFileFileCacheStore', 'com.adobe.granite.httpcache.file.documentRoot') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteHttpcacheFileFileCacheStore', 'com.adobe.granite.httpcache.file.includeHost') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteHttpcacheImplOuterCacheFilter', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteHttpcacheImplOuterCacheFilter', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteHttpcacheImplOuterCacheFilter', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteHttpcacheImplOuterCacheFilter', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteHttpcacheImplOuterCacheFilter', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteHttpcacheImplOuterCacheFilter', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeGraniteHttpcacheImplOuterCacheFilter', 'com.adobe.granite.httpcache.url.paths') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeGraniteI18nImplBundlePseudoTranslations', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteI18nImplBundlePseudoTranslations', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteI18nImplBundlePseudoTranslations', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteI18nImplBundlePseudoTranslations', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteI18nImplBundlePseudoTranslations', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteI18nImplBundlePseudoTranslations', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeGraniteI18nImplBundlePseudoTranslations', 'pseudo.patterns') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeGraniteI18nImplPreferencesLocaleResolverService', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteI18nImplPreferencesLocaleResolverService', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteI18nImplPreferencesLocaleResolverService', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteI18nImplPreferencesLocaleResolverService', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteI18nImplPreferencesLocaleResolverService', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteI18nImplPreferencesLocaleResolverService', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeGraniteI18nImplPreferencesLocaleResolverService', 'security.preferences.name') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteInfocollectorInfoCollector', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteInfocollectorInfoCollector', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteInfocollectorInfoCollector', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteInfocollectorInfoCollector', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteInfocollectorInfoCollector', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteInfocollectorInfoCollector', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeGraniteInfocollectorInfoCollector', 'granite.infocollector.includeThreadDumps') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteInfocollectorInfoCollector', 'granite.infocollector.includeHeapDump') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteJettySslInternalGraniteSslConnectorFactory', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteJettySslInternalGraniteSslConnectorFactory', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteJettySslInternalGraniteSslConnectorFactory', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteJettySslInternalGraniteSslConnectorFactory', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteJettySslInternalGraniteSslConnectorFactory', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteJettySslInternalGraniteSslConnectorFactory', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeGraniteJettySslInternalGraniteSslConnectorFactory', 'com.adobe.granite.jetty.ssl.port') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteJettySslInternalGraniteSslConnectorFactory', 'com.adobe.granite.jetty.ssl.keystore.user') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteJettySslInternalGraniteSslConnectorFactory', 'com.adobe.granite.jetty.ssl.keystore.password') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteJettySslInternalGraniteSslConnectorFactory', 'com.adobe.granite.jetty.ssl.ciphersuites.excluded') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeGraniteJettySslInternalGraniteSslConnectorFactory', 'com.adobe.granite.jetty.ssl.ciphersuites.included') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeGraniteJettySslInternalGraniteSslConnectorFactory', 'com.adobe.granite.jetty.ssl.client.certificate') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteLicenseImplLicenseCheckFilter', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteLicenseImplLicenseCheckFilter', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteLicenseImplLicenseCheckFilter', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteLicenseImplLicenseCheckFilter', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteLicenseImplLicenseCheckFilter', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteLicenseImplLicenseCheckFilter', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeGraniteLicenseImplLicenseCheckFilter', 'checkInternval') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteLicenseImplLicenseCheckFilter', 'excludeIds') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeGraniteLicenseImplLicenseCheckFilter', 'encryptPing') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteLoggingImplLogAnalyserImpl', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteLoggingImplLogAnalyserImpl', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteLoggingImplLogAnalyserImpl', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteLoggingImplLogAnalyserImpl', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteLoggingImplLogAnalyserImpl', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteLoggingImplLogAnalyserImpl', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeGraniteLoggingImplLogAnalyserImpl', 'messages.queue.size') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteLoggingImplLogAnalyserImpl', 'logger.config') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeGraniteLoggingImplLogAnalyserImpl', 'messages.size') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteLoggingImplLogErrorHealthCheck', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteLoggingImplLogErrorHealthCheck', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteLoggingImplLogErrorHealthCheck', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteLoggingImplLogErrorHealthCheck', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteLoggingImplLogErrorHealthCheck', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteLoggingImplLogErrorHealthCheck', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeGraniteLoggingImplLogErrorHealthCheck', 'hc.tags') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeGraniteMaintenanceCrxImplDataStoreGarbageCollectionTask', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteMaintenanceCrxImplDataStoreGarbageCollectionTask', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteMaintenanceCrxImplDataStoreGarbageCollectionTask', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteMaintenanceCrxImplDataStoreGarbageCollectionTask', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteMaintenanceCrxImplDataStoreGarbageCollectionTask', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteMaintenanceCrxImplDataStoreGarbageCollectionTask', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeGraniteMaintenanceCrxImplDataStoreGarbageCollectionTask', 'granite.maintenance.mandatory') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteMaintenanceCrxImplDataStoreGarbageCollectionTask', 'job.topics') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteMaintenanceCrxImplLuceneBinariesCleanupTask', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteMaintenanceCrxImplLuceneBinariesCleanupTask', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteMaintenanceCrxImplLuceneBinariesCleanupTask', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteMaintenanceCrxImplLuceneBinariesCleanupTask', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteMaintenanceCrxImplLuceneBinariesCleanupTask', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteMaintenanceCrxImplLuceneBinariesCleanupTask', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeGraniteMaintenanceCrxImplLuceneBinariesCleanupTask', 'job.topics') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteMaintenanceCrxImplRevisionCleanupTask', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteMaintenanceCrxImplRevisionCleanupTask', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteMaintenanceCrxImplRevisionCleanupTask', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteMaintenanceCrxImplRevisionCleanupTask', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteMaintenanceCrxImplRevisionCleanupTask', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteMaintenanceCrxImplRevisionCleanupTask', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeGraniteMaintenanceCrxImplRevisionCleanupTask', 'full.gc.days') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeGraniteMonitoringImplScriptConfigImpl', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteMonitoringImplScriptConfigImpl', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteMonitoringImplScriptConfigImpl', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteMonitoringImplScriptConfigImpl', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteMonitoringImplScriptConfigImpl', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteMonitoringImplScriptConfigImpl', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeGraniteMonitoringImplScriptConfigImpl', 'script.filename') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteMonitoringImplScriptConfigImpl', 'script.display') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteMonitoringImplScriptConfigImpl', 'script.path') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteMonitoringImplScriptConfigImpl', 'script.platform') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeGraniteMonitoringImplScriptConfigImpl', 'interval') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteMonitoringImplScriptConfigImpl', 'jmxdomain') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteOauthServerAuthImplOAuth2ServerAuthenticationHan', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteOauthServerAuthImplOAuth2ServerAuthenticationHan', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteOauthServerAuthImplOAuth2ServerAuthenticationHan', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteOauthServerAuthImplOAuth2ServerAuthenticationHan', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteOauthServerAuthImplOAuth2ServerAuthenticationHan', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteOauthServerAuthImplOAuth2ServerAuthenticationHan', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeGraniteOauthServerAuthImplOAuth2ServerAuthenticationHan', 'path') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteOauthServerAuthImplOAuth2ServerAuthenticationHan', 'jaas.controlFlag') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteOauthServerAuthImplOAuth2ServerAuthenticationHan', 'jaas.realmName') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteOauthServerAuthImplOAuth2ServerAuthenticationHan', 'jaas.ranking') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteOauthServerAuthImplOAuth2ServerAuthenticationHan', 'oauth.offline.validation') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteOauthServerImplAccessTokenCleanupTask', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteOauthServerImplAccessTokenCleanupTask', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteOauthServerImplAccessTokenCleanupTask', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteOauthServerImplAccessTokenCleanupTask', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteOauthServerImplAccessTokenCleanupTask', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteOauthServerImplAccessTokenCleanupTask', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeGraniteOauthServerImplAccessTokenCleanupTask', 'scheduler.expression') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteOauthServerImplOAuth2ClientRevocationServlet', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteOauthServerImplOAuth2ClientRevocationServlet', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteOauthServerImplOAuth2ClientRevocationServlet', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteOauthServerImplOAuth2ClientRevocationServlet', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteOauthServerImplOAuth2ClientRevocationServlet', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteOauthServerImplOAuth2ClientRevocationServlet', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeGraniteOauthServerImplOAuth2ClientRevocationServlet', 'oauth.client.revocation.active') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteOauthServerImplOAuth2RevocationEndpointServlet', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteOauthServerImplOAuth2RevocationEndpointServlet', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteOauthServerImplOAuth2RevocationEndpointServlet', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteOauthServerImplOAuth2RevocationEndpointServlet', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteOauthServerImplOAuth2RevocationEndpointServlet', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteOauthServerImplOAuth2RevocationEndpointServlet', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeGraniteOauthServerImplOAuth2RevocationEndpointServlet', 'sling.servlet.paths') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteOauthServerImplOAuth2RevocationEndpointServlet', 'oauth.revocation.active') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteOauthServerImplOAuth2TokenEndpointServlet', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteOauthServerImplOAuth2TokenEndpointServlet', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteOauthServerImplOAuth2TokenEndpointServlet', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteOauthServerImplOAuth2TokenEndpointServlet', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteOauthServerImplOAuth2TokenEndpointServlet', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteOauthServerImplOAuth2TokenEndpointServlet', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeGraniteOauthServerImplOAuth2TokenEndpointServlet', 'oauth.issuer') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteOauthServerImplOAuth2TokenEndpointServlet', 'oauth.access.token.expires.in') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteOauthServerImplOAuth2TokenEndpointServlet', 'osgi.http.whiteboard.servlet.pattern') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteOauthServerImplOAuth2TokenEndpointServlet', 'osgi.http.whiteboard.context.select') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteOauthServerImplOAuth2TokenRevocationServlet', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteOauthServerImplOAuth2TokenRevocationServlet', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteOauthServerImplOAuth2TokenRevocationServlet', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteOauthServerImplOAuth2TokenRevocationServlet', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteOauthServerImplOAuth2TokenRevocationServlet', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteOauthServerImplOAuth2TokenRevocationServlet', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeGraniteOauthServerImplOAuth2TokenRevocationServlet', 'oauth.token.revocation.active') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteOffloadingImplOffloadingConfigurator', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteOffloadingImplOffloadingConfigurator', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteOffloadingImplOffloadingConfigurator', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteOffloadingImplOffloadingConfigurator', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteOffloadingImplOffloadingConfigurator', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteOffloadingImplOffloadingConfigurator', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeGraniteOffloadingImplOffloadingConfigurator', 'offloading.transporter') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteOffloadingImplOffloadingConfigurator', 'offloading.cleanup.payload') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteOffloadingImplOffloadingJobCloner', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteOffloadingImplOffloadingJobCloner', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteOffloadingImplOffloadingJobCloner', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteOffloadingImplOffloadingJobCloner', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteOffloadingImplOffloadingJobCloner', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteOffloadingImplOffloadingJobCloner', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeGraniteOffloadingImplOffloadingJobCloner', 'offloading.jobcloner.enabled') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteOffloadingImplOffloadingJobOffloader', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteOffloadingImplOffloadingJobOffloader', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteOffloadingImplOffloadingJobOffloader', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteOffloadingImplOffloadingJobOffloader', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteOffloadingImplOffloadingJobOffloader', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteOffloadingImplOffloadingJobOffloader', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeGraniteOffloadingImplOffloadingJobOffloader', 'offloading.offloader.enabled') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteOffloadingImplTransporterOffloadingAgentManager', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteOffloadingImplTransporterOffloadingAgentManager', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteOffloadingImplTransporterOffloadingAgentManager', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteOffloadingImplTransporterOffloadingAgentManager', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteOffloadingImplTransporterOffloadingAgentManager', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteOffloadingImplTransporterOffloadingAgentManager', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeGraniteOffloadingImplTransporterOffloadingAgentManager', 'offloading.agentmanager.enabled') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteOffloadingImplTransporterOffloadingDefaultTranspo', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteOffloadingImplTransporterOffloadingDefaultTranspo', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteOffloadingImplTransporterOffloadingDefaultTranspo', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteOffloadingImplTransporterOffloadingDefaultTranspo', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteOffloadingImplTransporterOffloadingDefaultTranspo', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteOffloadingImplTransporterOffloadingDefaultTranspo', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeGraniteOffloadingImplTransporterOffloadingDefaultTranspo', 'default.transport.agent-to-worker.prefix') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteOffloadingImplTransporterOffloadingDefaultTranspo', 'default.transport.agent-to-master.prefix') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteOffloadingImplTransporterOffloadingDefaultTranspo', 'default.transport.input.package') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteOffloadingImplTransporterOffloadingDefaultTranspo', 'default.transport.output.package') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteOffloadingImplTransporterOffloadingDefaultTranspo', 'default.transport.replication.synchronous') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteOffloadingImplTransporterOffloadingDefaultTranspo', 'default.transport.contentpackage') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteOffloadingImplTransporterOffloadingDefaultTranspo', 'offloading.transporter.default.enabled') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteOmnisearchImplCoreOmniSearchServiceImpl', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteOmnisearchImplCoreOmniSearchServiceImpl', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteOmnisearchImplCoreOmniSearchServiceImpl', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteOmnisearchImplCoreOmniSearchServiceImpl', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteOmnisearchImplCoreOmniSearchServiceImpl', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteOmnisearchImplCoreOmniSearchServiceImpl', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeGraniteOmnisearchImplCoreOmniSearchServiceImpl', 'omnisearch.suggestion.requiretext.min') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteOmnisearchImplCoreOmniSearchServiceImpl', 'omnisearch.suggestion.spellcheck.require') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteOptoutImplOptOutServiceImpl', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteOptoutImplOptOutServiceImpl', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteOptoutImplOptOutServiceImpl', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteOptoutImplOptOutServiceImpl', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteOptoutImplOptOutServiceImpl', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteOptoutImplOptOutServiceImpl', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeGraniteOptoutImplOptOutServiceImpl', 'optout.cookies') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeGraniteOptoutImplOptOutServiceImpl', 'optout.headers') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeGraniteOptoutImplOptOutServiceImpl', 'optout.whitelist.cookies') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeGraniteQueriesImplHcAsyncIndexHealthCheck', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteQueriesImplHcAsyncIndexHealthCheck', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteQueriesImplHcAsyncIndexHealthCheck', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteQueriesImplHcAsyncIndexHealthCheck', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteQueriesImplHcAsyncIndexHealthCheck', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteQueriesImplHcAsyncIndexHealthCheck', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeGraniteQueriesImplHcAsyncIndexHealthCheck', 'indexing.critical.threshold') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteQueriesImplHcAsyncIndexHealthCheck', 'indexing.warn.threshold') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteQueriesImplHcAsyncIndexHealthCheck', 'hc.tags') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeGraniteQueriesImplHcLargeIndexHealthCheck', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteQueriesImplHcLargeIndexHealthCheck', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteQueriesImplHcLargeIndexHealthCheck', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteQueriesImplHcLargeIndexHealthCheck', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteQueriesImplHcLargeIndexHealthCheck', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteQueriesImplHcLargeIndexHealthCheck', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeGraniteQueriesImplHcLargeIndexHealthCheck', 'large.index.critical.threshold') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteQueriesImplHcLargeIndexHealthCheck', 'large.index.warn.threshold') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteQueriesImplHcLargeIndexHealthCheck', 'hc.tags') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeGraniteQueriesImplHcQueriesStatusHealthCheck', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteQueriesImplHcQueriesStatusHealthCheck', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteQueriesImplHcQueriesStatusHealthCheck', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteQueriesImplHcQueriesStatusHealthCheck', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteQueriesImplHcQueriesStatusHealthCheck', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteQueriesImplHcQueriesStatusHealthCheck', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeGraniteQueriesImplHcQueriesStatusHealthCheck', 'hc.tags') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeGraniteQueriesImplHcQueryHealthCheckMetrics', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteQueriesImplHcQueryHealthCheckMetrics', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteQueriesImplHcQueryHealthCheckMetrics', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteQueriesImplHcQueryHealthCheckMetrics', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteQueriesImplHcQueryHealthCheckMetrics', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteQueriesImplHcQueryHealthCheckMetrics', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeGraniteQueriesImplHcQueryHealthCheckMetrics', 'getPeriod') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteQueriesImplHcQueryLimitsHealthCheck', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteQueriesImplHcQueryLimitsHealthCheck', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteQueriesImplHcQueryLimitsHealthCheck', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteQueriesImplHcQueryLimitsHealthCheck', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteQueriesImplHcQueryLimitsHealthCheck', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteQueriesImplHcQueryLimitsHealthCheck', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeGraniteQueriesImplHcQueryLimitsHealthCheck', 'hc.tags') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeGraniteReplicationHcImplReplicationQueueHealthCheck', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteReplicationHcImplReplicationQueueHealthCheck', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteReplicationHcImplReplicationQueueHealthCheck', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteReplicationHcImplReplicationQueueHealthCheck', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteReplicationHcImplReplicationQueueHealthCheck', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteReplicationHcImplReplicationQueueHealthCheck', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeGraniteReplicationHcImplReplicationQueueHealthCheck', 'number.of.retries.allowed') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteReplicationHcImplReplicationQueueHealthCheck', 'hc.tags') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeGraniteReplicationHcImplReplicationTransportUsersHealthC', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteReplicationHcImplReplicationTransportUsersHealthC', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteReplicationHcImplReplicationTransportUsersHealthC', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteReplicationHcImplReplicationTransportUsersHealthC', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteReplicationHcImplReplicationTransportUsersHealthC', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteReplicationHcImplReplicationTransportUsersHealthC', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeGraniteReplicationHcImplReplicationTransportUsersHealthC', 'hc.tags') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeGraniteRepositoryHcImplAuthorizableNodeNameHealthCheck', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteRepositoryHcImplAuthorizableNodeNameHealthCheck', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteRepositoryHcImplAuthorizableNodeNameHealthCheck', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteRepositoryHcImplAuthorizableNodeNameHealthCheck', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteRepositoryHcImplAuthorizableNodeNameHealthCheck', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteRepositoryHcImplAuthorizableNodeNameHealthCheck', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeGraniteRepositoryHcImplAuthorizableNodeNameHealthCheck', 'hc.tags') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeGraniteRepositoryHcImplContentSlingSlingContentHealthC', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteRepositoryHcImplContentSlingSlingContentHealthC', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteRepositoryHcImplContentSlingSlingContentHealthC', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteRepositoryHcImplContentSlingSlingContentHealthC', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteRepositoryHcImplContentSlingSlingContentHealthC', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteRepositoryHcImplContentSlingSlingContentHealthC', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeGraniteRepositoryHcImplContentSlingSlingContentHealthC', 'hc.tags') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeGraniteRepositoryHcImplContentSlingSlingContentHealthC', 'exclude.search.path') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeGraniteRepositoryHcImplContinuousRGCHealthCheck', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteRepositoryHcImplContinuousRGCHealthCheck', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteRepositoryHcImplContinuousRGCHealthCheck', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteRepositoryHcImplContinuousRGCHealthCheck', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteRepositoryHcImplContinuousRGCHealthCheck', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteRepositoryHcImplContinuousRGCHealthCheck', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeGraniteRepositoryHcImplContinuousRGCHealthCheck', 'hc.tags') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeGraniteRepositoryHcImplDefaultAccessUserProfileHealthChe', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteRepositoryHcImplDefaultAccessUserProfileHealthChe', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteRepositoryHcImplDefaultAccessUserProfileHealthChe', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteRepositoryHcImplDefaultAccessUserProfileHealthChe', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteRepositoryHcImplDefaultAccessUserProfileHealthChe', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteRepositoryHcImplDefaultAccessUserProfileHealthChe', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeGraniteRepositoryHcImplDefaultAccessUserProfileHealthChe', 'hc.tags') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeGraniteRepositoryHcImplDefaultLoginsHealthCheck', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteRepositoryHcImplDefaultLoginsHealthCheck', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteRepositoryHcImplDefaultLoginsHealthCheck', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteRepositoryHcImplDefaultLoginsHealthCheck', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteRepositoryHcImplDefaultLoginsHealthCheck', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteRepositoryHcImplDefaultLoginsHealthCheck', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeGraniteRepositoryHcImplDefaultLoginsHealthCheck', 'hc.tags') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeGraniteRepositoryHcImplDefaultLoginsHealthCheck', 'account.logins') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeGraniteRepositoryHcImplDefaultLoginsHealthCheck', 'console.logins') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeGraniteRepositoryHcImplDiskSpaceHealthCheck', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteRepositoryHcImplDiskSpaceHealthCheck', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteRepositoryHcImplDiskSpaceHealthCheck', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteRepositoryHcImplDiskSpaceHealthCheck', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteRepositoryHcImplDiskSpaceHealthCheck', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteRepositoryHcImplDiskSpaceHealthCheck', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeGraniteRepositoryHcImplDiskSpaceHealthCheck', 'hc.tags') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeGraniteRepositoryHcImplDiskSpaceHealthCheck', 'disk.space.warn.threshold') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteRepositoryHcImplDiskSpaceHealthCheck', 'disk.space.error.threshold') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteRepositoryHcImplObservationQueueLengthHealthCheck', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteRepositoryHcImplObservationQueueLengthHealthCheck', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteRepositoryHcImplObservationQueueLengthHealthCheck', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteRepositoryHcImplObservationQueueLengthHealthCheck', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteRepositoryHcImplObservationQueueLengthHealthCheck', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteRepositoryHcImplObservationQueueLengthHealthCheck', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeGraniteRepositoryHcImplObservationQueueLengthHealthCheck', 'hc.tags') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeGraniteRepositoryImplCommitStatsConfig', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteRepositoryImplCommitStatsConfig', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteRepositoryImplCommitStatsConfig', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteRepositoryImplCommitStatsConfig', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteRepositoryImplCommitStatsConfig', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteRepositoryImplCommitStatsConfig', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeGraniteRepositoryImplCommitStatsConfig', 'enabled') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteRepositoryImplCommitStatsConfig', 'intervalSeconds') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteRepositoryImplCommitStatsConfig', 'commitsPerIntervalThreshold') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteRepositoryImplCommitStatsConfig', 'maxLocationLength') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteRepositoryImplCommitStatsConfig', 'maxDetailsShown') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteRepositoryImplCommitStatsConfig', 'minDetailsPercentage') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteRepositoryImplCommitStatsConfig', 'threadMatchers') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeGraniteRepositoryImplCommitStatsConfig', 'maxGreedyDepth') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteRepositoryImplCommitStatsConfig', 'greedyStackMatchers') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteRepositoryImplCommitStatsConfig', 'stackFilters') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeGraniteRepositoryImplCommitStatsConfig', 'stackMatchers') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeGraniteRepositoryImplCommitStatsConfig', 'stackCategorizers') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeGraniteRepositoryImplCommitStatsConfig', 'stackShorteners') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeGraniteRepositoryServiceUserConfiguration', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteRepositoryServiceUserConfiguration', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteRepositoryServiceUserConfiguration', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteRepositoryServiceUserConfiguration', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteRepositoryServiceUserConfiguration', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteRepositoryServiceUserConfiguration', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeGraniteRepositoryServiceUserConfiguration', 'service.ranking') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteRepositoryServiceUserConfiguration', 'serviceusers.simpleSubjectPopulation') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteRepositoryServiceUserConfiguration', 'serviceusers.list') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeGraniteRequestsLoggingImplHcRequestsStatusHealthCheckIm', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteRequestsLoggingImplHcRequestsStatusHealthCheckIm', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteRequestsLoggingImplHcRequestsStatusHealthCheckIm', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteRequestsLoggingImplHcRequestsStatusHealthCheckIm', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteRequestsLoggingImplHcRequestsStatusHealthCheckIm', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteRequestsLoggingImplHcRequestsStatusHealthCheckIm', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeGraniteRequestsLoggingImplHcRequestsStatusHealthCheckIm', 'hc.tags') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeGraniteResourcestatusImplCompositeStatusType', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteResourcestatusImplCompositeStatusType', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteResourcestatusImplCompositeStatusType', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteResourcestatusImplCompositeStatusType', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteResourcestatusImplCompositeStatusType', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteResourcestatusImplCompositeStatusType', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeGraniteResourcestatusImplCompositeStatusType', 'name') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteResourcestatusImplCompositeStatusType', 'types') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeGraniteResourcestatusImplStatusResourceProviderImpl', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteResourcestatusImplStatusResourceProviderImpl', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteResourcestatusImplStatusResourceProviderImpl', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteResourcestatusImplStatusResourceProviderImpl', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteResourcestatusImplStatusResourceProviderImpl', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteResourcestatusImplStatusResourceProviderImpl', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeGraniteResourcestatusImplStatusResourceProviderImpl', 'provider.root') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteRestAssetsImplAssetContentDispositionFilter', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteRestAssetsImplAssetContentDispositionFilter', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteRestAssetsImplAssetContentDispositionFilter', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteRestAssetsImplAssetContentDispositionFilter', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteRestAssetsImplAssetContentDispositionFilter', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteRestAssetsImplAssetContentDispositionFilter', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeGraniteRestAssetsImplAssetContentDispositionFilter', 'mime.allowEmpty') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteRestAssetsImplAssetContentDispositionFilter', 'mime.allowed') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeGraniteRestImplApiEndpointResourceProviderFactoryImpl', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteRestImplApiEndpointResourceProviderFactoryImpl', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteRestImplApiEndpointResourceProviderFactoryImpl', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteRestImplApiEndpointResourceProviderFactoryImpl', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteRestImplApiEndpointResourceProviderFactoryImpl', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteRestImplApiEndpointResourceProviderFactoryImpl', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeGraniteRestImplApiEndpointResourceProviderFactoryImpl', 'provider.roots') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteRestImplServletDefaultGETServlet', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteRestImplServletDefaultGETServlet', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteRestImplServletDefaultGETServlet', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteRestImplServletDefaultGETServlet', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteRestImplServletDefaultGETServlet', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteRestImplServletDefaultGETServlet', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeGraniteRestImplServletDefaultGETServlet', 'default.limit') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteRestImplServletDefaultGETServlet', 'use.absolute.uri') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteSecurityUserUiInternalServletsSSLConfigurationS', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteSecurityUserUiInternalServletsSSLConfigurationS', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteSecurityUserUiInternalServletsSSLConfigurationS', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteSecurityUserUiInternalServletsSSLConfigurationS', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteSecurityUserUiInternalServletsSSLConfigurationS', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteSecurityUserUiInternalServletsSSLConfigurationS', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeGraniteSecurityUserUiInternalServletsSSLConfigurationS', 'hc.tags') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeGraniteSecurityUserUserPropertiesService', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteSecurityUserUserPropertiesService', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteSecurityUserUserPropertiesService', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteSecurityUserUserPropertiesService', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteSecurityUserUserPropertiesService', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteSecurityUserUserPropertiesService', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeGraniteSecurityUserUserPropertiesService', 'adapter.condition') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteSecurityUserUserPropertiesService', 'granite.userproperties.nodetypes') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeGraniteSecurityUserUserPropertiesService', 'granite.userproperties.resourcetypes') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeGraniteSocialgraphImplSocialGraphFactoryImpl', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteSocialgraphImplSocialGraphFactoryImpl', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteSocialgraphImplSocialGraphFactoryImpl', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteSocialgraphImplSocialGraphFactoryImpl', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteSocialgraphImplSocialGraphFactoryImpl', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteSocialgraphImplSocialGraphFactoryImpl', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeGraniteSocialgraphImplSocialGraphFactoryImpl', 'group2member.relationship.outgoing') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteSocialgraphImplSocialGraphFactoryImpl', 'group2member.excluded.outgoing') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeGraniteSocialgraphImplSocialGraphFactoryImpl', 'group2member.relationship.incoming') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteSocialgraphImplSocialGraphFactoryImpl', 'group2member.excluded.incoming') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeGraniteSystemMonitoringImplSystemStatsMBeanImpl', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteSystemMonitoringImplSystemStatsMBeanImpl', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteSystemMonitoringImplSystemStatsMBeanImpl', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteSystemMonitoringImplSystemStatsMBeanImpl', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteSystemMonitoringImplSystemStatsMBeanImpl', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteSystemMonitoringImplSystemStatsMBeanImpl', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeGraniteSystemMonitoringImplSystemStatsMBeanImpl', 'scheduler.expression') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteSystemMonitoringImplSystemStatsMBeanImpl', 'jmx.objectname') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteTaskmanagementImplJcrTaskAdapterFactory', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteTaskmanagementImplJcrTaskAdapterFactory', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteTaskmanagementImplJcrTaskAdapterFactory', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteTaskmanagementImplJcrTaskAdapterFactory', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteTaskmanagementImplJcrTaskAdapterFactory', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteTaskmanagementImplJcrTaskAdapterFactory', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeGraniteTaskmanagementImplJcrTaskAdapterFactory', 'adapter.condition') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteTaskmanagementImplJcrTaskArchiveService', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteTaskmanagementImplJcrTaskArchiveService', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteTaskmanagementImplJcrTaskArchiveService', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteTaskmanagementImplJcrTaskArchiveService', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteTaskmanagementImplJcrTaskArchiveService', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteTaskmanagementImplJcrTaskArchiveService', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeGraniteTaskmanagementImplJcrTaskArchiveService', 'archiving.enabled') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteTaskmanagementImplJcrTaskArchiveService', 'scheduler.expression') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteTaskmanagementImplJcrTaskArchiveService', 'archive.since.days.completed') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteTaskmanagementImplPurgeTaskPurgeMaintenanceTask', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteTaskmanagementImplPurgeTaskPurgeMaintenanceTask', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteTaskmanagementImplPurgeTaskPurgeMaintenanceTask', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteTaskmanagementImplPurgeTaskPurgeMaintenanceTask', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteTaskmanagementImplPurgeTaskPurgeMaintenanceTask', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteTaskmanagementImplPurgeTaskPurgeMaintenanceTask', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeGraniteTaskmanagementImplPurgeTaskPurgeMaintenanceTask', 'purgeCompleted') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteTaskmanagementImplPurgeTaskPurgeMaintenanceTask', 'completedAge') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteTaskmanagementImplPurgeTaskPurgeMaintenanceTask', 'purgeActive') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteTaskmanagementImplPurgeTaskPurgeMaintenanceTask', 'activeAge') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteTaskmanagementImplPurgeTaskPurgeMaintenanceTask', 'saveThreshold') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteTaskmanagementImplServiceTaskManagerAdapterFactor', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteTaskmanagementImplServiceTaskManagerAdapterFactor', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteTaskmanagementImplServiceTaskManagerAdapterFactor', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteTaskmanagementImplServiceTaskManagerAdapterFactor', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteTaskmanagementImplServiceTaskManagerAdapterFactor', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteTaskmanagementImplServiceTaskManagerAdapterFactor', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeGraniteTaskmanagementImplServiceTaskManagerAdapterFactor', 'adapter.condition') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteTaskmanagementImplServiceTaskManagerAdapterFactor', 'taskmanager.admingroups') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeGraniteThreaddumpThreadDumpCollector', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteThreaddumpThreadDumpCollector', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteThreaddumpThreadDumpCollector', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteThreaddumpThreadDumpCollector', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteThreaddumpThreadDumpCollector', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteThreaddumpThreadDumpCollector', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeGraniteThreaddumpThreadDumpCollector', 'scheduler.period') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteThreaddumpThreadDumpCollector', 'scheduler.runOn') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteThreaddumpThreadDumpCollector', 'granite.threaddump.enabled') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteThreaddumpThreadDumpCollector', 'granite.threaddump.dumpsPerFile') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteThreaddumpThreadDumpCollector', 'granite.threaddump.enableGzipCompression') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteThreaddumpThreadDumpCollector', 'granite.threaddump.enableDirectoriesCompression') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteThreaddumpThreadDumpCollector', 'granite.threaddump.enableJStack') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteThreaddumpThreadDumpCollector', 'granite.threaddump.maxBackupDays') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteThreaddumpThreadDumpCollector', 'granite.threaddump.backupCleanTrigger') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteTranslationConnectorMsftCoreImplMicrosoftTransl', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteTranslationConnectorMsftCoreImplMicrosoftTransl', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteTranslationConnectorMsftCoreImplMicrosoftTransl', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteTranslationConnectorMsftCoreImplMicrosoftTransl', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteTranslationConnectorMsftCoreImplMicrosoftTransl', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteTranslationConnectorMsftCoreImplMicrosoftTransl', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeGraniteTranslationConnectorMsftCoreImplMicrosoftTransl', 'translationFactory') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteTranslationConnectorMsftCoreImplMicrosoftTransl', 'defaultConnectorLabel') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteTranslationConnectorMsftCoreImplMicrosoftTransl', 'defaultConnectorAttribution') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteTranslationConnectorMsftCoreImplMicrosoftTransl', 'defaultConnectorWorkspaceId') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteTranslationConnectorMsftCoreImplMicrosoftTransl', 'defaultConnectorSubscriptionKey') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteTranslationConnectorMsftCoreImplMicrosoftTransl', 'languageMapLocation') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteTranslationConnectorMsftCoreImplMicrosoftTransl', 'categoryMapLocation') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteTranslationConnectorMsftCoreImplMicrosoftTransl', 'retryAttempts') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteTranslationConnectorMsftCoreImplMicrosoftTransl', 'timeoutCount') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteTranslationCoreImplTranslationManagerImpl', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteTranslationCoreImplTranslationManagerImpl', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteTranslationCoreImplTranslationManagerImpl', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteTranslationCoreImplTranslationManagerImpl', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteTranslationCoreImplTranslationManagerImpl', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteTranslationCoreImplTranslationManagerImpl', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeGraniteTranslationCoreImplTranslationManagerImpl', 'defaultConnectorName') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteTranslationCoreImplTranslationManagerImpl', 'defaultCategory') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteUiClientlibsImplHtmlLibraryManagerImpl', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteUiClientlibsImplHtmlLibraryManagerImpl', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteUiClientlibsImplHtmlLibraryManagerImpl', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteUiClientlibsImplHtmlLibraryManagerImpl', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteUiClientlibsImplHtmlLibraryManagerImpl', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteUiClientlibsImplHtmlLibraryManagerImpl', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeGraniteUiClientlibsImplHtmlLibraryManagerImpl', 'htmllibmanager.timing') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteUiClientlibsImplHtmlLibraryManagerImpl', 'htmllibmanager.debug.init.js') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteUiClientlibsImplHtmlLibraryManagerImpl', 'htmllibmanager.minify') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteUiClientlibsImplHtmlLibraryManagerImpl', 'htmllibmanager.debug') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteUiClientlibsImplHtmlLibraryManagerImpl', 'htmllibmanager.gzip') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteUiClientlibsImplHtmlLibraryManagerImpl', 'htmllibmanager.maxDataUriSize') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteUiClientlibsImplHtmlLibraryManagerImpl', 'htmllibmanager.maxage') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteUiClientlibsImplHtmlLibraryManagerImpl', 'htmllibmanager.forceCQUrlInfo') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteUiClientlibsImplHtmlLibraryManagerImpl', 'htmllibmanager.defaultthemename') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteUiClientlibsImplHtmlLibraryManagerImpl', 'htmllibmanager.defaultuserthemename') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteUiClientlibsImplHtmlLibraryManagerImpl', 'htmllibmanager.clientmanager') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteUiClientlibsImplHtmlLibraryManagerImpl', 'htmllibmanager.path.list') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeGraniteUiClientlibsImplHtmlLibraryManagerImpl', 'htmllibmanager.excluded.path.list') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeGraniteUiClientlibsImplHtmlLibraryManagerImpl', 'htmllibmanager.processor.js') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeGraniteUiClientlibsImplHtmlLibraryManagerImpl', 'htmllibmanager.processor.css') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeGraniteUiClientlibsImplHtmlLibraryManagerImpl', 'htmllibmanager.longcache.patterns') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeGraniteUiClientlibsImplHtmlLibraryManagerImpl', 'htmllibmanager.longcache.format') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteUiClientlibsImplHtmlLibraryManagerImpl', 'htmllibmanager.useFileSystemOutputCache') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteUiClientlibsImplHtmlLibraryManagerImpl', 'htmllibmanager.fileSystemOutputCacheLocation') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteUiClientlibsImplHtmlLibraryManagerImpl', 'htmllibmanager.disable.replacement') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeGraniteWorkflowConsoleFragsWorkflowWithdrawFeature', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteWorkflowConsoleFragsWorkflowWithdrawFeature', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteWorkflowConsoleFragsWorkflowWithdrawFeature', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteWorkflowConsoleFragsWorkflowWithdrawFeature', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteWorkflowConsoleFragsWorkflowWithdrawFeature', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteWorkflowConsoleFragsWorkflowWithdrawFeature', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeGraniteWorkflowConsoleFragsWorkflowWithdrawFeature', 'enabled') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteWorkflowConsolePublishWorkflowPublishEventService', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteWorkflowConsolePublishWorkflowPublishEventService', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteWorkflowConsolePublishWorkflowPublishEventService', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteWorkflowConsolePublishWorkflowPublishEventService', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteWorkflowConsolePublishWorkflowPublishEventService', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteWorkflowConsolePublishWorkflowPublishEventService', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeGraniteWorkflowConsolePublishWorkflowPublishEventService', 'granite.workflow.WorkflowPublishEventService.enabled') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteWorkflowCoreJcrWorkflowBucketManager', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteWorkflowCoreJcrWorkflowBucketManager', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteWorkflowCoreJcrWorkflowBucketManager', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteWorkflowCoreJcrWorkflowBucketManager', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteWorkflowCoreJcrWorkflowBucketManager', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteWorkflowCoreJcrWorkflowBucketManager', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeGraniteWorkflowCoreJcrWorkflowBucketManager', 'bucketSize') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteWorkflowCoreJobExternalProcessJobHandler', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteWorkflowCoreJobExternalProcessJobHandler', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteWorkflowCoreJobExternalProcessJobHandler', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteWorkflowCoreJobExternalProcessJobHandler', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteWorkflowCoreJobExternalProcessJobHandler', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteWorkflowCoreJobExternalProcessJobHandler', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeGraniteWorkflowCoreJobExternalProcessJobHandler', 'default.timeout') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteWorkflowCoreJobExternalProcessJobHandler', 'max.timeout') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteWorkflowCoreJobExternalProcessJobHandler', 'default.period') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteWorkflowCoreJobJobHandler', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteWorkflowCoreJobJobHandler', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteWorkflowCoreJobJobHandler', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteWorkflowCoreJobJobHandler', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteWorkflowCoreJobJobHandler', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteWorkflowCoreJobJobHandler', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeGraniteWorkflowCoreJobJobHandler', 'job.topics') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeGraniteWorkflowCoreJobJobHandler', 'allow.self.process.termination') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteWorkflowCoreOffloadingWorkflowOffloadingJobConsum', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteWorkflowCoreOffloadingWorkflowOffloadingJobConsum', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteWorkflowCoreOffloadingWorkflowOffloadingJobConsum', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteWorkflowCoreOffloadingWorkflowOffloadingJobConsum', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteWorkflowCoreOffloadingWorkflowOffloadingJobConsum', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteWorkflowCoreOffloadingWorkflowOffloadingJobConsum', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeGraniteWorkflowCoreOffloadingWorkflowOffloadingJobConsum', 'job.topics') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteWorkflowCorePayloadMapCache', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteWorkflowCorePayloadMapCache', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteWorkflowCorePayloadMapCache', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteWorkflowCorePayloadMapCache', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteWorkflowCorePayloadMapCache', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteWorkflowCorePayloadMapCache', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeGraniteWorkflowCorePayloadMapCache', 'getSystemWorkflowModels') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeGraniteWorkflowCorePayloadMapCache', 'getPackageRootPath') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteWorkflowCorePayloadmapPayloadMoveListener', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteWorkflowCorePayloadmapPayloadMoveListener', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteWorkflowCorePayloadmapPayloadMoveListener', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteWorkflowCorePayloadmapPayloadMoveListener', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteWorkflowCorePayloadmapPayloadMoveListener', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteWorkflowCorePayloadmapPayloadMoveListener', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeGraniteWorkflowCorePayloadmapPayloadMoveListener', 'payload.move.white.list') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeGraniteWorkflowCorePayloadmapPayloadMoveListener', 'payload.move.handle.from.workflow.process') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteWorkflowCoreWorkflowConfig', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteWorkflowCoreWorkflowConfig', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteWorkflowCoreWorkflowConfig', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteWorkflowCoreWorkflowConfig', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteWorkflowCoreWorkflowConfig', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteWorkflowCoreWorkflowConfig', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeGraniteWorkflowCoreWorkflowConfig', 'cq.workflow.config.workflow.packages.root.path') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeGraniteWorkflowCoreWorkflowConfig', 'cq.workflow.config.workflow.process.legacy.mode') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteWorkflowCoreWorkflowConfig', 'cq.workflow.config.allow.locking') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteWorkflowCoreWorkflowSessionFactory', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteWorkflowCoreWorkflowSessionFactory', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteWorkflowCoreWorkflowSessionFactory', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteWorkflowCoreWorkflowSessionFactory', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteWorkflowCoreWorkflowSessionFactory', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteWorkflowCoreWorkflowSessionFactory', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeGraniteWorkflowCoreWorkflowSessionFactory', 'granite.workflowinbox.sort.propertyName') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteWorkflowCoreWorkflowSessionFactory', 'granite.workflowinbox.sort.order') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteWorkflowCoreWorkflowSessionFactory', 'cq.workflow.job.retry') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteWorkflowCoreWorkflowSessionFactory', 'cq.workflow.superuser') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeGraniteWorkflowCoreWorkflowSessionFactory', 'granite.workflow.inboxQuerySize') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteWorkflowCoreWorkflowSessionFactory', 'granite.workflow.adminUserGroupFilter') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteWorkflowCoreWorkflowSessionFactory', 'granite.workflow.enforceWorkitemAssigneePermissions') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteWorkflowCoreWorkflowSessionFactory', 'granite.workflow.enforceWorkflowInitiatorPermissions') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteWorkflowCoreWorkflowSessionFactory', 'granite.workflow.injectTenantIdInJobTopics') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteWorkflowCoreWorkflowSessionFactory', 'granite.workflow.maxPurgeSaveThreshold') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteWorkflowCoreWorkflowSessionFactory', 'granite.workflow.maxPurgeQueryCount') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteWorkflowPurgeScheduler', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteWorkflowPurgeScheduler', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteWorkflowPurgeScheduler', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteWorkflowPurgeScheduler', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteWorkflowPurgeScheduler', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteWorkflowPurgeScheduler', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeGraniteWorkflowPurgeScheduler', 'scheduledpurge.name') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteWorkflowPurgeScheduler', 'scheduledpurge.workflowStatus') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeGraniteWorkflowPurgeScheduler', 'scheduledpurge.modelIds') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeGraniteWorkflowPurgeScheduler', 'scheduledpurge.daysold') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComAdobeOctopusNcommBootstrap', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeOctopusNcommBootstrap', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeOctopusNcommBootstrap', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeOctopusNcommBootstrap', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeOctopusNcommBootstrap', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeOctopusNcommBootstrap', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeOctopusNcommBootstrap', 'maxConnections') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComAdobeOctopusNcommBootstrap', 'maxRequests') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComAdobeOctopusNcommBootstrap', 'requestTimeout') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComAdobeOctopusNcommBootstrap', 'requestRetries') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComAdobeOctopusNcommBootstrap', 'launchTimeout') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComAdobeSocialIntegrationsLivefyreUserPingforpullImplPingPullS', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeSocialIntegrationsLivefyreUserPingforpullImplPingPullS', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeSocialIntegrationsLivefyreUserPingforpullImplPingPullS', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeSocialIntegrationsLivefyreUserPingforpullImplPingPullS', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeSocialIntegrationsLivefyreUserPingforpullImplPingPullS', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeSocialIntegrationsLivefyreUserPingforpullImplPingPullS', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeSocialIntegrationsLivefyreUserPingforpullImplPingPullS', 'communities.integration.livefyre.sling.event.filter') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeXmpWorkerFilesNcommXMPFilesNComm', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeXmpWorkerFilesNcommXMPFilesNComm', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeXmpWorkerFilesNcommXMPFilesNComm', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComAdobeXmpWorkerFilesNcommXMPFilesNComm', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeXmpWorkerFilesNcommXMPFilesNComm', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeXmpWorkerFilesNcommXMPFilesNComm', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComAdobeXmpWorkerFilesNcommXMPFilesNComm', 'maxConnections') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeXmpWorkerFilesNcommXMPFilesNComm', 'maxRequests') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeXmpWorkerFilesNcommXMPFilesNComm', 'requestTimeout') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComAdobeXmpWorkerFilesNcommXMPFilesNComm', 'logDir') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCommonsDatasourceJdbcpoolJdbcPoolService', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCommonsDatasourceJdbcpoolJdbcPoolService', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCommonsDatasourceJdbcpoolJdbcPoolService', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCommonsDatasourceJdbcpoolJdbcPoolService', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCommonsDatasourceJdbcpoolJdbcPoolService', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCommonsDatasourceJdbcpoolJdbcPoolService', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCommonsDatasourceJdbcpoolJdbcPoolService', 'jdbc.driver.class') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCommonsDatasourceJdbcpoolJdbcPoolService', 'jdbc.connection.uri') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCommonsDatasourceJdbcpoolJdbcPoolService', 'jdbc.username') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCommonsDatasourceJdbcpoolJdbcPoolService', 'jdbc.password') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCommonsDatasourceJdbcpoolJdbcPoolService', 'jdbc.validation.query') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCommonsDatasourceJdbcpoolJdbcPoolService', 'default.readonly') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCommonsDatasourceJdbcpoolJdbcPoolService', 'default.autocommit') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCommonsDatasourceJdbcpoolJdbcPoolService', 'pool.size') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComDayCommonsDatasourceJdbcpoolJdbcPoolService', 'pool.max.wait.msec') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComDayCommonsDatasourceJdbcpoolJdbcPoolService', 'datasource.name') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCommonsDatasourceJdbcpoolJdbcPoolService', 'datasource.svc.properties') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCommonsHttpclient', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCommonsHttpclient', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCommonsHttpclient', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCommonsHttpclient', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCommonsHttpclient', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCommonsHttpclient', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCommonsHttpclient', 'proxy.enabled') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCommonsHttpclient', 'proxy.host') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCommonsHttpclient', 'proxy.user') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCommonsHttpclient', 'proxy.password') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCommonsHttpclient', 'proxy.ntlm.host') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCommonsHttpclient', 'proxy.ntlm.domain') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCommonsHttpclient', 'proxy.exceptions') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqAnalyticsImplStorePropertiesChangeListener', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqAnalyticsImplStorePropertiesChangeListener', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqAnalyticsImplStorePropertiesChangeListener', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqAnalyticsImplStorePropertiesChangeListener', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqAnalyticsImplStorePropertiesChangeListener', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqAnalyticsImplStorePropertiesChangeListener', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqAnalyticsImplStorePropertiesChangeListener', 'cq.store.listener.additionalStorePaths') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqAnalyticsSitecatalystImplExporterClassificationsExporte', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqAnalyticsSitecatalystImplExporterClassificationsExporte', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqAnalyticsSitecatalystImplExporterClassificationsExporte', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqAnalyticsSitecatalystImplExporterClassificationsExporte', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqAnalyticsSitecatalystImplExporterClassificationsExporte', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqAnalyticsSitecatalystImplExporterClassificationsExporte', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqAnalyticsSitecatalystImplExporterClassificationsExporte', 'allowed.paths') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqAnalyticsSitecatalystImplExporterClassificationsExporte', 'cq.analytics.saint.exporter.pagesize') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComDayCqAnalyticsSitecatalystImplImporterReportImporter', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqAnalyticsSitecatalystImplImporterReportImporter', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqAnalyticsSitecatalystImplImporterReportImporter', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqAnalyticsSitecatalystImplImporterReportImporter', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqAnalyticsSitecatalystImplImporterReportImporter', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqAnalyticsSitecatalystImplImporterReportImporter', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqAnalyticsSitecatalystImplImporterReportImporter', 'report.fetch.attempts') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComDayCqAnalyticsSitecatalystImplImporterReportImporter', 'report.fetch.delay') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComDayCqAnalyticsSitecatalystImplSitecatalystAdapterFactory', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqAnalyticsSitecatalystImplSitecatalystAdapterFactory', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqAnalyticsSitecatalystImplSitecatalystAdapterFactory', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqAnalyticsSitecatalystImplSitecatalystAdapterFactory', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqAnalyticsSitecatalystImplSitecatalystAdapterFactory', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqAnalyticsSitecatalystImplSitecatalystAdapterFactory', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqAnalyticsSitecatalystImplSitecatalystAdapterFactory', 'cq.analytics.adapterfactory.contextstores') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqAnalyticsSitecatalystImplSitecatalystHttpClientImpl', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqAnalyticsSitecatalystImplSitecatalystHttpClientImpl', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqAnalyticsSitecatalystImplSitecatalystHttpClientImpl', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqAnalyticsSitecatalystImplSitecatalystHttpClientImpl', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqAnalyticsSitecatalystImplSitecatalystHttpClientImpl', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqAnalyticsSitecatalystImplSitecatalystHttpClientImpl', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqAnalyticsSitecatalystImplSitecatalystHttpClientImpl', 'cq.analytics.sitecatalyst.service.datacenter.url') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqAnalyticsSitecatalystImplSitecatalystHttpClientImpl', 'devhostnamepatterns') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqAnalyticsSitecatalystImplSitecatalystHttpClientImpl', 'connection.timeout') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComDayCqAnalyticsSitecatalystImplSitecatalystHttpClientImpl', 'socket.timeout') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComDayCqAnalyticsTestandtargetImplAccountOptionsUpdater', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqAnalyticsTestandtargetImplAccountOptionsUpdater', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqAnalyticsTestandtargetImplAccountOptionsUpdater', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqAnalyticsTestandtargetImplAccountOptionsUpdater', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqAnalyticsTestandtargetImplAccountOptionsUpdater', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqAnalyticsTestandtargetImplAccountOptionsUpdater', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqAnalyticsTestandtargetImplAccountOptionsUpdater', 'cq.analytics.testandtarget.accountoptionsupdater.enabled') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqAnalyticsTestandtargetImplDeleteAuthorActivityListener', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqAnalyticsTestandtargetImplDeleteAuthorActivityListener', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqAnalyticsTestandtargetImplDeleteAuthorActivityListener', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqAnalyticsTestandtargetImplDeleteAuthorActivityListener', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqAnalyticsTestandtargetImplDeleteAuthorActivityListener', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqAnalyticsTestandtargetImplDeleteAuthorActivityListener', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqAnalyticsTestandtargetImplDeleteAuthorActivityListener', 'cq.analytics.testandtarget.deleteauthoractivitylistener.enabled') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqAnalyticsTestandtargetImplPushAuthorCampaignPageListener', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqAnalyticsTestandtargetImplPushAuthorCampaignPageListener', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqAnalyticsTestandtargetImplPushAuthorCampaignPageListener', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqAnalyticsTestandtargetImplPushAuthorCampaignPageListener', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqAnalyticsTestandtargetImplPushAuthorCampaignPageListener', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqAnalyticsTestandtargetImplPushAuthorCampaignPageListener', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqAnalyticsTestandtargetImplPushAuthorCampaignPageListener', 'cq.analytics.testandtarget.pushauthorcampaignpagelistener.enabled') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqAnalyticsTestandtargetImplSegmentImporter', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqAnalyticsTestandtargetImplSegmentImporter', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqAnalyticsTestandtargetImplSegmentImporter', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqAnalyticsTestandtargetImplSegmentImporter', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqAnalyticsTestandtargetImplSegmentImporter', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqAnalyticsTestandtargetImplSegmentImporter', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqAnalyticsTestandtargetImplSegmentImporter', 'cq.analytics.testandtarget.segmentimporter.enabled') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqAnalyticsTestandtargetImplServiceWebServiceImpl', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqAnalyticsTestandtargetImplServiceWebServiceImpl', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqAnalyticsTestandtargetImplServiceWebServiceImpl', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqAnalyticsTestandtargetImplServiceWebServiceImpl', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqAnalyticsTestandtargetImplServiceWebServiceImpl', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqAnalyticsTestandtargetImplServiceWebServiceImpl', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqAnalyticsTestandtargetImplServiceWebServiceImpl', 'endpointUri') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqAnalyticsTestandtargetImplServiceWebServiceImpl', 'connectionTimeout') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComDayCqAnalyticsTestandtargetImplServiceWebServiceImpl', 'socketTimeout') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComDayCqAnalyticsTestandtargetImplServletsAdminServerServlet', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqAnalyticsTestandtargetImplServletsAdminServerServlet', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqAnalyticsTestandtargetImplServletsAdminServerServlet', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqAnalyticsTestandtargetImplServletsAdminServerServlet', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqAnalyticsTestandtargetImplServletsAdminServerServlet', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqAnalyticsTestandtargetImplServletsAdminServerServlet', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqAnalyticsTestandtargetImplServletsAdminServerServlet', 'testandtarget.endpoint.url') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqAnalyticsTestandtargetImplTestandtargetHttpClientImpl', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqAnalyticsTestandtargetImplTestandtargetHttpClientImpl', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqAnalyticsTestandtargetImplTestandtargetHttpClientImpl', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqAnalyticsTestandtargetImplTestandtargetHttpClientImpl', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqAnalyticsTestandtargetImplTestandtargetHttpClientImpl', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqAnalyticsTestandtargetImplTestandtargetHttpClientImpl', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqAnalyticsTestandtargetImplTestandtargetHttpClientImpl', 'cq.analytics.testandtarget.api.url') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqAnalyticsTestandtargetImplTestandtargetHttpClientImpl', 'cq.analytics.testandtarget.timeout') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComDayCqAnalyticsTestandtargetImplTestandtargetHttpClientImpl', 'cq.analytics.testandtarget.sockettimeout') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComDayCqAnalyticsTestandtargetImplTestandtargetHttpClientImpl', 'cq.analytics.testandtarget.recommendations.url.replace') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqAnalyticsTestandtargetImplTestandtargetHttpClientImpl', 'cq.analytics.testandtarget.recommendations.url.replacewith') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqAuthImplCugCugSupportImpl', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqAuthImplCugCugSupportImpl', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqAuthImplCugCugSupportImpl', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqAuthImplCugCugSupportImpl', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqAuthImplCugCugSupportImpl', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqAuthImplCugCugSupportImpl', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqAuthImplCugCugSupportImpl', 'cug.exempted.principals') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqAuthImplCugCugSupportImpl', 'cug.enabled') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqAuthImplCugCugSupportImpl', 'cug.principals.regex') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqAuthImplCugCugSupportImpl', 'cug.principals.replacement') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqAuthImplLoginSelectorHandler', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqAuthImplLoginSelectorHandler', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqAuthImplLoginSelectorHandler', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqAuthImplLoginSelectorHandler', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqAuthImplLoginSelectorHandler', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqAuthImplLoginSelectorHandler', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqAuthImplLoginSelectorHandler', 'path') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqAuthImplLoginSelectorHandler', 'service.ranking') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComDayCqAuthImplLoginSelectorHandler', 'auth.loginselector.mappings') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqAuthImplLoginSelectorHandler', 'auth.loginselector.changepw.mappings') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqAuthImplLoginSelectorHandler', 'auth.loginselector.defaultloginpage') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqAuthImplLoginSelectorHandler', 'auth.loginselector.defaultchangepwpage') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqAuthImplLoginSelectorHandler', 'auth.loginselector.handle') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqAuthImplLoginSelectorHandler', 'auth.loginselector.handle.all.extensions') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqCommonsImplExternalizerImpl', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqCommonsImplExternalizerImpl', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqCommonsImplExternalizerImpl', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqCommonsImplExternalizerImpl', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqCommonsImplExternalizerImpl', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqCommonsImplExternalizerImpl', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqCommonsImplExternalizerImpl', 'externalizer.domains') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqCommonsImplExternalizerImpl', 'externalizer.host') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqCommonsImplExternalizerImpl', 'externalizer.contextpath') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqCommonsImplExternalizerImpl', 'externalizer.encodedpath') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqCommonsServletsRootMappingServlet', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqCommonsServletsRootMappingServlet', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqCommonsServletsRootMappingServlet', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqCommonsServletsRootMappingServlet', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqCommonsServletsRootMappingServlet', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqCommonsServletsRootMappingServlet', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqCommonsServletsRootMappingServlet', 'rootmapping.target') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqCompatCodeupgradeImplCodeUpgradeExecutionConditionChecke', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqCompatCodeupgradeImplCodeUpgradeExecutionConditionChecke', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqCompatCodeupgradeImplCodeUpgradeExecutionConditionChecke', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqCompatCodeupgradeImplCodeUpgradeExecutionConditionChecke', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqCompatCodeupgradeImplCodeUpgradeExecutionConditionChecke', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqCompatCodeupgradeImplCodeUpgradeExecutionConditionChecke', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqCompatCodeupgradeImplCodeUpgradeExecutionConditionChecke', 'codeupgradetasks') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqCompatCodeupgradeImplCodeUpgradeExecutionConditionChecke', 'codeupgradetaskfilters') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqCompatCodeupgradeImplUpgradeTaskIgnoreList', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqCompatCodeupgradeImplUpgradeTaskIgnoreList', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqCompatCodeupgradeImplUpgradeTaskIgnoreList', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqCompatCodeupgradeImplUpgradeTaskIgnoreList', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqCompatCodeupgradeImplUpgradeTaskIgnoreList', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqCompatCodeupgradeImplUpgradeTaskIgnoreList', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqCompatCodeupgradeImplUpgradeTaskIgnoreList', 'upgradeTaskIgnoreList') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqCompatCodeupgradeImplVersionRangeTaskIgnorelist', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqCompatCodeupgradeImplVersionRangeTaskIgnorelist', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqCompatCodeupgradeImplVersionRangeTaskIgnorelist', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqCompatCodeupgradeImplVersionRangeTaskIgnorelist', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqCompatCodeupgradeImplVersionRangeTaskIgnorelist', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqCompatCodeupgradeImplVersionRangeTaskIgnorelist', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqCompatCodeupgradeImplVersionRangeTaskIgnorelist', 'effectiveBundleListPath') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqContentsyncImplContentSyncManagerImpl', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqContentsyncImplContentSyncManagerImpl', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqContentsyncImplContentSyncManagerImpl', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqContentsyncImplContentSyncManagerImpl', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqContentsyncImplContentSyncManagerImpl', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqContentsyncImplContentSyncManagerImpl', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqContentsyncImplContentSyncManagerImpl', 'contentsync.fallback.authorizable') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqContentsyncImplContentSyncManagerImpl', 'contentsync.fallback.updateuser') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCommonsHandlerStandardImageHandler', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCommonsHandlerStandardImageHandler', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCommonsHandlerStandardImageHandler', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCommonsHandlerStandardImageHandler', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCommonsHandlerStandardImageHandler', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCommonsHandlerStandardImageHandler', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqDamCommonsHandlerStandardImageHandler', 'large_file_threshold') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCommonsHandlerStandardImageHandler', 'large_comment_threshold') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCommonsHandlerStandardImageHandler', 'cq.dam.enable.ext.meta.extraction') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCommonsMetadataXmpFilterBlackWhite', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCommonsMetadataXmpFilterBlackWhite', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCommonsMetadataXmpFilterBlackWhite', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCommonsMetadataXmpFilterBlackWhite', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCommonsMetadataXmpFilterBlackWhite', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCommonsMetadataXmpFilterBlackWhite', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqDamCommonsMetadataXmpFilterBlackWhite', 'xmp.filter.apply_whitelist') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCommonsMetadataXmpFilterBlackWhite', 'xmp.filter.whitelist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqDamCommonsMetadataXmpFilterBlackWhite', 'xmp.filter.apply_blacklist') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCommonsMetadataXmpFilterBlackWhite', 'xmp.filter.blacklist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqDamCommonsUtilImplAssetCacheImpl', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCommonsUtilImplAssetCacheImpl', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCommonsUtilImplAssetCacheImpl', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCommonsUtilImplAssetCacheImpl', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCommonsUtilImplAssetCacheImpl', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCommonsUtilImplAssetCacheImpl', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqDamCommonsUtilImplAssetCacheImpl', 'large.file.min') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCommonsUtilImplAssetCacheImpl', 'cache.apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCommonsUtilImplAssetCacheImpl', 'mime.types') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplAnnotationPdfAnnotationPdfConfig', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplAnnotationPdfAnnotationPdfConfig', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplAnnotationPdfAnnotationPdfConfig', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplAnnotationPdfAnnotationPdfConfig', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplAnnotationPdfAnnotationPdfConfig', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplAnnotationPdfAnnotationPdfConfig', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplAnnotationPdfAnnotationPdfConfig', 'cq.dam.config.annotation.pdf.document.width') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplAnnotationPdfAnnotationPdfConfig', 'cq.dam.config.annotation.pdf.document.height') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplAnnotationPdfAnnotationPdfConfig', 'cq.dam.config.annotation.pdf.document.padding.horizontal') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplAnnotationPdfAnnotationPdfConfig', 'cq.dam.config.annotation.pdf.document.padding.vertical') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplAnnotationPdfAnnotationPdfConfig', 'cq.dam.config.annotation.pdf.font.size') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplAnnotationPdfAnnotationPdfConfig', 'cq.dam.config.annotation.pdf.font.color') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplAnnotationPdfAnnotationPdfConfig', 'cq.dam.config.annotation.pdf.font.family') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplAnnotationPdfAnnotationPdfConfig', 'cq.dam.config.annotation.pdf.font.light') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplAnnotationPdfAnnotationPdfConfig', 'cq.dam.config.annotation.pdf.marginTextImage') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplAnnotationPdfAnnotationPdfConfig', 'cq.dam.config.annotation.pdf.minImageHeight') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplAnnotationPdfAnnotationPdfConfig', 'cq.dam.config.annotation.pdf.reviewStatus.width') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplAnnotationPdfAnnotationPdfConfig', 'cq.dam.config.annotation.pdf.reviewStatus.color.approved') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplAnnotationPdfAnnotationPdfConfig', 'cq.dam.config.annotation.pdf.reviewStatus.color.rejected') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplAnnotationPdfAnnotationPdfConfig', 'cq.dam.config.annotation.pdf.reviewStatus.color.changesRequested') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplAnnotationPdfAnnotationPdfConfig', 'cq.dam.config.annotation.pdf.annotationMarker.width') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplAnnotationPdfAnnotationPdfConfig', 'cq.dam.config.annotation.pdf.asset.minheight') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplAssetMoveListener', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplAssetMoveListener', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplAssetMoveListener', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplAssetMoveListener', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplAssetMoveListener', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplAssetMoveListener', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplAssetMoveListener', 'enabled') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplAssethomeAssetHomePageConfiguration', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplAssethomeAssetHomePageConfiguration', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplAssethomeAssetHomePageConfiguration', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplAssethomeAssetHomePageConfiguration', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplAssethomeAssetHomePageConfiguration', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplAssethomeAssetHomePageConfiguration', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplAssethomeAssetHomePageConfiguration', 'isEnabled') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplAssetlinkshareAdhocAssetShareProxyServlet', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplAssetlinkshareAdhocAssetShareProxyServlet', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplAssetlinkshareAdhocAssetShareProxyServlet', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplAssetlinkshareAdhocAssetShareProxyServlet', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplAssetlinkshareAdhocAssetShareProxyServlet', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplAssetlinkshareAdhocAssetShareProxyServlet', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplAssetlinkshareAdhocAssetShareProxyServlet', 'cq.dam.adhoc.asset.share.prezip.maxcontentsize') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplCacheCQBufferedImageCache', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplCacheCQBufferedImageCache', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplCacheCQBufferedImageCache', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplCacheCQBufferedImageCache', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplCacheCQBufferedImageCache', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplCacheCQBufferedImageCache', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplCacheCQBufferedImageCache', 'cq.dam.image.cache.max.memory') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplCacheCQBufferedImageCache', 'cq.dam.image.cache.max.age') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplCacheCQBufferedImageCache', 'cq.dam.image.cache.max.dimension') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplDamChangeEventListener', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplDamChangeEventListener', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplDamChangeEventListener', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplDamChangeEventListener', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplDamChangeEventListener', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplDamChangeEventListener', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplDamChangeEventListener', 'changeeventlistener.observed.paths') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplDamEventPurgeService', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplDamEventPurgeService', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplDamEventPurgeService', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplDamEventPurgeService', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplDamEventPurgeService', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplDamEventPurgeService', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplDamEventPurgeService', 'scheduler.expression') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplDamEventPurgeService', 'maxSavedActivities') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplDamEventPurgeService', 'saveInterval') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplDamEventPurgeService', 'enableActivityPurge') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplDamEventPurgeService', 'eventTypes') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplDamEventRecorderImpl', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplDamEventRecorderImpl', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplDamEventRecorderImpl', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplDamEventRecorderImpl', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplDamEventRecorderImpl', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplDamEventRecorderImpl', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplDamEventRecorderImpl', 'event.filter') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplDamEventRecorderImpl', 'event.queue.length') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplDamEventRecorderImpl', 'eventrecorder.enabled') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplDamEventRecorderImpl', 'eventrecorder.blacklist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplDamEventRecorderImpl', 'eventrecorder.eventtypes') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplEventDamEventAuditListener', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplEventDamEventAuditListener', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplEventDamEventAuditListener', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplEventDamEventAuditListener', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplEventDamEventAuditListener', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplEventDamEventAuditListener', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplEventDamEventAuditListener', 'event.filter') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplEventDamEventAuditListener', 'enabled') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplExpiryNotificationJobImpl', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplExpiryNotificationJobImpl', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplExpiryNotificationJobImpl', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplExpiryNotificationJobImpl', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplExpiryNotificationJobImpl', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplExpiryNotificationJobImpl', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplExpiryNotificationJobImpl', 'cq.dam.expiry.notification.scheduler.istimebased') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplExpiryNotificationJobImpl', 'cq.dam.expiry.notification.scheduler.timebased.rule') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplExpiryNotificationJobImpl', 'cq.dam.expiry.notification.scheduler.period.rule') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplExpiryNotificationJobImpl', 'send_email') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplExpiryNotificationJobImpl', 'asset_expired_limit') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplExpiryNotificationJobImpl', 'prior_notification_seconds') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplExpiryNotificationJobImpl', 'cq.dam.expiry.notification.url.protocol') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplFoldermetadataschemaFolderMetadataSchemaFeat', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplFoldermetadataschemaFolderMetadataSchemaFeat', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplFoldermetadataschemaFolderMetadataSchemaFeat', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplFoldermetadataschemaFolderMetadataSchemaFeat', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplFoldermetadataschemaFolderMetadataSchemaFeat', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplFoldermetadataschemaFolderMetadataSchemaFeat', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplFoldermetadataschemaFolderMetadataSchemaFeat', 'isEnabled') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplGfxCommonsGfxRenderer', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplGfxCommonsGfxRenderer', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplGfxCommonsGfxRenderer', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplGfxCommonsGfxRenderer', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplGfxCommonsGfxRenderer', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplGfxCommonsGfxRenderer', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplGfxCommonsGfxRenderer', 'skip.bufferedcache') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplHandlerEPSFormatHandler', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplHandlerEPSFormatHandler', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplHandlerEPSFormatHandler', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplHandlerEPSFormatHandler', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplHandlerEPSFormatHandler', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplHandlerEPSFormatHandler', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplHandlerEPSFormatHandler', 'mimetype') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplHandlerIndesignFormatHandler', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplHandlerIndesignFormatHandler', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplHandlerIndesignFormatHandler', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplHandlerIndesignFormatHandler', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplHandlerIndesignFormatHandler', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplHandlerIndesignFormatHandler', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplHandlerIndesignFormatHandler', 'mimetype') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplHandlerJpegHandler', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplHandlerJpegHandler', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplHandlerJpegHandler', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplHandlerJpegHandler', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplHandlerJpegHandler', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplHandlerJpegHandler', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplHandlerJpegHandler', 'cq.dam.enable.ext.meta.extraction') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplHandlerJpegHandler', 'large_file_threshold') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplHandlerJpegHandler', 'large_comment_threshold') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplHandlerXmpNCommXMPHandler', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplHandlerXmpNCommXMPHandler', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplHandlerXmpNCommXMPHandler', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplHandlerXmpNCommXMPHandler', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplHandlerXmpNCommXMPHandler', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplHandlerXmpNCommXMPHandler', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplHandlerXmpNCommXMPHandler', 'xmphandler.cq.formats') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplJmxAssetIndexUpdateMonitor', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplJmxAssetIndexUpdateMonitor', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplJmxAssetIndexUpdateMonitor', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplJmxAssetIndexUpdateMonitor', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplJmxAssetIndexUpdateMonitor', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplJmxAssetIndexUpdateMonitor', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplJmxAssetIndexUpdateMonitor', 'jmx.objectname') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplJmxAssetIndexUpdateMonitor', 'property.measure.enabled') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplJmxAssetIndexUpdateMonitor', 'property.name') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplJmxAssetIndexUpdateMonitor', 'property.max.wait.ms') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplJmxAssetIndexUpdateMonitor', 'property.max.rate') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'float'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplJmxAssetIndexUpdateMonitor', 'fulltext.measure.enabled') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplJmxAssetIndexUpdateMonitor', 'fulltext.name') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplJmxAssetIndexUpdateMonitor', 'fulltext.max.wait.ms') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplJmxAssetIndexUpdateMonitor', 'fulltext.max.rate') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'float'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplJmxAssetMigrationMBeanImpl', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplJmxAssetMigrationMBeanImpl', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplJmxAssetMigrationMBeanImpl', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplJmxAssetMigrationMBeanImpl', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplJmxAssetMigrationMBeanImpl', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplJmxAssetMigrationMBeanImpl', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplJmxAssetMigrationMBeanImpl', 'jmx.objectname') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplJmxAssetUpdateMonitorImpl', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplJmxAssetUpdateMonitorImpl', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplJmxAssetUpdateMonitorImpl', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplJmxAssetUpdateMonitorImpl', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplJmxAssetUpdateMonitorImpl', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplJmxAssetUpdateMonitorImpl', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplJmxAssetUpdateMonitorImpl', 'jmx.objectname') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplJmxAssetUpdateMonitorImpl', 'active') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplJobsMetadataexportAsyncMetadataExportConfig', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplJobsMetadataexportAsyncMetadataExportConfig', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplJobsMetadataexportAsyncMetadataExportConfig', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplJobsMetadataexportAsyncMetadataExportConfig', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplJobsMetadataexportAsyncMetadataExportConfig', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplJobsMetadataexportAsyncMetadataExportConfig', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplJobsMetadataexportAsyncMetadataExportConfig', 'operation') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplJobsMetadataexportAsyncMetadataExportConfig', 'emailEnabled') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplJobsMetadataimportAsyncMetadataImportConfig', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplJobsMetadataimportAsyncMetadataImportConfig', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplJobsMetadataimportAsyncMetadataImportConfig', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplJobsMetadataimportAsyncMetadataImportConfig', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplJobsMetadataimportAsyncMetadataImportConfig', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplJobsMetadataimportAsyncMetadataImportConfig', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplJobsMetadataimportAsyncMetadataImportConfig', 'operation') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplJobsMetadataimportAsyncMetadataImportConfig', 'operationIcon') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplJobsMetadataimportAsyncMetadataImportConfig', 'topicName') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplJobsMetadataimportAsyncMetadataImportConfig', 'emailEnabled') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplLightboxLightboxServlet', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplLightboxLightboxServlet', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplLightboxLightboxServlet', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplLightboxLightboxServlet', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplLightboxLightboxServlet', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplLightboxLightboxServlet', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplLightboxLightboxServlet', 'sling.servlet.paths') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplLightboxLightboxServlet', 'sling.servlet.methods') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplLightboxLightboxServlet', 'cq.dam.enable.anonymous') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplMetadataEditorSelectComponentHandler', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplMetadataEditorSelectComponentHandler', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplMetadataEditorSelectComponentHandler', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplMetadataEditorSelectComponentHandler', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplMetadataEditorSelectComponentHandler', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplMetadataEditorSelectComponentHandler', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplMetadataEditorSelectComponentHandler', 'granite:data') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplMimeTypeAssetUploadRestrictionHelper', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplMimeTypeAssetUploadRestrictionHelper', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplMimeTypeAssetUploadRestrictionHelper', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplMimeTypeAssetUploadRestrictionHelper', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplMimeTypeAssetUploadRestrictionHelper', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplMimeTypeAssetUploadRestrictionHelper', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplMimeTypeAssetUploadRestrictionHelper', 'cq.dam.allow.all.mime') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplMimeTypeAssetUploadRestrictionHelper', 'cq.dam.allowed.asset.mimes') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplMimeTypeDamMimeTypeServiceImpl', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplMimeTypeDamMimeTypeServiceImpl', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplMimeTypeDamMimeTypeServiceImpl', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplMimeTypeDamMimeTypeServiceImpl', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplMimeTypeDamMimeTypeServiceImpl', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplMimeTypeDamMimeTypeServiceImpl', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplMimeTypeDamMimeTypeServiceImpl', 'cq.dam.detect.asset.mime.from.content') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplMissingMetadataNotificationJob', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplMissingMetadataNotificationJob', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplMissingMetadataNotificationJob', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplMissingMetadataNotificationJob', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplMissingMetadataNotificationJob', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplMissingMetadataNotificationJob', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplMissingMetadataNotificationJob', 'cq.dam.missingmetadata.notification.scheduler.istimebased') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplMissingMetadataNotificationJob', 'cq.dam.missingmetadata.notification.scheduler.timebased.rule') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplMissingMetadataNotificationJob', 'cq.dam.missingmetadata.notification.scheduler.period.rule') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplMissingMetadataNotificationJob', 'cq.dam.missingmetadata.notification.recipient') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplProcessSendTransientWorkflowCompletedEmailPr', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplProcessSendTransientWorkflowCompletedEmailPr', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplProcessSendTransientWorkflowCompletedEmailPr', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplProcessSendTransientWorkflowCompletedEmailPr', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplProcessSendTransientWorkflowCompletedEmailPr', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplProcessSendTransientWorkflowCompletedEmailPr', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplProcessSendTransientWorkflowCompletedEmailPr', 'process.label') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplProcessSendTransientWorkflowCompletedEmailPr', 'Notify on Complete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplProcessTextExtractionProcess', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplProcessTextExtractionProcess', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplProcessTextExtractionProcess', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplProcessTextExtractionProcess', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplProcessTextExtractionProcess', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplProcessTextExtractionProcess', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplProcessTextExtractionProcess', 'mimeTypes') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplProcessTextExtractionProcess', 'maxExtract') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplRenditionMakerImpl', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplRenditionMakerImpl', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplRenditionMakerImpl', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplRenditionMakerImpl', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplRenditionMakerImpl', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplRenditionMakerImpl', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplRenditionMakerImpl', 'xmp.propagate') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplRenditionMakerImpl', 'xmp.excludes') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplReportsReportExportService', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplReportsReportExportService', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplReportsReportExportService', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplReportsReportExportService', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplReportsReportExportService', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplReportsReportExportService', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplReportsReportExportService', 'queryBatchSize') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplReportsReportPurgeService', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplReportsReportPurgeService', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplReportsReportPurgeService', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplReportsReportPurgeService', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplReportsReportPurgeService', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplReportsReportPurgeService', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplReportsReportPurgeService', 'scheduler.expression') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplReportsReportPurgeService', 'maxSavedReports') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplReportsReportPurgeService', 'timeDuration') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplReportsReportPurgeService', 'enableReportPurge') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplServletAssetDownloadServlet', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplServletAssetDownloadServlet', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplServletAssetDownloadServlet', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplServletAssetDownloadServlet', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplServletAssetDownloadServlet', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplServletAssetDownloadServlet', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplServletAssetDownloadServlet', 'enabled') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplServletAssetStatusServlet', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplServletAssetStatusServlet', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplServletAssetStatusServlet', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplServletAssetStatusServlet', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplServletAssetStatusServlet', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplServletAssetStatusServlet', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplServletAssetStatusServlet', 'cq.dam.batch.status.maxassets') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplServletAssetXMPSearchServlet', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplServletAssetXMPSearchServlet', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplServletAssetXMPSearchServlet', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplServletAssetXMPSearchServlet', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplServletAssetXMPSearchServlet', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplServletAssetXMPSearchServlet', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplServletAssetXMPSearchServlet', 'cq.dam.batch.indesign.maxassets') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplServletBatchMetadataServlet', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplServletBatchMetadataServlet', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplServletBatchMetadataServlet', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplServletBatchMetadataServlet', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplServletBatchMetadataServlet', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplServletBatchMetadataServlet', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplServletBatchMetadataServlet', 'cq.dam.batch.metadata.asset.default') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplServletBatchMetadataServlet', 'cq.dam.batch.metadata.collection.default') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplServletBatchMetadataServlet', 'cq.dam.batch.metadata.maxresources') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplServletBinaryProviderServlet', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplServletBinaryProviderServlet', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplServletBinaryProviderServlet', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplServletBinaryProviderServlet', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplServletBinaryProviderServlet', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplServletBinaryProviderServlet', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplServletBinaryProviderServlet', 'sling.servlet.resourceTypes') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplServletBinaryProviderServlet', 'sling.servlet.methods') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplServletBinaryProviderServlet', 'cq.dam.drm.enable') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplServletCollectionServlet', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplServletCollectionServlet', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplServletCollectionServlet', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplServletCollectionServlet', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplServletCollectionServlet', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplServletCollectionServlet', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplServletCollectionServlet', 'cq.dam.batch.collection.properties') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplServletCollectionServlet', 'cq.dam.batch.collection.maxcollections') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplServletCollectionsServlet', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplServletCollectionsServlet', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplServletCollectionsServlet', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplServletCollectionsServlet', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplServletCollectionsServlet', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplServletCollectionsServlet', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplServletCollectionsServlet', 'cq.dam.batch.collections.properties') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplServletCollectionsServlet', 'cq.dam.batch.collections.limit') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplServletCompanionServlet', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplServletCompanionServlet', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplServletCompanionServlet', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplServletCompanionServlet', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplServletCompanionServlet', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplServletCompanionServlet', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplServletCompanionServlet', 'More Info') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplServletCompanionServlet', '/mnt/overlay/dam/gui/content/assets/moreinfo.html/${path}') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplServletCreateAssetServlet', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplServletCreateAssetServlet', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplServletCreateAssetServlet', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplServletCreateAssetServlet', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplServletCreateAssetServlet', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplServletCreateAssetServlet', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplServletCreateAssetServlet', 'detect_duplicate') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplServletDamContentDispositionFilter', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplServletDamContentDispositionFilter', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplServletDamContentDispositionFilter', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplServletDamContentDispositionFilter', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplServletDamContentDispositionFilter', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplServletDamContentDispositionFilter', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplServletDamContentDispositionFilter', 'cq.mime.type.blacklist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplServletDamContentDispositionFilter', 'cq.dam.empty.mime') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplServletGuidLookupFilter', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplServletGuidLookupFilter', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplServletGuidLookupFilter', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplServletGuidLookupFilter', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplServletGuidLookupFilter', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplServletGuidLookupFilter', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplServletGuidLookupFilter', 'cq.dam.core.guidlookupfilter.enabled') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplServletHealthCheckServlet', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplServletHealthCheckServlet', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplServletHealthCheckServlet', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplServletHealthCheckServlet', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplServletHealthCheckServlet', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplServletHealthCheckServlet', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplServletHealthCheckServlet', 'cq.dam.sync.workflow.id') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplServletHealthCheckServlet', 'cq.dam.sync.folder.types') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplServletMetadataGetServlet', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplServletMetadataGetServlet', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplServletMetadataGetServlet', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplServletMetadataGetServlet', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplServletMetadataGetServlet', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplServletMetadataGetServlet', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplServletMetadataGetServlet', 'sling.servlet.resourceTypes') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplServletMetadataGetServlet', 'sling.servlet.methods') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplServletMetadataGetServlet', 'sling.servlet.extensions') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplServletMetadataGetServlet', 'sling.servlet.selectors') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplServletMultipleLicenseAcceptServlet', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplServletMultipleLicenseAcceptServlet', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplServletMultipleLicenseAcceptServlet', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplServletMultipleLicenseAcceptServlet', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplServletMultipleLicenseAcceptServlet', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplServletMultipleLicenseAcceptServlet', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplServletMultipleLicenseAcceptServlet', 'cq.dam.drm.enable') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplServletResourceCollectionServlet', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplServletResourceCollectionServlet', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplServletResourceCollectionServlet', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplServletResourceCollectionServlet', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplServletResourceCollectionServlet', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplServletResourceCollectionServlet', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplServletResourceCollectionServlet', 'sling.servlet.resourceTypes') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplServletResourceCollectionServlet', 'sling.servlet.methods') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplServletResourceCollectionServlet', 'sling.servlet.selectors') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplServletResourceCollectionServlet', 'download.config') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplServletResourceCollectionServlet', 'view.selector') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplServletResourceCollectionServlet', 'send_email') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplUiPreviewFolderPreviewUpdaterImpl', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplUiPreviewFolderPreviewUpdaterImpl', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplUiPreviewFolderPreviewUpdaterImpl', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplUiPreviewFolderPreviewUpdaterImpl', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplUiPreviewFolderPreviewUpdaterImpl', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplUiPreviewFolderPreviewUpdaterImpl', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplUiPreviewFolderPreviewUpdaterImpl', 'createPreviewEnabled') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplUiPreviewFolderPreviewUpdaterImpl', 'updatePreviewEnabled') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplUiPreviewFolderPreviewUpdaterImpl', 'queueSize') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplUiPreviewFolderPreviewUpdaterImpl', 'folderPreviewRenditionRegex') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplUnzipUnzipConfig', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplUnzipUnzipConfig', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplUnzipUnzipConfig', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplUnzipUnzipConfig', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplUnzipUnzipConfig', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplUnzipUnzipConfig', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplUnzipUnzipConfig', 'cq.dam.config.unzip.maxuncompressedsize') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreImplUnzipUnzipConfig', 'cq.dam.config.unzip.encoding') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreProcessExifToolExtractMetadataProcess', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreProcessExifToolExtractMetadataProcess', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreProcessExifToolExtractMetadataProcess', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreProcessExifToolExtractMetadataProcess', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreProcessExifToolExtractMetadataProcess', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreProcessExifToolExtractMetadataProcess', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreProcessExifToolExtractMetadataProcess', 'process.label') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreProcessExifToolExtractMetadataProcess', 'cq.dam.enable.sha1') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreProcessExtractMetadataProcess', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreProcessExtractMetadataProcess', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreProcessExtractMetadataProcess', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreProcessExtractMetadataProcess', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreProcessExtractMetadataProcess', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreProcessExtractMetadataProcess', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreProcessExtractMetadataProcess', 'process.label') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreProcessExtractMetadataProcess', 'cq.dam.enable.sha1') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreProcessMetadataProcessorProcess', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreProcessMetadataProcessorProcess', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreProcessMetadataProcessorProcess', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreProcessMetadataProcessorProcess', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreProcessMetadataProcessorProcess', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreProcessMetadataProcessorProcess', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreProcessMetadataProcessorProcess', 'process.label') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreProcessMetadataProcessorProcess', 'cq.dam.enable.sha1') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqDamCoreProcessMetadataProcessorProcess', 'cq.dam.metadata.xssprotected.properties') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqDamHandlerFfmpegLocatorImpl', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqDamHandlerFfmpegLocatorImpl', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqDamHandlerFfmpegLocatorImpl', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqDamHandlerFfmpegLocatorImpl', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqDamHandlerFfmpegLocatorImpl', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqDamHandlerFfmpegLocatorImpl', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqDamHandlerFfmpegLocatorImpl', 'executable.searchpath') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqDamHandlerGibsonFontmanagerImplFontManagerServiceImpl', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqDamHandlerGibsonFontmanagerImplFontManagerServiceImpl', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqDamHandlerGibsonFontmanagerImplFontManagerServiceImpl', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqDamHandlerGibsonFontmanagerImplFontManagerServiceImpl', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqDamHandlerGibsonFontmanagerImplFontManagerServiceImpl', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqDamHandlerGibsonFontmanagerImplFontManagerServiceImpl', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqDamHandlerGibsonFontmanagerImplFontManagerServiceImpl', 'event.filter') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqDamHandlerGibsonFontmanagerImplFontManagerServiceImpl', 'fontmgr.system.font.dir') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqDamHandlerGibsonFontmanagerImplFontManagerServiceImpl', 'fontmgr.adobe.font.dir') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqDamHandlerGibsonFontmanagerImplFontManagerServiceImpl', 'fontmgr.customer.font.dir') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqDamHandlerStandardPdfPdfHandler', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqDamHandlerStandardPdfPdfHandler', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqDamHandlerStandardPdfPdfHandler', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqDamHandlerStandardPdfPdfHandler', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqDamHandlerStandardPdfPdfHandler', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqDamHandlerStandardPdfPdfHandler', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqDamHandlerStandardPdfPdfHandler', 'raster.annotation') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqDamHandlerStandardPsPostScriptHandler', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqDamHandlerStandardPsPostScriptHandler', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqDamHandlerStandardPsPostScriptHandler', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqDamHandlerStandardPsPostScriptHandler', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqDamHandlerStandardPsPostScriptHandler', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqDamHandlerStandardPsPostScriptHandler', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqDamHandlerStandardPsPostScriptHandler', 'raster.annotation') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqDamHandlerStandardPsdPsdHandler', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqDamHandlerStandardPsdPsdHandler', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqDamHandlerStandardPsdPsdHandler', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqDamHandlerStandardPsdPsdHandler', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqDamHandlerStandardPsdPsdHandler', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqDamHandlerStandardPsdPsdHandler', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqDamHandlerStandardPsdPsdHandler', 'large_file_threshold') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComDayCqDamIdsImplIDSJobProcessor', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqDamIdsImplIDSJobProcessor', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqDamIdsImplIDSJobProcessor', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqDamIdsImplIDSJobProcessor', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqDamIdsImplIDSJobProcessor', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqDamIdsImplIDSJobProcessor', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqDamIdsImplIDSJobProcessor', 'enable.multisession') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqDamIdsImplIDSJobProcessor', 'ids.cc.enable') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqDamIdsImplIDSJobProcessor', 'enable.retry') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqDamIdsImplIDSJobProcessor', 'enable.retry.scripterror') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqDamIdsImplIDSJobProcessor', 'externalizer.domain.cqhost') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqDamIdsImplIDSJobProcessor', 'externalizer.domain.http') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqDamIdsImplIDSPoolManagerImpl', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqDamIdsImplIDSPoolManagerImpl', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqDamIdsImplIDSPoolManagerImpl', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqDamIdsImplIDSPoolManagerImpl', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqDamIdsImplIDSPoolManagerImpl', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqDamIdsImplIDSPoolManagerImpl', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqDamIdsImplIDSPoolManagerImpl', 'max.errors.to.blacklist') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComDayCqDamIdsImplIDSPoolManagerImpl', 'retry.interval.to.whitelist') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComDayCqDamIdsImplIDSPoolManagerImpl', 'connect.timeout') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComDayCqDamIdsImplIDSPoolManagerImpl', 'socket.timeout') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComDayCqDamIdsImplIDSPoolManagerImpl', 'process.label') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqDamIdsImplIDSPoolManagerImpl', 'connection.use.max') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComDayCqDamInddImplHandlerIndesignXMPHandler', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqDamInddImplHandlerIndesignXMPHandler', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqDamInddImplHandlerIndesignXMPHandler', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqDamInddImplHandlerIndesignXMPHandler', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqDamInddImplHandlerIndesignXMPHandler', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqDamInddImplHandlerIndesignXMPHandler', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqDamInddImplHandlerIndesignXMPHandler', 'process.label') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqDamInddImplHandlerIndesignXMPHandler', 'extract.pages') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqDamInddImplServletSnippetCreationServlet', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqDamInddImplServletSnippetCreationServlet', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqDamInddImplServletSnippetCreationServlet', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqDamInddImplServletSnippetCreationServlet', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqDamInddImplServletSnippetCreationServlet', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqDamInddImplServletSnippetCreationServlet', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqDamInddImplServletSnippetCreationServlet', 'snippetcreation.maxcollections') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComDayCqDamInddProcessINDDMediaExtractProcess', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqDamInddProcessINDDMediaExtractProcess', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqDamInddProcessINDDMediaExtractProcess', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqDamInddProcessINDDMediaExtractProcess', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqDamInddProcessINDDMediaExtractProcess', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqDamInddProcessINDDMediaExtractProcess', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqDamInddProcessINDDMediaExtractProcess', 'process.label') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqDamInddProcessINDDMediaExtractProcess', 'cq.dam.indd.pages.regex') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqDamInddProcessINDDMediaExtractProcess', 'ids.job.decoupled') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqDamInddProcessINDDMediaExtractProcess', 'ids.job.workflow.model') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqDamPerformanceInternalAssetPerformanceDataHandlerImpl', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqDamPerformanceInternalAssetPerformanceDataHandlerImpl', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqDamPerformanceInternalAssetPerformanceDataHandlerImpl', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqDamPerformanceInternalAssetPerformanceDataHandlerImpl', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqDamPerformanceInternalAssetPerformanceDataHandlerImpl', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqDamPerformanceInternalAssetPerformanceDataHandlerImpl', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqDamPerformanceInternalAssetPerformanceDataHandlerImpl', 'batch.commit.size') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComDayCqDamPerformanceInternalAssetPerformanceReportSyncJob', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqDamPerformanceInternalAssetPerformanceReportSyncJob', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqDamPerformanceInternalAssetPerformanceReportSyncJob', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqDamPerformanceInternalAssetPerformanceReportSyncJob', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqDamPerformanceInternalAssetPerformanceReportSyncJob', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqDamPerformanceInternalAssetPerformanceReportSyncJob', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqDamPerformanceInternalAssetPerformanceReportSyncJob', 'scheduler.expression') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqDamPimImplSourcingUploadProcessProductAssetsUploadPro', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqDamPimImplSourcingUploadProcessProductAssetsUploadPro', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqDamPimImplSourcingUploadProcessProductAssetsUploadPro', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqDamPimImplSourcingUploadProcessProductAssetsUploadPro', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqDamPimImplSourcingUploadProcessProductAssetsUploadPro', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqDamPimImplSourcingUploadProcessProductAssetsUploadPro', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqDamPimImplSourcingUploadProcessProductAssetsUploadPro', 'delete.zip.file') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqDamS7damCommonAnalyticsImplS7damDynamicMediaConfigEven', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqDamS7damCommonAnalyticsImplS7damDynamicMediaConfigEven', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqDamS7damCommonAnalyticsImplS7damDynamicMediaConfigEven', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqDamS7damCommonAnalyticsImplS7damDynamicMediaConfigEven', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqDamS7damCommonAnalyticsImplS7damDynamicMediaConfigEven', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqDamS7damCommonAnalyticsImplS7damDynamicMediaConfigEven', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqDamS7damCommonAnalyticsImplS7damDynamicMediaConfigEven', 'cq.dam.s7dam.dynamicmediaconfigeventlistener.enabled') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqDamS7damCommonAnalyticsImplSiteCatalystReportRunner', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqDamS7damCommonAnalyticsImplSiteCatalystReportRunner', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqDamS7damCommonAnalyticsImplSiteCatalystReportRunner', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqDamS7damCommonAnalyticsImplSiteCatalystReportRunner', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqDamS7damCommonAnalyticsImplSiteCatalystReportRunner', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqDamS7damCommonAnalyticsImplSiteCatalystReportRunner', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqDamS7damCommonAnalyticsImplSiteCatalystReportRunner', 'scheduler.expression') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqDamS7damCommonAnalyticsImplSiteCatalystReportRunner', 'scheduler.concurrent') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqDamS7damCommonPostServletsSetCreateHandler', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqDamS7damCommonPostServletsSetCreateHandler', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqDamS7damCommonPostServletsSetCreateHandler', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqDamS7damCommonPostServletsSetCreateHandler', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqDamS7damCommonPostServletsSetCreateHandler', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqDamS7damCommonPostServletsSetCreateHandler', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqDamS7damCommonPostServletsSetCreateHandler', 'sling.post.operation') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqDamS7damCommonPostServletsSetCreateHandler', 'sling.servlet.methods') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqDamS7damCommonPostServletsSetModifyHandler', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqDamS7damCommonPostServletsSetModifyHandler', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqDamS7damCommonPostServletsSetModifyHandler', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqDamS7damCommonPostServletsSetModifyHandler', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqDamS7damCommonPostServletsSetModifyHandler', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqDamS7damCommonPostServletsSetModifyHandler', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqDamS7damCommonPostServletsSetModifyHandler', 'sling.post.operation') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqDamS7damCommonPostServletsSetModifyHandler', 'sling.servlet.methods') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqDamS7damCommonProcessVideoThumbnailDownloadProcess', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqDamS7damCommonProcessVideoThumbnailDownloadProcess', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqDamS7damCommonProcessVideoThumbnailDownloadProcess', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqDamS7damCommonProcessVideoThumbnailDownloadProcess', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqDamS7damCommonProcessVideoThumbnailDownloadProcess', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqDamS7damCommonProcessVideoThumbnailDownloadProcess', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqDamS7damCommonProcessVideoThumbnailDownloadProcess', 'process.label') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqDamS7damCommonS7damDamChangeEventListener', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqDamS7damCommonS7damDamChangeEventListener', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqDamS7damCommonS7damDamChangeEventListener', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqDamS7damCommonS7damDamChangeEventListener', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqDamS7damCommonS7damDamChangeEventListener', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqDamS7damCommonS7damDamChangeEventListener', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqDamS7damCommonS7damDamChangeEventListener', 'cq.dam.s7dam.damchangeeventlistener.enabled') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqDamS7damCommonServletsS7damProductInfoServlet', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqDamS7damCommonServletsS7damProductInfoServlet', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqDamS7damCommonServletsS7damProductInfoServlet', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqDamS7damCommonServletsS7damProductInfoServlet', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqDamS7damCommonServletsS7damProductInfoServlet', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqDamS7damCommonServletsS7damProductInfoServlet', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqDamS7damCommonServletsS7damProductInfoServlet', 'sling.servlet.paths') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqDamS7damCommonServletsS7damProductInfoServlet', 'sling.servlet.methods') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqDamS7damCommonVideoImplVideoProxyClientServiceImpl', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqDamS7damCommonVideoImplVideoProxyClientServiceImpl', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqDamS7damCommonVideoImplVideoProxyClientServiceImpl', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqDamS7damCommonVideoImplVideoProxyClientServiceImpl', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqDamS7damCommonVideoImplVideoProxyClientServiceImpl', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqDamS7damCommonVideoImplVideoProxyClientServiceImpl', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqDamS7damCommonVideoImplVideoProxyClientServiceImpl', 'cq.dam.s7dam.videoproxyclientservice.multipartupload.minsize.name') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComDayCqDamS7damCommonVideoImplVideoProxyClientServiceImpl', 'cq.dam.s7dam.videoproxyclientservice.multipartupload.partsize.name') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComDayCqDamS7damCommonVideoImplVideoProxyClientServiceImpl', 'cq.dam.s7dam.videoproxyclientservice.multipartupload.numthread.name') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComDayCqDamS7damCommonVideoImplVideoProxyClientServiceImpl', 'cq.dam.s7dam.videoproxyclientservice.http.readtimeout.name') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComDayCqDamS7damCommonVideoImplVideoProxyClientServiceImpl', 'cq.dam.s7dam.videoproxyclientservice.http.connectiontimeout.name') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComDayCqDamS7damCommonVideoImplVideoProxyClientServiceImpl', 'cq.dam.s7dam.videoproxyclientservice.http.maxretrycount.name') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComDayCqDamS7damCommonVideoImplVideoProxyClientServiceImpl', 'cq.dam.s7dam.videoproxyclientservice.uploadprogress.interval.name') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComDayCqDamScene7ImplScene7APIClientImpl', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqDamScene7ImplScene7APIClientImpl', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqDamScene7ImplScene7APIClientImpl', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqDamScene7ImplScene7APIClientImpl', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqDamScene7ImplScene7APIClientImpl', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqDamScene7ImplScene7APIClientImpl', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqDamScene7ImplScene7APIClientImpl', 'cq.dam.scene7.apiclient.recordsperpage.nofilter.name') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComDayCqDamScene7ImplScene7APIClientImpl', 'cq.dam.scene7.apiclient.recordsperpage.withfilter.name') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComDayCqDamScene7ImplScene7AssetMimeTypeServiceImpl', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqDamScene7ImplScene7AssetMimeTypeServiceImpl', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqDamScene7ImplScene7AssetMimeTypeServiceImpl', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqDamScene7ImplScene7AssetMimeTypeServiceImpl', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqDamScene7ImplScene7AssetMimeTypeServiceImpl', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqDamScene7ImplScene7AssetMimeTypeServiceImpl', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqDamScene7ImplScene7AssetMimeTypeServiceImpl', 'cq.dam.scene7.assetmimetypeservice.mapping') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqDamScene7ImplScene7ConfigurationEventListener', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqDamScene7ImplScene7ConfigurationEventListener', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqDamScene7ImplScene7ConfigurationEventListener', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqDamScene7ImplScene7ConfigurationEventListener', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqDamScene7ImplScene7ConfigurationEventListener', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqDamScene7ImplScene7ConfigurationEventListener', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqDamScene7ImplScene7ConfigurationEventListener', 'cq.dam.scene7.configurationeventlistener.enabled') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqDamScene7ImplScene7DamChangeEventListener', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqDamScene7ImplScene7DamChangeEventListener', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqDamScene7ImplScene7DamChangeEventListener', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqDamScene7ImplScene7DamChangeEventListener', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqDamScene7ImplScene7DamChangeEventListener', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqDamScene7ImplScene7DamChangeEventListener', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqDamScene7ImplScene7DamChangeEventListener', 'cq.dam.scene7.damchangeeventlistener.enabled') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqDamScene7ImplScene7DamChangeEventListener', 'cq.dam.scene7.damchangeeventlistener.observed.paths') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqDamScene7ImplScene7FlashTemplatesServiceImpl', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqDamScene7ImplScene7FlashTemplatesServiceImpl', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqDamScene7ImplScene7FlashTemplatesServiceImpl', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqDamScene7ImplScene7FlashTemplatesServiceImpl', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqDamScene7ImplScene7FlashTemplatesServiceImpl', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqDamScene7ImplScene7FlashTemplatesServiceImpl', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqDamScene7ImplScene7FlashTemplatesServiceImpl', 'scene7FlashTemplates.rti') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqDamScene7ImplScene7FlashTemplatesServiceImpl', 'scene7FlashTemplates.rsi') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqDamScene7ImplScene7FlashTemplatesServiceImpl', 'scene7FlashTemplates.rb') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqDamScene7ImplScene7FlashTemplatesServiceImpl', 'scene7FlashTemplates.rurl') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqDamScene7ImplScene7FlashTemplatesServiceImpl', 'scene7FlashTemplate.urlFormatParameter') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqDamScene7ImplScene7UploadServiceImpl', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqDamScene7ImplScene7UploadServiceImpl', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqDamScene7ImplScene7UploadServiceImpl', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqDamScene7ImplScene7UploadServiceImpl', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqDamScene7ImplScene7UploadServiceImpl', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqDamScene7ImplScene7UploadServiceImpl', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqDamScene7ImplScene7UploadServiceImpl', 'cq.dam.scene7.uploadservice.activejobtimeout.label') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComDayCqDamScene7ImplScene7UploadServiceImpl', 'cq.dam.scene7.uploadservice.connectionmaxperroute.label') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComDayCqDamStockIntegrationImplCacheStockCacheConfigurationSer', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqDamStockIntegrationImplCacheStockCacheConfigurationSer', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqDamStockIntegrationImplCacheStockCacheConfigurationSer', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqDamStockIntegrationImplCacheStockCacheConfigurationSer', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqDamStockIntegrationImplCacheStockCacheConfigurationSer', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqDamStockIntegrationImplCacheStockCacheConfigurationSer', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqDamStockIntegrationImplCacheStockCacheConfigurationSer', 'getCacheExpirationUnit') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqDamStockIntegrationImplCacheStockCacheConfigurationSer', 'getCacheExpirationValue') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComDayCqDamStockIntegrationImplConfigurationStockConfiguration', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqDamStockIntegrationImplConfigurationStockConfiguration', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqDamStockIntegrationImplConfigurationStockConfiguration', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqDamStockIntegrationImplConfigurationStockConfiguration', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqDamStockIntegrationImplConfigurationStockConfiguration', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqDamStockIntegrationImplConfigurationStockConfiguration', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqDamStockIntegrationImplConfigurationStockConfiguration', 'name') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqDamStockIntegrationImplConfigurationStockConfiguration', 'locale') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqDamStockIntegrationImplConfigurationStockConfiguration', 'imsConfig') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqDamVideoImplServletVideoTestServlet', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqDamVideoImplServletVideoTestServlet', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqDamVideoImplServletVideoTestServlet', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqDamVideoImplServletVideoTestServlet', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqDamVideoImplServletVideoTestServlet', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqDamVideoImplServletVideoTestServlet', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqDamVideoImplServletVideoTestServlet', 'enabled') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqExtwidgetServletsImageSpriteServlet', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqExtwidgetServletsImageSpriteServlet', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqExtwidgetServletsImageSpriteServlet', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqExtwidgetServletsImageSpriteServlet', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqExtwidgetServletsImageSpriteServlet', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqExtwidgetServletsImageSpriteServlet', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqExtwidgetServletsImageSpriteServlet', 'maxWidth') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComDayCqExtwidgetServletsImageSpriteServlet', 'maxHeight') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComDayCqImageInternalFontFontHelper', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqImageInternalFontFontHelper', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqImageInternalFontFontHelper', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqImageInternalFontFontHelper', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqImageInternalFontFontHelper', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqImageInternalFontFontHelper', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqImageInternalFontFontHelper', 'fontpath') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqImageInternalFontFontHelper', 'oversamplingFactor') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComDayCqJcrclustersupportClusterStartLevelController', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqJcrclustersupportClusterStartLevelController', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqJcrclustersupportClusterStartLevelController', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqJcrclustersupportClusterStartLevelController', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqJcrclustersupportClusterStartLevelController', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqJcrclustersupportClusterStartLevelController', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqJcrclustersupportClusterStartLevelController', 'cluster.level.enable') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqJcrclustersupportClusterStartLevelController', 'cluster.master.level') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComDayCqJcrclustersupportClusterStartLevelController', 'cluster.slave.level') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComDayCqMailerDefaultMailService', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqMailerDefaultMailService', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqMailerDefaultMailService', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqMailerDefaultMailService', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqMailerDefaultMailService', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqMailerDefaultMailService', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqMailerDefaultMailService', 'smtp.host') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqMailerDefaultMailService', 'smtp.port') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComDayCqMailerDefaultMailService', 'smtp.user') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqMailerDefaultMailService', 'smtp.password') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqMailerDefaultMailService', 'from.address') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqMailerDefaultMailService', 'smtp.ssl') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqMailerDefaultMailService', 'smtp.starttls') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqMailerDefaultMailService', 'debug.email') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqMailerImplCqMailingService', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqMailerImplCqMailingService', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqMailerImplCqMailingService', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqMailerImplCqMailingService', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqMailerImplCqMailingService', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqMailerImplCqMailingService', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqMailerImplCqMailingService', 'max.recipient.count') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqMailerImplEmailCqEmailTemplateFactory', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqMailerImplEmailCqEmailTemplateFactory', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqMailerImplEmailCqEmailTemplateFactory', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqMailerImplEmailCqEmailTemplateFactory', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqMailerImplEmailCqEmailTemplateFactory', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqMailerImplEmailCqEmailTemplateFactory', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqMailerImplEmailCqEmailTemplateFactory', 'mailer.email.charset') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqMailerImplEmailCqRetrieverTemplateFactory', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqMailerImplEmailCqRetrieverTemplateFactory', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqMailerImplEmailCqRetrieverTemplateFactory', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqMailerImplEmailCqRetrieverTemplateFactory', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqMailerImplEmailCqRetrieverTemplateFactory', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqMailerImplEmailCqRetrieverTemplateFactory', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqMailerImplEmailCqRetrieverTemplateFactory', 'mailer.email.embed') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqMailerImplEmailCqRetrieverTemplateFactory', 'mailer.email.charset') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqMailerImplEmailCqRetrieverTemplateFactory', 'mailer.email.retrieverUserID') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqMailerImplEmailCqRetrieverTemplateFactory', 'mailer.email.retrieverUserPWD') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqMcmCampaignImplIntegrationConfigImpl', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqMcmCampaignImplIntegrationConfigImpl', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqMcmCampaignImplIntegrationConfigImpl', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqMcmCampaignImplIntegrationConfigImpl', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqMcmCampaignImplIntegrationConfigImpl', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqMcmCampaignImplIntegrationConfigImpl', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqMcmCampaignImplIntegrationConfigImpl', 'aem.mcm.campaign.formConstraints') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqMcmCampaignImplIntegrationConfigImpl', 'aem.mcm.campaign.publicUrl') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqMcmCampaignImplIntegrationConfigImpl', 'aem.mcm.campaign.relaxedSSL') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqMcmCampaignImporterPersonalizedTextHandlerFactory', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqMcmCampaignImporterPersonalizedTextHandlerFactory', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqMcmCampaignImporterPersonalizedTextHandlerFactory', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqMcmCampaignImporterPersonalizedTextHandlerFactory', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqMcmCampaignImporterPersonalizedTextHandlerFactory', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqMcmCampaignImporterPersonalizedTextHandlerFactory', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqMcmCampaignImporterPersonalizedTextHandlerFactory', 'service.ranking') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComDayCqMcmCampaignImporterPersonalizedTextHandlerFactory', 'tagpattern') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqMcmCoreNewsletterNewsletterEmailServiceImpl', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqMcmCoreNewsletterNewsletterEmailServiceImpl', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqMcmCoreNewsletterNewsletterEmailServiceImpl', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqMcmCoreNewsletterNewsletterEmailServiceImpl', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqMcmCoreNewsletterNewsletterEmailServiceImpl', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqMcmCoreNewsletterNewsletterEmailServiceImpl', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqMcmCoreNewsletterNewsletterEmailServiceImpl', 'from.address') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqMcmCoreNewsletterNewsletterEmailServiceImpl', 'sender.host') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqMcmCoreNewsletterNewsletterEmailServiceImpl', 'max.bounce.count') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqMcmImplMCMConfiguration', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqMcmImplMCMConfiguration', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqMcmImplMCMConfiguration', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqMcmImplMCMConfiguration', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqMcmImplMCMConfiguration', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqMcmImplMCMConfiguration', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqMcmImplMCMConfiguration', 'experience.indirection') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqMcmImplMCMConfiguration', 'touchpoint.indirection') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqMcmLandingpageParserTaghandlersCtaClickThroughComponen', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqMcmLandingpageParserTaghandlersCtaClickThroughComponen', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqMcmLandingpageParserTaghandlersCtaClickThroughComponen', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqMcmLandingpageParserTaghandlersCtaClickThroughComponen', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqMcmLandingpageParserTaghandlersCtaClickThroughComponen', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqMcmLandingpageParserTaghandlersCtaClickThroughComponen', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqMcmLandingpageParserTaghandlersCtaClickThroughComponen', 'service.ranking') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComDayCqMcmLandingpageParserTaghandlersCtaClickThroughComponen', 'tagpattern') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqMcmLandingpageParserTaghandlersCtaClickThroughComponen', 'component.resourceType') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqMcmLandingpageParserTaghandlersCtaGraphicalClickThroug', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqMcmLandingpageParserTaghandlersCtaGraphicalClickThroug', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqMcmLandingpageParserTaghandlersCtaGraphicalClickThroug', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqMcmLandingpageParserTaghandlersCtaGraphicalClickThroug', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqMcmLandingpageParserTaghandlersCtaGraphicalClickThroug', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqMcmLandingpageParserTaghandlersCtaGraphicalClickThroug', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqMcmLandingpageParserTaghandlersCtaGraphicalClickThroug', 'service.ranking') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComDayCqMcmLandingpageParserTaghandlersCtaGraphicalClickThroug', 'tagpattern') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqMcmLandingpageParserTaghandlersCtaGraphicalClickThroug', 'component.resourceType') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqMcmLandingpageParserTaghandlersCtaLeadFormCTAComponent', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqMcmLandingpageParserTaghandlersCtaLeadFormCTAComponent', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqMcmLandingpageParserTaghandlersCtaLeadFormCTAComponent', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqMcmLandingpageParserTaghandlersCtaLeadFormCTAComponent', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqMcmLandingpageParserTaghandlersCtaLeadFormCTAComponent', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqMcmLandingpageParserTaghandlersCtaLeadFormCTAComponent', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqMcmLandingpageParserTaghandlersCtaLeadFormCTAComponent', 'service.ranking') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComDayCqMcmLandingpageParserTaghandlersCtaLeadFormCTAComponent', 'tagpattern') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqMcmLandingpageParserTaghandlersMboxMBoxExperienceTagHa', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqMcmLandingpageParserTaghandlersMboxMBoxExperienceTagHa', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqMcmLandingpageParserTaghandlersMboxMBoxExperienceTagHa', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqMcmLandingpageParserTaghandlersMboxMBoxExperienceTagHa', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqMcmLandingpageParserTaghandlersMboxMBoxExperienceTagHa', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqMcmLandingpageParserTaghandlersMboxMBoxExperienceTagHa', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqMcmLandingpageParserTaghandlersMboxMBoxExperienceTagHa', 'service.ranking') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComDayCqMcmLandingpageParserTaghandlersMboxMBoxExperienceTagHa', 'tagpattern') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqMcmLandingpageParserTaghandlersMboxTargetComponentTagH', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqMcmLandingpageParserTaghandlersMboxTargetComponentTagH', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqMcmLandingpageParserTaghandlersMboxTargetComponentTagH', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqMcmLandingpageParserTaghandlersMboxTargetComponentTagH', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqMcmLandingpageParserTaghandlersMboxTargetComponentTagH', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqMcmLandingpageParserTaghandlersMboxTargetComponentTagH', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqMcmLandingpageParserTaghandlersMboxTargetComponentTagH', 'service.ranking') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComDayCqMcmLandingpageParserTaghandlersMboxTargetComponentTagH', 'tagpattern') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqMcmLandingpageParserTaghandlersMboxTargetComponentTagH', 'component.resourceType') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqNotificationImplNotificationServiceImpl', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqNotificationImplNotificationServiceImpl', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqNotificationImplNotificationServiceImpl', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqNotificationImplNotificationServiceImpl', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqNotificationImplNotificationServiceImpl', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqNotificationImplNotificationServiceImpl', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqNotificationImplNotificationServiceImpl', 'event.filter') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqPersonalizationImplServletsTargetingConfigurationServlet', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqPersonalizationImplServletsTargetingConfigurationServlet', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqPersonalizationImplServletsTargetingConfigurationServlet', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqPersonalizationImplServletsTargetingConfigurationServlet', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqPersonalizationImplServletsTargetingConfigurationServlet', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqPersonalizationImplServletsTargetingConfigurationServlet', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqPersonalizationImplServletsTargetingConfigurationServlet', 'forcelocation') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqPollingImporterImplManagedPollConfigImpl', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqPollingImporterImplManagedPollConfigImpl', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqPollingImporterImplManagedPollConfigImpl', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqPollingImporterImplManagedPollConfigImpl', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqPollingImporterImplManagedPollConfigImpl', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqPollingImporterImplManagedPollConfigImpl', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqPollingImporterImplManagedPollConfigImpl', 'id') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqPollingImporterImplManagedPollConfigImpl', 'enabled') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqPollingImporterImplManagedPollConfigImpl', 'reference') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqPollingImporterImplManagedPollConfigImpl', 'interval') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComDayCqPollingImporterImplManagedPollConfigImpl', 'expression') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqPollingImporterImplManagedPollConfigImpl', 'source') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqPollingImporterImplManagedPollConfigImpl', 'target') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqPollingImporterImplManagedPollConfigImpl', 'login') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqPollingImporterImplManagedPollConfigImpl', 'password') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqPollingImporterImplManagedPollingImporterImpl', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqPollingImporterImplManagedPollingImporterImpl', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqPollingImporterImplManagedPollingImporterImpl', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqPollingImporterImplManagedPollingImporterImpl', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqPollingImporterImplManagedPollingImporterImpl', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqPollingImporterImplManagedPollingImporterImpl', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqPollingImporterImplManagedPollingImporterImpl', 'importer.user') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqPollingImporterImplPollingImporterImpl', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqPollingImporterImplPollingImporterImpl', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqPollingImporterImplPollingImporterImpl', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqPollingImporterImplPollingImporterImpl', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqPollingImporterImplPollingImporterImpl', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqPollingImporterImplPollingImporterImpl', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqPollingImporterImplPollingImporterImpl', 'importer.min.interval') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComDayCqPollingImporterImplPollingImporterImpl', 'importer.user') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqPollingImporterImplPollingImporterImpl', 'exclude.paths') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqPollingImporterImplPollingImporterImpl', 'include.paths') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqReplicationAuditReplicationEventListener', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqReplicationAuditReplicationEventListener', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqReplicationAuditReplicationEventListener', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqReplicationAuditReplicationEventListener', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqReplicationAuditReplicationEventListener', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqReplicationAuditReplicationEventListener', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqReplicationAuditReplicationEventListener', 'service.ranking') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComDayCqReplicationContentStaticContentBuilder', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqReplicationContentStaticContentBuilder', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqReplicationContentStaticContentBuilder', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqReplicationContentStaticContentBuilder', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqReplicationContentStaticContentBuilder', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqReplicationContentStaticContentBuilder', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqReplicationContentStaticContentBuilder', 'host') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqReplicationContentStaticContentBuilder', 'port') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComDayCqReplicationImplAgentManagerImpl', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqReplicationImplAgentManagerImpl', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqReplicationImplAgentManagerImpl', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqReplicationImplAgentManagerImpl', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqReplicationImplAgentManagerImpl', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqReplicationImplAgentManagerImpl', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqReplicationImplAgentManagerImpl', 'job.topics') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqReplicationImplAgentManagerImpl', 'serviceUser.target') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqReplicationImplAgentManagerImpl', 'agentProvider.target') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqReplicationImplContentDurboBinaryLessContentBuilder', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqReplicationImplContentDurboBinaryLessContentBuilder', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqReplicationImplContentDurboBinaryLessContentBuilder', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqReplicationImplContentDurboBinaryLessContentBuilder', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqReplicationImplContentDurboBinaryLessContentBuilder', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqReplicationImplContentDurboBinaryLessContentBuilder', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqReplicationImplContentDurboBinaryLessContentBuilder', 'binary.threshold') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComDayCqReplicationImplContentDurboDurboImportConfigurationProv', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqReplicationImplContentDurboDurboImportConfigurationProv', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqReplicationImplContentDurboDurboImportConfigurationProv', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqReplicationImplContentDurboDurboImportConfigurationProv', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqReplicationImplContentDurboDurboImportConfigurationProv', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqReplicationImplContentDurboDurboImportConfigurationProv', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqReplicationImplContentDurboDurboImportConfigurationProv', 'preserve.hierarchy.nodes') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqReplicationImplContentDurboDurboImportConfigurationProv', 'ignore.versioning') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqReplicationImplContentDurboDurboImportConfigurationProv', 'import.acl') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqReplicationImplContentDurboDurboImportConfigurationProv', 'save.threshold') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComDayCqReplicationImplContentDurboDurboImportConfigurationProv', 'preserve.user.paths') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqReplicationImplContentDurboDurboImportConfigurationProv', 'preserve.uuid') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqReplicationImplContentDurboDurboImportConfigurationProv', 'preserve.uuid.nodetypes') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqReplicationImplContentDurboDurboImportConfigurationProv', 'preserve.uuid.subtrees') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqReplicationImplContentDurboDurboImportConfigurationProv', 'auto.commit') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqReplicationImplReplicationContentFactoryProviderImpl', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqReplicationImplReplicationContentFactoryProviderImpl', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqReplicationImplReplicationContentFactoryProviderImpl', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqReplicationImplReplicationContentFactoryProviderImpl', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqReplicationImplReplicationContentFactoryProviderImpl', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqReplicationImplReplicationContentFactoryProviderImpl', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqReplicationImplReplicationContentFactoryProviderImpl', 'replication.content.useFileStorage') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqReplicationImplReplicationContentFactoryProviderImpl', 'replication.content.maxCommitAttempts') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComDayCqReplicationImplReplicationReceiverImpl', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqReplicationImplReplicationReceiverImpl', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqReplicationImplReplicationReceiverImpl', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqReplicationImplReplicationReceiverImpl', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqReplicationImplReplicationReceiverImpl', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqReplicationImplReplicationReceiverImpl', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqReplicationImplReplicationReceiverImpl', 'receiver.tmpfile.threshold') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComDayCqReplicationImplReplicationReceiverImpl', 'receiver.packages.use.install') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqReplicationImplReplicatorImpl', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqReplicationImplReplicatorImpl', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqReplicationImplReplicatorImpl', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqReplicationImplReplicatorImpl', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqReplicationImplReplicatorImpl', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqReplicationImplReplicatorImpl', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqReplicationImplReplicatorImpl', 'distribute_events') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqReplicationImplReverseReplicator', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqReplicationImplReverseReplicator', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqReplicationImplReverseReplicator', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqReplicationImplReverseReplicator', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqReplicationImplReverseReplicator', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqReplicationImplReverseReplicator', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqReplicationImplReverseReplicator', 'scheduler.period') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComDayCqReplicationImplTransportBinaryLessTransportHandler', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqReplicationImplTransportBinaryLessTransportHandler', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqReplicationImplTransportBinaryLessTransportHandler', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqReplicationImplTransportBinaryLessTransportHandler', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqReplicationImplTransportBinaryLessTransportHandler', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqReplicationImplTransportBinaryLessTransportHandler', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqReplicationImplTransportBinaryLessTransportHandler', 'disabled.cipher.suites') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqReplicationImplTransportBinaryLessTransportHandler', 'enabled.cipher.suites') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqReplicationImplTransportHttp', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqReplicationImplTransportHttp', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqReplicationImplTransportHttp', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqReplicationImplTransportHttp', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqReplicationImplTransportHttp', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqReplicationImplTransportHttp', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqReplicationImplTransportHttp', 'disabled.cipher.suites') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqReplicationImplTransportHttp', 'enabled.cipher.suites') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqReportingImplCacheCacheImpl', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqReportingImplCacheCacheImpl', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqReportingImplCacheCacheImpl', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqReportingImplCacheCacheImpl', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqReportingImplCacheCacheImpl', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqReportingImplCacheCacheImpl', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqReportingImplCacheCacheImpl', 'repcache.enable') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqReportingImplCacheCacheImpl', 'repcache.ttl') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComDayCqReportingImplCacheCacheImpl', 'repcache.max') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComDayCqReportingImplConfigServiceImpl', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqReportingImplConfigServiceImpl', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqReportingImplConfigServiceImpl', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqReportingImplConfigServiceImpl', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqReportingImplConfigServiceImpl', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqReportingImplConfigServiceImpl', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqReportingImplConfigServiceImpl', 'repconf.timezone') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqReportingImplConfigServiceImpl', 'repconf.locale') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqReportingImplConfigServiceImpl', 'repconf.snapshots') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqReportingImplConfigServiceImpl', 'repconf.repdir') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqReportingImplConfigServiceImpl', 'repconf.hourofday') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComDayCqReportingImplConfigServiceImpl', 'repconf.minofhour') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComDayCqReportingImplConfigServiceImpl', 'repconf.maxrows') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComDayCqReportingImplConfigServiceImpl', 'repconf.fakedata') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqReportingImplConfigServiceImpl', 'repconf.snapshotuser') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqReportingImplConfigServiceImpl', 'repconf.enforcesnapshotuser') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqReportingImplRLogAnalyzer', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqReportingImplRLogAnalyzer', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqReportingImplRLogAnalyzer', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqReportingImplRLogAnalyzer', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqReportingImplRLogAnalyzer', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqReportingImplRLogAnalyzer', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqReportingImplRLogAnalyzer', 'request.log.output') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqRewriterLinkcheckerImplLinkCheckerImpl', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqRewriterLinkcheckerImplLinkCheckerImpl', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqRewriterLinkcheckerImplLinkCheckerImpl', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqRewriterLinkcheckerImplLinkCheckerImpl', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqRewriterLinkcheckerImplLinkCheckerImpl', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqRewriterLinkcheckerImplLinkCheckerImpl', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqRewriterLinkcheckerImplLinkCheckerImpl', 'scheduler.period') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComDayCqRewriterLinkcheckerImplLinkCheckerImpl', 'scheduler.concurrent') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqRewriterLinkcheckerImplLinkCheckerImpl', 'service.bad_link_tolerance_interval') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComDayCqRewriterLinkcheckerImplLinkCheckerImpl', 'service.check_override_patterns') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqRewriterLinkcheckerImplLinkCheckerImpl', 'service.cache_broken_internal_links') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqRewriterLinkcheckerImplLinkCheckerImpl', 'service.special_link_prefix') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqRewriterLinkcheckerImplLinkCheckerImpl', 'service.special_link_patterns') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqRewriterLinkcheckerImplLinkCheckerTask', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqRewriterLinkcheckerImplLinkCheckerTask', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqRewriterLinkcheckerImplLinkCheckerTask', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqRewriterLinkcheckerImplLinkCheckerTask', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqRewriterLinkcheckerImplLinkCheckerTask', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqRewriterLinkcheckerImplLinkCheckerTask', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqRewriterLinkcheckerImplLinkCheckerTask', 'scheduler.period') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComDayCqRewriterLinkcheckerImplLinkCheckerTask', 'scheduler.concurrent') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqRewriterLinkcheckerImplLinkCheckerTask', 'good_link_test_interval') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComDayCqRewriterLinkcheckerImplLinkCheckerTask', 'bad_link_test_interval') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComDayCqRewriterLinkcheckerImplLinkCheckerTask', 'link_unused_interval') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComDayCqRewriterLinkcheckerImplLinkCheckerTask', 'connection.timeout') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComDayCqRewriterLinkcheckerImplLinkCheckerTransformerFactory', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqRewriterLinkcheckerImplLinkCheckerTransformerFactory', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqRewriterLinkcheckerImplLinkCheckerTransformerFactory', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqRewriterLinkcheckerImplLinkCheckerTransformerFactory', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqRewriterLinkcheckerImplLinkCheckerTransformerFactory', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqRewriterLinkcheckerImplLinkCheckerTransformerFactory', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqRewriterLinkcheckerImplLinkCheckerTransformerFactory', 'linkcheckertransformer.disableRewriting') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqRewriterLinkcheckerImplLinkCheckerTransformerFactory', 'linkcheckertransformer.disableChecking') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqRewriterLinkcheckerImplLinkCheckerTransformerFactory', 'linkcheckertransformer.mapCacheSize') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComDayCqRewriterLinkcheckerImplLinkCheckerTransformerFactory', 'linkcheckertransformer.strictExtensionCheck') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqRewriterLinkcheckerImplLinkCheckerTransformerFactory', 'linkcheckertransformer.stripHtmltExtension') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqRewriterLinkcheckerImplLinkCheckerTransformerFactory', 'linkcheckertransformer.rewriteElements') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqRewriterLinkcheckerImplLinkCheckerTransformerFactory', 'linkcheckertransformer.stripExtensionPathBlacklist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqRewriterLinkcheckerImplLinkInfoStorageImpl', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqRewriterLinkcheckerImplLinkInfoStorageImpl', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqRewriterLinkcheckerImplLinkInfoStorageImpl', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqRewriterLinkcheckerImplLinkInfoStorageImpl', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqRewriterLinkcheckerImplLinkInfoStorageImpl', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqRewriterLinkcheckerImplLinkInfoStorageImpl', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqRewriterLinkcheckerImplLinkInfoStorageImpl', 'service.max_links_per_host') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComDayCqRewriterLinkcheckerImplLinkInfoStorageImpl', 'service.save_external_link_references') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqRewriterProcessorImplHtmlParserFactory', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqRewriterProcessorImplHtmlParserFactory', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqRewriterProcessorImplHtmlParserFactory', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqRewriterProcessorImplHtmlParserFactory', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqRewriterProcessorImplHtmlParserFactory', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqRewriterProcessorImplHtmlParserFactory', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqRewriterProcessorImplHtmlParserFactory', 'htmlparser.processTags') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqRewriterProcessorImplHtmlParserFactory', 'htmlparser.preserveCamelCase') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqSearchImplBuilderQueryBuilderImpl', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqSearchImplBuilderQueryBuilderImpl', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqSearchImplBuilderQueryBuilderImpl', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqSearchImplBuilderQueryBuilderImpl', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqSearchImplBuilderQueryBuilderImpl', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqSearchImplBuilderQueryBuilderImpl', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqSearchImplBuilderQueryBuilderImpl', 'excerpt.properties') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqSearchImplBuilderQueryBuilderImpl', 'cache.max.entries') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComDayCqSearchImplBuilderQueryBuilderImpl', 'cache.entry.lifetime') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComDayCqSearchImplBuilderQueryBuilderImpl', 'xpath.union') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqSearchSuggestImplSuggestionIndexManagerImpl', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqSearchSuggestImplSuggestionIndexManagerImpl', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqSearchSuggestImplSuggestionIndexManagerImpl', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqSearchSuggestImplSuggestionIndexManagerImpl', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqSearchSuggestImplSuggestionIndexManagerImpl', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqSearchSuggestImplSuggestionIndexManagerImpl', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqSearchSuggestImplSuggestionIndexManagerImpl', 'pathBuilder.target') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqSearchSuggestImplSuggestionIndexManagerImpl', 'suggest.basepath') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqSearchpromoteImplPublishSearchPromoteConfigHandler', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqSearchpromoteImplPublishSearchPromoteConfigHandler', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqSearchpromoteImplPublishSearchPromoteConfigHandler', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqSearchpromoteImplPublishSearchPromoteConfigHandler', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqSearchpromoteImplPublishSearchPromoteConfigHandler', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqSearchpromoteImplPublishSearchPromoteConfigHandler', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqSearchpromoteImplPublishSearchPromoteConfigHandler', 'cq.searchpromote.confighandler.enabled') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqSearchpromoteImplSearchPromoteServiceImpl', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqSearchpromoteImplSearchPromoteServiceImpl', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqSearchpromoteImplSearchPromoteServiceImpl', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqSearchpromoteImplSearchPromoteServiceImpl', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqSearchpromoteImplSearchPromoteServiceImpl', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqSearchpromoteImplSearchPromoteServiceImpl', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqSearchpromoteImplSearchPromoteServiceImpl', 'cq.searchpromote.configuration.server.uri') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqSearchpromoteImplSearchPromoteServiceImpl', 'cq.searchpromote.configuration.environment') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqSearchpromoteImplSearchPromoteServiceImpl', 'connection.timeout') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComDayCqSearchpromoteImplSearchPromoteServiceImpl', 'socket.timeout') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComDayCqSecurityACLSetup', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqSecurityACLSetup', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqSecurityACLSetup', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqSecurityACLSetup', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqSecurityACLSetup', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqSecurityACLSetup', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqSecurityACLSetup', 'cq.aclsetup.rules') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqStatisticsImplStatisticsServiceImpl', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqStatisticsImplStatisticsServiceImpl', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqStatisticsImplStatisticsServiceImpl', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqStatisticsImplStatisticsServiceImpl', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqStatisticsImplStatisticsServiceImpl', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqStatisticsImplStatisticsServiceImpl', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqStatisticsImplStatisticsServiceImpl', 'scheduler.period') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComDayCqStatisticsImplStatisticsServiceImpl', 'scheduler.concurrent') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqStatisticsImplStatisticsServiceImpl', 'path') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqStatisticsImplStatisticsServiceImpl', 'workspace') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqStatisticsImplStatisticsServiceImpl', 'keywordsPath') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqStatisticsImplStatisticsServiceImpl', 'asyncEntries') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqTaggingImplJcrTagManagerFactoryImpl', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqTaggingImplJcrTagManagerFactoryImpl', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqTaggingImplJcrTagManagerFactoryImpl', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqTaggingImplJcrTagManagerFactoryImpl', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqTaggingImplJcrTagManagerFactoryImpl', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqTaggingImplJcrTagManagerFactoryImpl', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqTaggingImplJcrTagManagerFactoryImpl', 'validation.enabled') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqTaggingImplSearchTagPredicateEvaluator', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqTaggingImplSearchTagPredicateEvaluator', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqTaggingImplSearchTagPredicateEvaluator', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqTaggingImplSearchTagPredicateEvaluator', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqTaggingImplSearchTagPredicateEvaluator', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqTaggingImplSearchTagPredicateEvaluator', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqTaggingImplSearchTagPredicateEvaluator', 'ignore_path') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqTaggingImplTagGarbageCollector', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqTaggingImplTagGarbageCollector', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqTaggingImplTagGarbageCollector', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqTaggingImplTagGarbageCollector', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqTaggingImplTagGarbageCollector', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqTaggingImplTagGarbageCollector', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqTaggingImplTagGarbageCollector', 'scheduler.expression') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmContentsyncImplHandlerPagesUpdateHandler', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmContentsyncImplHandlerPagesUpdateHandler', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmContentsyncImplHandlerPagesUpdateHandler', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmContentsyncImplHandlerPagesUpdateHandler', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmContentsyncImplHandlerPagesUpdateHandler', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmContentsyncImplHandlerPagesUpdateHandler', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqWcmContentsyncImplHandlerPagesUpdateHandler', 'cq.pagesupdatehandler.imageresourcetypes') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqWcmContentsyncImplRewriterPathRewriterTransformerFactor', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmContentsyncImplRewriterPathRewriterTransformerFactor', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmContentsyncImplRewriterPathRewriterTransformerFactor', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmContentsyncImplRewriterPathRewriterTransformerFactor', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmContentsyncImplRewriterPathRewriterTransformerFactor', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmContentsyncImplRewriterPathRewriterTransformerFactor', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqWcmContentsyncImplRewriterPathRewriterTransformerFactor', 'cq.contentsync.pathrewritertransformer.mapping.links') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqWcmContentsyncImplRewriterPathRewriterTransformerFactor', 'cq.contentsync.pathrewritertransformer.mapping.clientlibs') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqWcmContentsyncImplRewriterPathRewriterTransformerFactor', 'cq.contentsync.pathrewritertransformer.mapping.images') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqWcmContentsyncImplRewriterPathRewriterTransformerFactor', 'cq.contentsync.pathrewritertransformer.attribute.pattern') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmContentsyncImplRewriterPathRewriterTransformerFactor', 'cq.contentsync.pathrewritertransformer.clientlibrary.pattern') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmContentsyncImplRewriterPathRewriterTransformerFactor', 'cq.contentsync.pathrewritertransformer.clientlibrary.replace') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmCoreImplAuthoringUIModeServiceImpl', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmCoreImplAuthoringUIModeServiceImpl', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmCoreImplAuthoringUIModeServiceImpl', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmCoreImplAuthoringUIModeServiceImpl', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmCoreImplAuthoringUIModeServiceImpl', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmCoreImplAuthoringUIModeServiceImpl', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqWcmCoreImplAuthoringUIModeServiceImpl', 'authoringUIModeService.default') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmCoreImplCommandsWCMCommandServlet', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmCoreImplCommandsWCMCommandServlet', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmCoreImplCommandsWCMCommandServlet', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmCoreImplCommandsWCMCommandServlet', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmCoreImplCommandsWCMCommandServlet', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmCoreImplCommandsWCMCommandServlet', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqWcmCoreImplCommandsWCMCommandServlet', 'wcmcommandservlet.delete_whitelist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqWcmCoreImplDevicedetectionDeviceIdentificationModeImpl', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmCoreImplDevicedetectionDeviceIdentificationModeImpl', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmCoreImplDevicedetectionDeviceIdentificationModeImpl', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmCoreImplDevicedetectionDeviceIdentificationModeImpl', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmCoreImplDevicedetectionDeviceIdentificationModeImpl', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmCoreImplDevicedetectionDeviceIdentificationModeImpl', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqWcmCoreImplDevicedetectionDeviceIdentificationModeImpl', 'dim.default.mode') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmCoreImplDevicedetectionDeviceIdentificationModeImpl', 'dim.appcache.enabled') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmCoreImplEventPageEventAuditListener', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmCoreImplEventPageEventAuditListener', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmCoreImplEventPageEventAuditListener', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmCoreImplEventPageEventAuditListener', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmCoreImplEventPageEventAuditListener', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmCoreImplEventPageEventAuditListener', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqWcmCoreImplEventPageEventAuditListener', 'configured') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmCoreImplEventPagePostProcessor', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmCoreImplEventPagePostProcessor', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmCoreImplEventPagePostProcessor', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmCoreImplEventPagePostProcessor', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmCoreImplEventPagePostProcessor', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmCoreImplEventPagePostProcessor', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqWcmCoreImplEventPagePostProcessor', 'paths') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqWcmCoreImplEventRepositoryChangeEventListener', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmCoreImplEventRepositoryChangeEventListener', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmCoreImplEventRepositoryChangeEventListener', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmCoreImplEventRepositoryChangeEventListener', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmCoreImplEventRepositoryChangeEventListener', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmCoreImplEventRepositoryChangeEventListener', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqWcmCoreImplEventRepositoryChangeEventListener', 'paths') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqWcmCoreImplEventRepositoryChangeEventListener', 'excludedPaths') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqWcmCoreImplEventTemplatePostProcessor', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmCoreImplEventTemplatePostProcessor', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmCoreImplEventTemplatePostProcessor', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmCoreImplEventTemplatePostProcessor', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmCoreImplEventTemplatePostProcessor', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmCoreImplEventTemplatePostProcessor', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqWcmCoreImplEventTemplatePostProcessor', 'paths') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmCoreImplLanguageManagerImpl', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmCoreImplLanguageManagerImpl', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmCoreImplLanguageManagerImpl', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmCoreImplLanguageManagerImpl', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmCoreImplLanguageManagerImpl', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmCoreImplLanguageManagerImpl', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqWcmCoreImplLanguageManagerImpl', 'langmgr.list.path') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmCoreImplLanguageManagerImpl', 'langmgr.country.default') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqWcmCoreImplLinkCheckerConfigurationFactoryImpl', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmCoreImplLinkCheckerConfigurationFactoryImpl', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmCoreImplLinkCheckerConfigurationFactoryImpl', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmCoreImplLinkCheckerConfigurationFactoryImpl', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmCoreImplLinkCheckerConfigurationFactoryImpl', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmCoreImplLinkCheckerConfigurationFactoryImpl', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqWcmCoreImplLinkCheckerConfigurationFactoryImpl', 'link.expired.prefix') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmCoreImplLinkCheckerConfigurationFactoryImpl', 'link.expired.remove') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmCoreImplLinkCheckerConfigurationFactoryImpl', 'link.expired.suffix') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmCoreImplLinkCheckerConfigurationFactoryImpl', 'link.invalid.prefix') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmCoreImplLinkCheckerConfigurationFactoryImpl', 'link.invalid.remove') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmCoreImplLinkCheckerConfigurationFactoryImpl', 'link.invalid.suffix') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmCoreImplLinkCheckerConfigurationFactoryImpl', 'link.predated.prefix') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmCoreImplLinkCheckerConfigurationFactoryImpl', 'link.predated.remove') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmCoreImplLinkCheckerConfigurationFactoryImpl', 'link.predated.suffix') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmCoreImplLinkCheckerConfigurationFactoryImpl', 'link.wcmmodes') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqWcmCoreImplPagePageInfoAggregatorImpl', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmCoreImplPagePageInfoAggregatorImpl', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmCoreImplPagePageInfoAggregatorImpl', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmCoreImplPagePageInfoAggregatorImpl', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmCoreImplPagePageInfoAggregatorImpl', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmCoreImplPagePageInfoAggregatorImpl', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqWcmCoreImplPagePageInfoAggregatorImpl', 'page.info.provider.property.regex.default') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmCoreImplPagePageInfoAggregatorImpl', 'page.info.provider.property.name') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmCoreImplPagePageManagerFactoryImpl', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmCoreImplPagePageManagerFactoryImpl', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmCoreImplPagePageManagerFactoryImpl', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmCoreImplPagePageManagerFactoryImpl', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmCoreImplPagePageManagerFactoryImpl', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmCoreImplPagePageManagerFactoryImpl', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqWcmCoreImplPagePageManagerFactoryImpl', 'illegalCharMapping') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmCoreImplPagePageManagerFactoryImpl', 'pageSubTreeActivationCheck') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmCoreImplReferencesContentContentReferenceConfig', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmCoreImplReferencesContentContentReferenceConfig', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmCoreImplReferencesContentContentReferenceConfig', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmCoreImplReferencesContentContentReferenceConfig', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmCoreImplReferencesContentContentReferenceConfig', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmCoreImplReferencesContentContentReferenceConfig', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqWcmCoreImplReferencesContentContentReferenceConfig', 'contentReferenceConfig.resourceTypes') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqWcmCoreImplServletsContentfinderAssetViewHandler', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmCoreImplServletsContentfinderAssetViewHandler', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmCoreImplServletsContentfinderAssetViewHandler', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmCoreImplServletsContentfinderAssetViewHandler', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmCoreImplServletsContentfinderAssetViewHandler', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmCoreImplServletsContentfinderAssetViewHandler', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqWcmCoreImplServletsContentfinderAssetViewHandler', 'dam.showexpired') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmCoreImplServletsContentfinderAssetViewHandler', 'dam.showhidden') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmCoreImplServletsContentfinderAssetViewHandler', 'tagTitleSearch') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmCoreImplServletsContentfinderAssetViewHandler', 'guessTotal') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmCoreImplServletsContentfinderAssetViewHandler', 'dam.expiryProperty') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmCoreImplServletsContentfinderConnectorConnectorVie', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmCoreImplServletsContentfinderConnectorConnectorVie', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmCoreImplServletsContentfinderConnectorConnectorVie', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmCoreImplServletsContentfinderConnectorConnectorVie', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmCoreImplServletsContentfinderConnectorConnectorVie', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmCoreImplServletsContentfinderConnectorConnectorVie', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqWcmCoreImplServletsContentfinderConnectorConnectorVie', 'item.resource.types') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqWcmCoreImplServletsContentfinderPageViewHandler', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmCoreImplServletsContentfinderPageViewHandler', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmCoreImplServletsContentfinderPageViewHandler', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmCoreImplServletsContentfinderPageViewHandler', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmCoreImplServletsContentfinderPageViewHandler', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmCoreImplServletsContentfinderPageViewHandler', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqWcmCoreImplServletsContentfinderPageViewHandler', 'guessTotal') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmCoreImplServletsContentfinderPageViewHandler', 'tagTitleSearch') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmCoreImplServletsFindReplaceServlet', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmCoreImplServletsFindReplaceServlet', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmCoreImplServletsFindReplaceServlet', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmCoreImplServletsFindReplaceServlet', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmCoreImplServletsFindReplaceServlet', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmCoreImplServletsFindReplaceServlet', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqWcmCoreImplServletsFindReplaceServlet', 'scope') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqWcmCoreImplServletsReferenceSearchServlet', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmCoreImplServletsReferenceSearchServlet', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmCoreImplServletsReferenceSearchServlet', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmCoreImplServletsReferenceSearchServlet', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmCoreImplServletsReferenceSearchServlet', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmCoreImplServletsReferenceSearchServlet', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqWcmCoreImplServletsReferenceSearchServlet', 'referencesearchservlet.maxReferencesPerPage') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmCoreImplServletsReferenceSearchServlet', 'referencesearchservlet.maxPages') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmCoreImplServletsThumbnailServlet', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmCoreImplServletsThumbnailServlet', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmCoreImplServletsThumbnailServlet', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmCoreImplServletsThumbnailServlet', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmCoreImplServletsThumbnailServlet', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmCoreImplServletsThumbnailServlet', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqWcmCoreImplServletsThumbnailServlet', 'workspace') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmCoreImplServletsThumbnailServlet', 'dimensions') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqWcmCoreImplUtilsDefaultPageNameValidator', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmCoreImplUtilsDefaultPageNameValidator', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmCoreImplUtilsDefaultPageNameValidator', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmCoreImplUtilsDefaultPageNameValidator', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmCoreImplUtilsDefaultPageNameValidator', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmCoreImplUtilsDefaultPageNameValidator', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqWcmCoreImplUtilsDefaultPageNameValidator', 'nonValidChars') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmCoreImplVariantsPageVariantsProviderImpl', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmCoreImplVariantsPageVariantsProviderImpl', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmCoreImplVariantsPageVariantsProviderImpl', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmCoreImplVariantsPageVariantsProviderImpl', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmCoreImplVariantsPageVariantsProviderImpl', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmCoreImplVariantsPageVariantsProviderImpl', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqWcmCoreImplVariantsPageVariantsProviderImpl', 'default.externalizer.domain') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmCoreImplVersionManagerImpl', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmCoreImplVersionManagerImpl', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmCoreImplVersionManagerImpl', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmCoreImplVersionManagerImpl', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmCoreImplVersionManagerImpl', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmCoreImplVersionManagerImpl', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqWcmCoreImplVersionManagerImpl', 'versionmanager.createVersionOnActivation') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmCoreImplVersionManagerImpl', 'versionmanager.purgingEnabled') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmCoreImplVersionManagerImpl', 'versionmanager.purgePaths') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqWcmCoreImplVersionManagerImpl', 'versionmanager.ivPaths') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqWcmCoreImplVersionManagerImpl', 'versionmanager.maxAgeDays') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmCoreImplVersionManagerImpl', 'versionmanager.maxNumberVersions') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmCoreImplVersionManagerImpl', 'versionmanager.minNumberVersions') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmCoreImplVersionPurgeTask', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmCoreImplVersionPurgeTask', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmCoreImplVersionPurgeTask', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmCoreImplVersionPurgeTask', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmCoreImplVersionPurgeTask', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmCoreImplVersionPurgeTask', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqWcmCoreImplVersionPurgeTask', 'versionpurge.paths') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqWcmCoreImplVersionPurgeTask', 'versionpurge.recursive') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmCoreImplVersionPurgeTask', 'versionpurge.maxVersions') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmCoreImplVersionPurgeTask', 'versionpurge.minVersions') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmCoreImplVersionPurgeTask', 'versionpurge.maxAgeDays') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmCoreImplWCMDebugFilter', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmCoreImplWCMDebugFilter', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmCoreImplWCMDebugFilter', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmCoreImplWCMDebugFilter', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmCoreImplWCMDebugFilter', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmCoreImplWCMDebugFilter', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqWcmCoreImplWCMDebugFilter', 'wcmdbgfilter.enabled') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmCoreImplWCMDebugFilter', 'wcmdbgfilter.jspDebug') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmCoreImplWCMDeveloperModeFilter', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmCoreImplWCMDeveloperModeFilter', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmCoreImplWCMDeveloperModeFilter', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmCoreImplWCMDeveloperModeFilter', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmCoreImplWCMDeveloperModeFilter', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmCoreImplWCMDeveloperModeFilter', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqWcmCoreImplWCMDeveloperModeFilter', 'wcmdevmodefilter.enabled') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmCoreImplWarpTimeWarpFilter', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmCoreImplWarpTimeWarpFilter', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmCoreImplWarpTimeWarpFilter', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmCoreImplWarpTimeWarpFilter', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmCoreImplWarpTimeWarpFilter', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmCoreImplWarpTimeWarpFilter', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqWcmCoreImplWarpTimeWarpFilter', 'filter.order') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmCoreImplWarpTimeWarpFilter', 'filter.scope') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmCoreMvtMVTStatisticsImpl', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmCoreMvtMVTStatisticsImpl', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmCoreMvtMVTStatisticsImpl', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmCoreMvtMVTStatisticsImpl', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmCoreMvtMVTStatisticsImpl', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmCoreMvtMVTStatisticsImpl', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqWcmCoreMvtMVTStatisticsImpl', 'mvtstatistics.trackingurl') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmCoreStatsPageViewStatisticsImpl', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmCoreStatsPageViewStatisticsImpl', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmCoreStatsPageViewStatisticsImpl', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmCoreStatsPageViewStatisticsImpl', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmCoreStatsPageViewStatisticsImpl', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmCoreStatsPageViewStatisticsImpl', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqWcmCoreStatsPageViewStatisticsImpl', 'pageviewstatistics.trackingurl') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmCoreStatsPageViewStatisticsImpl', 'pageviewstatistics.trackingscript.enabled') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmCoreWCMRequestFilter', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmCoreWCMRequestFilter', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmCoreWCMRequestFilter', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmCoreWCMRequestFilter', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmCoreWCMRequestFilter', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmCoreWCMRequestFilter', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqWcmCoreWCMRequestFilter', 'wcmfilter.mode') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmDesignimporterDesignPackageImporter', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmDesignimporterDesignPackageImporter', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmDesignimporterDesignPackageImporter', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmDesignimporterDesignPackageImporter', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmDesignimporterDesignPackageImporter', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmDesignimporterDesignPackageImporter', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqWcmDesignimporterDesignPackageImporter', 'extract.filter') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqWcmDesignimporterImplCanvasBuilderImpl', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmDesignimporterImplCanvasBuilderImpl', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmDesignimporterImplCanvasBuilderImpl', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmDesignimporterImplCanvasBuilderImpl', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmDesignimporterImplCanvasBuilderImpl', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmDesignimporterImplCanvasBuilderImpl', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqWcmDesignimporterImplCanvasBuilderImpl', 'filepattern') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmDesignimporterImplCanvasBuilderImpl', 'build.page.nodes') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmDesignimporterImplCanvasBuilderImpl', 'build.client.libs') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmDesignimporterImplCanvasBuilderImpl', 'build.canvas.component') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmDesignimporterImplCanvasPageDeleteHandler', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmDesignimporterImplCanvasPageDeleteHandler', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmDesignimporterImplCanvasPageDeleteHandler', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmDesignimporterImplCanvasPageDeleteHandler', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmDesignimporterImplCanvasPageDeleteHandler', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmDesignimporterImplCanvasPageDeleteHandler', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqWcmDesignimporterImplCanvasPageDeleteHandler', 'minThreadPoolSize') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmDesignimporterImplCanvasPageDeleteHandler', 'maxThreadPoolSize') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmDesignimporterImplEntryPreprocessorImpl', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmDesignimporterImplEntryPreprocessorImpl', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmDesignimporterImplEntryPreprocessorImpl', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmDesignimporterImplEntryPreprocessorImpl', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmDesignimporterImplEntryPreprocessorImpl', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmDesignimporterImplEntryPreprocessorImpl', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqWcmDesignimporterImplEntryPreprocessorImpl', 'search.pattern') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmDesignimporterImplEntryPreprocessorImpl', 'replace.pattern') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmDesignimporterImplMobileCanvasBuilderImpl', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmDesignimporterImplMobileCanvasBuilderImpl', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmDesignimporterImplMobileCanvasBuilderImpl', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmDesignimporterImplMobileCanvasBuilderImpl', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmDesignimporterImplMobileCanvasBuilderImpl', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmDesignimporterImplMobileCanvasBuilderImpl', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqWcmDesignimporterImplMobileCanvasBuilderImpl', 'filepattern') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmDesignimporterImplMobileCanvasBuilderImpl', 'device.groups') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqWcmDesignimporterImplMobileCanvasBuilderImpl', 'build.page.nodes') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmDesignimporterImplMobileCanvasBuilderImpl', 'build.client.libs') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmDesignimporterImplMobileCanvasBuilderImpl', 'build.canvas.component') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmDesignimporterParserTaghandlersFactoryCanvasCompone', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmDesignimporterParserTaghandlersFactoryCanvasCompone', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmDesignimporterParserTaghandlersFactoryCanvasCompone', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmDesignimporterParserTaghandlersFactoryCanvasCompone', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmDesignimporterParserTaghandlersFactoryCanvasCompone', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmDesignimporterParserTaghandlersFactoryCanvasCompone', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqWcmDesignimporterParserTaghandlersFactoryCanvasCompone', 'service.ranking') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmDesignimporterParserTaghandlersFactoryCanvasCompone', 'tagpattern') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmDesignimporterParserTaghandlersFactoryDefaultCompon', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmDesignimporterParserTaghandlersFactoryDefaultCompon', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmDesignimporterParserTaghandlersFactoryDefaultCompon', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmDesignimporterParserTaghandlersFactoryDefaultCompon', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmDesignimporterParserTaghandlersFactoryDefaultCompon', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmDesignimporterParserTaghandlersFactoryDefaultCompon', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqWcmDesignimporterParserTaghandlersFactoryDefaultCompon', 'service.ranking') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmDesignimporterParserTaghandlersFactoryDefaultCompon', 'tagpattern') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmDesignimporterParserTaghandlersFactoryDefaultTagHan', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmDesignimporterParserTaghandlersFactoryDefaultTagHan', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmDesignimporterParserTaghandlersFactoryDefaultTagHan', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmDesignimporterParserTaghandlersFactoryDefaultTagHan', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmDesignimporterParserTaghandlersFactoryDefaultTagHan', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmDesignimporterParserTaghandlersFactoryDefaultTagHan', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqWcmDesignimporterParserTaghandlersFactoryDefaultTagHan', 'service.ranking') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmDesignimporterParserTaghandlersFactoryDefaultTagHan', 'tagpattern') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmDesignimporterParserTaghandlersFactoryHeadTagHandle', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmDesignimporterParserTaghandlersFactoryHeadTagHandle', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmDesignimporterParserTaghandlersFactoryHeadTagHandle', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmDesignimporterParserTaghandlersFactoryHeadTagHandle', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmDesignimporterParserTaghandlersFactoryHeadTagHandle', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmDesignimporterParserTaghandlersFactoryHeadTagHandle', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqWcmDesignimporterParserTaghandlersFactoryHeadTagHandle', 'service.ranking') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmDesignimporterParserTaghandlersFactoryHeadTagHandle', 'tagpattern') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmDesignimporterParserTaghandlersFactoryIFrameTagHand', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmDesignimporterParserTaghandlersFactoryIFrameTagHand', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmDesignimporterParserTaghandlersFactoryIFrameTagHand', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmDesignimporterParserTaghandlersFactoryIFrameTagHand', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmDesignimporterParserTaghandlersFactoryIFrameTagHand', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmDesignimporterParserTaghandlersFactoryIFrameTagHand', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqWcmDesignimporterParserTaghandlersFactoryIFrameTagHand', 'service.ranking') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmDesignimporterParserTaghandlersFactoryIFrameTagHand', 'tagpattern') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmDesignimporterParserTaghandlersFactoryImageComponen', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmDesignimporterParserTaghandlersFactoryImageComponen', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmDesignimporterParserTaghandlersFactoryImageComponen', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmDesignimporterParserTaghandlersFactoryImageComponen', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmDesignimporterParserTaghandlersFactoryImageComponen', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmDesignimporterParserTaghandlersFactoryImageComponen', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqWcmDesignimporterParserTaghandlersFactoryImageComponen', 'service.ranking') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmDesignimporterParserTaghandlersFactoryImageComponen', 'tagpattern') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmDesignimporterParserTaghandlersFactoryImageComponen', 'component.resourceType') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmDesignimporterParserTaghandlersFactoryImgTagHandler', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmDesignimporterParserTaghandlersFactoryImgTagHandler', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmDesignimporterParserTaghandlersFactoryImgTagHandler', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmDesignimporterParserTaghandlersFactoryImgTagHandler', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmDesignimporterParserTaghandlersFactoryImgTagHandler', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmDesignimporterParserTaghandlersFactoryImgTagHandler', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqWcmDesignimporterParserTaghandlersFactoryImgTagHandler', 'service.ranking') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmDesignimporterParserTaghandlersFactoryImgTagHandler', 'tagpattern') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmDesignimporterParserTaghandlersFactoryInlineScriptT', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmDesignimporterParserTaghandlersFactoryInlineScriptT', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmDesignimporterParserTaghandlersFactoryInlineScriptT', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmDesignimporterParserTaghandlersFactoryInlineScriptT', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmDesignimporterParserTaghandlersFactoryInlineScriptT', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmDesignimporterParserTaghandlersFactoryInlineScriptT', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqWcmDesignimporterParserTaghandlersFactoryInlineScriptT', 'service.ranking') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmDesignimporterParserTaghandlersFactoryInlineScriptT', 'tagpattern') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmDesignimporterParserTaghandlersFactoryLinkTagHandle', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmDesignimporterParserTaghandlersFactoryLinkTagHandle', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmDesignimporterParserTaghandlersFactoryLinkTagHandle', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmDesignimporterParserTaghandlersFactoryLinkTagHandle', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmDesignimporterParserTaghandlersFactoryLinkTagHandle', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmDesignimporterParserTaghandlersFactoryLinkTagHandle', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqWcmDesignimporterParserTaghandlersFactoryLinkTagHandle', 'service.ranking') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmDesignimporterParserTaghandlersFactoryLinkTagHandle', 'tagpattern') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmDesignimporterParserTaghandlersFactoryMetaTagHandle', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmDesignimporterParserTaghandlersFactoryMetaTagHandle', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmDesignimporterParserTaghandlersFactoryMetaTagHandle', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmDesignimporterParserTaghandlersFactoryMetaTagHandle', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmDesignimporterParserTaghandlersFactoryMetaTagHandle', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmDesignimporterParserTaghandlersFactoryMetaTagHandle', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqWcmDesignimporterParserTaghandlersFactoryMetaTagHandle', 'service.ranking') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmDesignimporterParserTaghandlersFactoryMetaTagHandle', 'tagpattern') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmDesignimporterParserTaghandlersFactoryNonScriptTagH', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmDesignimporterParserTaghandlersFactoryNonScriptTagH', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmDesignimporterParserTaghandlersFactoryNonScriptTagH', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmDesignimporterParserTaghandlersFactoryNonScriptTagH', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmDesignimporterParserTaghandlersFactoryNonScriptTagH', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmDesignimporterParserTaghandlersFactoryNonScriptTagH', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqWcmDesignimporterParserTaghandlersFactoryNonScriptTagH', 'service.ranking') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmDesignimporterParserTaghandlersFactoryNonScriptTagH', 'tagpattern') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmDesignimporterParserTaghandlersFactoryParsysCompone', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmDesignimporterParserTaghandlersFactoryParsysCompone', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmDesignimporterParserTaghandlersFactoryParsysCompone', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmDesignimporterParserTaghandlersFactoryParsysCompone', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmDesignimporterParserTaghandlersFactoryParsysCompone', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmDesignimporterParserTaghandlersFactoryParsysCompone', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqWcmDesignimporterParserTaghandlersFactoryParsysCompone', 'service.ranking') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmDesignimporterParserTaghandlersFactoryParsysCompone', 'tagpattern') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmDesignimporterParserTaghandlersFactoryParsysCompone', 'component.resourceType') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmDesignimporterParserTaghandlersFactoryScriptTagHand', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmDesignimporterParserTaghandlersFactoryScriptTagHand', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmDesignimporterParserTaghandlersFactoryScriptTagHand', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmDesignimporterParserTaghandlersFactoryScriptTagHand', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmDesignimporterParserTaghandlersFactoryScriptTagHand', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmDesignimporterParserTaghandlersFactoryScriptTagHand', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqWcmDesignimporterParserTaghandlersFactoryScriptTagHand', 'service.ranking') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmDesignimporterParserTaghandlersFactoryScriptTagHand', 'tagpattern') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmDesignimporterParserTaghandlersFactoryStyleTagHandl', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmDesignimporterParserTaghandlersFactoryStyleTagHandl', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmDesignimporterParserTaghandlersFactoryStyleTagHandl', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmDesignimporterParserTaghandlersFactoryStyleTagHandl', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmDesignimporterParserTaghandlersFactoryStyleTagHandl', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmDesignimporterParserTaghandlersFactoryStyleTagHandl', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqWcmDesignimporterParserTaghandlersFactoryStyleTagHandl', 'service.ranking') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmDesignimporterParserTaghandlersFactoryStyleTagHandl', 'tagpattern') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmDesignimporterParserTaghandlersFactoryTextComponent', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmDesignimporterParserTaghandlersFactoryTextComponent', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmDesignimporterParserTaghandlersFactoryTextComponent', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmDesignimporterParserTaghandlersFactoryTextComponent', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmDesignimporterParserTaghandlersFactoryTextComponent', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmDesignimporterParserTaghandlersFactoryTextComponent', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqWcmDesignimporterParserTaghandlersFactoryTextComponent', 'service.ranking') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmDesignimporterParserTaghandlersFactoryTextComponent', 'tagpattern') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmDesignimporterParserTaghandlersFactoryTextComponent', 'component.resourceType') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmDesignimporterParserTaghandlersFactoryTitleComponen', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmDesignimporterParserTaghandlersFactoryTitleComponen', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmDesignimporterParserTaghandlersFactoryTitleComponen', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmDesignimporterParserTaghandlersFactoryTitleComponen', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmDesignimporterParserTaghandlersFactoryTitleComponen', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmDesignimporterParserTaghandlersFactoryTitleComponen', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqWcmDesignimporterParserTaghandlersFactoryTitleComponen', 'service.ranking') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmDesignimporterParserTaghandlersFactoryTitleComponen', 'tagpattern') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmDesignimporterParserTaghandlersFactoryTitleComponen', 'component.resourceType') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmDesignimporterParserTaghandlersFactoryTitleTagHandl', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmDesignimporterParserTaghandlersFactoryTitleTagHandl', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmDesignimporterParserTaghandlersFactoryTitleTagHandl', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmDesignimporterParserTaghandlersFactoryTitleTagHandl', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmDesignimporterParserTaghandlersFactoryTitleTagHandl', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmDesignimporterParserTaghandlersFactoryTitleTagHandl', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqWcmDesignimporterParserTaghandlersFactoryTitleTagHandl', 'service.ranking') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmDesignimporterParserTaghandlersFactoryTitleTagHandl', 'tagpattern') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmFoundationFormsImplFormChooserServlet', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmFoundationFormsImplFormChooserServlet', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmFoundationFormsImplFormChooserServlet', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmFoundationFormsImplFormChooserServlet', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmFoundationFormsImplFormChooserServlet', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmFoundationFormsImplFormChooserServlet', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqWcmFoundationFormsImplFormChooserServlet', 'service.name') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmFoundationFormsImplFormChooserServlet', 'sling.servlet.resourceTypes') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmFoundationFormsImplFormChooserServlet', 'sling.servlet.selectors') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmFoundationFormsImplFormChooserServlet', 'sling.servlet.methods') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqWcmFoundationFormsImplFormChooserServlet', 'forms.formchooserservlet.advansesearch.require') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmFoundationFormsImplFormParagraphPostProcessor', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmFoundationFormsImplFormParagraphPostProcessor', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmFoundationFormsImplFormParagraphPostProcessor', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmFoundationFormsImplFormParagraphPostProcessor', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmFoundationFormsImplFormParagraphPostProcessor', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmFoundationFormsImplFormParagraphPostProcessor', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqWcmFoundationFormsImplFormParagraphPostProcessor', 'forms.formparagraphpostprocessor.enabled') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmFoundationFormsImplFormParagraphPostProcessor', 'forms.formparagraphpostprocessor.formresourcetypes') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqWcmFoundationFormsImplFormsHandlingServlet', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmFoundationFormsImplFormsHandlingServlet', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmFoundationFormsImplFormsHandlingServlet', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmFoundationFormsImplFormsHandlingServlet', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmFoundationFormsImplFormsHandlingServlet', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmFoundationFormsImplFormsHandlingServlet', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqWcmFoundationFormsImplFormsHandlingServlet', 'name.whitelist') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmFoundationFormsImplFormsHandlingServlet', 'allow.expressions') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmFoundationFormsImplMailServlet', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmFoundationFormsImplMailServlet', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmFoundationFormsImplMailServlet', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmFoundationFormsImplMailServlet', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmFoundationFormsImplMailServlet', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmFoundationFormsImplMailServlet', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqWcmFoundationFormsImplMailServlet', 'sling.servlet.resourceTypes') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmFoundationFormsImplMailServlet', 'sling.servlet.selectors') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmFoundationFormsImplMailServlet', 'resource.whitelist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqWcmFoundationFormsImplMailServlet', 'resource.blacklist') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmFoundationImplAdaptiveImageComponentServlet', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmFoundationImplAdaptiveImageComponentServlet', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmFoundationImplAdaptiveImageComponentServlet', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmFoundationImplAdaptiveImageComponentServlet', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmFoundationImplAdaptiveImageComponentServlet', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmFoundationImplAdaptiveImageComponentServlet', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqWcmFoundationImplAdaptiveImageComponentServlet', 'adapt.supported.widths') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqWcmFoundationImplHTTPAuthHandler', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmFoundationImplHTTPAuthHandler', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmFoundationImplHTTPAuthHandler', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmFoundationImplHTTPAuthHandler', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmFoundationImplHTTPAuthHandler', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmFoundationImplHTTPAuthHandler', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqWcmFoundationImplHTTPAuthHandler', 'path') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmFoundationImplHTTPAuthHandler', 'auth.http.nologin') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmFoundationImplHTTPAuthHandler', 'auth.http.realm') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmFoundationImplHTTPAuthHandler', 'auth.default.loginpage') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmFoundationImplHTTPAuthHandler', 'auth.cred.form') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqWcmFoundationImplHTTPAuthHandler', 'auth.cred.utf8') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqWcmFoundationImplPageImpressionsTracker', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmFoundationImplPageImpressionsTracker', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmFoundationImplPageImpressionsTracker', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmFoundationImplPageImpressionsTracker', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmFoundationImplPageImpressionsTracker', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmFoundationImplPageImpressionsTracker', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqWcmFoundationImplPageImpressionsTracker', 'sling.auth.requirements') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmFoundationImplPageRedirectServlet', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmFoundationImplPageRedirectServlet', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmFoundationImplPageRedirectServlet', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmFoundationImplPageRedirectServlet', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmFoundationImplPageRedirectServlet', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmFoundationImplPageRedirectServlet', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqWcmFoundationImplPageRedirectServlet', 'excluded.resource.types') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqWcmFoundationSecurityImplDefaultAttachmentTypeBlacklist', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmFoundationSecurityImplDefaultAttachmentTypeBlacklist', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmFoundationSecurityImplDefaultAttachmentTypeBlacklist', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmFoundationSecurityImplDefaultAttachmentTypeBlacklist', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmFoundationSecurityImplDefaultAttachmentTypeBlacklist', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmFoundationSecurityImplDefaultAttachmentTypeBlacklist', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqWcmFoundationSecurityImplDefaultAttachmentTypeBlacklist', 'default.attachment.type.blacklist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqWcmFoundationSecurityImplDefaultAttachmentTypeBlacklist', 'baseline.attachment.type.blacklist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqWcmFoundationSecurityImplSaferSlingPostValidatorImpl', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmFoundationSecurityImplSaferSlingPostValidatorImpl', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmFoundationSecurityImplSaferSlingPostValidatorImpl', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmFoundationSecurityImplSaferSlingPostValidatorImpl', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmFoundationSecurityImplSaferSlingPostValidatorImpl', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmFoundationSecurityImplSaferSlingPostValidatorImpl', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqWcmFoundationSecurityImplSaferSlingPostValidatorImpl', 'parameter.whitelist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqWcmFoundationSecurityImplSaferSlingPostValidatorImpl', 'parameter.whitelist.prefixes') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqWcmFoundationSecurityImplSaferSlingPostValidatorImpl', 'binary.parameter.whitelist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqWcmFoundationSecurityImplSaferSlingPostValidatorImpl', 'modifier.whitelist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqWcmFoundationSecurityImplSaferSlingPostValidatorImpl', 'operation.whitelist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqWcmFoundationSecurityImplSaferSlingPostValidatorImpl', 'operation.whitelist.prefixes') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqWcmFoundationSecurityImplSaferSlingPostValidatorImpl', 'typehint.whitelist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqWcmFoundationSecurityImplSaferSlingPostValidatorImpl', 'resourcetype.whitelist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqWcmMobileCoreImplDeviceDeviceInfoTransformerFactory', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmMobileCoreImplDeviceDeviceInfoTransformerFactory', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmMobileCoreImplDeviceDeviceInfoTransformerFactory', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmMobileCoreImplDeviceDeviceInfoTransformerFactory', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmMobileCoreImplDeviceDeviceInfoTransformerFactory', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmMobileCoreImplDeviceDeviceInfoTransformerFactory', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqWcmMobileCoreImplDeviceDeviceInfoTransformerFactory', 'device.info.transformer.enabled') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmMobileCoreImplDeviceDeviceInfoTransformerFactory', 'device.info.transformer.css.style') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmMobileCoreImplRedirectRedirectFilter', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmMobileCoreImplRedirectRedirectFilter', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmMobileCoreImplRedirectRedirectFilter', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmMobileCoreImplRedirectRedirectFilter', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmMobileCoreImplRedirectRedirectFilter', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmMobileCoreImplRedirectRedirectFilter', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqWcmMobileCoreImplRedirectRedirectFilter', 'redirect.enabled') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmMobileCoreImplRedirectRedirectFilter', 'redirect.stats.enabled') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmMobileCoreImplRedirectRedirectFilter', 'redirect.extensions') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqWcmMobileCoreImplRedirectRedirectFilter', 'redirect.paths') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqWcmMsmImplActionsContentCopyActionFactory', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmMsmImplActionsContentCopyActionFactory', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmMsmImplActionsContentCopyActionFactory', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmMsmImplActionsContentCopyActionFactory', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmMsmImplActionsContentCopyActionFactory', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmMsmImplActionsContentCopyActionFactory', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqWcmMsmImplActionsContentCopyActionFactory', 'cq.wcm.msm.action.excludednodetypes') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqWcmMsmImplActionsContentCopyActionFactory', 'cq.wcm.msm.action.excludedparagraphitems') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqWcmMsmImplActionsContentCopyActionFactory', 'cq.wcm.msm.action.excludedprops') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqWcmMsmImplActionsContentCopyActionFactory', 'contentcopyaction.order.style') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmMsmImplActionsContentDeleteActionFactory', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmMsmImplActionsContentDeleteActionFactory', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmMsmImplActionsContentDeleteActionFactory', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmMsmImplActionsContentDeleteActionFactory', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmMsmImplActionsContentDeleteActionFactory', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmMsmImplActionsContentDeleteActionFactory', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqWcmMsmImplActionsContentDeleteActionFactory', 'cq.wcm.msm.action.excludednodetypes') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqWcmMsmImplActionsContentDeleteActionFactory', 'cq.wcm.msm.action.excludedparagraphitems') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqWcmMsmImplActionsContentDeleteActionFactory', 'cq.wcm.msm.action.excludedprops') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqWcmMsmImplActionsContentUpdateActionFactory', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmMsmImplActionsContentUpdateActionFactory', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmMsmImplActionsContentUpdateActionFactory', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmMsmImplActionsContentUpdateActionFactory', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmMsmImplActionsContentUpdateActionFactory', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmMsmImplActionsContentUpdateActionFactory', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqWcmMsmImplActionsContentUpdateActionFactory', 'cq.wcm.msm.action.excludednodetypes') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqWcmMsmImplActionsContentUpdateActionFactory', 'cq.wcm.msm.action.excludedparagraphitems') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqWcmMsmImplActionsContentUpdateActionFactory', 'cq.wcm.msm.action.excludedprops') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqWcmMsmImplActionsContentUpdateActionFactory', 'cq.wcm.msm.action.ignoredMixin') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqWcmMsmImplActionsOrderChildrenActionFactory', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmMsmImplActionsOrderChildrenActionFactory', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmMsmImplActionsOrderChildrenActionFactory', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmMsmImplActionsOrderChildrenActionFactory', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmMsmImplActionsOrderChildrenActionFactory', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmMsmImplActionsOrderChildrenActionFactory', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqWcmMsmImplActionsOrderChildrenActionFactory', 'cq.wcm.msm.action.excludednodetypes') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqWcmMsmImplActionsOrderChildrenActionFactory', 'cq.wcm.msm.action.excludedparagraphitems') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqWcmMsmImplActionsOrderChildrenActionFactory', 'cq.wcm.msm.action.excludedprops') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqWcmMsmImplActionsPageMoveActionFactory', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmMsmImplActionsPageMoveActionFactory', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmMsmImplActionsPageMoveActionFactory', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmMsmImplActionsPageMoveActionFactory', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmMsmImplActionsPageMoveActionFactory', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmMsmImplActionsPageMoveActionFactory', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqWcmMsmImplActionsPageMoveActionFactory', 'cq.wcm.msm.action.excludednodetypes') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqWcmMsmImplActionsPageMoveActionFactory', 'cq.wcm.msm.action.excludedparagraphitems') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqWcmMsmImplActionsPageMoveActionFactory', 'cq.wcm.msm.action.excludedprops') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqWcmMsmImplActionsPageMoveActionFactory', 'cq.wcm.msm.impl.actions.pagemove.prop_referenceUpdate') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmMsmImplActionsReferencesUpdateActionFactory', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmMsmImplActionsReferencesUpdateActionFactory', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmMsmImplActionsReferencesUpdateActionFactory', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmMsmImplActionsReferencesUpdateActionFactory', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmMsmImplActionsReferencesUpdateActionFactory', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmMsmImplActionsReferencesUpdateActionFactory', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqWcmMsmImplActionsReferencesUpdateActionFactory', 'cq.wcm.msm.action.excludednodetypes') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqWcmMsmImplActionsReferencesUpdateActionFactory', 'cq.wcm.msm.action.excludedparagraphitems') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqWcmMsmImplActionsReferencesUpdateActionFactory', 'cq.wcm.msm.action.excludedprops') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqWcmMsmImplActionsReferencesUpdateActionFactory', 'cq.wcm.msm.impl.action.referencesupdate.prop_updateNested') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmMsmImplActionsVersionCopyActionFactory', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmMsmImplActionsVersionCopyActionFactory', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmMsmImplActionsVersionCopyActionFactory', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmMsmImplActionsVersionCopyActionFactory', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmMsmImplActionsVersionCopyActionFactory', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmMsmImplActionsVersionCopyActionFactory', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqWcmMsmImplActionsVersionCopyActionFactory', 'cq.wcm.msm.action.excludednodetypes') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqWcmMsmImplActionsVersionCopyActionFactory', 'cq.wcm.msm.action.excludedparagraphitems') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqWcmMsmImplActionsVersionCopyActionFactory', 'cq.wcm.msm.action.excludedprops') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqWcmMsmImplLiveRelationshipManagerImpl', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmMsmImplLiveRelationshipManagerImpl', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmMsmImplLiveRelationshipManagerImpl', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmMsmImplLiveRelationshipManagerImpl', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmMsmImplLiveRelationshipManagerImpl', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmMsmImplLiveRelationshipManagerImpl', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqWcmMsmImplLiveRelationshipManagerImpl', 'liverelationshipmgr.relationsconfig.default') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmMsmImplRolloutManagerImpl', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmMsmImplRolloutManagerImpl', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmMsmImplRolloutManagerImpl', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmMsmImplRolloutManagerImpl', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmMsmImplRolloutManagerImpl', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmMsmImplRolloutManagerImpl', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqWcmMsmImplRolloutManagerImpl', 'event.filter') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmMsmImplRolloutManagerImpl', 'rolloutmgr.excludedprops.default') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqWcmMsmImplRolloutManagerImpl', 'rolloutmgr.excludedparagraphprops.default') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqWcmMsmImplRolloutManagerImpl', 'rolloutmgr.excludednodetypes.default') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqWcmMsmImplRolloutManagerImpl', 'rolloutmgr.threadpool.maxsize') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmMsmImplRolloutManagerImpl', 'rolloutmgr.threadpool.maxshutdowntime') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmMsmImplRolloutManagerImpl', 'rolloutmgr.threadpool.priority') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmMsmImplRolloutManagerImpl', 'rolloutmgr.commit.size') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmMsmImplRolloutManagerImpl', 'rolloutmgr.conflicthandling.enabled') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmMsmImplServletsAuditLogServlet', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmMsmImplServletsAuditLogServlet', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmMsmImplServletsAuditLogServlet', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmMsmImplServletsAuditLogServlet', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmMsmImplServletsAuditLogServlet', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmMsmImplServletsAuditLogServlet', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqWcmMsmImplServletsAuditLogServlet', 'auditlogservlet.default.events.count') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmMsmImplServletsAuditLogServlet', 'auditlogservlet.default.path') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmNotificationEmailImplEmailChannel', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmNotificationEmailImplEmailChannel', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmNotificationEmailImplEmailChannel', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmNotificationEmailImplEmailChannel', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmNotificationEmailImplEmailChannel', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmNotificationEmailImplEmailChannel', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqWcmNotificationEmailImplEmailChannel', 'email.from') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmNotificationImplNotificationManagerImpl', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmNotificationImplNotificationManagerImpl', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmNotificationImplNotificationManagerImpl', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmNotificationImplNotificationManagerImpl', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmNotificationImplNotificationManagerImpl', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmNotificationImplNotificationManagerImpl', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqWcmNotificationImplNotificationManagerImpl', 'event.topics') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqWcmScriptingImplBVPManager', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmScriptingImplBVPManager', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmScriptingImplBVPManager', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmScriptingImplBVPManager', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmScriptingImplBVPManager', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmScriptingImplBVPManager', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqWcmScriptingImplBVPManager', 'com.day.cq.wcm.scripting.bvp.script.engines') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqWcmUndoUndoConfig', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmUndoUndoConfig', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmUndoUndoConfig', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmUndoUndoConfig', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmUndoUndoConfig', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmUndoUndoConfig', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqWcmUndoUndoConfig', 'cq.wcm.undo.enabled') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmUndoUndoConfig', 'cq.wcm.undo.path') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmUndoUndoConfig', 'cq.wcm.undo.validity') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmUndoUndoConfig', 'cq.wcm.undo.steps') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmUndoUndoConfig', 'cq.wcm.undo.persistence') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmUndoUndoConfig', 'cq.wcm.undo.persistence.mode') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmUndoUndoConfig', 'cq.wcm.undo.markermode') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmUndoUndoConfig', 'cq.wcm.undo.whitelist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqWcmUndoUndoConfig', 'cq.wcm.undo.blacklist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqWcmWebservicesupportImplReplicationEventListener', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmWebservicesupportImplReplicationEventListener', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmWebservicesupportImplReplicationEventListener', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmWebservicesupportImplReplicationEventListener', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmWebservicesupportImplReplicationEventListener', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmWebservicesupportImplReplicationEventListener', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqWcmWebservicesupportImplReplicationEventListener', 'Flush agents') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqWcmWorkflowImplWcmWorkflowServiceImpl', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmWorkflowImplWcmWorkflowServiceImpl', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmWorkflowImplWcmWorkflowServiceImpl', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmWorkflowImplWcmWorkflowServiceImpl', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmWorkflowImplWcmWorkflowServiceImpl', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmWorkflowImplWcmWorkflowServiceImpl', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqWcmWorkflowImplWcmWorkflowServiceImpl', 'event.filter') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmWorkflowImplWcmWorkflowServiceImpl', 'minThreadPoolSize') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmWorkflowImplWcmWorkflowServiceImpl', 'maxThreadPoolSize') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmWorkflowImplWcmWorkflowServiceImpl', 'cq.wcm.workflow.terminate.on.activate') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmWorkflowImplWcmWorkflowServiceImpl', 'cq.wcm.worklfow.terminate.exclusion.list') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqWcmWorkflowImplWorkflowPackageInfoProvider', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmWorkflowImplWorkflowPackageInfoProvider', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmWorkflowImplWorkflowPackageInfoProvider', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmWorkflowImplWorkflowPackageInfoProvider', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmWorkflowImplWorkflowPackageInfoProvider', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqWcmWorkflowImplWorkflowPackageInfoProvider', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqWcmWorkflowImplWorkflowPackageInfoProvider', 'workflowpackageinfoprovider.filter') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqWcmWorkflowImplWorkflowPackageInfoProvider', 'workflowpackageinfoprovider.filter.rootpath') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqWidgetImplHtmlLibraryManagerImpl', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqWidgetImplHtmlLibraryManagerImpl', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqWidgetImplHtmlLibraryManagerImpl', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqWidgetImplHtmlLibraryManagerImpl', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqWidgetImplHtmlLibraryManagerImpl', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqWidgetImplHtmlLibraryManagerImpl', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqWidgetImplHtmlLibraryManagerImpl', 'htmllibmanager.clientmanager') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqWidgetImplHtmlLibraryManagerImpl', 'htmllibmanager.debug') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqWidgetImplHtmlLibraryManagerImpl', 'htmllibmanager.debug.console') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqWidgetImplHtmlLibraryManagerImpl', 'htmllibmanager.debug.init.js') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqWidgetImplHtmlLibraryManagerImpl', 'htmllibmanager.defaultthemename') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqWidgetImplHtmlLibraryManagerImpl', 'htmllibmanager.defaultuserthemename') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqWidgetImplHtmlLibraryManagerImpl', 'htmllibmanager.firebuglite.path') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqWidgetImplHtmlLibraryManagerImpl', 'htmllibmanager.forceCQUrlInfo') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqWidgetImplHtmlLibraryManagerImpl', 'htmllibmanager.gzip') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqWidgetImplHtmlLibraryManagerImpl', 'htmllibmanager.maxage') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComDayCqWidgetImplHtmlLibraryManagerImpl', 'htmllibmanager.maxDataUriSize') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('ComDayCqWidgetImplHtmlLibraryManagerImpl', 'htmllibmanager.minify') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqWidgetImplHtmlLibraryManagerImpl', 'htmllibmanager.path.list') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqWidgetImplHtmlLibraryManagerImpl', 'htmllibmanager.timing') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqWidgetImplWidgetExtensionProviderImpl', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqWidgetImplWidgetExtensionProviderImpl', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqWidgetImplWidgetExtensionProviderImpl', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqWidgetImplWidgetExtensionProviderImpl', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqWidgetImplWidgetExtensionProviderImpl', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqWidgetImplWidgetExtensionProviderImpl', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqWidgetImplWidgetExtensionProviderImpl', 'extendable.widgets') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqWidgetImplWidgetExtensionProviderImpl', 'widgetextensionprovider.debug') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqWorkflowImplEmailEMailNotificationService', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqWorkflowImplEmailEMailNotificationService', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqWorkflowImplEmailEMailNotificationService', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqWorkflowImplEmailEMailNotificationService', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqWorkflowImplEmailEMailNotificationService', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqWorkflowImplEmailEMailNotificationService', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqWorkflowImplEmailEMailNotificationService', 'from.address') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqWorkflowImplEmailEMailNotificationService', 'host.prefix') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqWorkflowImplEmailEMailNotificationService', 'notify.onabort') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqWorkflowImplEmailEMailNotificationService', 'notify.oncomplete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqWorkflowImplEmailEMailNotificationService', 'notify.oncontainercomplete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqWorkflowImplEmailEMailNotificationService', 'notify.useronly') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqWorkflowImplEmailTaskEMailNotificationService', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqWorkflowImplEmailTaskEMailNotificationService', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqWorkflowImplEmailTaskEMailNotificationService', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqWorkflowImplEmailTaskEMailNotificationService', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqWorkflowImplEmailTaskEMailNotificationService', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCqWorkflowImplEmailTaskEMailNotificationService', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCqWorkflowImplEmailTaskEMailNotificationService', 'notify.onupdate') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCqWorkflowImplEmailTaskEMailNotificationService', 'notify.oncomplete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCrxSecurityTokenImplImplTokenAuthenticationHandler', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCrxSecurityTokenImplImplTokenAuthenticationHandler', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCrxSecurityTokenImplImplTokenAuthenticationHandler', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCrxSecurityTokenImplImplTokenAuthenticationHandler', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCrxSecurityTokenImplImplTokenAuthenticationHandler', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCrxSecurityTokenImplImplTokenAuthenticationHandler', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCrxSecurityTokenImplImplTokenAuthenticationHandler', 'path') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCrxSecurityTokenImplImplTokenAuthenticationHandler', 'token.required.attr') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCrxSecurityTokenImplImplTokenAuthenticationHandler', 'token.alternate.url') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCrxSecurityTokenImplImplTokenAuthenticationHandler', 'token.encapsulated') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCrxSecurityTokenImplImplTokenAuthenticationHandler', 'skip.token.refresh') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCrxSecurityTokenImplTokenCleanupTask', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCrxSecurityTokenImplTokenCleanupTask', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCrxSecurityTokenImplTokenCleanupTask', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCrxSecurityTokenImplTokenCleanupTask', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCrxSecurityTokenImplTokenCleanupTask', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCrxSecurityTokenImplTokenCleanupTask', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('ComDayCrxSecurityTokenImplTokenCleanupTask', 'enable.token.cleanup.task') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('ComDayCrxSecurityTokenImplTokenCleanupTask', 'scheduler.expression') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('ComDayCrxSecurityTokenImplTokenCleanupTask', 'batch.size') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('GuideLocalizationService', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('GuideLocalizationService', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('GuideLocalizationService', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('GuideLocalizationService', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('GuideLocalizationService', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('GuideLocalizationService', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('GuideLocalizationService', 'supportedLocales') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('GuideLocalizationService', 'Localizable Properties') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('MessagingUserComponentFactory', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('MessagingUserComponentFactory', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('MessagingUserComponentFactory', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('MessagingUserComponentFactory', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('MessagingUserComponentFactory', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('MessagingUserComponentFactory', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('MessagingUserComponentFactory', 'priority') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('OrgApacheAriesJmxFrameworkStateConfig', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheAriesJmxFrameworkStateConfig', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheAriesJmxFrameworkStateConfig', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheAriesJmxFrameworkStateConfig', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheAriesJmxFrameworkStateConfig', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheAriesJmxFrameworkStateConfig', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('OrgApacheAriesJmxFrameworkStateConfig', 'attributeChangeNotificationEnabled') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheFelixEventadminImplEventAdmin', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheFelixEventadminImplEventAdmin', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheFelixEventadminImplEventAdmin', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheFelixEventadminImplEventAdmin', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheFelixEventadminImplEventAdmin', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheFelixEventadminImplEventAdmin', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('OrgApacheFelixEventadminImplEventAdmin', 'org.apache.felix.eventadmin.ThreadPoolSize') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('OrgApacheFelixEventadminImplEventAdmin', 'org.apache.felix.eventadmin.AsyncToSyncThreadRatio') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'float'},
            not_required
        ]
    };

request_param_info('OrgApacheFelixEventadminImplEventAdmin', 'org.apache.felix.eventadmin.Timeout') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('OrgApacheFelixEventadminImplEventAdmin', 'org.apache.felix.eventadmin.RequireTopic') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheFelixEventadminImplEventAdmin', 'org.apache.felix.eventadmin.IgnoreTimeout') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('OrgApacheFelixEventadminImplEventAdmin', 'org.apache.felix.eventadmin.IgnoreTopic') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('OrgApacheFelixHttp', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheFelixHttp', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheFelixHttp', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheFelixHttp', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheFelixHttp', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheFelixHttp', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('OrgApacheFelixHttp', 'org.apache.felix.http.host') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheFelixHttp', 'org.apache.felix.http.enable') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheFelixHttp', 'org.osgi.service.http.port') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('OrgApacheFelixHttp', 'org.apache.felix.http.timeout') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('OrgApacheFelixHttp', 'org.apache.felix.https.enable') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheFelixHttp', 'org.osgi.service.http.port.secure') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('OrgApacheFelixHttp', 'org.apache.felix.https.keystore') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheFelixHttp', 'org.apache.felix.https.keystore.password') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheFelixHttp', 'org.apache.felix.https.keystore.key.password') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheFelixHttp', 'org.apache.felix.https.truststore') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheFelixHttp', 'org.apache.felix.https.truststore.password') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheFelixHttp', 'org.apache.felix.https.clientcertificate') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheFelixHttp', 'org.apache.felix.http.context_path') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheFelixHttp', 'org.apache.felix.http.mbeans') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheFelixHttp', 'org.apache.felix.http.session.timeout') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('OrgApacheFelixHttp', 'org.apache.felix.http.jetty.threadpool.max') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('OrgApacheFelixHttp', 'org.apache.felix.http.jetty.acceptors') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('OrgApacheFelixHttp', 'org.apache.felix.http.jetty.selectors') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('OrgApacheFelixHttp', 'org.apache.felix.http.jetty.headerBufferSize') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('OrgApacheFelixHttp', 'org.apache.felix.http.jetty.requestBufferSize') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('OrgApacheFelixHttp', 'org.apache.felix.http.jetty.responseBufferSize') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('OrgApacheFelixHttp', 'org.apache.felix.http.jetty.maxFormSize') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('OrgApacheFelixHttp', 'org.apache.felix.http.path_exclusions') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('OrgApacheFelixHttp', 'org.apache.felix.https.jetty.ciphersuites.excluded') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('OrgApacheFelixHttp', 'org.apache.felix.https.jetty.ciphersuites.included') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('OrgApacheFelixHttp', 'org.apache.felix.http.jetty.sendServerHeader') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheFelixHttp', 'org.apache.felix.https.jetty.protocols.included') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('OrgApacheFelixHttp', 'org.apache.felix.https.jetty.protocols.excluded') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('OrgApacheFelixHttp', 'org.apache.felix.proxy.load.balancer.connection.enable') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheFelixHttp', 'org.apache.felix.https.jetty.renegotiateAllowed') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheFelixHttp', 'org.apache.felix.https.jetty.session.cookie.httpOnly') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheFelixHttp', 'org.apache.felix.https.jetty.session.cookie.secure') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheFelixHttp', 'org.eclipse.jetty.servlet.SessionIdPathParameterName') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheFelixHttp', 'org.eclipse.jetty.servlet.CheckingRemoteSessionIdEncoding') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheFelixHttp', 'org.eclipse.jetty.servlet.SessionCookie') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheFelixHttp', 'org.eclipse.jetty.servlet.SessionDomain') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheFelixHttp', 'org.eclipse.jetty.servlet.SessionPath') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheFelixHttp', 'org.eclipse.jetty.servlet.MaxAge') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('OrgApacheFelixHttp', 'org.apache.felix.http.name') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheFelixHttp', 'org.apache.felix.jetty.gziphandler.enable') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheFelixHttp', 'org.apache.felix.jetty.gzip.minGzipSize') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('OrgApacheFelixHttp', 'org.apache.felix.jetty.gzip.compressionLevel') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('OrgApacheFelixHttp', 'org.apache.felix.jetty.gzip.inflateBufferSize') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('OrgApacheFelixHttp', 'org.apache.felix.jetty.gzip.syncFlush') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheFelixHttp', 'org.apache.felix.jetty.gzip.excludedUserAgents') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('OrgApacheFelixHttp', 'org.apache.felix.jetty.gzip.includedMethods') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('OrgApacheFelixHttp', 'org.apache.felix.jetty.gzip.excludedMethods') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('OrgApacheFelixHttp', 'org.apache.felix.jetty.gzip.includedPaths') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('OrgApacheFelixHttp', 'org.apache.felix.jetty.gzip.excludedPaths') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('OrgApacheFelixHttp', 'org.apache.felix.jetty.gzip.includedMimeTypes') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('OrgApacheFelixHttp', 'org.apache.felix.jetty.gzip.excludedMimeTypes') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('OrgApacheFelixHttp', 'org.apache.felix.http.session.invalidate') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheFelixHttp', 'org.apache.felix.http.session.uniqueid') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheFelixHttpSslfilterSslFilter', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheFelixHttpSslfilterSslFilter', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheFelixHttpSslfilterSslFilter', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheFelixHttpSslfilterSslFilter', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheFelixHttpSslfilterSslFilter', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheFelixHttpSslfilterSslFilter', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('OrgApacheFelixHttpSslfilterSslFilter', 'ssl-forward.header') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheFelixHttpSslfilterSslFilter', 'ssl-forward.value') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheFelixHttpSslfilterSslFilter', 'ssl-forward-cert.header') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheFelixHttpSslfilterSslFilter', 'rewrite.absolute.urls') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheFelixJaasConfigurationFactory', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheFelixJaasConfigurationFactory', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheFelixJaasConfigurationFactory', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheFelixJaasConfigurationFactory', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheFelixJaasConfigurationFactory', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheFelixJaasConfigurationFactory', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('OrgApacheFelixJaasConfigurationFactory', 'jaas.controlFlag') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheFelixJaasConfigurationFactory', 'jaas.ranking') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('OrgApacheFelixJaasConfigurationFactory', 'jaas.realmName') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheFelixJaasConfigurationFactory', 'jaas.classname') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheFelixJaasConfigurationFactory', 'jaas.options') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('OrgApacheFelixJaasConfigurationSpi', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheFelixJaasConfigurationSpi', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheFelixJaasConfigurationSpi', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheFelixJaasConfigurationSpi', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheFelixJaasConfigurationSpi', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheFelixJaasConfigurationSpi', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('OrgApacheFelixJaasConfigurationSpi', 'jaas.defaultRealmName') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheFelixJaasConfigurationSpi', 'jaas.configProviderName') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheFelixJaasConfigurationSpi', 'jaas.globalConfigPolicy') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheFelixScrScrService', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheFelixScrScrService', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheFelixScrScrService', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheFelixScrScrService', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheFelixScrScrService', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheFelixScrScrService', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('OrgApacheFelixScrScrService', 'ds.loglevel') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('OrgApacheFelixScrScrService', 'ds.factory.enabled') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheFelixScrScrService', 'ds.delayed.keepInstances') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheFelixScrScrService', 'ds.lock.timeout.milliseconds') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('OrgApacheFelixScrScrService', 'ds.stop.timeout.milliseconds') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('OrgApacheFelixScrScrService', 'ds.global.extender') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheFelixSystemreadyImplComponentsCheck', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheFelixSystemreadyImplComponentsCheck', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheFelixSystemreadyImplComponentsCheck', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheFelixSystemreadyImplComponentsCheck', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheFelixSystemreadyImplComponentsCheck', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheFelixSystemreadyImplComponentsCheck', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('OrgApacheFelixSystemreadyImplComponentsCheck', 'components.list') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('OrgApacheFelixSystemreadyImplComponentsCheck', 'type') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheFelixSystemreadyImplFrameworkStartCheck', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheFelixSystemreadyImplFrameworkStartCheck', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheFelixSystemreadyImplFrameworkStartCheck', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheFelixSystemreadyImplFrameworkStartCheck', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheFelixSystemreadyImplFrameworkStartCheck', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheFelixSystemreadyImplFrameworkStartCheck', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('OrgApacheFelixSystemreadyImplFrameworkStartCheck', 'timeout') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('OrgApacheFelixSystemreadyImplFrameworkStartCheck', 'target.start.level') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('OrgApacheFelixSystemreadyImplFrameworkStartCheck', 'target.start.level.prop.name') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheFelixSystemreadyImplFrameworkStartCheck', 'type') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheFelixSystemreadyImplServicesCheck', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheFelixSystemreadyImplServicesCheck', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheFelixSystemreadyImplServicesCheck', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheFelixSystemreadyImplServicesCheck', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheFelixSystemreadyImplServicesCheck', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheFelixSystemreadyImplServicesCheck', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('OrgApacheFelixSystemreadyImplServicesCheck', 'services.list') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('OrgApacheFelixSystemreadyImplServicesCheck', 'type') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheFelixSystemreadyImplServletSystemAliveServlet', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheFelixSystemreadyImplServletSystemAliveServlet', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheFelixSystemreadyImplServletSystemAliveServlet', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheFelixSystemreadyImplServletSystemAliveServlet', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheFelixSystemreadyImplServletSystemAliveServlet', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheFelixSystemreadyImplServletSystemAliveServlet', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('OrgApacheFelixSystemreadyImplServletSystemAliveServlet', 'osgi.http.whiteboard.servlet.pattern') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheFelixSystemreadyImplServletSystemAliveServlet', 'osgi.http.whiteboard.context.select') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheFelixSystemreadyImplServletSystemReadyServlet', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheFelixSystemreadyImplServletSystemReadyServlet', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheFelixSystemreadyImplServletSystemReadyServlet', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheFelixSystemreadyImplServletSystemReadyServlet', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheFelixSystemreadyImplServletSystemReadyServlet', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheFelixSystemreadyImplServletSystemReadyServlet', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('OrgApacheFelixSystemreadyImplServletSystemReadyServlet', 'osgi.http.whiteboard.servlet.pattern') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheFelixSystemreadyImplServletSystemReadyServlet', 'osgi.http.whiteboard.context.select') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheFelixSystemreadySystemReadyMonitor', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheFelixSystemreadySystemReadyMonitor', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheFelixSystemreadySystemReadyMonitor', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheFelixSystemreadySystemReadyMonitor', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheFelixSystemreadySystemReadyMonitor', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheFelixSystemreadySystemReadyMonitor', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('OrgApacheFelixSystemreadySystemReadyMonitor', 'poll.interval') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('OrgApacheFelixWebconsoleInternalServletOsgiManager', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheFelixWebconsoleInternalServletOsgiManager', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheFelixWebconsoleInternalServletOsgiManager', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheFelixWebconsoleInternalServletOsgiManager', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheFelixWebconsoleInternalServletOsgiManager', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheFelixWebconsoleInternalServletOsgiManager', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('OrgApacheFelixWebconsoleInternalServletOsgiManager', 'manager.root') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheFelixWebconsoleInternalServletOsgiManager', 'http.service.filter') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheFelixWebconsoleInternalServletOsgiManager', 'default.render') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheFelixWebconsoleInternalServletOsgiManager', 'realm') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheFelixWebconsoleInternalServletOsgiManager', 'username') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheFelixWebconsoleInternalServletOsgiManager', 'password') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheFelixWebconsoleInternalServletOsgiManager', 'category') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheFelixWebconsoleInternalServletOsgiManager', 'locale') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheFelixWebconsoleInternalServletOsgiManager', 'loglevel') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('OrgApacheFelixWebconsoleInternalServletOsgiManager', 'plugins') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheFelixWebconsolePluginsEventInternalPluginServlet', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheFelixWebconsolePluginsEventInternalPluginServlet', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheFelixWebconsolePluginsEventInternalPluginServlet', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheFelixWebconsolePluginsEventInternalPluginServlet', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheFelixWebconsolePluginsEventInternalPluginServlet', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheFelixWebconsolePluginsEventInternalPluginServlet', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('OrgApacheFelixWebconsolePluginsEventInternalPluginServlet', 'max.size') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('OrgApacheFelixWebconsolePluginsMemoryusageInternalMemoryUsageCo', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheFelixWebconsolePluginsMemoryusageInternalMemoryUsageCo', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheFelixWebconsolePluginsMemoryusageInternalMemoryUsageCo', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheFelixWebconsolePluginsMemoryusageInternalMemoryUsageCo', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheFelixWebconsolePluginsMemoryusageInternalMemoryUsageCo', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheFelixWebconsolePluginsMemoryusageInternalMemoryUsageCo', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('OrgApacheFelixWebconsolePluginsMemoryusageInternalMemoryUsageCo', 'felix.memoryusage.dump.threshold') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('OrgApacheFelixWebconsolePluginsMemoryusageInternalMemoryUsageCo', 'felix.memoryusage.dump.interval') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('OrgApacheFelixWebconsolePluginsMemoryusageInternalMemoryUsageCo', 'felix.memoryusage.dump.location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheHttpProxyconfigurator', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheHttpProxyconfigurator', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheHttpProxyconfigurator', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheHttpProxyconfigurator', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheHttpProxyconfigurator', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheHttpProxyconfigurator', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('OrgApacheHttpProxyconfigurator', 'proxy.enabled') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheHttpProxyconfigurator', 'proxy.host') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheHttpProxyconfigurator', 'proxy.port') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('OrgApacheHttpProxyconfigurator', 'proxy.user') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheHttpProxyconfigurator', 'proxy.password') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheHttpProxyconfigurator', 'proxy.exceptions') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakPluginsBlobDatastoreDataStoreTextProvider', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakPluginsBlobDatastoreDataStoreTextProvider', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakPluginsBlobDatastoreDataStoreTextProvider', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakPluginsBlobDatastoreDataStoreTextProvider', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakPluginsBlobDatastoreDataStoreTextProvider', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakPluginsBlobDatastoreDataStoreTextProvider', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakPluginsBlobDatastoreDataStoreTextProvider', 'dir') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakPluginsBlobDatastoreFileDataStore', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakPluginsBlobDatastoreFileDataStore', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakPluginsBlobDatastoreFileDataStore', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakPluginsBlobDatastoreFileDataStore', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakPluginsBlobDatastoreFileDataStore', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakPluginsBlobDatastoreFileDataStore', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakPluginsBlobDatastoreFileDataStore', 'path') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakPluginsDocumentDocumentNodeStoreService', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakPluginsDocumentDocumentNodeStoreService', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakPluginsDocumentDocumentNodeStoreService', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakPluginsDocumentDocumentNodeStoreService', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakPluginsDocumentDocumentNodeStoreService', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakPluginsDocumentDocumentNodeStoreService', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakPluginsDocumentDocumentNodeStoreService', 'mongouri') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakPluginsDocumentDocumentNodeStoreService', 'db') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakPluginsDocumentDocumentNodeStoreService', 'socketKeepAlive') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakPluginsDocumentDocumentNodeStoreService', 'cache') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakPluginsDocumentDocumentNodeStoreService', 'nodeCachePercentage') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakPluginsDocumentDocumentNodeStoreService', 'prevDocCachePercentage') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakPluginsDocumentDocumentNodeStoreService', 'childrenCachePercentage') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakPluginsDocumentDocumentNodeStoreService', 'diffCachePercentage') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakPluginsDocumentDocumentNodeStoreService', 'cacheSegmentCount') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakPluginsDocumentDocumentNodeStoreService', 'cacheStackMoveDistance') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakPluginsDocumentDocumentNodeStoreService', 'blobCacheSize') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakPluginsDocumentDocumentNodeStoreService', 'persistentCache') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakPluginsDocumentDocumentNodeStoreService', 'journalCache') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakPluginsDocumentDocumentNodeStoreService', 'customBlobStore') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakPluginsDocumentDocumentNodeStoreService', 'journalGCInterval') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakPluginsDocumentDocumentNodeStoreService', 'journalGCMaxAge') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakPluginsDocumentDocumentNodeStoreService', 'prefetchExternalChanges') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakPluginsDocumentDocumentNodeStoreService', 'role') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakPluginsDocumentDocumentNodeStoreService', 'versionGcMaxAgeInSecs') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakPluginsDocumentDocumentNodeStoreService', 'versionGCExpression') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakPluginsDocumentDocumentNodeStoreService', 'versionGCTimeLimitInSecs') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakPluginsDocumentDocumentNodeStoreService', 'blobGcMaxAgeInSecs') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakPluginsDocumentDocumentNodeStoreService', 'blobTrackSnapshotIntervalInSecs') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakPluginsDocumentDocumentNodeStoreService', 'repository.home') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakPluginsDocumentDocumentNodeStoreService', 'maxReplicationLagInSecs') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakPluginsDocumentDocumentNodeStoreService', 'documentStoreType') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakPluginsDocumentDocumentNodeStoreService', 'bundlingDisabled') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakPluginsDocumentDocumentNodeStoreService', 'updateLimit') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakPluginsDocumentDocumentNodeStoreService', 'persistentCacheIncludes') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakPluginsDocumentDocumentNodeStoreService', 'leaseCheckMode') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakPluginsDocumentDocumentNodeStoreServicePre', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakPluginsDocumentDocumentNodeStoreServicePre', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakPluginsDocumentDocumentNodeStoreServicePre', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakPluginsDocumentDocumentNodeStoreServicePre', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakPluginsDocumentDocumentNodeStoreServicePre', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakPluginsDocumentDocumentNodeStoreServicePre', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakPluginsDocumentDocumentNodeStoreServicePre', 'persistentCacheIncludes') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakPluginsDocumentSecondarySecondaryStoreCac', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakPluginsDocumentSecondarySecondaryStoreCac', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakPluginsDocumentSecondarySecondaryStoreCac', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakPluginsDocumentSecondarySecondaryStoreCac', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakPluginsDocumentSecondarySecondaryStoreCac', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakPluginsDocumentSecondarySecondaryStoreCac', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakPluginsDocumentSecondarySecondaryStoreCac', 'includedPaths') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakPluginsDocumentSecondarySecondaryStoreCac', 'enableAsyncObserver') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakPluginsDocumentSecondarySecondaryStoreCac', 'observerQueueSize') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakPluginsIndexAsyncIndexerService', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakPluginsIndexAsyncIndexerService', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakPluginsIndexAsyncIndexerService', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakPluginsIndexAsyncIndexerService', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakPluginsIndexAsyncIndexerService', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakPluginsIndexAsyncIndexerService', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakPluginsIndexAsyncIndexerService', 'asyncConfigs') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakPluginsIndexAsyncIndexerService', 'leaseTimeOutMinutes') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakPluginsIndexAsyncIndexerService', 'failingIndexTimeoutSeconds') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakPluginsIndexAsyncIndexerService', 'errorWarnIntervalSeconds') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakPluginsIndexLuceneLuceneIndexProviderServ', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakPluginsIndexLuceneLuceneIndexProviderServ', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakPluginsIndexLuceneLuceneIndexProviderServ', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakPluginsIndexLuceneLuceneIndexProviderServ', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakPluginsIndexLuceneLuceneIndexProviderServ', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakPluginsIndexLuceneLuceneIndexProviderServ', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakPluginsIndexLuceneLuceneIndexProviderServ', 'disabled') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakPluginsIndexLuceneLuceneIndexProviderServ', 'debug') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakPluginsIndexLuceneLuceneIndexProviderServ', 'localIndexDir') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakPluginsIndexLuceneLuceneIndexProviderServ', 'enableOpenIndexAsync') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakPluginsIndexLuceneLuceneIndexProviderServ', 'threadPoolSize') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakPluginsIndexLuceneLuceneIndexProviderServ', 'prefetchIndexFiles') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakPluginsIndexLuceneLuceneIndexProviderServ', 'extractedTextCacheSizeInMB') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakPluginsIndexLuceneLuceneIndexProviderServ', 'extractedTextCacheExpiryInSecs') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakPluginsIndexLuceneLuceneIndexProviderServ', 'alwaysUsePreExtractedCache') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakPluginsIndexLuceneLuceneIndexProviderServ', 'booleanClauseLimit') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakPluginsIndexLuceneLuceneIndexProviderServ', 'enableHybridIndexing') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakPluginsIndexLuceneLuceneIndexProviderServ', 'hybridQueueSize') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakPluginsIndexLuceneLuceneIndexProviderServ', 'disableStoredIndexDefinition') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakPluginsIndexLuceneLuceneIndexProviderServ', 'deletedBlobsCollectionEnabled') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakPluginsIndexLuceneLuceneIndexProviderServ', 'propIndexCleanerIntervalInSecs') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakPluginsIndexLuceneLuceneIndexProviderServ', 'enableSingleBlobIndexFiles') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakPluginsIndexSolrOsgiEmbeddedSolrServerCo', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakPluginsIndexSolrOsgiEmbeddedSolrServerCo', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakPluginsIndexSolrOsgiEmbeddedSolrServerCo', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakPluginsIndexSolrOsgiEmbeddedSolrServerCo', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakPluginsIndexSolrOsgiEmbeddedSolrServerCo', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakPluginsIndexSolrOsgiEmbeddedSolrServerCo', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakPluginsIndexSolrOsgiEmbeddedSolrServerCo', 'solr.home.path') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakPluginsIndexSolrOsgiEmbeddedSolrServerCo', 'solr.core.name') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakPluginsIndexSolrOsgiNodeStateSolrServers', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakPluginsIndexSolrOsgiNodeStateSolrServers', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakPluginsIndexSolrOsgiNodeStateSolrServers', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakPluginsIndexSolrOsgiNodeStateSolrServers', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakPluginsIndexSolrOsgiNodeStateSolrServers', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakPluginsIndexSolrOsgiNodeStateSolrServers', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakPluginsIndexSolrOsgiNodeStateSolrServers', 'enabled') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakPluginsIndexSolrOsgiOakSolrConfiguration', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakPluginsIndexSolrOsgiOakSolrConfiguration', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakPluginsIndexSolrOsgiOakSolrConfiguration', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakPluginsIndexSolrOsgiOakSolrConfiguration', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakPluginsIndexSolrOsgiOakSolrConfiguration', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakPluginsIndexSolrOsgiOakSolrConfiguration', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakPluginsIndexSolrOsgiOakSolrConfiguration', 'path.desc.field') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakPluginsIndexSolrOsgiOakSolrConfiguration', 'path.child.field') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakPluginsIndexSolrOsgiOakSolrConfiguration', 'path.parent.field') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakPluginsIndexSolrOsgiOakSolrConfiguration', 'path.exact.field') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakPluginsIndexSolrOsgiOakSolrConfiguration', 'catch.all.field') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakPluginsIndexSolrOsgiOakSolrConfiguration', 'collapsed.path.field') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakPluginsIndexSolrOsgiOakSolrConfiguration', 'path.depth.field') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakPluginsIndexSolrOsgiOakSolrConfiguration', 'commit.policy') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakPluginsIndexSolrOsgiOakSolrConfiguration', 'rows') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakPluginsIndexSolrOsgiOakSolrConfiguration', 'path.restrictions') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakPluginsIndexSolrOsgiOakSolrConfiguration', 'property.restrictions') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakPluginsIndexSolrOsgiOakSolrConfiguration', 'primarytypes.restrictions') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakPluginsIndexSolrOsgiOakSolrConfiguration', 'ignored.properties') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakPluginsIndexSolrOsgiOakSolrConfiguration', 'used.properties') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakPluginsIndexSolrOsgiOakSolrConfiguration', 'type.mappings') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakPluginsIndexSolrOsgiOakSolrConfiguration', 'property.mappings') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakPluginsIndexSolrOsgiOakSolrConfiguration', 'collapse.jcrcontent.nodes') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakPluginsIndexSolrOsgiRemoteSolrServerConf', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakPluginsIndexSolrOsgiRemoteSolrServerConf', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakPluginsIndexSolrOsgiRemoteSolrServerConf', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakPluginsIndexSolrOsgiRemoteSolrServerConf', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakPluginsIndexSolrOsgiRemoteSolrServerConf', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakPluginsIndexSolrOsgiRemoteSolrServerConf', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakPluginsIndexSolrOsgiRemoteSolrServerConf', 'solr.http.url') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakPluginsIndexSolrOsgiRemoteSolrServerConf', 'solr.zk.host') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakPluginsIndexSolrOsgiRemoteSolrServerConf', 'solr.collection') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakPluginsIndexSolrOsgiRemoteSolrServerConf', 'solr.socket.timeout') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakPluginsIndexSolrOsgiRemoteSolrServerConf', 'solr.connection.timeout') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakPluginsIndexSolrOsgiRemoteSolrServerConf', 'solr.shards.no') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakPluginsIndexSolrOsgiRemoteSolrServerConf', 'solr.replication.factor') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakPluginsIndexSolrOsgiRemoteSolrServerConf', 'solr.conf.dir') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakPluginsIndexSolrOsgiSolrQueryIndexProvid', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakPluginsIndexSolrOsgiSolrQueryIndexProvid', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakPluginsIndexSolrOsgiSolrQueryIndexProvid', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakPluginsIndexSolrOsgiSolrQueryIndexProvid', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakPluginsIndexSolrOsgiSolrQueryIndexProvid', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakPluginsIndexSolrOsgiSolrQueryIndexProvid', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakPluginsIndexSolrOsgiSolrQueryIndexProvid', 'query.aggregation') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakPluginsIndexSolrOsgiSolrServerProviderSe', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakPluginsIndexSolrOsgiSolrServerProviderSe', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakPluginsIndexSolrOsgiSolrServerProviderSe', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakPluginsIndexSolrOsgiSolrServerProviderSe', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakPluginsIndexSolrOsgiSolrServerProviderSe', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakPluginsIndexSolrOsgiSolrServerProviderSe', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakPluginsIndexSolrOsgiSolrServerProviderSe', 'server.type') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakPluginsMetricStatisticsProviderFactory', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakPluginsMetricStatisticsProviderFactory', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakPluginsMetricStatisticsProviderFactory', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakPluginsMetricStatisticsProviderFactory', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakPluginsMetricStatisticsProviderFactory', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakPluginsMetricStatisticsProviderFactory', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakPluginsMetricStatisticsProviderFactory', 'providerType') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakPluginsObservationChangeCollectorProvider', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakPluginsObservationChangeCollectorProvider', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakPluginsObservationChangeCollectorProvider', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakPluginsObservationChangeCollectorProvider', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakPluginsObservationChangeCollectorProvider', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakPluginsObservationChangeCollectorProvider', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakPluginsObservationChangeCollectorProvider', 'maxItems') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakPluginsObservationChangeCollectorProvider', 'maxPathDepth') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakPluginsObservationChangeCollectorProvider', 'enabled') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakQueryQueryEngineSettingsService', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakQueryQueryEngineSettingsService', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakQueryQueryEngineSettingsService', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakQueryQueryEngineSettingsService', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakQueryQueryEngineSettingsService', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakQueryQueryEngineSettingsService', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakQueryQueryEngineSettingsService', 'queryLimitInMemory') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakQueryQueryEngineSettingsService', 'queryLimitReads') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakQueryQueryEngineSettingsService', 'queryFailTraversal') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakQueryQueryEngineSettingsService', 'fastQuerySize') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakSecurityAuthenticationAuthenticationConfig', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakSecurityAuthenticationAuthenticationConfig', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakSecurityAuthenticationAuthenticationConfig', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakSecurityAuthenticationAuthenticationConfig', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakSecurityAuthenticationAuthenticationConfig', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakSecurityAuthenticationAuthenticationConfig', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakSecurityAuthenticationAuthenticationConfig', 'org.apache.jackrabbit.oak.authentication.appName') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakSecurityAuthenticationAuthenticationConfig', 'org.apache.jackrabbit.oak.authentication.configSpiName') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakSecurityAuthenticationLdapImplLdapIdenti', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakSecurityAuthenticationLdapImplLdapIdenti', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakSecurityAuthenticationLdapImplLdapIdenti', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakSecurityAuthenticationLdapImplLdapIdenti', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakSecurityAuthenticationLdapImplLdapIdenti', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakSecurityAuthenticationLdapImplLdapIdenti', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakSecurityAuthenticationLdapImplLdapIdenti', 'provider.name') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakSecurityAuthenticationLdapImplLdapIdenti', 'host.name') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakSecurityAuthenticationLdapImplLdapIdenti', 'host.port') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakSecurityAuthenticationLdapImplLdapIdenti', 'host.ssl') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakSecurityAuthenticationLdapImplLdapIdenti', 'host.tls') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakSecurityAuthenticationLdapImplLdapIdenti', 'host.noCertCheck') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakSecurityAuthenticationLdapImplLdapIdenti', 'bind.dn') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakSecurityAuthenticationLdapImplLdapIdenti', 'bind.password') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakSecurityAuthenticationLdapImplLdapIdenti', 'searchTimeout') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakSecurityAuthenticationLdapImplLdapIdenti', 'adminPool.maxActive') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakSecurityAuthenticationLdapImplLdapIdenti', 'adminPool.lookupOnValidate') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakSecurityAuthenticationLdapImplLdapIdenti', 'userPool.maxActive') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakSecurityAuthenticationLdapImplLdapIdenti', 'userPool.lookupOnValidate') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakSecurityAuthenticationLdapImplLdapIdenti', 'user.baseDN') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakSecurityAuthenticationLdapImplLdapIdenti', 'user.objectclass') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakSecurityAuthenticationLdapImplLdapIdenti', 'user.idAttribute') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakSecurityAuthenticationLdapImplLdapIdenti', 'user.extraFilter') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakSecurityAuthenticationLdapImplLdapIdenti', 'user.makeDnPath') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakSecurityAuthenticationLdapImplLdapIdenti', 'group.baseDN') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakSecurityAuthenticationLdapImplLdapIdenti', 'group.objectclass') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakSecurityAuthenticationLdapImplLdapIdenti', 'group.nameAttribute') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakSecurityAuthenticationLdapImplLdapIdenti', 'group.extraFilter') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakSecurityAuthenticationLdapImplLdapIdenti', 'group.makeDnPath') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakSecurityAuthenticationLdapImplLdapIdenti', 'group.memberAttribute') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakSecurityAuthenticationLdapImplLdapIdenti', 'useUidForExtId') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakSecurityAuthenticationLdapImplLdapIdenti', 'customattributes') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakSecurityAuthenticationTokenTokenConfigura', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakSecurityAuthenticationTokenTokenConfigura', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakSecurityAuthenticationTokenTokenConfigura', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakSecurityAuthenticationTokenTokenConfigura', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakSecurityAuthenticationTokenTokenConfigura', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakSecurityAuthenticationTokenTokenConfigura', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakSecurityAuthenticationTokenTokenConfigura', 'tokenExpiration') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakSecurityAuthenticationTokenTokenConfigura', 'tokenLength') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakSecurityAuthenticationTokenTokenConfigura', 'tokenRefresh') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakSecurityAuthenticationTokenTokenConfigura', 'tokenCleanupThreshold') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakSecurityAuthenticationTokenTokenConfigura', 'passwordHashAlgorithm') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakSecurityAuthenticationTokenTokenConfigura', 'passwordHashIterations') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakSecurityAuthenticationTokenTokenConfigura', 'passwordSaltSize') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakSecurityAuthorizationAuthorizationConfigur', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakSecurityAuthorizationAuthorizationConfigur', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakSecurityAuthorizationAuthorizationConfigur', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakSecurityAuthorizationAuthorizationConfigur', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakSecurityAuthorizationAuthorizationConfigur', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakSecurityAuthorizationAuthorizationConfigur', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakSecurityAuthorizationAuthorizationConfigur', 'permissionsJr2') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakSecurityAuthorizationAuthorizationConfigur', 'importBehavior') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakSecurityAuthorizationAuthorizationConfigur', 'readPaths') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakSecurityAuthorizationAuthorizationConfigur', 'administrativePrincipals') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakSecurityAuthorizationAuthorizationConfigur', 'configurationRanking') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakSecurityInternalSecurityProviderRegistrati', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakSecurityInternalSecurityProviderRegistrati', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakSecurityInternalSecurityProviderRegistrati', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakSecurityInternalSecurityProviderRegistrati', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakSecurityInternalSecurityProviderRegistrati', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakSecurityInternalSecurityProviderRegistrati', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakSecurityInternalSecurityProviderRegistrati', 'requiredServicePids') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakSecurityInternalSecurityProviderRegistrati', 'authorizationCompositionType') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakSecurityUserRandomAuthorizableNodeName', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakSecurityUserRandomAuthorizableNodeName', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakSecurityUserRandomAuthorizableNodeName', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakSecurityUserRandomAuthorizableNodeName', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakSecurityUserRandomAuthorizableNodeName', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakSecurityUserRandomAuthorizableNodeName', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakSecurityUserRandomAuthorizableNodeName', 'length') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakSecurityUserUserConfigurationImpl', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakSecurityUserUserConfigurationImpl', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakSecurityUserUserConfigurationImpl', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakSecurityUserUserConfigurationImpl', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakSecurityUserUserConfigurationImpl', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakSecurityUserUserConfigurationImpl', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakSecurityUserUserConfigurationImpl', 'usersPath') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakSecurityUserUserConfigurationImpl', 'groupsPath') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakSecurityUserUserConfigurationImpl', 'systemRelativePath') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakSecurityUserUserConfigurationImpl', 'defaultDepth') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakSecurityUserUserConfigurationImpl', 'importBehavior') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakSecurityUserUserConfigurationImpl', 'passwordHashAlgorithm') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakSecurityUserUserConfigurationImpl', 'passwordHashIterations') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakSecurityUserUserConfigurationImpl', 'passwordSaltSize') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakSecurityUserUserConfigurationImpl', 'omitAdminPw') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakSecurityUserUserConfigurationImpl', 'supportAutoSave') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakSecurityUserUserConfigurationImpl', 'passwordMaxAge') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakSecurityUserUserConfigurationImpl', 'initialPasswordChange') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakSecurityUserUserConfigurationImpl', 'passwordHistorySize') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakSecurityUserUserConfigurationImpl', 'passwordExpiryForAdmin') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakSecurityUserUserConfigurationImpl', 'cacheExpiration') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakSecurityUserUserConfigurationImpl', 'enableRFC7613UsercaseMappedProfile') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakSegmentAzureAzureSegmentStoreService', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakSegmentAzureAzureSegmentStoreService', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakSegmentAzureAzureSegmentStoreService', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakSegmentAzureAzureSegmentStoreService', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakSegmentAzureAzureSegmentStoreService', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakSegmentAzureAzureSegmentStoreService', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakSegmentAzureAzureSegmentStoreService', 'accountName') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakSegmentAzureAzureSegmentStoreService', 'containerName') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakSegmentAzureAzureSegmentStoreService', 'accessKey') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakSegmentAzureAzureSegmentStoreService', 'rootPath') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakSegmentAzureAzureSegmentStoreService', 'connectionURL') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakSegmentSegmentNodeStoreFactory', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakSegmentSegmentNodeStoreFactory', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakSegmentSegmentNodeStoreFactory', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakSegmentSegmentNodeStoreFactory', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakSegmentSegmentNodeStoreFactory', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakSegmentSegmentNodeStoreFactory', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakSegmentSegmentNodeStoreFactory', 'repository.home') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakSegmentSegmentNodeStoreFactory', 'tarmk.mode') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakSegmentSegmentNodeStoreFactory', 'tarmk.size') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakSegmentSegmentNodeStoreFactory', 'segmentCache.size') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakSegmentSegmentNodeStoreFactory', 'stringCache.size') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakSegmentSegmentNodeStoreFactory', 'templateCache.size') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakSegmentSegmentNodeStoreFactory', 'stringDeduplicationCache.size') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakSegmentSegmentNodeStoreFactory', 'templateDeduplicationCache.size') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakSegmentSegmentNodeStoreFactory', 'nodeDeduplicationCache.size') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakSegmentSegmentNodeStoreFactory', 'pauseCompaction') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakSegmentSegmentNodeStoreFactory', 'compaction.retryCount') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakSegmentSegmentNodeStoreFactory', 'compaction.force.timeout') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakSegmentSegmentNodeStoreFactory', 'compaction.sizeDeltaEstimation') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakSegmentSegmentNodeStoreFactory', 'compaction.disableEstimation') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakSegmentSegmentNodeStoreFactory', 'compaction.retainedGenerations') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakSegmentSegmentNodeStoreFactory', 'compaction.memoryThreshold') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakSegmentSegmentNodeStoreFactory', 'compaction.progressLog') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakSegmentSegmentNodeStoreFactory', 'standby') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakSegmentSegmentNodeStoreFactory', 'customBlobStore') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakSegmentSegmentNodeStoreFactory', 'customSegmentStore') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakSegmentSegmentNodeStoreFactory', 'splitPersistence') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakSegmentSegmentNodeStoreFactory', 'repository.backup.dir') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakSegmentSegmentNodeStoreFactory', 'blobGcMaxAgeInSecs') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakSegmentSegmentNodeStoreFactory', 'blobTrackSnapshotIntervalInSecs') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakSegmentSegmentNodeStoreFactory', 'role') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakSegmentSegmentNodeStoreFactory', 'registerDescriptors') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakSegmentSegmentNodeStoreFactory', 'dispatchChanges') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakSegmentSegmentNodeStoreMonitorService', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakSegmentSegmentNodeStoreMonitorService', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakSegmentSegmentNodeStoreMonitorService', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakSegmentSegmentNodeStoreMonitorService', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakSegmentSegmentNodeStoreMonitorService', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakSegmentSegmentNodeStoreMonitorService', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakSegmentSegmentNodeStoreMonitorService', 'commitsTrackerWriterGroups') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakSegmentSegmentNodeStoreService', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakSegmentSegmentNodeStoreService', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakSegmentSegmentNodeStoreService', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakSegmentSegmentNodeStoreService', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakSegmentSegmentNodeStoreService', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakSegmentSegmentNodeStoreService', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakSegmentSegmentNodeStoreService', 'repository.home') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakSegmentSegmentNodeStoreService', 'tarmk.mode') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakSegmentSegmentNodeStoreService', 'tarmk.size') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakSegmentSegmentNodeStoreService', 'segmentCache.size') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakSegmentSegmentNodeStoreService', 'stringCache.size') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakSegmentSegmentNodeStoreService', 'templateCache.size') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakSegmentSegmentNodeStoreService', 'stringDeduplicationCache.size') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakSegmentSegmentNodeStoreService', 'templateDeduplicationCache.size') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakSegmentSegmentNodeStoreService', 'nodeDeduplicationCache.size') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakSegmentSegmentNodeStoreService', 'pauseCompaction') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakSegmentSegmentNodeStoreService', 'compaction.retryCount') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakSegmentSegmentNodeStoreService', 'compaction.force.timeout') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakSegmentSegmentNodeStoreService', 'compaction.sizeDeltaEstimation') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakSegmentSegmentNodeStoreService', 'compaction.disableEstimation') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakSegmentSegmentNodeStoreService', 'compaction.retainedGenerations') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakSegmentSegmentNodeStoreService', 'compaction.memoryThreshold') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakSegmentSegmentNodeStoreService', 'compaction.progressLog') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakSegmentSegmentNodeStoreService', 'standby') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakSegmentSegmentNodeStoreService', 'customBlobStore') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakSegmentSegmentNodeStoreService', 'customSegmentStore') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakSegmentSegmentNodeStoreService', 'splitPersistence') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakSegmentSegmentNodeStoreService', 'repository.backup.dir') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakSegmentSegmentNodeStoreService', 'blobGcMaxAgeInSecs') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakSegmentSegmentNodeStoreService', 'blobTrackSnapshotIntervalInSecs') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakSegmentStandbyStoreStandbyStoreService', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakSegmentStandbyStoreStandbyStoreService', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakSegmentStandbyStoreStandbyStoreService', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakSegmentStandbyStoreStandbyStoreService', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakSegmentStandbyStoreStandbyStoreService', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakSegmentStandbyStoreStandbyStoreService', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakSegmentStandbyStoreStandbyStoreService', 'org.apache.sling.installer.configuration.persist') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakSegmentStandbyStoreStandbyStoreService', 'mode') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakSegmentStandbyStoreStandbyStoreService', 'port') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakSegmentStandbyStoreStandbyStoreService', 'primary.host') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakSegmentStandbyStoreStandbyStoreService', 'interval') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakSegmentStandbyStoreStandbyStoreService', 'primary.allowed-client-ip-ranges') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakSegmentStandbyStoreStandbyStoreService', 'secure') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakSegmentStandbyStoreStandbyStoreService', 'standby.readtimeout') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakSegmentStandbyStoreStandbyStoreService', 'standby.autoclean') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplDe', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplDe', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplDe', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplDe', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplDe', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplDe', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplDe', 'handler.name') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplDe', 'user.expirationTime') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplDe', 'user.autoMembership') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplDe', 'user.propertyMapping') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplDe', 'user.pathPrefix') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplDe', 'user.membershipExpTime') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplDe', 'user.membershipNestingDepth') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplDe', 'user.dynamicMembership') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplDe', 'user.disableMissing') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplDe', 'group.expirationTime') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplDe', 'group.autoMembership') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplDe', 'group.propertyMapping') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplDe', 'group.pathPrefix') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplDe', 'enableRFC7613UsercaseMappedProfile') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplEx', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplEx', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplEx', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplEx', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplEx', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplEx', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplEx', 'jaas.ranking') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplEx', 'jaas.controlFlag') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplEx', 'jaas.realmName') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplEx', 'idp.name') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplEx', 'sync.handlerName') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplPr', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplPr', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplPr', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplPr', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplPr', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplPr', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplPr', 'protectExternalId') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakSpiSecurityAuthorizationCugImplCugConfi', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakSpiSecurityAuthorizationCugImplCugConfi', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakSpiSecurityAuthorizationCugImplCugConfi', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakSpiSecurityAuthorizationCugImplCugConfi', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakSpiSecurityAuthorizationCugImplCugConfi', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakSpiSecurityAuthorizationCugImplCugConfi', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakSpiSecurityAuthorizationCugImplCugConfi', 'cugSupportedPaths') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakSpiSecurityAuthorizationCugImplCugConfi', 'cugEnabled') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakSpiSecurityAuthorizationCugImplCugConfi', 'configurationRanking') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakSpiSecurityAuthorizationCugImplCugExclu', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakSpiSecurityAuthorizationCugImplCugExclu', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakSpiSecurityAuthorizationCugImplCugExclu', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakSpiSecurityAuthorizationCugImplCugExclu', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakSpiSecurityAuthorizationCugImplCugExclu', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakSpiSecurityAuthorizationCugImplCugExclu', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakSpiSecurityAuthorizationCugImplCugExclu', 'principalNames') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakSpiSecurityUserActionDefaultAuthorizable', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakSpiSecurityUserActionDefaultAuthorizable', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakSpiSecurityUserActionDefaultAuthorizable', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakSpiSecurityUserActionDefaultAuthorizable', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakSpiSecurityUserActionDefaultAuthorizable', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakSpiSecurityUserActionDefaultAuthorizable', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakSpiSecurityUserActionDefaultAuthorizable', 'enabledActions') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakSpiSecurityUserActionDefaultAuthorizable', 'userPrivilegeNames') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakSpiSecurityUserActionDefaultAuthorizable', 'groupPrivilegeNames') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitOakSpiSecurityUserActionDefaultAuthorizable', 'constraint') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitVaultPackagingImplPackagingImpl', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitVaultPackagingImplPackagingImpl', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitVaultPackagingImplPackagingImpl', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitVaultPackagingImplPackagingImpl', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitVaultPackagingImplPackagingImpl', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitVaultPackagingImplPackagingImpl', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitVaultPackagingImplPackagingImpl', 'packageRoots') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitVaultPackagingRegistryImplFSPackageRegistry', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitVaultPackagingRegistryImplFSPackageRegistry', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitVaultPackagingRegistryImplFSPackageRegistry', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitVaultPackagingRegistryImplFSPackageRegistry', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitVaultPackagingRegistryImplFSPackageRegistry', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitVaultPackagingRegistryImplFSPackageRegistry', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('OrgApacheJackrabbitVaultPackagingRegistryImplFSPackageRegistry', 'homePath') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingAuthCoreImplLogoutServlet', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingAuthCoreImplLogoutServlet', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingAuthCoreImplLogoutServlet', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingAuthCoreImplLogoutServlet', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingAuthCoreImplLogoutServlet', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingAuthCoreImplLogoutServlet', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('OrgApacheSlingAuthCoreImplLogoutServlet', 'sling.servlet.methods') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('OrgApacheSlingAuthCoreImplLogoutServlet', 'sling.servlet.paths') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingCaconfigImplConfigurationBindingsValueProvider', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingCaconfigImplConfigurationBindingsValueProvider', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingCaconfigImplConfigurationBindingsValueProvider', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingCaconfigImplConfigurationBindingsValueProvider', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingCaconfigImplConfigurationBindingsValueProvider', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingCaconfigImplConfigurationBindingsValueProvider', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('OrgApacheSlingCaconfigImplConfigurationBindingsValueProvider', 'enabled') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingCaconfigImplConfigurationResolverImpl', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingCaconfigImplConfigurationResolverImpl', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingCaconfigImplConfigurationResolverImpl', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingCaconfigImplConfigurationResolverImpl', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingCaconfigImplConfigurationResolverImpl', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingCaconfigImplConfigurationResolverImpl', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('OrgApacheSlingCaconfigImplConfigurationResolverImpl', 'configBucketNames') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('OrgApacheSlingCaconfigImplDefDefaultConfigurationInheritanceStra', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingCaconfigImplDefDefaultConfigurationInheritanceStra', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingCaconfigImplDefDefaultConfigurationInheritanceStra', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingCaconfigImplDefDefaultConfigurationInheritanceStra', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingCaconfigImplDefDefaultConfigurationInheritanceStra', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingCaconfigImplDefDefaultConfigurationInheritanceStra', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('OrgApacheSlingCaconfigImplDefDefaultConfigurationInheritanceStra', 'enabled') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingCaconfigImplDefDefaultConfigurationInheritanceStra', 'configPropertyInheritancePropertyNames') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('OrgApacheSlingCaconfigImplDefDefaultConfigurationPersistenceStra', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingCaconfigImplDefDefaultConfigurationPersistenceStra', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingCaconfigImplDefDefaultConfigurationPersistenceStra', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingCaconfigImplDefDefaultConfigurationPersistenceStra', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingCaconfigImplDefDefaultConfigurationPersistenceStra', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingCaconfigImplDefDefaultConfigurationPersistenceStra', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('OrgApacheSlingCaconfigImplDefDefaultConfigurationPersistenceStra', 'enabled') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingCaconfigImplOverrideOsgiConfigurationOverrideProvi', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingCaconfigImplOverrideOsgiConfigurationOverrideProvi', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingCaconfigImplOverrideOsgiConfigurationOverrideProvi', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingCaconfigImplOverrideOsgiConfigurationOverrideProvi', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingCaconfigImplOverrideOsgiConfigurationOverrideProvi', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingCaconfigImplOverrideOsgiConfigurationOverrideProvi', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('OrgApacheSlingCaconfigImplOverrideOsgiConfigurationOverrideProvi', 'description') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingCaconfigImplOverrideOsgiConfigurationOverrideProvi', 'overrides') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('OrgApacheSlingCaconfigImplOverrideOsgiConfigurationOverrideProvi', 'enabled') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingCaconfigImplOverrideOsgiConfigurationOverrideProvi', 'service.ranking') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingCaconfigImplOverrideSystemPropertyConfigurationOve', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingCaconfigImplOverrideSystemPropertyConfigurationOve', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingCaconfigImplOverrideSystemPropertyConfigurationOve', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingCaconfigImplOverrideSystemPropertyConfigurationOve', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingCaconfigImplOverrideSystemPropertyConfigurationOve', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingCaconfigImplOverrideSystemPropertyConfigurationOve', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('OrgApacheSlingCaconfigImplOverrideSystemPropertyConfigurationOve', 'enabled') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingCaconfigImplOverrideSystemPropertyConfigurationOve', 'service.ranking') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingCaconfigManagementImplConfigurationManagementSetti', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingCaconfigManagementImplConfigurationManagementSetti', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingCaconfigManagementImplConfigurationManagementSetti', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingCaconfigManagementImplConfigurationManagementSetti', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingCaconfigManagementImplConfigurationManagementSetti', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingCaconfigManagementImplConfigurationManagementSetti', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('OrgApacheSlingCaconfigManagementImplConfigurationManagementSetti', 'ignorePropertyNameRegex') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('OrgApacheSlingCaconfigManagementImplConfigurationManagementSetti', 'configCollectionPropertiesResourceNames') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('OrgApacheSlingCaconfigResourceImplDefDefaultConfigurationResour', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingCaconfigResourceImplDefDefaultConfigurationResour', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingCaconfigResourceImplDefDefaultConfigurationResour', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingCaconfigResourceImplDefDefaultConfigurationResour', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingCaconfigResourceImplDefDefaultConfigurationResour', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingCaconfigResourceImplDefDefaultConfigurationResour', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('OrgApacheSlingCaconfigResourceImplDefDefaultConfigurationResour', 'enabled') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingCaconfigResourceImplDefDefaultConfigurationResour', 'configPath') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingCaconfigResourceImplDefDefaultConfigurationResour', 'fallbackPaths') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('OrgApacheSlingCaconfigResourceImplDefDefaultConfigurationResour', 'configCollectionInheritancePropertyNames') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('OrgApacheSlingCaconfigResourceImplDefDefaultContextPathStrategy', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingCaconfigResourceImplDefDefaultContextPathStrategy', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingCaconfigResourceImplDefDefaultContextPathStrategy', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingCaconfigResourceImplDefDefaultContextPathStrategy', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingCaconfigResourceImplDefDefaultContextPathStrategy', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingCaconfigResourceImplDefDefaultContextPathStrategy', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('OrgApacheSlingCaconfigResourceImplDefDefaultContextPathStrategy', 'enabled') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingCaconfigResourceImplDefDefaultContextPathStrategy', 'configRefResourceNames') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('OrgApacheSlingCaconfigResourceImplDefDefaultContextPathStrategy', 'configRefPropertyNames') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('OrgApacheSlingCaconfigResourceImplDefDefaultContextPathStrategy', 'service.ranking') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingCommonsHtmlInternalTagsoupHtmlParser', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingCommonsHtmlInternalTagsoupHtmlParser', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingCommonsHtmlInternalTagsoupHtmlParser', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingCommonsHtmlInternalTagsoupHtmlParser', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingCommonsHtmlInternalTagsoupHtmlParser', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingCommonsHtmlInternalTagsoupHtmlParser', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('OrgApacheSlingCommonsHtmlInternalTagsoupHtmlParser', 'parser.features') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('OrgApacheSlingCommonsLogLogManager', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingCommonsLogLogManager', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingCommonsLogLogManager', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingCommonsLogLogManager', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingCommonsLogLogManager', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingCommonsLogLogManager', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('OrgApacheSlingCommonsLogLogManager', 'org.apache.sling.commons.log.level') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingCommonsLogLogManager', 'org.apache.sling.commons.log.file') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingCommonsLogLogManager', 'org.apache.sling.commons.log.file.number') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingCommonsLogLogManager', 'org.apache.sling.commons.log.file.size') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingCommonsLogLogManager', 'org.apache.sling.commons.log.pattern') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingCommonsLogLogManager', 'org.apache.sling.commons.log.configurationFile') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingCommonsLogLogManager', 'org.apache.sling.commons.log.packagingDataEnabled') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingCommonsLogLogManager', 'org.apache.sling.commons.log.maxCallerDataDepth') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingCommonsLogLogManager', 'org.apache.sling.commons.log.maxOldFileCountInDump') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingCommonsLogLogManager', 'org.apache.sling.commons.log.numOfLines') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingCommonsLogLogManagerFactoryConfig', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingCommonsLogLogManagerFactoryConfig', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingCommonsLogLogManagerFactoryConfig', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingCommonsLogLogManagerFactoryConfig', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingCommonsLogLogManagerFactoryConfig', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingCommonsLogLogManagerFactoryConfig', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('OrgApacheSlingCommonsLogLogManagerFactoryConfig', 'org.apache.sling.commons.log.level') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingCommonsLogLogManagerFactoryConfig', 'org.apache.sling.commons.log.file') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingCommonsLogLogManagerFactoryConfig', 'org.apache.sling.commons.log.pattern') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingCommonsLogLogManagerFactoryConfig', 'org.apache.sling.commons.log.names') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('OrgApacheSlingCommonsLogLogManagerFactoryConfig', 'org.apache.sling.commons.log.additiv') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingCommonsLogLogManagerFactoryWriter', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingCommonsLogLogManagerFactoryWriter', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingCommonsLogLogManagerFactoryWriter', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingCommonsLogLogManagerFactoryWriter', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingCommonsLogLogManagerFactoryWriter', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingCommonsLogLogManagerFactoryWriter', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('OrgApacheSlingCommonsLogLogManagerFactoryWriter', 'org.apache.sling.commons.log.file') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingCommonsLogLogManagerFactoryWriter', 'org.apache.sling.commons.log.file.number') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingCommonsLogLogManagerFactoryWriter', 'org.apache.sling.commons.log.file.size') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingCommonsLogLogManagerFactoryWriter', 'org.apache.sling.commons.log.file.buffered') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingCommonsMetricsInternalLogReporter', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingCommonsMetricsInternalLogReporter', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingCommonsMetricsInternalLogReporter', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingCommonsMetricsInternalLogReporter', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingCommonsMetricsInternalLogReporter', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingCommonsMetricsInternalLogReporter', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('OrgApacheSlingCommonsMetricsInternalLogReporter', 'period') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingCommonsMetricsInternalLogReporter', 'timeUnit') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingCommonsMetricsInternalLogReporter', 'level') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingCommonsMetricsInternalLogReporter', 'loggerName') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingCommonsMetricsInternalLogReporter', 'prefix') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingCommonsMetricsInternalLogReporter', 'pattern') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingCommonsMetricsInternalLogReporter', 'registryName') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingCommonsMetricsRrd4jImplCodahaleMetricsReporter', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingCommonsMetricsRrd4jImplCodahaleMetricsReporter', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingCommonsMetricsRrd4jImplCodahaleMetricsReporter', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingCommonsMetricsRrd4jImplCodahaleMetricsReporter', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingCommonsMetricsRrd4jImplCodahaleMetricsReporter', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingCommonsMetricsRrd4jImplCodahaleMetricsReporter', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('OrgApacheSlingCommonsMetricsRrd4jImplCodahaleMetricsReporter', 'datasources') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('OrgApacheSlingCommonsMetricsRrd4jImplCodahaleMetricsReporter', 'step') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingCommonsMetricsRrd4jImplCodahaleMetricsReporter', 'archives') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('OrgApacheSlingCommonsMetricsRrd4jImplCodahaleMetricsReporter', 'path') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingCommonsMimeInternalMimeTypeServiceImpl', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingCommonsMimeInternalMimeTypeServiceImpl', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingCommonsMimeInternalMimeTypeServiceImpl', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingCommonsMimeInternalMimeTypeServiceImpl', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingCommonsMimeInternalMimeTypeServiceImpl', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingCommonsMimeInternalMimeTypeServiceImpl', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('OrgApacheSlingCommonsMimeInternalMimeTypeServiceImpl', 'mime.types') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('OrgApacheSlingCommonsSchedulerImplQuartzScheduler', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingCommonsSchedulerImplQuartzScheduler', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingCommonsSchedulerImplQuartzScheduler', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingCommonsSchedulerImplQuartzScheduler', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingCommonsSchedulerImplQuartzScheduler', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingCommonsSchedulerImplQuartzScheduler', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('OrgApacheSlingCommonsSchedulerImplQuartzScheduler', 'poolName') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingCommonsSchedulerImplQuartzScheduler', 'allowedPoolNames') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('OrgApacheSlingCommonsSchedulerImplQuartzScheduler', 'scheduler.useleaderforsingle') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingCommonsSchedulerImplQuartzScheduler', 'metrics.filters') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('OrgApacheSlingCommonsSchedulerImplQuartzScheduler', 'slowThresholdMillis') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingCommonsSchedulerImplSchedulerHealthCheck', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingCommonsSchedulerImplSchedulerHealthCheck', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingCommonsSchedulerImplSchedulerHealthCheck', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingCommonsSchedulerImplSchedulerHealthCheck', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingCommonsSchedulerImplSchedulerHealthCheck', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingCommonsSchedulerImplSchedulerHealthCheck', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('OrgApacheSlingCommonsSchedulerImplSchedulerHealthCheck', 'max.quartzJob.duration.acceptable') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingCommonsThreadsImplDefaultThreadPoolFactory', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingCommonsThreadsImplDefaultThreadPoolFactory', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingCommonsThreadsImplDefaultThreadPoolFactory', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingCommonsThreadsImplDefaultThreadPoolFactory', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingCommonsThreadsImplDefaultThreadPoolFactory', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingCommonsThreadsImplDefaultThreadPoolFactory', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('OrgApacheSlingCommonsThreadsImplDefaultThreadPoolFactory', 'name') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingCommonsThreadsImplDefaultThreadPoolFactory', 'minPoolSize') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingCommonsThreadsImplDefaultThreadPoolFactory', 'maxPoolSize') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingCommonsThreadsImplDefaultThreadPoolFactory', 'queueSize') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingCommonsThreadsImplDefaultThreadPoolFactory', 'maxThreadAge') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingCommonsThreadsImplDefaultThreadPoolFactory', 'keepAliveTime') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingCommonsThreadsImplDefaultThreadPoolFactory', 'blockPolicy') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingCommonsThreadsImplDefaultThreadPoolFactory', 'shutdownGraceful') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingCommonsThreadsImplDefaultThreadPoolFactory', 'daemon') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingCommonsThreadsImplDefaultThreadPoolFactory', 'shutdownWaitTime') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingCommonsThreadsImplDefaultThreadPoolFactory', 'priority') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDatasourceDataSourceFactory', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDatasourceDataSourceFactory', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDatasourceDataSourceFactory', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDatasourceDataSourceFactory', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDatasourceDataSourceFactory', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDatasourceDataSourceFactory', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('OrgApacheSlingDatasourceDataSourceFactory', 'datasource.name') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDatasourceDataSourceFactory', 'datasource.svc.prop.name') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDatasourceDataSourceFactory', 'driverClassName') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDatasourceDataSourceFactory', 'url') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDatasourceDataSourceFactory', 'username') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDatasourceDataSourceFactory', 'password') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDatasourceDataSourceFactory', 'defaultAutoCommit') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDatasourceDataSourceFactory', 'defaultReadOnly') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDatasourceDataSourceFactory', 'defaultTransactionIsolation') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDatasourceDataSourceFactory', 'defaultCatalog') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDatasourceDataSourceFactory', 'maxActive') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDatasourceDataSourceFactory', 'maxIdle') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDatasourceDataSourceFactory', 'minIdle') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDatasourceDataSourceFactory', 'initialSize') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDatasourceDataSourceFactory', 'maxWait') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDatasourceDataSourceFactory', 'maxAge') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDatasourceDataSourceFactory', 'testOnBorrow') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDatasourceDataSourceFactory', 'testOnReturn') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDatasourceDataSourceFactory', 'testWhileIdle') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDatasourceDataSourceFactory', 'validationQuery') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDatasourceDataSourceFactory', 'validationQueryTimeout') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDatasourceDataSourceFactory', 'timeBetweenEvictionRunsMillis') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDatasourceDataSourceFactory', 'minEvictableIdleTimeMillis') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDatasourceDataSourceFactory', 'connectionProperties') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDatasourceDataSourceFactory', 'initSQL') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDatasourceDataSourceFactory', 'jdbcInterceptors') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDatasourceDataSourceFactory', 'validationInterval') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDatasourceDataSourceFactory', 'logValidationErrors') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDatasourceDataSourceFactory', 'datasource.svc.properties') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('OrgApacheSlingDatasourceJNDIDataSourceFactory', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDatasourceJNDIDataSourceFactory', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDatasourceJNDIDataSourceFactory', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDatasourceJNDIDataSourceFactory', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDatasourceJNDIDataSourceFactory', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDatasourceJNDIDataSourceFactory', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('OrgApacheSlingDatasourceJNDIDataSourceFactory', 'datasource.name') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDatasourceJNDIDataSourceFactory', 'datasource.svc.prop.name') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDatasourceJNDIDataSourceFactory', 'datasource.jndi.name') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDatasourceJNDIDataSourceFactory', 'jndi.properties') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('OrgApacheSlingDiscoveryOakConfig', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDiscoveryOakConfig', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDiscoveryOakConfig', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDiscoveryOakConfig', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDiscoveryOakConfig', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDiscoveryOakConfig', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('OrgApacheSlingDiscoveryOakConfig', 'connectorPingTimeout') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDiscoveryOakConfig', 'connectorPingInterval') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDiscoveryOakConfig', 'discoveryLiteCheckInterval') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDiscoveryOakConfig', 'clusterSyncServiceTimeout') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDiscoveryOakConfig', 'clusterSyncServiceInterval') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDiscoveryOakConfig', 'enableSyncToken') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDiscoveryOakConfig', 'minEventDelay') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDiscoveryOakConfig', 'socketConnectTimeout') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDiscoveryOakConfig', 'soTimeout') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDiscoveryOakConfig', 'topologyConnectorUrls') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('OrgApacheSlingDiscoveryOakConfig', 'topologyConnectorWhitelist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('OrgApacheSlingDiscoveryOakConfig', 'autoStopLocalLoopEnabled') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDiscoveryOakConfig', 'gzipConnectorRequestsEnabled') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDiscoveryOakConfig', 'hmacEnabled') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDiscoveryOakConfig', 'enableEncryption') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDiscoveryOakConfig', 'sharedKey') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDiscoveryOakConfig', 'hmacSharedKeyTTL') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDiscoveryOakConfig', 'backoffStandbyFactor') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDiscoveryOakConfig', 'backoffStableFactor') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDiscoveryOakSynchronizedClocksHealthCheck', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDiscoveryOakSynchronizedClocksHealthCheck', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDiscoveryOakSynchronizedClocksHealthCheck', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDiscoveryOakSynchronizedClocksHealthCheck', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDiscoveryOakSynchronizedClocksHealthCheck', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDiscoveryOakSynchronizedClocksHealthCheck', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('OrgApacheSlingDiscoveryOakSynchronizedClocksHealthCheck', 'hc.name') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDiscoveryOakSynchronizedClocksHealthCheck', 'hc.tags') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('OrgApacheSlingDiscoveryOakSynchronizedClocksHealthCheck', 'hc.mbean.name') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDistributionAgentImplForwardDistributionAgentFacto', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDistributionAgentImplForwardDistributionAgentFacto', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDistributionAgentImplForwardDistributionAgentFacto', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDistributionAgentImplForwardDistributionAgentFacto', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDistributionAgentImplForwardDistributionAgentFacto', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDistributionAgentImplForwardDistributionAgentFacto', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('OrgApacheSlingDistributionAgentImplForwardDistributionAgentFacto', 'name') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDistributionAgentImplForwardDistributionAgentFacto', 'title') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDistributionAgentImplForwardDistributionAgentFacto', 'details') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDistributionAgentImplForwardDistributionAgentFacto', 'enabled') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDistributionAgentImplForwardDistributionAgentFacto', 'serviceName') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDistributionAgentImplForwardDistributionAgentFacto', 'log.level') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDistributionAgentImplForwardDistributionAgentFacto', 'allowed.roots') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('OrgApacheSlingDistributionAgentImplForwardDistributionAgentFacto', 'queue.processing.enabled') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDistributionAgentImplForwardDistributionAgentFacto', 'packageImporter.endpoints') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('OrgApacheSlingDistributionAgentImplForwardDistributionAgentFacto', 'passiveQueues') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('OrgApacheSlingDistributionAgentImplForwardDistributionAgentFacto', 'priorityQueues') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('OrgApacheSlingDistributionAgentImplForwardDistributionAgentFacto', 'retry.strategy') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDistributionAgentImplForwardDistributionAgentFacto', 'retry.attempts') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDistributionAgentImplForwardDistributionAgentFacto', 'requestAuthorizationStrategy.target') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDistributionAgentImplForwardDistributionAgentFacto', 'transportSecretProvider.target') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDistributionAgentImplForwardDistributionAgentFacto', 'packageBuilder.target') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDistributionAgentImplForwardDistributionAgentFacto', 'triggers.target') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDistributionAgentImplForwardDistributionAgentFacto', 'queue.provider') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDistributionAgentImplForwardDistributionAgentFacto', 'async.delivery') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDistributionAgentImplForwardDistributionAgentFacto', 'http.conn.timeout') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDistributionAgentImplPrivilegeDistributionRequestA', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDistributionAgentImplPrivilegeDistributionRequestA', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDistributionAgentImplPrivilegeDistributionRequestA', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDistributionAgentImplPrivilegeDistributionRequestA', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDistributionAgentImplPrivilegeDistributionRequestA', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDistributionAgentImplPrivilegeDistributionRequestA', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('OrgApacheSlingDistributionAgentImplPrivilegeDistributionRequestA', 'name') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDistributionAgentImplPrivilegeDistributionRequestA', 'jcrPrivilege') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDistributionAgentImplQueueDistributionAgentFactory', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDistributionAgentImplQueueDistributionAgentFactory', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDistributionAgentImplQueueDistributionAgentFactory', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDistributionAgentImplQueueDistributionAgentFactory', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDistributionAgentImplQueueDistributionAgentFactory', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDistributionAgentImplQueueDistributionAgentFactory', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('OrgApacheSlingDistributionAgentImplQueueDistributionAgentFactory', 'name') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDistributionAgentImplQueueDistributionAgentFactory', 'title') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDistributionAgentImplQueueDistributionAgentFactory', 'details') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDistributionAgentImplQueueDistributionAgentFactory', 'enabled') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDistributionAgentImplQueueDistributionAgentFactory', 'serviceName') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDistributionAgentImplQueueDistributionAgentFactory', 'log.level') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDistributionAgentImplQueueDistributionAgentFactory', 'allowed.roots') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('OrgApacheSlingDistributionAgentImplQueueDistributionAgentFactory', 'requestAuthorizationStrategy.target') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDistributionAgentImplQueueDistributionAgentFactory', 'queueProviderFactory.target') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDistributionAgentImplQueueDistributionAgentFactory', 'packageBuilder.target') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDistributionAgentImplQueueDistributionAgentFactory', 'triggers.target') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDistributionAgentImplQueueDistributionAgentFactory', 'priorityQueues') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('OrgApacheSlingDistributionAgentImplReverseDistributionAgentFacto', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDistributionAgentImplReverseDistributionAgentFacto', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDistributionAgentImplReverseDistributionAgentFacto', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDistributionAgentImplReverseDistributionAgentFacto', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDistributionAgentImplReverseDistributionAgentFacto', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDistributionAgentImplReverseDistributionAgentFacto', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('OrgApacheSlingDistributionAgentImplReverseDistributionAgentFacto', 'name') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDistributionAgentImplReverseDistributionAgentFacto', 'title') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDistributionAgentImplReverseDistributionAgentFacto', 'details') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDistributionAgentImplReverseDistributionAgentFacto', 'enabled') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDistributionAgentImplReverseDistributionAgentFacto', 'serviceName') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDistributionAgentImplReverseDistributionAgentFacto', 'log.level') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDistributionAgentImplReverseDistributionAgentFacto', 'queue.processing.enabled') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDistributionAgentImplReverseDistributionAgentFacto', 'packageExporter.endpoints') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('OrgApacheSlingDistributionAgentImplReverseDistributionAgentFacto', 'pull.items') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDistributionAgentImplReverseDistributionAgentFacto', 'http.conn.timeout') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDistributionAgentImplReverseDistributionAgentFacto', 'requestAuthorizationStrategy.target') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDistributionAgentImplReverseDistributionAgentFacto', 'transportSecretProvider.target') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDistributionAgentImplReverseDistributionAgentFacto', 'packageBuilder.target') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDistributionAgentImplReverseDistributionAgentFacto', 'triggers.target') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDistributionAgentImplSimpleDistributionAgentFactor', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDistributionAgentImplSimpleDistributionAgentFactor', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDistributionAgentImplSimpleDistributionAgentFactor', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDistributionAgentImplSimpleDistributionAgentFactor', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDistributionAgentImplSimpleDistributionAgentFactor', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDistributionAgentImplSimpleDistributionAgentFactor', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('OrgApacheSlingDistributionAgentImplSimpleDistributionAgentFactor', 'name') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDistributionAgentImplSimpleDistributionAgentFactor', 'title') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDistributionAgentImplSimpleDistributionAgentFactor', 'details') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDistributionAgentImplSimpleDistributionAgentFactor', 'enabled') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDistributionAgentImplSimpleDistributionAgentFactor', 'serviceName') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDistributionAgentImplSimpleDistributionAgentFactor', 'log.level') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDistributionAgentImplSimpleDistributionAgentFactor', 'queue.processing.enabled') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDistributionAgentImplSimpleDistributionAgentFactor', 'packageExporter.target') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDistributionAgentImplSimpleDistributionAgentFactor', 'packageImporter.target') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDistributionAgentImplSimpleDistributionAgentFactor', 'requestAuthorizationStrategy.target') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDistributionAgentImplSimpleDistributionAgentFactor', 'triggers.target') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDistributionAgentImplSyncDistributionAgentFactory', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDistributionAgentImplSyncDistributionAgentFactory', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDistributionAgentImplSyncDistributionAgentFactory', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDistributionAgentImplSyncDistributionAgentFactory', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDistributionAgentImplSyncDistributionAgentFactory', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDistributionAgentImplSyncDistributionAgentFactory', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('OrgApacheSlingDistributionAgentImplSyncDistributionAgentFactory', 'name') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDistributionAgentImplSyncDistributionAgentFactory', 'title') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDistributionAgentImplSyncDistributionAgentFactory', 'details') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDistributionAgentImplSyncDistributionAgentFactory', 'enabled') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDistributionAgentImplSyncDistributionAgentFactory', 'serviceName') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDistributionAgentImplSyncDistributionAgentFactory', 'log.level') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDistributionAgentImplSyncDistributionAgentFactory', 'queue.processing.enabled') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDistributionAgentImplSyncDistributionAgentFactory', 'passiveQueues') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('OrgApacheSlingDistributionAgentImplSyncDistributionAgentFactory', 'packageExporter.endpoints') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('OrgApacheSlingDistributionAgentImplSyncDistributionAgentFactory', 'packageImporter.endpoints') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('OrgApacheSlingDistributionAgentImplSyncDistributionAgentFactory', 'retry.strategy') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDistributionAgentImplSyncDistributionAgentFactory', 'retry.attempts') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDistributionAgentImplSyncDistributionAgentFactory', 'pull.items') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDistributionAgentImplSyncDistributionAgentFactory', 'http.conn.timeout') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDistributionAgentImplSyncDistributionAgentFactory', 'requestAuthorizationStrategy.target') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDistributionAgentImplSyncDistributionAgentFactory', 'transportSecretProvider.target') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDistributionAgentImplSyncDistributionAgentFactory', 'packageBuilder.target') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDistributionAgentImplSyncDistributionAgentFactory', 'triggers.target') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDistributionMonitorDistributionQueueHealthCheck', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDistributionMonitorDistributionQueueHealthCheck', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDistributionMonitorDistributionQueueHealthCheck', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDistributionMonitorDistributionQueueHealthCheck', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDistributionMonitorDistributionQueueHealthCheck', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDistributionMonitorDistributionQueueHealthCheck', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('OrgApacheSlingDistributionMonitorDistributionQueueHealthCheck', 'hc.name') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDistributionMonitorDistributionQueueHealthCheck', 'hc.tags') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('OrgApacheSlingDistributionMonitorDistributionQueueHealthCheck', 'hc.mbean.name') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDistributionMonitorDistributionQueueHealthCheck', 'numberOfRetriesAllowed') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDistributionPackagingImplExporterAgentDistributio', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDistributionPackagingImplExporterAgentDistributio', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDistributionPackagingImplExporterAgentDistributio', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDistributionPackagingImplExporterAgentDistributio', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDistributionPackagingImplExporterAgentDistributio', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDistributionPackagingImplExporterAgentDistributio', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('OrgApacheSlingDistributionPackagingImplExporterAgentDistributio', 'name') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDistributionPackagingImplExporterAgentDistributio', 'queue') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDistributionPackagingImplExporterAgentDistributio', 'drop.invalid.items') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDistributionPackagingImplExporterAgentDistributio', 'agent.target') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDistributionPackagingImplExporterLocalDistributio', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDistributionPackagingImplExporterLocalDistributio', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDistributionPackagingImplExporterLocalDistributio', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDistributionPackagingImplExporterLocalDistributio', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDistributionPackagingImplExporterLocalDistributio', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDistributionPackagingImplExporterLocalDistributio', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('OrgApacheSlingDistributionPackagingImplExporterLocalDistributio', 'name') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDistributionPackagingImplExporterLocalDistributio', 'packageBuilder.target') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDistributionPackagingImplExporterRemoteDistributi', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDistributionPackagingImplExporterRemoteDistributi', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDistributionPackagingImplExporterRemoteDistributi', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDistributionPackagingImplExporterRemoteDistributi', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDistributionPackagingImplExporterRemoteDistributi', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDistributionPackagingImplExporterRemoteDistributi', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('OrgApacheSlingDistributionPackagingImplExporterRemoteDistributi', 'name') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDistributionPackagingImplExporterRemoteDistributi', 'endpoints') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('OrgApacheSlingDistributionPackagingImplExporterRemoteDistributi', 'pull.items') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDistributionPackagingImplExporterRemoteDistributi', 'packageBuilder.target') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDistributionPackagingImplExporterRemoteDistributi', 'transportSecretProvider.target') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDistributionPackagingImplImporterLocalDistributio', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDistributionPackagingImplImporterLocalDistributio', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDistributionPackagingImplImporterLocalDistributio', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDistributionPackagingImplImporterLocalDistributio', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDistributionPackagingImplImporterLocalDistributio', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDistributionPackagingImplImporterLocalDistributio', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('OrgApacheSlingDistributionPackagingImplImporterLocalDistributio', 'name') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDistributionPackagingImplImporterLocalDistributio', 'packageBuilder.target') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDistributionPackagingImplImporterRemoteDistributi', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDistributionPackagingImplImporterRemoteDistributi', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDistributionPackagingImplImporterRemoteDistributi', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDistributionPackagingImplImporterRemoteDistributi', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDistributionPackagingImplImporterRemoteDistributi', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDistributionPackagingImplImporterRemoteDistributi', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('OrgApacheSlingDistributionPackagingImplImporterRemoteDistributi', 'name') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDistributionPackagingImplImporterRemoteDistributi', 'endpoints') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('OrgApacheSlingDistributionPackagingImplImporterRemoteDistributi', 'transportSecretProvider.target') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDistributionPackagingImplImporterRepositoryDistri', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDistributionPackagingImplImporterRepositoryDistri', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDistributionPackagingImplImporterRepositoryDistri', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDistributionPackagingImplImporterRepositoryDistri', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDistributionPackagingImplImporterRepositoryDistri', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDistributionPackagingImplImporterRepositoryDistri', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('OrgApacheSlingDistributionPackagingImplImporterRepositoryDistri', 'name') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDistributionPackagingImplImporterRepositoryDistri', 'service.name') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDistributionPackagingImplImporterRepositoryDistri', 'path') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDistributionPackagingImplImporterRepositoryDistri', 'privilege.name') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDistributionResourcesImplDistributionConfiguration', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDistributionResourcesImplDistributionConfiguration', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDistributionResourcesImplDistributionConfiguration', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDistributionResourcesImplDistributionConfiguration', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDistributionResourcesImplDistributionConfiguration', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDistributionResourcesImplDistributionConfiguration', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('OrgApacheSlingDistributionResourcesImplDistributionConfiguration', 'provider.roots') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDistributionResourcesImplDistributionConfiguration', 'kind') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDistributionResourcesImplDistributionServiceResour', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDistributionResourcesImplDistributionServiceResour', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDistributionResourcesImplDistributionServiceResour', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDistributionResourcesImplDistributionServiceResour', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDistributionResourcesImplDistributionServiceResour', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDistributionResourcesImplDistributionServiceResour', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('OrgApacheSlingDistributionResourcesImplDistributionServiceResour', 'provider.roots') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDistributionResourcesImplDistributionServiceResour', 'kind') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDistributionSerializationImplDistributionPackageBu', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDistributionSerializationImplDistributionPackageBu', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDistributionSerializationImplDistributionPackageBu', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDistributionSerializationImplDistributionPackageBu', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDistributionSerializationImplDistributionPackageBu', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDistributionSerializationImplDistributionPackageBu', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('OrgApacheSlingDistributionSerializationImplDistributionPackageBu', 'name') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDistributionSerializationImplDistributionPackageBu', 'type') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDistributionSerializationImplDistributionPackageBu', 'format.target') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDistributionSerializationImplDistributionPackageBu', 'tempFsFolder') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDistributionSerializationImplDistributionPackageBu', 'fileThreshold') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDistributionSerializationImplDistributionPackageBu', 'memoryUnit') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDistributionSerializationImplDistributionPackageBu', 'useOffHeapMemory') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDistributionSerializationImplDistributionPackageBu', 'digestAlgorithm') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDistributionSerializationImplDistributionPackageBu', 'monitoringQueueSize') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDistributionSerializationImplDistributionPackageBu', 'cleanupDelay') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDistributionSerializationImplDistributionPackageBu', 'package.filters') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('OrgApacheSlingDistributionSerializationImplDistributionPackageBu', 'property.filters') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('OrgApacheSlingDistributionSerializationImplVltVaultDistribution', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDistributionSerializationImplVltVaultDistribution', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDistributionSerializationImplVltVaultDistribution', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDistributionSerializationImplVltVaultDistribution', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDistributionSerializationImplVltVaultDistribution', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDistributionSerializationImplVltVaultDistribution', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('OrgApacheSlingDistributionSerializationImplVltVaultDistribution', 'name') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDistributionSerializationImplVltVaultDistribution', 'type') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDistributionSerializationImplVltVaultDistribution', 'importMode') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDistributionSerializationImplVltVaultDistribution', 'aclHandling') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDistributionSerializationImplVltVaultDistribution', 'package.roots') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDistributionSerializationImplVltVaultDistribution', 'package.filters') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('OrgApacheSlingDistributionSerializationImplVltVaultDistribution', 'property.filters') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('OrgApacheSlingDistributionSerializationImplVltVaultDistribution', 'tempFsFolder') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDistributionSerializationImplVltVaultDistribution', 'useBinaryReferences') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDistributionSerializationImplVltVaultDistribution', 'autoSaveThreshold') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDistributionSerializationImplVltVaultDistribution', 'cleanupDelay') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDistributionSerializationImplVltVaultDistribution', 'fileThreshold') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDistributionSerializationImplVltVaultDistribution', 'MEGA_BYTES') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDistributionSerializationImplVltVaultDistribution', 'useOffHeapMemory') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDistributionSerializationImplVltVaultDistribution', 'digestAlgorithm') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDistributionSerializationImplVltVaultDistribution', 'monitoringQueueSize') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDistributionSerializationImplVltVaultDistribution', 'pathsMapping') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('OrgApacheSlingDistributionSerializationImplVltVaultDistribution', 'strictImport') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDistributionTransportImplUserCredentialsDistributi', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDistributionTransportImplUserCredentialsDistributi', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDistributionTransportImplUserCredentialsDistributi', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDistributionTransportImplUserCredentialsDistributi', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDistributionTransportImplUserCredentialsDistributi', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDistributionTransportImplUserCredentialsDistributi', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('OrgApacheSlingDistributionTransportImplUserCredentialsDistributi', 'name') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDistributionTransportImplUserCredentialsDistributi', 'username') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDistributionTransportImplUserCredentialsDistributi', 'password') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDistributionTriggerImplDistributionEventDistribute', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDistributionTriggerImplDistributionEventDistribute', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDistributionTriggerImplDistributionEventDistribute', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDistributionTriggerImplDistributionEventDistribute', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDistributionTriggerImplDistributionEventDistribute', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDistributionTriggerImplDistributionEventDistribute', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('OrgApacheSlingDistributionTriggerImplDistributionEventDistribute', 'name') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDistributionTriggerImplDistributionEventDistribute', 'path') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDistributionTriggerImplJcrEventDistributionTrigger', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDistributionTriggerImplJcrEventDistributionTrigger', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDistributionTriggerImplJcrEventDistributionTrigger', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDistributionTriggerImplJcrEventDistributionTrigger', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDistributionTriggerImplJcrEventDistributionTrigger', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDistributionTriggerImplJcrEventDistributionTrigger', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('OrgApacheSlingDistributionTriggerImplJcrEventDistributionTrigger', 'name') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDistributionTriggerImplJcrEventDistributionTrigger', 'path') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDistributionTriggerImplJcrEventDistributionTrigger', 'ignoredPathsPatterns') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('OrgApacheSlingDistributionTriggerImplJcrEventDistributionTrigger', 'serviceName') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDistributionTriggerImplJcrEventDistributionTrigger', 'deep') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDistributionTriggerImplPersistedJcrEventDistributi', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDistributionTriggerImplPersistedJcrEventDistributi', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDistributionTriggerImplPersistedJcrEventDistributi', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDistributionTriggerImplPersistedJcrEventDistributi', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDistributionTriggerImplPersistedJcrEventDistributi', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDistributionTriggerImplPersistedJcrEventDistributi', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('OrgApacheSlingDistributionTriggerImplPersistedJcrEventDistributi', 'name') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDistributionTriggerImplPersistedJcrEventDistributi', 'path') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDistributionTriggerImplPersistedJcrEventDistributi', 'serviceName') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDistributionTriggerImplPersistedJcrEventDistributi', 'nuggetsPath') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDistributionTriggerImplRemoteEventDistributionTrig', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDistributionTriggerImplRemoteEventDistributionTrig', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDistributionTriggerImplRemoteEventDistributionTrig', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDistributionTriggerImplRemoteEventDistributionTrig', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDistributionTriggerImplRemoteEventDistributionTrig', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDistributionTriggerImplRemoteEventDistributionTrig', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('OrgApacheSlingDistributionTriggerImplRemoteEventDistributionTrig', 'name') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDistributionTriggerImplRemoteEventDistributionTrig', 'endpoint') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDistributionTriggerImplRemoteEventDistributionTrig', 'transportSecretProvider.target') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDistributionTriggerImplResourceEventDistributionTr', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDistributionTriggerImplResourceEventDistributionTr', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDistributionTriggerImplResourceEventDistributionTr', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDistributionTriggerImplResourceEventDistributionTr', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDistributionTriggerImplResourceEventDistributionTr', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDistributionTriggerImplResourceEventDistributionTr', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('OrgApacheSlingDistributionTriggerImplResourceEventDistributionTr', 'name') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDistributionTriggerImplResourceEventDistributionTr', 'path') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDistributionTriggerImplScheduledDistributionTrigge', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDistributionTriggerImplScheduledDistributionTrigge', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDistributionTriggerImplScheduledDistributionTrigge', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDistributionTriggerImplScheduledDistributionTrigge', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDistributionTriggerImplScheduledDistributionTrigge', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDistributionTriggerImplScheduledDistributionTrigge', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('OrgApacheSlingDistributionTriggerImplScheduledDistributionTrigge', 'name') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDistributionTriggerImplScheduledDistributionTrigge', 'path') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDistributionTriggerImplScheduledDistributionTrigge', 'seconds') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingDistributionTriggerImplScheduledDistributionTrigge', 'serviceName') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingEngineImplAuthSlingAuthenticator', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingEngineImplAuthSlingAuthenticator', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingEngineImplAuthSlingAuthenticator', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingEngineImplAuthSlingAuthenticator', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingEngineImplAuthSlingAuthenticator', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingEngineImplAuthSlingAuthenticator', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('OrgApacheSlingEngineImplAuthSlingAuthenticator', 'osgi.http.whiteboard.context.select') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingEngineImplAuthSlingAuthenticator', 'osgi.http.whiteboard.listener') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingEngineImplAuthSlingAuthenticator', 'auth.sudo.cookie') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingEngineImplAuthSlingAuthenticator', 'auth.sudo.parameter') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingEngineImplAuthSlingAuthenticator', 'auth.annonymous') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingEngineImplAuthSlingAuthenticator', 'sling.auth.requirements') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('OrgApacheSlingEngineImplAuthSlingAuthenticator', 'sling.auth.anonymous.user') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingEngineImplAuthSlingAuthenticator', 'sling.auth.anonymous.password') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingEngineImplAuthSlingAuthenticator', 'auth.http') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingEngineImplAuthSlingAuthenticator', 'auth.http.realm') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingEngineImplAuthSlingAuthenticator', 'auth.uri.suffix') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('OrgApacheSlingEngineImplDebugRequestProgressTrackerLogFilter', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingEngineImplDebugRequestProgressTrackerLogFilter', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingEngineImplDebugRequestProgressTrackerLogFilter', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingEngineImplDebugRequestProgressTrackerLogFilter', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingEngineImplDebugRequestProgressTrackerLogFilter', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingEngineImplDebugRequestProgressTrackerLogFilter', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('OrgApacheSlingEngineImplDebugRequestProgressTrackerLogFilter', 'extensions') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('OrgApacheSlingEngineImplDebugRequestProgressTrackerLogFilter', 'minDurationMs') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingEngineImplDebugRequestProgressTrackerLogFilter', 'maxDurationMs') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingEngineImplDebugRequestProgressTrackerLogFilter', 'compactLogFormat') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingEngineImplLogRequestLogger', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingEngineImplLogRequestLogger', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingEngineImplLogRequestLogger', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingEngineImplLogRequestLogger', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingEngineImplLogRequestLogger', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingEngineImplLogRequestLogger', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('OrgApacheSlingEngineImplLogRequestLogger', 'request.log.output') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingEngineImplLogRequestLogger', 'request.log.outputtype') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingEngineImplLogRequestLogger', 'request.log.enabled') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingEngineImplLogRequestLogger', 'access.log.output') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingEngineImplLogRequestLogger', 'access.log.outputtype') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingEngineImplLogRequestLogger', 'access.log.enabled') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingEngineImplLogRequestLoggerService', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingEngineImplLogRequestLoggerService', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingEngineImplLogRequestLoggerService', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingEngineImplLogRequestLoggerService', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingEngineImplLogRequestLoggerService', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingEngineImplLogRequestLoggerService', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('OrgApacheSlingEngineImplLogRequestLoggerService', 'request.log.service.format') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingEngineImplLogRequestLoggerService', 'request.log.service.output') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingEngineImplLogRequestLoggerService', 'request.log.service.outputtype') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingEngineImplLogRequestLoggerService', 'request.log.service.onentry') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingEngineImplSlingMainServlet', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingEngineImplSlingMainServlet', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingEngineImplSlingMainServlet', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingEngineImplSlingMainServlet', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingEngineImplSlingMainServlet', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingEngineImplSlingMainServlet', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('OrgApacheSlingEngineImplSlingMainServlet', 'sling.max.calls') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingEngineImplSlingMainServlet', 'sling.max.inclusions') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingEngineImplSlingMainServlet', 'sling.trace.allow') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingEngineImplSlingMainServlet', 'sling.max.record.requests') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingEngineImplSlingMainServlet', 'sling.store.pattern.requests') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('OrgApacheSlingEngineImplSlingMainServlet', 'sling.serverinfo') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingEngineImplSlingMainServlet', 'sling.additional.response.headers') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('OrgApacheSlingEngineParameters', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingEngineParameters', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingEngineParameters', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingEngineParameters', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingEngineParameters', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingEngineParameters', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('OrgApacheSlingEngineParameters', 'sling.default.parameter.encoding') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingEngineParameters', 'sling.default.max.parameters') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingEngineParameters', 'file.location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingEngineParameters', 'file.threshold') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingEngineParameters', 'file.max') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingEngineParameters', 'request.max') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingEngineParameters', 'sling.default.parameter.checkForAdditionalContainerParameters') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingEventImplEventingThreadPool', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingEventImplEventingThreadPool', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingEventImplEventingThreadPool', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingEventImplEventingThreadPool', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingEventImplEventingThreadPool', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingEventImplEventingThreadPool', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('OrgApacheSlingEventImplEventingThreadPool', 'minPoolSize') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingEventImplJobsDefaultJobManager', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingEventImplJobsDefaultJobManager', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingEventImplJobsDefaultJobManager', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingEventImplJobsDefaultJobManager', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingEventImplJobsDefaultJobManager', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingEventImplJobsDefaultJobManager', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('OrgApacheSlingEventImplJobsDefaultJobManager', 'queue.priority') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingEventImplJobsDefaultJobManager', 'queue.retries') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingEventImplJobsDefaultJobManager', 'queue.retrydelay') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingEventImplJobsDefaultJobManager', 'queue.maxparallel') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingEventImplJobsJcrPersistenceHandler', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingEventImplJobsJcrPersistenceHandler', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingEventImplJobsJcrPersistenceHandler', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingEventImplJobsJcrPersistenceHandler', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingEventImplJobsJcrPersistenceHandler', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingEventImplJobsJcrPersistenceHandler', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('OrgApacheSlingEventImplJobsJcrPersistenceHandler', 'job.consumermanager.disableDistribution') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingEventImplJobsJcrPersistenceHandler', 'startup.delay') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingEventImplJobsJcrPersistenceHandler', 'cleanup.period') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingEventImplJobsJobConsumerManager', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingEventImplJobsJobConsumerManager', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingEventImplJobsJobConsumerManager', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingEventImplJobsJobConsumerManager', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingEventImplJobsJobConsumerManager', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingEventImplJobsJobConsumerManager', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('OrgApacheSlingEventImplJobsJobConsumerManager', 'org.apache.sling.installer.configuration.persist') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingEventImplJobsJobConsumerManager', 'job.consumermanager.whitelist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('OrgApacheSlingEventImplJobsJobConsumerManager', 'job.consumermanager.blacklist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('OrgApacheSlingEventJobsQueueConfiguration', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingEventJobsQueueConfiguration', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingEventJobsQueueConfiguration', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingEventJobsQueueConfiguration', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingEventJobsQueueConfiguration', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingEventJobsQueueConfiguration', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('OrgApacheSlingEventJobsQueueConfiguration', 'queue.name') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingEventJobsQueueConfiguration', 'queue.topics') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('OrgApacheSlingEventJobsQueueConfiguration', 'queue.type') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingEventJobsQueueConfiguration', 'queue.priority') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingEventJobsQueueConfiguration', 'queue.retries') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingEventJobsQueueConfiguration', 'queue.retrydelay') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingEventJobsQueueConfiguration', 'queue.maxparallel') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'float'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingEventJobsQueueConfiguration', 'queue.keepJobs') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingEventJobsQueueConfiguration', 'queue.preferRunOnCreationInstance') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingEventJobsQueueConfiguration', 'queue.threadPoolSize') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingEventJobsQueueConfiguration', 'service.ranking') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingExtensionsWebconsolesecurityproviderInternalSlingW', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingExtensionsWebconsolesecurityproviderInternalSlingW', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingExtensionsWebconsolesecurityproviderInternalSlingW', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingExtensionsWebconsolesecurityproviderInternalSlingW', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingExtensionsWebconsolesecurityproviderInternalSlingW', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingExtensionsWebconsolesecurityproviderInternalSlingW', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('OrgApacheSlingExtensionsWebconsolesecurityproviderInternalSlingW', 'users') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('OrgApacheSlingExtensionsWebconsolesecurityproviderInternalSlingW', 'groups') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('OrgApacheSlingFeatureflagsFeature', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingFeatureflagsFeature', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingFeatureflagsFeature', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingFeatureflagsFeature', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingFeatureflagsFeature', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingFeatureflagsFeature', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('OrgApacheSlingFeatureflagsFeature', 'name') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingFeatureflagsFeature', 'description') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingFeatureflagsFeature', 'enabled') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingFeatureflagsImplConfiguredFeature', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingFeatureflagsImplConfiguredFeature', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingFeatureflagsImplConfiguredFeature', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingFeatureflagsImplConfiguredFeature', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingFeatureflagsImplConfiguredFeature', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingFeatureflagsImplConfiguredFeature', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('OrgApacheSlingFeatureflagsImplConfiguredFeature', 'name') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingFeatureflagsImplConfiguredFeature', 'description') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingFeatureflagsImplConfiguredFeature', 'enabled') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingHapiImplHApiUtilImpl', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingHapiImplHApiUtilImpl', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingHapiImplHApiUtilImpl', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingHapiImplHApiUtilImpl', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingHapiImplHApiUtilImpl', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingHapiImplHApiUtilImpl', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('OrgApacheSlingHapiImplHApiUtilImpl', 'org.apache.sling.hapi.tools.resourcetype') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingHapiImplHApiUtilImpl', 'org.apache.sling.hapi.tools.collectionresourcetype') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingHapiImplHApiUtilImpl', 'org.apache.sling.hapi.tools.searchpaths') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('OrgApacheSlingHapiImplHApiUtilImpl', 'org.apache.sling.hapi.tools.externalurl') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingHapiImplHApiUtilImpl', 'org.apache.sling.hapi.tools.enabled') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingHcCoreImplCompositeHealthCheck', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingHcCoreImplCompositeHealthCheck', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingHcCoreImplCompositeHealthCheck', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingHcCoreImplCompositeHealthCheck', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingHcCoreImplCompositeHealthCheck', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingHcCoreImplCompositeHealthCheck', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('OrgApacheSlingHcCoreImplCompositeHealthCheck', 'hc.name') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingHcCoreImplCompositeHealthCheck', 'hc.tags') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('OrgApacheSlingHcCoreImplCompositeHealthCheck', 'hc.mbean.name') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingHcCoreImplCompositeHealthCheck', 'filter.tags') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('OrgApacheSlingHcCoreImplCompositeHealthCheck', 'filter.combineTagsWithOr') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingHcCoreImplExecutorHealthCheckExecutorImpl', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingHcCoreImplExecutorHealthCheckExecutorImpl', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingHcCoreImplExecutorHealthCheckExecutorImpl', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingHcCoreImplExecutorHealthCheckExecutorImpl', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingHcCoreImplExecutorHealthCheckExecutorImpl', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingHcCoreImplExecutorHealthCheckExecutorImpl', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('OrgApacheSlingHcCoreImplExecutorHealthCheckExecutorImpl', 'timeoutInMs') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingHcCoreImplExecutorHealthCheckExecutorImpl', 'longRunningFutureThresholdForCriticalMs') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingHcCoreImplExecutorHealthCheckExecutorImpl', 'resultCacheTtlInMs') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingHcCoreImplJmxAttributeHealthCheck', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingHcCoreImplJmxAttributeHealthCheck', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingHcCoreImplJmxAttributeHealthCheck', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingHcCoreImplJmxAttributeHealthCheck', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingHcCoreImplJmxAttributeHealthCheck', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingHcCoreImplJmxAttributeHealthCheck', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('OrgApacheSlingHcCoreImplJmxAttributeHealthCheck', 'hc.name') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingHcCoreImplJmxAttributeHealthCheck', 'hc.tags') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('OrgApacheSlingHcCoreImplJmxAttributeHealthCheck', 'hc.mbean.name') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingHcCoreImplJmxAttributeHealthCheck', 'mbean.name') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingHcCoreImplJmxAttributeHealthCheck', 'attribute.name') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingHcCoreImplJmxAttributeHealthCheck', 'attribute.value.constraint') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingHcCoreImplScriptableHealthCheck', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingHcCoreImplScriptableHealthCheck', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingHcCoreImplScriptableHealthCheck', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingHcCoreImplScriptableHealthCheck', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingHcCoreImplScriptableHealthCheck', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingHcCoreImplScriptableHealthCheck', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('OrgApacheSlingHcCoreImplScriptableHealthCheck', 'hc.name') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingHcCoreImplScriptableHealthCheck', 'hc.tags') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('OrgApacheSlingHcCoreImplScriptableHealthCheck', 'hc.mbean.name') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingHcCoreImplScriptableHealthCheck', 'expression') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingHcCoreImplScriptableHealthCheck', 'language.extension') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingHcCoreImplServletHealthCheckExecutorServlet', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingHcCoreImplServletHealthCheckExecutorServlet', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingHcCoreImplServletHealthCheckExecutorServlet', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingHcCoreImplServletHealthCheckExecutorServlet', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingHcCoreImplServletHealthCheckExecutorServlet', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingHcCoreImplServletHealthCheckExecutorServlet', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('OrgApacheSlingHcCoreImplServletHealthCheckExecutorServlet', 'servletPath') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingHcCoreImplServletHealthCheckExecutorServlet', 'disabled') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingHcCoreImplServletHealthCheckExecutorServlet', 'cors.accessControlAllowOrigin') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingHcCoreImplServletResultTxtVerboseSerializer', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingHcCoreImplServletResultTxtVerboseSerializer', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingHcCoreImplServletResultTxtVerboseSerializer', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingHcCoreImplServletResultTxtVerboseSerializer', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingHcCoreImplServletResultTxtVerboseSerializer', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingHcCoreImplServletResultTxtVerboseSerializer', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('OrgApacheSlingHcCoreImplServletResultTxtVerboseSerializer', 'totalWidth') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingHcCoreImplServletResultTxtVerboseSerializer', 'colWidthName') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingHcCoreImplServletResultTxtVerboseSerializer', 'colWidthResult') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingHcCoreImplServletResultTxtVerboseSerializer', 'colWidthTiming') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingI18nImplI18NFilter', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingI18nImplI18NFilter', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingI18nImplI18NFilter', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingI18nImplI18NFilter', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingI18nImplI18NFilter', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingI18nImplI18NFilter', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('OrgApacheSlingI18nImplI18NFilter', 'service.ranking') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingI18nImplI18NFilter', 'sling.filter.scope') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('OrgApacheSlingI18nImplJcrResourceBundleProvider', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingI18nImplJcrResourceBundleProvider', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingI18nImplJcrResourceBundleProvider', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingI18nImplJcrResourceBundleProvider', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingI18nImplJcrResourceBundleProvider', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingI18nImplJcrResourceBundleProvider', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('OrgApacheSlingI18nImplJcrResourceBundleProvider', 'locale.default') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingI18nImplJcrResourceBundleProvider', 'preload.bundles') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingI18nImplJcrResourceBundleProvider', 'invalidation.delay') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingInstallerProviderJcrImplJcrInstaller', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingInstallerProviderJcrImplJcrInstaller', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingInstallerProviderJcrImplJcrInstaller', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingInstallerProviderJcrImplJcrInstaller', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingInstallerProviderJcrImplJcrInstaller', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingInstallerProviderJcrImplJcrInstaller', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('OrgApacheSlingInstallerProviderJcrImplJcrInstaller', 'handler.schemes') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('OrgApacheSlingInstallerProviderJcrImplJcrInstaller', 'sling.jcrinstall.folder.name.regexp') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingInstallerProviderJcrImplJcrInstaller', 'sling.jcrinstall.folder.max.depth') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingInstallerProviderJcrImplJcrInstaller', 'sling.jcrinstall.search.path') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('OrgApacheSlingInstallerProviderJcrImplJcrInstaller', 'sling.jcrinstall.new.config.path') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingInstallerProviderJcrImplJcrInstaller', 'sling.jcrinstall.signal.path') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingInstallerProviderJcrImplJcrInstaller', 'sling.jcrinstall.enable.writeback') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingJcrBaseInternalLoginAdminWhitelist', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingJcrBaseInternalLoginAdminWhitelist', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingJcrBaseInternalLoginAdminWhitelist', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingJcrBaseInternalLoginAdminWhitelist', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingJcrBaseInternalLoginAdminWhitelist', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingJcrBaseInternalLoginAdminWhitelist', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('OrgApacheSlingJcrBaseInternalLoginAdminWhitelist', 'whitelist.bypass') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingJcrBaseInternalLoginAdminWhitelist', 'whitelist.bundles.regexp') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingJcrBaseInternalLoginAdminWhitelistFragment', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingJcrBaseInternalLoginAdminWhitelistFragment', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingJcrBaseInternalLoginAdminWhitelistFragment', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingJcrBaseInternalLoginAdminWhitelistFragment', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingJcrBaseInternalLoginAdminWhitelistFragment', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingJcrBaseInternalLoginAdminWhitelistFragment', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('OrgApacheSlingJcrBaseInternalLoginAdminWhitelistFragment', 'whitelist.name') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingJcrBaseInternalLoginAdminWhitelistFragment', 'whitelist.bundles') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('OrgApacheSlingJcrDavexImplServletsSlingDavExServlet', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingJcrDavexImplServletsSlingDavExServlet', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingJcrDavexImplServletsSlingDavExServlet', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingJcrDavexImplServletsSlingDavExServlet', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingJcrDavexImplServletsSlingDavExServlet', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingJcrDavexImplServletsSlingDavExServlet', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('OrgApacheSlingJcrDavexImplServletsSlingDavExServlet', 'alias') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingJcrDavexImplServletsSlingDavExServlet', 'dav.create-absolute-uri') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingJcrDavexImplServletsSlingDavExServlet', 'dav.protectedhandlers') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingJcrJackrabbitServerJndiRegistrationSupport', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingJcrJackrabbitServerJndiRegistrationSupport', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingJcrJackrabbitServerJndiRegistrationSupport', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingJcrJackrabbitServerJndiRegistrationSupport', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingJcrJackrabbitServerJndiRegistrationSupport', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingJcrJackrabbitServerJndiRegistrationSupport', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('OrgApacheSlingJcrJackrabbitServerJndiRegistrationSupport', 'java.naming.factory.initial') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingJcrJackrabbitServerJndiRegistrationSupport', 'java.naming.provider.url') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingJcrJackrabbitServerRmiRegistrationSupport', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingJcrJackrabbitServerRmiRegistrationSupport', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingJcrJackrabbitServerRmiRegistrationSupport', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingJcrJackrabbitServerRmiRegistrationSupport', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingJcrJackrabbitServerRmiRegistrationSupport', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingJcrJackrabbitServerRmiRegistrationSupport', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('OrgApacheSlingJcrJackrabbitServerRmiRegistrationSupport', 'port') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingJcrRepoinitImplRepositoryInitializer', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingJcrRepoinitImplRepositoryInitializer', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingJcrRepoinitImplRepositoryInitializer', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingJcrRepoinitImplRepositoryInitializer', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingJcrRepoinitImplRepositoryInitializer', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingJcrRepoinitImplRepositoryInitializer', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('OrgApacheSlingJcrRepoinitImplRepositoryInitializer', 'references') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('OrgApacheSlingJcrRepoinitRepositoryInitializer', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingJcrRepoinitRepositoryInitializer', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingJcrRepoinitRepositoryInitializer', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingJcrRepoinitRepositoryInitializer', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingJcrRepoinitRepositoryInitializer', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingJcrRepoinitRepositoryInitializer', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('OrgApacheSlingJcrRepoinitRepositoryInitializer', 'references') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('OrgApacheSlingJcrRepoinitRepositoryInitializer', 'scripts') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('OrgApacheSlingJcrResourceInternalJcrResourceResolverFactoryImpl', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingJcrResourceInternalJcrResourceResolverFactoryImpl', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingJcrResourceInternalJcrResourceResolverFactoryImpl', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingJcrResourceInternalJcrResourceResolverFactoryImpl', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingJcrResourceInternalJcrResourceResolverFactoryImpl', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingJcrResourceInternalJcrResourceResolverFactoryImpl', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('OrgApacheSlingJcrResourceInternalJcrResourceResolverFactoryImpl', 'resource.resolver.searchpath') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('OrgApacheSlingJcrResourceInternalJcrResourceResolverFactoryImpl', 'resource.resolver.manglenamespaces') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingJcrResourceInternalJcrResourceResolverFactoryImpl', 'resource.resolver.allowDirect') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingJcrResourceInternalJcrResourceResolverFactoryImpl', 'resource.resolver.required.providers') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('OrgApacheSlingJcrResourceInternalJcrResourceResolverFactoryImpl', 'resource.resolver.required.providernames') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('OrgApacheSlingJcrResourceInternalJcrResourceResolverFactoryImpl', 'resource.resolver.virtual') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('OrgApacheSlingJcrResourceInternalJcrResourceResolverFactoryImpl', 'resource.resolver.mapping') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('OrgApacheSlingJcrResourceInternalJcrResourceResolverFactoryImpl', 'resource.resolver.map.location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingJcrResourceInternalJcrResourceResolverFactoryImpl', 'resource.resolver.map.observation') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('OrgApacheSlingJcrResourceInternalJcrResourceResolverFactoryImpl', 'resource.resolver.default.vanity.redirect.status') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingJcrResourceInternalJcrResourceResolverFactoryImpl', 'resource.resolver.enable.vanitypath') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingJcrResourceInternalJcrResourceResolverFactoryImpl', 'resource.resolver.vanitypath.maxEntries') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingJcrResourceInternalJcrResourceResolverFactoryImpl', 'resource.resolver.vanitypath.maxEntries.startup') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingJcrResourceInternalJcrResourceResolverFactoryImpl', 'resource.resolver.vanitypath.bloomfilter.maxBytes') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingJcrResourceInternalJcrResourceResolverFactoryImpl', 'resource.resolver.optimize.alias.resolution') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingJcrResourceInternalJcrResourceResolverFactoryImpl', 'resource.resolver.vanitypath.whitelist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('OrgApacheSlingJcrResourceInternalJcrResourceResolverFactoryImpl', 'resource.resolver.vanitypath.blacklist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('OrgApacheSlingJcrResourceInternalJcrResourceResolverFactoryImpl', 'resource.resolver.vanity.precedence') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingJcrResourceInternalJcrResourceResolverFactoryImpl', 'resource.resolver.providerhandling.paranoid') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingJcrResourceInternalJcrResourceResolverFactoryImpl', 'resource.resolver.log.closing') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingJcrResourceInternalJcrResourceResolverFactoryImpl', 'resource.resolver.log.unclosed') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingJcrResourceInternalJcrSystemUserValidator', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingJcrResourceInternalJcrSystemUserValidator', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingJcrResourceInternalJcrSystemUserValidator', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingJcrResourceInternalJcrSystemUserValidator', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingJcrResourceInternalJcrSystemUserValidator', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingJcrResourceInternalJcrSystemUserValidator', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('OrgApacheSlingJcrResourceInternalJcrSystemUserValidator', 'allow.only.system.user') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingJcrResourcesecurityImplResourceAccessGateFactory', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingJcrResourcesecurityImplResourceAccessGateFactory', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingJcrResourcesecurityImplResourceAccessGateFactory', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingJcrResourcesecurityImplResourceAccessGateFactory', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingJcrResourcesecurityImplResourceAccessGateFactory', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingJcrResourcesecurityImplResourceAccessGateFactory', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('OrgApacheSlingJcrResourcesecurityImplResourceAccessGateFactory', 'path') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingJcrResourcesecurityImplResourceAccessGateFactory', 'checkpath.prefix') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingJcrResourcesecurityImplResourceAccessGateFactory', 'jcrPath') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingJcrWebdavImplHandlerDefaultHandlerService', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingJcrWebdavImplHandlerDefaultHandlerService', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingJcrWebdavImplHandlerDefaultHandlerService', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingJcrWebdavImplHandlerDefaultHandlerService', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingJcrWebdavImplHandlerDefaultHandlerService', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingJcrWebdavImplHandlerDefaultHandlerService', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('OrgApacheSlingJcrWebdavImplHandlerDefaultHandlerService', 'service.ranking') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingJcrWebdavImplHandlerDefaultHandlerService', 'type.collections') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingJcrWebdavImplHandlerDefaultHandlerService', 'type.noncollections') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingJcrWebdavImplHandlerDefaultHandlerService', 'type.content') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingJcrWebdavImplHandlerDirListingExportHandlerServic', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingJcrWebdavImplHandlerDirListingExportHandlerServic', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingJcrWebdavImplHandlerDirListingExportHandlerServic', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingJcrWebdavImplHandlerDirListingExportHandlerServic', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingJcrWebdavImplHandlerDirListingExportHandlerServic', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingJcrWebdavImplHandlerDirListingExportHandlerServic', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('OrgApacheSlingJcrWebdavImplHandlerDirListingExportHandlerServic', 'service.ranking') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingJcrWebdavImplServletsSimpleWebDavServlet', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingJcrWebdavImplServletsSimpleWebDavServlet', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingJcrWebdavImplServletsSimpleWebDavServlet', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingJcrWebdavImplServletsSimpleWebDavServlet', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingJcrWebdavImplServletsSimpleWebDavServlet', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingJcrWebdavImplServletsSimpleWebDavServlet', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('OrgApacheSlingJcrWebdavImplServletsSimpleWebDavServlet', 'dav.root') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingJcrWebdavImplServletsSimpleWebDavServlet', 'dav.create-absolute-uri') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingJcrWebdavImplServletsSimpleWebDavServlet', 'dav.realm') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingJcrWebdavImplServletsSimpleWebDavServlet', 'collection.types') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('OrgApacheSlingJcrWebdavImplServletsSimpleWebDavServlet', 'filter.prefixes') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('OrgApacheSlingJcrWebdavImplServletsSimpleWebDavServlet', 'filter.types') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingJcrWebdavImplServletsSimpleWebDavServlet', 'filter.uris') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingJcrWebdavImplServletsSimpleWebDavServlet', 'type.collections') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingJcrWebdavImplServletsSimpleWebDavServlet', 'type.noncollections') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingJcrWebdavImplServletsSimpleWebDavServlet', 'type.content') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingJmxProviderImplJMXResourceProvider', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingJmxProviderImplJMXResourceProvider', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingJmxProviderImplJMXResourceProvider', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingJmxProviderImplJMXResourceProvider', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingJmxProviderImplJMXResourceProvider', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingJmxProviderImplJMXResourceProvider', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('OrgApacheSlingJmxProviderImplJMXResourceProvider', 'provider.roots') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingModelsImplModelAdapterFactory', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingModelsImplModelAdapterFactory', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingModelsImplModelAdapterFactory', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingModelsImplModelAdapterFactory', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingModelsImplModelAdapterFactory', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingModelsImplModelAdapterFactory', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('OrgApacheSlingModelsImplModelAdapterFactory', 'osgi.http.whiteboard.listener') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingModelsImplModelAdapterFactory', 'osgi.http.whiteboard.context.select') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingModelsImplModelAdapterFactory', 'max.recursion.depth') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingModelsImplModelAdapterFactory', 'cleanup.job.period') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingModelsJacksonexporterImplResourceModuleProvider', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingModelsJacksonexporterImplResourceModuleProvider', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingModelsJacksonexporterImplResourceModuleProvider', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingModelsJacksonexporterImplResourceModuleProvider', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingModelsJacksonexporterImplResourceModuleProvider', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingModelsJacksonexporterImplResourceModuleProvider', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('OrgApacheSlingModelsJacksonexporterImplResourceModuleProvider', 'max.recursion.levels') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingResourceInventoryImplResourceInventoryPrinterFacto', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingResourceInventoryImplResourceInventoryPrinterFacto', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingResourceInventoryImplResourceInventoryPrinterFacto', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingResourceInventoryImplResourceInventoryPrinterFacto', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingResourceInventoryImplResourceInventoryPrinterFacto', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingResourceInventoryImplResourceInventoryPrinterFacto', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('OrgApacheSlingResourceInventoryImplResourceInventoryPrinterFacto', 'felix.inventory.printer.name') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingResourceInventoryImplResourceInventoryPrinterFacto', 'felix.inventory.printer.title') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingResourceInventoryImplResourceInventoryPrinterFacto', 'path') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingResourcemergerImplMergedResourceProviderFactory', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingResourcemergerImplMergedResourceProviderFactory', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingResourcemergerImplMergedResourceProviderFactory', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingResourcemergerImplMergedResourceProviderFactory', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingResourcemergerImplMergedResourceProviderFactory', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingResourcemergerImplMergedResourceProviderFactory', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('OrgApacheSlingResourcemergerImplMergedResourceProviderFactory', 'merge.root') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingResourcemergerImplMergedResourceProviderFactory', 'merge.readOnly') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingResourcemergerPickerOverriding', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingResourcemergerPickerOverriding', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingResourcemergerPickerOverriding', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingResourcemergerPickerOverriding', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingResourcemergerPickerOverriding', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingResourcemergerPickerOverriding', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('OrgApacheSlingResourcemergerPickerOverriding', 'merge.root') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingResourcemergerPickerOverriding', 'merge.readOnly') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingScriptingCoreImplScriptCacheImpl', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingScriptingCoreImplScriptCacheImpl', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingScriptingCoreImplScriptCacheImpl', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingScriptingCoreImplScriptCacheImpl', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingScriptingCoreImplScriptCacheImpl', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingScriptingCoreImplScriptCacheImpl', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('OrgApacheSlingScriptingCoreImplScriptCacheImpl', 'org.apache.sling.scripting.cache.size') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingScriptingCoreImplScriptCacheImpl', 'org.apache.sling.scripting.cache.additional_extensions') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('OrgApacheSlingScriptingCoreImplScriptingResourceResolverProvider', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingScriptingCoreImplScriptingResourceResolverProvider', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingScriptingCoreImplScriptingResourceResolverProvider', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingScriptingCoreImplScriptingResourceResolverProvider', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingScriptingCoreImplScriptingResourceResolverProvider', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingScriptingCoreImplScriptingResourceResolverProvider', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('OrgApacheSlingScriptingCoreImplScriptingResourceResolverProvider', 'log.stacktrace.onclose') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingScriptingJavaImplJavaScriptEngineFactory', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingScriptingJavaImplJavaScriptEngineFactory', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingScriptingJavaImplJavaScriptEngineFactory', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingScriptingJavaImplJavaScriptEngineFactory', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingScriptingJavaImplJavaScriptEngineFactory', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingScriptingJavaImplJavaScriptEngineFactory', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('OrgApacheSlingScriptingJavaImplJavaScriptEngineFactory', 'java.classdebuginfo') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingScriptingJavaImplJavaScriptEngineFactory', 'java.javaEncoding') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingScriptingJavaImplJavaScriptEngineFactory', 'java.compilerSourceVM') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingScriptingJavaImplJavaScriptEngineFactory', 'java.compilerTargetVM') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingScriptingJavascriptInternalRhinoJavaScriptEngineFa', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingScriptingJavascriptInternalRhinoJavaScriptEngineFa', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingScriptingJavascriptInternalRhinoJavaScriptEngineFa', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingScriptingJavascriptInternalRhinoJavaScriptEngineFa', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingScriptingJavascriptInternalRhinoJavaScriptEngineFa', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingScriptingJavascriptInternalRhinoJavaScriptEngineFa', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('OrgApacheSlingScriptingJavascriptInternalRhinoJavaScriptEngineFa', 'org.apache.sling.scripting.javascript.rhino.optLevel') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingScriptingJspJspScriptEngineFactory', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingScriptingJspJspScriptEngineFactory', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingScriptingJspJspScriptEngineFactory', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingScriptingJspJspScriptEngineFactory', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingScriptingJspJspScriptEngineFactory', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingScriptingJspJspScriptEngineFactory', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('OrgApacheSlingScriptingJspJspScriptEngineFactory', 'jasper.compilerTargetVM') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingScriptingJspJspScriptEngineFactory', 'jasper.compilerSourceVM') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingScriptingJspJspScriptEngineFactory', 'jasper.classdebuginfo') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingScriptingJspJspScriptEngineFactory', 'jasper.enablePooling') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingScriptingJspJspScriptEngineFactory', 'jasper.ieClassId') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingScriptingJspJspScriptEngineFactory', 'jasper.genStringAsCharArray') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingScriptingJspJspScriptEngineFactory', 'jasper.keepgenerated') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingScriptingJspJspScriptEngineFactory', 'jasper.mappedfile') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingScriptingJspJspScriptEngineFactory', 'jasper.trimSpaces') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingScriptingJspJspScriptEngineFactory', 'jasper.displaySourceFragments') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingScriptingJspJspScriptEngineFactory', 'default.is.session') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingScriptingSightlyJsImplJsapiSlyBindingsValuesProv', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingScriptingSightlyJsImplJsapiSlyBindingsValuesProv', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingScriptingSightlyJsImplJsapiSlyBindingsValuesProv', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingScriptingSightlyJsImplJsapiSlyBindingsValuesProv', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingScriptingSightlyJsImplJsapiSlyBindingsValuesProv', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingScriptingSightlyJsImplJsapiSlyBindingsValuesProv', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('OrgApacheSlingScriptingSightlyJsImplJsapiSlyBindingsValuesProv', 'org.apache.sling.scripting.sightly.js.bindings') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('OrgApacheSlingSecurityImplContentDispositionFilter', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingSecurityImplContentDispositionFilter', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingSecurityImplContentDispositionFilter', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingSecurityImplContentDispositionFilter', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingSecurityImplContentDispositionFilter', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingSecurityImplContentDispositionFilter', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('OrgApacheSlingSecurityImplContentDispositionFilter', 'sling.content.disposition.paths') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('OrgApacheSlingSecurityImplContentDispositionFilter', 'sling.content.disposition.excluded.paths') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('OrgApacheSlingSecurityImplContentDispositionFilter', 'sling.content.disposition.all.paths') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingSecurityImplReferrerFilter', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingSecurityImplReferrerFilter', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingSecurityImplReferrerFilter', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingSecurityImplReferrerFilter', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingSecurityImplReferrerFilter', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingSecurityImplReferrerFilter', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('OrgApacheSlingSecurityImplReferrerFilter', 'allow.empty') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingSecurityImplReferrerFilter', 'allow.hosts') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('OrgApacheSlingSecurityImplReferrerFilter', 'allow.hosts.regexp') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('OrgApacheSlingSecurityImplReferrerFilter', 'filter.methods') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('OrgApacheSlingSecurityImplReferrerFilter', 'exclude.agents.regexp') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('OrgApacheSlingServiceusermappingImplServiceUserMapperImpl', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingServiceusermappingImplServiceUserMapperImpl', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingServiceusermappingImplServiceUserMapperImpl', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingServiceusermappingImplServiceUserMapperImpl', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingServiceusermappingImplServiceUserMapperImpl', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingServiceusermappingImplServiceUserMapperImpl', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('OrgApacheSlingServiceusermappingImplServiceUserMapperImpl', 'user.mapping') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('OrgApacheSlingServiceusermappingImplServiceUserMapperImpl', 'user.default') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingServiceusermappingImplServiceUserMapperImpl', 'user.enable.default.mapping') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingServiceusermappingImplServiceUserMapperImpl', 'require.validation') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingServiceusermappingImplServiceUserMapperImplAmended', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingServiceusermappingImplServiceUserMapperImplAmended', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingServiceusermappingImplServiceUserMapperImplAmended', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingServiceusermappingImplServiceUserMapperImplAmended', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingServiceusermappingImplServiceUserMapperImplAmended', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingServiceusermappingImplServiceUserMapperImplAmended', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('OrgApacheSlingServiceusermappingImplServiceUserMapperImplAmended', 'service.ranking') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingServiceusermappingImplServiceUserMapperImplAmended', 'user.mapping') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('OrgApacheSlingServletsGetDefaultGetServlet', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingServletsGetDefaultGetServlet', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingServletsGetDefaultGetServlet', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingServletsGetDefaultGetServlet', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingServletsGetDefaultGetServlet', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingServletsGetDefaultGetServlet', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('OrgApacheSlingServletsGetDefaultGetServlet', 'aliases') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('OrgApacheSlingServletsGetDefaultGetServlet', 'index') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingServletsGetDefaultGetServlet', 'index.files') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('OrgApacheSlingServletsGetDefaultGetServlet', 'enable.html') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingServletsGetDefaultGetServlet', 'enable.json') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingServletsGetDefaultGetServlet', 'enable.txt') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingServletsGetDefaultGetServlet', 'enable.xml') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingServletsGetDefaultGetServlet', 'json.maximumresults') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingServletsGetDefaultGetServlet', 'ecmaSuport') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingServletsGetImplVersionVersionInfoServlet', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingServletsGetImplVersionVersionInfoServlet', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingServletsGetImplVersionVersionInfoServlet', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingServletsGetImplVersionVersionInfoServlet', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingServletsGetImplVersionVersionInfoServlet', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingServletsGetImplVersionVersionInfoServlet', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('OrgApacheSlingServletsGetImplVersionVersionInfoServlet', 'sling.servlet.selectors') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('OrgApacheSlingServletsGetImplVersionVersionInfoServlet', 'ecmaSuport') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingServletsPostImplHelperChunkCleanUpTask', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingServletsPostImplHelperChunkCleanUpTask', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingServletsPostImplHelperChunkCleanUpTask', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingServletsPostImplHelperChunkCleanUpTask', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingServletsPostImplHelperChunkCleanUpTask', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingServletsPostImplHelperChunkCleanUpTask', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('OrgApacheSlingServletsPostImplHelperChunkCleanUpTask', 'scheduler.expression') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingServletsPostImplHelperChunkCleanUpTask', 'scheduler.concurrent') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingServletsPostImplHelperChunkCleanUpTask', 'chunk.cleanup.age') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingServletsPostImplSlingPostServlet', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingServletsPostImplSlingPostServlet', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingServletsPostImplSlingPostServlet', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingServletsPostImplSlingPostServlet', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingServletsPostImplSlingPostServlet', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingServletsPostImplSlingPostServlet', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('OrgApacheSlingServletsPostImplSlingPostServlet', 'servlet.post.dateFormats') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('OrgApacheSlingServletsPostImplSlingPostServlet', 'servlet.post.nodeNameHints') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('OrgApacheSlingServletsPostImplSlingPostServlet', 'servlet.post.nodeNameMaxLength') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingServletsPostImplSlingPostServlet', 'servlet.post.checkinNewVersionableNodes') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingServletsPostImplSlingPostServlet', 'servlet.post.autoCheckout') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingServletsPostImplSlingPostServlet', 'servlet.post.autoCheckin') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingServletsPostImplSlingPostServlet', 'servlet.post.ignorePattern') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingServletsResolverSlingServletResolver', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingServletsResolverSlingServletResolver', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingServletsResolverSlingServletResolver', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingServletsResolverSlingServletResolver', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingServletsResolverSlingServletResolver', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingServletsResolverSlingServletResolver', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('OrgApacheSlingServletsResolverSlingServletResolver', 'servletresolver.servletRoot') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingServletsResolverSlingServletResolver', 'servletresolver.cacheSize') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingServletsResolverSlingServletResolver', 'servletresolver.paths') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('OrgApacheSlingServletsResolverSlingServletResolver', 'servletresolver.defaultExtensions') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('OrgApacheSlingSettingsImplSlingSettingsServiceImpl', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingSettingsImplSlingSettingsServiceImpl', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingSettingsImplSlingSettingsServiceImpl', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingSettingsImplSlingSettingsServiceImpl', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingSettingsImplSlingSettingsServiceImpl', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingSettingsImplSlingSettingsServiceImpl', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('OrgApacheSlingSettingsImplSlingSettingsServiceImpl', 'sling.name') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingSettingsImplSlingSettingsServiceImpl', 'sling.description') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingStartupfilterImplStartupFilterImpl', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingStartupfilterImplStartupFilterImpl', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingStartupfilterImplStartupFilterImpl', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingStartupfilterImplStartupFilterImpl', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingStartupfilterImplStartupFilterImpl', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingStartupfilterImplStartupFilterImpl', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('OrgApacheSlingStartupfilterImplStartupFilterImpl', 'active.by.default') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingStartupfilterImplStartupFilterImpl', 'default.message') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingTenantInternalTenantProviderImpl', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingTenantInternalTenantProviderImpl', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingTenantInternalTenantProviderImpl', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingTenantInternalTenantProviderImpl', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingTenantInternalTenantProviderImpl', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingTenantInternalTenantProviderImpl', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('OrgApacheSlingTenantInternalTenantProviderImpl', 'tenant.root') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingTenantInternalTenantProviderImpl', 'tenant.path.matcher') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('OrgApacheSlingTracerInternalLogTracer', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingTracerInternalLogTracer', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingTracerInternalLogTracer', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingTracerInternalLogTracer', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingTracerInternalLogTracer', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingTracerInternalLogTracer', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('OrgApacheSlingTracerInternalLogTracer', 'tracerSets') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('OrgApacheSlingTracerInternalLogTracer', 'enabled') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingTracerInternalLogTracer', 'servletEnabled') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingTracerInternalLogTracer', 'recordingCacheSizeInMB') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingTracerInternalLogTracer', 'recordingCacheDurationInSecs') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'integer'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingTracerInternalLogTracer', 'recordingCompressionEnabled') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingTracerInternalLogTracer', 'gzipResponse') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingXssImplXSSFilterImpl', 'post') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingXssImplXSSFilterImpl', 'apply') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingXssImplXSSFilterImpl', 'delete') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'boolean'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingXssImplXSSFilterImpl', 'action') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingXssImplXSSFilterImpl', '$location') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info('OrgApacheSlingXssImplXSSFilterImpl', 'propertylist') ->
    #{
        source => qs_val  ,
        rules => [
            not_required
        ]
    };

request_param_info('OrgApacheSlingXssImplXSSFilterImpl', 'policyPath') ->
    #{
        source => qs_val  ,
        rules => [
            {type, 'binary'},
            not_required
        ]
    };

request_param_info(OperationID, Name) ->
    error({unknown_param, OperationID, Name}).

-spec populate_request(
    OperationID :: operation_id(),
    Req :: cowboy_req:req(),
    ValidatorState :: jesse_state:state()
) ->
    {ok, Model :: #{}, Req :: cowboy_req:req()} |
    {error, Reason :: any(), Req :: cowboy_req:req()}.

populate_request(OperationID, Req, ValidatorState) ->
    Params = request_params(OperationID),
    populate_request_params(OperationID, Params, Req, ValidatorState, #{}).

populate_request_params(_, [], Req, _, Model) ->
    {ok, Model, Req};

populate_request_params(OperationID, [FieldParams | T], Req0, ValidatorState, Model) ->
    case populate_request_param(OperationID, FieldParams, Req0, ValidatorState) of
        {ok, K, V, Req} ->
            populate_request_params(OperationID, T, Req, ValidatorState, maps:put(K, V, Model));
        Error ->
            Error
    end.

populate_request_param(OperationID, Name, Req0, ValidatorState) ->
    #{rules := Rules, source := Source} = request_param_info(OperationID, Name),
    case get_value(Source, Name, Req0) of
        {error, Reason, Req} ->
            {error, Reason, Req};
        {Value, Req} ->
            case prepare_param(Rules, Name, Value, ValidatorState) of
                {ok, Result} -> {ok, Name, Result, Req};
                {error, Reason} ->
                    {error, Reason, Req}
            end
    end.

-spec validate_response(
    OperationID :: operation_id(),
    Code :: 200..599,
    Body :: jesse:json_term(),
    ValidatorState :: jesse_state:state()
) -> ok | no_return().


validate_response('AdaptiveFormAndInteractiveCommunicationWebChannelConfiguration', 200, Body, ValidatorState) ->
    validate_response_body('adaptiveFormAndInteractiveCommunicationWebChannelConfigurationInfo', 'adaptiveFormAndInteractiveCommunicationWebChannelConfigurationInfo', Body, ValidatorState);
validate_response('AdaptiveFormAndInteractiveCommunicationWebChannelConfiguration', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('AdaptiveFormAndInteractiveCommunicationWebChannelConfiguration', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('AdaptiveFormAndInteractiveCommunicationWebChannelThemeConfigur', 200, Body, ValidatorState) ->
    validate_response_body('adaptiveFormAndInteractiveCommunicationWebChannelThemeConfigurInfo', 'adaptiveFormAndInteractiveCommunicationWebChannelThemeConfigurInfo', Body, ValidatorState);
validate_response('AdaptiveFormAndInteractiveCommunicationWebChannelThemeConfigur', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('AdaptiveFormAndInteractiveCommunicationWebChannelThemeConfigur', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('AnalyticsComponentQueryCacheService', 200, Body, ValidatorState) ->
    validate_response_body('analyticsComponentQueryCacheServiceInfo', 'analyticsComponentQueryCacheServiceInfo', Body, ValidatorState);
validate_response('AnalyticsComponentQueryCacheService', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('AnalyticsComponentQueryCacheService', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ApacheSlingHealthCheckResultHTMLSerializer', 200, Body, ValidatorState) ->
    validate_response_body('apacheSlingHealthCheckResultHTMLSerializerInfo', 'apacheSlingHealthCheckResultHTMLSerializerInfo', Body, ValidatorState);
validate_response('ApacheSlingHealthCheckResultHTMLSerializer', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ApacheSlingHealthCheckResultHTMLSerializer', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeAemFormsndocumentsConfigAEMFormsManagerConfiguration', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeAemFormsndocumentsConfigAEMFormsManagerConfigurationInfo', 'comAdobeAemFormsndocumentsConfigAEMFormsManagerConfigurationInfo', Body, ValidatorState);
validate_response('ComAdobeAemFormsndocumentsConfigAEMFormsManagerConfiguration', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeAemFormsndocumentsConfigAEMFormsManagerConfiguration', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeAemTransactionCoreImplTransactionRecorder', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeAemTransactionCoreImplTransactionRecorderInfo', 'comAdobeAemTransactionCoreImplTransactionRecorderInfo', Body, ValidatorState);
validate_response('ComAdobeAemTransactionCoreImplTransactionRecorder', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeAemTransactionCoreImplTransactionRecorder', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeAemUpgradePrechecksHcImplDeprecateIndexesHC', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeAemUpgradePrechecksHcImplDeprecateIndexesHCInfo', 'comAdobeAemUpgradePrechecksHcImplDeprecateIndexesHCInfo', Body, ValidatorState);
validate_response('ComAdobeAemUpgradePrechecksHcImplDeprecateIndexesHC', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeAemUpgradePrechecksHcImplDeprecateIndexesHC', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeAemUpgradePrechecksHcImplReplicationAgentsDisabledHC', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeAemUpgradePrechecksHcImplReplicationAgentsDisabledHCInfo', 'comAdobeAemUpgradePrechecksHcImplReplicationAgentsDisabledHCInfo', Body, ValidatorState);
validate_response('ComAdobeAemUpgradePrechecksHcImplReplicationAgentsDisabledHC', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeAemUpgradePrechecksHcImplReplicationAgentsDisabledHC', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeAemUpgradePrechecksMbeanImplPreUpgradeTasksMBeanImpl', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeAemUpgradePrechecksMbeanImplPreUpgradeTasksMBeanImplInfo', 'comAdobeAemUpgradePrechecksMbeanImplPreUpgradeTasksMBeanImplInfo', Body, ValidatorState);
validate_response('ComAdobeAemUpgradePrechecksMbeanImplPreUpgradeTasksMBeanImpl', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeAemUpgradePrechecksMbeanImplPreUpgradeTasksMBeanImpl', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeAemUpgradePrechecksTasksImplConsistencyCheckTaskImpl', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeAemUpgradePrechecksTasksImplConsistencyCheckTaskImplInfo', 'comAdobeAemUpgradePrechecksTasksImplConsistencyCheckTaskImplInfo', Body, ValidatorState);
validate_response('ComAdobeAemUpgradePrechecksTasksImplConsistencyCheckTaskImpl', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeAemUpgradePrechecksTasksImplConsistencyCheckTaskImpl', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeCqAccountApiAccountManagementService', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeCqAccountApiAccountManagementServiceInfo', 'comAdobeCqAccountApiAccountManagementServiceInfo', Body, ValidatorState);
validate_response('ComAdobeCqAccountApiAccountManagementService', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeCqAccountApiAccountManagementService', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeCqAccountImplAccountManagementServlet', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeCqAccountImplAccountManagementServletInfo', 'comAdobeCqAccountImplAccountManagementServletInfo', Body, ValidatorState);
validate_response('ComAdobeCqAccountImplAccountManagementServlet', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeCqAccountImplAccountManagementServlet', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeCqAddressImplLocationLocationListServlet', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeCqAddressImplLocationLocationListServletInfo', 'comAdobeCqAddressImplLocationLocationListServletInfo', Body, ValidatorState);
validate_response('ComAdobeCqAddressImplLocationLocationListServlet', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeCqAddressImplLocationLocationListServlet', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeCqAuditPurgeDam', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeCqAuditPurgeDamInfo', 'comAdobeCqAuditPurgeDamInfo', Body, ValidatorState);
validate_response('ComAdobeCqAuditPurgeDam', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeCqAuditPurgeDam', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeCqAuditPurgePages', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeCqAuditPurgePagesInfo', 'comAdobeCqAuditPurgePagesInfo', Body, ValidatorState);
validate_response('ComAdobeCqAuditPurgePages', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeCqAuditPurgePages', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeCqAuditPurgeReplication', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeCqAuditPurgeReplicationInfo', 'comAdobeCqAuditPurgeReplicationInfo', Body, ValidatorState);
validate_response('ComAdobeCqAuditPurgeReplication', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeCqAuditPurgeReplication', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeCqCdnRewriterImplAWSCloudFrontRewriter', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeCqCdnRewriterImplAWSCloudFrontRewriterInfo', 'comAdobeCqCdnRewriterImplAWSCloudFrontRewriterInfo', Body, ValidatorState);
validate_response('ComAdobeCqCdnRewriterImplAWSCloudFrontRewriter', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeCqCdnRewriterImplAWSCloudFrontRewriter', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeCqCdnRewriterImplCDNConfigServiceImpl', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeCqCdnRewriterImplCDNConfigServiceImplInfo', 'comAdobeCqCdnRewriterImplCDNConfigServiceImplInfo', Body, ValidatorState);
validate_response('ComAdobeCqCdnRewriterImplCDNConfigServiceImpl', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeCqCdnRewriterImplCDNConfigServiceImpl', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeCqCdnRewriterImplCDNRewriter', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeCqCdnRewriterImplCDNRewriterInfo', 'comAdobeCqCdnRewriterImplCDNRewriterInfo', Body, ValidatorState);
validate_response('ComAdobeCqCdnRewriterImplCDNRewriter', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeCqCdnRewriterImplCDNRewriter', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeCqCloudconfigCoreImplConfigurationReplicationEventHandle', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeCqCloudconfigCoreImplConfigurationReplicationEventHandleInfo', 'comAdobeCqCloudconfigCoreImplConfigurationReplicationEventHandleInfo', Body, ValidatorState);
validate_response('ComAdobeCqCloudconfigCoreImplConfigurationReplicationEventHandle', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeCqCloudconfigCoreImplConfigurationReplicationEventHandle', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeCqCommerceImplAssetDynamicImageHandler', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeCqCommerceImplAssetDynamicImageHandlerInfo', 'comAdobeCqCommerceImplAssetDynamicImageHandlerInfo', Body, ValidatorState);
validate_response('ComAdobeCqCommerceImplAssetDynamicImageHandler', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeCqCommerceImplAssetDynamicImageHandler', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeCqCommerceImplAssetProductAssetHandlerProviderImpl', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeCqCommerceImplAssetProductAssetHandlerProviderImplInfo', 'comAdobeCqCommerceImplAssetProductAssetHandlerProviderImplInfo', Body, ValidatorState);
validate_response('ComAdobeCqCommerceImplAssetProductAssetHandlerProviderImpl', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeCqCommerceImplAssetProductAssetHandlerProviderImpl', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeCqCommerceImplAssetStaticImageHandler', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeCqCommerceImplAssetStaticImageHandlerInfo', 'comAdobeCqCommerceImplAssetStaticImageHandlerInfo', Body, ValidatorState);
validate_response('ComAdobeCqCommerceImplAssetStaticImageHandler', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeCqCommerceImplAssetStaticImageHandler', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeCqCommerceImplAssetVideoHandler', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeCqCommerceImplAssetVideoHandlerInfo', 'comAdobeCqCommerceImplAssetVideoHandlerInfo', Body, ValidatorState);
validate_response('ComAdobeCqCommerceImplAssetVideoHandler', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeCqCommerceImplAssetVideoHandler', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeCqCommerceImplPromotionPromotionManagerImpl', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeCqCommerceImplPromotionPromotionManagerImplInfo', 'comAdobeCqCommerceImplPromotionPromotionManagerImplInfo', Body, ValidatorState);
validate_response('ComAdobeCqCommerceImplPromotionPromotionManagerImpl', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeCqCommerceImplPromotionPromotionManagerImpl', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeCqCommercePimImplCataloggeneratorCatalogGeneratorImpl', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeCqCommercePimImplCataloggeneratorCatalogGeneratorImplInfo', 'comAdobeCqCommercePimImplCataloggeneratorCatalogGeneratorImplInfo', Body, ValidatorState);
validate_response('ComAdobeCqCommercePimImplCataloggeneratorCatalogGeneratorImpl', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeCqCommercePimImplCataloggeneratorCatalogGeneratorImpl', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeCqCommercePimImplPageEventListener', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeCqCommercePimImplPageEventListenerInfo', 'comAdobeCqCommercePimImplPageEventListenerInfo', Body, ValidatorState);
validate_response('ComAdobeCqCommercePimImplPageEventListener', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeCqCommercePimImplPageEventListener', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeCqCommercePimImplProductfeedProductFeedServiceImpl', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeCqCommercePimImplProductfeedProductFeedServiceImplInfo', 'comAdobeCqCommercePimImplProductfeedProductFeedServiceImplInfo', Body, ValidatorState);
validate_response('ComAdobeCqCommercePimImplProductfeedProductFeedServiceImpl', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeCqCommercePimImplProductfeedProductFeedServiceImpl', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeCqContentinsightImplReportingServicesSettingsProvider', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeCqContentinsightImplReportingServicesSettingsProviderInfo', 'comAdobeCqContentinsightImplReportingServicesSettingsProviderInfo', Body, ValidatorState);
validate_response('ComAdobeCqContentinsightImplReportingServicesSettingsProvider', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeCqContentinsightImplReportingServicesSettingsProvider', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeCqContentinsightImplServletsBrightEdgeProxyServlet', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeCqContentinsightImplServletsBrightEdgeProxyServletInfo', 'comAdobeCqContentinsightImplServletsBrightEdgeProxyServletInfo', Body, ValidatorState);
validate_response('ComAdobeCqContentinsightImplServletsBrightEdgeProxyServlet', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeCqContentinsightImplServletsBrightEdgeProxyServlet', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeCqContentinsightImplServletsReportingServicesProxyServle', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeCqContentinsightImplServletsReportingServicesProxyServleInfo', 'comAdobeCqContentinsightImplServletsReportingServicesProxyServleInfo', Body, ValidatorState);
validate_response('ComAdobeCqContentinsightImplServletsReportingServicesProxyServle', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeCqContentinsightImplServletsReportingServicesProxyServle', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeCqDamCfmImplComponentComponentConfigImpl', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeCqDamCfmImplComponentComponentConfigImplInfo', 'comAdobeCqDamCfmImplComponentComponentConfigImplInfo', Body, ValidatorState);
validate_response('ComAdobeCqDamCfmImplComponentComponentConfigImpl', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeCqDamCfmImplComponentComponentConfigImpl', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeCqDamCfmImplConfFeatureConfigImpl', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeCqDamCfmImplConfFeatureConfigImplInfo', 'comAdobeCqDamCfmImplConfFeatureConfigImplInfo', Body, ValidatorState);
validate_response('ComAdobeCqDamCfmImplConfFeatureConfigImpl', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeCqDamCfmImplConfFeatureConfigImpl', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeCqDamCfmImplContentRewriterAssetProcessor', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeCqDamCfmImplContentRewriterAssetProcessorInfo', 'comAdobeCqDamCfmImplContentRewriterAssetProcessorInfo', Body, ValidatorState);
validate_response('ComAdobeCqDamCfmImplContentRewriterAssetProcessor', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeCqDamCfmImplContentRewriterAssetProcessor', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeCqDamCfmImplContentRewriterParRangeFilter', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeCqDamCfmImplContentRewriterParRangeFilterInfo', 'comAdobeCqDamCfmImplContentRewriterParRangeFilterInfo', Body, ValidatorState);
validate_response('ComAdobeCqDamCfmImplContentRewriterParRangeFilter', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeCqDamCfmImplContentRewriterParRangeFilter', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeCqDamCfmImplContentRewriterPayloadFilter', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeCqDamCfmImplContentRewriterPayloadFilterInfo', 'comAdobeCqDamCfmImplContentRewriterPayloadFilterInfo', Body, ValidatorState);
validate_response('ComAdobeCqDamCfmImplContentRewriterPayloadFilter', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeCqDamCfmImplContentRewriterPayloadFilter', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeCqDamDmProcessImagePTiffManagerImpl', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeCqDamDmProcessImagePTiffManagerImplInfo', 'comAdobeCqDamDmProcessImagePTiffManagerImplInfo', Body, ValidatorState);
validate_response('ComAdobeCqDamDmProcessImagePTiffManagerImpl', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeCqDamDmProcessImagePTiffManagerImpl', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeCqDamIpsImplReplicationTriggerReplicateOnModifyWorker', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeCqDamIpsImplReplicationTriggerReplicateOnModifyWorkerInfo', 'comAdobeCqDamIpsImplReplicationTriggerReplicateOnModifyWorkerInfo', Body, ValidatorState);
validate_response('ComAdobeCqDamIpsImplReplicationTriggerReplicateOnModifyWorker', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeCqDamIpsImplReplicationTriggerReplicateOnModifyWorker', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeCqDamMacSyncHelperImplMACSyncClientImpl', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeCqDamMacSyncHelperImplMACSyncClientImplInfo', 'comAdobeCqDamMacSyncHelperImplMACSyncClientImplInfo', Body, ValidatorState);
validate_response('ComAdobeCqDamMacSyncHelperImplMACSyncClientImpl', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeCqDamMacSyncHelperImplMACSyncClientImpl', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeCqDamMacSyncImplDAMSyncServiceImpl', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeCqDamMacSyncImplDAMSyncServiceImplInfo', 'comAdobeCqDamMacSyncImplDAMSyncServiceImplInfo', Body, ValidatorState);
validate_response('ComAdobeCqDamMacSyncImplDAMSyncServiceImpl', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeCqDamMacSyncImplDAMSyncServiceImpl', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeCqDamProcessorNuiImplNuiAssetProcessor', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeCqDamProcessorNuiImplNuiAssetProcessorInfo', 'comAdobeCqDamProcessorNuiImplNuiAssetProcessorInfo', Body, ValidatorState);
validate_response('ComAdobeCqDamProcessorNuiImplNuiAssetProcessor', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeCqDamProcessorNuiImplNuiAssetProcessor', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeCqDamS7imagingImplIsImageServerComponent', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeCqDamS7imagingImplIsImageServerComponentInfo', 'comAdobeCqDamS7imagingImplIsImageServerComponentInfo', Body, ValidatorState);
validate_response('ComAdobeCqDamS7imagingImplIsImageServerComponent', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeCqDamS7imagingImplIsImageServerComponent', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeCqDamS7imagingImplPsPlatformServerServlet', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeCqDamS7imagingImplPsPlatformServerServletInfo', 'comAdobeCqDamS7imagingImplPsPlatformServerServletInfo', Body, ValidatorState);
validate_response('ComAdobeCqDamS7imagingImplPsPlatformServerServlet', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeCqDamS7imagingImplPsPlatformServerServlet', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeCqDamWebdavImplIoAssetIOHandler', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeCqDamWebdavImplIoAssetIOHandlerInfo', 'comAdobeCqDamWebdavImplIoAssetIOHandlerInfo', Body, ValidatorState);
validate_response('ComAdobeCqDamWebdavImplIoAssetIOHandler', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeCqDamWebdavImplIoAssetIOHandler', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeCqDamWebdavImplIoDamWebdavVersionLinkingJob', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeCqDamWebdavImplIoDamWebdavVersionLinkingJobInfo', 'comAdobeCqDamWebdavImplIoDamWebdavVersionLinkingJobInfo', Body, ValidatorState);
validate_response('ComAdobeCqDamWebdavImplIoDamWebdavVersionLinkingJob', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeCqDamWebdavImplIoDamWebdavVersionLinkingJob', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeCqDamWebdavImplIoSpecialFilesHandler', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeCqDamWebdavImplIoSpecialFilesHandlerInfo', 'comAdobeCqDamWebdavImplIoSpecialFilesHandlerInfo', Body, ValidatorState);
validate_response('ComAdobeCqDamWebdavImplIoSpecialFilesHandler', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeCqDamWebdavImplIoSpecialFilesHandler', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeCqDeserfwImplDeserializationFirewallImpl', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeCqDeserfwImplDeserializationFirewallImplInfo', 'comAdobeCqDeserfwImplDeserializationFirewallImplInfo', Body, ValidatorState);
validate_response('ComAdobeCqDeserfwImplDeserializationFirewallImpl', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeCqDeserfwImplDeserializationFirewallImpl', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeCqDtmImplServiceDTMWebServiceImpl', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeCqDtmImplServiceDTMWebServiceImplInfo', 'comAdobeCqDtmImplServiceDTMWebServiceImplInfo', Body, ValidatorState);
validate_response('ComAdobeCqDtmImplServiceDTMWebServiceImpl', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeCqDtmImplServiceDTMWebServiceImpl', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeCqDtmImplServletsDTMDeployHookServlet', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeCqDtmImplServletsDTMDeployHookServletInfo', 'comAdobeCqDtmImplServletsDTMDeployHookServletInfo', Body, ValidatorState);
validate_response('ComAdobeCqDtmImplServletsDTMDeployHookServlet', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeCqDtmImplServletsDTMDeployHookServlet', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeCqDtmReactorImplServiceWebServiceImpl', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeCqDtmReactorImplServiceWebServiceImplInfo', 'comAdobeCqDtmReactorImplServiceWebServiceImplInfo', Body, ValidatorState);
validate_response('ComAdobeCqDtmReactorImplServiceWebServiceImpl', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeCqDtmReactorImplServiceWebServiceImpl', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeCqExperiencelogImplExperienceLogConfigServlet', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeCqExperiencelogImplExperienceLogConfigServletInfo', 'comAdobeCqExperiencelogImplExperienceLogConfigServletInfo', Body, ValidatorState);
validate_response('ComAdobeCqExperiencelogImplExperienceLogConfigServlet', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeCqExperiencelogImplExperienceLogConfigServlet', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeCqHcContentPackagesHealthCheck', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeCqHcContentPackagesHealthCheckInfo', 'comAdobeCqHcContentPackagesHealthCheckInfo', Body, ValidatorState);
validate_response('ComAdobeCqHcContentPackagesHealthCheck', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeCqHcContentPackagesHealthCheck', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeCqHistoryImplHistoryRequestFilter', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeCqHistoryImplHistoryRequestFilterInfo', 'comAdobeCqHistoryImplHistoryRequestFilterInfo', Body, ValidatorState);
validate_response('ComAdobeCqHistoryImplHistoryRequestFilter', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeCqHistoryImplHistoryRequestFilter', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeCqHistoryImplHistoryServiceImpl', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeCqHistoryImplHistoryServiceImplInfo', 'comAdobeCqHistoryImplHistoryServiceImplInfo', Body, ValidatorState);
validate_response('ComAdobeCqHistoryImplHistoryServiceImpl', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeCqHistoryImplHistoryServiceImpl', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeCqInboxImplTypeproviderItemTypeProvider', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeCqInboxImplTypeproviderItemTypeProviderInfo', 'comAdobeCqInboxImplTypeproviderItemTypeProviderInfo', Body, ValidatorState);
validate_response('ComAdobeCqInboxImplTypeproviderItemTypeProvider', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeCqInboxImplTypeproviderItemTypeProvider', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeCqProjectsImplServletProjectImageServlet', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeCqProjectsImplServletProjectImageServletInfo', 'comAdobeCqProjectsImplServletProjectImageServletInfo', Body, ValidatorState);
validate_response('ComAdobeCqProjectsImplServletProjectImageServlet', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeCqProjectsImplServletProjectImageServlet', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeCqProjectsPurgeScheduler', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeCqProjectsPurgeSchedulerInfo', 'comAdobeCqProjectsPurgeSchedulerInfo', Body, ValidatorState);
validate_response('ComAdobeCqProjectsPurgeScheduler', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeCqProjectsPurgeScheduler', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeCqScheduledExporterImplScheduledExporterImpl', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeCqScheduledExporterImplScheduledExporterImplInfo', 'comAdobeCqScheduledExporterImplScheduledExporterImplInfo', Body, ValidatorState);
validate_response('ComAdobeCqScheduledExporterImplScheduledExporterImpl', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeCqScheduledExporterImplScheduledExporterImpl', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeCqScreensAnalyticsImplScreensAnalyticsServiceImpl', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeCqScreensAnalyticsImplScreensAnalyticsServiceImplInfo', 'comAdobeCqScreensAnalyticsImplScreensAnalyticsServiceImplInfo', Body, ValidatorState);
validate_response('ComAdobeCqScreensAnalyticsImplScreensAnalyticsServiceImpl', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeCqScreensAnalyticsImplScreensAnalyticsServiceImpl', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeCqScreensDeviceImplDeviceService', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeCqScreensDeviceImplDeviceServiceInfo', 'comAdobeCqScreensDeviceImplDeviceServiceInfo', Body, ValidatorState);
validate_response('ComAdobeCqScreensDeviceImplDeviceService', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeCqScreensDeviceImplDeviceService', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeCqScreensDeviceRegistrationImplRegistrationServiceImpl', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeCqScreensDeviceRegistrationImplRegistrationServiceImplInfo', 'comAdobeCqScreensDeviceRegistrationImplRegistrationServiceImplInfo', Body, ValidatorState);
validate_response('ComAdobeCqScreensDeviceRegistrationImplRegistrationServiceImpl', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeCqScreensDeviceRegistrationImplRegistrationServiceImpl', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeCqScreensImplHandlerChannelsUpdateHandler', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeCqScreensImplHandlerChannelsUpdateHandlerInfo', 'comAdobeCqScreensImplHandlerChannelsUpdateHandlerInfo', Body, ValidatorState);
validate_response('ComAdobeCqScreensImplHandlerChannelsUpdateHandler', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeCqScreensImplHandlerChannelsUpdateHandler', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeCqScreensImplJobsDistributedDevicesStatiUpdateJob', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeCqScreensImplJobsDistributedDevicesStatiUpdateJobInfo', 'comAdobeCqScreensImplJobsDistributedDevicesStatiUpdateJobInfo', Body, ValidatorState);
validate_response('ComAdobeCqScreensImplJobsDistributedDevicesStatiUpdateJob', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeCqScreensImplJobsDistributedDevicesStatiUpdateJob', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeCqScreensImplRemoteImplDistributedHttpClientImpl', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeCqScreensImplRemoteImplDistributedHttpClientImplInfo', 'comAdobeCqScreensImplRemoteImplDistributedHttpClientImplInfo', Body, ValidatorState);
validate_response('ComAdobeCqScreensImplRemoteImplDistributedHttpClientImpl', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeCqScreensImplRemoteImplDistributedHttpClientImpl', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeCqScreensImplScreensChannelPostProcessor', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeCqScreensImplScreensChannelPostProcessorInfo', 'comAdobeCqScreensImplScreensChannelPostProcessorInfo', Body, ValidatorState);
validate_response('ComAdobeCqScreensImplScreensChannelPostProcessor', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeCqScreensImplScreensChannelPostProcessor', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeCqScreensMonitoringImplScreensMonitoringServiceImpl', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeCqScreensMonitoringImplScreensMonitoringServiceImplInfo', 'comAdobeCqScreensMonitoringImplScreensMonitoringServiceImplInfo', Body, ValidatorState);
validate_response('ComAdobeCqScreensMonitoringImplScreensMonitoringServiceImpl', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeCqScreensMonitoringImplScreensMonitoringServiceImpl', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeCqScreensMqActivemqImplArtemisJMSProvider', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeCqScreensMqActivemqImplArtemisJMSProviderInfo', 'comAdobeCqScreensMqActivemqImplArtemisJMSProviderInfo', Body, ValidatorState);
validate_response('ComAdobeCqScreensMqActivemqImplArtemisJMSProvider', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeCqScreensMqActivemqImplArtemisJMSProvider', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeCqScreensOfflinecontentImplBulkOfflineUpdateServiceImpl', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeCqScreensOfflinecontentImplBulkOfflineUpdateServiceImplInfo', 'comAdobeCqScreensOfflinecontentImplBulkOfflineUpdateServiceImplInfo', Body, ValidatorState);
validate_response('ComAdobeCqScreensOfflinecontentImplBulkOfflineUpdateServiceImpl', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeCqScreensOfflinecontentImplBulkOfflineUpdateServiceImpl', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeCqScreensOfflinecontentImplOfflineContentServiceImpl', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeCqScreensOfflinecontentImplOfflineContentServiceImplInfo', 'comAdobeCqScreensOfflinecontentImplOfflineContentServiceImplInfo', Body, ValidatorState);
validate_response('ComAdobeCqScreensOfflinecontentImplOfflineContentServiceImpl', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeCqScreensOfflinecontentImplOfflineContentServiceImpl', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeCqScreensSegmentationImplSegmentationFeatureFlag', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeCqScreensSegmentationImplSegmentationFeatureFlagInfo', 'comAdobeCqScreensSegmentationImplSegmentationFeatureFlagInfo', Body, ValidatorState);
validate_response('ComAdobeCqScreensSegmentationImplSegmentationFeatureFlag', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeCqScreensSegmentationImplSegmentationFeatureFlag', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeCqSecurityHcBundlesImplHtmlLibraryManagerConfigHealthCh', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeCqSecurityHcBundlesImplHtmlLibraryManagerConfigHealthChInfo', 'comAdobeCqSecurityHcBundlesImplHtmlLibraryManagerConfigHealthChInfo', Body, ValidatorState);
validate_response('ComAdobeCqSecurityHcBundlesImplHtmlLibraryManagerConfigHealthCh', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeCqSecurityHcBundlesImplHtmlLibraryManagerConfigHealthCh', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeCqSecurityHcBundlesImplWcmFilterHealthCheck', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeCqSecurityHcBundlesImplWcmFilterHealthCheckInfo', 'comAdobeCqSecurityHcBundlesImplWcmFilterHealthCheckInfo', Body, ValidatorState);
validate_response('ComAdobeCqSecurityHcBundlesImplWcmFilterHealthCheck', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeCqSecurityHcBundlesImplWcmFilterHealthCheck', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeCqSecurityHcDispatcherImplDispatcherAccessHealthCheck', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeCqSecurityHcDispatcherImplDispatcherAccessHealthCheckInfo', 'comAdobeCqSecurityHcDispatcherImplDispatcherAccessHealthCheckInfo', Body, ValidatorState);
validate_response('ComAdobeCqSecurityHcDispatcherImplDispatcherAccessHealthCheck', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeCqSecurityHcDispatcherImplDispatcherAccessHealthCheck', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeCqSecurityHcPackagesImplExampleContentHealthCheck', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeCqSecurityHcPackagesImplExampleContentHealthCheckInfo', 'comAdobeCqSecurityHcPackagesImplExampleContentHealthCheckInfo', Body, ValidatorState);
validate_response('ComAdobeCqSecurityHcPackagesImplExampleContentHealthCheck', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeCqSecurityHcPackagesImplExampleContentHealthCheck', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeCqSecurityHcWebserverImplClickjackingHealthCheck', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeCqSecurityHcWebserverImplClickjackingHealthCheckInfo', 'comAdobeCqSecurityHcWebserverImplClickjackingHealthCheckInfo', Body, ValidatorState);
validate_response('ComAdobeCqSecurityHcWebserverImplClickjackingHealthCheck', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeCqSecurityHcWebserverImplClickjackingHealthCheck', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeCqSocialAccountverificationImplAccountManagementConfigIm', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeCqSocialAccountverificationImplAccountManagementConfigImInfo', 'comAdobeCqSocialAccountverificationImplAccountManagementConfigImInfo', Body, ValidatorState);
validate_response('ComAdobeCqSocialAccountverificationImplAccountManagementConfigIm', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeCqSocialAccountverificationImplAccountManagementConfigIm', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeCqSocialActivitystreamsClientImplSocialActivityComponen', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeCqSocialActivitystreamsClientImplSocialActivityComponenInfo', 'comAdobeCqSocialActivitystreamsClientImplSocialActivityComponenInfo', Body, ValidatorState);
validate_response('ComAdobeCqSocialActivitystreamsClientImplSocialActivityComponen', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeCqSocialActivitystreamsClientImplSocialActivityComponen', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeCqSocialActivitystreamsClientImplSocialActivityStreamCo', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeCqSocialActivitystreamsClientImplSocialActivityStreamCoInfo', 'comAdobeCqSocialActivitystreamsClientImplSocialActivityStreamCoInfo', Body, ValidatorState);
validate_response('ComAdobeCqSocialActivitystreamsClientImplSocialActivityStreamCo', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeCqSocialActivitystreamsClientImplSocialActivityStreamCo', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeCqSocialActivitystreamsListenerImplEventListenerHandler', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeCqSocialActivitystreamsListenerImplEventListenerHandlerInfo', 'comAdobeCqSocialActivitystreamsListenerImplEventListenerHandlerInfo', Body, ValidatorState);
validate_response('ComAdobeCqSocialActivitystreamsListenerImplEventListenerHandler', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeCqSocialActivitystreamsListenerImplEventListenerHandler', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeCqSocialActivitystreamsListenerImplModerationEventExten', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeCqSocialActivitystreamsListenerImplModerationEventExtenInfo', 'comAdobeCqSocialActivitystreamsListenerImplModerationEventExtenInfo', Body, ValidatorState);
validate_response('ComAdobeCqSocialActivitystreamsListenerImplModerationEventExten', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeCqSocialActivitystreamsListenerImplModerationEventExten', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeCqSocialActivitystreamsListenerImplRatingEventActivityS', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeCqSocialActivitystreamsListenerImplRatingEventActivitySInfo', 'comAdobeCqSocialActivitystreamsListenerImplRatingEventActivitySInfo', Body, ValidatorState);
validate_response('ComAdobeCqSocialActivitystreamsListenerImplRatingEventActivityS', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeCqSocialActivitystreamsListenerImplRatingEventActivityS', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeCqSocialActivitystreamsListenerImplResourceActivityStre', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeCqSocialActivitystreamsListenerImplResourceActivityStreInfo', 'comAdobeCqSocialActivitystreamsListenerImplResourceActivityStreInfo', Body, ValidatorState);
validate_response('ComAdobeCqSocialActivitystreamsListenerImplResourceActivityStre', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeCqSocialActivitystreamsListenerImplResourceActivityStre', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeCqSocialCalendarClientEndpointsImplCalendarOperationsI', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeCqSocialCalendarClientEndpointsImplCalendarOperationsIInfo', 'comAdobeCqSocialCalendarClientEndpointsImplCalendarOperationsIInfo', Body, ValidatorState);
validate_response('ComAdobeCqSocialCalendarClientEndpointsImplCalendarOperationsI', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeCqSocialCalendarClientEndpointsImplCalendarOperationsI', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeCqSocialCalendarClientOperationextensionsEventAttachmen', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeCqSocialCalendarClientOperationextensionsEventAttachmenInfo', 'comAdobeCqSocialCalendarClientOperationextensionsEventAttachmenInfo', Body, ValidatorState);
validate_response('ComAdobeCqSocialCalendarClientOperationextensionsEventAttachmen', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeCqSocialCalendarClientOperationextensionsEventAttachmen', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeCqSocialCalendarServletsTimeZoneServlet', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeCqSocialCalendarServletsTimeZoneServletInfo', 'comAdobeCqSocialCalendarServletsTimeZoneServletInfo', Body, ValidatorState);
validate_response('ComAdobeCqSocialCalendarServletsTimeZoneServlet', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeCqSocialCalendarServletsTimeZoneServlet', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeCqSocialCommonsCommentsEndpointsImplCommentDeleteEvent', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeCqSocialCommonsCommentsEndpointsImplCommentDeleteEventInfo', 'comAdobeCqSocialCommonsCommentsEndpointsImplCommentDeleteEventInfo', Body, ValidatorState);
validate_response('ComAdobeCqSocialCommonsCommentsEndpointsImplCommentDeleteEvent', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeCqSocialCommonsCommentsEndpointsImplCommentDeleteEvent', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeCqSocialCommonsCommentsEndpointsImplCommentOperationSe', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeCqSocialCommonsCommentsEndpointsImplCommentOperationSeInfo', 'comAdobeCqSocialCommonsCommentsEndpointsImplCommentOperationSeInfo', Body, ValidatorState);
validate_response('ComAdobeCqSocialCommonsCommentsEndpointsImplCommentOperationSe', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeCqSocialCommonsCommentsEndpointsImplCommentOperationSe', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeCqSocialCommonsCommentsEndpointsImplTranslationOperati', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeCqSocialCommonsCommentsEndpointsImplTranslationOperatiInfo', 'comAdobeCqSocialCommonsCommentsEndpointsImplTranslationOperatiInfo', Body, ValidatorState);
validate_response('ComAdobeCqSocialCommonsCommentsEndpointsImplTranslationOperati', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeCqSocialCommonsCommentsEndpointsImplTranslationOperati', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeCqSocialCommonsCommentsListingImplSearchCommentSocialC', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeCqSocialCommonsCommentsListingImplSearchCommentSocialCInfo', 'comAdobeCqSocialCommonsCommentsListingImplSearchCommentSocialCInfo', Body, ValidatorState);
validate_response('ComAdobeCqSocialCommonsCommentsListingImplSearchCommentSocialC', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeCqSocialCommonsCommentsListingImplSearchCommentSocialC', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeCqSocialCommonsCommentsSchedulerImplSearchScheduledPos', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeCqSocialCommonsCommentsSchedulerImplSearchScheduledPosInfo', 'comAdobeCqSocialCommonsCommentsSchedulerImplSearchScheduledPosInfo', Body, ValidatorState);
validate_response('ComAdobeCqSocialCommonsCommentsSchedulerImplSearchScheduledPos', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeCqSocialCommonsCommentsSchedulerImplSearchScheduledPos', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeCqSocialCommonsCorsCORSAuthenticationFilter', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeCqSocialCommonsCorsCORSAuthenticationFilterInfo', 'comAdobeCqSocialCommonsCorsCORSAuthenticationFilterInfo', Body, ValidatorState);
validate_response('ComAdobeCqSocialCommonsCorsCORSAuthenticationFilter', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeCqSocialCommonsCorsCORSAuthenticationFilter', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeCqSocialCommonsEmailreplyImplAndroidEmailClientProvider', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeCqSocialCommonsEmailreplyImplAndroidEmailClientProviderInfo', 'comAdobeCqSocialCommonsEmailreplyImplAndroidEmailClientProviderInfo', Body, ValidatorState);
validate_response('ComAdobeCqSocialCommonsEmailreplyImplAndroidEmailClientProvider', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeCqSocialCommonsEmailreplyImplAndroidEmailClientProvider', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeCqSocialCommonsEmailreplyImplCommentEmailBuilderImpl', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeCqSocialCommonsEmailreplyImplCommentEmailBuilderImplInfo', 'comAdobeCqSocialCommonsEmailreplyImplCommentEmailBuilderImplInfo', Body, ValidatorState);
validate_response('ComAdobeCqSocialCommonsEmailreplyImplCommentEmailBuilderImpl', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeCqSocialCommonsEmailreplyImplCommentEmailBuilderImpl', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeCqSocialCommonsEmailreplyImplCommentEmailEventListener', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeCqSocialCommonsEmailreplyImplCommentEmailEventListenerInfo', 'comAdobeCqSocialCommonsEmailreplyImplCommentEmailEventListenerInfo', Body, ValidatorState);
validate_response('ComAdobeCqSocialCommonsEmailreplyImplCommentEmailEventListener', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeCqSocialCommonsEmailreplyImplCommentEmailEventListener', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeCqSocialCommonsEmailreplyImplCustomEmailClientProvider', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeCqSocialCommonsEmailreplyImplCustomEmailClientProviderInfo', 'comAdobeCqSocialCommonsEmailreplyImplCustomEmailClientProviderInfo', Body, ValidatorState);
validate_response('ComAdobeCqSocialCommonsEmailreplyImplCustomEmailClientProvider', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeCqSocialCommonsEmailreplyImplCustomEmailClientProvider', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeCqSocialCommonsEmailreplyImplEmailQuotedTextPatternsImp', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeCqSocialCommonsEmailreplyImplEmailQuotedTextPatternsImpInfo', 'comAdobeCqSocialCommonsEmailreplyImplEmailQuotedTextPatternsImpInfo', Body, ValidatorState);
validate_response('ComAdobeCqSocialCommonsEmailreplyImplEmailQuotedTextPatternsImp', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeCqSocialCommonsEmailreplyImplEmailQuotedTextPatternsImp', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeCqSocialCommonsEmailreplyImplEmailReplyConfigurationImp', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeCqSocialCommonsEmailreplyImplEmailReplyConfigurationImpInfo', 'comAdobeCqSocialCommonsEmailreplyImplEmailReplyConfigurationImpInfo', Body, ValidatorState);
validate_response('ComAdobeCqSocialCommonsEmailreplyImplEmailReplyConfigurationImp', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeCqSocialCommonsEmailreplyImplEmailReplyConfigurationImp', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeCqSocialCommonsEmailreplyImplEmailReplyImporter', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeCqSocialCommonsEmailreplyImplEmailReplyImporterInfo', 'comAdobeCqSocialCommonsEmailreplyImplEmailReplyImporterInfo', Body, ValidatorState);
validate_response('ComAdobeCqSocialCommonsEmailreplyImplEmailReplyImporter', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeCqSocialCommonsEmailreplyImplEmailReplyImporter', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeCqSocialCommonsEmailreplyImplGmailEmailClientProvider', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeCqSocialCommonsEmailreplyImplGmailEmailClientProviderInfo', 'comAdobeCqSocialCommonsEmailreplyImplGmailEmailClientProviderInfo', Body, ValidatorState);
validate_response('ComAdobeCqSocialCommonsEmailreplyImplGmailEmailClientProvider', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeCqSocialCommonsEmailreplyImplGmailEmailClientProvider', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeCqSocialCommonsEmailreplyImplIOSEmailClientProvider', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeCqSocialCommonsEmailreplyImplIOSEmailClientProviderInfo', 'comAdobeCqSocialCommonsEmailreplyImplIOSEmailClientProviderInfo', Body, ValidatorState);
validate_response('ComAdobeCqSocialCommonsEmailreplyImplIOSEmailClientProvider', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeCqSocialCommonsEmailreplyImplIOSEmailClientProvider', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeCqSocialCommonsEmailreplyImplMacmailEmailClientProvider', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeCqSocialCommonsEmailreplyImplMacmailEmailClientProviderInfo', 'comAdobeCqSocialCommonsEmailreplyImplMacmailEmailClientProviderInfo', Body, ValidatorState);
validate_response('ComAdobeCqSocialCommonsEmailreplyImplMacmailEmailClientProvider', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeCqSocialCommonsEmailreplyImplMacmailEmailClientProvider', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeCqSocialCommonsEmailreplyImplOutLookEmailClientProvider', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeCqSocialCommonsEmailreplyImplOutLookEmailClientProviderInfo', 'comAdobeCqSocialCommonsEmailreplyImplOutLookEmailClientProviderInfo', Body, ValidatorState);
validate_response('ComAdobeCqSocialCommonsEmailreplyImplOutLookEmailClientProvider', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeCqSocialCommonsEmailreplyImplOutLookEmailClientProvider', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeCqSocialCommonsEmailreplyImplUnknownEmailClientProvider', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeCqSocialCommonsEmailreplyImplUnknownEmailClientProviderInfo', 'comAdobeCqSocialCommonsEmailreplyImplUnknownEmailClientProviderInfo', Body, ValidatorState);
validate_response('ComAdobeCqSocialCommonsEmailreplyImplUnknownEmailClientProvider', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeCqSocialCommonsEmailreplyImplUnknownEmailClientProvider', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeCqSocialCommonsEmailreplyImplYahooEmailClientProvider', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeCqSocialCommonsEmailreplyImplYahooEmailClientProviderInfo', 'comAdobeCqSocialCommonsEmailreplyImplYahooEmailClientProviderInfo', Body, ValidatorState);
validate_response('ComAdobeCqSocialCommonsEmailreplyImplYahooEmailClientProvider', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeCqSocialCommonsEmailreplyImplYahooEmailClientProvider', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeCqSocialCommonsMaintainanceImplDeleteTempUGCImageUpload', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeCqSocialCommonsMaintainanceImplDeleteTempUGCImageUploadInfo', 'comAdobeCqSocialCommonsMaintainanceImplDeleteTempUGCImageUploadInfo', Body, ValidatorState);
validate_response('ComAdobeCqSocialCommonsMaintainanceImplDeleteTempUGCImageUpload', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeCqSocialCommonsMaintainanceImplDeleteTempUGCImageUpload', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeCqSocialCommonsUgclimiterImplUGCLimiterServiceImpl', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeCqSocialCommonsUgclimiterImplUGCLimiterServiceImplInfo', 'comAdobeCqSocialCommonsUgclimiterImplUGCLimiterServiceImplInfo', Body, ValidatorState);
validate_response('ComAdobeCqSocialCommonsUgclimiterImplUGCLimiterServiceImpl', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeCqSocialCommonsUgclimiterImplUGCLimiterServiceImpl', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeCqSocialCommonsUgclimitsconfigImplCommunityUserUGCLimit', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeCqSocialCommonsUgclimitsconfigImplCommunityUserUGCLimitInfo', 'comAdobeCqSocialCommonsUgclimitsconfigImplCommunityUserUGCLimitInfo', Body, ValidatorState);
validate_response('ComAdobeCqSocialCommonsUgclimitsconfigImplCommunityUserUGCLimit', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeCqSocialCommonsUgclimitsconfigImplCommunityUserUGCLimit', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeCqSocialConnectOauthImplFacebookProviderImpl', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeCqSocialConnectOauthImplFacebookProviderImplInfo', 'comAdobeCqSocialConnectOauthImplFacebookProviderImplInfo', Body, ValidatorState);
validate_response('ComAdobeCqSocialConnectOauthImplFacebookProviderImpl', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeCqSocialConnectOauthImplFacebookProviderImpl', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeCqSocialConnectOauthImplSocialOAuthAuthenticationHandle', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeCqSocialConnectOauthImplSocialOAuthAuthenticationHandleInfo', 'comAdobeCqSocialConnectOauthImplSocialOAuthAuthenticationHandleInfo', Body, ValidatorState);
validate_response('ComAdobeCqSocialConnectOauthImplSocialOAuthAuthenticationHandle', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeCqSocialConnectOauthImplSocialOAuthAuthenticationHandle', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeCqSocialConnectOauthImplSocialOAuthUserProfileMapper', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeCqSocialConnectOauthImplSocialOAuthUserProfileMapperInfo', 'comAdobeCqSocialConnectOauthImplSocialOAuthUserProfileMapperInfo', Body, ValidatorState);
validate_response('ComAdobeCqSocialConnectOauthImplSocialOAuthUserProfileMapper', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeCqSocialConnectOauthImplSocialOAuthUserProfileMapper', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeCqSocialConnectOauthImplTwitterProviderImpl', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeCqSocialConnectOauthImplTwitterProviderImplInfo', 'comAdobeCqSocialConnectOauthImplTwitterProviderImplInfo', Body, ValidatorState);
validate_response('ComAdobeCqSocialConnectOauthImplTwitterProviderImpl', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeCqSocialConnectOauthImplTwitterProviderImpl', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeCqSocialContentFragmentsServicesImplCommunitiesFragmen', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeCqSocialContentFragmentsServicesImplCommunitiesFragmenInfo', 'comAdobeCqSocialContentFragmentsServicesImplCommunitiesFragmenInfo', Body, ValidatorState);
validate_response('ComAdobeCqSocialContentFragmentsServicesImplCommunitiesFragmen', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeCqSocialContentFragmentsServicesImplCommunitiesFragmen', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeCqSocialDatastoreAsImplASResourceProviderFactory', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeCqSocialDatastoreAsImplASResourceProviderFactoryInfo', 'comAdobeCqSocialDatastoreAsImplASResourceProviderFactoryInfo', Body, ValidatorState);
validate_response('ComAdobeCqSocialDatastoreAsImplASResourceProviderFactory', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeCqSocialDatastoreAsImplASResourceProviderFactory', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeCqSocialDatastoreOpImplSocialMSResourceProviderFactory', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeCqSocialDatastoreOpImplSocialMSResourceProviderFactoryInfo', 'comAdobeCqSocialDatastoreOpImplSocialMSResourceProviderFactoryInfo', Body, ValidatorState);
validate_response('ComAdobeCqSocialDatastoreOpImplSocialMSResourceProviderFactory', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeCqSocialDatastoreOpImplSocialMSResourceProviderFactory', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeCqSocialDatastoreRdbImplSocialRDBResourceProviderFactor', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeCqSocialDatastoreRdbImplSocialRDBResourceProviderFactorInfo', 'comAdobeCqSocialDatastoreRdbImplSocialRDBResourceProviderFactorInfo', Body, ValidatorState);
validate_response('ComAdobeCqSocialDatastoreRdbImplSocialRDBResourceProviderFactor', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeCqSocialDatastoreRdbImplSocialRDBResourceProviderFactor', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeCqSocialEnablementAdaptorsEnablementLearningPathAdaptorF', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeCqSocialEnablementAdaptorsEnablementLearningPathAdaptorFInfo', 'comAdobeCqSocialEnablementAdaptorsEnablementLearningPathAdaptorFInfo', Body, ValidatorState);
validate_response('ComAdobeCqSocialEnablementAdaptorsEnablementLearningPathAdaptorF', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeCqSocialEnablementAdaptorsEnablementLearningPathAdaptorF', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeCqSocialEnablementAdaptorsEnablementResourceAdaptorFacto', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeCqSocialEnablementAdaptorsEnablementResourceAdaptorFactoInfo', 'comAdobeCqSocialEnablementAdaptorsEnablementResourceAdaptorFactoInfo', Body, ValidatorState);
validate_response('ComAdobeCqSocialEnablementAdaptorsEnablementResourceAdaptorFacto', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeCqSocialEnablementAdaptorsEnablementResourceAdaptorFacto', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeCqSocialEnablementLearningpathEndpointsImplEnablementL', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeCqSocialEnablementLearningpathEndpointsImplEnablementLInfo', 'comAdobeCqSocialEnablementLearningpathEndpointsImplEnablementLInfo', Body, ValidatorState);
validate_response('ComAdobeCqSocialEnablementLearningpathEndpointsImplEnablementL', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeCqSocialEnablementLearningpathEndpointsImplEnablementL', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeCqSocialEnablementResourceEndpointsImplEnablementResou', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeCqSocialEnablementResourceEndpointsImplEnablementResouInfo', 'comAdobeCqSocialEnablementResourceEndpointsImplEnablementResouInfo', Body, ValidatorState);
validate_response('ComAdobeCqSocialEnablementResourceEndpointsImplEnablementResou', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeCqSocialEnablementResourceEndpointsImplEnablementResou', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeCqSocialEnablementServicesImplAuthorMarkerImpl', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeCqSocialEnablementServicesImplAuthorMarkerImplInfo', 'comAdobeCqSocialEnablementServicesImplAuthorMarkerImplInfo', Body, ValidatorState);
validate_response('ComAdobeCqSocialEnablementServicesImplAuthorMarkerImpl', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeCqSocialEnablementServicesImplAuthorMarkerImpl', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeCqSocialFilelibraryClientEndpointsFilelibraryDownloadGe', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeCqSocialFilelibraryClientEndpointsFilelibraryDownloadGeInfo', 'comAdobeCqSocialFilelibraryClientEndpointsFilelibraryDownloadGeInfo', Body, ValidatorState);
validate_response('ComAdobeCqSocialFilelibraryClientEndpointsFilelibraryDownloadGe', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeCqSocialFilelibraryClientEndpointsFilelibraryDownloadGe', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeCqSocialFilelibraryClientEndpointsImplFileLibraryOpera', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeCqSocialFilelibraryClientEndpointsImplFileLibraryOperaInfo', 'comAdobeCqSocialFilelibraryClientEndpointsImplFileLibraryOperaInfo', Body, ValidatorState);
validate_response('ComAdobeCqSocialFilelibraryClientEndpointsImplFileLibraryOpera', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeCqSocialFilelibraryClientEndpointsImplFileLibraryOpera', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeCqSocialForumClientEndpointsImplForumOperationsService', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeCqSocialForumClientEndpointsImplForumOperationsServiceInfo', 'comAdobeCqSocialForumClientEndpointsImplForumOperationsServiceInfo', Body, ValidatorState);
validate_response('ComAdobeCqSocialForumClientEndpointsImplForumOperationsService', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeCqSocialForumClientEndpointsImplForumOperationsService', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeCqSocialForumDispatcherImplFlushOperations', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeCqSocialForumDispatcherImplFlushOperationsInfo', 'comAdobeCqSocialForumDispatcherImplFlushOperationsInfo', Body, ValidatorState);
validate_response('ComAdobeCqSocialForumDispatcherImplFlushOperations', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeCqSocialForumDispatcherImplFlushOperations', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeCqSocialGroupClientImplCommunityGroupCollectionComponen', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeCqSocialGroupClientImplCommunityGroupCollectionComponenInfo', 'comAdobeCqSocialGroupClientImplCommunityGroupCollectionComponenInfo', Body, ValidatorState);
validate_response('ComAdobeCqSocialGroupClientImplCommunityGroupCollectionComponen', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeCqSocialGroupClientImplCommunityGroupCollectionComponen', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeCqSocialGroupImplGroupServiceImpl', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeCqSocialGroupImplGroupServiceImplInfo', 'comAdobeCqSocialGroupImplGroupServiceImplInfo', Body, ValidatorState);
validate_response('ComAdobeCqSocialGroupImplGroupServiceImpl', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeCqSocialGroupImplGroupServiceImpl', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeCqSocialHandlebarsGuavaTemplateCacheImpl', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeCqSocialHandlebarsGuavaTemplateCacheImplInfo', 'comAdobeCqSocialHandlebarsGuavaTemplateCacheImplInfo', Body, ValidatorState);
validate_response('ComAdobeCqSocialHandlebarsGuavaTemplateCacheImpl', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeCqSocialHandlebarsGuavaTemplateCacheImpl', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeCqSocialIdeationClientEndpointsImplIdeationOperationsS', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeCqSocialIdeationClientEndpointsImplIdeationOperationsSInfo', 'comAdobeCqSocialIdeationClientEndpointsImplIdeationOperationsSInfo', Body, ValidatorState);
validate_response('ComAdobeCqSocialIdeationClientEndpointsImplIdeationOperationsS', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeCqSocialIdeationClientEndpointsImplIdeationOperationsS', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeCqSocialJournalClientEndpointsImplJournalOperationsSer', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeCqSocialJournalClientEndpointsImplJournalOperationsSerInfo', 'comAdobeCqSocialJournalClientEndpointsImplJournalOperationsSerInfo', Body, ValidatorState);
validate_response('ComAdobeCqSocialJournalClientEndpointsImplJournalOperationsSer', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeCqSocialJournalClientEndpointsImplJournalOperationsSer', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeCqSocialMembersEndpointsImplCommunityMemberGroupProfile', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeCqSocialMembersEndpointsImplCommunityMemberGroupProfileInfo', 'comAdobeCqSocialMembersEndpointsImplCommunityMemberGroupProfileInfo', Body, ValidatorState);
validate_response('ComAdobeCqSocialMembersEndpointsImplCommunityMemberGroupProfile', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeCqSocialMembersEndpointsImplCommunityMemberGroupProfile', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeCqSocialMembersEndpointsImplCommunityMemberUserProfileO', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeCqSocialMembersEndpointsImplCommunityMemberUserProfileOInfo', 'comAdobeCqSocialMembersEndpointsImplCommunityMemberUserProfileOInfo', Body, ValidatorState);
validate_response('ComAdobeCqSocialMembersEndpointsImplCommunityMemberUserProfileO', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeCqSocialMembersEndpointsImplCommunityMemberUserProfileO', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeCqSocialMembersImplCommunityMemberGroupProfileComponentF', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeCqSocialMembersImplCommunityMemberGroupProfileComponentFInfo', 'comAdobeCqSocialMembersImplCommunityMemberGroupProfileComponentFInfo', Body, ValidatorState);
validate_response('ComAdobeCqSocialMembersImplCommunityMemberGroupProfileComponentF', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeCqSocialMembersImplCommunityMemberGroupProfileComponentF', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeCqSocialMessagingClientEndpointsImplMessagingOperation', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeCqSocialMessagingClientEndpointsImplMessagingOperationInfo', 'comAdobeCqSocialMessagingClientEndpointsImplMessagingOperationInfo', Body, ValidatorState);
validate_response('ComAdobeCqSocialMessagingClientEndpointsImplMessagingOperation', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeCqSocialMessagingClientEndpointsImplMessagingOperation', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeCqSocialModerationDashboardApiFilterGroupSocialComponen', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeCqSocialModerationDashboardApiFilterGroupSocialComponenInfo', 'comAdobeCqSocialModerationDashboardApiFilterGroupSocialComponenInfo', Body, ValidatorState);
validate_response('ComAdobeCqSocialModerationDashboardApiFilterGroupSocialComponen', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeCqSocialModerationDashboardApiFilterGroupSocialComponen', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeCqSocialModerationDashboardApiModerationDashboardSocial', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeCqSocialModerationDashboardApiModerationDashboardSocialInfo', 'comAdobeCqSocialModerationDashboardApiModerationDashboardSocialInfo', Body, ValidatorState);
validate_response('ComAdobeCqSocialModerationDashboardApiModerationDashboardSocial', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeCqSocialModerationDashboardApiModerationDashboardSocial', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeCqSocialModerationDashboardApiUserDetailsSocialComponen', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeCqSocialModerationDashboardApiUserDetailsSocialComponenInfo', 'comAdobeCqSocialModerationDashboardApiUserDetailsSocialComponenInfo', Body, ValidatorState);
validate_response('ComAdobeCqSocialModerationDashboardApiUserDetailsSocialComponen', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeCqSocialModerationDashboardApiUserDetailsSocialComponen', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeCqSocialModerationDashboardInternalImplFilterGroupSoci', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeCqSocialModerationDashboardInternalImplFilterGroupSociInfo', 'comAdobeCqSocialModerationDashboardInternalImplFilterGroupSociInfo', Body, ValidatorState);
validate_response('ComAdobeCqSocialModerationDashboardInternalImplFilterGroupSoci', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeCqSocialModerationDashboardInternalImplFilterGroupSoci', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeCqSocialNotificationsImplMentionsRouter', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeCqSocialNotificationsImplMentionsRouterInfo', 'comAdobeCqSocialNotificationsImplMentionsRouterInfo', Body, ValidatorState);
validate_response('ComAdobeCqSocialNotificationsImplMentionsRouter', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeCqSocialNotificationsImplMentionsRouter', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeCqSocialNotificationsImplNotificationManagerImpl', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeCqSocialNotificationsImplNotificationManagerImplInfo', 'comAdobeCqSocialNotificationsImplNotificationManagerImplInfo', Body, ValidatorState);
validate_response('ComAdobeCqSocialNotificationsImplNotificationManagerImpl', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeCqSocialNotificationsImplNotificationManagerImpl', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeCqSocialNotificationsImplNotificationsRouter', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeCqSocialNotificationsImplNotificationsRouterInfo', 'comAdobeCqSocialNotificationsImplNotificationsRouterInfo', Body, ValidatorState);
validate_response('ComAdobeCqSocialNotificationsImplNotificationsRouter', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeCqSocialNotificationsImplNotificationsRouter', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeCqSocialQnaClientEndpointsImplQnaForumOperationsServic', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeCqSocialQnaClientEndpointsImplQnaForumOperationsServicInfo', 'comAdobeCqSocialQnaClientEndpointsImplQnaForumOperationsServicInfo', Body, ValidatorState);
validate_response('ComAdobeCqSocialQnaClientEndpointsImplQnaForumOperationsServic', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeCqSocialQnaClientEndpointsImplQnaForumOperationsServic', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeCqSocialReportingAnalyticsServicesImplAnalyticsReportI', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeCqSocialReportingAnalyticsServicesImplAnalyticsReportIInfo', 'comAdobeCqSocialReportingAnalyticsServicesImplAnalyticsReportIInfo', Body, ValidatorState);
validate_response('ComAdobeCqSocialReportingAnalyticsServicesImplAnalyticsReportI', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeCqSocialReportingAnalyticsServicesImplAnalyticsReportI', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeCqSocialReportingAnalyticsServicesImplAnalyticsReportM', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeCqSocialReportingAnalyticsServicesImplAnalyticsReportMInfo', 'comAdobeCqSocialReportingAnalyticsServicesImplAnalyticsReportMInfo', Body, ValidatorState);
validate_response('ComAdobeCqSocialReportingAnalyticsServicesImplAnalyticsReportM', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeCqSocialReportingAnalyticsServicesImplAnalyticsReportM', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeCqSocialReportingAnalyticsServicesImplSiteTrendReportS', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeCqSocialReportingAnalyticsServicesImplSiteTrendReportSInfo', 'comAdobeCqSocialReportingAnalyticsServicesImplSiteTrendReportSInfo', Body, ValidatorState);
validate_response('ComAdobeCqSocialReportingAnalyticsServicesImplSiteTrendReportS', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeCqSocialReportingAnalyticsServicesImplSiteTrendReportS', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeCqSocialReviewClientEndpointsImplReviewOperationsServi', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeCqSocialReviewClientEndpointsImplReviewOperationsServiInfo', 'comAdobeCqSocialReviewClientEndpointsImplReviewOperationsServiInfo', Body, ValidatorState);
validate_response('ComAdobeCqSocialReviewClientEndpointsImplReviewOperationsServi', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeCqSocialReviewClientEndpointsImplReviewOperationsServi', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeCqSocialScfCoreOperationsImplSocialOperationsServlet', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeCqSocialScfCoreOperationsImplSocialOperationsServletInfo', 'comAdobeCqSocialScfCoreOperationsImplSocialOperationsServletInfo', Body, ValidatorState);
validate_response('ComAdobeCqSocialScfCoreOperationsImplSocialOperationsServlet', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeCqSocialScfCoreOperationsImplSocialOperationsServlet', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeCqSocialScfEndpointsImplDefaultSocialGetServlet', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeCqSocialScfEndpointsImplDefaultSocialGetServletInfo', 'comAdobeCqSocialScfEndpointsImplDefaultSocialGetServletInfo', Body, ValidatorState);
validate_response('ComAdobeCqSocialScfEndpointsImplDefaultSocialGetServlet', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeCqSocialScfEndpointsImplDefaultSocialGetServlet', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeCqSocialScoringImplScoringEventListener', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeCqSocialScoringImplScoringEventListenerInfo', 'comAdobeCqSocialScoringImplScoringEventListenerInfo', Body, ValidatorState);
validate_response('ComAdobeCqSocialScoringImplScoringEventListener', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeCqSocialScoringImplScoringEventListener', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeCqSocialServiceusersInternalImplServiceUserWrapperImpl', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeCqSocialServiceusersInternalImplServiceUserWrapperImplInfo', 'comAdobeCqSocialServiceusersInternalImplServiceUserWrapperImplInfo', Body, ValidatorState);
validate_response('ComAdobeCqSocialServiceusersInternalImplServiceUserWrapperImpl', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeCqSocialServiceusersInternalImplServiceUserWrapperImpl', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeCqSocialSiteEndpointsImplSiteOperationService', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeCqSocialSiteEndpointsImplSiteOperationServiceInfo', 'comAdobeCqSocialSiteEndpointsImplSiteOperationServiceInfo', Body, ValidatorState);
validate_response('ComAdobeCqSocialSiteEndpointsImplSiteOperationService', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeCqSocialSiteEndpointsImplSiteOperationService', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeCqSocialSiteImplAnalyticsComponentConfigurationServiceIm', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeCqSocialSiteImplAnalyticsComponentConfigurationServiceImInfo', 'comAdobeCqSocialSiteImplAnalyticsComponentConfigurationServiceImInfo', Body, ValidatorState);
validate_response('ComAdobeCqSocialSiteImplAnalyticsComponentConfigurationServiceIm', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeCqSocialSiteImplAnalyticsComponentConfigurationServiceIm', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeCqSocialSiteImplSiteConfiguratorImpl', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeCqSocialSiteImplSiteConfiguratorImplInfo', 'comAdobeCqSocialSiteImplSiteConfiguratorImplInfo', Body, ValidatorState);
validate_response('ComAdobeCqSocialSiteImplSiteConfiguratorImpl', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeCqSocialSiteImplSiteConfiguratorImpl', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeCqSocialSrpImplSocialSolrConnector', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeCqSocialSrpImplSocialSolrConnectorInfo', 'comAdobeCqSocialSrpImplSocialSolrConnectorInfo', Body, ValidatorState);
validate_response('ComAdobeCqSocialSrpImplSocialSolrConnector', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeCqSocialSrpImplSocialSolrConnector', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeCqSocialSyncImplDiffChangesObserver', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeCqSocialSyncImplDiffChangesObserverInfo', 'comAdobeCqSocialSyncImplDiffChangesObserverInfo', Body, ValidatorState);
validate_response('ComAdobeCqSocialSyncImplDiffChangesObserver', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeCqSocialSyncImplDiffChangesObserver', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeCqSocialSyncImplGroupSyncListenerImpl', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeCqSocialSyncImplGroupSyncListenerImplInfo', 'comAdobeCqSocialSyncImplGroupSyncListenerImplInfo', Body, ValidatorState);
validate_response('ComAdobeCqSocialSyncImplGroupSyncListenerImpl', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeCqSocialSyncImplGroupSyncListenerImpl', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeCqSocialSyncImplPublisherSyncServiceImpl', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeCqSocialSyncImplPublisherSyncServiceImplInfo', 'comAdobeCqSocialSyncImplPublisherSyncServiceImplInfo', Body, ValidatorState);
validate_response('ComAdobeCqSocialSyncImplPublisherSyncServiceImpl', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeCqSocialSyncImplPublisherSyncServiceImpl', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeCqSocialSyncImplUserSyncListenerImpl', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeCqSocialSyncImplUserSyncListenerImplInfo', 'comAdobeCqSocialSyncImplUserSyncListenerImplInfo', Body, ValidatorState);
validate_response('ComAdobeCqSocialSyncImplUserSyncListenerImpl', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeCqSocialSyncImplUserSyncListenerImpl', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeCqSocialTranslationImplTranslationServiceConfigManager', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeCqSocialTranslationImplTranslationServiceConfigManagerInfo', 'comAdobeCqSocialTranslationImplTranslationServiceConfigManagerInfo', Body, ValidatorState);
validate_response('ComAdobeCqSocialTranslationImplTranslationServiceConfigManager', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeCqSocialTranslationImplTranslationServiceConfigManager', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeCqSocialTranslationImplUGCLanguageDetector', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeCqSocialTranslationImplUGCLanguageDetectorInfo', 'comAdobeCqSocialTranslationImplUGCLanguageDetectorInfo', Body, ValidatorState);
validate_response('ComAdobeCqSocialTranslationImplUGCLanguageDetector', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeCqSocialTranslationImplUGCLanguageDetector', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeCqSocialUgcbaseDispatcherImplFlushServiceImpl', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeCqSocialUgcbaseDispatcherImplFlushServiceImplInfo', 'comAdobeCqSocialUgcbaseDispatcherImplFlushServiceImplInfo', Body, ValidatorState);
validate_response('ComAdobeCqSocialUgcbaseDispatcherImplFlushServiceImpl', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeCqSocialUgcbaseDispatcherImplFlushServiceImpl', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeCqSocialUgcbaseImplAysncReverseReplicatorImpl', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeCqSocialUgcbaseImplAysncReverseReplicatorImplInfo', 'comAdobeCqSocialUgcbaseImplAysncReverseReplicatorImplInfo', Body, ValidatorState);
validate_response('ComAdobeCqSocialUgcbaseImplAysncReverseReplicatorImpl', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeCqSocialUgcbaseImplAysncReverseReplicatorImpl', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeCqSocialUgcbaseImplPublisherConfigurationImpl', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeCqSocialUgcbaseImplPublisherConfigurationImplInfo', 'comAdobeCqSocialUgcbaseImplPublisherConfigurationImplInfo', Body, ValidatorState);
validate_response('ComAdobeCqSocialUgcbaseImplPublisherConfigurationImpl', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeCqSocialUgcbaseImplPublisherConfigurationImpl', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeCqSocialUgcbaseImplSocialUtilsImpl', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeCqSocialUgcbaseImplSocialUtilsImplInfo', 'comAdobeCqSocialUgcbaseImplSocialUtilsImplInfo', Body, ValidatorState);
validate_response('ComAdobeCqSocialUgcbaseImplSocialUtilsImpl', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeCqSocialUgcbaseImplSocialUtilsImpl', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeCqSocialUgcbaseModerationImplAutoModerationImpl', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeCqSocialUgcbaseModerationImplAutoModerationImplInfo', 'comAdobeCqSocialUgcbaseModerationImplAutoModerationImplInfo', Body, ValidatorState);
validate_response('ComAdobeCqSocialUgcbaseModerationImplAutoModerationImpl', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeCqSocialUgcbaseModerationImplAutoModerationImpl', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeCqSocialUgcbaseModerationImplSentimentProcess', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeCqSocialUgcbaseModerationImplSentimentProcessInfo', 'comAdobeCqSocialUgcbaseModerationImplSentimentProcessInfo', Body, ValidatorState);
validate_response('ComAdobeCqSocialUgcbaseModerationImplSentimentProcess', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeCqSocialUgcbaseModerationImplSentimentProcess', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeCqSocialUgcbaseSecurityImplDefaultAttachmentTypeBlackli', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeCqSocialUgcbaseSecurityImplDefaultAttachmentTypeBlackliInfo', 'comAdobeCqSocialUgcbaseSecurityImplDefaultAttachmentTypeBlackliInfo', Body, ValidatorState);
validate_response('ComAdobeCqSocialUgcbaseSecurityImplDefaultAttachmentTypeBlackli', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeCqSocialUgcbaseSecurityImplDefaultAttachmentTypeBlackli', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeCqSocialUgcbaseSecurityImplSaferSlingPostValidatorImpl', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeCqSocialUgcbaseSecurityImplSaferSlingPostValidatorImplInfo', 'comAdobeCqSocialUgcbaseSecurityImplSaferSlingPostValidatorImplInfo', Body, ValidatorState);
validate_response('ComAdobeCqSocialUgcbaseSecurityImplSaferSlingPostValidatorImpl', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeCqSocialUgcbaseSecurityImplSaferSlingPostValidatorImpl', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeCqSocialUserEndpointsImplUsersGroupFromPublishServlet', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeCqSocialUserEndpointsImplUsersGroupFromPublishServletInfo', 'comAdobeCqSocialUserEndpointsImplUsersGroupFromPublishServletInfo', Body, ValidatorState);
validate_response('ComAdobeCqSocialUserEndpointsImplUsersGroupFromPublishServlet', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeCqSocialUserEndpointsImplUsersGroupFromPublishServlet', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeCqSocialUserImplTransportHttpToPublisher', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeCqSocialUserImplTransportHttpToPublisherInfo', 'comAdobeCqSocialUserImplTransportHttpToPublisherInfo', Body, ValidatorState);
validate_response('ComAdobeCqSocialUserImplTransportHttpToPublisher', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeCqSocialUserImplTransportHttpToPublisher', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeCqUiWcmCommonsInternalServletsRteRTEFilterServletFact', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeCqUiWcmCommonsInternalServletsRteRTEFilterServletFactInfo', 'comAdobeCqUiWcmCommonsInternalServletsRteRTEFilterServletFactInfo', Body, ValidatorState);
validate_response('ComAdobeCqUiWcmCommonsInternalServletsRteRTEFilterServletFact', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeCqUiWcmCommonsInternalServletsRteRTEFilterServletFact', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeCqUpgradesCleanupImplUpgradeContentCleanup', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeCqUpgradesCleanupImplUpgradeContentCleanupInfo', 'comAdobeCqUpgradesCleanupImplUpgradeContentCleanupInfo', Body, ValidatorState);
validate_response('ComAdobeCqUpgradesCleanupImplUpgradeContentCleanup', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeCqUpgradesCleanupImplUpgradeContentCleanup', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeCqUpgradesCleanupImplUpgradeInstallFolderCleanup', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeCqUpgradesCleanupImplUpgradeInstallFolderCleanupInfo', 'comAdobeCqUpgradesCleanupImplUpgradeInstallFolderCleanupInfo', Body, ValidatorState);
validate_response('ComAdobeCqUpgradesCleanupImplUpgradeInstallFolderCleanup', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeCqUpgradesCleanupImplUpgradeInstallFolderCleanup', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeCqWcmJobsAsyncImplAsyncDeleteConfigProviderService', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeCqWcmJobsAsyncImplAsyncDeleteConfigProviderServiceInfo', 'comAdobeCqWcmJobsAsyncImplAsyncDeleteConfigProviderServiceInfo', Body, ValidatorState);
validate_response('ComAdobeCqWcmJobsAsyncImplAsyncDeleteConfigProviderService', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeCqWcmJobsAsyncImplAsyncDeleteConfigProviderService', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeCqWcmJobsAsyncImplAsyncJobCleanUpTask', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeCqWcmJobsAsyncImplAsyncJobCleanUpTaskInfo', 'comAdobeCqWcmJobsAsyncImplAsyncJobCleanUpTaskInfo', Body, ValidatorState);
validate_response('ComAdobeCqWcmJobsAsyncImplAsyncJobCleanUpTask', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeCqWcmJobsAsyncImplAsyncJobCleanUpTask', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeCqWcmJobsAsyncImplAsyncMoveConfigProviderService', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeCqWcmJobsAsyncImplAsyncMoveConfigProviderServiceInfo', 'comAdobeCqWcmJobsAsyncImplAsyncMoveConfigProviderServiceInfo', Body, ValidatorState);
validate_response('ComAdobeCqWcmJobsAsyncImplAsyncMoveConfigProviderService', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeCqWcmJobsAsyncImplAsyncMoveConfigProviderService', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeCqWcmJobsAsyncImplAsyncPageMoveConfigProviderService', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeCqWcmJobsAsyncImplAsyncPageMoveConfigProviderServiceInfo', 'comAdobeCqWcmJobsAsyncImplAsyncPageMoveConfigProviderServiceInfo', Body, ValidatorState);
validate_response('ComAdobeCqWcmJobsAsyncImplAsyncPageMoveConfigProviderService', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeCqWcmJobsAsyncImplAsyncPageMoveConfigProviderService', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeCqWcmLaunchesImplLaunchesEventHandler', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeCqWcmLaunchesImplLaunchesEventHandlerInfo', 'comAdobeCqWcmLaunchesImplLaunchesEventHandlerInfo', Body, ValidatorState);
validate_response('ComAdobeCqWcmLaunchesImplLaunchesEventHandler', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeCqWcmLaunchesImplLaunchesEventHandler', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeCqWcmMobileQrcodeServletQRCodeImageGenerator', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeCqWcmMobileQrcodeServletQRCodeImageGeneratorInfo', 'comAdobeCqWcmMobileQrcodeServletQRCodeImageGeneratorInfo', Body, ValidatorState);
validate_response('ComAdobeCqWcmMobileQrcodeServletQRCodeImageGenerator', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeCqWcmMobileQrcodeServletQRCodeImageGenerator', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeCqWcmStyleInternalComponentStyleInfoCacheImpl', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeCqWcmStyleInternalComponentStyleInfoCacheImplInfo', 'comAdobeCqWcmStyleInternalComponentStyleInfoCacheImplInfo', Body, ValidatorState);
validate_response('ComAdobeCqWcmStyleInternalComponentStyleInfoCacheImpl', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeCqWcmStyleInternalComponentStyleInfoCacheImpl', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeCqWcmTranslationImplTranslationPlatformConfigurationImpl', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeCqWcmTranslationImplTranslationPlatformConfigurationImplInfo', 'comAdobeCqWcmTranslationImplTranslationPlatformConfigurationImplInfo', Body, ValidatorState);
validate_response('ComAdobeCqWcmTranslationImplTranslationPlatformConfigurationImpl', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeCqWcmTranslationImplTranslationPlatformConfigurationImpl', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeFdFpConfigFormsPortalDraftsandSubmissionConfigService', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeFdFpConfigFormsPortalDraftsandSubmissionConfigServiceInfo', 'comAdobeFdFpConfigFormsPortalDraftsandSubmissionConfigServiceInfo', Body, ValidatorState);
validate_response('ComAdobeFdFpConfigFormsPortalDraftsandSubmissionConfigService', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeFdFpConfigFormsPortalDraftsandSubmissionConfigService', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeFdFpConfigFormsPortalSchedulerService', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeFdFpConfigFormsPortalSchedulerServiceInfo', 'comAdobeFdFpConfigFormsPortalSchedulerServiceInfo', Body, ValidatorState);
validate_response('ComAdobeFdFpConfigFormsPortalSchedulerService', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeFdFpConfigFormsPortalSchedulerService', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeFormsCommonServiceImplDefaultDataProvider', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeFormsCommonServiceImplDefaultDataProviderInfo', 'comAdobeFormsCommonServiceImplDefaultDataProviderInfo', Body, ValidatorState);
validate_response('ComAdobeFormsCommonServiceImplDefaultDataProvider', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeFormsCommonServiceImplDefaultDataProvider', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeFormsCommonServiceImplFormsCommonConfigurationServiceImp', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeFormsCommonServiceImplFormsCommonConfigurationServiceImpInfo', 'comAdobeFormsCommonServiceImplFormsCommonConfigurationServiceImpInfo', Body, ValidatorState);
validate_response('ComAdobeFormsCommonServiceImplFormsCommonConfigurationServiceImp', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeFormsCommonServiceImplFormsCommonConfigurationServiceImp', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeFormsCommonServletTempCleanUpTask', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeFormsCommonServletTempCleanUpTaskInfo', 'comAdobeFormsCommonServletTempCleanUpTaskInfo', Body, ValidatorState);
validate_response('ComAdobeFormsCommonServletTempCleanUpTask', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeFormsCommonServletTempCleanUpTask', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeGraniteAcpPlatformPlatformServlet', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeGraniteAcpPlatformPlatformServletInfo', 'comAdobeGraniteAcpPlatformPlatformServletInfo', Body, ValidatorState);
validate_response('ComAdobeGraniteAcpPlatformPlatformServlet', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeGraniteAcpPlatformPlatformServlet', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeGraniteActivitystreamsImplActivityManagerImpl', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeGraniteActivitystreamsImplActivityManagerImplInfo', 'comAdobeGraniteActivitystreamsImplActivityManagerImplInfo', Body, ValidatorState);
validate_response('ComAdobeGraniteActivitystreamsImplActivityManagerImpl', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeGraniteActivitystreamsImplActivityManagerImpl', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeGraniteAnalyzerBaseSystemStatusServlet', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeGraniteAnalyzerBaseSystemStatusServletInfo', 'comAdobeGraniteAnalyzerBaseSystemStatusServletInfo', Body, ValidatorState);
validate_response('ComAdobeGraniteAnalyzerBaseSystemStatusServlet', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeGraniteAnalyzerBaseSystemStatusServlet', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeGraniteAnalyzerScriptsCompileAllScriptsCompilerServlet', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeGraniteAnalyzerScriptsCompileAllScriptsCompilerServletInfo', 'comAdobeGraniteAnalyzerScriptsCompileAllScriptsCompilerServletInfo', Body, ValidatorState);
validate_response('ComAdobeGraniteAnalyzerScriptsCompileAllScriptsCompilerServlet', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeGraniteAnalyzerScriptsCompileAllScriptsCompilerServlet', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeGraniteApicontrollerFilterResolverHookFactory', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeGraniteApicontrollerFilterResolverHookFactoryInfo', 'comAdobeGraniteApicontrollerFilterResolverHookFactoryInfo', Body, ValidatorState);
validate_response('ComAdobeGraniteApicontrollerFilterResolverHookFactory', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeGraniteApicontrollerFilterResolverHookFactory', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeGraniteAuthCertImplClientCertAuthHandler', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeGraniteAuthCertImplClientCertAuthHandlerInfo', 'comAdobeGraniteAuthCertImplClientCertAuthHandlerInfo', Body, ValidatorState);
validate_response('ComAdobeGraniteAuthCertImplClientCertAuthHandler', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeGraniteAuthCertImplClientCertAuthHandler', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeGraniteAuthIms', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeGraniteAuthImsInfo', 'comAdobeGraniteAuthImsInfo', Body, ValidatorState);
validate_response('ComAdobeGraniteAuthIms', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeGraniteAuthIms', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeGraniteAuthImsImplExternalUserIdMappingProviderExtension', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeGraniteAuthImsImplExternalUserIdMappingProviderExtensionInfo', 'comAdobeGraniteAuthImsImplExternalUserIdMappingProviderExtensionInfo', Body, ValidatorState);
validate_response('ComAdobeGraniteAuthImsImplExternalUserIdMappingProviderExtension', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeGraniteAuthImsImplExternalUserIdMappingProviderExtension', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeGraniteAuthImsImplIMSAccessTokenRequestCustomizerImpl', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeGraniteAuthImsImplIMSAccessTokenRequestCustomizerImplInfo', 'comAdobeGraniteAuthImsImplIMSAccessTokenRequestCustomizerImplInfo', Body, ValidatorState);
validate_response('ComAdobeGraniteAuthImsImplIMSAccessTokenRequestCustomizerImpl', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeGraniteAuthImsImplIMSAccessTokenRequestCustomizerImpl', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeGraniteAuthImsImplIMSInstanceCredentialsValidator', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeGraniteAuthImsImplIMSInstanceCredentialsValidatorInfo', 'comAdobeGraniteAuthImsImplIMSInstanceCredentialsValidatorInfo', Body, ValidatorState);
validate_response('ComAdobeGraniteAuthImsImplIMSInstanceCredentialsValidator', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeGraniteAuthImsImplIMSInstanceCredentialsValidator', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeGraniteAuthImsImplIMSProviderImpl', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeGraniteAuthImsImplIMSProviderImplInfo', 'comAdobeGraniteAuthImsImplIMSProviderImplInfo', Body, ValidatorState);
validate_response('ComAdobeGraniteAuthImsImplIMSProviderImpl', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeGraniteAuthImsImplIMSProviderImpl', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeGraniteAuthImsImplImsConfigProviderImpl', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeGraniteAuthImsImplImsConfigProviderImplInfo', 'comAdobeGraniteAuthImsImplImsConfigProviderImplInfo', Body, ValidatorState);
validate_response('ComAdobeGraniteAuthImsImplImsConfigProviderImpl', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeGraniteAuthImsImplImsConfigProviderImpl', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeGraniteAuthOauthAccesstokenProvider', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeGraniteAuthOauthAccesstokenProviderInfo', 'comAdobeGraniteAuthOauthAccesstokenProviderInfo', Body, ValidatorState);
validate_response('ComAdobeGraniteAuthOauthAccesstokenProvider', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeGraniteAuthOauthAccesstokenProvider', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeGraniteAuthOauthImplBearerAuthenticationHandler', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeGraniteAuthOauthImplBearerAuthenticationHandlerInfo', 'comAdobeGraniteAuthOauthImplBearerAuthenticationHandlerInfo', Body, ValidatorState);
validate_response('ComAdobeGraniteAuthOauthImplBearerAuthenticationHandler', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeGraniteAuthOauthImplBearerAuthenticationHandler', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeGraniteAuthOauthImplDefaultTokenValidatorImpl', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeGraniteAuthOauthImplDefaultTokenValidatorImplInfo', 'comAdobeGraniteAuthOauthImplDefaultTokenValidatorImplInfo', Body, ValidatorState);
validate_response('ComAdobeGraniteAuthOauthImplDefaultTokenValidatorImpl', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeGraniteAuthOauthImplDefaultTokenValidatorImpl', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeGraniteAuthOauthImplFacebookProviderImpl', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeGraniteAuthOauthImplFacebookProviderImplInfo', 'comAdobeGraniteAuthOauthImplFacebookProviderImplInfo', Body, ValidatorState);
validate_response('ComAdobeGraniteAuthOauthImplFacebookProviderImpl', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeGraniteAuthOauthImplFacebookProviderImpl', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeGraniteAuthOauthImplGithubProviderImpl', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeGraniteAuthOauthImplGithubProviderImplInfo', 'comAdobeGraniteAuthOauthImplGithubProviderImplInfo', Body, ValidatorState);
validate_response('ComAdobeGraniteAuthOauthImplGithubProviderImpl', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeGraniteAuthOauthImplGithubProviderImpl', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeGraniteAuthOauthImplGraniteProvider', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeGraniteAuthOauthImplGraniteProviderInfo', 'comAdobeGraniteAuthOauthImplGraniteProviderInfo', Body, ValidatorState);
validate_response('ComAdobeGraniteAuthOauthImplGraniteProvider', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeGraniteAuthOauthImplGraniteProvider', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeGraniteAuthOauthImplHelperProviderConfigManager', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeGraniteAuthOauthImplHelperProviderConfigManagerInfo', 'comAdobeGraniteAuthOauthImplHelperProviderConfigManagerInfo', Body, ValidatorState);
validate_response('ComAdobeGraniteAuthOauthImplHelperProviderConfigManager', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeGraniteAuthOauthImplHelperProviderConfigManager', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeGraniteAuthOauthImplHelperProviderConfigManagerInternal', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeGraniteAuthOauthImplHelperProviderConfigManagerInternalInfo', 'comAdobeGraniteAuthOauthImplHelperProviderConfigManagerInternalInfo', Body, ValidatorState);
validate_response('ComAdobeGraniteAuthOauthImplHelperProviderConfigManagerInternal', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeGraniteAuthOauthImplHelperProviderConfigManagerInternal', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeGraniteAuthOauthImplOAuthAuthenticationHandler', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeGraniteAuthOauthImplOAuthAuthenticationHandlerInfo', 'comAdobeGraniteAuthOauthImplOAuthAuthenticationHandlerInfo', Body, ValidatorState);
validate_response('ComAdobeGraniteAuthOauthImplOAuthAuthenticationHandler', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeGraniteAuthOauthImplOAuthAuthenticationHandler', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeGraniteAuthOauthImplTwitterProviderImpl', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeGraniteAuthOauthImplTwitterProviderImplInfo', 'comAdobeGraniteAuthOauthImplTwitterProviderImplInfo', Body, ValidatorState);
validate_response('ComAdobeGraniteAuthOauthImplTwitterProviderImpl', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeGraniteAuthOauthImplTwitterProviderImpl', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeGraniteAuthOauthProvider', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeGraniteAuthOauthProviderInfo', 'comAdobeGraniteAuthOauthProviderInfo', Body, ValidatorState);
validate_response('ComAdobeGraniteAuthOauthProvider', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeGraniteAuthOauthProvider', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeGraniteAuthRequirementImplDefaultRequirementHandler', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeGraniteAuthRequirementImplDefaultRequirementHandlerInfo', 'comAdobeGraniteAuthRequirementImplDefaultRequirementHandlerInfo', Body, ValidatorState);
validate_response('ComAdobeGraniteAuthRequirementImplDefaultRequirementHandler', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeGraniteAuthRequirementImplDefaultRequirementHandler', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeGraniteAuthSamlSamlAuthenticationHandler', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeGraniteAuthSamlSamlAuthenticationHandlerInfo', 'comAdobeGraniteAuthSamlSamlAuthenticationHandlerInfo', Body, ValidatorState);
validate_response('ComAdobeGraniteAuthSamlSamlAuthenticationHandler', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeGraniteAuthSamlSamlAuthenticationHandler', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeGraniteAuthSsoImplSsoAuthenticationHandler', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeGraniteAuthSsoImplSsoAuthenticationHandlerInfo', 'comAdobeGraniteAuthSsoImplSsoAuthenticationHandlerInfo', Body, ValidatorState);
validate_response('ComAdobeGraniteAuthSsoImplSsoAuthenticationHandler', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeGraniteAuthSsoImplSsoAuthenticationHandler', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeGraniteBundlesHcImplCodeCacheHealthCheck', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeGraniteBundlesHcImplCodeCacheHealthCheckInfo', 'comAdobeGraniteBundlesHcImplCodeCacheHealthCheckInfo', Body, ValidatorState);
validate_response('ComAdobeGraniteBundlesHcImplCodeCacheHealthCheck', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeGraniteBundlesHcImplCodeCacheHealthCheck', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeGraniteBundlesHcImplCrxdeSupportBundleHealthCheck', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeGraniteBundlesHcImplCrxdeSupportBundleHealthCheckInfo', 'comAdobeGraniteBundlesHcImplCrxdeSupportBundleHealthCheckInfo', Body, ValidatorState);
validate_response('ComAdobeGraniteBundlesHcImplCrxdeSupportBundleHealthCheck', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeGraniteBundlesHcImplCrxdeSupportBundleHealthCheck', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeGraniteBundlesHcImplDavExBundleHealthCheck', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeGraniteBundlesHcImplDavExBundleHealthCheckInfo', 'comAdobeGraniteBundlesHcImplDavExBundleHealthCheckInfo', Body, ValidatorState);
validate_response('ComAdobeGraniteBundlesHcImplDavExBundleHealthCheck', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeGraniteBundlesHcImplDavExBundleHealthCheck', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeGraniteBundlesHcImplInactiveBundlesHealthCheck', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeGraniteBundlesHcImplInactiveBundlesHealthCheckInfo', 'comAdobeGraniteBundlesHcImplInactiveBundlesHealthCheckInfo', Body, ValidatorState);
validate_response('ComAdobeGraniteBundlesHcImplInactiveBundlesHealthCheck', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeGraniteBundlesHcImplInactiveBundlesHealthCheck', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeGraniteBundlesHcImplJobsHealthCheck', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeGraniteBundlesHcImplJobsHealthCheckInfo', 'comAdobeGraniteBundlesHcImplJobsHealthCheckInfo', Body, ValidatorState);
validate_response('ComAdobeGraniteBundlesHcImplJobsHealthCheck', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeGraniteBundlesHcImplJobsHealthCheck', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeGraniteBundlesHcImplSlingGetServletHealthCheck', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeGraniteBundlesHcImplSlingGetServletHealthCheckInfo', 'comAdobeGraniteBundlesHcImplSlingGetServletHealthCheckInfo', Body, ValidatorState);
validate_response('ComAdobeGraniteBundlesHcImplSlingGetServletHealthCheck', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeGraniteBundlesHcImplSlingGetServletHealthCheck', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeGraniteBundlesHcImplSlingJavaScriptHandlerHealthCheck', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeGraniteBundlesHcImplSlingJavaScriptHandlerHealthCheckInfo', 'comAdobeGraniteBundlesHcImplSlingJavaScriptHandlerHealthCheckInfo', Body, ValidatorState);
validate_response('ComAdobeGraniteBundlesHcImplSlingJavaScriptHandlerHealthCheck', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeGraniteBundlesHcImplSlingJavaScriptHandlerHealthCheck', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeGraniteBundlesHcImplSlingJspScriptHandlerHealthCheck', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeGraniteBundlesHcImplSlingJspScriptHandlerHealthCheckInfo', 'comAdobeGraniteBundlesHcImplSlingJspScriptHandlerHealthCheckInfo', Body, ValidatorState);
validate_response('ComAdobeGraniteBundlesHcImplSlingJspScriptHandlerHealthCheck', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeGraniteBundlesHcImplSlingJspScriptHandlerHealthCheck', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeGraniteBundlesHcImplSlingReferrerFilterHealthCheck', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeGraniteBundlesHcImplSlingReferrerFilterHealthCheckInfo', 'comAdobeGraniteBundlesHcImplSlingReferrerFilterHealthCheckInfo', Body, ValidatorState);
validate_response('ComAdobeGraniteBundlesHcImplSlingReferrerFilterHealthCheck', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeGraniteBundlesHcImplSlingReferrerFilterHealthCheck', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeGraniteBundlesHcImplWebDavBundleHealthCheck', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeGraniteBundlesHcImplWebDavBundleHealthCheckInfo', 'comAdobeGraniteBundlesHcImplWebDavBundleHealthCheckInfo', Body, ValidatorState);
validate_response('ComAdobeGraniteBundlesHcImplWebDavBundleHealthCheck', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeGraniteBundlesHcImplWebDavBundleHealthCheck', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeGraniteCommentsInternalCommentReplicationContentFilterFac', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeGraniteCommentsInternalCommentReplicationContentFilterFacInfo', 'comAdobeGraniteCommentsInternalCommentReplicationContentFilterFacInfo', Body, ValidatorState);
validate_response('ComAdobeGraniteCommentsInternalCommentReplicationContentFilterFac', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeGraniteCommentsInternalCommentReplicationContentFilterFac', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeGraniteCompatrouterImplCompatSwitchingServiceImpl', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeGraniteCompatrouterImplCompatSwitchingServiceImplInfo', 'comAdobeGraniteCompatrouterImplCompatSwitchingServiceImplInfo', Body, ValidatorState);
validate_response('ComAdobeGraniteCompatrouterImplCompatSwitchingServiceImpl', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeGraniteCompatrouterImplCompatSwitchingServiceImpl', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeGraniteCompatrouterImplRoutingConfig', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeGraniteCompatrouterImplRoutingConfigInfo', 'comAdobeGraniteCompatrouterImplRoutingConfigInfo', Body, ValidatorState);
validate_response('ComAdobeGraniteCompatrouterImplRoutingConfig', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeGraniteCompatrouterImplRoutingConfig', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeGraniteCompatrouterImplSwitchMappingConfig', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeGraniteCompatrouterImplSwitchMappingConfigInfo', 'comAdobeGraniteCompatrouterImplSwitchMappingConfigInfo', Body, ValidatorState);
validate_response('ComAdobeGraniteCompatrouterImplSwitchMappingConfig', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeGraniteCompatrouterImplSwitchMappingConfig', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeGraniteConfImplRuntimeAwareConfigurationResourceResolving', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeGraniteConfImplRuntimeAwareConfigurationResourceResolvingInfo', 'comAdobeGraniteConfImplRuntimeAwareConfigurationResourceResolvingInfo', Body, ValidatorState);
validate_response('ComAdobeGraniteConfImplRuntimeAwareConfigurationResourceResolving', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeGraniteConfImplRuntimeAwareConfigurationResourceResolving', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeGraniteContexthubImplContextHubImpl', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeGraniteContexthubImplContextHubImplInfo', 'comAdobeGraniteContexthubImplContextHubImplInfo', Body, ValidatorState);
validate_response('ComAdobeGraniteContexthubImplContextHubImpl', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeGraniteContexthubImplContextHubImpl', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeGraniteCorsImplCORSPolicyImpl', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeGraniteCorsImplCORSPolicyImplInfo', 'comAdobeGraniteCorsImplCORSPolicyImplInfo', Body, ValidatorState);
validate_response('ComAdobeGraniteCorsImplCORSPolicyImpl', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeGraniteCorsImplCORSPolicyImpl', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeGraniteCsrfImplCSRFFilter', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeGraniteCsrfImplCSRFFilterInfo', 'comAdobeGraniteCsrfImplCSRFFilterInfo', Body, ValidatorState);
validate_response('ComAdobeGraniteCsrfImplCSRFFilter', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeGraniteCsrfImplCSRFFilter', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeGraniteCsrfImplCSRFServlet', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeGraniteCsrfImplCSRFServletInfo', 'comAdobeGraniteCsrfImplCSRFServletInfo', Body, ValidatorState);
validate_response('ComAdobeGraniteCsrfImplCSRFServlet', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeGraniteCsrfImplCSRFServlet', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeGraniteDistributionCoreImplCryptoDistributionTransportSe', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeGraniteDistributionCoreImplCryptoDistributionTransportSeInfo', 'comAdobeGraniteDistributionCoreImplCryptoDistributionTransportSeInfo', Body, ValidatorState);
validate_response('ComAdobeGraniteDistributionCoreImplCryptoDistributionTransportSe', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeGraniteDistributionCoreImplCryptoDistributionTransportSe', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeGraniteDistributionCoreImplDiffDiffChangesObserver', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeGraniteDistributionCoreImplDiffDiffChangesObserverInfo', 'comAdobeGraniteDistributionCoreImplDiffDiffChangesObserverInfo', Body, ValidatorState);
validate_response('ComAdobeGraniteDistributionCoreImplDiffDiffChangesObserver', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeGraniteDistributionCoreImplDiffDiffChangesObserver', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeGraniteDistributionCoreImplDiffDiffEventListener', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeGraniteDistributionCoreImplDiffDiffEventListenerInfo', 'comAdobeGraniteDistributionCoreImplDiffDiffEventListenerInfo', Body, ValidatorState);
validate_response('ComAdobeGraniteDistributionCoreImplDiffDiffEventListener', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeGraniteDistributionCoreImplDiffDiffEventListener', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeGraniteDistributionCoreImplDistributionToReplicationEven', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeGraniteDistributionCoreImplDistributionToReplicationEvenInfo', 'comAdobeGraniteDistributionCoreImplDistributionToReplicationEvenInfo', Body, ValidatorState);
validate_response('ComAdobeGraniteDistributionCoreImplDistributionToReplicationEven', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeGraniteDistributionCoreImplDistributionToReplicationEven', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeGraniteDistributionCoreImplReplicationAdaptersReplicat', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeGraniteDistributionCoreImplReplicationAdaptersReplicatInfo', 'comAdobeGraniteDistributionCoreImplReplicationAdaptersReplicatInfo', Body, ValidatorState);
validate_response('ComAdobeGraniteDistributionCoreImplReplicationAdaptersReplicat', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeGraniteDistributionCoreImplReplicationAdaptersReplicat', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeGraniteDistributionCoreImplReplicationDistributionTrans', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeGraniteDistributionCoreImplReplicationDistributionTransInfo', 'comAdobeGraniteDistributionCoreImplReplicationDistributionTransInfo', Body, ValidatorState);
validate_response('ComAdobeGraniteDistributionCoreImplReplicationDistributionTrans', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeGraniteDistributionCoreImplReplicationDistributionTrans', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeGraniteDistributionCoreImplTransportAccessTokenDistribu', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeGraniteDistributionCoreImplTransportAccessTokenDistribuInfo', 'comAdobeGraniteDistributionCoreImplTransportAccessTokenDistribuInfo', Body, ValidatorState);
validate_response('ComAdobeGraniteDistributionCoreImplTransportAccessTokenDistribu', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeGraniteDistributionCoreImplTransportAccessTokenDistribu', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeGraniteFragsImplCheckHttpHeaderFlag', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeGraniteFragsImplCheckHttpHeaderFlagInfo', 'comAdobeGraniteFragsImplCheckHttpHeaderFlagInfo', Body, ValidatorState);
validate_response('ComAdobeGraniteFragsImplCheckHttpHeaderFlag', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeGraniteFragsImplCheckHttpHeaderFlag', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeGraniteFragsImplRandomFeature', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeGraniteFragsImplRandomFeatureInfo', 'comAdobeGraniteFragsImplRandomFeatureInfo', Body, ValidatorState);
validate_response('ComAdobeGraniteFragsImplRandomFeature', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeGraniteFragsImplRandomFeature', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeGraniteHttpcacheFileFileCacheStore', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeGraniteHttpcacheFileFileCacheStoreInfo', 'comAdobeGraniteHttpcacheFileFileCacheStoreInfo', Body, ValidatorState);
validate_response('ComAdobeGraniteHttpcacheFileFileCacheStore', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeGraniteHttpcacheFileFileCacheStore', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeGraniteHttpcacheImplOuterCacheFilter', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeGraniteHttpcacheImplOuterCacheFilterInfo', 'comAdobeGraniteHttpcacheImplOuterCacheFilterInfo', Body, ValidatorState);
validate_response('ComAdobeGraniteHttpcacheImplOuterCacheFilter', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeGraniteHttpcacheImplOuterCacheFilter', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeGraniteI18nImplBundlePseudoTranslations', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeGraniteI18nImplBundlePseudoTranslationsInfo', 'comAdobeGraniteI18nImplBundlePseudoTranslationsInfo', Body, ValidatorState);
validate_response('ComAdobeGraniteI18nImplBundlePseudoTranslations', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeGraniteI18nImplBundlePseudoTranslations', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeGraniteI18nImplPreferencesLocaleResolverService', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeGraniteI18nImplPreferencesLocaleResolverServiceInfo', 'comAdobeGraniteI18nImplPreferencesLocaleResolverServiceInfo', Body, ValidatorState);
validate_response('ComAdobeGraniteI18nImplPreferencesLocaleResolverService', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeGraniteI18nImplPreferencesLocaleResolverService', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeGraniteInfocollectorInfoCollector', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeGraniteInfocollectorInfoCollectorInfo', 'comAdobeGraniteInfocollectorInfoCollectorInfo', Body, ValidatorState);
validate_response('ComAdobeGraniteInfocollectorInfoCollector', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeGraniteInfocollectorInfoCollector', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeGraniteJettySslInternalGraniteSslConnectorFactory', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeGraniteJettySslInternalGraniteSslConnectorFactoryInfo', 'comAdobeGraniteJettySslInternalGraniteSslConnectorFactoryInfo', Body, ValidatorState);
validate_response('ComAdobeGraniteJettySslInternalGraniteSslConnectorFactory', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeGraniteJettySslInternalGraniteSslConnectorFactory', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeGraniteLicenseImplLicenseCheckFilter', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeGraniteLicenseImplLicenseCheckFilterInfo', 'comAdobeGraniteLicenseImplLicenseCheckFilterInfo', Body, ValidatorState);
validate_response('ComAdobeGraniteLicenseImplLicenseCheckFilter', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeGraniteLicenseImplLicenseCheckFilter', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeGraniteLoggingImplLogAnalyserImpl', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeGraniteLoggingImplLogAnalyserImplInfo', 'comAdobeGraniteLoggingImplLogAnalyserImplInfo', Body, ValidatorState);
validate_response('ComAdobeGraniteLoggingImplLogAnalyserImpl', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeGraniteLoggingImplLogAnalyserImpl', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeGraniteLoggingImplLogErrorHealthCheck', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeGraniteLoggingImplLogErrorHealthCheckInfo', 'comAdobeGraniteLoggingImplLogErrorHealthCheckInfo', Body, ValidatorState);
validate_response('ComAdobeGraniteLoggingImplLogErrorHealthCheck', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeGraniteLoggingImplLogErrorHealthCheck', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeGraniteMaintenanceCrxImplDataStoreGarbageCollectionTask', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeGraniteMaintenanceCrxImplDataStoreGarbageCollectionTaskInfo', 'comAdobeGraniteMaintenanceCrxImplDataStoreGarbageCollectionTaskInfo', Body, ValidatorState);
validate_response('ComAdobeGraniteMaintenanceCrxImplDataStoreGarbageCollectionTask', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeGraniteMaintenanceCrxImplDataStoreGarbageCollectionTask', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeGraniteMaintenanceCrxImplLuceneBinariesCleanupTask', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeGraniteMaintenanceCrxImplLuceneBinariesCleanupTaskInfo', 'comAdobeGraniteMaintenanceCrxImplLuceneBinariesCleanupTaskInfo', Body, ValidatorState);
validate_response('ComAdobeGraniteMaintenanceCrxImplLuceneBinariesCleanupTask', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeGraniteMaintenanceCrxImplLuceneBinariesCleanupTask', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeGraniteMaintenanceCrxImplRevisionCleanupTask', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeGraniteMaintenanceCrxImplRevisionCleanupTaskInfo', 'comAdobeGraniteMaintenanceCrxImplRevisionCleanupTaskInfo', Body, ValidatorState);
validate_response('ComAdobeGraniteMaintenanceCrxImplRevisionCleanupTask', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeGraniteMaintenanceCrxImplRevisionCleanupTask', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeGraniteMonitoringImplScriptConfigImpl', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeGraniteMonitoringImplScriptConfigImplInfo', 'comAdobeGraniteMonitoringImplScriptConfigImplInfo', Body, ValidatorState);
validate_response('ComAdobeGraniteMonitoringImplScriptConfigImpl', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeGraniteMonitoringImplScriptConfigImpl', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeGraniteOauthServerAuthImplOAuth2ServerAuthenticationHan', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeGraniteOauthServerAuthImplOAuth2ServerAuthenticationHanInfo', 'comAdobeGraniteOauthServerAuthImplOAuth2ServerAuthenticationHanInfo', Body, ValidatorState);
validate_response('ComAdobeGraniteOauthServerAuthImplOAuth2ServerAuthenticationHan', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeGraniteOauthServerAuthImplOAuth2ServerAuthenticationHan', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeGraniteOauthServerImplAccessTokenCleanupTask', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeGraniteOauthServerImplAccessTokenCleanupTaskInfo', 'comAdobeGraniteOauthServerImplAccessTokenCleanupTaskInfo', Body, ValidatorState);
validate_response('ComAdobeGraniteOauthServerImplAccessTokenCleanupTask', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeGraniteOauthServerImplAccessTokenCleanupTask', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeGraniteOauthServerImplOAuth2ClientRevocationServlet', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeGraniteOauthServerImplOAuth2ClientRevocationServletInfo', 'comAdobeGraniteOauthServerImplOAuth2ClientRevocationServletInfo', Body, ValidatorState);
validate_response('ComAdobeGraniteOauthServerImplOAuth2ClientRevocationServlet', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeGraniteOauthServerImplOAuth2ClientRevocationServlet', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeGraniteOauthServerImplOAuth2RevocationEndpointServlet', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeGraniteOauthServerImplOAuth2RevocationEndpointServletInfo', 'comAdobeGraniteOauthServerImplOAuth2RevocationEndpointServletInfo', Body, ValidatorState);
validate_response('ComAdobeGraniteOauthServerImplOAuth2RevocationEndpointServlet', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeGraniteOauthServerImplOAuth2RevocationEndpointServlet', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeGraniteOauthServerImplOAuth2TokenEndpointServlet', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeGraniteOauthServerImplOAuth2TokenEndpointServletInfo', 'comAdobeGraniteOauthServerImplOAuth2TokenEndpointServletInfo', Body, ValidatorState);
validate_response('ComAdobeGraniteOauthServerImplOAuth2TokenEndpointServlet', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeGraniteOauthServerImplOAuth2TokenEndpointServlet', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeGraniteOauthServerImplOAuth2TokenRevocationServlet', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeGraniteOauthServerImplOAuth2TokenRevocationServletInfo', 'comAdobeGraniteOauthServerImplOAuth2TokenRevocationServletInfo', Body, ValidatorState);
validate_response('ComAdobeGraniteOauthServerImplOAuth2TokenRevocationServlet', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeGraniteOauthServerImplOAuth2TokenRevocationServlet', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeGraniteOffloadingImplOffloadingConfigurator', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeGraniteOffloadingImplOffloadingConfiguratorInfo', 'comAdobeGraniteOffloadingImplOffloadingConfiguratorInfo', Body, ValidatorState);
validate_response('ComAdobeGraniteOffloadingImplOffloadingConfigurator', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeGraniteOffloadingImplOffloadingConfigurator', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeGraniteOffloadingImplOffloadingJobCloner', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeGraniteOffloadingImplOffloadingJobClonerInfo', 'comAdobeGraniteOffloadingImplOffloadingJobClonerInfo', Body, ValidatorState);
validate_response('ComAdobeGraniteOffloadingImplOffloadingJobCloner', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeGraniteOffloadingImplOffloadingJobCloner', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeGraniteOffloadingImplOffloadingJobOffloader', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeGraniteOffloadingImplOffloadingJobOffloaderInfo', 'comAdobeGraniteOffloadingImplOffloadingJobOffloaderInfo', Body, ValidatorState);
validate_response('ComAdobeGraniteOffloadingImplOffloadingJobOffloader', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeGraniteOffloadingImplOffloadingJobOffloader', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeGraniteOffloadingImplTransporterOffloadingAgentManager', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeGraniteOffloadingImplTransporterOffloadingAgentManagerInfo', 'comAdobeGraniteOffloadingImplTransporterOffloadingAgentManagerInfo', Body, ValidatorState);
validate_response('ComAdobeGraniteOffloadingImplTransporterOffloadingAgentManager', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeGraniteOffloadingImplTransporterOffloadingAgentManager', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeGraniteOffloadingImplTransporterOffloadingDefaultTranspo', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeGraniteOffloadingImplTransporterOffloadingDefaultTranspoInfo', 'comAdobeGraniteOffloadingImplTransporterOffloadingDefaultTranspoInfo', Body, ValidatorState);
validate_response('ComAdobeGraniteOffloadingImplTransporterOffloadingDefaultTranspo', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeGraniteOffloadingImplTransporterOffloadingDefaultTranspo', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeGraniteOmnisearchImplCoreOmniSearchServiceImpl', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeGraniteOmnisearchImplCoreOmniSearchServiceImplInfo', 'comAdobeGraniteOmnisearchImplCoreOmniSearchServiceImplInfo', Body, ValidatorState);
validate_response('ComAdobeGraniteOmnisearchImplCoreOmniSearchServiceImpl', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeGraniteOmnisearchImplCoreOmniSearchServiceImpl', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeGraniteOptoutImplOptOutServiceImpl', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeGraniteOptoutImplOptOutServiceImplInfo', 'comAdobeGraniteOptoutImplOptOutServiceImplInfo', Body, ValidatorState);
validate_response('ComAdobeGraniteOptoutImplOptOutServiceImpl', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeGraniteOptoutImplOptOutServiceImpl', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeGraniteQueriesImplHcAsyncIndexHealthCheck', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeGraniteQueriesImplHcAsyncIndexHealthCheckInfo', 'comAdobeGraniteQueriesImplHcAsyncIndexHealthCheckInfo', Body, ValidatorState);
validate_response('ComAdobeGraniteQueriesImplHcAsyncIndexHealthCheck', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeGraniteQueriesImplHcAsyncIndexHealthCheck', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeGraniteQueriesImplHcLargeIndexHealthCheck', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeGraniteQueriesImplHcLargeIndexHealthCheckInfo', 'comAdobeGraniteQueriesImplHcLargeIndexHealthCheckInfo', Body, ValidatorState);
validate_response('ComAdobeGraniteQueriesImplHcLargeIndexHealthCheck', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeGraniteQueriesImplHcLargeIndexHealthCheck', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeGraniteQueriesImplHcQueriesStatusHealthCheck', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeGraniteQueriesImplHcQueriesStatusHealthCheckInfo', 'comAdobeGraniteQueriesImplHcQueriesStatusHealthCheckInfo', Body, ValidatorState);
validate_response('ComAdobeGraniteQueriesImplHcQueriesStatusHealthCheck', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeGraniteQueriesImplHcQueriesStatusHealthCheck', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeGraniteQueriesImplHcQueryHealthCheckMetrics', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeGraniteQueriesImplHcQueryHealthCheckMetricsInfo', 'comAdobeGraniteQueriesImplHcQueryHealthCheckMetricsInfo', Body, ValidatorState);
validate_response('ComAdobeGraniteQueriesImplHcQueryHealthCheckMetrics', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeGraniteQueriesImplHcQueryHealthCheckMetrics', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeGraniteQueriesImplHcQueryLimitsHealthCheck', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeGraniteQueriesImplHcQueryLimitsHealthCheckInfo', 'comAdobeGraniteQueriesImplHcQueryLimitsHealthCheckInfo', Body, ValidatorState);
validate_response('ComAdobeGraniteQueriesImplHcQueryLimitsHealthCheck', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeGraniteQueriesImplHcQueryLimitsHealthCheck', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeGraniteReplicationHcImplReplicationQueueHealthCheck', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeGraniteReplicationHcImplReplicationQueueHealthCheckInfo', 'comAdobeGraniteReplicationHcImplReplicationQueueHealthCheckInfo', Body, ValidatorState);
validate_response('ComAdobeGraniteReplicationHcImplReplicationQueueHealthCheck', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeGraniteReplicationHcImplReplicationQueueHealthCheck', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeGraniteReplicationHcImplReplicationTransportUsersHealthC', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeGraniteReplicationHcImplReplicationTransportUsersHealthCInfo', 'comAdobeGraniteReplicationHcImplReplicationTransportUsersHealthCInfo', Body, ValidatorState);
validate_response('ComAdobeGraniteReplicationHcImplReplicationTransportUsersHealthC', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeGraniteReplicationHcImplReplicationTransportUsersHealthC', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeGraniteRepositoryHcImplAuthorizableNodeNameHealthCheck', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeGraniteRepositoryHcImplAuthorizableNodeNameHealthCheckInfo', 'comAdobeGraniteRepositoryHcImplAuthorizableNodeNameHealthCheckInfo', Body, ValidatorState);
validate_response('ComAdobeGraniteRepositoryHcImplAuthorizableNodeNameHealthCheck', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeGraniteRepositoryHcImplAuthorizableNodeNameHealthCheck', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeGraniteRepositoryHcImplContentSlingSlingContentHealthC', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeGraniteRepositoryHcImplContentSlingSlingContentHealthCInfo', 'comAdobeGraniteRepositoryHcImplContentSlingSlingContentHealthCInfo', Body, ValidatorState);
validate_response('ComAdobeGraniteRepositoryHcImplContentSlingSlingContentHealthC', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeGraniteRepositoryHcImplContentSlingSlingContentHealthC', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeGraniteRepositoryHcImplContinuousRGCHealthCheck', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeGraniteRepositoryHcImplContinuousRGCHealthCheckInfo', 'comAdobeGraniteRepositoryHcImplContinuousRGCHealthCheckInfo', Body, ValidatorState);
validate_response('ComAdobeGraniteRepositoryHcImplContinuousRGCHealthCheck', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeGraniteRepositoryHcImplContinuousRGCHealthCheck', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeGraniteRepositoryHcImplDefaultAccessUserProfileHealthChe', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeGraniteRepositoryHcImplDefaultAccessUserProfileHealthCheInfo', 'comAdobeGraniteRepositoryHcImplDefaultAccessUserProfileHealthCheInfo', Body, ValidatorState);
validate_response('ComAdobeGraniteRepositoryHcImplDefaultAccessUserProfileHealthChe', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeGraniteRepositoryHcImplDefaultAccessUserProfileHealthChe', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeGraniteRepositoryHcImplDefaultLoginsHealthCheck', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeGraniteRepositoryHcImplDefaultLoginsHealthCheckInfo', 'comAdobeGraniteRepositoryHcImplDefaultLoginsHealthCheckInfo', Body, ValidatorState);
validate_response('ComAdobeGraniteRepositoryHcImplDefaultLoginsHealthCheck', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeGraniteRepositoryHcImplDefaultLoginsHealthCheck', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeGraniteRepositoryHcImplDiskSpaceHealthCheck', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeGraniteRepositoryHcImplDiskSpaceHealthCheckInfo', 'comAdobeGraniteRepositoryHcImplDiskSpaceHealthCheckInfo', Body, ValidatorState);
validate_response('ComAdobeGraniteRepositoryHcImplDiskSpaceHealthCheck', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeGraniteRepositoryHcImplDiskSpaceHealthCheck', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeGraniteRepositoryHcImplObservationQueueLengthHealthCheck', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeGraniteRepositoryHcImplObservationQueueLengthHealthCheckInfo', 'comAdobeGraniteRepositoryHcImplObservationQueueLengthHealthCheckInfo', Body, ValidatorState);
validate_response('ComAdobeGraniteRepositoryHcImplObservationQueueLengthHealthCheck', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeGraniteRepositoryHcImplObservationQueueLengthHealthCheck', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeGraniteRepositoryImplCommitStatsConfig', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeGraniteRepositoryImplCommitStatsConfigInfo', 'comAdobeGraniteRepositoryImplCommitStatsConfigInfo', Body, ValidatorState);
validate_response('ComAdobeGraniteRepositoryImplCommitStatsConfig', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeGraniteRepositoryImplCommitStatsConfig', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeGraniteRepositoryServiceUserConfiguration', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeGraniteRepositoryServiceUserConfigurationInfo', 'comAdobeGraniteRepositoryServiceUserConfigurationInfo', Body, ValidatorState);
validate_response('ComAdobeGraniteRepositoryServiceUserConfiguration', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeGraniteRepositoryServiceUserConfiguration', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeGraniteRequestsLoggingImplHcRequestsStatusHealthCheckIm', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeGraniteRequestsLoggingImplHcRequestsStatusHealthCheckImInfo', 'comAdobeGraniteRequestsLoggingImplHcRequestsStatusHealthCheckImInfo', Body, ValidatorState);
validate_response('ComAdobeGraniteRequestsLoggingImplHcRequestsStatusHealthCheckIm', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeGraniteRequestsLoggingImplHcRequestsStatusHealthCheckIm', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeGraniteResourcestatusImplCompositeStatusType', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeGraniteResourcestatusImplCompositeStatusTypeInfo', 'comAdobeGraniteResourcestatusImplCompositeStatusTypeInfo', Body, ValidatorState);
validate_response('ComAdobeGraniteResourcestatusImplCompositeStatusType', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeGraniteResourcestatusImplCompositeStatusType', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeGraniteResourcestatusImplStatusResourceProviderImpl', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeGraniteResourcestatusImplStatusResourceProviderImplInfo', 'comAdobeGraniteResourcestatusImplStatusResourceProviderImplInfo', Body, ValidatorState);
validate_response('ComAdobeGraniteResourcestatusImplStatusResourceProviderImpl', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeGraniteResourcestatusImplStatusResourceProviderImpl', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeGraniteRestAssetsImplAssetContentDispositionFilter', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeGraniteRestAssetsImplAssetContentDispositionFilterInfo', 'comAdobeGraniteRestAssetsImplAssetContentDispositionFilterInfo', Body, ValidatorState);
validate_response('ComAdobeGraniteRestAssetsImplAssetContentDispositionFilter', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeGraniteRestAssetsImplAssetContentDispositionFilter', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeGraniteRestImplApiEndpointResourceProviderFactoryImpl', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeGraniteRestImplApiEndpointResourceProviderFactoryImplInfo', 'comAdobeGraniteRestImplApiEndpointResourceProviderFactoryImplInfo', Body, ValidatorState);
validate_response('ComAdobeGraniteRestImplApiEndpointResourceProviderFactoryImpl', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeGraniteRestImplApiEndpointResourceProviderFactoryImpl', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeGraniteRestImplServletDefaultGETServlet', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeGraniteRestImplServletDefaultGETServletInfo', 'comAdobeGraniteRestImplServletDefaultGETServletInfo', Body, ValidatorState);
validate_response('ComAdobeGraniteRestImplServletDefaultGETServlet', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeGraniteRestImplServletDefaultGETServlet', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeGraniteSecurityUserUiInternalServletsSSLConfigurationS', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeGraniteSecurityUserUiInternalServletsSSLConfigurationSInfo', 'comAdobeGraniteSecurityUserUiInternalServletsSSLConfigurationSInfo', Body, ValidatorState);
validate_response('ComAdobeGraniteSecurityUserUiInternalServletsSSLConfigurationS', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeGraniteSecurityUserUiInternalServletsSSLConfigurationS', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeGraniteSecurityUserUserPropertiesService', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeGraniteSecurityUserUserPropertiesServiceInfo', 'comAdobeGraniteSecurityUserUserPropertiesServiceInfo', Body, ValidatorState);
validate_response('ComAdobeGraniteSecurityUserUserPropertiesService', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeGraniteSecurityUserUserPropertiesService', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeGraniteSocialgraphImplSocialGraphFactoryImpl', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeGraniteSocialgraphImplSocialGraphFactoryImplInfo', 'comAdobeGraniteSocialgraphImplSocialGraphFactoryImplInfo', Body, ValidatorState);
validate_response('ComAdobeGraniteSocialgraphImplSocialGraphFactoryImpl', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeGraniteSocialgraphImplSocialGraphFactoryImpl', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeGraniteSystemMonitoringImplSystemStatsMBeanImpl', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeGraniteSystemMonitoringImplSystemStatsMBeanImplInfo', 'comAdobeGraniteSystemMonitoringImplSystemStatsMBeanImplInfo', Body, ValidatorState);
validate_response('ComAdobeGraniteSystemMonitoringImplSystemStatsMBeanImpl', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeGraniteSystemMonitoringImplSystemStatsMBeanImpl', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeGraniteTaskmanagementImplJcrTaskAdapterFactory', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeGraniteTaskmanagementImplJcrTaskAdapterFactoryInfo', 'comAdobeGraniteTaskmanagementImplJcrTaskAdapterFactoryInfo', Body, ValidatorState);
validate_response('ComAdobeGraniteTaskmanagementImplJcrTaskAdapterFactory', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeGraniteTaskmanagementImplJcrTaskAdapterFactory', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeGraniteTaskmanagementImplJcrTaskArchiveService', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeGraniteTaskmanagementImplJcrTaskArchiveServiceInfo', 'comAdobeGraniteTaskmanagementImplJcrTaskArchiveServiceInfo', Body, ValidatorState);
validate_response('ComAdobeGraniteTaskmanagementImplJcrTaskArchiveService', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeGraniteTaskmanagementImplJcrTaskArchiveService', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeGraniteTaskmanagementImplPurgeTaskPurgeMaintenanceTask', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeGraniteTaskmanagementImplPurgeTaskPurgeMaintenanceTaskInfo', 'comAdobeGraniteTaskmanagementImplPurgeTaskPurgeMaintenanceTaskInfo', Body, ValidatorState);
validate_response('ComAdobeGraniteTaskmanagementImplPurgeTaskPurgeMaintenanceTask', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeGraniteTaskmanagementImplPurgeTaskPurgeMaintenanceTask', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeGraniteTaskmanagementImplServiceTaskManagerAdapterFactor', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeGraniteTaskmanagementImplServiceTaskManagerAdapterFactorInfo', 'comAdobeGraniteTaskmanagementImplServiceTaskManagerAdapterFactorInfo', Body, ValidatorState);
validate_response('ComAdobeGraniteTaskmanagementImplServiceTaskManagerAdapterFactor', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeGraniteTaskmanagementImplServiceTaskManagerAdapterFactor', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeGraniteThreaddumpThreadDumpCollector', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeGraniteThreaddumpThreadDumpCollectorInfo', 'comAdobeGraniteThreaddumpThreadDumpCollectorInfo', Body, ValidatorState);
validate_response('ComAdobeGraniteThreaddumpThreadDumpCollector', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeGraniteThreaddumpThreadDumpCollector', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeGraniteTranslationConnectorMsftCoreImplMicrosoftTransl', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeGraniteTranslationConnectorMsftCoreImplMicrosoftTranslInfo', 'comAdobeGraniteTranslationConnectorMsftCoreImplMicrosoftTranslInfo', Body, ValidatorState);
validate_response('ComAdobeGraniteTranslationConnectorMsftCoreImplMicrosoftTransl', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeGraniteTranslationConnectorMsftCoreImplMicrosoftTransl', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeGraniteTranslationCoreImplTranslationManagerImpl', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeGraniteTranslationCoreImplTranslationManagerImplInfo', 'comAdobeGraniteTranslationCoreImplTranslationManagerImplInfo', Body, ValidatorState);
validate_response('ComAdobeGraniteTranslationCoreImplTranslationManagerImpl', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeGraniteTranslationCoreImplTranslationManagerImpl', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeGraniteUiClientlibsImplHtmlLibraryManagerImpl', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeGraniteUiClientlibsImplHtmlLibraryManagerImplInfo', 'comAdobeGraniteUiClientlibsImplHtmlLibraryManagerImplInfo', Body, ValidatorState);
validate_response('ComAdobeGraniteUiClientlibsImplHtmlLibraryManagerImpl', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeGraniteUiClientlibsImplHtmlLibraryManagerImpl', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeGraniteWorkflowConsoleFragsWorkflowWithdrawFeature', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeGraniteWorkflowConsoleFragsWorkflowWithdrawFeatureInfo', 'comAdobeGraniteWorkflowConsoleFragsWorkflowWithdrawFeatureInfo', Body, ValidatorState);
validate_response('ComAdobeGraniteWorkflowConsoleFragsWorkflowWithdrawFeature', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeGraniteWorkflowConsoleFragsWorkflowWithdrawFeature', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeGraniteWorkflowConsolePublishWorkflowPublishEventService', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeGraniteWorkflowConsolePublishWorkflowPublishEventServiceInfo', 'comAdobeGraniteWorkflowConsolePublishWorkflowPublishEventServiceInfo', Body, ValidatorState);
validate_response('ComAdobeGraniteWorkflowConsolePublishWorkflowPublishEventService', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeGraniteWorkflowConsolePublishWorkflowPublishEventService', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeGraniteWorkflowCoreJcrWorkflowBucketManager', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeGraniteWorkflowCoreJcrWorkflowBucketManagerInfo', 'comAdobeGraniteWorkflowCoreJcrWorkflowBucketManagerInfo', Body, ValidatorState);
validate_response('ComAdobeGraniteWorkflowCoreJcrWorkflowBucketManager', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeGraniteWorkflowCoreJcrWorkflowBucketManager', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeGraniteWorkflowCoreJobExternalProcessJobHandler', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeGraniteWorkflowCoreJobExternalProcessJobHandlerInfo', 'comAdobeGraniteWorkflowCoreJobExternalProcessJobHandlerInfo', Body, ValidatorState);
validate_response('ComAdobeGraniteWorkflowCoreJobExternalProcessJobHandler', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeGraniteWorkflowCoreJobExternalProcessJobHandler', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeGraniteWorkflowCoreJobJobHandler', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeGraniteWorkflowCoreJobJobHandlerInfo', 'comAdobeGraniteWorkflowCoreJobJobHandlerInfo', Body, ValidatorState);
validate_response('ComAdobeGraniteWorkflowCoreJobJobHandler', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeGraniteWorkflowCoreJobJobHandler', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeGraniteWorkflowCoreOffloadingWorkflowOffloadingJobConsum', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeGraniteWorkflowCoreOffloadingWorkflowOffloadingJobConsumInfo', 'comAdobeGraniteWorkflowCoreOffloadingWorkflowOffloadingJobConsumInfo', Body, ValidatorState);
validate_response('ComAdobeGraniteWorkflowCoreOffloadingWorkflowOffloadingJobConsum', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeGraniteWorkflowCoreOffloadingWorkflowOffloadingJobConsum', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeGraniteWorkflowCorePayloadMapCache', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeGraniteWorkflowCorePayloadMapCacheInfo', 'comAdobeGraniteWorkflowCorePayloadMapCacheInfo', Body, ValidatorState);
validate_response('ComAdobeGraniteWorkflowCorePayloadMapCache', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeGraniteWorkflowCorePayloadMapCache', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeGraniteWorkflowCorePayloadmapPayloadMoveListener', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeGraniteWorkflowCorePayloadmapPayloadMoveListenerInfo', 'comAdobeGraniteWorkflowCorePayloadmapPayloadMoveListenerInfo', Body, ValidatorState);
validate_response('ComAdobeGraniteWorkflowCorePayloadmapPayloadMoveListener', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeGraniteWorkflowCorePayloadmapPayloadMoveListener', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeGraniteWorkflowCoreWorkflowConfig', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeGraniteWorkflowCoreWorkflowConfigInfo', 'comAdobeGraniteWorkflowCoreWorkflowConfigInfo', Body, ValidatorState);
validate_response('ComAdobeGraniteWorkflowCoreWorkflowConfig', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeGraniteWorkflowCoreWorkflowConfig', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeGraniteWorkflowCoreWorkflowSessionFactory', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeGraniteWorkflowCoreWorkflowSessionFactoryInfo', 'comAdobeGraniteWorkflowCoreWorkflowSessionFactoryInfo', Body, ValidatorState);
validate_response('ComAdobeGraniteWorkflowCoreWorkflowSessionFactory', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeGraniteWorkflowCoreWorkflowSessionFactory', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeGraniteWorkflowPurgeScheduler', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeGraniteWorkflowPurgeSchedulerInfo', 'comAdobeGraniteWorkflowPurgeSchedulerInfo', Body, ValidatorState);
validate_response('ComAdobeGraniteWorkflowPurgeScheduler', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeGraniteWorkflowPurgeScheduler', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeOctopusNcommBootstrap', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeOctopusNcommBootstrapInfo', 'comAdobeOctopusNcommBootstrapInfo', Body, ValidatorState);
validate_response('ComAdobeOctopusNcommBootstrap', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeOctopusNcommBootstrap', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeSocialIntegrationsLivefyreUserPingforpullImplPingPullS', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeSocialIntegrationsLivefyreUserPingforpullImplPingPullSInfo', 'comAdobeSocialIntegrationsLivefyreUserPingforpullImplPingPullSInfo', Body, ValidatorState);
validate_response('ComAdobeSocialIntegrationsLivefyreUserPingforpullImplPingPullS', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeSocialIntegrationsLivefyreUserPingforpullImplPingPullS', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComAdobeXmpWorkerFilesNcommXMPFilesNComm', 200, Body, ValidatorState) ->
    validate_response_body('comAdobeXmpWorkerFilesNcommXMPFilesNCommInfo', 'comAdobeXmpWorkerFilesNcommXMPFilesNCommInfo', Body, ValidatorState);
validate_response('ComAdobeXmpWorkerFilesNcommXMPFilesNComm', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComAdobeXmpWorkerFilesNcommXMPFilesNComm', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComDayCommonsDatasourceJdbcpoolJdbcPoolService', 200, Body, ValidatorState) ->
    validate_response_body('comDayCommonsDatasourceJdbcpoolJdbcPoolServiceInfo', 'comDayCommonsDatasourceJdbcpoolJdbcPoolServiceInfo', Body, ValidatorState);
validate_response('ComDayCommonsDatasourceJdbcpoolJdbcPoolService', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComDayCommonsDatasourceJdbcpoolJdbcPoolService', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComDayCommonsHttpclient', 200, Body, ValidatorState) ->
    validate_response_body('comDayCommonsHttpclientInfo', 'comDayCommonsHttpclientInfo', Body, ValidatorState);
validate_response('ComDayCommonsHttpclient', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComDayCommonsHttpclient', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComDayCqAnalyticsImplStorePropertiesChangeListener', 200, Body, ValidatorState) ->
    validate_response_body('comDayCqAnalyticsImplStorePropertiesChangeListenerInfo', 'comDayCqAnalyticsImplStorePropertiesChangeListenerInfo', Body, ValidatorState);
validate_response('ComDayCqAnalyticsImplStorePropertiesChangeListener', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComDayCqAnalyticsImplStorePropertiesChangeListener', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComDayCqAnalyticsSitecatalystImplExporterClassificationsExporte', 200, Body, ValidatorState) ->
    validate_response_body('comDayCqAnalyticsSitecatalystImplExporterClassificationsExporteInfo', 'comDayCqAnalyticsSitecatalystImplExporterClassificationsExporteInfo', Body, ValidatorState);
validate_response('ComDayCqAnalyticsSitecatalystImplExporterClassificationsExporte', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComDayCqAnalyticsSitecatalystImplExporterClassificationsExporte', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComDayCqAnalyticsSitecatalystImplImporterReportImporter', 200, Body, ValidatorState) ->
    validate_response_body('comDayCqAnalyticsSitecatalystImplImporterReportImporterInfo', 'comDayCqAnalyticsSitecatalystImplImporterReportImporterInfo', Body, ValidatorState);
validate_response('ComDayCqAnalyticsSitecatalystImplImporterReportImporter', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComDayCqAnalyticsSitecatalystImplImporterReportImporter', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComDayCqAnalyticsSitecatalystImplSitecatalystAdapterFactory', 200, Body, ValidatorState) ->
    validate_response_body('comDayCqAnalyticsSitecatalystImplSitecatalystAdapterFactoryInfo', 'comDayCqAnalyticsSitecatalystImplSitecatalystAdapterFactoryInfo', Body, ValidatorState);
validate_response('ComDayCqAnalyticsSitecatalystImplSitecatalystAdapterFactory', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComDayCqAnalyticsSitecatalystImplSitecatalystAdapterFactory', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComDayCqAnalyticsSitecatalystImplSitecatalystHttpClientImpl', 200, Body, ValidatorState) ->
    validate_response_body('comDayCqAnalyticsSitecatalystImplSitecatalystHttpClientImplInfo', 'comDayCqAnalyticsSitecatalystImplSitecatalystHttpClientImplInfo', Body, ValidatorState);
validate_response('ComDayCqAnalyticsSitecatalystImplSitecatalystHttpClientImpl', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComDayCqAnalyticsSitecatalystImplSitecatalystHttpClientImpl', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComDayCqAnalyticsTestandtargetImplAccountOptionsUpdater', 200, Body, ValidatorState) ->
    validate_response_body('comDayCqAnalyticsTestandtargetImplAccountOptionsUpdaterInfo', 'comDayCqAnalyticsTestandtargetImplAccountOptionsUpdaterInfo', Body, ValidatorState);
validate_response('ComDayCqAnalyticsTestandtargetImplAccountOptionsUpdater', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComDayCqAnalyticsTestandtargetImplAccountOptionsUpdater', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComDayCqAnalyticsTestandtargetImplDeleteAuthorActivityListener', 200, Body, ValidatorState) ->
    validate_response_body('comDayCqAnalyticsTestandtargetImplDeleteAuthorActivityListenerInfo', 'comDayCqAnalyticsTestandtargetImplDeleteAuthorActivityListenerInfo', Body, ValidatorState);
validate_response('ComDayCqAnalyticsTestandtargetImplDeleteAuthorActivityListener', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComDayCqAnalyticsTestandtargetImplDeleteAuthorActivityListener', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComDayCqAnalyticsTestandtargetImplPushAuthorCampaignPageListener', 200, Body, ValidatorState) ->
    validate_response_body('comDayCqAnalyticsTestandtargetImplPushAuthorCampaignPageListenerInfo', 'comDayCqAnalyticsTestandtargetImplPushAuthorCampaignPageListenerInfo', Body, ValidatorState);
validate_response('ComDayCqAnalyticsTestandtargetImplPushAuthorCampaignPageListener', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComDayCqAnalyticsTestandtargetImplPushAuthorCampaignPageListener', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComDayCqAnalyticsTestandtargetImplSegmentImporter', 200, Body, ValidatorState) ->
    validate_response_body('comDayCqAnalyticsTestandtargetImplSegmentImporterInfo', 'comDayCqAnalyticsTestandtargetImplSegmentImporterInfo', Body, ValidatorState);
validate_response('ComDayCqAnalyticsTestandtargetImplSegmentImporter', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComDayCqAnalyticsTestandtargetImplSegmentImporter', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComDayCqAnalyticsTestandtargetImplServiceWebServiceImpl', 200, Body, ValidatorState) ->
    validate_response_body('comDayCqAnalyticsTestandtargetImplServiceWebServiceImplInfo', 'comDayCqAnalyticsTestandtargetImplServiceWebServiceImplInfo', Body, ValidatorState);
validate_response('ComDayCqAnalyticsTestandtargetImplServiceWebServiceImpl', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComDayCqAnalyticsTestandtargetImplServiceWebServiceImpl', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComDayCqAnalyticsTestandtargetImplServletsAdminServerServlet', 200, Body, ValidatorState) ->
    validate_response_body('comDayCqAnalyticsTestandtargetImplServletsAdminServerServletInfo', 'comDayCqAnalyticsTestandtargetImplServletsAdminServerServletInfo', Body, ValidatorState);
validate_response('ComDayCqAnalyticsTestandtargetImplServletsAdminServerServlet', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComDayCqAnalyticsTestandtargetImplServletsAdminServerServlet', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComDayCqAnalyticsTestandtargetImplTestandtargetHttpClientImpl', 200, Body, ValidatorState) ->
    validate_response_body('comDayCqAnalyticsTestandtargetImplTestandtargetHttpClientImplInfo', 'comDayCqAnalyticsTestandtargetImplTestandtargetHttpClientImplInfo', Body, ValidatorState);
validate_response('ComDayCqAnalyticsTestandtargetImplTestandtargetHttpClientImpl', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComDayCqAnalyticsTestandtargetImplTestandtargetHttpClientImpl', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComDayCqAuthImplCugCugSupportImpl', 200, Body, ValidatorState) ->
    validate_response_body('comDayCqAuthImplCugCugSupportImplInfo', 'comDayCqAuthImplCugCugSupportImplInfo', Body, ValidatorState);
validate_response('ComDayCqAuthImplCugCugSupportImpl', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComDayCqAuthImplCugCugSupportImpl', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComDayCqAuthImplLoginSelectorHandler', 200, Body, ValidatorState) ->
    validate_response_body('comDayCqAuthImplLoginSelectorHandlerInfo', 'comDayCqAuthImplLoginSelectorHandlerInfo', Body, ValidatorState);
validate_response('ComDayCqAuthImplLoginSelectorHandler', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComDayCqAuthImplLoginSelectorHandler', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComDayCqCommonsImplExternalizerImpl', 200, Body, ValidatorState) ->
    validate_response_body('comDayCqCommonsImplExternalizerImplInfo', 'comDayCqCommonsImplExternalizerImplInfo', Body, ValidatorState);
validate_response('ComDayCqCommonsImplExternalizerImpl', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComDayCqCommonsImplExternalizerImpl', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComDayCqCommonsServletsRootMappingServlet', 200, Body, ValidatorState) ->
    validate_response_body('comDayCqCommonsServletsRootMappingServletInfo', 'comDayCqCommonsServletsRootMappingServletInfo', Body, ValidatorState);
validate_response('ComDayCqCommonsServletsRootMappingServlet', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComDayCqCommonsServletsRootMappingServlet', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComDayCqCompatCodeupgradeImplCodeUpgradeExecutionConditionChecke', 200, Body, ValidatorState) ->
    validate_response_body('comDayCqCompatCodeupgradeImplCodeUpgradeExecutionConditionCheckeInfo', 'comDayCqCompatCodeupgradeImplCodeUpgradeExecutionConditionCheckeInfo', Body, ValidatorState);
validate_response('ComDayCqCompatCodeupgradeImplCodeUpgradeExecutionConditionChecke', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComDayCqCompatCodeupgradeImplCodeUpgradeExecutionConditionChecke', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComDayCqCompatCodeupgradeImplUpgradeTaskIgnoreList', 200, Body, ValidatorState) ->
    validate_response_body('comDayCqCompatCodeupgradeImplUpgradeTaskIgnoreListInfo', 'comDayCqCompatCodeupgradeImplUpgradeTaskIgnoreListInfo', Body, ValidatorState);
validate_response('ComDayCqCompatCodeupgradeImplUpgradeTaskIgnoreList', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComDayCqCompatCodeupgradeImplUpgradeTaskIgnoreList', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComDayCqCompatCodeupgradeImplVersionRangeTaskIgnorelist', 200, Body, ValidatorState) ->
    validate_response_body('comDayCqCompatCodeupgradeImplVersionRangeTaskIgnorelistInfo', 'comDayCqCompatCodeupgradeImplVersionRangeTaskIgnorelistInfo', Body, ValidatorState);
validate_response('ComDayCqCompatCodeupgradeImplVersionRangeTaskIgnorelist', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComDayCqCompatCodeupgradeImplVersionRangeTaskIgnorelist', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComDayCqContentsyncImplContentSyncManagerImpl', 200, Body, ValidatorState) ->
    validate_response_body('comDayCqContentsyncImplContentSyncManagerImplInfo', 'comDayCqContentsyncImplContentSyncManagerImplInfo', Body, ValidatorState);
validate_response('ComDayCqContentsyncImplContentSyncManagerImpl', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComDayCqContentsyncImplContentSyncManagerImpl', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComDayCqDamCommonsHandlerStandardImageHandler', 200, Body, ValidatorState) ->
    validate_response_body('comDayCqDamCommonsHandlerStandardImageHandlerInfo', 'comDayCqDamCommonsHandlerStandardImageHandlerInfo', Body, ValidatorState);
validate_response('ComDayCqDamCommonsHandlerStandardImageHandler', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComDayCqDamCommonsHandlerStandardImageHandler', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComDayCqDamCommonsMetadataXmpFilterBlackWhite', 200, Body, ValidatorState) ->
    validate_response_body('comDayCqDamCommonsMetadataXmpFilterBlackWhiteInfo', 'comDayCqDamCommonsMetadataXmpFilterBlackWhiteInfo', Body, ValidatorState);
validate_response('ComDayCqDamCommonsMetadataXmpFilterBlackWhite', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComDayCqDamCommonsMetadataXmpFilterBlackWhite', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComDayCqDamCommonsUtilImplAssetCacheImpl', 200, Body, ValidatorState) ->
    validate_response_body('comDayCqDamCommonsUtilImplAssetCacheImplInfo', 'comDayCqDamCommonsUtilImplAssetCacheImplInfo', Body, ValidatorState);
validate_response('ComDayCqDamCommonsUtilImplAssetCacheImpl', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComDayCqDamCommonsUtilImplAssetCacheImpl', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComDayCqDamCoreImplAnnotationPdfAnnotationPdfConfig', 200, Body, ValidatorState) ->
    validate_response_body('comDayCqDamCoreImplAnnotationPdfAnnotationPdfConfigInfo', 'comDayCqDamCoreImplAnnotationPdfAnnotationPdfConfigInfo', Body, ValidatorState);
validate_response('ComDayCqDamCoreImplAnnotationPdfAnnotationPdfConfig', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComDayCqDamCoreImplAnnotationPdfAnnotationPdfConfig', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComDayCqDamCoreImplAssetMoveListener', 200, Body, ValidatorState) ->
    validate_response_body('comDayCqDamCoreImplAssetMoveListenerInfo', 'comDayCqDamCoreImplAssetMoveListenerInfo', Body, ValidatorState);
validate_response('ComDayCqDamCoreImplAssetMoveListener', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComDayCqDamCoreImplAssetMoveListener', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComDayCqDamCoreImplAssethomeAssetHomePageConfiguration', 200, Body, ValidatorState) ->
    validate_response_body('comDayCqDamCoreImplAssethomeAssetHomePageConfigurationInfo', 'comDayCqDamCoreImplAssethomeAssetHomePageConfigurationInfo', Body, ValidatorState);
validate_response('ComDayCqDamCoreImplAssethomeAssetHomePageConfiguration', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComDayCqDamCoreImplAssethomeAssetHomePageConfiguration', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComDayCqDamCoreImplAssetlinkshareAdhocAssetShareProxyServlet', 200, Body, ValidatorState) ->
    validate_response_body('comDayCqDamCoreImplAssetlinkshareAdhocAssetShareProxyServletInfo', 'comDayCqDamCoreImplAssetlinkshareAdhocAssetShareProxyServletInfo', Body, ValidatorState);
validate_response('ComDayCqDamCoreImplAssetlinkshareAdhocAssetShareProxyServlet', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComDayCqDamCoreImplAssetlinkshareAdhocAssetShareProxyServlet', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComDayCqDamCoreImplCacheCQBufferedImageCache', 200, Body, ValidatorState) ->
    validate_response_body('comDayCqDamCoreImplCacheCQBufferedImageCacheInfo', 'comDayCqDamCoreImplCacheCQBufferedImageCacheInfo', Body, ValidatorState);
validate_response('ComDayCqDamCoreImplCacheCQBufferedImageCache', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComDayCqDamCoreImplCacheCQBufferedImageCache', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComDayCqDamCoreImplDamChangeEventListener', 200, Body, ValidatorState) ->
    validate_response_body('comDayCqDamCoreImplDamChangeEventListenerInfo', 'comDayCqDamCoreImplDamChangeEventListenerInfo', Body, ValidatorState);
validate_response('ComDayCqDamCoreImplDamChangeEventListener', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComDayCqDamCoreImplDamChangeEventListener', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComDayCqDamCoreImplDamEventPurgeService', 200, Body, ValidatorState) ->
    validate_response_body('comDayCqDamCoreImplDamEventPurgeServiceInfo', 'comDayCqDamCoreImplDamEventPurgeServiceInfo', Body, ValidatorState);
validate_response('ComDayCqDamCoreImplDamEventPurgeService', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComDayCqDamCoreImplDamEventPurgeService', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComDayCqDamCoreImplDamEventRecorderImpl', 200, Body, ValidatorState) ->
    validate_response_body('comDayCqDamCoreImplDamEventRecorderImplInfo', 'comDayCqDamCoreImplDamEventRecorderImplInfo', Body, ValidatorState);
validate_response('ComDayCqDamCoreImplDamEventRecorderImpl', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComDayCqDamCoreImplDamEventRecorderImpl', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComDayCqDamCoreImplEventDamEventAuditListener', 200, Body, ValidatorState) ->
    validate_response_body('comDayCqDamCoreImplEventDamEventAuditListenerInfo', 'comDayCqDamCoreImplEventDamEventAuditListenerInfo', Body, ValidatorState);
validate_response('ComDayCqDamCoreImplEventDamEventAuditListener', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComDayCqDamCoreImplEventDamEventAuditListener', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComDayCqDamCoreImplExpiryNotificationJobImpl', 200, Body, ValidatorState) ->
    validate_response_body('comDayCqDamCoreImplExpiryNotificationJobImplInfo', 'comDayCqDamCoreImplExpiryNotificationJobImplInfo', Body, ValidatorState);
validate_response('ComDayCqDamCoreImplExpiryNotificationJobImpl', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComDayCqDamCoreImplExpiryNotificationJobImpl', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComDayCqDamCoreImplFoldermetadataschemaFolderMetadataSchemaFeat', 200, Body, ValidatorState) ->
    validate_response_body('comDayCqDamCoreImplFoldermetadataschemaFolderMetadataSchemaFeatInfo', 'comDayCqDamCoreImplFoldermetadataschemaFolderMetadataSchemaFeatInfo', Body, ValidatorState);
validate_response('ComDayCqDamCoreImplFoldermetadataschemaFolderMetadataSchemaFeat', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComDayCqDamCoreImplFoldermetadataschemaFolderMetadataSchemaFeat', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComDayCqDamCoreImplGfxCommonsGfxRenderer', 200, Body, ValidatorState) ->
    validate_response_body('comDayCqDamCoreImplGfxCommonsGfxRendererInfo', 'comDayCqDamCoreImplGfxCommonsGfxRendererInfo', Body, ValidatorState);
validate_response('ComDayCqDamCoreImplGfxCommonsGfxRenderer', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComDayCqDamCoreImplGfxCommonsGfxRenderer', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComDayCqDamCoreImplHandlerEPSFormatHandler', 200, Body, ValidatorState) ->
    validate_response_body('comDayCqDamCoreImplHandlerEPSFormatHandlerInfo', 'comDayCqDamCoreImplHandlerEPSFormatHandlerInfo', Body, ValidatorState);
validate_response('ComDayCqDamCoreImplHandlerEPSFormatHandler', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComDayCqDamCoreImplHandlerEPSFormatHandler', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComDayCqDamCoreImplHandlerIndesignFormatHandler', 200, Body, ValidatorState) ->
    validate_response_body('comDayCqDamCoreImplHandlerIndesignFormatHandlerInfo', 'comDayCqDamCoreImplHandlerIndesignFormatHandlerInfo', Body, ValidatorState);
validate_response('ComDayCqDamCoreImplHandlerIndesignFormatHandler', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComDayCqDamCoreImplHandlerIndesignFormatHandler', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComDayCqDamCoreImplHandlerJpegHandler', 200, Body, ValidatorState) ->
    validate_response_body('comDayCqDamCoreImplHandlerJpegHandlerInfo', 'comDayCqDamCoreImplHandlerJpegHandlerInfo', Body, ValidatorState);
validate_response('ComDayCqDamCoreImplHandlerJpegHandler', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComDayCqDamCoreImplHandlerJpegHandler', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComDayCqDamCoreImplHandlerXmpNCommXMPHandler', 200, Body, ValidatorState) ->
    validate_response_body('comDayCqDamCoreImplHandlerXmpNCommXMPHandlerInfo', 'comDayCqDamCoreImplHandlerXmpNCommXMPHandlerInfo', Body, ValidatorState);
validate_response('ComDayCqDamCoreImplHandlerXmpNCommXMPHandler', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComDayCqDamCoreImplHandlerXmpNCommXMPHandler', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComDayCqDamCoreImplJmxAssetIndexUpdateMonitor', 200, Body, ValidatorState) ->
    validate_response_body('comDayCqDamCoreImplJmxAssetIndexUpdateMonitorInfo', 'comDayCqDamCoreImplJmxAssetIndexUpdateMonitorInfo', Body, ValidatorState);
validate_response('ComDayCqDamCoreImplJmxAssetIndexUpdateMonitor', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComDayCqDamCoreImplJmxAssetIndexUpdateMonitor', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComDayCqDamCoreImplJmxAssetMigrationMBeanImpl', 200, Body, ValidatorState) ->
    validate_response_body('comDayCqDamCoreImplJmxAssetMigrationMBeanImplInfo', 'comDayCqDamCoreImplJmxAssetMigrationMBeanImplInfo', Body, ValidatorState);
validate_response('ComDayCqDamCoreImplJmxAssetMigrationMBeanImpl', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComDayCqDamCoreImplJmxAssetMigrationMBeanImpl', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComDayCqDamCoreImplJmxAssetUpdateMonitorImpl', 200, Body, ValidatorState) ->
    validate_response_body('comDayCqDamCoreImplJmxAssetUpdateMonitorImplInfo', 'comDayCqDamCoreImplJmxAssetUpdateMonitorImplInfo', Body, ValidatorState);
validate_response('ComDayCqDamCoreImplJmxAssetUpdateMonitorImpl', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComDayCqDamCoreImplJmxAssetUpdateMonitorImpl', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComDayCqDamCoreImplJobsMetadataexportAsyncMetadataExportConfig', 200, Body, ValidatorState) ->
    validate_response_body('comDayCqDamCoreImplJobsMetadataexportAsyncMetadataExportConfigInfo', 'comDayCqDamCoreImplJobsMetadataexportAsyncMetadataExportConfigInfo', Body, ValidatorState);
validate_response('ComDayCqDamCoreImplJobsMetadataexportAsyncMetadataExportConfig', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComDayCqDamCoreImplJobsMetadataexportAsyncMetadataExportConfig', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComDayCqDamCoreImplJobsMetadataimportAsyncMetadataImportConfig', 200, Body, ValidatorState) ->
    validate_response_body('comDayCqDamCoreImplJobsMetadataimportAsyncMetadataImportConfigInfo', 'comDayCqDamCoreImplJobsMetadataimportAsyncMetadataImportConfigInfo', Body, ValidatorState);
validate_response('ComDayCqDamCoreImplJobsMetadataimportAsyncMetadataImportConfig', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComDayCqDamCoreImplJobsMetadataimportAsyncMetadataImportConfig', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComDayCqDamCoreImplLightboxLightboxServlet', 200, Body, ValidatorState) ->
    validate_response_body('comDayCqDamCoreImplLightboxLightboxServletInfo', 'comDayCqDamCoreImplLightboxLightboxServletInfo', Body, ValidatorState);
validate_response('ComDayCqDamCoreImplLightboxLightboxServlet', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComDayCqDamCoreImplLightboxLightboxServlet', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComDayCqDamCoreImplMetadataEditorSelectComponentHandler', 200, Body, ValidatorState) ->
    validate_response_body('comDayCqDamCoreImplMetadataEditorSelectComponentHandlerInfo', 'comDayCqDamCoreImplMetadataEditorSelectComponentHandlerInfo', Body, ValidatorState);
validate_response('ComDayCqDamCoreImplMetadataEditorSelectComponentHandler', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComDayCqDamCoreImplMetadataEditorSelectComponentHandler', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComDayCqDamCoreImplMimeTypeAssetUploadRestrictionHelper', 200, Body, ValidatorState) ->
    validate_response_body('comDayCqDamCoreImplMimeTypeAssetUploadRestrictionHelperInfo', 'comDayCqDamCoreImplMimeTypeAssetUploadRestrictionHelperInfo', Body, ValidatorState);
validate_response('ComDayCqDamCoreImplMimeTypeAssetUploadRestrictionHelper', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComDayCqDamCoreImplMimeTypeAssetUploadRestrictionHelper', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComDayCqDamCoreImplMimeTypeDamMimeTypeServiceImpl', 200, Body, ValidatorState) ->
    validate_response_body('comDayCqDamCoreImplMimeTypeDamMimeTypeServiceImplInfo', 'comDayCqDamCoreImplMimeTypeDamMimeTypeServiceImplInfo', Body, ValidatorState);
validate_response('ComDayCqDamCoreImplMimeTypeDamMimeTypeServiceImpl', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComDayCqDamCoreImplMimeTypeDamMimeTypeServiceImpl', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComDayCqDamCoreImplMissingMetadataNotificationJob', 200, Body, ValidatorState) ->
    validate_response_body('comDayCqDamCoreImplMissingMetadataNotificationJobInfo', 'comDayCqDamCoreImplMissingMetadataNotificationJobInfo', Body, ValidatorState);
validate_response('ComDayCqDamCoreImplMissingMetadataNotificationJob', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComDayCqDamCoreImplMissingMetadataNotificationJob', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComDayCqDamCoreImplProcessSendTransientWorkflowCompletedEmailPr', 200, Body, ValidatorState) ->
    validate_response_body('comDayCqDamCoreImplProcessSendTransientWorkflowCompletedEmailPrInfo', 'comDayCqDamCoreImplProcessSendTransientWorkflowCompletedEmailPrInfo', Body, ValidatorState);
validate_response('ComDayCqDamCoreImplProcessSendTransientWorkflowCompletedEmailPr', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComDayCqDamCoreImplProcessSendTransientWorkflowCompletedEmailPr', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComDayCqDamCoreImplProcessTextExtractionProcess', 200, Body, ValidatorState) ->
    validate_response_body('comDayCqDamCoreImplProcessTextExtractionProcessInfo', 'comDayCqDamCoreImplProcessTextExtractionProcessInfo', Body, ValidatorState);
validate_response('ComDayCqDamCoreImplProcessTextExtractionProcess', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComDayCqDamCoreImplProcessTextExtractionProcess', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComDayCqDamCoreImplRenditionMakerImpl', 200, Body, ValidatorState) ->
    validate_response_body('comDayCqDamCoreImplRenditionMakerImplInfo', 'comDayCqDamCoreImplRenditionMakerImplInfo', Body, ValidatorState);
validate_response('ComDayCqDamCoreImplRenditionMakerImpl', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComDayCqDamCoreImplRenditionMakerImpl', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComDayCqDamCoreImplReportsReportExportService', 200, Body, ValidatorState) ->
    validate_response_body('comDayCqDamCoreImplReportsReportExportServiceInfo', 'comDayCqDamCoreImplReportsReportExportServiceInfo', Body, ValidatorState);
validate_response('ComDayCqDamCoreImplReportsReportExportService', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComDayCqDamCoreImplReportsReportExportService', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComDayCqDamCoreImplReportsReportPurgeService', 200, Body, ValidatorState) ->
    validate_response_body('comDayCqDamCoreImplReportsReportPurgeServiceInfo', 'comDayCqDamCoreImplReportsReportPurgeServiceInfo', Body, ValidatorState);
validate_response('ComDayCqDamCoreImplReportsReportPurgeService', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComDayCqDamCoreImplReportsReportPurgeService', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComDayCqDamCoreImplServletAssetDownloadServlet', 200, Body, ValidatorState) ->
    validate_response_body('comDayCqDamCoreImplServletAssetDownloadServletInfo', 'comDayCqDamCoreImplServletAssetDownloadServletInfo', Body, ValidatorState);
validate_response('ComDayCqDamCoreImplServletAssetDownloadServlet', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComDayCqDamCoreImplServletAssetDownloadServlet', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComDayCqDamCoreImplServletAssetStatusServlet', 200, Body, ValidatorState) ->
    validate_response_body('comDayCqDamCoreImplServletAssetStatusServletInfo', 'comDayCqDamCoreImplServletAssetStatusServletInfo', Body, ValidatorState);
validate_response('ComDayCqDamCoreImplServletAssetStatusServlet', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComDayCqDamCoreImplServletAssetStatusServlet', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComDayCqDamCoreImplServletAssetXMPSearchServlet', 200, Body, ValidatorState) ->
    validate_response_body('comDayCqDamCoreImplServletAssetXMPSearchServletInfo', 'comDayCqDamCoreImplServletAssetXMPSearchServletInfo', Body, ValidatorState);
validate_response('ComDayCqDamCoreImplServletAssetXMPSearchServlet', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComDayCqDamCoreImplServletAssetXMPSearchServlet', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComDayCqDamCoreImplServletBatchMetadataServlet', 200, Body, ValidatorState) ->
    validate_response_body('comDayCqDamCoreImplServletBatchMetadataServletInfo', 'comDayCqDamCoreImplServletBatchMetadataServletInfo', Body, ValidatorState);
validate_response('ComDayCqDamCoreImplServletBatchMetadataServlet', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComDayCqDamCoreImplServletBatchMetadataServlet', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComDayCqDamCoreImplServletBinaryProviderServlet', 200, Body, ValidatorState) ->
    validate_response_body('comDayCqDamCoreImplServletBinaryProviderServletInfo', 'comDayCqDamCoreImplServletBinaryProviderServletInfo', Body, ValidatorState);
validate_response('ComDayCqDamCoreImplServletBinaryProviderServlet', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComDayCqDamCoreImplServletBinaryProviderServlet', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComDayCqDamCoreImplServletCollectionServlet', 200, Body, ValidatorState) ->
    validate_response_body('comDayCqDamCoreImplServletCollectionServletInfo', 'comDayCqDamCoreImplServletCollectionServletInfo', Body, ValidatorState);
validate_response('ComDayCqDamCoreImplServletCollectionServlet', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComDayCqDamCoreImplServletCollectionServlet', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComDayCqDamCoreImplServletCollectionsServlet', 200, Body, ValidatorState) ->
    validate_response_body('comDayCqDamCoreImplServletCollectionsServletInfo', 'comDayCqDamCoreImplServletCollectionsServletInfo', Body, ValidatorState);
validate_response('ComDayCqDamCoreImplServletCollectionsServlet', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComDayCqDamCoreImplServletCollectionsServlet', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComDayCqDamCoreImplServletCompanionServlet', 200, Body, ValidatorState) ->
    validate_response_body('comDayCqDamCoreImplServletCompanionServletInfo', 'comDayCqDamCoreImplServletCompanionServletInfo', Body, ValidatorState);
validate_response('ComDayCqDamCoreImplServletCompanionServlet', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComDayCqDamCoreImplServletCompanionServlet', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComDayCqDamCoreImplServletCreateAssetServlet', 200, Body, ValidatorState) ->
    validate_response_body('comDayCqDamCoreImplServletCreateAssetServletInfo', 'comDayCqDamCoreImplServletCreateAssetServletInfo', Body, ValidatorState);
validate_response('ComDayCqDamCoreImplServletCreateAssetServlet', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComDayCqDamCoreImplServletCreateAssetServlet', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComDayCqDamCoreImplServletDamContentDispositionFilter', 200, Body, ValidatorState) ->
    validate_response_body('comDayCqDamCoreImplServletDamContentDispositionFilterInfo', 'comDayCqDamCoreImplServletDamContentDispositionFilterInfo', Body, ValidatorState);
validate_response('ComDayCqDamCoreImplServletDamContentDispositionFilter', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComDayCqDamCoreImplServletDamContentDispositionFilter', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComDayCqDamCoreImplServletGuidLookupFilter', 200, Body, ValidatorState) ->
    validate_response_body('comDayCqDamCoreImplServletGuidLookupFilterInfo', 'comDayCqDamCoreImplServletGuidLookupFilterInfo', Body, ValidatorState);
validate_response('ComDayCqDamCoreImplServletGuidLookupFilter', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComDayCqDamCoreImplServletGuidLookupFilter', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComDayCqDamCoreImplServletHealthCheckServlet', 200, Body, ValidatorState) ->
    validate_response_body('comDayCqDamCoreImplServletHealthCheckServletInfo', 'comDayCqDamCoreImplServletHealthCheckServletInfo', Body, ValidatorState);
validate_response('ComDayCqDamCoreImplServletHealthCheckServlet', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComDayCqDamCoreImplServletHealthCheckServlet', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComDayCqDamCoreImplServletMetadataGetServlet', 200, Body, ValidatorState) ->
    validate_response_body('comDayCqDamCoreImplServletMetadataGetServletInfo', 'comDayCqDamCoreImplServletMetadataGetServletInfo', Body, ValidatorState);
validate_response('ComDayCqDamCoreImplServletMetadataGetServlet', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComDayCqDamCoreImplServletMetadataGetServlet', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComDayCqDamCoreImplServletMultipleLicenseAcceptServlet', 200, Body, ValidatorState) ->
    validate_response_body('comDayCqDamCoreImplServletMultipleLicenseAcceptServletInfo', 'comDayCqDamCoreImplServletMultipleLicenseAcceptServletInfo', Body, ValidatorState);
validate_response('ComDayCqDamCoreImplServletMultipleLicenseAcceptServlet', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComDayCqDamCoreImplServletMultipleLicenseAcceptServlet', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComDayCqDamCoreImplServletResourceCollectionServlet', 200, Body, ValidatorState) ->
    validate_response_body('comDayCqDamCoreImplServletResourceCollectionServletInfo', 'comDayCqDamCoreImplServletResourceCollectionServletInfo', Body, ValidatorState);
validate_response('ComDayCqDamCoreImplServletResourceCollectionServlet', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComDayCqDamCoreImplServletResourceCollectionServlet', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComDayCqDamCoreImplUiPreviewFolderPreviewUpdaterImpl', 200, Body, ValidatorState) ->
    validate_response_body('comDayCqDamCoreImplUiPreviewFolderPreviewUpdaterImplInfo', 'comDayCqDamCoreImplUiPreviewFolderPreviewUpdaterImplInfo', Body, ValidatorState);
validate_response('ComDayCqDamCoreImplUiPreviewFolderPreviewUpdaterImpl', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComDayCqDamCoreImplUiPreviewFolderPreviewUpdaterImpl', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComDayCqDamCoreImplUnzipUnzipConfig', 200, Body, ValidatorState) ->
    validate_response_body('comDayCqDamCoreImplUnzipUnzipConfigInfo', 'comDayCqDamCoreImplUnzipUnzipConfigInfo', Body, ValidatorState);
validate_response('ComDayCqDamCoreImplUnzipUnzipConfig', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComDayCqDamCoreImplUnzipUnzipConfig', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComDayCqDamCoreProcessExifToolExtractMetadataProcess', 200, Body, ValidatorState) ->
    validate_response_body('comDayCqDamCoreProcessExifToolExtractMetadataProcessInfo', 'comDayCqDamCoreProcessExifToolExtractMetadataProcessInfo', Body, ValidatorState);
validate_response('ComDayCqDamCoreProcessExifToolExtractMetadataProcess', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComDayCqDamCoreProcessExifToolExtractMetadataProcess', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComDayCqDamCoreProcessExtractMetadataProcess', 200, Body, ValidatorState) ->
    validate_response_body('comDayCqDamCoreProcessExtractMetadataProcessInfo', 'comDayCqDamCoreProcessExtractMetadataProcessInfo', Body, ValidatorState);
validate_response('ComDayCqDamCoreProcessExtractMetadataProcess', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComDayCqDamCoreProcessExtractMetadataProcess', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComDayCqDamCoreProcessMetadataProcessorProcess', 200, Body, ValidatorState) ->
    validate_response_body('comDayCqDamCoreProcessMetadataProcessorProcessInfo', 'comDayCqDamCoreProcessMetadataProcessorProcessInfo', Body, ValidatorState);
validate_response('ComDayCqDamCoreProcessMetadataProcessorProcess', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComDayCqDamCoreProcessMetadataProcessorProcess', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComDayCqDamHandlerFfmpegLocatorImpl', 200, Body, ValidatorState) ->
    validate_response_body('comDayCqDamHandlerFfmpegLocatorImplInfo', 'comDayCqDamHandlerFfmpegLocatorImplInfo', Body, ValidatorState);
validate_response('ComDayCqDamHandlerFfmpegLocatorImpl', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComDayCqDamHandlerFfmpegLocatorImpl', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComDayCqDamHandlerGibsonFontmanagerImplFontManagerServiceImpl', 200, Body, ValidatorState) ->
    validate_response_body('comDayCqDamHandlerGibsonFontmanagerImplFontManagerServiceImplInfo', 'comDayCqDamHandlerGibsonFontmanagerImplFontManagerServiceImplInfo', Body, ValidatorState);
validate_response('ComDayCqDamHandlerGibsonFontmanagerImplFontManagerServiceImpl', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComDayCqDamHandlerGibsonFontmanagerImplFontManagerServiceImpl', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComDayCqDamHandlerStandardPdfPdfHandler', 200, Body, ValidatorState) ->
    validate_response_body('comDayCqDamHandlerStandardPdfPdfHandlerInfo', 'comDayCqDamHandlerStandardPdfPdfHandlerInfo', Body, ValidatorState);
validate_response('ComDayCqDamHandlerStandardPdfPdfHandler', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComDayCqDamHandlerStandardPdfPdfHandler', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComDayCqDamHandlerStandardPsPostScriptHandler', 200, Body, ValidatorState) ->
    validate_response_body('comDayCqDamHandlerStandardPsPostScriptHandlerInfo', 'comDayCqDamHandlerStandardPsPostScriptHandlerInfo', Body, ValidatorState);
validate_response('ComDayCqDamHandlerStandardPsPostScriptHandler', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComDayCqDamHandlerStandardPsPostScriptHandler', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComDayCqDamHandlerStandardPsdPsdHandler', 200, Body, ValidatorState) ->
    validate_response_body('comDayCqDamHandlerStandardPsdPsdHandlerInfo', 'comDayCqDamHandlerStandardPsdPsdHandlerInfo', Body, ValidatorState);
validate_response('ComDayCqDamHandlerStandardPsdPsdHandler', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComDayCqDamHandlerStandardPsdPsdHandler', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComDayCqDamIdsImplIDSJobProcessor', 200, Body, ValidatorState) ->
    validate_response_body('comDayCqDamIdsImplIDSJobProcessorInfo', 'comDayCqDamIdsImplIDSJobProcessorInfo', Body, ValidatorState);
validate_response('ComDayCqDamIdsImplIDSJobProcessor', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComDayCqDamIdsImplIDSJobProcessor', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComDayCqDamIdsImplIDSPoolManagerImpl', 200, Body, ValidatorState) ->
    validate_response_body('comDayCqDamIdsImplIDSPoolManagerImplInfo', 'comDayCqDamIdsImplIDSPoolManagerImplInfo', Body, ValidatorState);
validate_response('ComDayCqDamIdsImplIDSPoolManagerImpl', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComDayCqDamIdsImplIDSPoolManagerImpl', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComDayCqDamInddImplHandlerIndesignXMPHandler', 200, Body, ValidatorState) ->
    validate_response_body('comDayCqDamInddImplHandlerIndesignXMPHandlerInfo', 'comDayCqDamInddImplHandlerIndesignXMPHandlerInfo', Body, ValidatorState);
validate_response('ComDayCqDamInddImplHandlerIndesignXMPHandler', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComDayCqDamInddImplHandlerIndesignXMPHandler', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComDayCqDamInddImplServletSnippetCreationServlet', 200, Body, ValidatorState) ->
    validate_response_body('comDayCqDamInddImplServletSnippetCreationServletInfo', 'comDayCqDamInddImplServletSnippetCreationServletInfo', Body, ValidatorState);
validate_response('ComDayCqDamInddImplServletSnippetCreationServlet', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComDayCqDamInddImplServletSnippetCreationServlet', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComDayCqDamInddProcessINDDMediaExtractProcess', 200, Body, ValidatorState) ->
    validate_response_body('comDayCqDamInddProcessINDDMediaExtractProcessInfo', 'comDayCqDamInddProcessINDDMediaExtractProcessInfo', Body, ValidatorState);
validate_response('ComDayCqDamInddProcessINDDMediaExtractProcess', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComDayCqDamInddProcessINDDMediaExtractProcess', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComDayCqDamPerformanceInternalAssetPerformanceDataHandlerImpl', 200, Body, ValidatorState) ->
    validate_response_body('comDayCqDamPerformanceInternalAssetPerformanceDataHandlerImplInfo', 'comDayCqDamPerformanceInternalAssetPerformanceDataHandlerImplInfo', Body, ValidatorState);
validate_response('ComDayCqDamPerformanceInternalAssetPerformanceDataHandlerImpl', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComDayCqDamPerformanceInternalAssetPerformanceDataHandlerImpl', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComDayCqDamPerformanceInternalAssetPerformanceReportSyncJob', 200, Body, ValidatorState) ->
    validate_response_body('comDayCqDamPerformanceInternalAssetPerformanceReportSyncJobInfo', 'comDayCqDamPerformanceInternalAssetPerformanceReportSyncJobInfo', Body, ValidatorState);
validate_response('ComDayCqDamPerformanceInternalAssetPerformanceReportSyncJob', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComDayCqDamPerformanceInternalAssetPerformanceReportSyncJob', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComDayCqDamPimImplSourcingUploadProcessProductAssetsUploadPro', 200, Body, ValidatorState) ->
    validate_response_body('comDayCqDamPimImplSourcingUploadProcessProductAssetsUploadProInfo', 'comDayCqDamPimImplSourcingUploadProcessProductAssetsUploadProInfo', Body, ValidatorState);
validate_response('ComDayCqDamPimImplSourcingUploadProcessProductAssetsUploadPro', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComDayCqDamPimImplSourcingUploadProcessProductAssetsUploadPro', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComDayCqDamS7damCommonAnalyticsImplS7damDynamicMediaConfigEven', 200, Body, ValidatorState) ->
    validate_response_body('comDayCqDamS7damCommonAnalyticsImplS7damDynamicMediaConfigEvenInfo', 'comDayCqDamS7damCommonAnalyticsImplS7damDynamicMediaConfigEvenInfo', Body, ValidatorState);
validate_response('ComDayCqDamS7damCommonAnalyticsImplS7damDynamicMediaConfigEven', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComDayCqDamS7damCommonAnalyticsImplS7damDynamicMediaConfigEven', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComDayCqDamS7damCommonAnalyticsImplSiteCatalystReportRunner', 200, Body, ValidatorState) ->
    validate_response_body('comDayCqDamS7damCommonAnalyticsImplSiteCatalystReportRunnerInfo', 'comDayCqDamS7damCommonAnalyticsImplSiteCatalystReportRunnerInfo', Body, ValidatorState);
validate_response('ComDayCqDamS7damCommonAnalyticsImplSiteCatalystReportRunner', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComDayCqDamS7damCommonAnalyticsImplSiteCatalystReportRunner', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComDayCqDamS7damCommonPostServletsSetCreateHandler', 200, Body, ValidatorState) ->
    validate_response_body('comDayCqDamS7damCommonPostServletsSetCreateHandlerInfo', 'comDayCqDamS7damCommonPostServletsSetCreateHandlerInfo', Body, ValidatorState);
validate_response('ComDayCqDamS7damCommonPostServletsSetCreateHandler', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComDayCqDamS7damCommonPostServletsSetCreateHandler', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComDayCqDamS7damCommonPostServletsSetModifyHandler', 200, Body, ValidatorState) ->
    validate_response_body('comDayCqDamS7damCommonPostServletsSetModifyHandlerInfo', 'comDayCqDamS7damCommonPostServletsSetModifyHandlerInfo', Body, ValidatorState);
validate_response('ComDayCqDamS7damCommonPostServletsSetModifyHandler', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComDayCqDamS7damCommonPostServletsSetModifyHandler', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComDayCqDamS7damCommonProcessVideoThumbnailDownloadProcess', 200, Body, ValidatorState) ->
    validate_response_body('comDayCqDamS7damCommonProcessVideoThumbnailDownloadProcessInfo', 'comDayCqDamS7damCommonProcessVideoThumbnailDownloadProcessInfo', Body, ValidatorState);
validate_response('ComDayCqDamS7damCommonProcessVideoThumbnailDownloadProcess', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComDayCqDamS7damCommonProcessVideoThumbnailDownloadProcess', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComDayCqDamS7damCommonS7damDamChangeEventListener', 200, Body, ValidatorState) ->
    validate_response_body('comDayCqDamS7damCommonS7damDamChangeEventListenerInfo', 'comDayCqDamS7damCommonS7damDamChangeEventListenerInfo', Body, ValidatorState);
validate_response('ComDayCqDamS7damCommonS7damDamChangeEventListener', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComDayCqDamS7damCommonS7damDamChangeEventListener', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComDayCqDamS7damCommonServletsS7damProductInfoServlet', 200, Body, ValidatorState) ->
    validate_response_body('comDayCqDamS7damCommonServletsS7damProductInfoServletInfo', 'comDayCqDamS7damCommonServletsS7damProductInfoServletInfo', Body, ValidatorState);
validate_response('ComDayCqDamS7damCommonServletsS7damProductInfoServlet', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComDayCqDamS7damCommonServletsS7damProductInfoServlet', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComDayCqDamS7damCommonVideoImplVideoProxyClientServiceImpl', 200, Body, ValidatorState) ->
    validate_response_body('comDayCqDamS7damCommonVideoImplVideoProxyClientServiceImplInfo', 'comDayCqDamS7damCommonVideoImplVideoProxyClientServiceImplInfo', Body, ValidatorState);
validate_response('ComDayCqDamS7damCommonVideoImplVideoProxyClientServiceImpl', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComDayCqDamS7damCommonVideoImplVideoProxyClientServiceImpl', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComDayCqDamScene7ImplScene7APIClientImpl', 200, Body, ValidatorState) ->
    validate_response_body('comDayCqDamScene7ImplScene7APIClientImplInfo', 'comDayCqDamScene7ImplScene7APIClientImplInfo', Body, ValidatorState);
validate_response('ComDayCqDamScene7ImplScene7APIClientImpl', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComDayCqDamScene7ImplScene7APIClientImpl', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComDayCqDamScene7ImplScene7AssetMimeTypeServiceImpl', 200, Body, ValidatorState) ->
    validate_response_body('comDayCqDamScene7ImplScene7AssetMimeTypeServiceImplInfo', 'comDayCqDamScene7ImplScene7AssetMimeTypeServiceImplInfo', Body, ValidatorState);
validate_response('ComDayCqDamScene7ImplScene7AssetMimeTypeServiceImpl', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComDayCqDamScene7ImplScene7AssetMimeTypeServiceImpl', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComDayCqDamScene7ImplScene7ConfigurationEventListener', 200, Body, ValidatorState) ->
    validate_response_body('comDayCqDamScene7ImplScene7ConfigurationEventListenerInfo', 'comDayCqDamScene7ImplScene7ConfigurationEventListenerInfo', Body, ValidatorState);
validate_response('ComDayCqDamScene7ImplScene7ConfigurationEventListener', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComDayCqDamScene7ImplScene7ConfigurationEventListener', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComDayCqDamScene7ImplScene7DamChangeEventListener', 200, Body, ValidatorState) ->
    validate_response_body('comDayCqDamScene7ImplScene7DamChangeEventListenerInfo', 'comDayCqDamScene7ImplScene7DamChangeEventListenerInfo', Body, ValidatorState);
validate_response('ComDayCqDamScene7ImplScene7DamChangeEventListener', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComDayCqDamScene7ImplScene7DamChangeEventListener', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComDayCqDamScene7ImplScene7FlashTemplatesServiceImpl', 200, Body, ValidatorState) ->
    validate_response_body('comDayCqDamScene7ImplScene7FlashTemplatesServiceImplInfo', 'comDayCqDamScene7ImplScene7FlashTemplatesServiceImplInfo', Body, ValidatorState);
validate_response('ComDayCqDamScene7ImplScene7FlashTemplatesServiceImpl', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComDayCqDamScene7ImplScene7FlashTemplatesServiceImpl', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComDayCqDamScene7ImplScene7UploadServiceImpl', 200, Body, ValidatorState) ->
    validate_response_body('comDayCqDamScene7ImplScene7UploadServiceImplInfo', 'comDayCqDamScene7ImplScene7UploadServiceImplInfo', Body, ValidatorState);
validate_response('ComDayCqDamScene7ImplScene7UploadServiceImpl', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComDayCqDamScene7ImplScene7UploadServiceImpl', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComDayCqDamStockIntegrationImplCacheStockCacheConfigurationSer', 200, Body, ValidatorState) ->
    validate_response_body('comDayCqDamStockIntegrationImplCacheStockCacheConfigurationSerInfo', 'comDayCqDamStockIntegrationImplCacheStockCacheConfigurationSerInfo', Body, ValidatorState);
validate_response('ComDayCqDamStockIntegrationImplCacheStockCacheConfigurationSer', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComDayCqDamStockIntegrationImplCacheStockCacheConfigurationSer', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComDayCqDamStockIntegrationImplConfigurationStockConfiguration', 200, Body, ValidatorState) ->
    validate_response_body('comDayCqDamStockIntegrationImplConfigurationStockConfigurationInfo', 'comDayCqDamStockIntegrationImplConfigurationStockConfigurationInfo', Body, ValidatorState);
validate_response('ComDayCqDamStockIntegrationImplConfigurationStockConfiguration', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComDayCqDamStockIntegrationImplConfigurationStockConfiguration', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComDayCqDamVideoImplServletVideoTestServlet', 200, Body, ValidatorState) ->
    validate_response_body('comDayCqDamVideoImplServletVideoTestServletInfo', 'comDayCqDamVideoImplServletVideoTestServletInfo', Body, ValidatorState);
validate_response('ComDayCqDamVideoImplServletVideoTestServlet', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComDayCqDamVideoImplServletVideoTestServlet', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComDayCqExtwidgetServletsImageSpriteServlet', 200, Body, ValidatorState) ->
    validate_response_body('comDayCqExtwidgetServletsImageSpriteServletInfo', 'comDayCqExtwidgetServletsImageSpriteServletInfo', Body, ValidatorState);
validate_response('ComDayCqExtwidgetServletsImageSpriteServlet', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComDayCqExtwidgetServletsImageSpriteServlet', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComDayCqImageInternalFontFontHelper', 200, Body, ValidatorState) ->
    validate_response_body('comDayCqImageInternalFontFontHelperInfo', 'comDayCqImageInternalFontFontHelperInfo', Body, ValidatorState);
validate_response('ComDayCqImageInternalFontFontHelper', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComDayCqImageInternalFontFontHelper', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComDayCqJcrclustersupportClusterStartLevelController', 200, Body, ValidatorState) ->
    validate_response_body('comDayCqJcrclustersupportClusterStartLevelControllerInfo', 'comDayCqJcrclustersupportClusterStartLevelControllerInfo', Body, ValidatorState);
validate_response('ComDayCqJcrclustersupportClusterStartLevelController', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComDayCqJcrclustersupportClusterStartLevelController', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComDayCqMailerDefaultMailService', 200, Body, ValidatorState) ->
    validate_response_body('comDayCqMailerDefaultMailServiceInfo', 'comDayCqMailerDefaultMailServiceInfo', Body, ValidatorState);
validate_response('ComDayCqMailerDefaultMailService', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComDayCqMailerDefaultMailService', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComDayCqMailerImplCqMailingService', 200, Body, ValidatorState) ->
    validate_response_body('comDayCqMailerImplCqMailingServiceInfo', 'comDayCqMailerImplCqMailingServiceInfo', Body, ValidatorState);
validate_response('ComDayCqMailerImplCqMailingService', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComDayCqMailerImplCqMailingService', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComDayCqMailerImplEmailCqEmailTemplateFactory', 200, Body, ValidatorState) ->
    validate_response_body('comDayCqMailerImplEmailCqEmailTemplateFactoryInfo', 'comDayCqMailerImplEmailCqEmailTemplateFactoryInfo', Body, ValidatorState);
validate_response('ComDayCqMailerImplEmailCqEmailTemplateFactory', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComDayCqMailerImplEmailCqEmailTemplateFactory', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComDayCqMailerImplEmailCqRetrieverTemplateFactory', 200, Body, ValidatorState) ->
    validate_response_body('comDayCqMailerImplEmailCqRetrieverTemplateFactoryInfo', 'comDayCqMailerImplEmailCqRetrieverTemplateFactoryInfo', Body, ValidatorState);
validate_response('ComDayCqMailerImplEmailCqRetrieverTemplateFactory', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComDayCqMailerImplEmailCqRetrieverTemplateFactory', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComDayCqMcmCampaignImplIntegrationConfigImpl', 200, Body, ValidatorState) ->
    validate_response_body('comDayCqMcmCampaignImplIntegrationConfigImplInfo', 'comDayCqMcmCampaignImplIntegrationConfigImplInfo', Body, ValidatorState);
validate_response('ComDayCqMcmCampaignImplIntegrationConfigImpl', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComDayCqMcmCampaignImplIntegrationConfigImpl', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComDayCqMcmCampaignImporterPersonalizedTextHandlerFactory', 200, Body, ValidatorState) ->
    validate_response_body('comDayCqMcmCampaignImporterPersonalizedTextHandlerFactoryInfo', 'comDayCqMcmCampaignImporterPersonalizedTextHandlerFactoryInfo', Body, ValidatorState);
validate_response('ComDayCqMcmCampaignImporterPersonalizedTextHandlerFactory', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComDayCqMcmCampaignImporterPersonalizedTextHandlerFactory', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComDayCqMcmCoreNewsletterNewsletterEmailServiceImpl', 200, Body, ValidatorState) ->
    validate_response_body('comDayCqMcmCoreNewsletterNewsletterEmailServiceImplInfo', 'comDayCqMcmCoreNewsletterNewsletterEmailServiceImplInfo', Body, ValidatorState);
validate_response('ComDayCqMcmCoreNewsletterNewsletterEmailServiceImpl', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComDayCqMcmCoreNewsletterNewsletterEmailServiceImpl', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComDayCqMcmImplMCMConfiguration', 200, Body, ValidatorState) ->
    validate_response_body('comDayCqMcmImplMCMConfigurationInfo', 'comDayCqMcmImplMCMConfigurationInfo', Body, ValidatorState);
validate_response('ComDayCqMcmImplMCMConfiguration', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComDayCqMcmImplMCMConfiguration', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComDayCqMcmLandingpageParserTaghandlersCtaClickThroughComponen', 200, Body, ValidatorState) ->
    validate_response_body('comDayCqMcmLandingpageParserTaghandlersCtaClickThroughComponenInfo', 'comDayCqMcmLandingpageParserTaghandlersCtaClickThroughComponenInfo', Body, ValidatorState);
validate_response('ComDayCqMcmLandingpageParserTaghandlersCtaClickThroughComponen', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComDayCqMcmLandingpageParserTaghandlersCtaClickThroughComponen', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComDayCqMcmLandingpageParserTaghandlersCtaGraphicalClickThroug', 200, Body, ValidatorState) ->
    validate_response_body('comDayCqMcmLandingpageParserTaghandlersCtaGraphicalClickThrougInfo', 'comDayCqMcmLandingpageParserTaghandlersCtaGraphicalClickThrougInfo', Body, ValidatorState);
validate_response('ComDayCqMcmLandingpageParserTaghandlersCtaGraphicalClickThroug', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComDayCqMcmLandingpageParserTaghandlersCtaGraphicalClickThroug', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComDayCqMcmLandingpageParserTaghandlersCtaLeadFormCTAComponent', 200, Body, ValidatorState) ->
    validate_response_body('comDayCqMcmLandingpageParserTaghandlersCtaLeadFormCTAComponentInfo', 'comDayCqMcmLandingpageParserTaghandlersCtaLeadFormCTAComponentInfo', Body, ValidatorState);
validate_response('ComDayCqMcmLandingpageParserTaghandlersCtaLeadFormCTAComponent', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComDayCqMcmLandingpageParserTaghandlersCtaLeadFormCTAComponent', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComDayCqMcmLandingpageParserTaghandlersMboxMBoxExperienceTagHa', 200, Body, ValidatorState) ->
    validate_response_body('comDayCqMcmLandingpageParserTaghandlersMboxMBoxExperienceTagHaInfo', 'comDayCqMcmLandingpageParserTaghandlersMboxMBoxExperienceTagHaInfo', Body, ValidatorState);
validate_response('ComDayCqMcmLandingpageParserTaghandlersMboxMBoxExperienceTagHa', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComDayCqMcmLandingpageParserTaghandlersMboxMBoxExperienceTagHa', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComDayCqMcmLandingpageParserTaghandlersMboxTargetComponentTagH', 200, Body, ValidatorState) ->
    validate_response_body('comDayCqMcmLandingpageParserTaghandlersMboxTargetComponentTagHInfo', 'comDayCqMcmLandingpageParserTaghandlersMboxTargetComponentTagHInfo', Body, ValidatorState);
validate_response('ComDayCqMcmLandingpageParserTaghandlersMboxTargetComponentTagH', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComDayCqMcmLandingpageParserTaghandlersMboxTargetComponentTagH', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComDayCqNotificationImplNotificationServiceImpl', 200, Body, ValidatorState) ->
    validate_response_body('comDayCqNotificationImplNotificationServiceImplInfo', 'comDayCqNotificationImplNotificationServiceImplInfo', Body, ValidatorState);
validate_response('ComDayCqNotificationImplNotificationServiceImpl', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComDayCqNotificationImplNotificationServiceImpl', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComDayCqPersonalizationImplServletsTargetingConfigurationServlet', 200, Body, ValidatorState) ->
    validate_response_body('comDayCqPersonalizationImplServletsTargetingConfigurationServletInfo', 'comDayCqPersonalizationImplServletsTargetingConfigurationServletInfo', Body, ValidatorState);
validate_response('ComDayCqPersonalizationImplServletsTargetingConfigurationServlet', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComDayCqPersonalizationImplServletsTargetingConfigurationServlet', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComDayCqPollingImporterImplManagedPollConfigImpl', 200, Body, ValidatorState) ->
    validate_response_body('comDayCqPollingImporterImplManagedPollConfigImplInfo', 'comDayCqPollingImporterImplManagedPollConfigImplInfo', Body, ValidatorState);
validate_response('ComDayCqPollingImporterImplManagedPollConfigImpl', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComDayCqPollingImporterImplManagedPollConfigImpl', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComDayCqPollingImporterImplManagedPollingImporterImpl', 200, Body, ValidatorState) ->
    validate_response_body('comDayCqPollingImporterImplManagedPollingImporterImplInfo', 'comDayCqPollingImporterImplManagedPollingImporterImplInfo', Body, ValidatorState);
validate_response('ComDayCqPollingImporterImplManagedPollingImporterImpl', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComDayCqPollingImporterImplManagedPollingImporterImpl', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComDayCqPollingImporterImplPollingImporterImpl', 200, Body, ValidatorState) ->
    validate_response_body('comDayCqPollingImporterImplPollingImporterImplInfo', 'comDayCqPollingImporterImplPollingImporterImplInfo', Body, ValidatorState);
validate_response('ComDayCqPollingImporterImplPollingImporterImpl', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComDayCqPollingImporterImplPollingImporterImpl', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComDayCqReplicationAuditReplicationEventListener', 200, Body, ValidatorState) ->
    validate_response_body('comDayCqReplicationAuditReplicationEventListenerInfo', 'comDayCqReplicationAuditReplicationEventListenerInfo', Body, ValidatorState);
validate_response('ComDayCqReplicationAuditReplicationEventListener', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComDayCqReplicationAuditReplicationEventListener', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComDayCqReplicationContentStaticContentBuilder', 200, Body, ValidatorState) ->
    validate_response_body('comDayCqReplicationContentStaticContentBuilderInfo', 'comDayCqReplicationContentStaticContentBuilderInfo', Body, ValidatorState);
validate_response('ComDayCqReplicationContentStaticContentBuilder', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComDayCqReplicationContentStaticContentBuilder', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComDayCqReplicationImplAgentManagerImpl', 200, Body, ValidatorState) ->
    validate_response_body('comDayCqReplicationImplAgentManagerImplInfo', 'comDayCqReplicationImplAgentManagerImplInfo', Body, ValidatorState);
validate_response('ComDayCqReplicationImplAgentManagerImpl', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComDayCqReplicationImplAgentManagerImpl', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComDayCqReplicationImplContentDurboBinaryLessContentBuilder', 200, Body, ValidatorState) ->
    validate_response_body('comDayCqReplicationImplContentDurboBinaryLessContentBuilderInfo', 'comDayCqReplicationImplContentDurboBinaryLessContentBuilderInfo', Body, ValidatorState);
validate_response('ComDayCqReplicationImplContentDurboBinaryLessContentBuilder', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComDayCqReplicationImplContentDurboBinaryLessContentBuilder', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComDayCqReplicationImplContentDurboDurboImportConfigurationProv', 200, Body, ValidatorState) ->
    validate_response_body('comDayCqReplicationImplContentDurboDurboImportConfigurationProvInfo', 'comDayCqReplicationImplContentDurboDurboImportConfigurationProvInfo', Body, ValidatorState);
validate_response('ComDayCqReplicationImplContentDurboDurboImportConfigurationProv', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComDayCqReplicationImplContentDurboDurboImportConfigurationProv', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComDayCqReplicationImplReplicationContentFactoryProviderImpl', 200, Body, ValidatorState) ->
    validate_response_body('comDayCqReplicationImplReplicationContentFactoryProviderImplInfo', 'comDayCqReplicationImplReplicationContentFactoryProviderImplInfo', Body, ValidatorState);
validate_response('ComDayCqReplicationImplReplicationContentFactoryProviderImpl', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComDayCqReplicationImplReplicationContentFactoryProviderImpl', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComDayCqReplicationImplReplicationReceiverImpl', 200, Body, ValidatorState) ->
    validate_response_body('comDayCqReplicationImplReplicationReceiverImplInfo', 'comDayCqReplicationImplReplicationReceiverImplInfo', Body, ValidatorState);
validate_response('ComDayCqReplicationImplReplicationReceiverImpl', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComDayCqReplicationImplReplicationReceiverImpl', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComDayCqReplicationImplReplicatorImpl', 200, Body, ValidatorState) ->
    validate_response_body('comDayCqReplicationImplReplicatorImplInfo', 'comDayCqReplicationImplReplicatorImplInfo', Body, ValidatorState);
validate_response('ComDayCqReplicationImplReplicatorImpl', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComDayCqReplicationImplReplicatorImpl', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComDayCqReplicationImplReverseReplicator', 200, Body, ValidatorState) ->
    validate_response_body('comDayCqReplicationImplReverseReplicatorInfo', 'comDayCqReplicationImplReverseReplicatorInfo', Body, ValidatorState);
validate_response('ComDayCqReplicationImplReverseReplicator', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComDayCqReplicationImplReverseReplicator', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComDayCqReplicationImplTransportBinaryLessTransportHandler', 200, Body, ValidatorState) ->
    validate_response_body('comDayCqReplicationImplTransportBinaryLessTransportHandlerInfo', 'comDayCqReplicationImplTransportBinaryLessTransportHandlerInfo', Body, ValidatorState);
validate_response('ComDayCqReplicationImplTransportBinaryLessTransportHandler', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComDayCqReplicationImplTransportBinaryLessTransportHandler', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComDayCqReplicationImplTransportHttp', 200, Body, ValidatorState) ->
    validate_response_body('comDayCqReplicationImplTransportHttpInfo', 'comDayCqReplicationImplTransportHttpInfo', Body, ValidatorState);
validate_response('ComDayCqReplicationImplTransportHttp', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComDayCqReplicationImplTransportHttp', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComDayCqReportingImplCacheCacheImpl', 200, Body, ValidatorState) ->
    validate_response_body('comDayCqReportingImplCacheCacheImplInfo', 'comDayCqReportingImplCacheCacheImplInfo', Body, ValidatorState);
validate_response('ComDayCqReportingImplCacheCacheImpl', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComDayCqReportingImplCacheCacheImpl', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComDayCqReportingImplConfigServiceImpl', 200, Body, ValidatorState) ->
    validate_response_body('comDayCqReportingImplConfigServiceImplInfo', 'comDayCqReportingImplConfigServiceImplInfo', Body, ValidatorState);
validate_response('ComDayCqReportingImplConfigServiceImpl', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComDayCqReportingImplConfigServiceImpl', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComDayCqReportingImplRLogAnalyzer', 200, Body, ValidatorState) ->
    validate_response_body('comDayCqReportingImplRLogAnalyzerInfo', 'comDayCqReportingImplRLogAnalyzerInfo', Body, ValidatorState);
validate_response('ComDayCqReportingImplRLogAnalyzer', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComDayCqReportingImplRLogAnalyzer', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComDayCqRewriterLinkcheckerImplLinkCheckerImpl', 200, Body, ValidatorState) ->
    validate_response_body('comDayCqRewriterLinkcheckerImplLinkCheckerImplInfo', 'comDayCqRewriterLinkcheckerImplLinkCheckerImplInfo', Body, ValidatorState);
validate_response('ComDayCqRewriterLinkcheckerImplLinkCheckerImpl', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComDayCqRewriterLinkcheckerImplLinkCheckerImpl', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComDayCqRewriterLinkcheckerImplLinkCheckerTask', 200, Body, ValidatorState) ->
    validate_response_body('comDayCqRewriterLinkcheckerImplLinkCheckerTaskInfo', 'comDayCqRewriterLinkcheckerImplLinkCheckerTaskInfo', Body, ValidatorState);
validate_response('ComDayCqRewriterLinkcheckerImplLinkCheckerTask', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComDayCqRewriterLinkcheckerImplLinkCheckerTask', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComDayCqRewriterLinkcheckerImplLinkCheckerTransformerFactory', 200, Body, ValidatorState) ->
    validate_response_body('comDayCqRewriterLinkcheckerImplLinkCheckerTransformerFactoryInfo', 'comDayCqRewriterLinkcheckerImplLinkCheckerTransformerFactoryInfo', Body, ValidatorState);
validate_response('ComDayCqRewriterLinkcheckerImplLinkCheckerTransformerFactory', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComDayCqRewriterLinkcheckerImplLinkCheckerTransformerFactory', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComDayCqRewriterLinkcheckerImplLinkInfoStorageImpl', 200, Body, ValidatorState) ->
    validate_response_body('comDayCqRewriterLinkcheckerImplLinkInfoStorageImplInfo', 'comDayCqRewriterLinkcheckerImplLinkInfoStorageImplInfo', Body, ValidatorState);
validate_response('ComDayCqRewriterLinkcheckerImplLinkInfoStorageImpl', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComDayCqRewriterLinkcheckerImplLinkInfoStorageImpl', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComDayCqRewriterProcessorImplHtmlParserFactory', 200, Body, ValidatorState) ->
    validate_response_body('comDayCqRewriterProcessorImplHtmlParserFactoryInfo', 'comDayCqRewriterProcessorImplHtmlParserFactoryInfo', Body, ValidatorState);
validate_response('ComDayCqRewriterProcessorImplHtmlParserFactory', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComDayCqRewriterProcessorImplHtmlParserFactory', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComDayCqSearchImplBuilderQueryBuilderImpl', 200, Body, ValidatorState) ->
    validate_response_body('comDayCqSearchImplBuilderQueryBuilderImplInfo', 'comDayCqSearchImplBuilderQueryBuilderImplInfo', Body, ValidatorState);
validate_response('ComDayCqSearchImplBuilderQueryBuilderImpl', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComDayCqSearchImplBuilderQueryBuilderImpl', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComDayCqSearchSuggestImplSuggestionIndexManagerImpl', 200, Body, ValidatorState) ->
    validate_response_body('comDayCqSearchSuggestImplSuggestionIndexManagerImplInfo', 'comDayCqSearchSuggestImplSuggestionIndexManagerImplInfo', Body, ValidatorState);
validate_response('ComDayCqSearchSuggestImplSuggestionIndexManagerImpl', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComDayCqSearchSuggestImplSuggestionIndexManagerImpl', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComDayCqSearchpromoteImplPublishSearchPromoteConfigHandler', 200, Body, ValidatorState) ->
    validate_response_body('comDayCqSearchpromoteImplPublishSearchPromoteConfigHandlerInfo', 'comDayCqSearchpromoteImplPublishSearchPromoteConfigHandlerInfo', Body, ValidatorState);
validate_response('ComDayCqSearchpromoteImplPublishSearchPromoteConfigHandler', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComDayCqSearchpromoteImplPublishSearchPromoteConfigHandler', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComDayCqSearchpromoteImplSearchPromoteServiceImpl', 200, Body, ValidatorState) ->
    validate_response_body('comDayCqSearchpromoteImplSearchPromoteServiceImplInfo', 'comDayCqSearchpromoteImplSearchPromoteServiceImplInfo', Body, ValidatorState);
validate_response('ComDayCqSearchpromoteImplSearchPromoteServiceImpl', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComDayCqSearchpromoteImplSearchPromoteServiceImpl', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComDayCqSecurityACLSetup', 200, Body, ValidatorState) ->
    validate_response_body('comDayCqSecurityACLSetupInfo', 'comDayCqSecurityACLSetupInfo', Body, ValidatorState);
validate_response('ComDayCqSecurityACLSetup', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComDayCqSecurityACLSetup', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComDayCqStatisticsImplStatisticsServiceImpl', 200, Body, ValidatorState) ->
    validate_response_body('comDayCqStatisticsImplStatisticsServiceImplInfo', 'comDayCqStatisticsImplStatisticsServiceImplInfo', Body, ValidatorState);
validate_response('ComDayCqStatisticsImplStatisticsServiceImpl', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComDayCqStatisticsImplStatisticsServiceImpl', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComDayCqTaggingImplJcrTagManagerFactoryImpl', 200, Body, ValidatorState) ->
    validate_response_body('comDayCqTaggingImplJcrTagManagerFactoryImplInfo', 'comDayCqTaggingImplJcrTagManagerFactoryImplInfo', Body, ValidatorState);
validate_response('ComDayCqTaggingImplJcrTagManagerFactoryImpl', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComDayCqTaggingImplJcrTagManagerFactoryImpl', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComDayCqTaggingImplSearchTagPredicateEvaluator', 200, Body, ValidatorState) ->
    validate_response_body('comDayCqTaggingImplSearchTagPredicateEvaluatorInfo', 'comDayCqTaggingImplSearchTagPredicateEvaluatorInfo', Body, ValidatorState);
validate_response('ComDayCqTaggingImplSearchTagPredicateEvaluator', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComDayCqTaggingImplSearchTagPredicateEvaluator', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComDayCqTaggingImplTagGarbageCollector', 200, Body, ValidatorState) ->
    validate_response_body('comDayCqTaggingImplTagGarbageCollectorInfo', 'comDayCqTaggingImplTagGarbageCollectorInfo', Body, ValidatorState);
validate_response('ComDayCqTaggingImplTagGarbageCollector', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComDayCqTaggingImplTagGarbageCollector', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComDayCqWcmContentsyncImplHandlerPagesUpdateHandler', 200, Body, ValidatorState) ->
    validate_response_body('comDayCqWcmContentsyncImplHandlerPagesUpdateHandlerInfo', 'comDayCqWcmContentsyncImplHandlerPagesUpdateHandlerInfo', Body, ValidatorState);
validate_response('ComDayCqWcmContentsyncImplHandlerPagesUpdateHandler', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComDayCqWcmContentsyncImplHandlerPagesUpdateHandler', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComDayCqWcmContentsyncImplRewriterPathRewriterTransformerFactor', 200, Body, ValidatorState) ->
    validate_response_body('comDayCqWcmContentsyncImplRewriterPathRewriterTransformerFactorInfo', 'comDayCqWcmContentsyncImplRewriterPathRewriterTransformerFactorInfo', Body, ValidatorState);
validate_response('ComDayCqWcmContentsyncImplRewriterPathRewriterTransformerFactor', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComDayCqWcmContentsyncImplRewriterPathRewriterTransformerFactor', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComDayCqWcmCoreImplAuthoringUIModeServiceImpl', 200, Body, ValidatorState) ->
    validate_response_body('comDayCqWcmCoreImplAuthoringUIModeServiceImplInfo', 'comDayCqWcmCoreImplAuthoringUIModeServiceImplInfo', Body, ValidatorState);
validate_response('ComDayCqWcmCoreImplAuthoringUIModeServiceImpl', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComDayCqWcmCoreImplAuthoringUIModeServiceImpl', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComDayCqWcmCoreImplCommandsWCMCommandServlet', 200, Body, ValidatorState) ->
    validate_response_body('comDayCqWcmCoreImplCommandsWCMCommandServletInfo', 'comDayCqWcmCoreImplCommandsWCMCommandServletInfo', Body, ValidatorState);
validate_response('ComDayCqWcmCoreImplCommandsWCMCommandServlet', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComDayCqWcmCoreImplCommandsWCMCommandServlet', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComDayCqWcmCoreImplDevicedetectionDeviceIdentificationModeImpl', 200, Body, ValidatorState) ->
    validate_response_body('comDayCqWcmCoreImplDevicedetectionDeviceIdentificationModeImplInfo', 'comDayCqWcmCoreImplDevicedetectionDeviceIdentificationModeImplInfo', Body, ValidatorState);
validate_response('ComDayCqWcmCoreImplDevicedetectionDeviceIdentificationModeImpl', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComDayCqWcmCoreImplDevicedetectionDeviceIdentificationModeImpl', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComDayCqWcmCoreImplEventPageEventAuditListener', 200, Body, ValidatorState) ->
    validate_response_body('comDayCqWcmCoreImplEventPageEventAuditListenerInfo', 'comDayCqWcmCoreImplEventPageEventAuditListenerInfo', Body, ValidatorState);
validate_response('ComDayCqWcmCoreImplEventPageEventAuditListener', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComDayCqWcmCoreImplEventPageEventAuditListener', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComDayCqWcmCoreImplEventPagePostProcessor', 200, Body, ValidatorState) ->
    validate_response_body('comDayCqWcmCoreImplEventPagePostProcessorInfo', 'comDayCqWcmCoreImplEventPagePostProcessorInfo', Body, ValidatorState);
validate_response('ComDayCqWcmCoreImplEventPagePostProcessor', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComDayCqWcmCoreImplEventPagePostProcessor', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComDayCqWcmCoreImplEventRepositoryChangeEventListener', 200, Body, ValidatorState) ->
    validate_response_body('comDayCqWcmCoreImplEventRepositoryChangeEventListenerInfo', 'comDayCqWcmCoreImplEventRepositoryChangeEventListenerInfo', Body, ValidatorState);
validate_response('ComDayCqWcmCoreImplEventRepositoryChangeEventListener', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComDayCqWcmCoreImplEventRepositoryChangeEventListener', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComDayCqWcmCoreImplEventTemplatePostProcessor', 200, Body, ValidatorState) ->
    validate_response_body('comDayCqWcmCoreImplEventTemplatePostProcessorInfo', 'comDayCqWcmCoreImplEventTemplatePostProcessorInfo', Body, ValidatorState);
validate_response('ComDayCqWcmCoreImplEventTemplatePostProcessor', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComDayCqWcmCoreImplEventTemplatePostProcessor', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComDayCqWcmCoreImplLanguageManagerImpl', 200, Body, ValidatorState) ->
    validate_response_body('comDayCqWcmCoreImplLanguageManagerImplInfo', 'comDayCqWcmCoreImplLanguageManagerImplInfo', Body, ValidatorState);
validate_response('ComDayCqWcmCoreImplLanguageManagerImpl', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComDayCqWcmCoreImplLanguageManagerImpl', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComDayCqWcmCoreImplLinkCheckerConfigurationFactoryImpl', 200, Body, ValidatorState) ->
    validate_response_body('comDayCqWcmCoreImplLinkCheckerConfigurationFactoryImplInfo', 'comDayCqWcmCoreImplLinkCheckerConfigurationFactoryImplInfo', Body, ValidatorState);
validate_response('ComDayCqWcmCoreImplLinkCheckerConfigurationFactoryImpl', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComDayCqWcmCoreImplLinkCheckerConfigurationFactoryImpl', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComDayCqWcmCoreImplPagePageInfoAggregatorImpl', 200, Body, ValidatorState) ->
    validate_response_body('comDayCqWcmCoreImplPagePageInfoAggregatorImplInfo', 'comDayCqWcmCoreImplPagePageInfoAggregatorImplInfo', Body, ValidatorState);
validate_response('ComDayCqWcmCoreImplPagePageInfoAggregatorImpl', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComDayCqWcmCoreImplPagePageInfoAggregatorImpl', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComDayCqWcmCoreImplPagePageManagerFactoryImpl', 200, Body, ValidatorState) ->
    validate_response_body('comDayCqWcmCoreImplPagePageManagerFactoryImplInfo', 'comDayCqWcmCoreImplPagePageManagerFactoryImplInfo', Body, ValidatorState);
validate_response('ComDayCqWcmCoreImplPagePageManagerFactoryImpl', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComDayCqWcmCoreImplPagePageManagerFactoryImpl', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComDayCqWcmCoreImplReferencesContentContentReferenceConfig', 200, Body, ValidatorState) ->
    validate_response_body('comDayCqWcmCoreImplReferencesContentContentReferenceConfigInfo', 'comDayCqWcmCoreImplReferencesContentContentReferenceConfigInfo', Body, ValidatorState);
validate_response('ComDayCqWcmCoreImplReferencesContentContentReferenceConfig', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComDayCqWcmCoreImplReferencesContentContentReferenceConfig', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComDayCqWcmCoreImplServletsContentfinderAssetViewHandler', 200, Body, ValidatorState) ->
    validate_response_body('comDayCqWcmCoreImplServletsContentfinderAssetViewHandlerInfo', 'comDayCqWcmCoreImplServletsContentfinderAssetViewHandlerInfo', Body, ValidatorState);
validate_response('ComDayCqWcmCoreImplServletsContentfinderAssetViewHandler', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComDayCqWcmCoreImplServletsContentfinderAssetViewHandler', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComDayCqWcmCoreImplServletsContentfinderConnectorConnectorVie', 200, Body, ValidatorState) ->
    validate_response_body('comDayCqWcmCoreImplServletsContentfinderConnectorConnectorVieInfo', 'comDayCqWcmCoreImplServletsContentfinderConnectorConnectorVieInfo', Body, ValidatorState);
validate_response('ComDayCqWcmCoreImplServletsContentfinderConnectorConnectorVie', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComDayCqWcmCoreImplServletsContentfinderConnectorConnectorVie', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComDayCqWcmCoreImplServletsContentfinderPageViewHandler', 200, Body, ValidatorState) ->
    validate_response_body('comDayCqWcmCoreImplServletsContentfinderPageViewHandlerInfo', 'comDayCqWcmCoreImplServletsContentfinderPageViewHandlerInfo', Body, ValidatorState);
validate_response('ComDayCqWcmCoreImplServletsContentfinderPageViewHandler', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComDayCqWcmCoreImplServletsContentfinderPageViewHandler', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComDayCqWcmCoreImplServletsFindReplaceServlet', 200, Body, ValidatorState) ->
    validate_response_body('comDayCqWcmCoreImplServletsFindReplaceServletInfo', 'comDayCqWcmCoreImplServletsFindReplaceServletInfo', Body, ValidatorState);
validate_response('ComDayCqWcmCoreImplServletsFindReplaceServlet', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComDayCqWcmCoreImplServletsFindReplaceServlet', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComDayCqWcmCoreImplServletsReferenceSearchServlet', 200, Body, ValidatorState) ->
    validate_response_body('comDayCqWcmCoreImplServletsReferenceSearchServletInfo', 'comDayCqWcmCoreImplServletsReferenceSearchServletInfo', Body, ValidatorState);
validate_response('ComDayCqWcmCoreImplServletsReferenceSearchServlet', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComDayCqWcmCoreImplServletsReferenceSearchServlet', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComDayCqWcmCoreImplServletsThumbnailServlet', 200, Body, ValidatorState) ->
    validate_response_body('comDayCqWcmCoreImplServletsThumbnailServletInfo', 'comDayCqWcmCoreImplServletsThumbnailServletInfo', Body, ValidatorState);
validate_response('ComDayCqWcmCoreImplServletsThumbnailServlet', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComDayCqWcmCoreImplServletsThumbnailServlet', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComDayCqWcmCoreImplUtilsDefaultPageNameValidator', 200, Body, ValidatorState) ->
    validate_response_body('comDayCqWcmCoreImplUtilsDefaultPageNameValidatorInfo', 'comDayCqWcmCoreImplUtilsDefaultPageNameValidatorInfo', Body, ValidatorState);
validate_response('ComDayCqWcmCoreImplUtilsDefaultPageNameValidator', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComDayCqWcmCoreImplUtilsDefaultPageNameValidator', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComDayCqWcmCoreImplVariantsPageVariantsProviderImpl', 200, Body, ValidatorState) ->
    validate_response_body('comDayCqWcmCoreImplVariantsPageVariantsProviderImplInfo', 'comDayCqWcmCoreImplVariantsPageVariantsProviderImplInfo', Body, ValidatorState);
validate_response('ComDayCqWcmCoreImplVariantsPageVariantsProviderImpl', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComDayCqWcmCoreImplVariantsPageVariantsProviderImpl', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComDayCqWcmCoreImplVersionManagerImpl', 200, Body, ValidatorState) ->
    validate_response_body('comDayCqWcmCoreImplVersionManagerImplInfo', 'comDayCqWcmCoreImplVersionManagerImplInfo', Body, ValidatorState);
validate_response('ComDayCqWcmCoreImplVersionManagerImpl', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComDayCqWcmCoreImplVersionManagerImpl', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComDayCqWcmCoreImplVersionPurgeTask', 200, Body, ValidatorState) ->
    validate_response_body('comDayCqWcmCoreImplVersionPurgeTaskInfo', 'comDayCqWcmCoreImplVersionPurgeTaskInfo', Body, ValidatorState);
validate_response('ComDayCqWcmCoreImplVersionPurgeTask', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComDayCqWcmCoreImplVersionPurgeTask', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComDayCqWcmCoreImplWCMDebugFilter', 200, Body, ValidatorState) ->
    validate_response_body('comDayCqWcmCoreImplWCMDebugFilterInfo', 'comDayCqWcmCoreImplWCMDebugFilterInfo', Body, ValidatorState);
validate_response('ComDayCqWcmCoreImplWCMDebugFilter', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComDayCqWcmCoreImplWCMDebugFilter', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComDayCqWcmCoreImplWCMDeveloperModeFilter', 200, Body, ValidatorState) ->
    validate_response_body('comDayCqWcmCoreImplWCMDeveloperModeFilterInfo', 'comDayCqWcmCoreImplWCMDeveloperModeFilterInfo', Body, ValidatorState);
validate_response('ComDayCqWcmCoreImplWCMDeveloperModeFilter', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComDayCqWcmCoreImplWCMDeveloperModeFilter', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComDayCqWcmCoreImplWarpTimeWarpFilter', 200, Body, ValidatorState) ->
    validate_response_body('comDayCqWcmCoreImplWarpTimeWarpFilterInfo', 'comDayCqWcmCoreImplWarpTimeWarpFilterInfo', Body, ValidatorState);
validate_response('ComDayCqWcmCoreImplWarpTimeWarpFilter', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComDayCqWcmCoreImplWarpTimeWarpFilter', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComDayCqWcmCoreMvtMVTStatisticsImpl', 200, Body, ValidatorState) ->
    validate_response_body('comDayCqWcmCoreMvtMVTStatisticsImplInfo', 'comDayCqWcmCoreMvtMVTStatisticsImplInfo', Body, ValidatorState);
validate_response('ComDayCqWcmCoreMvtMVTStatisticsImpl', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComDayCqWcmCoreMvtMVTStatisticsImpl', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComDayCqWcmCoreStatsPageViewStatisticsImpl', 200, Body, ValidatorState) ->
    validate_response_body('comDayCqWcmCoreStatsPageViewStatisticsImplInfo', 'comDayCqWcmCoreStatsPageViewStatisticsImplInfo', Body, ValidatorState);
validate_response('ComDayCqWcmCoreStatsPageViewStatisticsImpl', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComDayCqWcmCoreStatsPageViewStatisticsImpl', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComDayCqWcmCoreWCMRequestFilter', 200, Body, ValidatorState) ->
    validate_response_body('comDayCqWcmCoreWCMRequestFilterInfo', 'comDayCqWcmCoreWCMRequestFilterInfo', Body, ValidatorState);
validate_response('ComDayCqWcmCoreWCMRequestFilter', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComDayCqWcmCoreWCMRequestFilter', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComDayCqWcmDesignimporterDesignPackageImporter', 200, Body, ValidatorState) ->
    validate_response_body('comDayCqWcmDesignimporterDesignPackageImporterInfo', 'comDayCqWcmDesignimporterDesignPackageImporterInfo', Body, ValidatorState);
validate_response('ComDayCqWcmDesignimporterDesignPackageImporter', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComDayCqWcmDesignimporterDesignPackageImporter', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComDayCqWcmDesignimporterImplCanvasBuilderImpl', 200, Body, ValidatorState) ->
    validate_response_body('comDayCqWcmDesignimporterImplCanvasBuilderImplInfo', 'comDayCqWcmDesignimporterImplCanvasBuilderImplInfo', Body, ValidatorState);
validate_response('ComDayCqWcmDesignimporterImplCanvasBuilderImpl', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComDayCqWcmDesignimporterImplCanvasBuilderImpl', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComDayCqWcmDesignimporterImplCanvasPageDeleteHandler', 200, Body, ValidatorState) ->
    validate_response_body('comDayCqWcmDesignimporterImplCanvasPageDeleteHandlerInfo', 'comDayCqWcmDesignimporterImplCanvasPageDeleteHandlerInfo', Body, ValidatorState);
validate_response('ComDayCqWcmDesignimporterImplCanvasPageDeleteHandler', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComDayCqWcmDesignimporterImplCanvasPageDeleteHandler', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComDayCqWcmDesignimporterImplEntryPreprocessorImpl', 200, Body, ValidatorState) ->
    validate_response_body('comDayCqWcmDesignimporterImplEntryPreprocessorImplInfo', 'comDayCqWcmDesignimporterImplEntryPreprocessorImplInfo', Body, ValidatorState);
validate_response('ComDayCqWcmDesignimporterImplEntryPreprocessorImpl', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComDayCqWcmDesignimporterImplEntryPreprocessorImpl', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComDayCqWcmDesignimporterImplMobileCanvasBuilderImpl', 200, Body, ValidatorState) ->
    validate_response_body('comDayCqWcmDesignimporterImplMobileCanvasBuilderImplInfo', 'comDayCqWcmDesignimporterImplMobileCanvasBuilderImplInfo', Body, ValidatorState);
validate_response('ComDayCqWcmDesignimporterImplMobileCanvasBuilderImpl', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComDayCqWcmDesignimporterImplMobileCanvasBuilderImpl', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComDayCqWcmDesignimporterParserTaghandlersFactoryCanvasCompone', 200, Body, ValidatorState) ->
    validate_response_body('comDayCqWcmDesignimporterParserTaghandlersFactoryCanvasComponeInfo', 'comDayCqWcmDesignimporterParserTaghandlersFactoryCanvasComponeInfo', Body, ValidatorState);
validate_response('ComDayCqWcmDesignimporterParserTaghandlersFactoryCanvasCompone', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComDayCqWcmDesignimporterParserTaghandlersFactoryCanvasCompone', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComDayCqWcmDesignimporterParserTaghandlersFactoryDefaultCompon', 200, Body, ValidatorState) ->
    validate_response_body('comDayCqWcmDesignimporterParserTaghandlersFactoryDefaultComponInfo', 'comDayCqWcmDesignimporterParserTaghandlersFactoryDefaultComponInfo', Body, ValidatorState);
validate_response('ComDayCqWcmDesignimporterParserTaghandlersFactoryDefaultCompon', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComDayCqWcmDesignimporterParserTaghandlersFactoryDefaultCompon', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComDayCqWcmDesignimporterParserTaghandlersFactoryDefaultTagHan', 200, Body, ValidatorState) ->
    validate_response_body('comDayCqWcmDesignimporterParserTaghandlersFactoryDefaultTagHanInfo', 'comDayCqWcmDesignimporterParserTaghandlersFactoryDefaultTagHanInfo', Body, ValidatorState);
validate_response('ComDayCqWcmDesignimporterParserTaghandlersFactoryDefaultTagHan', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComDayCqWcmDesignimporterParserTaghandlersFactoryDefaultTagHan', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComDayCqWcmDesignimporterParserTaghandlersFactoryHeadTagHandle', 200, Body, ValidatorState) ->
    validate_response_body('comDayCqWcmDesignimporterParserTaghandlersFactoryHeadTagHandleInfo', 'comDayCqWcmDesignimporterParserTaghandlersFactoryHeadTagHandleInfo', Body, ValidatorState);
validate_response('ComDayCqWcmDesignimporterParserTaghandlersFactoryHeadTagHandle', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComDayCqWcmDesignimporterParserTaghandlersFactoryHeadTagHandle', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComDayCqWcmDesignimporterParserTaghandlersFactoryIFrameTagHand', 200, Body, ValidatorState) ->
    validate_response_body('comDayCqWcmDesignimporterParserTaghandlersFactoryIFrameTagHandInfo', 'comDayCqWcmDesignimporterParserTaghandlersFactoryIFrameTagHandInfo', Body, ValidatorState);
validate_response('ComDayCqWcmDesignimporterParserTaghandlersFactoryIFrameTagHand', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComDayCqWcmDesignimporterParserTaghandlersFactoryIFrameTagHand', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComDayCqWcmDesignimporterParserTaghandlersFactoryImageComponen', 200, Body, ValidatorState) ->
    validate_response_body('comDayCqWcmDesignimporterParserTaghandlersFactoryImageComponenInfo', 'comDayCqWcmDesignimporterParserTaghandlersFactoryImageComponenInfo', Body, ValidatorState);
validate_response('ComDayCqWcmDesignimporterParserTaghandlersFactoryImageComponen', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComDayCqWcmDesignimporterParserTaghandlersFactoryImageComponen', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComDayCqWcmDesignimporterParserTaghandlersFactoryImgTagHandler', 200, Body, ValidatorState) ->
    validate_response_body('comDayCqWcmDesignimporterParserTaghandlersFactoryImgTagHandlerInfo', 'comDayCqWcmDesignimporterParserTaghandlersFactoryImgTagHandlerInfo', Body, ValidatorState);
validate_response('ComDayCqWcmDesignimporterParserTaghandlersFactoryImgTagHandler', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComDayCqWcmDesignimporterParserTaghandlersFactoryImgTagHandler', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComDayCqWcmDesignimporterParserTaghandlersFactoryInlineScriptT', 200, Body, ValidatorState) ->
    validate_response_body('comDayCqWcmDesignimporterParserTaghandlersFactoryInlineScriptTInfo', 'comDayCqWcmDesignimporterParserTaghandlersFactoryInlineScriptTInfo', Body, ValidatorState);
validate_response('ComDayCqWcmDesignimporterParserTaghandlersFactoryInlineScriptT', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComDayCqWcmDesignimporterParserTaghandlersFactoryInlineScriptT', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComDayCqWcmDesignimporterParserTaghandlersFactoryLinkTagHandle', 200, Body, ValidatorState) ->
    validate_response_body('comDayCqWcmDesignimporterParserTaghandlersFactoryLinkTagHandleInfo', 'comDayCqWcmDesignimporterParserTaghandlersFactoryLinkTagHandleInfo', Body, ValidatorState);
validate_response('ComDayCqWcmDesignimporterParserTaghandlersFactoryLinkTagHandle', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComDayCqWcmDesignimporterParserTaghandlersFactoryLinkTagHandle', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComDayCqWcmDesignimporterParserTaghandlersFactoryMetaTagHandle', 200, Body, ValidatorState) ->
    validate_response_body('comDayCqWcmDesignimporterParserTaghandlersFactoryMetaTagHandleInfo', 'comDayCqWcmDesignimporterParserTaghandlersFactoryMetaTagHandleInfo', Body, ValidatorState);
validate_response('ComDayCqWcmDesignimporterParserTaghandlersFactoryMetaTagHandle', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComDayCqWcmDesignimporterParserTaghandlersFactoryMetaTagHandle', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComDayCqWcmDesignimporterParserTaghandlersFactoryNonScriptTagH', 200, Body, ValidatorState) ->
    validate_response_body('comDayCqWcmDesignimporterParserTaghandlersFactoryNonScriptTagHInfo', 'comDayCqWcmDesignimporterParserTaghandlersFactoryNonScriptTagHInfo', Body, ValidatorState);
validate_response('ComDayCqWcmDesignimporterParserTaghandlersFactoryNonScriptTagH', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComDayCqWcmDesignimporterParserTaghandlersFactoryNonScriptTagH', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComDayCqWcmDesignimporterParserTaghandlersFactoryParsysCompone', 200, Body, ValidatorState) ->
    validate_response_body('comDayCqWcmDesignimporterParserTaghandlersFactoryParsysComponeInfo', 'comDayCqWcmDesignimporterParserTaghandlersFactoryParsysComponeInfo', Body, ValidatorState);
validate_response('ComDayCqWcmDesignimporterParserTaghandlersFactoryParsysCompone', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComDayCqWcmDesignimporterParserTaghandlersFactoryParsysCompone', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComDayCqWcmDesignimporterParserTaghandlersFactoryScriptTagHand', 200, Body, ValidatorState) ->
    validate_response_body('comDayCqWcmDesignimporterParserTaghandlersFactoryScriptTagHandInfo', 'comDayCqWcmDesignimporterParserTaghandlersFactoryScriptTagHandInfo', Body, ValidatorState);
validate_response('ComDayCqWcmDesignimporterParserTaghandlersFactoryScriptTagHand', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComDayCqWcmDesignimporterParserTaghandlersFactoryScriptTagHand', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComDayCqWcmDesignimporterParserTaghandlersFactoryStyleTagHandl', 200, Body, ValidatorState) ->
    validate_response_body('comDayCqWcmDesignimporterParserTaghandlersFactoryStyleTagHandlInfo', 'comDayCqWcmDesignimporterParserTaghandlersFactoryStyleTagHandlInfo', Body, ValidatorState);
validate_response('ComDayCqWcmDesignimporterParserTaghandlersFactoryStyleTagHandl', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComDayCqWcmDesignimporterParserTaghandlersFactoryStyleTagHandl', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComDayCqWcmDesignimporterParserTaghandlersFactoryTextComponent', 200, Body, ValidatorState) ->
    validate_response_body('comDayCqWcmDesignimporterParserTaghandlersFactoryTextComponentInfo', 'comDayCqWcmDesignimporterParserTaghandlersFactoryTextComponentInfo', Body, ValidatorState);
validate_response('ComDayCqWcmDesignimporterParserTaghandlersFactoryTextComponent', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComDayCqWcmDesignimporterParserTaghandlersFactoryTextComponent', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComDayCqWcmDesignimporterParserTaghandlersFactoryTitleComponen', 200, Body, ValidatorState) ->
    validate_response_body('comDayCqWcmDesignimporterParserTaghandlersFactoryTitleComponenInfo', 'comDayCqWcmDesignimporterParserTaghandlersFactoryTitleComponenInfo', Body, ValidatorState);
validate_response('ComDayCqWcmDesignimporterParserTaghandlersFactoryTitleComponen', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComDayCqWcmDesignimporterParserTaghandlersFactoryTitleComponen', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComDayCqWcmDesignimporterParserTaghandlersFactoryTitleTagHandl', 200, Body, ValidatorState) ->
    validate_response_body('comDayCqWcmDesignimporterParserTaghandlersFactoryTitleTagHandlInfo', 'comDayCqWcmDesignimporterParserTaghandlersFactoryTitleTagHandlInfo', Body, ValidatorState);
validate_response('ComDayCqWcmDesignimporterParserTaghandlersFactoryTitleTagHandl', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComDayCqWcmDesignimporterParserTaghandlersFactoryTitleTagHandl', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComDayCqWcmFoundationFormsImplFormChooserServlet', 200, Body, ValidatorState) ->
    validate_response_body('comDayCqWcmFoundationFormsImplFormChooserServletInfo', 'comDayCqWcmFoundationFormsImplFormChooserServletInfo', Body, ValidatorState);
validate_response('ComDayCqWcmFoundationFormsImplFormChooserServlet', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComDayCqWcmFoundationFormsImplFormChooserServlet', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComDayCqWcmFoundationFormsImplFormParagraphPostProcessor', 200, Body, ValidatorState) ->
    validate_response_body('comDayCqWcmFoundationFormsImplFormParagraphPostProcessorInfo', 'comDayCqWcmFoundationFormsImplFormParagraphPostProcessorInfo', Body, ValidatorState);
validate_response('ComDayCqWcmFoundationFormsImplFormParagraphPostProcessor', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComDayCqWcmFoundationFormsImplFormParagraphPostProcessor', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComDayCqWcmFoundationFormsImplFormsHandlingServlet', 200, Body, ValidatorState) ->
    validate_response_body('comDayCqWcmFoundationFormsImplFormsHandlingServletInfo', 'comDayCqWcmFoundationFormsImplFormsHandlingServletInfo', Body, ValidatorState);
validate_response('ComDayCqWcmFoundationFormsImplFormsHandlingServlet', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComDayCqWcmFoundationFormsImplFormsHandlingServlet', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComDayCqWcmFoundationFormsImplMailServlet', 200, Body, ValidatorState) ->
    validate_response_body('comDayCqWcmFoundationFormsImplMailServletInfo', 'comDayCqWcmFoundationFormsImplMailServletInfo', Body, ValidatorState);
validate_response('ComDayCqWcmFoundationFormsImplMailServlet', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComDayCqWcmFoundationFormsImplMailServlet', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComDayCqWcmFoundationImplAdaptiveImageComponentServlet', 200, Body, ValidatorState) ->
    validate_response_body('comDayCqWcmFoundationImplAdaptiveImageComponentServletInfo', 'comDayCqWcmFoundationImplAdaptiveImageComponentServletInfo', Body, ValidatorState);
validate_response('ComDayCqWcmFoundationImplAdaptiveImageComponentServlet', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComDayCqWcmFoundationImplAdaptiveImageComponentServlet', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComDayCqWcmFoundationImplHTTPAuthHandler', 200, Body, ValidatorState) ->
    validate_response_body('comDayCqWcmFoundationImplHTTPAuthHandlerInfo', 'comDayCqWcmFoundationImplHTTPAuthHandlerInfo', Body, ValidatorState);
validate_response('ComDayCqWcmFoundationImplHTTPAuthHandler', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComDayCqWcmFoundationImplHTTPAuthHandler', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComDayCqWcmFoundationImplPageImpressionsTracker', 200, Body, ValidatorState) ->
    validate_response_body('comDayCqWcmFoundationImplPageImpressionsTrackerInfo', 'comDayCqWcmFoundationImplPageImpressionsTrackerInfo', Body, ValidatorState);
validate_response('ComDayCqWcmFoundationImplPageImpressionsTracker', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComDayCqWcmFoundationImplPageImpressionsTracker', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComDayCqWcmFoundationImplPageRedirectServlet', 200, Body, ValidatorState) ->
    validate_response_body('comDayCqWcmFoundationImplPageRedirectServletInfo', 'comDayCqWcmFoundationImplPageRedirectServletInfo', Body, ValidatorState);
validate_response('ComDayCqWcmFoundationImplPageRedirectServlet', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComDayCqWcmFoundationImplPageRedirectServlet', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComDayCqWcmFoundationSecurityImplDefaultAttachmentTypeBlacklist', 200, Body, ValidatorState) ->
    validate_response_body('comDayCqWcmFoundationSecurityImplDefaultAttachmentTypeBlacklistInfo', 'comDayCqWcmFoundationSecurityImplDefaultAttachmentTypeBlacklistInfo', Body, ValidatorState);
validate_response('ComDayCqWcmFoundationSecurityImplDefaultAttachmentTypeBlacklist', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComDayCqWcmFoundationSecurityImplDefaultAttachmentTypeBlacklist', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComDayCqWcmFoundationSecurityImplSaferSlingPostValidatorImpl', 200, Body, ValidatorState) ->
    validate_response_body('comDayCqWcmFoundationSecurityImplSaferSlingPostValidatorImplInfo', 'comDayCqWcmFoundationSecurityImplSaferSlingPostValidatorImplInfo', Body, ValidatorState);
validate_response('ComDayCqWcmFoundationSecurityImplSaferSlingPostValidatorImpl', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComDayCqWcmFoundationSecurityImplSaferSlingPostValidatorImpl', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComDayCqWcmMobileCoreImplDeviceDeviceInfoTransformerFactory', 200, Body, ValidatorState) ->
    validate_response_body('comDayCqWcmMobileCoreImplDeviceDeviceInfoTransformerFactoryInfo', 'comDayCqWcmMobileCoreImplDeviceDeviceInfoTransformerFactoryInfo', Body, ValidatorState);
validate_response('ComDayCqWcmMobileCoreImplDeviceDeviceInfoTransformerFactory', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComDayCqWcmMobileCoreImplDeviceDeviceInfoTransformerFactory', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComDayCqWcmMobileCoreImplRedirectRedirectFilter', 200, Body, ValidatorState) ->
    validate_response_body('comDayCqWcmMobileCoreImplRedirectRedirectFilterInfo', 'comDayCqWcmMobileCoreImplRedirectRedirectFilterInfo', Body, ValidatorState);
validate_response('ComDayCqWcmMobileCoreImplRedirectRedirectFilter', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComDayCqWcmMobileCoreImplRedirectRedirectFilter', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComDayCqWcmMsmImplActionsContentCopyActionFactory', 200, Body, ValidatorState) ->
    validate_response_body('comDayCqWcmMsmImplActionsContentCopyActionFactoryInfo', 'comDayCqWcmMsmImplActionsContentCopyActionFactoryInfo', Body, ValidatorState);
validate_response('ComDayCqWcmMsmImplActionsContentCopyActionFactory', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComDayCqWcmMsmImplActionsContentCopyActionFactory', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComDayCqWcmMsmImplActionsContentDeleteActionFactory', 200, Body, ValidatorState) ->
    validate_response_body('comDayCqWcmMsmImplActionsContentDeleteActionFactoryInfo', 'comDayCqWcmMsmImplActionsContentDeleteActionFactoryInfo', Body, ValidatorState);
validate_response('ComDayCqWcmMsmImplActionsContentDeleteActionFactory', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComDayCqWcmMsmImplActionsContentDeleteActionFactory', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComDayCqWcmMsmImplActionsContentUpdateActionFactory', 200, Body, ValidatorState) ->
    validate_response_body('comDayCqWcmMsmImplActionsContentUpdateActionFactoryInfo', 'comDayCqWcmMsmImplActionsContentUpdateActionFactoryInfo', Body, ValidatorState);
validate_response('ComDayCqWcmMsmImplActionsContentUpdateActionFactory', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComDayCqWcmMsmImplActionsContentUpdateActionFactory', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComDayCqWcmMsmImplActionsOrderChildrenActionFactory', 200, Body, ValidatorState) ->
    validate_response_body('comDayCqWcmMsmImplActionsOrderChildrenActionFactoryInfo', 'comDayCqWcmMsmImplActionsOrderChildrenActionFactoryInfo', Body, ValidatorState);
validate_response('ComDayCqWcmMsmImplActionsOrderChildrenActionFactory', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComDayCqWcmMsmImplActionsOrderChildrenActionFactory', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComDayCqWcmMsmImplActionsPageMoveActionFactory', 200, Body, ValidatorState) ->
    validate_response_body('comDayCqWcmMsmImplActionsPageMoveActionFactoryInfo', 'comDayCqWcmMsmImplActionsPageMoveActionFactoryInfo', Body, ValidatorState);
validate_response('ComDayCqWcmMsmImplActionsPageMoveActionFactory', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComDayCqWcmMsmImplActionsPageMoveActionFactory', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComDayCqWcmMsmImplActionsReferencesUpdateActionFactory', 200, Body, ValidatorState) ->
    validate_response_body('comDayCqWcmMsmImplActionsReferencesUpdateActionFactoryInfo', 'comDayCqWcmMsmImplActionsReferencesUpdateActionFactoryInfo', Body, ValidatorState);
validate_response('ComDayCqWcmMsmImplActionsReferencesUpdateActionFactory', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComDayCqWcmMsmImplActionsReferencesUpdateActionFactory', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComDayCqWcmMsmImplActionsVersionCopyActionFactory', 200, Body, ValidatorState) ->
    validate_response_body('comDayCqWcmMsmImplActionsVersionCopyActionFactoryInfo', 'comDayCqWcmMsmImplActionsVersionCopyActionFactoryInfo', Body, ValidatorState);
validate_response('ComDayCqWcmMsmImplActionsVersionCopyActionFactory', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComDayCqWcmMsmImplActionsVersionCopyActionFactory', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComDayCqWcmMsmImplLiveRelationshipManagerImpl', 200, Body, ValidatorState) ->
    validate_response_body('comDayCqWcmMsmImplLiveRelationshipManagerImplInfo', 'comDayCqWcmMsmImplLiveRelationshipManagerImplInfo', Body, ValidatorState);
validate_response('ComDayCqWcmMsmImplLiveRelationshipManagerImpl', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComDayCqWcmMsmImplLiveRelationshipManagerImpl', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComDayCqWcmMsmImplRolloutManagerImpl', 200, Body, ValidatorState) ->
    validate_response_body('comDayCqWcmMsmImplRolloutManagerImplInfo', 'comDayCqWcmMsmImplRolloutManagerImplInfo', Body, ValidatorState);
validate_response('ComDayCqWcmMsmImplRolloutManagerImpl', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComDayCqWcmMsmImplRolloutManagerImpl', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComDayCqWcmMsmImplServletsAuditLogServlet', 200, Body, ValidatorState) ->
    validate_response_body('comDayCqWcmMsmImplServletsAuditLogServletInfo', 'comDayCqWcmMsmImplServletsAuditLogServletInfo', Body, ValidatorState);
validate_response('ComDayCqWcmMsmImplServletsAuditLogServlet', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComDayCqWcmMsmImplServletsAuditLogServlet', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComDayCqWcmNotificationEmailImplEmailChannel', 200, Body, ValidatorState) ->
    validate_response_body('comDayCqWcmNotificationEmailImplEmailChannelInfo', 'comDayCqWcmNotificationEmailImplEmailChannelInfo', Body, ValidatorState);
validate_response('ComDayCqWcmNotificationEmailImplEmailChannel', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComDayCqWcmNotificationEmailImplEmailChannel', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComDayCqWcmNotificationImplNotificationManagerImpl', 200, Body, ValidatorState) ->
    validate_response_body('comDayCqWcmNotificationImplNotificationManagerImplInfo', 'comDayCqWcmNotificationImplNotificationManagerImplInfo', Body, ValidatorState);
validate_response('ComDayCqWcmNotificationImplNotificationManagerImpl', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComDayCqWcmNotificationImplNotificationManagerImpl', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComDayCqWcmScriptingImplBVPManager', 200, Body, ValidatorState) ->
    validate_response_body('comDayCqWcmScriptingImplBVPManagerInfo', 'comDayCqWcmScriptingImplBVPManagerInfo', Body, ValidatorState);
validate_response('ComDayCqWcmScriptingImplBVPManager', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComDayCqWcmScriptingImplBVPManager', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComDayCqWcmUndoUndoConfig', 200, Body, ValidatorState) ->
    validate_response_body('comDayCqWcmUndoUndoConfigInfo', 'comDayCqWcmUndoUndoConfigInfo', Body, ValidatorState);
validate_response('ComDayCqWcmUndoUndoConfig', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComDayCqWcmUndoUndoConfig', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComDayCqWcmWebservicesupportImplReplicationEventListener', 200, Body, ValidatorState) ->
    validate_response_body('comDayCqWcmWebservicesupportImplReplicationEventListenerInfo', 'comDayCqWcmWebservicesupportImplReplicationEventListenerInfo', Body, ValidatorState);
validate_response('ComDayCqWcmWebservicesupportImplReplicationEventListener', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComDayCqWcmWebservicesupportImplReplicationEventListener', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComDayCqWcmWorkflowImplWcmWorkflowServiceImpl', 200, Body, ValidatorState) ->
    validate_response_body('comDayCqWcmWorkflowImplWcmWorkflowServiceImplInfo', 'comDayCqWcmWorkflowImplWcmWorkflowServiceImplInfo', Body, ValidatorState);
validate_response('ComDayCqWcmWorkflowImplWcmWorkflowServiceImpl', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComDayCqWcmWorkflowImplWcmWorkflowServiceImpl', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComDayCqWcmWorkflowImplWorkflowPackageInfoProvider', 200, Body, ValidatorState) ->
    validate_response_body('comDayCqWcmWorkflowImplWorkflowPackageInfoProviderInfo', 'comDayCqWcmWorkflowImplWorkflowPackageInfoProviderInfo', Body, ValidatorState);
validate_response('ComDayCqWcmWorkflowImplWorkflowPackageInfoProvider', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComDayCqWcmWorkflowImplWorkflowPackageInfoProvider', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComDayCqWidgetImplHtmlLibraryManagerImpl', 200, Body, ValidatorState) ->
    validate_response_body('comDayCqWidgetImplHtmlLibraryManagerImplInfo', 'comDayCqWidgetImplHtmlLibraryManagerImplInfo', Body, ValidatorState);
validate_response('ComDayCqWidgetImplHtmlLibraryManagerImpl', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComDayCqWidgetImplHtmlLibraryManagerImpl', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComDayCqWidgetImplWidgetExtensionProviderImpl', 200, Body, ValidatorState) ->
    validate_response_body('comDayCqWidgetImplWidgetExtensionProviderImplInfo', 'comDayCqWidgetImplWidgetExtensionProviderImplInfo', Body, ValidatorState);
validate_response('ComDayCqWidgetImplWidgetExtensionProviderImpl', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComDayCqWidgetImplWidgetExtensionProviderImpl', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComDayCqWorkflowImplEmailEMailNotificationService', 200, Body, ValidatorState) ->
    validate_response_body('comDayCqWorkflowImplEmailEMailNotificationServiceInfo', 'comDayCqWorkflowImplEmailEMailNotificationServiceInfo', Body, ValidatorState);
validate_response('ComDayCqWorkflowImplEmailEMailNotificationService', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComDayCqWorkflowImplEmailEMailNotificationService', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComDayCqWorkflowImplEmailTaskEMailNotificationService', 200, Body, ValidatorState) ->
    validate_response_body('comDayCqWorkflowImplEmailTaskEMailNotificationServiceInfo', 'comDayCqWorkflowImplEmailTaskEMailNotificationServiceInfo', Body, ValidatorState);
validate_response('ComDayCqWorkflowImplEmailTaskEMailNotificationService', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComDayCqWorkflowImplEmailTaskEMailNotificationService', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComDayCrxSecurityTokenImplImplTokenAuthenticationHandler', 200, Body, ValidatorState) ->
    validate_response_body('comDayCrxSecurityTokenImplImplTokenAuthenticationHandlerInfo', 'comDayCrxSecurityTokenImplImplTokenAuthenticationHandlerInfo', Body, ValidatorState);
validate_response('ComDayCrxSecurityTokenImplImplTokenAuthenticationHandler', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComDayCrxSecurityTokenImplImplTokenAuthenticationHandler', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('ComDayCrxSecurityTokenImplTokenCleanupTask', 200, Body, ValidatorState) ->
    validate_response_body('comDayCrxSecurityTokenImplTokenCleanupTaskInfo', 'comDayCrxSecurityTokenImplTokenCleanupTaskInfo', Body, ValidatorState);
validate_response('ComDayCrxSecurityTokenImplTokenCleanupTask', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('ComDayCrxSecurityTokenImplTokenCleanupTask', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('GuideLocalizationService', 200, Body, ValidatorState) ->
    validate_response_body('guideLocalizationServiceInfo', 'guideLocalizationServiceInfo', Body, ValidatorState);
validate_response('GuideLocalizationService', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('GuideLocalizationService', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('MessagingUserComponentFactory', 200, Body, ValidatorState) ->
    validate_response_body('MessagingUserComponentFactoryInfo', 'MessagingUserComponentFactoryInfo', Body, ValidatorState);
validate_response('MessagingUserComponentFactory', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('MessagingUserComponentFactory', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('OrgApacheAriesJmxFrameworkStateConfig', 200, Body, ValidatorState) ->
    validate_response_body('orgApacheAriesJmxFrameworkStateConfigInfo', 'orgApacheAriesJmxFrameworkStateConfigInfo', Body, ValidatorState);
validate_response('OrgApacheAriesJmxFrameworkStateConfig', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('OrgApacheAriesJmxFrameworkStateConfig', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('OrgApacheFelixEventadminImplEventAdmin', 200, Body, ValidatorState) ->
    validate_response_body('orgApacheFelixEventadminImplEventAdminInfo', 'orgApacheFelixEventadminImplEventAdminInfo', Body, ValidatorState);
validate_response('OrgApacheFelixEventadminImplEventAdmin', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('OrgApacheFelixEventadminImplEventAdmin', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('OrgApacheFelixHttp', 200, Body, ValidatorState) ->
    validate_response_body('orgApacheFelixHttpInfo', 'orgApacheFelixHttpInfo', Body, ValidatorState);
validate_response('OrgApacheFelixHttp', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('OrgApacheFelixHttp', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('OrgApacheFelixHttpSslfilterSslFilter', 200, Body, ValidatorState) ->
    validate_response_body('orgApacheFelixHttpSslfilterSslFilterInfo', 'orgApacheFelixHttpSslfilterSslFilterInfo', Body, ValidatorState);
validate_response('OrgApacheFelixHttpSslfilterSslFilter', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('OrgApacheFelixHttpSslfilterSslFilter', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('OrgApacheFelixJaasConfigurationFactory', 200, Body, ValidatorState) ->
    validate_response_body('orgApacheFelixJaasConfigurationFactoryInfo', 'orgApacheFelixJaasConfigurationFactoryInfo', Body, ValidatorState);
validate_response('OrgApacheFelixJaasConfigurationFactory', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('OrgApacheFelixJaasConfigurationFactory', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('OrgApacheFelixJaasConfigurationSpi', 200, Body, ValidatorState) ->
    validate_response_body('orgApacheFelixJaasConfigurationSpiInfo', 'orgApacheFelixJaasConfigurationSpiInfo', Body, ValidatorState);
validate_response('OrgApacheFelixJaasConfigurationSpi', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('OrgApacheFelixJaasConfigurationSpi', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('OrgApacheFelixScrScrService', 200, Body, ValidatorState) ->
    validate_response_body('orgApacheFelixScrScrServiceInfo', 'orgApacheFelixScrScrServiceInfo', Body, ValidatorState);
validate_response('OrgApacheFelixScrScrService', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('OrgApacheFelixScrScrService', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('OrgApacheFelixSystemreadyImplComponentsCheck', 200, Body, ValidatorState) ->
    validate_response_body('orgApacheFelixSystemreadyImplComponentsCheckInfo', 'orgApacheFelixSystemreadyImplComponentsCheckInfo', Body, ValidatorState);
validate_response('OrgApacheFelixSystemreadyImplComponentsCheck', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('OrgApacheFelixSystemreadyImplComponentsCheck', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('OrgApacheFelixSystemreadyImplFrameworkStartCheck', 200, Body, ValidatorState) ->
    validate_response_body('orgApacheFelixSystemreadyImplFrameworkStartCheckInfo', 'orgApacheFelixSystemreadyImplFrameworkStartCheckInfo', Body, ValidatorState);
validate_response('OrgApacheFelixSystemreadyImplFrameworkStartCheck', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('OrgApacheFelixSystemreadyImplFrameworkStartCheck', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('OrgApacheFelixSystemreadyImplServicesCheck', 200, Body, ValidatorState) ->
    validate_response_body('orgApacheFelixSystemreadyImplServicesCheckInfo', 'orgApacheFelixSystemreadyImplServicesCheckInfo', Body, ValidatorState);
validate_response('OrgApacheFelixSystemreadyImplServicesCheck', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('OrgApacheFelixSystemreadyImplServicesCheck', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('OrgApacheFelixSystemreadyImplServletSystemAliveServlet', 200, Body, ValidatorState) ->
    validate_response_body('orgApacheFelixSystemreadyImplServletSystemAliveServletInfo', 'orgApacheFelixSystemreadyImplServletSystemAliveServletInfo', Body, ValidatorState);
validate_response('OrgApacheFelixSystemreadyImplServletSystemAliveServlet', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('OrgApacheFelixSystemreadyImplServletSystemAliveServlet', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('OrgApacheFelixSystemreadyImplServletSystemReadyServlet', 200, Body, ValidatorState) ->
    validate_response_body('orgApacheFelixSystemreadyImplServletSystemReadyServletInfo', 'orgApacheFelixSystemreadyImplServletSystemReadyServletInfo', Body, ValidatorState);
validate_response('OrgApacheFelixSystemreadyImplServletSystemReadyServlet', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('OrgApacheFelixSystemreadyImplServletSystemReadyServlet', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('OrgApacheFelixSystemreadySystemReadyMonitor', 200, Body, ValidatorState) ->
    validate_response_body('orgApacheFelixSystemreadySystemReadyMonitorInfo', 'orgApacheFelixSystemreadySystemReadyMonitorInfo', Body, ValidatorState);
validate_response('OrgApacheFelixSystemreadySystemReadyMonitor', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('OrgApacheFelixSystemreadySystemReadyMonitor', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('OrgApacheFelixWebconsoleInternalServletOsgiManager', 200, Body, ValidatorState) ->
    validate_response_body('orgApacheFelixWebconsoleInternalServletOsgiManagerInfo', 'orgApacheFelixWebconsoleInternalServletOsgiManagerInfo', Body, ValidatorState);
validate_response('OrgApacheFelixWebconsoleInternalServletOsgiManager', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('OrgApacheFelixWebconsoleInternalServletOsgiManager', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('OrgApacheFelixWebconsolePluginsEventInternalPluginServlet', 200, Body, ValidatorState) ->
    validate_response_body('orgApacheFelixWebconsolePluginsEventInternalPluginServletInfo', 'orgApacheFelixWebconsolePluginsEventInternalPluginServletInfo', Body, ValidatorState);
validate_response('OrgApacheFelixWebconsolePluginsEventInternalPluginServlet', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('OrgApacheFelixWebconsolePluginsEventInternalPluginServlet', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('OrgApacheFelixWebconsolePluginsMemoryusageInternalMemoryUsageCo', 200, Body, ValidatorState) ->
    validate_response_body('orgApacheFelixWebconsolePluginsMemoryusageInternalMemoryUsageCoInfo', 'orgApacheFelixWebconsolePluginsMemoryusageInternalMemoryUsageCoInfo', Body, ValidatorState);
validate_response('OrgApacheFelixWebconsolePluginsMemoryusageInternalMemoryUsageCo', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('OrgApacheFelixWebconsolePluginsMemoryusageInternalMemoryUsageCo', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('OrgApacheHttpProxyconfigurator', 200, Body, ValidatorState) ->
    validate_response_body('orgApacheHttpProxyconfiguratorInfo', 'orgApacheHttpProxyconfiguratorInfo', Body, ValidatorState);
validate_response('OrgApacheHttpProxyconfigurator', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('OrgApacheHttpProxyconfigurator', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('OrgApacheJackrabbitOakPluginsBlobDatastoreDataStoreTextProvider', 200, Body, ValidatorState) ->
    validate_response_body('orgApacheJackrabbitOakPluginsBlobDatastoreDataStoreTextProviderInfo', 'orgApacheJackrabbitOakPluginsBlobDatastoreDataStoreTextProviderInfo', Body, ValidatorState);
validate_response('OrgApacheJackrabbitOakPluginsBlobDatastoreDataStoreTextProvider', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('OrgApacheJackrabbitOakPluginsBlobDatastoreDataStoreTextProvider', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('OrgApacheJackrabbitOakPluginsBlobDatastoreFileDataStore', 200, Body, ValidatorState) ->
    validate_response_body('orgApacheJackrabbitOakPluginsBlobDatastoreFileDataStoreInfo', 'orgApacheJackrabbitOakPluginsBlobDatastoreFileDataStoreInfo', Body, ValidatorState);
validate_response('OrgApacheJackrabbitOakPluginsBlobDatastoreFileDataStore', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('OrgApacheJackrabbitOakPluginsBlobDatastoreFileDataStore', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('OrgApacheJackrabbitOakPluginsDocumentDocumentNodeStoreService', 200, Body, ValidatorState) ->
    validate_response_body('orgApacheJackrabbitOakPluginsDocumentDocumentNodeStoreServiceInfo', 'orgApacheJackrabbitOakPluginsDocumentDocumentNodeStoreServiceInfo', Body, ValidatorState);
validate_response('OrgApacheJackrabbitOakPluginsDocumentDocumentNodeStoreService', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('OrgApacheJackrabbitOakPluginsDocumentDocumentNodeStoreService', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('OrgApacheJackrabbitOakPluginsDocumentDocumentNodeStoreServicePre', 200, Body, ValidatorState) ->
    validate_response_body('orgApacheJackrabbitOakPluginsDocumentDocumentNodeStoreServicePreInfo', 'orgApacheJackrabbitOakPluginsDocumentDocumentNodeStoreServicePreInfo', Body, ValidatorState);
validate_response('OrgApacheJackrabbitOakPluginsDocumentDocumentNodeStoreServicePre', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('OrgApacheJackrabbitOakPluginsDocumentDocumentNodeStoreServicePre', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('OrgApacheJackrabbitOakPluginsDocumentSecondarySecondaryStoreCac', 200, Body, ValidatorState) ->
    validate_response_body('orgApacheJackrabbitOakPluginsDocumentSecondarySecondaryStoreCacInfo', 'orgApacheJackrabbitOakPluginsDocumentSecondarySecondaryStoreCacInfo', Body, ValidatorState);
validate_response('OrgApacheJackrabbitOakPluginsDocumentSecondarySecondaryStoreCac', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('OrgApacheJackrabbitOakPluginsDocumentSecondarySecondaryStoreCac', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('OrgApacheJackrabbitOakPluginsIndexAsyncIndexerService', 200, Body, ValidatorState) ->
    validate_response_body('orgApacheJackrabbitOakPluginsIndexAsyncIndexerServiceInfo', 'orgApacheJackrabbitOakPluginsIndexAsyncIndexerServiceInfo', Body, ValidatorState);
validate_response('OrgApacheJackrabbitOakPluginsIndexAsyncIndexerService', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('OrgApacheJackrabbitOakPluginsIndexAsyncIndexerService', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('OrgApacheJackrabbitOakPluginsIndexLuceneLuceneIndexProviderServ', 200, Body, ValidatorState) ->
    validate_response_body('orgApacheJackrabbitOakPluginsIndexLuceneLuceneIndexProviderServInfo', 'orgApacheJackrabbitOakPluginsIndexLuceneLuceneIndexProviderServInfo', Body, ValidatorState);
validate_response('OrgApacheJackrabbitOakPluginsIndexLuceneLuceneIndexProviderServ', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('OrgApacheJackrabbitOakPluginsIndexLuceneLuceneIndexProviderServ', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('OrgApacheJackrabbitOakPluginsIndexSolrOsgiEmbeddedSolrServerCo', 200, Body, ValidatorState) ->
    validate_response_body('orgApacheJackrabbitOakPluginsIndexSolrOsgiEmbeddedSolrServerCoInfo', 'orgApacheJackrabbitOakPluginsIndexSolrOsgiEmbeddedSolrServerCoInfo', Body, ValidatorState);
validate_response('OrgApacheJackrabbitOakPluginsIndexSolrOsgiEmbeddedSolrServerCo', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('OrgApacheJackrabbitOakPluginsIndexSolrOsgiEmbeddedSolrServerCo', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('OrgApacheJackrabbitOakPluginsIndexSolrOsgiNodeStateSolrServers', 200, Body, ValidatorState) ->
    validate_response_body('orgApacheJackrabbitOakPluginsIndexSolrOsgiNodeStateSolrServersInfo', 'orgApacheJackrabbitOakPluginsIndexSolrOsgiNodeStateSolrServersInfo', Body, ValidatorState);
validate_response('OrgApacheJackrabbitOakPluginsIndexSolrOsgiNodeStateSolrServers', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('OrgApacheJackrabbitOakPluginsIndexSolrOsgiNodeStateSolrServers', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('OrgApacheJackrabbitOakPluginsIndexSolrOsgiOakSolrConfiguration', 200, Body, ValidatorState) ->
    validate_response_body('orgApacheJackrabbitOakPluginsIndexSolrOsgiOakSolrConfigurationInfo', 'orgApacheJackrabbitOakPluginsIndexSolrOsgiOakSolrConfigurationInfo', Body, ValidatorState);
validate_response('OrgApacheJackrabbitOakPluginsIndexSolrOsgiOakSolrConfiguration', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('OrgApacheJackrabbitOakPluginsIndexSolrOsgiOakSolrConfiguration', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('OrgApacheJackrabbitOakPluginsIndexSolrOsgiRemoteSolrServerConf', 200, Body, ValidatorState) ->
    validate_response_body('orgApacheJackrabbitOakPluginsIndexSolrOsgiRemoteSolrServerConfInfo', 'orgApacheJackrabbitOakPluginsIndexSolrOsgiRemoteSolrServerConfInfo', Body, ValidatorState);
validate_response('OrgApacheJackrabbitOakPluginsIndexSolrOsgiRemoteSolrServerConf', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('OrgApacheJackrabbitOakPluginsIndexSolrOsgiRemoteSolrServerConf', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('OrgApacheJackrabbitOakPluginsIndexSolrOsgiSolrQueryIndexProvid', 200, Body, ValidatorState) ->
    validate_response_body('orgApacheJackrabbitOakPluginsIndexSolrOsgiSolrQueryIndexProvidInfo', 'orgApacheJackrabbitOakPluginsIndexSolrOsgiSolrQueryIndexProvidInfo', Body, ValidatorState);
validate_response('OrgApacheJackrabbitOakPluginsIndexSolrOsgiSolrQueryIndexProvid', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('OrgApacheJackrabbitOakPluginsIndexSolrOsgiSolrQueryIndexProvid', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('OrgApacheJackrabbitOakPluginsIndexSolrOsgiSolrServerProviderSe', 200, Body, ValidatorState) ->
    validate_response_body('orgApacheJackrabbitOakPluginsIndexSolrOsgiSolrServerProviderSeInfo', 'orgApacheJackrabbitOakPluginsIndexSolrOsgiSolrServerProviderSeInfo', Body, ValidatorState);
validate_response('OrgApacheJackrabbitOakPluginsIndexSolrOsgiSolrServerProviderSe', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('OrgApacheJackrabbitOakPluginsIndexSolrOsgiSolrServerProviderSe', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('OrgApacheJackrabbitOakPluginsMetricStatisticsProviderFactory', 200, Body, ValidatorState) ->
    validate_response_body('orgApacheJackrabbitOakPluginsMetricStatisticsProviderFactoryInfo', 'orgApacheJackrabbitOakPluginsMetricStatisticsProviderFactoryInfo', Body, ValidatorState);
validate_response('OrgApacheJackrabbitOakPluginsMetricStatisticsProviderFactory', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('OrgApacheJackrabbitOakPluginsMetricStatisticsProviderFactory', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('OrgApacheJackrabbitOakPluginsObservationChangeCollectorProvider', 200, Body, ValidatorState) ->
    validate_response_body('orgApacheJackrabbitOakPluginsObservationChangeCollectorProviderInfo', 'orgApacheJackrabbitOakPluginsObservationChangeCollectorProviderInfo', Body, ValidatorState);
validate_response('OrgApacheJackrabbitOakPluginsObservationChangeCollectorProvider', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('OrgApacheJackrabbitOakPluginsObservationChangeCollectorProvider', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('OrgApacheJackrabbitOakQueryQueryEngineSettingsService', 200, Body, ValidatorState) ->
    validate_response_body('orgApacheJackrabbitOakQueryQueryEngineSettingsServiceInfo', 'orgApacheJackrabbitOakQueryQueryEngineSettingsServiceInfo', Body, ValidatorState);
validate_response('OrgApacheJackrabbitOakQueryQueryEngineSettingsService', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('OrgApacheJackrabbitOakQueryQueryEngineSettingsService', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('OrgApacheJackrabbitOakSecurityAuthenticationAuthenticationConfig', 200, Body, ValidatorState) ->
    validate_response_body('orgApacheJackrabbitOakSecurityAuthenticationAuthenticationConfigInfo', 'orgApacheJackrabbitOakSecurityAuthenticationAuthenticationConfigInfo', Body, ValidatorState);
validate_response('OrgApacheJackrabbitOakSecurityAuthenticationAuthenticationConfig', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('OrgApacheJackrabbitOakSecurityAuthenticationAuthenticationConfig', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('OrgApacheJackrabbitOakSecurityAuthenticationLdapImplLdapIdenti', 200, Body, ValidatorState) ->
    validate_response_body('orgApacheJackrabbitOakSecurityAuthenticationLdapImplLdapIdentiInfo', 'orgApacheJackrabbitOakSecurityAuthenticationLdapImplLdapIdentiInfo', Body, ValidatorState);
validate_response('OrgApacheJackrabbitOakSecurityAuthenticationLdapImplLdapIdenti', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('OrgApacheJackrabbitOakSecurityAuthenticationLdapImplLdapIdenti', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('OrgApacheJackrabbitOakSecurityAuthenticationTokenTokenConfigura', 200, Body, ValidatorState) ->
    validate_response_body('orgApacheJackrabbitOakSecurityAuthenticationTokenTokenConfiguraInfo', 'orgApacheJackrabbitOakSecurityAuthenticationTokenTokenConfiguraInfo', Body, ValidatorState);
validate_response('OrgApacheJackrabbitOakSecurityAuthenticationTokenTokenConfigura', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('OrgApacheJackrabbitOakSecurityAuthenticationTokenTokenConfigura', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('OrgApacheJackrabbitOakSecurityAuthorizationAuthorizationConfigur', 200, Body, ValidatorState) ->
    validate_response_body('orgApacheJackrabbitOakSecurityAuthorizationAuthorizationConfigurInfo', 'orgApacheJackrabbitOakSecurityAuthorizationAuthorizationConfigurInfo', Body, ValidatorState);
validate_response('OrgApacheJackrabbitOakSecurityAuthorizationAuthorizationConfigur', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('OrgApacheJackrabbitOakSecurityAuthorizationAuthorizationConfigur', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('OrgApacheJackrabbitOakSecurityInternalSecurityProviderRegistrati', 200, Body, ValidatorState) ->
    validate_response_body('orgApacheJackrabbitOakSecurityInternalSecurityProviderRegistratiInfo', 'orgApacheJackrabbitOakSecurityInternalSecurityProviderRegistratiInfo', Body, ValidatorState);
validate_response('OrgApacheJackrabbitOakSecurityInternalSecurityProviderRegistrati', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('OrgApacheJackrabbitOakSecurityInternalSecurityProviderRegistrati', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('OrgApacheJackrabbitOakSecurityUserRandomAuthorizableNodeName', 200, Body, ValidatorState) ->
    validate_response_body('orgApacheJackrabbitOakSecurityUserRandomAuthorizableNodeNameInfo', 'orgApacheJackrabbitOakSecurityUserRandomAuthorizableNodeNameInfo', Body, ValidatorState);
validate_response('OrgApacheJackrabbitOakSecurityUserRandomAuthorizableNodeName', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('OrgApacheJackrabbitOakSecurityUserRandomAuthorizableNodeName', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('OrgApacheJackrabbitOakSecurityUserUserConfigurationImpl', 200, Body, ValidatorState) ->
    validate_response_body('orgApacheJackrabbitOakSecurityUserUserConfigurationImplInfo', 'orgApacheJackrabbitOakSecurityUserUserConfigurationImplInfo', Body, ValidatorState);
validate_response('OrgApacheJackrabbitOakSecurityUserUserConfigurationImpl', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('OrgApacheJackrabbitOakSecurityUserUserConfigurationImpl', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('OrgApacheJackrabbitOakSegmentAzureAzureSegmentStoreService', 200, Body, ValidatorState) ->
    validate_response_body('orgApacheJackrabbitOakSegmentAzureAzureSegmentStoreServiceInfo', 'orgApacheJackrabbitOakSegmentAzureAzureSegmentStoreServiceInfo', Body, ValidatorState);
validate_response('OrgApacheJackrabbitOakSegmentAzureAzureSegmentStoreService', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('OrgApacheJackrabbitOakSegmentAzureAzureSegmentStoreService', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('OrgApacheJackrabbitOakSegmentSegmentNodeStoreFactory', 200, Body, ValidatorState) ->
    validate_response_body('orgApacheJackrabbitOakSegmentSegmentNodeStoreFactoryInfo', 'orgApacheJackrabbitOakSegmentSegmentNodeStoreFactoryInfo', Body, ValidatorState);
validate_response('OrgApacheJackrabbitOakSegmentSegmentNodeStoreFactory', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('OrgApacheJackrabbitOakSegmentSegmentNodeStoreFactory', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('OrgApacheJackrabbitOakSegmentSegmentNodeStoreMonitorService', 200, Body, ValidatorState) ->
    validate_response_body('orgApacheJackrabbitOakSegmentSegmentNodeStoreMonitorServiceInfo', 'orgApacheJackrabbitOakSegmentSegmentNodeStoreMonitorServiceInfo', Body, ValidatorState);
validate_response('OrgApacheJackrabbitOakSegmentSegmentNodeStoreMonitorService', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('OrgApacheJackrabbitOakSegmentSegmentNodeStoreMonitorService', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('OrgApacheJackrabbitOakSegmentSegmentNodeStoreService', 200, Body, ValidatorState) ->
    validate_response_body('orgApacheJackrabbitOakSegmentSegmentNodeStoreServiceInfo', 'orgApacheJackrabbitOakSegmentSegmentNodeStoreServiceInfo', Body, ValidatorState);
validate_response('OrgApacheJackrabbitOakSegmentSegmentNodeStoreService', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('OrgApacheJackrabbitOakSegmentSegmentNodeStoreService', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('OrgApacheJackrabbitOakSegmentStandbyStoreStandbyStoreService', 200, Body, ValidatorState) ->
    validate_response_body('orgApacheJackrabbitOakSegmentStandbyStoreStandbyStoreServiceInfo', 'orgApacheJackrabbitOakSegmentStandbyStoreStandbyStoreServiceInfo', Body, ValidatorState);
validate_response('OrgApacheJackrabbitOakSegmentStandbyStoreStandbyStoreService', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('OrgApacheJackrabbitOakSegmentStandbyStoreStandbyStoreService', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('OrgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplDe', 200, Body, ValidatorState) ->
    validate_response_body('orgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplDeInfo', 'orgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplDeInfo', Body, ValidatorState);
validate_response('OrgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplDe', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('OrgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplDe', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('OrgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplEx', 200, Body, ValidatorState) ->
    validate_response_body('orgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplExInfo', 'orgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplExInfo', Body, ValidatorState);
validate_response('OrgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplEx', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('OrgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplEx', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('OrgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplPr', 200, Body, ValidatorState) ->
    validate_response_body('orgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplPrInfo', 'orgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplPrInfo', Body, ValidatorState);
validate_response('OrgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplPr', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('OrgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplPr', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('OrgApacheJackrabbitOakSpiSecurityAuthorizationCugImplCugConfi', 200, Body, ValidatorState) ->
    validate_response_body('orgApacheJackrabbitOakSpiSecurityAuthorizationCugImplCugConfiInfo', 'orgApacheJackrabbitOakSpiSecurityAuthorizationCugImplCugConfiInfo', Body, ValidatorState);
validate_response('OrgApacheJackrabbitOakSpiSecurityAuthorizationCugImplCugConfi', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('OrgApacheJackrabbitOakSpiSecurityAuthorizationCugImplCugConfi', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('OrgApacheJackrabbitOakSpiSecurityAuthorizationCugImplCugExclu', 200, Body, ValidatorState) ->
    validate_response_body('orgApacheJackrabbitOakSpiSecurityAuthorizationCugImplCugExcluInfo', 'orgApacheJackrabbitOakSpiSecurityAuthorizationCugImplCugExcluInfo', Body, ValidatorState);
validate_response('OrgApacheJackrabbitOakSpiSecurityAuthorizationCugImplCugExclu', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('OrgApacheJackrabbitOakSpiSecurityAuthorizationCugImplCugExclu', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('OrgApacheJackrabbitOakSpiSecurityUserActionDefaultAuthorizable', 200, Body, ValidatorState) ->
    validate_response_body('orgApacheJackrabbitOakSpiSecurityUserActionDefaultAuthorizableInfo', 'orgApacheJackrabbitOakSpiSecurityUserActionDefaultAuthorizableInfo', Body, ValidatorState);
validate_response('OrgApacheJackrabbitOakSpiSecurityUserActionDefaultAuthorizable', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('OrgApacheJackrabbitOakSpiSecurityUserActionDefaultAuthorizable', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('OrgApacheJackrabbitVaultPackagingImplPackagingImpl', 200, Body, ValidatorState) ->
    validate_response_body('orgApacheJackrabbitVaultPackagingImplPackagingImplInfo', 'orgApacheJackrabbitVaultPackagingImplPackagingImplInfo', Body, ValidatorState);
validate_response('OrgApacheJackrabbitVaultPackagingImplPackagingImpl', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('OrgApacheJackrabbitVaultPackagingImplPackagingImpl', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('OrgApacheJackrabbitVaultPackagingRegistryImplFSPackageRegistry', 200, Body, ValidatorState) ->
    validate_response_body('orgApacheJackrabbitVaultPackagingRegistryImplFSPackageRegistryInfo', 'orgApacheJackrabbitVaultPackagingRegistryImplFSPackageRegistryInfo', Body, ValidatorState);
validate_response('OrgApacheJackrabbitVaultPackagingRegistryImplFSPackageRegistry', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('OrgApacheJackrabbitVaultPackagingRegistryImplFSPackageRegistry', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('OrgApacheSlingAuthCoreImplLogoutServlet', 200, Body, ValidatorState) ->
    validate_response_body('orgApacheSlingAuthCoreImplLogoutServletInfo', 'orgApacheSlingAuthCoreImplLogoutServletInfo', Body, ValidatorState);
validate_response('OrgApacheSlingAuthCoreImplLogoutServlet', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('OrgApacheSlingAuthCoreImplLogoutServlet', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('OrgApacheSlingCaconfigImplConfigurationBindingsValueProvider', 200, Body, ValidatorState) ->
    validate_response_body('orgApacheSlingCaconfigImplConfigurationBindingsValueProviderInfo', 'orgApacheSlingCaconfigImplConfigurationBindingsValueProviderInfo', Body, ValidatorState);
validate_response('OrgApacheSlingCaconfigImplConfigurationBindingsValueProvider', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('OrgApacheSlingCaconfigImplConfigurationBindingsValueProvider', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('OrgApacheSlingCaconfigImplConfigurationResolverImpl', 200, Body, ValidatorState) ->
    validate_response_body('orgApacheSlingCaconfigImplConfigurationResolverImplInfo', 'orgApacheSlingCaconfigImplConfigurationResolverImplInfo', Body, ValidatorState);
validate_response('OrgApacheSlingCaconfigImplConfigurationResolverImpl', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('OrgApacheSlingCaconfigImplConfigurationResolverImpl', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('OrgApacheSlingCaconfigImplDefDefaultConfigurationInheritanceStra', 200, Body, ValidatorState) ->
    validate_response_body('orgApacheSlingCaconfigImplDefDefaultConfigurationInheritanceStraInfo', 'orgApacheSlingCaconfigImplDefDefaultConfigurationInheritanceStraInfo', Body, ValidatorState);
validate_response('OrgApacheSlingCaconfigImplDefDefaultConfigurationInheritanceStra', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('OrgApacheSlingCaconfigImplDefDefaultConfigurationInheritanceStra', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('OrgApacheSlingCaconfigImplDefDefaultConfigurationPersistenceStra', 200, Body, ValidatorState) ->
    validate_response_body('orgApacheSlingCaconfigImplDefDefaultConfigurationPersistenceStraInfo', 'orgApacheSlingCaconfigImplDefDefaultConfigurationPersistenceStraInfo', Body, ValidatorState);
validate_response('OrgApacheSlingCaconfigImplDefDefaultConfigurationPersistenceStra', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('OrgApacheSlingCaconfigImplDefDefaultConfigurationPersistenceStra', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('OrgApacheSlingCaconfigImplOverrideOsgiConfigurationOverrideProvi', 200, Body, ValidatorState) ->
    validate_response_body('orgApacheSlingCaconfigImplOverrideOsgiConfigurationOverrideProviInfo', 'orgApacheSlingCaconfigImplOverrideOsgiConfigurationOverrideProviInfo', Body, ValidatorState);
validate_response('OrgApacheSlingCaconfigImplOverrideOsgiConfigurationOverrideProvi', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('OrgApacheSlingCaconfigImplOverrideOsgiConfigurationOverrideProvi', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('OrgApacheSlingCaconfigImplOverrideSystemPropertyConfigurationOve', 200, Body, ValidatorState) ->
    validate_response_body('orgApacheSlingCaconfigImplOverrideSystemPropertyConfigurationOveInfo', 'orgApacheSlingCaconfigImplOverrideSystemPropertyConfigurationOveInfo', Body, ValidatorState);
validate_response('OrgApacheSlingCaconfigImplOverrideSystemPropertyConfigurationOve', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('OrgApacheSlingCaconfigImplOverrideSystemPropertyConfigurationOve', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('OrgApacheSlingCaconfigManagementImplConfigurationManagementSetti', 200, Body, ValidatorState) ->
    validate_response_body('orgApacheSlingCaconfigManagementImplConfigurationManagementSettiInfo', 'orgApacheSlingCaconfigManagementImplConfigurationManagementSettiInfo', Body, ValidatorState);
validate_response('OrgApacheSlingCaconfigManagementImplConfigurationManagementSetti', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('OrgApacheSlingCaconfigManagementImplConfigurationManagementSetti', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('OrgApacheSlingCaconfigResourceImplDefDefaultConfigurationResour', 200, Body, ValidatorState) ->
    validate_response_body('orgApacheSlingCaconfigResourceImplDefDefaultConfigurationResourInfo', 'orgApacheSlingCaconfigResourceImplDefDefaultConfigurationResourInfo', Body, ValidatorState);
validate_response('OrgApacheSlingCaconfigResourceImplDefDefaultConfigurationResour', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('OrgApacheSlingCaconfigResourceImplDefDefaultConfigurationResour', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('OrgApacheSlingCaconfigResourceImplDefDefaultContextPathStrategy', 200, Body, ValidatorState) ->
    validate_response_body('orgApacheSlingCaconfigResourceImplDefDefaultContextPathStrategyInfo', 'orgApacheSlingCaconfigResourceImplDefDefaultContextPathStrategyInfo', Body, ValidatorState);
validate_response('OrgApacheSlingCaconfigResourceImplDefDefaultContextPathStrategy', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('OrgApacheSlingCaconfigResourceImplDefDefaultContextPathStrategy', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('OrgApacheSlingCommonsHtmlInternalTagsoupHtmlParser', 200, Body, ValidatorState) ->
    validate_response_body('orgApacheSlingCommonsHtmlInternalTagsoupHtmlParserInfo', 'orgApacheSlingCommonsHtmlInternalTagsoupHtmlParserInfo', Body, ValidatorState);
validate_response('OrgApacheSlingCommonsHtmlInternalTagsoupHtmlParser', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('OrgApacheSlingCommonsHtmlInternalTagsoupHtmlParser', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('OrgApacheSlingCommonsLogLogManager', 200, Body, ValidatorState) ->
    validate_response_body('orgApacheSlingCommonsLogLogManagerInfo', 'orgApacheSlingCommonsLogLogManagerInfo', Body, ValidatorState);
validate_response('OrgApacheSlingCommonsLogLogManager', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('OrgApacheSlingCommonsLogLogManager', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('OrgApacheSlingCommonsLogLogManagerFactoryConfig', 200, Body, ValidatorState) ->
    validate_response_body('orgApacheSlingCommonsLogLogManagerFactoryConfigInfo', 'orgApacheSlingCommonsLogLogManagerFactoryConfigInfo', Body, ValidatorState);
validate_response('OrgApacheSlingCommonsLogLogManagerFactoryConfig', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('OrgApacheSlingCommonsLogLogManagerFactoryConfig', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('OrgApacheSlingCommonsLogLogManagerFactoryWriter', 200, Body, ValidatorState) ->
    validate_response_body('orgApacheSlingCommonsLogLogManagerFactoryWriterInfo', 'orgApacheSlingCommonsLogLogManagerFactoryWriterInfo', Body, ValidatorState);
validate_response('OrgApacheSlingCommonsLogLogManagerFactoryWriter', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('OrgApacheSlingCommonsLogLogManagerFactoryWriter', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('OrgApacheSlingCommonsMetricsInternalLogReporter', 200, Body, ValidatorState) ->
    validate_response_body('orgApacheSlingCommonsMetricsInternalLogReporterInfo', 'orgApacheSlingCommonsMetricsInternalLogReporterInfo', Body, ValidatorState);
validate_response('OrgApacheSlingCommonsMetricsInternalLogReporter', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('OrgApacheSlingCommonsMetricsInternalLogReporter', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('OrgApacheSlingCommonsMetricsRrd4jImplCodahaleMetricsReporter', 200, Body, ValidatorState) ->
    validate_response_body('orgApacheSlingCommonsMetricsRrd4jImplCodahaleMetricsReporterInfo', 'orgApacheSlingCommonsMetricsRrd4jImplCodahaleMetricsReporterInfo', Body, ValidatorState);
validate_response('OrgApacheSlingCommonsMetricsRrd4jImplCodahaleMetricsReporter', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('OrgApacheSlingCommonsMetricsRrd4jImplCodahaleMetricsReporter', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('OrgApacheSlingCommonsMimeInternalMimeTypeServiceImpl', 200, Body, ValidatorState) ->
    validate_response_body('orgApacheSlingCommonsMimeInternalMimeTypeServiceImplInfo', 'orgApacheSlingCommonsMimeInternalMimeTypeServiceImplInfo', Body, ValidatorState);
validate_response('OrgApacheSlingCommonsMimeInternalMimeTypeServiceImpl', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('OrgApacheSlingCommonsMimeInternalMimeTypeServiceImpl', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('OrgApacheSlingCommonsSchedulerImplQuartzScheduler', 200, Body, ValidatorState) ->
    validate_response_body('orgApacheSlingCommonsSchedulerImplQuartzSchedulerInfo', 'orgApacheSlingCommonsSchedulerImplQuartzSchedulerInfo', Body, ValidatorState);
validate_response('OrgApacheSlingCommonsSchedulerImplQuartzScheduler', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('OrgApacheSlingCommonsSchedulerImplQuartzScheduler', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('OrgApacheSlingCommonsSchedulerImplSchedulerHealthCheck', 200, Body, ValidatorState) ->
    validate_response_body('orgApacheSlingCommonsSchedulerImplSchedulerHealthCheckInfo', 'orgApacheSlingCommonsSchedulerImplSchedulerHealthCheckInfo', Body, ValidatorState);
validate_response('OrgApacheSlingCommonsSchedulerImplSchedulerHealthCheck', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('OrgApacheSlingCommonsSchedulerImplSchedulerHealthCheck', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('OrgApacheSlingCommonsThreadsImplDefaultThreadPoolFactory', 200, Body, ValidatorState) ->
    validate_response_body('orgApacheSlingCommonsThreadsImplDefaultThreadPoolFactoryInfo', 'orgApacheSlingCommonsThreadsImplDefaultThreadPoolFactoryInfo', Body, ValidatorState);
validate_response('OrgApacheSlingCommonsThreadsImplDefaultThreadPoolFactory', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('OrgApacheSlingCommonsThreadsImplDefaultThreadPoolFactory', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('OrgApacheSlingDatasourceDataSourceFactory', 200, Body, ValidatorState) ->
    validate_response_body('orgApacheSlingDatasourceDataSourceFactoryInfo', 'orgApacheSlingDatasourceDataSourceFactoryInfo', Body, ValidatorState);
validate_response('OrgApacheSlingDatasourceDataSourceFactory', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('OrgApacheSlingDatasourceDataSourceFactory', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('OrgApacheSlingDatasourceJNDIDataSourceFactory', 200, Body, ValidatorState) ->
    validate_response_body('orgApacheSlingDatasourceJNDIDataSourceFactoryInfo', 'orgApacheSlingDatasourceJNDIDataSourceFactoryInfo', Body, ValidatorState);
validate_response('OrgApacheSlingDatasourceJNDIDataSourceFactory', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('OrgApacheSlingDatasourceJNDIDataSourceFactory', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('OrgApacheSlingDiscoveryOakConfig', 200, Body, ValidatorState) ->
    validate_response_body('orgApacheSlingDiscoveryOakConfigInfo', 'orgApacheSlingDiscoveryOakConfigInfo', Body, ValidatorState);
validate_response('OrgApacheSlingDiscoveryOakConfig', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('OrgApacheSlingDiscoveryOakConfig', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('OrgApacheSlingDiscoveryOakSynchronizedClocksHealthCheck', 200, Body, ValidatorState) ->
    validate_response_body('orgApacheSlingDiscoveryOakSynchronizedClocksHealthCheckInfo', 'orgApacheSlingDiscoveryOakSynchronizedClocksHealthCheckInfo', Body, ValidatorState);
validate_response('OrgApacheSlingDiscoveryOakSynchronizedClocksHealthCheck', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('OrgApacheSlingDiscoveryOakSynchronizedClocksHealthCheck', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('OrgApacheSlingDistributionAgentImplForwardDistributionAgentFacto', 200, Body, ValidatorState) ->
    validate_response_body('orgApacheSlingDistributionAgentImplForwardDistributionAgentFactoInfo', 'orgApacheSlingDistributionAgentImplForwardDistributionAgentFactoInfo', Body, ValidatorState);
validate_response('OrgApacheSlingDistributionAgentImplForwardDistributionAgentFacto', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('OrgApacheSlingDistributionAgentImplForwardDistributionAgentFacto', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('OrgApacheSlingDistributionAgentImplPrivilegeDistributionRequestA', 200, Body, ValidatorState) ->
    validate_response_body('orgApacheSlingDistributionAgentImplPrivilegeDistributionRequestAInfo', 'orgApacheSlingDistributionAgentImplPrivilegeDistributionRequestAInfo', Body, ValidatorState);
validate_response('OrgApacheSlingDistributionAgentImplPrivilegeDistributionRequestA', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('OrgApacheSlingDistributionAgentImplPrivilegeDistributionRequestA', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('OrgApacheSlingDistributionAgentImplQueueDistributionAgentFactory', 200, Body, ValidatorState) ->
    validate_response_body('orgApacheSlingDistributionAgentImplQueueDistributionAgentFactoryInfo', 'orgApacheSlingDistributionAgentImplQueueDistributionAgentFactoryInfo', Body, ValidatorState);
validate_response('OrgApacheSlingDistributionAgentImplQueueDistributionAgentFactory', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('OrgApacheSlingDistributionAgentImplQueueDistributionAgentFactory', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('OrgApacheSlingDistributionAgentImplReverseDistributionAgentFacto', 200, Body, ValidatorState) ->
    validate_response_body('orgApacheSlingDistributionAgentImplReverseDistributionAgentFactoInfo', 'orgApacheSlingDistributionAgentImplReverseDistributionAgentFactoInfo', Body, ValidatorState);
validate_response('OrgApacheSlingDistributionAgentImplReverseDistributionAgentFacto', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('OrgApacheSlingDistributionAgentImplReverseDistributionAgentFacto', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('OrgApacheSlingDistributionAgentImplSimpleDistributionAgentFactor', 200, Body, ValidatorState) ->
    validate_response_body('orgApacheSlingDistributionAgentImplSimpleDistributionAgentFactorInfo', 'orgApacheSlingDistributionAgentImplSimpleDistributionAgentFactorInfo', Body, ValidatorState);
validate_response('OrgApacheSlingDistributionAgentImplSimpleDistributionAgentFactor', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('OrgApacheSlingDistributionAgentImplSimpleDistributionAgentFactor', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('OrgApacheSlingDistributionAgentImplSyncDistributionAgentFactory', 200, Body, ValidatorState) ->
    validate_response_body('orgApacheSlingDistributionAgentImplSyncDistributionAgentFactoryInfo', 'orgApacheSlingDistributionAgentImplSyncDistributionAgentFactoryInfo', Body, ValidatorState);
validate_response('OrgApacheSlingDistributionAgentImplSyncDistributionAgentFactory', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('OrgApacheSlingDistributionAgentImplSyncDistributionAgentFactory', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('OrgApacheSlingDistributionMonitorDistributionQueueHealthCheck', 200, Body, ValidatorState) ->
    validate_response_body('orgApacheSlingDistributionMonitorDistributionQueueHealthCheckInfo', 'orgApacheSlingDistributionMonitorDistributionQueueHealthCheckInfo', Body, ValidatorState);
validate_response('OrgApacheSlingDistributionMonitorDistributionQueueHealthCheck', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('OrgApacheSlingDistributionMonitorDistributionQueueHealthCheck', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('OrgApacheSlingDistributionPackagingImplExporterAgentDistributio', 200, Body, ValidatorState) ->
    validate_response_body('orgApacheSlingDistributionPackagingImplExporterAgentDistributioInfo', 'orgApacheSlingDistributionPackagingImplExporterAgentDistributioInfo', Body, ValidatorState);
validate_response('OrgApacheSlingDistributionPackagingImplExporterAgentDistributio', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('OrgApacheSlingDistributionPackagingImplExporterAgentDistributio', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('OrgApacheSlingDistributionPackagingImplExporterLocalDistributio', 200, Body, ValidatorState) ->
    validate_response_body('orgApacheSlingDistributionPackagingImplExporterLocalDistributioInfo', 'orgApacheSlingDistributionPackagingImplExporterLocalDistributioInfo', Body, ValidatorState);
validate_response('OrgApacheSlingDistributionPackagingImplExporterLocalDistributio', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('OrgApacheSlingDistributionPackagingImplExporterLocalDistributio', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('OrgApacheSlingDistributionPackagingImplExporterRemoteDistributi', 200, Body, ValidatorState) ->
    validate_response_body('orgApacheSlingDistributionPackagingImplExporterRemoteDistributiInfo', 'orgApacheSlingDistributionPackagingImplExporterRemoteDistributiInfo', Body, ValidatorState);
validate_response('OrgApacheSlingDistributionPackagingImplExporterRemoteDistributi', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('OrgApacheSlingDistributionPackagingImplExporterRemoteDistributi', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('OrgApacheSlingDistributionPackagingImplImporterLocalDistributio', 200, Body, ValidatorState) ->
    validate_response_body('orgApacheSlingDistributionPackagingImplImporterLocalDistributioInfo', 'orgApacheSlingDistributionPackagingImplImporterLocalDistributioInfo', Body, ValidatorState);
validate_response('OrgApacheSlingDistributionPackagingImplImporterLocalDistributio', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('OrgApacheSlingDistributionPackagingImplImporterLocalDistributio', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('OrgApacheSlingDistributionPackagingImplImporterRemoteDistributi', 200, Body, ValidatorState) ->
    validate_response_body('orgApacheSlingDistributionPackagingImplImporterRemoteDistributiInfo', 'orgApacheSlingDistributionPackagingImplImporterRemoteDistributiInfo', Body, ValidatorState);
validate_response('OrgApacheSlingDistributionPackagingImplImporterRemoteDistributi', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('OrgApacheSlingDistributionPackagingImplImporterRemoteDistributi', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('OrgApacheSlingDistributionPackagingImplImporterRepositoryDistri', 200, Body, ValidatorState) ->
    validate_response_body('orgApacheSlingDistributionPackagingImplImporterRepositoryDistriInfo', 'orgApacheSlingDistributionPackagingImplImporterRepositoryDistriInfo', Body, ValidatorState);
validate_response('OrgApacheSlingDistributionPackagingImplImporterRepositoryDistri', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('OrgApacheSlingDistributionPackagingImplImporterRepositoryDistri', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('OrgApacheSlingDistributionResourcesImplDistributionConfiguration', 200, Body, ValidatorState) ->
    validate_response_body('orgApacheSlingDistributionResourcesImplDistributionConfigurationInfo', 'orgApacheSlingDistributionResourcesImplDistributionConfigurationInfo', Body, ValidatorState);
validate_response('OrgApacheSlingDistributionResourcesImplDistributionConfiguration', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('OrgApacheSlingDistributionResourcesImplDistributionConfiguration', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('OrgApacheSlingDistributionResourcesImplDistributionServiceResour', 200, Body, ValidatorState) ->
    validate_response_body('orgApacheSlingDistributionResourcesImplDistributionServiceResourInfo', 'orgApacheSlingDistributionResourcesImplDistributionServiceResourInfo', Body, ValidatorState);
validate_response('OrgApacheSlingDistributionResourcesImplDistributionServiceResour', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('OrgApacheSlingDistributionResourcesImplDistributionServiceResour', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('OrgApacheSlingDistributionSerializationImplDistributionPackageBu', 200, Body, ValidatorState) ->
    validate_response_body('orgApacheSlingDistributionSerializationImplDistributionPackageBuInfo', 'orgApacheSlingDistributionSerializationImplDistributionPackageBuInfo', Body, ValidatorState);
validate_response('OrgApacheSlingDistributionSerializationImplDistributionPackageBu', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('OrgApacheSlingDistributionSerializationImplDistributionPackageBu', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('OrgApacheSlingDistributionSerializationImplVltVaultDistribution', 200, Body, ValidatorState) ->
    validate_response_body('orgApacheSlingDistributionSerializationImplVltVaultDistributionInfo', 'orgApacheSlingDistributionSerializationImplVltVaultDistributionInfo', Body, ValidatorState);
validate_response('OrgApacheSlingDistributionSerializationImplVltVaultDistribution', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('OrgApacheSlingDistributionSerializationImplVltVaultDistribution', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('OrgApacheSlingDistributionTransportImplUserCredentialsDistributi', 200, Body, ValidatorState) ->
    validate_response_body('orgApacheSlingDistributionTransportImplUserCredentialsDistributiInfo', 'orgApacheSlingDistributionTransportImplUserCredentialsDistributiInfo', Body, ValidatorState);
validate_response('OrgApacheSlingDistributionTransportImplUserCredentialsDistributi', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('OrgApacheSlingDistributionTransportImplUserCredentialsDistributi', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('OrgApacheSlingDistributionTriggerImplDistributionEventDistribute', 200, Body, ValidatorState) ->
    validate_response_body('orgApacheSlingDistributionTriggerImplDistributionEventDistributeInfo', 'orgApacheSlingDistributionTriggerImplDistributionEventDistributeInfo', Body, ValidatorState);
validate_response('OrgApacheSlingDistributionTriggerImplDistributionEventDistribute', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('OrgApacheSlingDistributionTriggerImplDistributionEventDistribute', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('OrgApacheSlingDistributionTriggerImplJcrEventDistributionTrigger', 200, Body, ValidatorState) ->
    validate_response_body('orgApacheSlingDistributionTriggerImplJcrEventDistributionTriggerInfo', 'orgApacheSlingDistributionTriggerImplJcrEventDistributionTriggerInfo', Body, ValidatorState);
validate_response('OrgApacheSlingDistributionTriggerImplJcrEventDistributionTrigger', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('OrgApacheSlingDistributionTriggerImplJcrEventDistributionTrigger', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('OrgApacheSlingDistributionTriggerImplPersistedJcrEventDistributi', 200, Body, ValidatorState) ->
    validate_response_body('orgApacheSlingDistributionTriggerImplPersistedJcrEventDistributiInfo', 'orgApacheSlingDistributionTriggerImplPersistedJcrEventDistributiInfo', Body, ValidatorState);
validate_response('OrgApacheSlingDistributionTriggerImplPersistedJcrEventDistributi', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('OrgApacheSlingDistributionTriggerImplPersistedJcrEventDistributi', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('OrgApacheSlingDistributionTriggerImplRemoteEventDistributionTrig', 200, Body, ValidatorState) ->
    validate_response_body('orgApacheSlingDistributionTriggerImplRemoteEventDistributionTrigInfo', 'orgApacheSlingDistributionTriggerImplRemoteEventDistributionTrigInfo', Body, ValidatorState);
validate_response('OrgApacheSlingDistributionTriggerImplRemoteEventDistributionTrig', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('OrgApacheSlingDistributionTriggerImplRemoteEventDistributionTrig', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('OrgApacheSlingDistributionTriggerImplResourceEventDistributionTr', 200, Body, ValidatorState) ->
    validate_response_body('orgApacheSlingDistributionTriggerImplResourceEventDistributionTrInfo', 'orgApacheSlingDistributionTriggerImplResourceEventDistributionTrInfo', Body, ValidatorState);
validate_response('OrgApacheSlingDistributionTriggerImplResourceEventDistributionTr', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('OrgApacheSlingDistributionTriggerImplResourceEventDistributionTr', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('OrgApacheSlingDistributionTriggerImplScheduledDistributionTrigge', 200, Body, ValidatorState) ->
    validate_response_body('orgApacheSlingDistributionTriggerImplScheduledDistributionTriggeInfo', 'orgApacheSlingDistributionTriggerImplScheduledDistributionTriggeInfo', Body, ValidatorState);
validate_response('OrgApacheSlingDistributionTriggerImplScheduledDistributionTrigge', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('OrgApacheSlingDistributionTriggerImplScheduledDistributionTrigge', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('OrgApacheSlingEngineImplAuthSlingAuthenticator', 200, Body, ValidatorState) ->
    validate_response_body('orgApacheSlingEngineImplAuthSlingAuthenticatorInfo', 'orgApacheSlingEngineImplAuthSlingAuthenticatorInfo', Body, ValidatorState);
validate_response('OrgApacheSlingEngineImplAuthSlingAuthenticator', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('OrgApacheSlingEngineImplAuthSlingAuthenticator', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('OrgApacheSlingEngineImplDebugRequestProgressTrackerLogFilter', 200, Body, ValidatorState) ->
    validate_response_body('orgApacheSlingEngineImplDebugRequestProgressTrackerLogFilterInfo', 'orgApacheSlingEngineImplDebugRequestProgressTrackerLogFilterInfo', Body, ValidatorState);
validate_response('OrgApacheSlingEngineImplDebugRequestProgressTrackerLogFilter', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('OrgApacheSlingEngineImplDebugRequestProgressTrackerLogFilter', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('OrgApacheSlingEngineImplLogRequestLogger', 200, Body, ValidatorState) ->
    validate_response_body('orgApacheSlingEngineImplLogRequestLoggerInfo', 'orgApacheSlingEngineImplLogRequestLoggerInfo', Body, ValidatorState);
validate_response('OrgApacheSlingEngineImplLogRequestLogger', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('OrgApacheSlingEngineImplLogRequestLogger', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('OrgApacheSlingEngineImplLogRequestLoggerService', 200, Body, ValidatorState) ->
    validate_response_body('orgApacheSlingEngineImplLogRequestLoggerServiceInfo', 'orgApacheSlingEngineImplLogRequestLoggerServiceInfo', Body, ValidatorState);
validate_response('OrgApacheSlingEngineImplLogRequestLoggerService', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('OrgApacheSlingEngineImplLogRequestLoggerService', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('OrgApacheSlingEngineImplSlingMainServlet', 200, Body, ValidatorState) ->
    validate_response_body('orgApacheSlingEngineImplSlingMainServletInfo', 'orgApacheSlingEngineImplSlingMainServletInfo', Body, ValidatorState);
validate_response('OrgApacheSlingEngineImplSlingMainServlet', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('OrgApacheSlingEngineImplSlingMainServlet', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('OrgApacheSlingEngineParameters', 200, Body, ValidatorState) ->
    validate_response_body('orgApacheSlingEngineParametersInfo', 'orgApacheSlingEngineParametersInfo', Body, ValidatorState);
validate_response('OrgApacheSlingEngineParameters', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('OrgApacheSlingEngineParameters', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('OrgApacheSlingEventImplEventingThreadPool', 200, Body, ValidatorState) ->
    validate_response_body('orgApacheSlingEventImplEventingThreadPoolInfo', 'orgApacheSlingEventImplEventingThreadPoolInfo', Body, ValidatorState);
validate_response('OrgApacheSlingEventImplEventingThreadPool', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('OrgApacheSlingEventImplEventingThreadPool', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('OrgApacheSlingEventImplJobsDefaultJobManager', 200, Body, ValidatorState) ->
    validate_response_body('orgApacheSlingEventImplJobsDefaultJobManagerInfo', 'orgApacheSlingEventImplJobsDefaultJobManagerInfo', Body, ValidatorState);
validate_response('OrgApacheSlingEventImplJobsDefaultJobManager', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('OrgApacheSlingEventImplJobsDefaultJobManager', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('OrgApacheSlingEventImplJobsJcrPersistenceHandler', 200, Body, ValidatorState) ->
    validate_response_body('orgApacheSlingEventImplJobsJcrPersistenceHandlerInfo', 'orgApacheSlingEventImplJobsJcrPersistenceHandlerInfo', Body, ValidatorState);
validate_response('OrgApacheSlingEventImplJobsJcrPersistenceHandler', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('OrgApacheSlingEventImplJobsJcrPersistenceHandler', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('OrgApacheSlingEventImplJobsJobConsumerManager', 200, Body, ValidatorState) ->
    validate_response_body('orgApacheSlingEventImplJobsJobConsumerManagerInfo', 'orgApacheSlingEventImplJobsJobConsumerManagerInfo', Body, ValidatorState);
validate_response('OrgApacheSlingEventImplJobsJobConsumerManager', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('OrgApacheSlingEventImplJobsJobConsumerManager', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('OrgApacheSlingEventJobsQueueConfiguration', 200, Body, ValidatorState) ->
    validate_response_body('orgApacheSlingEventJobsQueueConfigurationInfo', 'orgApacheSlingEventJobsQueueConfigurationInfo', Body, ValidatorState);
validate_response('OrgApacheSlingEventJobsQueueConfiguration', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('OrgApacheSlingEventJobsQueueConfiguration', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('OrgApacheSlingExtensionsWebconsolesecurityproviderInternalSlingW', 200, Body, ValidatorState) ->
    validate_response_body('orgApacheSlingExtensionsWebconsolesecurityproviderInternalSlingWInfo', 'orgApacheSlingExtensionsWebconsolesecurityproviderInternalSlingWInfo', Body, ValidatorState);
validate_response('OrgApacheSlingExtensionsWebconsolesecurityproviderInternalSlingW', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('OrgApacheSlingExtensionsWebconsolesecurityproviderInternalSlingW', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('OrgApacheSlingFeatureflagsFeature', 200, Body, ValidatorState) ->
    validate_response_body('orgApacheSlingFeatureflagsFeatureInfo', 'orgApacheSlingFeatureflagsFeatureInfo', Body, ValidatorState);
validate_response('OrgApacheSlingFeatureflagsFeature', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('OrgApacheSlingFeatureflagsFeature', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('OrgApacheSlingFeatureflagsImplConfiguredFeature', 200, Body, ValidatorState) ->
    validate_response_body('orgApacheSlingFeatureflagsImplConfiguredFeatureInfo', 'orgApacheSlingFeatureflagsImplConfiguredFeatureInfo', Body, ValidatorState);
validate_response('OrgApacheSlingFeatureflagsImplConfiguredFeature', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('OrgApacheSlingFeatureflagsImplConfiguredFeature', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('OrgApacheSlingHapiImplHApiUtilImpl', 200, Body, ValidatorState) ->
    validate_response_body('orgApacheSlingHapiImplHApiUtilImplInfo', 'orgApacheSlingHapiImplHApiUtilImplInfo', Body, ValidatorState);
validate_response('OrgApacheSlingHapiImplHApiUtilImpl', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('OrgApacheSlingHapiImplHApiUtilImpl', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('OrgApacheSlingHcCoreImplCompositeHealthCheck', 200, Body, ValidatorState) ->
    validate_response_body('orgApacheSlingHcCoreImplCompositeHealthCheckInfo', 'orgApacheSlingHcCoreImplCompositeHealthCheckInfo', Body, ValidatorState);
validate_response('OrgApacheSlingHcCoreImplCompositeHealthCheck', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('OrgApacheSlingHcCoreImplCompositeHealthCheck', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('OrgApacheSlingHcCoreImplExecutorHealthCheckExecutorImpl', 200, Body, ValidatorState) ->
    validate_response_body('orgApacheSlingHcCoreImplExecutorHealthCheckExecutorImplInfo', 'orgApacheSlingHcCoreImplExecutorHealthCheckExecutorImplInfo', Body, ValidatorState);
validate_response('OrgApacheSlingHcCoreImplExecutorHealthCheckExecutorImpl', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('OrgApacheSlingHcCoreImplExecutorHealthCheckExecutorImpl', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('OrgApacheSlingHcCoreImplJmxAttributeHealthCheck', 200, Body, ValidatorState) ->
    validate_response_body('orgApacheSlingHcCoreImplJmxAttributeHealthCheckInfo', 'orgApacheSlingHcCoreImplJmxAttributeHealthCheckInfo', Body, ValidatorState);
validate_response('OrgApacheSlingHcCoreImplJmxAttributeHealthCheck', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('OrgApacheSlingHcCoreImplJmxAttributeHealthCheck', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('OrgApacheSlingHcCoreImplScriptableHealthCheck', 200, Body, ValidatorState) ->
    validate_response_body('orgApacheSlingHcCoreImplScriptableHealthCheckInfo', 'orgApacheSlingHcCoreImplScriptableHealthCheckInfo', Body, ValidatorState);
validate_response('OrgApacheSlingHcCoreImplScriptableHealthCheck', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('OrgApacheSlingHcCoreImplScriptableHealthCheck', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('OrgApacheSlingHcCoreImplServletHealthCheckExecutorServlet', 200, Body, ValidatorState) ->
    validate_response_body('orgApacheSlingHcCoreImplServletHealthCheckExecutorServletInfo', 'orgApacheSlingHcCoreImplServletHealthCheckExecutorServletInfo', Body, ValidatorState);
validate_response('OrgApacheSlingHcCoreImplServletHealthCheckExecutorServlet', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('OrgApacheSlingHcCoreImplServletHealthCheckExecutorServlet', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('OrgApacheSlingHcCoreImplServletResultTxtVerboseSerializer', 200, Body, ValidatorState) ->
    validate_response_body('orgApacheSlingHcCoreImplServletResultTxtVerboseSerializerInfo', 'orgApacheSlingHcCoreImplServletResultTxtVerboseSerializerInfo', Body, ValidatorState);
validate_response('OrgApacheSlingHcCoreImplServletResultTxtVerboseSerializer', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('OrgApacheSlingHcCoreImplServletResultTxtVerboseSerializer', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('OrgApacheSlingI18nImplI18NFilter', 200, Body, ValidatorState) ->
    validate_response_body('orgApacheSlingI18nImplI18NFilterInfo', 'orgApacheSlingI18nImplI18NFilterInfo', Body, ValidatorState);
validate_response('OrgApacheSlingI18nImplI18NFilter', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('OrgApacheSlingI18nImplI18NFilter', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('OrgApacheSlingI18nImplJcrResourceBundleProvider', 200, Body, ValidatorState) ->
    validate_response_body('orgApacheSlingI18nImplJcrResourceBundleProviderInfo', 'orgApacheSlingI18nImplJcrResourceBundleProviderInfo', Body, ValidatorState);
validate_response('OrgApacheSlingI18nImplJcrResourceBundleProvider', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('OrgApacheSlingI18nImplJcrResourceBundleProvider', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('OrgApacheSlingInstallerProviderJcrImplJcrInstaller', 200, Body, ValidatorState) ->
    validate_response_body('orgApacheSlingInstallerProviderJcrImplJcrInstallerInfo', 'orgApacheSlingInstallerProviderJcrImplJcrInstallerInfo', Body, ValidatorState);
validate_response('OrgApacheSlingInstallerProviderJcrImplJcrInstaller', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('OrgApacheSlingInstallerProviderJcrImplJcrInstaller', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('OrgApacheSlingJcrBaseInternalLoginAdminWhitelist', 200, Body, ValidatorState) ->
    validate_response_body('orgApacheSlingJcrBaseInternalLoginAdminWhitelistInfo', 'orgApacheSlingJcrBaseInternalLoginAdminWhitelistInfo', Body, ValidatorState);
validate_response('OrgApacheSlingJcrBaseInternalLoginAdminWhitelist', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('OrgApacheSlingJcrBaseInternalLoginAdminWhitelist', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('OrgApacheSlingJcrBaseInternalLoginAdminWhitelistFragment', 200, Body, ValidatorState) ->
    validate_response_body('orgApacheSlingJcrBaseInternalLoginAdminWhitelistFragmentInfo', 'orgApacheSlingJcrBaseInternalLoginAdminWhitelistFragmentInfo', Body, ValidatorState);
validate_response('OrgApacheSlingJcrBaseInternalLoginAdminWhitelistFragment', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('OrgApacheSlingJcrBaseInternalLoginAdminWhitelistFragment', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('OrgApacheSlingJcrDavexImplServletsSlingDavExServlet', 200, Body, ValidatorState) ->
    validate_response_body('orgApacheSlingJcrDavexImplServletsSlingDavExServletInfo', 'orgApacheSlingJcrDavexImplServletsSlingDavExServletInfo', Body, ValidatorState);
validate_response('OrgApacheSlingJcrDavexImplServletsSlingDavExServlet', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('OrgApacheSlingJcrDavexImplServletsSlingDavExServlet', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('OrgApacheSlingJcrJackrabbitServerJndiRegistrationSupport', 200, Body, ValidatorState) ->
    validate_response_body('orgApacheSlingJcrJackrabbitServerJndiRegistrationSupportInfo', 'orgApacheSlingJcrJackrabbitServerJndiRegistrationSupportInfo', Body, ValidatorState);
validate_response('OrgApacheSlingJcrJackrabbitServerJndiRegistrationSupport', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('OrgApacheSlingJcrJackrabbitServerJndiRegistrationSupport', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('OrgApacheSlingJcrJackrabbitServerRmiRegistrationSupport', 200, Body, ValidatorState) ->
    validate_response_body('orgApacheSlingJcrJackrabbitServerRmiRegistrationSupportInfo', 'orgApacheSlingJcrJackrabbitServerRmiRegistrationSupportInfo', Body, ValidatorState);
validate_response('OrgApacheSlingJcrJackrabbitServerRmiRegistrationSupport', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('OrgApacheSlingJcrJackrabbitServerRmiRegistrationSupport', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('OrgApacheSlingJcrRepoinitImplRepositoryInitializer', 200, Body, ValidatorState) ->
    validate_response_body('orgApacheSlingJcrRepoinitImplRepositoryInitializerInfo', 'orgApacheSlingJcrRepoinitImplRepositoryInitializerInfo', Body, ValidatorState);
validate_response('OrgApacheSlingJcrRepoinitImplRepositoryInitializer', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('OrgApacheSlingJcrRepoinitImplRepositoryInitializer', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('OrgApacheSlingJcrRepoinitRepositoryInitializer', 200, Body, ValidatorState) ->
    validate_response_body('orgApacheSlingJcrRepoinitRepositoryInitializerInfo', 'orgApacheSlingJcrRepoinitRepositoryInitializerInfo', Body, ValidatorState);
validate_response('OrgApacheSlingJcrRepoinitRepositoryInitializer', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('OrgApacheSlingJcrRepoinitRepositoryInitializer', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('OrgApacheSlingJcrResourceInternalJcrResourceResolverFactoryImpl', 200, Body, ValidatorState) ->
    validate_response_body('orgApacheSlingJcrResourceInternalJcrResourceResolverFactoryImplInfo', 'orgApacheSlingJcrResourceInternalJcrResourceResolverFactoryImplInfo', Body, ValidatorState);
validate_response('OrgApacheSlingJcrResourceInternalJcrResourceResolverFactoryImpl', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('OrgApacheSlingJcrResourceInternalJcrResourceResolverFactoryImpl', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('OrgApacheSlingJcrResourceInternalJcrSystemUserValidator', 200, Body, ValidatorState) ->
    validate_response_body('orgApacheSlingJcrResourceInternalJcrSystemUserValidatorInfo', 'orgApacheSlingJcrResourceInternalJcrSystemUserValidatorInfo', Body, ValidatorState);
validate_response('OrgApacheSlingJcrResourceInternalJcrSystemUserValidator', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('OrgApacheSlingJcrResourceInternalJcrSystemUserValidator', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('OrgApacheSlingJcrResourcesecurityImplResourceAccessGateFactory', 200, Body, ValidatorState) ->
    validate_response_body('orgApacheSlingJcrResourcesecurityImplResourceAccessGateFactoryInfo', 'orgApacheSlingJcrResourcesecurityImplResourceAccessGateFactoryInfo', Body, ValidatorState);
validate_response('OrgApacheSlingJcrResourcesecurityImplResourceAccessGateFactory', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('OrgApacheSlingJcrResourcesecurityImplResourceAccessGateFactory', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('OrgApacheSlingJcrWebdavImplHandlerDefaultHandlerService', 200, Body, ValidatorState) ->
    validate_response_body('orgApacheSlingJcrWebdavImplHandlerDefaultHandlerServiceInfo', 'orgApacheSlingJcrWebdavImplHandlerDefaultHandlerServiceInfo', Body, ValidatorState);
validate_response('OrgApacheSlingJcrWebdavImplHandlerDefaultHandlerService', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('OrgApacheSlingJcrWebdavImplHandlerDefaultHandlerService', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('OrgApacheSlingJcrWebdavImplHandlerDirListingExportHandlerServic', 200, Body, ValidatorState) ->
    validate_response_body('orgApacheSlingJcrWebdavImplHandlerDirListingExportHandlerServicInfo', 'orgApacheSlingJcrWebdavImplHandlerDirListingExportHandlerServicInfo', Body, ValidatorState);
validate_response('OrgApacheSlingJcrWebdavImplHandlerDirListingExportHandlerServic', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('OrgApacheSlingJcrWebdavImplHandlerDirListingExportHandlerServic', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('OrgApacheSlingJcrWebdavImplServletsSimpleWebDavServlet', 200, Body, ValidatorState) ->
    validate_response_body('orgApacheSlingJcrWebdavImplServletsSimpleWebDavServletInfo', 'orgApacheSlingJcrWebdavImplServletsSimpleWebDavServletInfo', Body, ValidatorState);
validate_response('OrgApacheSlingJcrWebdavImplServletsSimpleWebDavServlet', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('OrgApacheSlingJcrWebdavImplServletsSimpleWebDavServlet', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('OrgApacheSlingJmxProviderImplJMXResourceProvider', 200, Body, ValidatorState) ->
    validate_response_body('orgApacheSlingJmxProviderImplJMXResourceProviderInfo', 'orgApacheSlingJmxProviderImplJMXResourceProviderInfo', Body, ValidatorState);
validate_response('OrgApacheSlingJmxProviderImplJMXResourceProvider', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('OrgApacheSlingJmxProviderImplJMXResourceProvider', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('OrgApacheSlingModelsImplModelAdapterFactory', 200, Body, ValidatorState) ->
    validate_response_body('orgApacheSlingModelsImplModelAdapterFactoryInfo', 'orgApacheSlingModelsImplModelAdapterFactoryInfo', Body, ValidatorState);
validate_response('OrgApacheSlingModelsImplModelAdapterFactory', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('OrgApacheSlingModelsImplModelAdapterFactory', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('OrgApacheSlingModelsJacksonexporterImplResourceModuleProvider', 200, Body, ValidatorState) ->
    validate_response_body('orgApacheSlingModelsJacksonexporterImplResourceModuleProviderInfo', 'orgApacheSlingModelsJacksonexporterImplResourceModuleProviderInfo', Body, ValidatorState);
validate_response('OrgApacheSlingModelsJacksonexporterImplResourceModuleProvider', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('OrgApacheSlingModelsJacksonexporterImplResourceModuleProvider', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('OrgApacheSlingResourceInventoryImplResourceInventoryPrinterFacto', 200, Body, ValidatorState) ->
    validate_response_body('orgApacheSlingResourceInventoryImplResourceInventoryPrinterFactoInfo', 'orgApacheSlingResourceInventoryImplResourceInventoryPrinterFactoInfo', Body, ValidatorState);
validate_response('OrgApacheSlingResourceInventoryImplResourceInventoryPrinterFacto', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('OrgApacheSlingResourceInventoryImplResourceInventoryPrinterFacto', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('OrgApacheSlingResourcemergerImplMergedResourceProviderFactory', 200, Body, ValidatorState) ->
    validate_response_body('orgApacheSlingResourcemergerImplMergedResourceProviderFactoryInfo', 'orgApacheSlingResourcemergerImplMergedResourceProviderFactoryInfo', Body, ValidatorState);
validate_response('OrgApacheSlingResourcemergerImplMergedResourceProviderFactory', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('OrgApacheSlingResourcemergerImplMergedResourceProviderFactory', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('OrgApacheSlingResourcemergerPickerOverriding', 200, Body, ValidatorState) ->
    validate_response_body('orgApacheSlingResourcemergerPickerOverridingInfo', 'orgApacheSlingResourcemergerPickerOverridingInfo', Body, ValidatorState);
validate_response('OrgApacheSlingResourcemergerPickerOverriding', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('OrgApacheSlingResourcemergerPickerOverriding', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('OrgApacheSlingScriptingCoreImplScriptCacheImpl', 200, Body, ValidatorState) ->
    validate_response_body('orgApacheSlingScriptingCoreImplScriptCacheImplInfo', 'orgApacheSlingScriptingCoreImplScriptCacheImplInfo', Body, ValidatorState);
validate_response('OrgApacheSlingScriptingCoreImplScriptCacheImpl', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('OrgApacheSlingScriptingCoreImplScriptCacheImpl', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('OrgApacheSlingScriptingCoreImplScriptingResourceResolverProvider', 200, Body, ValidatorState) ->
    validate_response_body('orgApacheSlingScriptingCoreImplScriptingResourceResolverProviderInfo', 'orgApacheSlingScriptingCoreImplScriptingResourceResolverProviderInfo', Body, ValidatorState);
validate_response('OrgApacheSlingScriptingCoreImplScriptingResourceResolverProvider', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('OrgApacheSlingScriptingCoreImplScriptingResourceResolverProvider', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('OrgApacheSlingScriptingJavaImplJavaScriptEngineFactory', 200, Body, ValidatorState) ->
    validate_response_body('orgApacheSlingScriptingJavaImplJavaScriptEngineFactoryInfo', 'orgApacheSlingScriptingJavaImplJavaScriptEngineFactoryInfo', Body, ValidatorState);
validate_response('OrgApacheSlingScriptingJavaImplJavaScriptEngineFactory', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('OrgApacheSlingScriptingJavaImplJavaScriptEngineFactory', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('OrgApacheSlingScriptingJavascriptInternalRhinoJavaScriptEngineFa', 200, Body, ValidatorState) ->
    validate_response_body('orgApacheSlingScriptingJavascriptInternalRhinoJavaScriptEngineFaInfo', 'orgApacheSlingScriptingJavascriptInternalRhinoJavaScriptEngineFaInfo', Body, ValidatorState);
validate_response('OrgApacheSlingScriptingJavascriptInternalRhinoJavaScriptEngineFa', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('OrgApacheSlingScriptingJavascriptInternalRhinoJavaScriptEngineFa', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('OrgApacheSlingScriptingJspJspScriptEngineFactory', 200, Body, ValidatorState) ->
    validate_response_body('orgApacheSlingScriptingJspJspScriptEngineFactoryInfo', 'orgApacheSlingScriptingJspJspScriptEngineFactoryInfo', Body, ValidatorState);
validate_response('OrgApacheSlingScriptingJspJspScriptEngineFactory', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('OrgApacheSlingScriptingJspJspScriptEngineFactory', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('OrgApacheSlingScriptingSightlyJsImplJsapiSlyBindingsValuesProv', 200, Body, ValidatorState) ->
    validate_response_body('orgApacheSlingScriptingSightlyJsImplJsapiSlyBindingsValuesProvInfo', 'orgApacheSlingScriptingSightlyJsImplJsapiSlyBindingsValuesProvInfo', Body, ValidatorState);
validate_response('OrgApacheSlingScriptingSightlyJsImplJsapiSlyBindingsValuesProv', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('OrgApacheSlingScriptingSightlyJsImplJsapiSlyBindingsValuesProv', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('OrgApacheSlingSecurityImplContentDispositionFilter', 200, Body, ValidatorState) ->
    validate_response_body('orgApacheSlingSecurityImplContentDispositionFilterInfo', 'orgApacheSlingSecurityImplContentDispositionFilterInfo', Body, ValidatorState);
validate_response('OrgApacheSlingSecurityImplContentDispositionFilter', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('OrgApacheSlingSecurityImplContentDispositionFilter', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('OrgApacheSlingSecurityImplReferrerFilter', 200, Body, ValidatorState) ->
    validate_response_body('orgApacheSlingSecurityImplReferrerFilterInfo', 'orgApacheSlingSecurityImplReferrerFilterInfo', Body, ValidatorState);
validate_response('OrgApacheSlingSecurityImplReferrerFilter', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('OrgApacheSlingSecurityImplReferrerFilter', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('OrgApacheSlingServiceusermappingImplServiceUserMapperImpl', 200, Body, ValidatorState) ->
    validate_response_body('orgApacheSlingServiceusermappingImplServiceUserMapperImplInfo', 'orgApacheSlingServiceusermappingImplServiceUserMapperImplInfo', Body, ValidatorState);
validate_response('OrgApacheSlingServiceusermappingImplServiceUserMapperImpl', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('OrgApacheSlingServiceusermappingImplServiceUserMapperImpl', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('OrgApacheSlingServiceusermappingImplServiceUserMapperImplAmended', 200, Body, ValidatorState) ->
    validate_response_body('orgApacheSlingServiceusermappingImplServiceUserMapperImplAmendedInfo', 'orgApacheSlingServiceusermappingImplServiceUserMapperImplAmendedInfo', Body, ValidatorState);
validate_response('OrgApacheSlingServiceusermappingImplServiceUserMapperImplAmended', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('OrgApacheSlingServiceusermappingImplServiceUserMapperImplAmended', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('OrgApacheSlingServletsGetDefaultGetServlet', 200, Body, ValidatorState) ->
    validate_response_body('orgApacheSlingServletsGetDefaultGetServletInfo', 'orgApacheSlingServletsGetDefaultGetServletInfo', Body, ValidatorState);
validate_response('OrgApacheSlingServletsGetDefaultGetServlet', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('OrgApacheSlingServletsGetDefaultGetServlet', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('OrgApacheSlingServletsGetImplVersionVersionInfoServlet', 200, Body, ValidatorState) ->
    validate_response_body('orgApacheSlingServletsGetImplVersionVersionInfoServletInfo', 'orgApacheSlingServletsGetImplVersionVersionInfoServletInfo', Body, ValidatorState);
validate_response('OrgApacheSlingServletsGetImplVersionVersionInfoServlet', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('OrgApacheSlingServletsGetImplVersionVersionInfoServlet', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('OrgApacheSlingServletsPostImplHelperChunkCleanUpTask', 200, Body, ValidatorState) ->
    validate_response_body('orgApacheSlingServletsPostImplHelperChunkCleanUpTaskInfo', 'orgApacheSlingServletsPostImplHelperChunkCleanUpTaskInfo', Body, ValidatorState);
validate_response('OrgApacheSlingServletsPostImplHelperChunkCleanUpTask', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('OrgApacheSlingServletsPostImplHelperChunkCleanUpTask', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('OrgApacheSlingServletsPostImplSlingPostServlet', 200, Body, ValidatorState) ->
    validate_response_body('orgApacheSlingServletsPostImplSlingPostServletInfo', 'orgApacheSlingServletsPostImplSlingPostServletInfo', Body, ValidatorState);
validate_response('OrgApacheSlingServletsPostImplSlingPostServlet', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('OrgApacheSlingServletsPostImplSlingPostServlet', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('OrgApacheSlingServletsResolverSlingServletResolver', 200, Body, ValidatorState) ->
    validate_response_body('orgApacheSlingServletsResolverSlingServletResolverInfo', 'orgApacheSlingServletsResolverSlingServletResolverInfo', Body, ValidatorState);
validate_response('OrgApacheSlingServletsResolverSlingServletResolver', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('OrgApacheSlingServletsResolverSlingServletResolver', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('OrgApacheSlingSettingsImplSlingSettingsServiceImpl', 200, Body, ValidatorState) ->
    validate_response_body('orgApacheSlingSettingsImplSlingSettingsServiceImplInfo', 'orgApacheSlingSettingsImplSlingSettingsServiceImplInfo', Body, ValidatorState);
validate_response('OrgApacheSlingSettingsImplSlingSettingsServiceImpl', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('OrgApacheSlingSettingsImplSlingSettingsServiceImpl', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('OrgApacheSlingStartupfilterImplStartupFilterImpl', 200, Body, ValidatorState) ->
    validate_response_body('orgApacheSlingStartupfilterImplStartupFilterImplInfo', 'orgApacheSlingStartupfilterImplStartupFilterImplInfo', Body, ValidatorState);
validate_response('OrgApacheSlingStartupfilterImplStartupFilterImpl', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('OrgApacheSlingStartupfilterImplStartupFilterImpl', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('OrgApacheSlingTenantInternalTenantProviderImpl', 200, Body, ValidatorState) ->
    validate_response_body('orgApacheSlingTenantInternalTenantProviderImplInfo', 'orgApacheSlingTenantInternalTenantProviderImplInfo', Body, ValidatorState);
validate_response('OrgApacheSlingTenantInternalTenantProviderImpl', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('OrgApacheSlingTenantInternalTenantProviderImpl', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('OrgApacheSlingTracerInternalLogTracer', 200, Body, ValidatorState) ->
    validate_response_body('orgApacheSlingTracerInternalLogTracerInfo', 'orgApacheSlingTracerInternalLogTracerInfo', Body, ValidatorState);
validate_response('OrgApacheSlingTracerInternalLogTracer', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('OrgApacheSlingTracerInternalLogTracer', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);

validate_response('OrgApacheSlingXssImplXSSFilterImpl', 200, Body, ValidatorState) ->
    validate_response_body('orgApacheSlingXssImplXSSFilterImplInfo', 'orgApacheSlingXssImplXSSFilterImplInfo', Body, ValidatorState);
validate_response('OrgApacheSlingXssImplXSSFilterImpl', 302, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);
validate_response('OrgApacheSlingXssImplXSSFilterImpl', 0, Body, ValidatorState) ->
    validate_response_body('binary', 'string', Body, ValidatorState);


validate_response(_OperationID, _Code, _Body, _ValidatorState) ->
    ok.

validate_response_body('list', ReturnBaseType, Body, ValidatorState) ->
    [
        validate(schema, ReturnBaseType, Item, ValidatorState)
    || Item <- Body];

validate_response_body(_, ReturnBaseType, Body, ValidatorState) ->
    validate(schema, ReturnBaseType, Body, ValidatorState).

%%%
validate(Rule = required, Name, Value, _ValidatorState) ->
    case Value of
        undefined -> validation_error(Rule, Name);
        _ -> ok
    end;

validate(not_required, _Name, _Value, _ValidatorState) ->
    ok;

validate(_, _Name, undefined, _ValidatorState) ->
    ok;

validate(Rule = {type, 'integer'}, Name, Value, _ValidatorState) ->
    try
        {ok, openapi_utils:to_int(Value)}
    catch
        error:badarg ->
            validation_error(Rule, Name)
    end;

validate(Rule = {type, 'float'}, Name, Value, _ValidatorState) ->
    try
        {ok, openapi_utils:to_float(Value)}
    catch
        error:badarg ->
            validation_error(Rule, Name)
    end;

validate(Rule = {type, 'binary'}, Name, Value, _ValidatorState) ->
    case is_binary(Value) of
        true -> ok;
        false -> validation_error(Rule, Name)
    end;

validate(_Rule = {type, 'boolean'}, _Name, Value, _ValidatorState) when is_boolean(Value) ->
    {ok, Value};

validate(Rule = {type, 'boolean'}, Name, Value, _ValidatorState) ->
    V = binary_to_lower(Value),
    try
        case binary_to_existing_atom(V, utf8) of
            B when is_boolean(B) -> {ok, B};
            _ -> validation_error(Rule, Name)
        end
    catch
        error:badarg ->
            validation_error(Rule, Name)
    end;

validate(Rule = {type, 'date'}, Name, Value, _ValidatorState) ->
    case is_binary(Value) of
        true -> ok;
        false -> validation_error(Rule, Name)
    end;

validate(Rule = {type, 'datetime'}, Name, Value, _ValidatorState) ->
    case is_binary(Value) of
        true -> ok;
        false -> validation_error(Rule, Name)
    end;

validate(Rule = {enum, Values}, Name, Value, _ValidatorState) ->
    try
        FormattedValue = erlang:binary_to_existing_atom(Value, utf8),
        case lists:member(FormattedValue, Values) of
            true -> {ok, FormattedValue};
            false -> validation_error(Rule, Name)
        end
    catch
        error:badarg ->
            validation_error(Rule, Name)
    end;

validate(Rule = {max, Max}, Name, Value, _ValidatorState) ->
    case Value =< Max of
        true -> ok;
        false -> validation_error(Rule, Name)
    end;

validate(Rule = {exclusive_max, ExclusiveMax}, Name, Value, _ValidatorState) ->
    case Value > ExclusiveMax of
        true -> ok;
        false -> validation_error(Rule, Name)
    end;

validate(Rule = {min, Min}, Name, Value, _ValidatorState) ->
    case Value >= Min of
        true -> ok;
        false -> validation_error(Rule, Name)
    end;

validate(Rule = {exclusive_min, ExclusiveMin}, Name, Value, _ValidatorState) ->
    case Value =< ExclusiveMin of
        true -> ok;
        false -> validation_error(Rule, Name)
    end;

validate(Rule = {max_length, MaxLength}, Name, Value, _ValidatorState) ->
    case size(Value) =< MaxLength of
        true -> ok;
        false -> validation_error(Rule, Name)
    end;

validate(Rule = {min_length, MinLength}, Name, Value, _ValidatorState) ->
    case size(Value) >= MinLength of
        true -> ok;
        false -> validation_error(Rule, Name)
    end;

validate(Rule = {pattern, Pattern}, Name, Value, _ValidatorState) ->
    {ok, MP} = re:compile(Pattern),
    case re:run(Value, MP) of
        {match, _} -> ok;
        _ -> validation_error(Rule, Name)
    end;

validate(Rule = schema, Name, Value, ValidatorState) ->
    Definition =  list_to_binary("#/definitions/" ++ openapi_utils:to_list(Name)),
    try
        _ = validate_with_schema(Value, Definition, ValidatorState),
        ok
    catch
        throw:[{schema_invalid, _, Error} | _] ->
            Info = #{
                type => schema_invalid,
                error => Error
            },
            validation_error(Rule, Name, Info);
        throw:[{data_invalid, Schema, Error, _, Path} | _] ->
            Info = #{
                type => data_invalid,
                error => Error,
                schema => Schema,
                path => Path
            },
            validation_error(Rule, Name, Info)
    end;

validate(Rule, Name, _Value, _ValidatorState) ->
    error_logger:info_msg("Can't validate ~p with ~p", [Name, Rule]),
    error({unknown_validation_rule, Rule}).

-spec validation_error(Rule :: any(), Name :: any()) -> no_return().

validation_error(ViolatedRule, Name) ->
    validation_error(ViolatedRule, Name, #{}).

-spec validation_error(Rule :: any(), Name :: any(), Info :: #{}) -> no_return().

validation_error(ViolatedRule, Name, Info) ->
    throw({wrong_param, Name, ViolatedRule, Info}).

-spec get_value(body | qs_val | header | binding, Name :: any(), Req0 :: cowboy_req:req()) ->
    {Value :: any(), Req :: cowboy_req:req()} | 
    {error, Reason :: any(), Req :: cowboy_req:req()}.
get_value(body, _Name, Req0) ->
    {ok, Body, Req} = cowboy_req:body(Req0),
    case prepare_body(Body) of
        {error, Reason} ->
            {error, Reason, Req};
        Value ->
            {Value, Req}
    end;

get_value(qs_val, Name, Req0) ->
    {QS, Req} = cowboy_req:qs_vals(Req0),
    Value = openapi_utils:get_opt(openapi_utils:to_qs(Name), QS),
    {Value, Req};

get_value(header, Name, Req0) ->
    {Headers, Req} = cowboy_req:headers(Req0),
    Value = openapi_utils:get_opt(openapi_utils:to_header(Name), Headers),
    {Value, Req};

get_value(binding, Name, Req0) ->
    {Bindings, Req} = cowboy_req:bindings(Req0),
    Value = openapi_utils:get_opt(openapi_utils:to_binding(Name), Bindings),
    {Value, Req}.

prepare_body(Body) ->
    case Body of
        <<"">> -> <<"">>;
        _ ->
            try
                jsx:decode(Body, [return_maps]) 
            catch
              error:_ ->
                {error, {invalid_body, not_json, Body}}
            end
    end.

validate_with_schema(Body, Definition, ValidatorState) ->
    jesse_schema_validator:validate_with_state(
        [{<<"$ref">>, Definition}],
        Body,
        ValidatorState
    ).

prepare_param(Rules, Name, Value, ValidatorState) ->
    try
        Result = lists:foldl(
            fun(Rule, Acc) ->
                case validate(Rule, Name, Acc, ValidatorState) of
                    ok -> Acc;
                    {ok, Prepared} -> Prepared
                end
            end,
            Value,
            Rules
        ),
        {ok, Result}
    catch
        throw:Reason ->
            {error, Reason}
    end.

binary_to_lower(V) when is_binary(V) ->
    list_to_binary(string:to_lower(openapi_utils:to_list(V))).
