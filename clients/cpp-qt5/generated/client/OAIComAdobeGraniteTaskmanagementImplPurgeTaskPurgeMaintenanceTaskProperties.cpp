/**
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


#include "OAIComAdobeGraniteTaskmanagementImplPurgeTaskPurgeMaintenanceTaskProperties.h"

#include "OAIHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace OpenAPI {

OAIComAdobeGraniteTaskmanagementImplPurgeTaskPurgeMaintenanceTaskProperties::OAIComAdobeGraniteTaskmanagementImplPurgeTaskPurgeMaintenanceTaskProperties(QString json) {
    init();
    this->fromJson(json);
}

OAIComAdobeGraniteTaskmanagementImplPurgeTaskPurgeMaintenanceTaskProperties::OAIComAdobeGraniteTaskmanagementImplPurgeTaskPurgeMaintenanceTaskProperties() {
    init();
}

OAIComAdobeGraniteTaskmanagementImplPurgeTaskPurgeMaintenanceTaskProperties::~OAIComAdobeGraniteTaskmanagementImplPurgeTaskPurgeMaintenanceTaskProperties() {
    this->cleanup();
}

void
OAIComAdobeGraniteTaskmanagementImplPurgeTaskPurgeMaintenanceTaskProperties::init() {
    purge_completed = new OAIConfigNodePropertyBoolean();
    m_purge_completed_isSet = false;
    completed_age = new OAIConfigNodePropertyInteger();
    m_completed_age_isSet = false;
    purge_active = new OAIConfigNodePropertyBoolean();
    m_purge_active_isSet = false;
    active_age = new OAIConfigNodePropertyInteger();
    m_active_age_isSet = false;
    save_threshold = new OAIConfigNodePropertyInteger();
    m_save_threshold_isSet = false;
}

void
OAIComAdobeGraniteTaskmanagementImplPurgeTaskPurgeMaintenanceTaskProperties::cleanup() {
    if(purge_completed != nullptr) { 
        delete purge_completed;
    }
    if(completed_age != nullptr) { 
        delete completed_age;
    }
    if(purge_active != nullptr) { 
        delete purge_active;
    }
    if(active_age != nullptr) { 
        delete active_age;
    }
    if(save_threshold != nullptr) { 
        delete save_threshold;
    }
}

OAIComAdobeGraniteTaskmanagementImplPurgeTaskPurgeMaintenanceTaskProperties*
OAIComAdobeGraniteTaskmanagementImplPurgeTaskPurgeMaintenanceTaskProperties::fromJson(QString json) {
    QByteArray array (json.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
    return this;
}

void
OAIComAdobeGraniteTaskmanagementImplPurgeTaskPurgeMaintenanceTaskProperties::fromJsonObject(QJsonObject pJson) {
    ::OpenAPI::setValue(&purge_completed, pJson["purgeCompleted"], "OAIConfigNodePropertyBoolean", "OAIConfigNodePropertyBoolean");
    
    ::OpenAPI::setValue(&completed_age, pJson["completedAge"], "OAIConfigNodePropertyInteger", "OAIConfigNodePropertyInteger");
    
    ::OpenAPI::setValue(&purge_active, pJson["purgeActive"], "OAIConfigNodePropertyBoolean", "OAIConfigNodePropertyBoolean");
    
    ::OpenAPI::setValue(&active_age, pJson["activeAge"], "OAIConfigNodePropertyInteger", "OAIConfigNodePropertyInteger");
    
    ::OpenAPI::setValue(&save_threshold, pJson["saveThreshold"], "OAIConfigNodePropertyInteger", "OAIConfigNodePropertyInteger");
    
}

QString
OAIComAdobeGraniteTaskmanagementImplPurgeTaskPurgeMaintenanceTaskProperties::asJson ()
{
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject
OAIComAdobeGraniteTaskmanagementImplPurgeTaskPurgeMaintenanceTaskProperties::asJsonObject() {
    QJsonObject obj;
    if((purge_completed != nullptr) && (purge_completed->isSet())){
        toJsonValue(QString("purgeCompleted"), purge_completed, obj, QString("OAIConfigNodePropertyBoolean"));
    }
    if((completed_age != nullptr) && (completed_age->isSet())){
        toJsonValue(QString("completedAge"), completed_age, obj, QString("OAIConfigNodePropertyInteger"));
    }
    if((purge_active != nullptr) && (purge_active->isSet())){
        toJsonValue(QString("purgeActive"), purge_active, obj, QString("OAIConfigNodePropertyBoolean"));
    }
    if((active_age != nullptr) && (active_age->isSet())){
        toJsonValue(QString("activeAge"), active_age, obj, QString("OAIConfigNodePropertyInteger"));
    }
    if((save_threshold != nullptr) && (save_threshold->isSet())){
        toJsonValue(QString("saveThreshold"), save_threshold, obj, QString("OAIConfigNodePropertyInteger"));
    }

    return obj;
}

OAIConfigNodePropertyBoolean*
OAIComAdobeGraniteTaskmanagementImplPurgeTaskPurgeMaintenanceTaskProperties::getPurgeCompleted() {
    return purge_completed;
}
void
OAIComAdobeGraniteTaskmanagementImplPurgeTaskPurgeMaintenanceTaskProperties::setPurgeCompleted(OAIConfigNodePropertyBoolean* purge_completed) {
    this->purge_completed = purge_completed;
    this->m_purge_completed_isSet = true;
}

OAIConfigNodePropertyInteger*
OAIComAdobeGraniteTaskmanagementImplPurgeTaskPurgeMaintenanceTaskProperties::getCompletedAge() {
    return completed_age;
}
void
OAIComAdobeGraniteTaskmanagementImplPurgeTaskPurgeMaintenanceTaskProperties::setCompletedAge(OAIConfigNodePropertyInteger* completed_age) {
    this->completed_age = completed_age;
    this->m_completed_age_isSet = true;
}

OAIConfigNodePropertyBoolean*
OAIComAdobeGraniteTaskmanagementImplPurgeTaskPurgeMaintenanceTaskProperties::getPurgeActive() {
    return purge_active;
}
void
OAIComAdobeGraniteTaskmanagementImplPurgeTaskPurgeMaintenanceTaskProperties::setPurgeActive(OAIConfigNodePropertyBoolean* purge_active) {
    this->purge_active = purge_active;
    this->m_purge_active_isSet = true;
}

OAIConfigNodePropertyInteger*
OAIComAdobeGraniteTaskmanagementImplPurgeTaskPurgeMaintenanceTaskProperties::getActiveAge() {
    return active_age;
}
void
OAIComAdobeGraniteTaskmanagementImplPurgeTaskPurgeMaintenanceTaskProperties::setActiveAge(OAIConfigNodePropertyInteger* active_age) {
    this->active_age = active_age;
    this->m_active_age_isSet = true;
}

OAIConfigNodePropertyInteger*
OAIComAdobeGraniteTaskmanagementImplPurgeTaskPurgeMaintenanceTaskProperties::getSaveThreshold() {
    return save_threshold;
}
void
OAIComAdobeGraniteTaskmanagementImplPurgeTaskPurgeMaintenanceTaskProperties::setSaveThreshold(OAIConfigNodePropertyInteger* save_threshold) {
    this->save_threshold = save_threshold;
    this->m_save_threshold_isSet = true;
}


bool
OAIComAdobeGraniteTaskmanagementImplPurgeTaskPurgeMaintenanceTaskProperties::isSet(){
    bool isObjectUpdated = false;
    do{
        if(purge_completed != nullptr && purge_completed->isSet()){ isObjectUpdated = true; break;}
        if(completed_age != nullptr && completed_age->isSet()){ isObjectUpdated = true; break;}
        if(purge_active != nullptr && purge_active->isSet()){ isObjectUpdated = true; break;}
        if(active_age != nullptr && active_age->isSet()){ isObjectUpdated = true; break;}
        if(save_threshold != nullptr && save_threshold->isSet()){ isObjectUpdated = true; break;}
    }while(false);
    return isObjectUpdated;
}
}

