/**
* Adobe Experience Manager OSGI config (AEM) API
* Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
*
* OpenAPI spec version: 1.0.0-pre.0
* Contact: opensource@shinesolutions.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/


#include "ComAdobeCqScreensMonitoringImplScreensMonitoringServiceImplProperties.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

ComAdobeCqScreensMonitoringImplScreensMonitoringServiceImplProperties::ComAdobeCqScreensMonitoringImplScreensMonitoringServiceImplProperties()
{
    m_Com_adobe_cq_screens_monitoring_impl_ScreensMonitoringServiceImpl_projectPathIsSet = false;
    m_Com_adobe_cq_screens_monitoring_impl_ScreensMonitoringServiceImpl_scheduleFrequencyIsSet = false;
    m_Com_adobe_cq_screens_monitoring_impl_ScreensMonitoringServiceImpl_pingTimeoutIsSet = false;
    m_Com_adobe_cq_screens_monitoring_impl_ScreensMonitoringServiceImpl_recipientsIsSet = false;
    m_Com_adobe_cq_screens_monitoring_impl_ScreensMonitoringServiceImpl_smtpserverIsSet = false;
    m_Com_adobe_cq_screens_monitoring_impl_ScreensMonitoringServiceImpl_smtpportIsSet = false;
    m_Com_adobe_cq_screens_monitoring_impl_ScreensMonitoringServiceImpl_usetlsIsSet = false;
    m_Com_adobe_cq_screens_monitoring_impl_ScreensMonitoringServiceImpl_usernameIsSet = false;
    m_Com_adobe_cq_screens_monitoring_impl_ScreensMonitoringServiceImpl_passwordIsSet = false;
    
}

ComAdobeCqScreensMonitoringImplScreensMonitoringServiceImplProperties::~ComAdobeCqScreensMonitoringImplScreensMonitoringServiceImplProperties()
{
}

void ComAdobeCqScreensMonitoringImplScreensMonitoringServiceImplProperties::validate()
{
    // TODO: implement validation
}

nlohmann::json ComAdobeCqScreensMonitoringImplScreensMonitoringServiceImplProperties::toJson() const
{
    nlohmann::json val = nlohmann::json::object();

    if(m_Com_adobe_cq_screens_monitoring_impl_ScreensMonitoringServiceImpl_projectPathIsSet)
    {
        val["com.adobe.cq.screens.monitoring.impl.ScreensMonitoringServiceImpl.projectPath"] = ModelBase::toJson(m_Com_adobe_cq_screens_monitoring_impl_ScreensMonitoringServiceImpl_projectPath);
    }
    if(m_Com_adobe_cq_screens_monitoring_impl_ScreensMonitoringServiceImpl_scheduleFrequencyIsSet)
    {
        val["com.adobe.cq.screens.monitoring.impl.ScreensMonitoringServiceImpl.scheduleFrequency"] = ModelBase::toJson(m_Com_adobe_cq_screens_monitoring_impl_ScreensMonitoringServiceImpl_scheduleFrequency);
    }
    if(m_Com_adobe_cq_screens_monitoring_impl_ScreensMonitoringServiceImpl_pingTimeoutIsSet)
    {
        val["com.adobe.cq.screens.monitoring.impl.ScreensMonitoringServiceImpl.pingTimeout"] = ModelBase::toJson(m_Com_adobe_cq_screens_monitoring_impl_ScreensMonitoringServiceImpl_pingTimeout);
    }
    if(m_Com_adobe_cq_screens_monitoring_impl_ScreensMonitoringServiceImpl_recipientsIsSet)
    {
        val["com.adobe.cq.screens.monitoring.impl.ScreensMonitoringServiceImpl.recipients"] = ModelBase::toJson(m_Com_adobe_cq_screens_monitoring_impl_ScreensMonitoringServiceImpl_recipients);
    }
    if(m_Com_adobe_cq_screens_monitoring_impl_ScreensMonitoringServiceImpl_smtpserverIsSet)
    {
        val["com.adobe.cq.screens.monitoring.impl.ScreensMonitoringServiceImpl.smtpserver"] = ModelBase::toJson(m_Com_adobe_cq_screens_monitoring_impl_ScreensMonitoringServiceImpl_smtpserver);
    }
    if(m_Com_adobe_cq_screens_monitoring_impl_ScreensMonitoringServiceImpl_smtpportIsSet)
    {
        val["com.adobe.cq.screens.monitoring.impl.ScreensMonitoringServiceImpl.smtpport"] = ModelBase::toJson(m_Com_adobe_cq_screens_monitoring_impl_ScreensMonitoringServiceImpl_smtpport);
    }
    if(m_Com_adobe_cq_screens_monitoring_impl_ScreensMonitoringServiceImpl_usetlsIsSet)
    {
        val["com.adobe.cq.screens.monitoring.impl.ScreensMonitoringServiceImpl.usetls"] = ModelBase::toJson(m_Com_adobe_cq_screens_monitoring_impl_ScreensMonitoringServiceImpl_usetls);
    }
    if(m_Com_adobe_cq_screens_monitoring_impl_ScreensMonitoringServiceImpl_usernameIsSet)
    {
        val["com.adobe.cq.screens.monitoring.impl.ScreensMonitoringServiceImpl.username"] = ModelBase::toJson(m_Com_adobe_cq_screens_monitoring_impl_ScreensMonitoringServiceImpl_username);
    }
    if(m_Com_adobe_cq_screens_monitoring_impl_ScreensMonitoringServiceImpl_passwordIsSet)
    {
        val["com.adobe.cq.screens.monitoring.impl.ScreensMonitoringServiceImpl.password"] = ModelBase::toJson(m_Com_adobe_cq_screens_monitoring_impl_ScreensMonitoringServiceImpl_password);
    }
    

    return val;
}

void ComAdobeCqScreensMonitoringImplScreensMonitoringServiceImplProperties::fromJson(nlohmann::json& val)
{
    if(val.find("com.adobe.cq.screens.monitoring.impl.ScreensMonitoringServiceImpl.projectPath") != val.end())
    {
        if(!val["com.adobe.cq.screens.monitoring.impl.ScreensMonitoringServiceImpl.projectPath"].is_null())
        {
            ConfigNodePropertyArray newItem;
            newItem.fromJson(val["com.adobe.cq.screens.monitoring.impl.ScreensMonitoringServiceImpl.projectPath"]);
            setComAdobeCqScreensMonitoringImplScreensMonitoringServiceImplProjectPath( newItem );
        }
        
    }
    if(val.find("com.adobe.cq.screens.monitoring.impl.ScreensMonitoringServiceImpl.scheduleFrequency") != val.end())
    {
        if(!val["com.adobe.cq.screens.monitoring.impl.ScreensMonitoringServiceImpl.scheduleFrequency"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["com.adobe.cq.screens.monitoring.impl.ScreensMonitoringServiceImpl.scheduleFrequency"]);
            setComAdobeCqScreensMonitoringImplScreensMonitoringServiceImplScheduleFrequency( newItem );
        }
        
    }
    if(val.find("com.adobe.cq.screens.monitoring.impl.ScreensMonitoringServiceImpl.pingTimeout") != val.end())
    {
        if(!val["com.adobe.cq.screens.monitoring.impl.ScreensMonitoringServiceImpl.pingTimeout"].is_null())
        {
            ConfigNodePropertyInteger newItem;
            newItem.fromJson(val["com.adobe.cq.screens.monitoring.impl.ScreensMonitoringServiceImpl.pingTimeout"]);
            setComAdobeCqScreensMonitoringImplScreensMonitoringServiceImplPingTimeout( newItem );
        }
        
    }
    if(val.find("com.adobe.cq.screens.monitoring.impl.ScreensMonitoringServiceImpl.recipients") != val.end())
    {
        if(!val["com.adobe.cq.screens.monitoring.impl.ScreensMonitoringServiceImpl.recipients"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["com.adobe.cq.screens.monitoring.impl.ScreensMonitoringServiceImpl.recipients"]);
            setComAdobeCqScreensMonitoringImplScreensMonitoringServiceImplRecipients( newItem );
        }
        
    }
    if(val.find("com.adobe.cq.screens.monitoring.impl.ScreensMonitoringServiceImpl.smtpserver") != val.end())
    {
        if(!val["com.adobe.cq.screens.monitoring.impl.ScreensMonitoringServiceImpl.smtpserver"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["com.adobe.cq.screens.monitoring.impl.ScreensMonitoringServiceImpl.smtpserver"]);
            setComAdobeCqScreensMonitoringImplScreensMonitoringServiceImplSmtpserver( newItem );
        }
        
    }
    if(val.find("com.adobe.cq.screens.monitoring.impl.ScreensMonitoringServiceImpl.smtpport") != val.end())
    {
        if(!val["com.adobe.cq.screens.monitoring.impl.ScreensMonitoringServiceImpl.smtpport"].is_null())
        {
            ConfigNodePropertyInteger newItem;
            newItem.fromJson(val["com.adobe.cq.screens.monitoring.impl.ScreensMonitoringServiceImpl.smtpport"]);
            setComAdobeCqScreensMonitoringImplScreensMonitoringServiceImplSmtpport( newItem );
        }
        
    }
    if(val.find("com.adobe.cq.screens.monitoring.impl.ScreensMonitoringServiceImpl.usetls") != val.end())
    {
        if(!val["com.adobe.cq.screens.monitoring.impl.ScreensMonitoringServiceImpl.usetls"].is_null())
        {
            ConfigNodePropertyBoolean newItem;
            newItem.fromJson(val["com.adobe.cq.screens.monitoring.impl.ScreensMonitoringServiceImpl.usetls"]);
            setComAdobeCqScreensMonitoringImplScreensMonitoringServiceImplUsetls( newItem );
        }
        
    }
    if(val.find("com.adobe.cq.screens.monitoring.impl.ScreensMonitoringServiceImpl.username") != val.end())
    {
        if(!val["com.adobe.cq.screens.monitoring.impl.ScreensMonitoringServiceImpl.username"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["com.adobe.cq.screens.monitoring.impl.ScreensMonitoringServiceImpl.username"]);
            setComAdobeCqScreensMonitoringImplScreensMonitoringServiceImplUsername( newItem );
        }
        
    }
    if(val.find("com.adobe.cq.screens.monitoring.impl.ScreensMonitoringServiceImpl.password") != val.end())
    {
        if(!val["com.adobe.cq.screens.monitoring.impl.ScreensMonitoringServiceImpl.password"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["com.adobe.cq.screens.monitoring.impl.ScreensMonitoringServiceImpl.password"]);
            setComAdobeCqScreensMonitoringImplScreensMonitoringServiceImplPassword( newItem );
        }
        
    }
    
}


ConfigNodePropertyArray ComAdobeCqScreensMonitoringImplScreensMonitoringServiceImplProperties::getComAdobeCqScreensMonitoringImplScreensMonitoringServiceImplProjectPath() const
{
    return m_Com_adobe_cq_screens_monitoring_impl_ScreensMonitoringServiceImpl_projectPath;
}
void ComAdobeCqScreensMonitoringImplScreensMonitoringServiceImplProperties::setComAdobeCqScreensMonitoringImplScreensMonitoringServiceImplProjectPath(ConfigNodePropertyArray const& value)
{
    m_Com_adobe_cq_screens_monitoring_impl_ScreensMonitoringServiceImpl_projectPath = value;
    m_Com_adobe_cq_screens_monitoring_impl_ScreensMonitoringServiceImpl_projectPathIsSet = true;
}
bool ComAdobeCqScreensMonitoringImplScreensMonitoringServiceImplProperties::comAdobeCqScreensMonitoringImplScreensMonitoringServiceImplProjectPathIsSet() const
{
    return m_Com_adobe_cq_screens_monitoring_impl_ScreensMonitoringServiceImpl_projectPathIsSet;
}
void ComAdobeCqScreensMonitoringImplScreensMonitoringServiceImplProperties::unsetCom_adobe_cq_screens_monitoring_impl_ScreensMonitoringServiceImpl_projectPath()
{
    m_Com_adobe_cq_screens_monitoring_impl_ScreensMonitoringServiceImpl_projectPathIsSet = false;
}
ConfigNodePropertyString ComAdobeCqScreensMonitoringImplScreensMonitoringServiceImplProperties::getComAdobeCqScreensMonitoringImplScreensMonitoringServiceImplScheduleFrequency() const
{
    return m_Com_adobe_cq_screens_monitoring_impl_ScreensMonitoringServiceImpl_scheduleFrequency;
}
void ComAdobeCqScreensMonitoringImplScreensMonitoringServiceImplProperties::setComAdobeCqScreensMonitoringImplScreensMonitoringServiceImplScheduleFrequency(ConfigNodePropertyString const& value)
{
    m_Com_adobe_cq_screens_monitoring_impl_ScreensMonitoringServiceImpl_scheduleFrequency = value;
    m_Com_adobe_cq_screens_monitoring_impl_ScreensMonitoringServiceImpl_scheduleFrequencyIsSet = true;
}
bool ComAdobeCqScreensMonitoringImplScreensMonitoringServiceImplProperties::comAdobeCqScreensMonitoringImplScreensMonitoringServiceImplScheduleFrequencyIsSet() const
{
    return m_Com_adobe_cq_screens_monitoring_impl_ScreensMonitoringServiceImpl_scheduleFrequencyIsSet;
}
void ComAdobeCqScreensMonitoringImplScreensMonitoringServiceImplProperties::unsetCom_adobe_cq_screens_monitoring_impl_ScreensMonitoringServiceImpl_scheduleFrequency()
{
    m_Com_adobe_cq_screens_monitoring_impl_ScreensMonitoringServiceImpl_scheduleFrequencyIsSet = false;
}
ConfigNodePropertyInteger ComAdobeCqScreensMonitoringImplScreensMonitoringServiceImplProperties::getComAdobeCqScreensMonitoringImplScreensMonitoringServiceImplPingTimeout() const
{
    return m_Com_adobe_cq_screens_monitoring_impl_ScreensMonitoringServiceImpl_pingTimeout;
}
void ComAdobeCqScreensMonitoringImplScreensMonitoringServiceImplProperties::setComAdobeCqScreensMonitoringImplScreensMonitoringServiceImplPingTimeout(ConfigNodePropertyInteger const& value)
{
    m_Com_adobe_cq_screens_monitoring_impl_ScreensMonitoringServiceImpl_pingTimeout = value;
    m_Com_adobe_cq_screens_monitoring_impl_ScreensMonitoringServiceImpl_pingTimeoutIsSet = true;
}
bool ComAdobeCqScreensMonitoringImplScreensMonitoringServiceImplProperties::comAdobeCqScreensMonitoringImplScreensMonitoringServiceImplPingTimeoutIsSet() const
{
    return m_Com_adobe_cq_screens_monitoring_impl_ScreensMonitoringServiceImpl_pingTimeoutIsSet;
}
void ComAdobeCqScreensMonitoringImplScreensMonitoringServiceImplProperties::unsetCom_adobe_cq_screens_monitoring_impl_ScreensMonitoringServiceImpl_pingTimeout()
{
    m_Com_adobe_cq_screens_monitoring_impl_ScreensMonitoringServiceImpl_pingTimeoutIsSet = false;
}
ConfigNodePropertyString ComAdobeCqScreensMonitoringImplScreensMonitoringServiceImplProperties::getComAdobeCqScreensMonitoringImplScreensMonitoringServiceImplRecipients() const
{
    return m_Com_adobe_cq_screens_monitoring_impl_ScreensMonitoringServiceImpl_recipients;
}
void ComAdobeCqScreensMonitoringImplScreensMonitoringServiceImplProperties::setComAdobeCqScreensMonitoringImplScreensMonitoringServiceImplRecipients(ConfigNodePropertyString const& value)
{
    m_Com_adobe_cq_screens_monitoring_impl_ScreensMonitoringServiceImpl_recipients = value;
    m_Com_adobe_cq_screens_monitoring_impl_ScreensMonitoringServiceImpl_recipientsIsSet = true;
}
bool ComAdobeCqScreensMonitoringImplScreensMonitoringServiceImplProperties::comAdobeCqScreensMonitoringImplScreensMonitoringServiceImplRecipientsIsSet() const
{
    return m_Com_adobe_cq_screens_monitoring_impl_ScreensMonitoringServiceImpl_recipientsIsSet;
}
void ComAdobeCqScreensMonitoringImplScreensMonitoringServiceImplProperties::unsetCom_adobe_cq_screens_monitoring_impl_ScreensMonitoringServiceImpl_recipients()
{
    m_Com_adobe_cq_screens_monitoring_impl_ScreensMonitoringServiceImpl_recipientsIsSet = false;
}
ConfigNodePropertyString ComAdobeCqScreensMonitoringImplScreensMonitoringServiceImplProperties::getComAdobeCqScreensMonitoringImplScreensMonitoringServiceImplSmtpserver() const
{
    return m_Com_adobe_cq_screens_monitoring_impl_ScreensMonitoringServiceImpl_smtpserver;
}
void ComAdobeCqScreensMonitoringImplScreensMonitoringServiceImplProperties::setComAdobeCqScreensMonitoringImplScreensMonitoringServiceImplSmtpserver(ConfigNodePropertyString const& value)
{
    m_Com_adobe_cq_screens_monitoring_impl_ScreensMonitoringServiceImpl_smtpserver = value;
    m_Com_adobe_cq_screens_monitoring_impl_ScreensMonitoringServiceImpl_smtpserverIsSet = true;
}
bool ComAdobeCqScreensMonitoringImplScreensMonitoringServiceImplProperties::comAdobeCqScreensMonitoringImplScreensMonitoringServiceImplSmtpserverIsSet() const
{
    return m_Com_adobe_cq_screens_monitoring_impl_ScreensMonitoringServiceImpl_smtpserverIsSet;
}
void ComAdobeCqScreensMonitoringImplScreensMonitoringServiceImplProperties::unsetCom_adobe_cq_screens_monitoring_impl_ScreensMonitoringServiceImpl_smtpserver()
{
    m_Com_adobe_cq_screens_monitoring_impl_ScreensMonitoringServiceImpl_smtpserverIsSet = false;
}
ConfigNodePropertyInteger ComAdobeCqScreensMonitoringImplScreensMonitoringServiceImplProperties::getComAdobeCqScreensMonitoringImplScreensMonitoringServiceImplSmtpport() const
{
    return m_Com_adobe_cq_screens_monitoring_impl_ScreensMonitoringServiceImpl_smtpport;
}
void ComAdobeCqScreensMonitoringImplScreensMonitoringServiceImplProperties::setComAdobeCqScreensMonitoringImplScreensMonitoringServiceImplSmtpport(ConfigNodePropertyInteger const& value)
{
    m_Com_adobe_cq_screens_monitoring_impl_ScreensMonitoringServiceImpl_smtpport = value;
    m_Com_adobe_cq_screens_monitoring_impl_ScreensMonitoringServiceImpl_smtpportIsSet = true;
}
bool ComAdobeCqScreensMonitoringImplScreensMonitoringServiceImplProperties::comAdobeCqScreensMonitoringImplScreensMonitoringServiceImplSmtpportIsSet() const
{
    return m_Com_adobe_cq_screens_monitoring_impl_ScreensMonitoringServiceImpl_smtpportIsSet;
}
void ComAdobeCqScreensMonitoringImplScreensMonitoringServiceImplProperties::unsetCom_adobe_cq_screens_monitoring_impl_ScreensMonitoringServiceImpl_smtpport()
{
    m_Com_adobe_cq_screens_monitoring_impl_ScreensMonitoringServiceImpl_smtpportIsSet = false;
}
ConfigNodePropertyBoolean ComAdobeCqScreensMonitoringImplScreensMonitoringServiceImplProperties::getComAdobeCqScreensMonitoringImplScreensMonitoringServiceImplUsetls() const
{
    return m_Com_adobe_cq_screens_monitoring_impl_ScreensMonitoringServiceImpl_usetls;
}
void ComAdobeCqScreensMonitoringImplScreensMonitoringServiceImplProperties::setComAdobeCqScreensMonitoringImplScreensMonitoringServiceImplUsetls(ConfigNodePropertyBoolean const& value)
{
    m_Com_adobe_cq_screens_monitoring_impl_ScreensMonitoringServiceImpl_usetls = value;
    m_Com_adobe_cq_screens_monitoring_impl_ScreensMonitoringServiceImpl_usetlsIsSet = true;
}
bool ComAdobeCqScreensMonitoringImplScreensMonitoringServiceImplProperties::comAdobeCqScreensMonitoringImplScreensMonitoringServiceImplUsetlsIsSet() const
{
    return m_Com_adobe_cq_screens_monitoring_impl_ScreensMonitoringServiceImpl_usetlsIsSet;
}
void ComAdobeCqScreensMonitoringImplScreensMonitoringServiceImplProperties::unsetCom_adobe_cq_screens_monitoring_impl_ScreensMonitoringServiceImpl_usetls()
{
    m_Com_adobe_cq_screens_monitoring_impl_ScreensMonitoringServiceImpl_usetlsIsSet = false;
}
ConfigNodePropertyString ComAdobeCqScreensMonitoringImplScreensMonitoringServiceImplProperties::getComAdobeCqScreensMonitoringImplScreensMonitoringServiceImplUsername() const
{
    return m_Com_adobe_cq_screens_monitoring_impl_ScreensMonitoringServiceImpl_username;
}
void ComAdobeCqScreensMonitoringImplScreensMonitoringServiceImplProperties::setComAdobeCqScreensMonitoringImplScreensMonitoringServiceImplUsername(ConfigNodePropertyString const& value)
{
    m_Com_adobe_cq_screens_monitoring_impl_ScreensMonitoringServiceImpl_username = value;
    m_Com_adobe_cq_screens_monitoring_impl_ScreensMonitoringServiceImpl_usernameIsSet = true;
}
bool ComAdobeCqScreensMonitoringImplScreensMonitoringServiceImplProperties::comAdobeCqScreensMonitoringImplScreensMonitoringServiceImplUsernameIsSet() const
{
    return m_Com_adobe_cq_screens_monitoring_impl_ScreensMonitoringServiceImpl_usernameIsSet;
}
void ComAdobeCqScreensMonitoringImplScreensMonitoringServiceImplProperties::unsetCom_adobe_cq_screens_monitoring_impl_ScreensMonitoringServiceImpl_username()
{
    m_Com_adobe_cq_screens_monitoring_impl_ScreensMonitoringServiceImpl_usernameIsSet = false;
}
ConfigNodePropertyString ComAdobeCqScreensMonitoringImplScreensMonitoringServiceImplProperties::getComAdobeCqScreensMonitoringImplScreensMonitoringServiceImplPassword() const
{
    return m_Com_adobe_cq_screens_monitoring_impl_ScreensMonitoringServiceImpl_password;
}
void ComAdobeCqScreensMonitoringImplScreensMonitoringServiceImplProperties::setComAdobeCqScreensMonitoringImplScreensMonitoringServiceImplPassword(ConfigNodePropertyString const& value)
{
    m_Com_adobe_cq_screens_monitoring_impl_ScreensMonitoringServiceImpl_password = value;
    m_Com_adobe_cq_screens_monitoring_impl_ScreensMonitoringServiceImpl_passwordIsSet = true;
}
bool ComAdobeCqScreensMonitoringImplScreensMonitoringServiceImplProperties::comAdobeCqScreensMonitoringImplScreensMonitoringServiceImplPasswordIsSet() const
{
    return m_Com_adobe_cq_screens_monitoring_impl_ScreensMonitoringServiceImpl_passwordIsSet;
}
void ComAdobeCqScreensMonitoringImplScreensMonitoringServiceImplProperties::unsetCom_adobe_cq_screens_monitoring_impl_ScreensMonitoringServiceImpl_password()
{
    m_Com_adobe_cq_screens_monitoring_impl_ScreensMonitoringServiceImpl_passwordIsSet = false;
}

}
}
}
}

