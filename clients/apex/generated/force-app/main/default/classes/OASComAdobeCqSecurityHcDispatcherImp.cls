/*
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OAS-api/OAS-codegen.git
 * Do not edit the class manually.
 */

/**
 * OASComAdobeCqSecurityHcDispatcherImp
 */
public class OASComAdobeCqSecurityHcDispatcherImp implements OAS.MappedProperties {
    /**
     * Get hcTags
     * @return hcTags
     */
    public OASConfigNodePropertyArray hcTags { get; set; }

    /**
     * Get dispatcherAddress
     * @return dispatcherAddress
     */
    public OASConfigNodePropertyString dispatcherAddress { get; set; }

    /**
     * Get dispatcherFilterAllowed
     * @return dispatcherFilterAllowed
     */
    public OASConfigNodePropertyArray dispatcherFilterAllowed { get; set; }

    /**
     * Get dispatcherFilterBlocked
     * @return dispatcherFilterBlocked
     */
    public OASConfigNodePropertyArray dispatcherFilterBlocked { get; set; }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'hc.tags' => 'hcTags',
        'dispatcher.address' => 'dispatcherAddress',
        'dispatcher.filter.allowed' => 'dispatcherFilterAllowed',
        'dispatcher.filter.blocked' => 'dispatcherFilterBlocked'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    public static OASComAdobeCqSecurityHcDispatcherImp getExample() {
        OASComAdobeCqSecurityHcDispatcherImp comAdobeCqSecurityHcDispatcherImplDispatcherAccessHealthCheckProperties = new OASComAdobeCqSecurityHcDispatcherImp();
          comAdobeCqSecurityHcDispatcherImplDispatcherAccessHealthCheckProperties.hcTags = OASConfigNodePropertyArray.getExample();
          comAdobeCqSecurityHcDispatcherImplDispatcherAccessHealthCheckProperties.dispatcherAddress = OASConfigNodePropertyString.getExample();
          comAdobeCqSecurityHcDispatcherImplDispatcherAccessHealthCheckProperties.dispatcherFilterAllowed = OASConfigNodePropertyArray.getExample();
          comAdobeCqSecurityHcDispatcherImplDispatcherAccessHealthCheckProperties.dispatcherFilterBlocked = OASConfigNodePropertyArray.getExample();
        return comAdobeCqSecurityHcDispatcherImplDispatcherAccessHealthCheckProperties;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof OASComAdobeCqSecurityHcDispatcherImp) {           
            OASComAdobeCqSecurityHcDispatcherImp comAdobeCqSecurityHcDispatcherImplDispatcherAccessHealthCheckProperties = (OASComAdobeCqSecurityHcDispatcherImp) obj;
            return this.hcTags == comAdobeCqSecurityHcDispatcherImplDispatcherAccessHealthCheckProperties.hcTags
                && this.dispatcherAddress == comAdobeCqSecurityHcDispatcherImplDispatcherAccessHealthCheckProperties.dispatcherAddress
                && this.dispatcherFilterAllowed == comAdobeCqSecurityHcDispatcherImplDispatcherAccessHealthCheckProperties.dispatcherFilterAllowed
                && this.dispatcherFilterBlocked == comAdobeCqSecurityHcDispatcherImplDispatcherAccessHealthCheckProperties.dispatcherFilterBlocked;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (hcTags == null ? 0 : System.hashCode(hcTags));
        hashCode = (17 * hashCode) + (dispatcherAddress == null ? 0 : System.hashCode(dispatcherAddress));
        hashCode = (17 * hashCode) + (dispatcherFilterAllowed == null ? 0 : System.hashCode(dispatcherFilterAllowed));
        hashCode = (17 * hashCode) + (dispatcherFilterBlocked == null ? 0 : System.hashCode(dispatcherFilterBlocked));
        return hashCode;
    }
}

