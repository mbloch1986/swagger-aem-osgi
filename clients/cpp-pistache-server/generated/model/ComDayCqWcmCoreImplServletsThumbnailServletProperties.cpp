/**
* Adobe Experience Manager OSGI config (AEM) API
* Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
*
* OpenAPI spec version: 1.0.0-pre.0
* Contact: opensource@shinesolutions.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/


#include "ComDayCqWcmCoreImplServletsThumbnailServletProperties.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

ComDayCqWcmCoreImplServletsThumbnailServletProperties::ComDayCqWcmCoreImplServletsThumbnailServletProperties()
{
    m_WorkspaceIsSet = false;
    m_DimensionsIsSet = false;
    
}

ComDayCqWcmCoreImplServletsThumbnailServletProperties::~ComDayCqWcmCoreImplServletsThumbnailServletProperties()
{
}

void ComDayCqWcmCoreImplServletsThumbnailServletProperties::validate()
{
    // TODO: implement validation
}

nlohmann::json ComDayCqWcmCoreImplServletsThumbnailServletProperties::toJson() const
{
    nlohmann::json val = nlohmann::json::object();

    if(m_WorkspaceIsSet)
    {
        val["workspace"] = ModelBase::toJson(m_Workspace);
    }
    if(m_DimensionsIsSet)
    {
        val["dimensions"] = ModelBase::toJson(m_Dimensions);
    }
    

    return val;
}

void ComDayCqWcmCoreImplServletsThumbnailServletProperties::fromJson(nlohmann::json& val)
{
    if(val.find("workspace") != val.end())
    {
        if(!val["workspace"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["workspace"]);
            setWorkspace( newItem );
        }
        
    }
    if(val.find("dimensions") != val.end())
    {
        if(!val["dimensions"].is_null())
        {
            ConfigNodePropertyArray newItem;
            newItem.fromJson(val["dimensions"]);
            setDimensions( newItem );
        }
        
    }
    
}


ConfigNodePropertyString ComDayCqWcmCoreImplServletsThumbnailServletProperties::getWorkspace() const
{
    return m_Workspace;
}
void ComDayCqWcmCoreImplServletsThumbnailServletProperties::setWorkspace(ConfigNodePropertyString const& value)
{
    m_Workspace = value;
    m_WorkspaceIsSet = true;
}
bool ComDayCqWcmCoreImplServletsThumbnailServletProperties::workspaceIsSet() const
{
    return m_WorkspaceIsSet;
}
void ComDayCqWcmCoreImplServletsThumbnailServletProperties::unsetWorkspace()
{
    m_WorkspaceIsSet = false;
}
ConfigNodePropertyArray ComDayCqWcmCoreImplServletsThumbnailServletProperties::getDimensions() const
{
    return m_Dimensions;
}
void ComDayCqWcmCoreImplServletsThumbnailServletProperties::setDimensions(ConfigNodePropertyArray const& value)
{
    m_Dimensions = value;
    m_DimensionsIsSet = true;
}
bool ComDayCqWcmCoreImplServletsThumbnailServletProperties::dimensionsIsSet() const
{
    return m_DimensionsIsSet;
}
void ComDayCqWcmCoreImplServletsThumbnailServletProperties::unsetDimensions()
{
    m_DimensionsIsSet = false;
}

}
}
}
}

