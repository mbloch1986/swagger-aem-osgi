# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server.models.config_node_property_array import ConfigNodePropertyArray  # noqa: F401,E501
from openapi_server.models.config_node_property_string import ConfigNodePropertyString  # noqa: F401,E501
from openapi_server import util


class OrgApacheSlingJcrBaseInternalLoginAdminWhitelistFragmentProperties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, whitelist_name: ConfigNodePropertyString=None, whitelist_bundles: ConfigNodePropertyArray=None):  # noqa: E501
        """OrgApacheSlingJcrBaseInternalLoginAdminWhitelistFragmentProperties - a model defined in OpenAPI

        :param whitelist_name: The whitelist_name of this OrgApacheSlingJcrBaseInternalLoginAdminWhitelistFragmentProperties.  # noqa: E501
        :type whitelist_name: ConfigNodePropertyString
        :param whitelist_bundles: The whitelist_bundles of this OrgApacheSlingJcrBaseInternalLoginAdminWhitelistFragmentProperties.  # noqa: E501
        :type whitelist_bundles: ConfigNodePropertyArray
        """
        self.openapi_types = {
            'whitelist_name': ConfigNodePropertyString,
            'whitelist_bundles': ConfigNodePropertyArray
        }

        self.attribute_map = {
            'whitelist_name': 'whitelist.name',
            'whitelist_bundles': 'whitelist.bundles'
        }

        self._whitelist_name = whitelist_name
        self._whitelist_bundles = whitelist_bundles

    @classmethod
    def from_dict(cls, dikt) -> 'OrgApacheSlingJcrBaseInternalLoginAdminWhitelistFragmentProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The orgApacheSlingJcrBaseInternalLoginAdminWhitelistFragmentProperties of this OrgApacheSlingJcrBaseInternalLoginAdminWhitelistFragmentProperties.  # noqa: E501
        :rtype: OrgApacheSlingJcrBaseInternalLoginAdminWhitelistFragmentProperties
        """
        return util.deserialize_model(dikt, cls)

    @property
    def whitelist_name(self) -> ConfigNodePropertyString:
        """Gets the whitelist_name of this OrgApacheSlingJcrBaseInternalLoginAdminWhitelistFragmentProperties.


        :return: The whitelist_name of this OrgApacheSlingJcrBaseInternalLoginAdminWhitelistFragmentProperties.
        :rtype: ConfigNodePropertyString
        """
        return self._whitelist_name

    @whitelist_name.setter
    def whitelist_name(self, whitelist_name: ConfigNodePropertyString):
        """Sets the whitelist_name of this OrgApacheSlingJcrBaseInternalLoginAdminWhitelistFragmentProperties.


        :param whitelist_name: The whitelist_name of this OrgApacheSlingJcrBaseInternalLoginAdminWhitelistFragmentProperties.
        :type whitelist_name: ConfigNodePropertyString
        """

        self._whitelist_name = whitelist_name

    @property
    def whitelist_bundles(self) -> ConfigNodePropertyArray:
        """Gets the whitelist_bundles of this OrgApacheSlingJcrBaseInternalLoginAdminWhitelistFragmentProperties.


        :return: The whitelist_bundles of this OrgApacheSlingJcrBaseInternalLoginAdminWhitelistFragmentProperties.
        :rtype: ConfigNodePropertyArray
        """
        return self._whitelist_bundles

    @whitelist_bundles.setter
    def whitelist_bundles(self, whitelist_bundles: ConfigNodePropertyArray):
        """Sets the whitelist_bundles of this OrgApacheSlingJcrBaseInternalLoginAdminWhitelistFragmentProperties.


        :param whitelist_bundles: The whitelist_bundles of this OrgApacheSlingJcrBaseInternalLoginAdminWhitelistFragmentProperties.
        :type whitelist_bundles: ConfigNodePropertyArray
        """

        self._whitelist_bundles = whitelist_bundles
