/**
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


#include "OAIComDayCqWorkflowImplEmailEMailNotificationServiceProperties.h"

#include "OAIHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace OpenAPI {

OAIComDayCqWorkflowImplEmailEMailNotificationServiceProperties::OAIComDayCqWorkflowImplEmailEMailNotificationServiceProperties(QString json) {
    init();
    this->fromJson(json);
}

OAIComDayCqWorkflowImplEmailEMailNotificationServiceProperties::OAIComDayCqWorkflowImplEmailEMailNotificationServiceProperties() {
    init();
}

OAIComDayCqWorkflowImplEmailEMailNotificationServiceProperties::~OAIComDayCqWorkflowImplEmailEMailNotificationServiceProperties() {
    this->cleanup();
}

void
OAIComDayCqWorkflowImplEmailEMailNotificationServiceProperties::init() {
    from_address = new OAIConfigNodePropertyString();
    m_from_address_isSet = false;
    host_prefix = new OAIConfigNodePropertyString();
    m_host_prefix_isSet = false;
    notify_onabort = new OAIConfigNodePropertyBoolean();
    m_notify_onabort_isSet = false;
    notify_oncomplete = new OAIConfigNodePropertyBoolean();
    m_notify_oncomplete_isSet = false;
    notify_oncontainercomplete = new OAIConfigNodePropertyBoolean();
    m_notify_oncontainercomplete_isSet = false;
    notify_useronly = new OAIConfigNodePropertyBoolean();
    m_notify_useronly_isSet = false;
}

void
OAIComDayCqWorkflowImplEmailEMailNotificationServiceProperties::cleanup() {
    if(from_address != nullptr) { 
        delete from_address;
    }
    if(host_prefix != nullptr) { 
        delete host_prefix;
    }
    if(notify_onabort != nullptr) { 
        delete notify_onabort;
    }
    if(notify_oncomplete != nullptr) { 
        delete notify_oncomplete;
    }
    if(notify_oncontainercomplete != nullptr) { 
        delete notify_oncontainercomplete;
    }
    if(notify_useronly != nullptr) { 
        delete notify_useronly;
    }
}

OAIComDayCqWorkflowImplEmailEMailNotificationServiceProperties*
OAIComDayCqWorkflowImplEmailEMailNotificationServiceProperties::fromJson(QString json) {
    QByteArray array (json.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
    return this;
}

void
OAIComDayCqWorkflowImplEmailEMailNotificationServiceProperties::fromJsonObject(QJsonObject pJson) {
    ::OpenAPI::setValue(&from_address, pJson["from.address"], "OAIConfigNodePropertyString", "OAIConfigNodePropertyString");
    
    ::OpenAPI::setValue(&host_prefix, pJson["host.prefix"], "OAIConfigNodePropertyString", "OAIConfigNodePropertyString");
    
    ::OpenAPI::setValue(&notify_onabort, pJson["notify.onabort"], "OAIConfigNodePropertyBoolean", "OAIConfigNodePropertyBoolean");
    
    ::OpenAPI::setValue(&notify_oncomplete, pJson["notify.oncomplete"], "OAIConfigNodePropertyBoolean", "OAIConfigNodePropertyBoolean");
    
    ::OpenAPI::setValue(&notify_oncontainercomplete, pJson["notify.oncontainercomplete"], "OAIConfigNodePropertyBoolean", "OAIConfigNodePropertyBoolean");
    
    ::OpenAPI::setValue(&notify_useronly, pJson["notify.useronly"], "OAIConfigNodePropertyBoolean", "OAIConfigNodePropertyBoolean");
    
}

QString
OAIComDayCqWorkflowImplEmailEMailNotificationServiceProperties::asJson ()
{
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject
OAIComDayCqWorkflowImplEmailEMailNotificationServiceProperties::asJsonObject() {
    QJsonObject obj;
    if((from_address != nullptr) && (from_address->isSet())){
        toJsonValue(QString("from.address"), from_address, obj, QString("OAIConfigNodePropertyString"));
    }
    if((host_prefix != nullptr) && (host_prefix->isSet())){
        toJsonValue(QString("host.prefix"), host_prefix, obj, QString("OAIConfigNodePropertyString"));
    }
    if((notify_onabort != nullptr) && (notify_onabort->isSet())){
        toJsonValue(QString("notify.onabort"), notify_onabort, obj, QString("OAIConfigNodePropertyBoolean"));
    }
    if((notify_oncomplete != nullptr) && (notify_oncomplete->isSet())){
        toJsonValue(QString("notify.oncomplete"), notify_oncomplete, obj, QString("OAIConfigNodePropertyBoolean"));
    }
    if((notify_oncontainercomplete != nullptr) && (notify_oncontainercomplete->isSet())){
        toJsonValue(QString("notify.oncontainercomplete"), notify_oncontainercomplete, obj, QString("OAIConfigNodePropertyBoolean"));
    }
    if((notify_useronly != nullptr) && (notify_useronly->isSet())){
        toJsonValue(QString("notify.useronly"), notify_useronly, obj, QString("OAIConfigNodePropertyBoolean"));
    }

    return obj;
}

OAIConfigNodePropertyString*
OAIComDayCqWorkflowImplEmailEMailNotificationServiceProperties::getFromAddress() {
    return from_address;
}
void
OAIComDayCqWorkflowImplEmailEMailNotificationServiceProperties::setFromAddress(OAIConfigNodePropertyString* from_address) {
    this->from_address = from_address;
    this->m_from_address_isSet = true;
}

OAIConfigNodePropertyString*
OAIComDayCqWorkflowImplEmailEMailNotificationServiceProperties::getHostPrefix() {
    return host_prefix;
}
void
OAIComDayCqWorkflowImplEmailEMailNotificationServiceProperties::setHostPrefix(OAIConfigNodePropertyString* host_prefix) {
    this->host_prefix = host_prefix;
    this->m_host_prefix_isSet = true;
}

OAIConfigNodePropertyBoolean*
OAIComDayCqWorkflowImplEmailEMailNotificationServiceProperties::getNotifyOnabort() {
    return notify_onabort;
}
void
OAIComDayCqWorkflowImplEmailEMailNotificationServiceProperties::setNotifyOnabort(OAIConfigNodePropertyBoolean* notify_onabort) {
    this->notify_onabort = notify_onabort;
    this->m_notify_onabort_isSet = true;
}

OAIConfigNodePropertyBoolean*
OAIComDayCqWorkflowImplEmailEMailNotificationServiceProperties::getNotifyOncomplete() {
    return notify_oncomplete;
}
void
OAIComDayCqWorkflowImplEmailEMailNotificationServiceProperties::setNotifyOncomplete(OAIConfigNodePropertyBoolean* notify_oncomplete) {
    this->notify_oncomplete = notify_oncomplete;
    this->m_notify_oncomplete_isSet = true;
}

OAIConfigNodePropertyBoolean*
OAIComDayCqWorkflowImplEmailEMailNotificationServiceProperties::getNotifyOncontainercomplete() {
    return notify_oncontainercomplete;
}
void
OAIComDayCqWorkflowImplEmailEMailNotificationServiceProperties::setNotifyOncontainercomplete(OAIConfigNodePropertyBoolean* notify_oncontainercomplete) {
    this->notify_oncontainercomplete = notify_oncontainercomplete;
    this->m_notify_oncontainercomplete_isSet = true;
}

OAIConfigNodePropertyBoolean*
OAIComDayCqWorkflowImplEmailEMailNotificationServiceProperties::getNotifyUseronly() {
    return notify_useronly;
}
void
OAIComDayCqWorkflowImplEmailEMailNotificationServiceProperties::setNotifyUseronly(OAIConfigNodePropertyBoolean* notify_useronly) {
    this->notify_useronly = notify_useronly;
    this->m_notify_useronly_isSet = true;
}


bool
OAIComDayCqWorkflowImplEmailEMailNotificationServiceProperties::isSet(){
    bool isObjectUpdated = false;
    do{
        if(from_address != nullptr && from_address->isSet()){ isObjectUpdated = true; break;}
        if(host_prefix != nullptr && host_prefix->isSet()){ isObjectUpdated = true; break;}
        if(notify_onabort != nullptr && notify_onabort->isSet()){ isObjectUpdated = true; break;}
        if(notify_oncomplete != nullptr && notify_oncomplete->isSet()){ isObjectUpdated = true; break;}
        if(notify_oncontainercomplete != nullptr && notify_oncontainercomplete->isSet()){ isObjectUpdated = true; break;}
        if(notify_useronly != nullptr && notify_useronly->isSet()){ isObjectUpdated = true; break;}
    }while(false);
    return isObjectUpdated;
}
}

