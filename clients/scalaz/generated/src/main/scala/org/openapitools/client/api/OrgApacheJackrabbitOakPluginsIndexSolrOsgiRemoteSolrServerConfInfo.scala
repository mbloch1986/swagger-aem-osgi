package org.openapitools.client.api

import argonaut._
import argonaut.EncodeJson._
import argonaut.DecodeJson._

import org.http4s.{EntityDecoder, EntityEncoder}
import org.http4s.argonaut._
import org.joda.time.DateTime
import OrgApacheJackrabbitOakPluginsIndexSolrOsgiRemoteSolrServerConfInfo._

case class OrgApacheJackrabbitOakPluginsIndexSolrOsgiRemoteSolrServerConfInfo (
  pid: Option[String],
title: Option[String],
description: Option[String],
properties: Option[OrgApacheJackrabbitOakPluginsIndexSolrOsgiRemoteSolrServerConfProperties])

object OrgApacheJackrabbitOakPluginsIndexSolrOsgiRemoteSolrServerConfInfo {
  import DateTimeCodecs._

  implicit val OrgApacheJackrabbitOakPluginsIndexSolrOsgiRemoteSolrServerConfInfoCodecJson: CodecJson[OrgApacheJackrabbitOakPluginsIndexSolrOsgiRemoteSolrServerConfInfo] = CodecJson.derive[OrgApacheJackrabbitOakPluginsIndexSolrOsgiRemoteSolrServerConfInfo]
  implicit val OrgApacheJackrabbitOakPluginsIndexSolrOsgiRemoteSolrServerConfInfoDecoder: EntityDecoder[OrgApacheJackrabbitOakPluginsIndexSolrOsgiRemoteSolrServerConfInfo] = jsonOf[OrgApacheJackrabbitOakPluginsIndexSolrOsgiRemoteSolrServerConfInfo]
  implicit val OrgApacheJackrabbitOakPluginsIndexSolrOsgiRemoteSolrServerConfInfoEncoder: EntityEncoder[OrgApacheJackrabbitOakPluginsIndexSolrOsgiRemoteSolrServerConfInfo] = jsonEncoderOf[OrgApacheJackrabbitOakPluginsIndexSolrOsgiRemoteSolrServerConfInfo]
}
