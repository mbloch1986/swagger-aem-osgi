# NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
# https://openapi-generator.tech
# Do not edit the class manually.

defmodule AdobeExperienceManagerOSGIConfig(AEM)API.Model.OrgApacheJackrabbitOakPluginsIndexSolrOsgiRemoteSolrServerConfProperties do
  @moduledoc """
  
  """

  @derive [Poison.Encoder]
  defstruct [
    :"solr.http.url",
    :"solr.zk.host",
    :"solr.collection",
    :"solr.socket.timeout",
    :"solr.connection.timeout",
    :"solr.shards.no",
    :"solr.replication.factor",
    :"solr.conf.dir"
  ]

  @type t :: %__MODULE__{
    :"solr.http.url" => ConfigNodePropertyString,
    :"solr.zk.host" => ConfigNodePropertyString,
    :"solr.collection" => ConfigNodePropertyString,
    :"solr.socket.timeout" => ConfigNodePropertyInteger,
    :"solr.connection.timeout" => ConfigNodePropertyInteger,
    :"solr.shards.no" => ConfigNodePropertyInteger,
    :"solr.replication.factor" => ConfigNodePropertyInteger,
    :"solr.conf.dir" => ConfigNodePropertyString
  }
end

defimpl Poison.Decoder, for: AdobeExperienceManagerOSGIConfig(AEM)API.Model.OrgApacheJackrabbitOakPluginsIndexSolrOsgiRemoteSolrServerConfProperties do
  import AdobeExperienceManagerOSGIConfig(AEM)API.Deserializer
  def decode(value, options) do
    value
    |> deserialize(:"solr.http.url", :struct, AdobeExperienceManagerOSGIConfig(AEM)API.Model.ConfigNodePropertyString, options)
    |> deserialize(:"solr.zk.host", :struct, AdobeExperienceManagerOSGIConfig(AEM)API.Model.ConfigNodePropertyString, options)
    |> deserialize(:"solr.collection", :struct, AdobeExperienceManagerOSGIConfig(AEM)API.Model.ConfigNodePropertyString, options)
    |> deserialize(:"solr.socket.timeout", :struct, AdobeExperienceManagerOSGIConfig(AEM)API.Model.ConfigNodePropertyInteger, options)
    |> deserialize(:"solr.connection.timeout", :struct, AdobeExperienceManagerOSGIConfig(AEM)API.Model.ConfigNodePropertyInteger, options)
    |> deserialize(:"solr.shards.no", :struct, AdobeExperienceManagerOSGIConfig(AEM)API.Model.ConfigNodePropertyInteger, options)
    |> deserialize(:"solr.replication.factor", :struct, AdobeExperienceManagerOSGIConfig(AEM)API.Model.ConfigNodePropertyInteger, options)
    |> deserialize(:"solr.conf.dir", :struct, AdobeExperienceManagerOSGIConfig(AEM)API.Model.ConfigNodePropertyString, options)
  end
end

