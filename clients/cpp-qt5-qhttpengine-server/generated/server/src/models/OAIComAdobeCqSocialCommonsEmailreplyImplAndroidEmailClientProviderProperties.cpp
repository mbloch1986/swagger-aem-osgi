/**
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


#include "OAIComAdobeCqSocialCommonsEmailreplyImplAndroidEmailClientProviderProperties.h"

#include "OAIHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace OpenAPI {

OAIComAdobeCqSocialCommonsEmailreplyImplAndroidEmailClientProviderProperties::OAIComAdobeCqSocialCommonsEmailreplyImplAndroidEmailClientProviderProperties(QString json) {
    this->fromJson(json);
}

OAIComAdobeCqSocialCommonsEmailreplyImplAndroidEmailClientProviderProperties::OAIComAdobeCqSocialCommonsEmailreplyImplAndroidEmailClientProviderProperties() {
    this->init();
}

OAIComAdobeCqSocialCommonsEmailreplyImplAndroidEmailClientProviderProperties::~OAIComAdobeCqSocialCommonsEmailreplyImplAndroidEmailClientProviderProperties() {
    
}

void
OAIComAdobeCqSocialCommonsEmailreplyImplAndroidEmailClientProviderProperties::init() {
    m_priority_order_isSet = false;
    m_reply_email_patterns_isSet = false;
}

void
OAIComAdobeCqSocialCommonsEmailreplyImplAndroidEmailClientProviderProperties::fromJson(QString jsonString) {
    QByteArray array (jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void
OAIComAdobeCqSocialCommonsEmailreplyImplAndroidEmailClientProviderProperties::fromJsonObject(QJsonObject json) {
    ::OpenAPI::fromJsonValue(priority_order, json[QString("priorityOrder")]);
    
    ::OpenAPI::fromJsonValue(reply_email_patterns, json[QString("replyEmailPatterns")]);
    
}

QString
OAIComAdobeCqSocialCommonsEmailreplyImplAndroidEmailClientProviderProperties::asJson () const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject
OAIComAdobeCqSocialCommonsEmailreplyImplAndroidEmailClientProviderProperties::asJsonObject() const {
    QJsonObject obj;
	if(priority_order.isSet()){
        obj.insert(QString("priorityOrder"), ::OpenAPI::toJsonValue(priority_order));
    }
	if(reply_email_patterns.isSet()){
        obj.insert(QString("replyEmailPatterns"), ::OpenAPI::toJsonValue(reply_email_patterns));
    }
    return obj;
}

OAIConfigNodePropertyInteger
OAIComAdobeCqSocialCommonsEmailreplyImplAndroidEmailClientProviderProperties::getPriorityOrder() const {
    return priority_order;
}
void
OAIComAdobeCqSocialCommonsEmailreplyImplAndroidEmailClientProviderProperties::setPriorityOrder(const OAIConfigNodePropertyInteger &priority_order) {
    this->priority_order = priority_order;
    this->m_priority_order_isSet = true;
}

OAIConfigNodePropertyArray
OAIComAdobeCqSocialCommonsEmailreplyImplAndroidEmailClientProviderProperties::getReplyEmailPatterns() const {
    return reply_email_patterns;
}
void
OAIComAdobeCqSocialCommonsEmailreplyImplAndroidEmailClientProviderProperties::setReplyEmailPatterns(const OAIConfigNodePropertyArray &reply_email_patterns) {
    this->reply_email_patterns = reply_email_patterns;
    this->m_reply_email_patterns_isSet = true;
}


bool
OAIComAdobeCqSocialCommonsEmailreplyImplAndroidEmailClientProviderProperties::isSet() const {
    bool isObjectUpdated = false;
    do{ 
        if(priority_order.isSet()){ isObjectUpdated = true; break;}
    
        if(reply_email_patterns.isSet()){ isObjectUpdated = true; break;}
    }while(false);
    return isObjectUpdated;
}

}

