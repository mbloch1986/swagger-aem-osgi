/* 
 * Adobe Experience Manager OSGI config (AEM) API
 *
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 * Generated by: https://openapi-generator.tech
 */


#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct ComDayCqDamCoreImplCacheCqBufferedImageCacheProperties {
  #[serde(rename = "cq.dam.image.cache.max.memory")]
  cq_dam_image_cache_max_memory: Option<::models::ConfigNodePropertyInteger>,
  #[serde(rename = "cq.dam.image.cache.max.age")]
  cq_dam_image_cache_max_age: Option<::models::ConfigNodePropertyInteger>,
  #[serde(rename = "cq.dam.image.cache.max.dimension")]
  cq_dam_image_cache_max_dimension: Option<::models::ConfigNodePropertyString>
}

impl ComDayCqDamCoreImplCacheCqBufferedImageCacheProperties {
  pub fn new() -> ComDayCqDamCoreImplCacheCqBufferedImageCacheProperties {
    ComDayCqDamCoreImplCacheCqBufferedImageCacheProperties {
      cq_dam_image_cache_max_memory: None,
      cq_dam_image_cache_max_age: None,
      cq_dam_image_cache_max_dimension: None
    }
  }

  pub fn set_cq_dam_image_cache_max_memory(&mut self, cq_dam_image_cache_max_memory: ::models::ConfigNodePropertyInteger) {
    self.cq_dam_image_cache_max_memory = Some(cq_dam_image_cache_max_memory);
  }

  pub fn with_cq_dam_image_cache_max_memory(mut self, cq_dam_image_cache_max_memory: ::models::ConfigNodePropertyInteger) -> ComDayCqDamCoreImplCacheCqBufferedImageCacheProperties {
    self.cq_dam_image_cache_max_memory = Some(cq_dam_image_cache_max_memory);
    self
  }

  pub fn cq_dam_image_cache_max_memory(&self) -> Option<&::models::ConfigNodePropertyInteger> {
    self.cq_dam_image_cache_max_memory.as_ref()
  }

  pub fn reset_cq_dam_image_cache_max_memory(&mut self) {
    self.cq_dam_image_cache_max_memory = None;
  }

  pub fn set_cq_dam_image_cache_max_age(&mut self, cq_dam_image_cache_max_age: ::models::ConfigNodePropertyInteger) {
    self.cq_dam_image_cache_max_age = Some(cq_dam_image_cache_max_age);
  }

  pub fn with_cq_dam_image_cache_max_age(mut self, cq_dam_image_cache_max_age: ::models::ConfigNodePropertyInteger) -> ComDayCqDamCoreImplCacheCqBufferedImageCacheProperties {
    self.cq_dam_image_cache_max_age = Some(cq_dam_image_cache_max_age);
    self
  }

  pub fn cq_dam_image_cache_max_age(&self) -> Option<&::models::ConfigNodePropertyInteger> {
    self.cq_dam_image_cache_max_age.as_ref()
  }

  pub fn reset_cq_dam_image_cache_max_age(&mut self) {
    self.cq_dam_image_cache_max_age = None;
  }

  pub fn set_cq_dam_image_cache_max_dimension(&mut self, cq_dam_image_cache_max_dimension: ::models::ConfigNodePropertyString) {
    self.cq_dam_image_cache_max_dimension = Some(cq_dam_image_cache_max_dimension);
  }

  pub fn with_cq_dam_image_cache_max_dimension(mut self, cq_dam_image_cache_max_dimension: ::models::ConfigNodePropertyString) -> ComDayCqDamCoreImplCacheCqBufferedImageCacheProperties {
    self.cq_dam_image_cache_max_dimension = Some(cq_dam_image_cache_max_dimension);
    self
  }

  pub fn cq_dam_image_cache_max_dimension(&self) -> Option<&::models::ConfigNodePropertyString> {
    self.cq_dam_image_cache_max_dimension.as_ref()
  }

  pub fn reset_cq_dam_image_cache_max_dimension(&mut self) {
    self.cq_dam_image_cache_max_dimension = None;
  }

}



