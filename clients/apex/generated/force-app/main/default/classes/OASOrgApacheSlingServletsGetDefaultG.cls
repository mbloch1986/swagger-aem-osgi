/*
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OAS-api/OAS-codegen.git
 * Do not edit the class manually.
 */

/**
 * OASOrgApacheSlingServletsGetDefaultG
 */
public class OASOrgApacheSlingServletsGetDefaultG implements OAS.MappedProperties {
    /**
     * Get aliases
     * @return aliases
     */
    public OASConfigNodePropertyArray aliases { get; set; }

    /**
     * Get index
     * @return index
     */
    public OASConfigNodePropertyBoolean index { get; set; }

    /**
     * Get indexFiles
     * @return indexFiles
     */
    public OASConfigNodePropertyArray indexFiles { get; set; }

    /**
     * Get enableHtml
     * @return enableHtml
     */
    public OASConfigNodePropertyBoolean enableHtml { get; set; }

    /**
     * Get enableJson
     * @return enableJson
     */
    public OASConfigNodePropertyBoolean enableJson { get; set; }

    /**
     * Get enableTxt
     * @return enableTxt
     */
    public OASConfigNodePropertyBoolean enableTxt { get; set; }

    /**
     * Get enableXml
     * @return enableXml
     */
    public OASConfigNodePropertyBoolean enableXml { get; set; }

    /**
     * Get jsonMaximumresults
     * @return jsonMaximumresults
     */
    public OASConfigNodePropertyInteger jsonMaximumresults { get; set; }

    /**
     * Get ecmaSuport
     * @return ecmaSuport
     */
    public OASConfigNodePropertyBoolean ecmaSuport { get; set; }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'index.files' => 'indexFiles',
        'enable.html' => 'enableHtml',
        'enable.json' => 'enableJson',
        'enable.txt' => 'enableTxt',
        'enable.xml' => 'enableXml',
        'json.maximumresults' => 'jsonMaximumresults'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    public static OASOrgApacheSlingServletsGetDefaultG getExample() {
        OASOrgApacheSlingServletsGetDefaultG orgApacheSlingServletsGetDefaultGetServletProperties = new OASOrgApacheSlingServletsGetDefaultG();
          orgApacheSlingServletsGetDefaultGetServletProperties.aliases = OASConfigNodePropertyArray.getExample();
          orgApacheSlingServletsGetDefaultGetServletProperties.index = OASConfigNodePropertyBoolean.getExample();
          orgApacheSlingServletsGetDefaultGetServletProperties.indexFiles = OASConfigNodePropertyArray.getExample();
          orgApacheSlingServletsGetDefaultGetServletProperties.enableHtml = OASConfigNodePropertyBoolean.getExample();
          orgApacheSlingServletsGetDefaultGetServletProperties.enableJson = OASConfigNodePropertyBoolean.getExample();
          orgApacheSlingServletsGetDefaultGetServletProperties.enableTxt = OASConfigNodePropertyBoolean.getExample();
          orgApacheSlingServletsGetDefaultGetServletProperties.enableXml = OASConfigNodePropertyBoolean.getExample();
          orgApacheSlingServletsGetDefaultGetServletProperties.jsonMaximumresults = OASConfigNodePropertyInteger.getExample();
          orgApacheSlingServletsGetDefaultGetServletProperties.ecmaSuport = OASConfigNodePropertyBoolean.getExample();
        return orgApacheSlingServletsGetDefaultGetServletProperties;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof OASOrgApacheSlingServletsGetDefaultG) {           
            OASOrgApacheSlingServletsGetDefaultG orgApacheSlingServletsGetDefaultGetServletProperties = (OASOrgApacheSlingServletsGetDefaultG) obj;
            return this.aliases == orgApacheSlingServletsGetDefaultGetServletProperties.aliases
                && this.index == orgApacheSlingServletsGetDefaultGetServletProperties.index
                && this.indexFiles == orgApacheSlingServletsGetDefaultGetServletProperties.indexFiles
                && this.enableHtml == orgApacheSlingServletsGetDefaultGetServletProperties.enableHtml
                && this.enableJson == orgApacheSlingServletsGetDefaultGetServletProperties.enableJson
                && this.enableTxt == orgApacheSlingServletsGetDefaultGetServletProperties.enableTxt
                && this.enableXml == orgApacheSlingServletsGetDefaultGetServletProperties.enableXml
                && this.jsonMaximumresults == orgApacheSlingServletsGetDefaultGetServletProperties.jsonMaximumresults
                && this.ecmaSuport == orgApacheSlingServletsGetDefaultGetServletProperties.ecmaSuport;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (aliases == null ? 0 : System.hashCode(aliases));
        hashCode = (17 * hashCode) + (index == null ? 0 : System.hashCode(index));
        hashCode = (17 * hashCode) + (indexFiles == null ? 0 : System.hashCode(indexFiles));
        hashCode = (17 * hashCode) + (enableHtml == null ? 0 : System.hashCode(enableHtml));
        hashCode = (17 * hashCode) + (enableJson == null ? 0 : System.hashCode(enableJson));
        hashCode = (17 * hashCode) + (enableTxt == null ? 0 : System.hashCode(enableTxt));
        hashCode = (17 * hashCode) + (enableXml == null ? 0 : System.hashCode(enableXml));
        hashCode = (17 * hashCode) + (jsonMaximumresults == null ? 0 : System.hashCode(jsonMaximumresults));
        hashCode = (17 * hashCode) + (ecmaSuport == null ? 0 : System.hashCode(ecmaSuport));
        return hashCode;
    }
}

