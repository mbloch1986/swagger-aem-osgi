/* 
 * Adobe Experience Manager OSGI config (AEM) API
 *
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 * Generated by: https://openapi-generator.tech
 */


#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct OrgApacheSlingHapiImplHApiUtilImplProperties {
  #[serde(rename = "org.apache.sling.hapi.tools.resourcetype")]
  org_apache_sling_hapi_tools_resourcetype: Option<::models::ConfigNodePropertyString>,
  #[serde(rename = "org.apache.sling.hapi.tools.collectionresourcetype")]
  org_apache_sling_hapi_tools_collectionresourcetype: Option<::models::ConfigNodePropertyString>,
  #[serde(rename = "org.apache.sling.hapi.tools.searchpaths")]
  org_apache_sling_hapi_tools_searchpaths: Option<::models::ConfigNodePropertyArray>,
  #[serde(rename = "org.apache.sling.hapi.tools.externalurl")]
  org_apache_sling_hapi_tools_externalurl: Option<::models::ConfigNodePropertyString>,
  #[serde(rename = "org.apache.sling.hapi.tools.enabled")]
  org_apache_sling_hapi_tools_enabled: Option<::models::ConfigNodePropertyBoolean>
}

impl OrgApacheSlingHapiImplHApiUtilImplProperties {
  pub fn new() -> OrgApacheSlingHapiImplHApiUtilImplProperties {
    OrgApacheSlingHapiImplHApiUtilImplProperties {
      org_apache_sling_hapi_tools_resourcetype: None,
      org_apache_sling_hapi_tools_collectionresourcetype: None,
      org_apache_sling_hapi_tools_searchpaths: None,
      org_apache_sling_hapi_tools_externalurl: None,
      org_apache_sling_hapi_tools_enabled: None
    }
  }

  pub fn set_org_apache_sling_hapi_tools_resourcetype(&mut self, org_apache_sling_hapi_tools_resourcetype: ::models::ConfigNodePropertyString) {
    self.org_apache_sling_hapi_tools_resourcetype = Some(org_apache_sling_hapi_tools_resourcetype);
  }

  pub fn with_org_apache_sling_hapi_tools_resourcetype(mut self, org_apache_sling_hapi_tools_resourcetype: ::models::ConfigNodePropertyString) -> OrgApacheSlingHapiImplHApiUtilImplProperties {
    self.org_apache_sling_hapi_tools_resourcetype = Some(org_apache_sling_hapi_tools_resourcetype);
    self
  }

  pub fn org_apache_sling_hapi_tools_resourcetype(&self) -> Option<&::models::ConfigNodePropertyString> {
    self.org_apache_sling_hapi_tools_resourcetype.as_ref()
  }

  pub fn reset_org_apache_sling_hapi_tools_resourcetype(&mut self) {
    self.org_apache_sling_hapi_tools_resourcetype = None;
  }

  pub fn set_org_apache_sling_hapi_tools_collectionresourcetype(&mut self, org_apache_sling_hapi_tools_collectionresourcetype: ::models::ConfigNodePropertyString) {
    self.org_apache_sling_hapi_tools_collectionresourcetype = Some(org_apache_sling_hapi_tools_collectionresourcetype);
  }

  pub fn with_org_apache_sling_hapi_tools_collectionresourcetype(mut self, org_apache_sling_hapi_tools_collectionresourcetype: ::models::ConfigNodePropertyString) -> OrgApacheSlingHapiImplHApiUtilImplProperties {
    self.org_apache_sling_hapi_tools_collectionresourcetype = Some(org_apache_sling_hapi_tools_collectionresourcetype);
    self
  }

  pub fn org_apache_sling_hapi_tools_collectionresourcetype(&self) -> Option<&::models::ConfigNodePropertyString> {
    self.org_apache_sling_hapi_tools_collectionresourcetype.as_ref()
  }

  pub fn reset_org_apache_sling_hapi_tools_collectionresourcetype(&mut self) {
    self.org_apache_sling_hapi_tools_collectionresourcetype = None;
  }

  pub fn set_org_apache_sling_hapi_tools_searchpaths(&mut self, org_apache_sling_hapi_tools_searchpaths: ::models::ConfigNodePropertyArray) {
    self.org_apache_sling_hapi_tools_searchpaths = Some(org_apache_sling_hapi_tools_searchpaths);
  }

  pub fn with_org_apache_sling_hapi_tools_searchpaths(mut self, org_apache_sling_hapi_tools_searchpaths: ::models::ConfigNodePropertyArray) -> OrgApacheSlingHapiImplHApiUtilImplProperties {
    self.org_apache_sling_hapi_tools_searchpaths = Some(org_apache_sling_hapi_tools_searchpaths);
    self
  }

  pub fn org_apache_sling_hapi_tools_searchpaths(&self) -> Option<&::models::ConfigNodePropertyArray> {
    self.org_apache_sling_hapi_tools_searchpaths.as_ref()
  }

  pub fn reset_org_apache_sling_hapi_tools_searchpaths(&mut self) {
    self.org_apache_sling_hapi_tools_searchpaths = None;
  }

  pub fn set_org_apache_sling_hapi_tools_externalurl(&mut self, org_apache_sling_hapi_tools_externalurl: ::models::ConfigNodePropertyString) {
    self.org_apache_sling_hapi_tools_externalurl = Some(org_apache_sling_hapi_tools_externalurl);
  }

  pub fn with_org_apache_sling_hapi_tools_externalurl(mut self, org_apache_sling_hapi_tools_externalurl: ::models::ConfigNodePropertyString) -> OrgApacheSlingHapiImplHApiUtilImplProperties {
    self.org_apache_sling_hapi_tools_externalurl = Some(org_apache_sling_hapi_tools_externalurl);
    self
  }

  pub fn org_apache_sling_hapi_tools_externalurl(&self) -> Option<&::models::ConfigNodePropertyString> {
    self.org_apache_sling_hapi_tools_externalurl.as_ref()
  }

  pub fn reset_org_apache_sling_hapi_tools_externalurl(&mut self) {
    self.org_apache_sling_hapi_tools_externalurl = None;
  }

  pub fn set_org_apache_sling_hapi_tools_enabled(&mut self, org_apache_sling_hapi_tools_enabled: ::models::ConfigNodePropertyBoolean) {
    self.org_apache_sling_hapi_tools_enabled = Some(org_apache_sling_hapi_tools_enabled);
  }

  pub fn with_org_apache_sling_hapi_tools_enabled(mut self, org_apache_sling_hapi_tools_enabled: ::models::ConfigNodePropertyBoolean) -> OrgApacheSlingHapiImplHApiUtilImplProperties {
    self.org_apache_sling_hapi_tools_enabled = Some(org_apache_sling_hapi_tools_enabled);
    self
  }

  pub fn org_apache_sling_hapi_tools_enabled(&self) -> Option<&::models::ConfigNodePropertyBoolean> {
    self.org_apache_sling_hapi_tools_enabled.as_ref()
  }

  pub fn reset_org_apache_sling_hapi_tools_enabled(&mut self) {
    self.org_apache_sling_hapi_tools_enabled = None;
  }

}



