/**
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


#include "OAIOrgApacheJackrabbitOakSpiSecurityAuthorizationCugImplCugConfiProperties.h"

#include "OAIHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace OpenAPI {

OAIOrgApacheJackrabbitOakSpiSecurityAuthorizationCugImplCugConfiProperties::OAIOrgApacheJackrabbitOakSpiSecurityAuthorizationCugImplCugConfiProperties(QString json) {
    this->fromJson(json);
}

OAIOrgApacheJackrabbitOakSpiSecurityAuthorizationCugImplCugConfiProperties::OAIOrgApacheJackrabbitOakSpiSecurityAuthorizationCugImplCugConfiProperties() {
    this->init();
}

OAIOrgApacheJackrabbitOakSpiSecurityAuthorizationCugImplCugConfiProperties::~OAIOrgApacheJackrabbitOakSpiSecurityAuthorizationCugImplCugConfiProperties() {
    
}

void
OAIOrgApacheJackrabbitOakSpiSecurityAuthorizationCugImplCugConfiProperties::init() {
    m_cug_supported_paths_isSet = false;
    m_cug_enabled_isSet = false;
    m_configuration_ranking_isSet = false;
}

void
OAIOrgApacheJackrabbitOakSpiSecurityAuthorizationCugImplCugConfiProperties::fromJson(QString jsonString) {
    QByteArray array (jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void
OAIOrgApacheJackrabbitOakSpiSecurityAuthorizationCugImplCugConfiProperties::fromJsonObject(QJsonObject json) {
    ::OpenAPI::fromJsonValue(cug_supported_paths, json[QString("cugSupportedPaths")]);
    
    ::OpenAPI::fromJsonValue(cug_enabled, json[QString("cugEnabled")]);
    
    ::OpenAPI::fromJsonValue(configuration_ranking, json[QString("configurationRanking")]);
    
}

QString
OAIOrgApacheJackrabbitOakSpiSecurityAuthorizationCugImplCugConfiProperties::asJson () const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject
OAIOrgApacheJackrabbitOakSpiSecurityAuthorizationCugImplCugConfiProperties::asJsonObject() const {
    QJsonObject obj;
	if(cug_supported_paths.isSet()){
        obj.insert(QString("cugSupportedPaths"), ::OpenAPI::toJsonValue(cug_supported_paths));
    }
	if(cug_enabled.isSet()){
        obj.insert(QString("cugEnabled"), ::OpenAPI::toJsonValue(cug_enabled));
    }
	if(configuration_ranking.isSet()){
        obj.insert(QString("configurationRanking"), ::OpenAPI::toJsonValue(configuration_ranking));
    }
    return obj;
}

OAIConfigNodePropertyArray
OAIOrgApacheJackrabbitOakSpiSecurityAuthorizationCugImplCugConfiProperties::getCugSupportedPaths() const {
    return cug_supported_paths;
}
void
OAIOrgApacheJackrabbitOakSpiSecurityAuthorizationCugImplCugConfiProperties::setCugSupportedPaths(const OAIConfigNodePropertyArray &cug_supported_paths) {
    this->cug_supported_paths = cug_supported_paths;
    this->m_cug_supported_paths_isSet = true;
}

OAIConfigNodePropertyBoolean
OAIOrgApacheJackrabbitOakSpiSecurityAuthorizationCugImplCugConfiProperties::getCugEnabled() const {
    return cug_enabled;
}
void
OAIOrgApacheJackrabbitOakSpiSecurityAuthorizationCugImplCugConfiProperties::setCugEnabled(const OAIConfigNodePropertyBoolean &cug_enabled) {
    this->cug_enabled = cug_enabled;
    this->m_cug_enabled_isSet = true;
}

OAIConfigNodePropertyInteger
OAIOrgApacheJackrabbitOakSpiSecurityAuthorizationCugImplCugConfiProperties::getConfigurationRanking() const {
    return configuration_ranking;
}
void
OAIOrgApacheJackrabbitOakSpiSecurityAuthorizationCugImplCugConfiProperties::setConfigurationRanking(const OAIConfigNodePropertyInteger &configuration_ranking) {
    this->configuration_ranking = configuration_ranking;
    this->m_configuration_ranking_isSet = true;
}


bool
OAIOrgApacheJackrabbitOakSpiSecurityAuthorizationCugImplCugConfiProperties::isSet() const {
    bool isObjectUpdated = false;
    do{ 
        if(cug_supported_paths.isSet()){ isObjectUpdated = true; break;}
    
        if(cug_enabled.isSet()){ isObjectUpdated = true; break;}
    
        if(configuration_ranking.isSet()){ isObjectUpdated = true; break;}
    }while(false);
    return isObjectUpdated;
}

}

