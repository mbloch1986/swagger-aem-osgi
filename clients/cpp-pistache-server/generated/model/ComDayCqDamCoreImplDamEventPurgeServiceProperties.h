/**
* Adobe Experience Manager OSGI config (AEM) API
* Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
*
* OpenAPI spec version: 1.0.0-pre.0
* Contact: opensource@shinesolutions.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
/*
 * ComDayCqDamCoreImplDamEventPurgeServiceProperties.h
 *
 * 
 */

#ifndef ComDayCqDamCoreImplDamEventPurgeServiceProperties_H_
#define ComDayCqDamCoreImplDamEventPurgeServiceProperties_H_


#include "ModelBase.h"

#include "ConfigNodePropertyBoolean.h"
#include "ConfigNodePropertyDropDown.h"
#include "ConfigNodePropertyInteger.h"
#include "ConfigNodePropertyString.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
/// 
/// </summary>
class  ComDayCqDamCoreImplDamEventPurgeServiceProperties
    : public ModelBase
{
public:
    ComDayCqDamCoreImplDamEventPurgeServiceProperties();
    virtual ~ComDayCqDamCoreImplDamEventPurgeServiceProperties();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    nlohmann::json toJson() const override;
    void fromJson(nlohmann::json& json) override;

    /////////////////////////////////////////////
    /// ComDayCqDamCoreImplDamEventPurgeServiceProperties members

    /// <summary>
    /// 
    /// </summary>
    ConfigNodePropertyString getSchedulerExpression() const;
    void setSchedulerExpression(ConfigNodePropertyString const& value);
    bool schedulerExpressionIsSet() const;
    void unsetScheduler_expression();
    /// <summary>
    /// 
    /// </summary>
    ConfigNodePropertyInteger getMaxSavedActivities() const;
    void setMaxSavedActivities(ConfigNodePropertyInteger const& value);
    bool maxSavedActivitiesIsSet() const;
    void unsetMaxSavedActivities();
    /// <summary>
    /// 
    /// </summary>
    ConfigNodePropertyInteger getSaveInterval() const;
    void setSaveInterval(ConfigNodePropertyInteger const& value);
    bool saveIntervalIsSet() const;
    void unsetSaveInterval();
    /// <summary>
    /// 
    /// </summary>
    ConfigNodePropertyBoolean getEnableActivityPurge() const;
    void setEnableActivityPurge(ConfigNodePropertyBoolean const& value);
    bool enableActivityPurgeIsSet() const;
    void unsetEnableActivityPurge();
    /// <summary>
    /// 
    /// </summary>
    ConfigNodePropertyDropDown getEventTypes() const;
    void setEventTypes(ConfigNodePropertyDropDown const& value);
    bool eventTypesIsSet() const;
    void unsetEventTypes();

protected:
    ConfigNodePropertyString m_Scheduler_expression;
    bool m_Scheduler_expressionIsSet;
    ConfigNodePropertyInteger m_MaxSavedActivities;
    bool m_MaxSavedActivitiesIsSet;
    ConfigNodePropertyInteger m_SaveInterval;
    bool m_SaveIntervalIsSet;
    ConfigNodePropertyBoolean m_EnableActivityPurge;
    bool m_EnableActivityPurgeIsSet;
    ConfigNodePropertyDropDown m_EventTypes;
    bool m_EventTypesIsSet;
};

}
}
}
}

#endif /* ComDayCqDamCoreImplDamEventPurgeServiceProperties_H_ */
