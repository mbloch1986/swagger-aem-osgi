/**
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


#include "OAIComDayCqMcmCoreNewsletterNewsletterEmailServiceImplProperties.h"

#include "OAIHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace OpenAPI {

OAIComDayCqMcmCoreNewsletterNewsletterEmailServiceImplProperties::OAIComDayCqMcmCoreNewsletterNewsletterEmailServiceImplProperties(QString json) {
    this->fromJson(json);
}

OAIComDayCqMcmCoreNewsletterNewsletterEmailServiceImplProperties::OAIComDayCqMcmCoreNewsletterNewsletterEmailServiceImplProperties() {
    this->init();
}

OAIComDayCqMcmCoreNewsletterNewsletterEmailServiceImplProperties::~OAIComDayCqMcmCoreNewsletterNewsletterEmailServiceImplProperties() {
    
}

void
OAIComDayCqMcmCoreNewsletterNewsletterEmailServiceImplProperties::init() {
    m_from_address_isSet = false;
    m_sender_host_isSet = false;
    m_max_bounce_count_isSet = false;
}

void
OAIComDayCqMcmCoreNewsletterNewsletterEmailServiceImplProperties::fromJson(QString jsonString) {
    QByteArray array (jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void
OAIComDayCqMcmCoreNewsletterNewsletterEmailServiceImplProperties::fromJsonObject(QJsonObject json) {
    ::OpenAPI::fromJsonValue(from_address, json[QString("from.address")]);
    
    ::OpenAPI::fromJsonValue(sender_host, json[QString("sender.host")]);
    
    ::OpenAPI::fromJsonValue(max_bounce_count, json[QString("max.bounce.count")]);
    
}

QString
OAIComDayCqMcmCoreNewsletterNewsletterEmailServiceImplProperties::asJson () const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject
OAIComDayCqMcmCoreNewsletterNewsletterEmailServiceImplProperties::asJsonObject() const {
    QJsonObject obj;
	if(from_address.isSet()){
        obj.insert(QString("from.address"), ::OpenAPI::toJsonValue(from_address));
    }
	if(sender_host.isSet()){
        obj.insert(QString("sender.host"), ::OpenAPI::toJsonValue(sender_host));
    }
	if(max_bounce_count.isSet()){
        obj.insert(QString("max.bounce.count"), ::OpenAPI::toJsonValue(max_bounce_count));
    }
    return obj;
}

OAIConfigNodePropertyString
OAIComDayCqMcmCoreNewsletterNewsletterEmailServiceImplProperties::getFromAddress() const {
    return from_address;
}
void
OAIComDayCqMcmCoreNewsletterNewsletterEmailServiceImplProperties::setFromAddress(const OAIConfigNodePropertyString &from_address) {
    this->from_address = from_address;
    this->m_from_address_isSet = true;
}

OAIConfigNodePropertyString
OAIComDayCqMcmCoreNewsletterNewsletterEmailServiceImplProperties::getSenderHost() const {
    return sender_host;
}
void
OAIComDayCqMcmCoreNewsletterNewsletterEmailServiceImplProperties::setSenderHost(const OAIConfigNodePropertyString &sender_host) {
    this->sender_host = sender_host;
    this->m_sender_host_isSet = true;
}

OAIConfigNodePropertyString
OAIComDayCqMcmCoreNewsletterNewsletterEmailServiceImplProperties::getMaxBounceCount() const {
    return max_bounce_count;
}
void
OAIComDayCqMcmCoreNewsletterNewsletterEmailServiceImplProperties::setMaxBounceCount(const OAIConfigNodePropertyString &max_bounce_count) {
    this->max_bounce_count = max_bounce_count;
    this->m_max_bounce_count_isSet = true;
}


bool
OAIComDayCqMcmCoreNewsletterNewsletterEmailServiceImplProperties::isSet() const {
    bool isObjectUpdated = false;
    do{ 
        if(from_address.isSet()){ isObjectUpdated = true; break;}
    
        if(sender_host.isSet()){ isObjectUpdated = true; break;}
    
        if(max_bounce_count.isSet()){ isObjectUpdated = true; break;}
    }while(false);
    return isObjectUpdated;
}

}

