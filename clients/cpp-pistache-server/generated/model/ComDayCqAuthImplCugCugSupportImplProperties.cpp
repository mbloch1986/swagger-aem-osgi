/**
* Adobe Experience Manager OSGI config (AEM) API
* Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
*
* OpenAPI spec version: 1.0.0-pre.0
* Contact: opensource@shinesolutions.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/


#include "ComDayCqAuthImplCugCugSupportImplProperties.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

ComDayCqAuthImplCugCugSupportImplProperties::ComDayCqAuthImplCugCugSupportImplProperties()
{
    m_Cug_exempted_principalsIsSet = false;
    m_Cug_enabledIsSet = false;
    m_Cug_principals_regexIsSet = false;
    m_Cug_principals_replacementIsSet = false;
    
}

ComDayCqAuthImplCugCugSupportImplProperties::~ComDayCqAuthImplCugCugSupportImplProperties()
{
}

void ComDayCqAuthImplCugCugSupportImplProperties::validate()
{
    // TODO: implement validation
}

nlohmann::json ComDayCqAuthImplCugCugSupportImplProperties::toJson() const
{
    nlohmann::json val = nlohmann::json::object();

    if(m_Cug_exempted_principalsIsSet)
    {
        val["cug.exempted.principals"] = ModelBase::toJson(m_Cug_exempted_principals);
    }
    if(m_Cug_enabledIsSet)
    {
        val["cug.enabled"] = ModelBase::toJson(m_Cug_enabled);
    }
    if(m_Cug_principals_regexIsSet)
    {
        val["cug.principals.regex"] = ModelBase::toJson(m_Cug_principals_regex);
    }
    if(m_Cug_principals_replacementIsSet)
    {
        val["cug.principals.replacement"] = ModelBase::toJson(m_Cug_principals_replacement);
    }
    

    return val;
}

void ComDayCqAuthImplCugCugSupportImplProperties::fromJson(nlohmann::json& val)
{
    if(val.find("cug.exempted.principals") != val.end())
    {
        if(!val["cug.exempted.principals"].is_null())
        {
            ConfigNodePropertyArray newItem;
            newItem.fromJson(val["cug.exempted.principals"]);
            setCugExemptedPrincipals( newItem );
        }
        
    }
    if(val.find("cug.enabled") != val.end())
    {
        if(!val["cug.enabled"].is_null())
        {
            ConfigNodePropertyBoolean newItem;
            newItem.fromJson(val["cug.enabled"]);
            setCugEnabled( newItem );
        }
        
    }
    if(val.find("cug.principals.regex") != val.end())
    {
        if(!val["cug.principals.regex"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["cug.principals.regex"]);
            setCugPrincipalsRegex( newItem );
        }
        
    }
    if(val.find("cug.principals.replacement") != val.end())
    {
        if(!val["cug.principals.replacement"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["cug.principals.replacement"]);
            setCugPrincipalsReplacement( newItem );
        }
        
    }
    
}


ConfigNodePropertyArray ComDayCqAuthImplCugCugSupportImplProperties::getCugExemptedPrincipals() const
{
    return m_Cug_exempted_principals;
}
void ComDayCqAuthImplCugCugSupportImplProperties::setCugExemptedPrincipals(ConfigNodePropertyArray const& value)
{
    m_Cug_exempted_principals = value;
    m_Cug_exempted_principalsIsSet = true;
}
bool ComDayCqAuthImplCugCugSupportImplProperties::cugExemptedPrincipalsIsSet() const
{
    return m_Cug_exempted_principalsIsSet;
}
void ComDayCqAuthImplCugCugSupportImplProperties::unsetCug_exempted_principals()
{
    m_Cug_exempted_principalsIsSet = false;
}
ConfigNodePropertyBoolean ComDayCqAuthImplCugCugSupportImplProperties::getCugEnabled() const
{
    return m_Cug_enabled;
}
void ComDayCqAuthImplCugCugSupportImplProperties::setCugEnabled(ConfigNodePropertyBoolean const& value)
{
    m_Cug_enabled = value;
    m_Cug_enabledIsSet = true;
}
bool ComDayCqAuthImplCugCugSupportImplProperties::cugEnabledIsSet() const
{
    return m_Cug_enabledIsSet;
}
void ComDayCqAuthImplCugCugSupportImplProperties::unsetCug_enabled()
{
    m_Cug_enabledIsSet = false;
}
ConfigNodePropertyString ComDayCqAuthImplCugCugSupportImplProperties::getCugPrincipalsRegex() const
{
    return m_Cug_principals_regex;
}
void ComDayCqAuthImplCugCugSupportImplProperties::setCugPrincipalsRegex(ConfigNodePropertyString const& value)
{
    m_Cug_principals_regex = value;
    m_Cug_principals_regexIsSet = true;
}
bool ComDayCqAuthImplCugCugSupportImplProperties::cugPrincipalsRegexIsSet() const
{
    return m_Cug_principals_regexIsSet;
}
void ComDayCqAuthImplCugCugSupportImplProperties::unsetCug_principals_regex()
{
    m_Cug_principals_regexIsSet = false;
}
ConfigNodePropertyString ComDayCqAuthImplCugCugSupportImplProperties::getCugPrincipalsReplacement() const
{
    return m_Cug_principals_replacement;
}
void ComDayCqAuthImplCugCugSupportImplProperties::setCugPrincipalsReplacement(ConfigNodePropertyString const& value)
{
    m_Cug_principals_replacement = value;
    m_Cug_principals_replacementIsSet = true;
}
bool ComDayCqAuthImplCugCugSupportImplProperties::cugPrincipalsReplacementIsSet() const
{
    return m_Cug_principals_replacementIsSet;
}
void ComDayCqAuthImplCugCugSupportImplProperties::unsetCug_principals_replacement()
{
    m_Cug_principals_replacementIsSet = false;
}

}
}
}
}

