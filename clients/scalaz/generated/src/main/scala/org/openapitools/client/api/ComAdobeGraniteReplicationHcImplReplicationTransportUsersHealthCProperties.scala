package org.openapitools.client.api

import argonaut._
import argonaut.EncodeJson._
import argonaut.DecodeJson._

import org.http4s.{EntityDecoder, EntityEncoder}
import org.http4s.argonaut._
import org.joda.time.DateTime
import ComAdobeGraniteReplicationHcImplReplicationTransportUsersHealthCProperties._

case class ComAdobeGraniteReplicationHcImplReplicationTransportUsersHealthCProperties (
  hcTags: Option[ConfigNodePropertyArray])

object ComAdobeGraniteReplicationHcImplReplicationTransportUsersHealthCProperties {
  import DateTimeCodecs._

  implicit val ComAdobeGraniteReplicationHcImplReplicationTransportUsersHealthCPropertiesCodecJson: CodecJson[ComAdobeGraniteReplicationHcImplReplicationTransportUsersHealthCProperties] = CodecJson.derive[ComAdobeGraniteReplicationHcImplReplicationTransportUsersHealthCProperties]
  implicit val ComAdobeGraniteReplicationHcImplReplicationTransportUsersHealthCPropertiesDecoder: EntityDecoder[ComAdobeGraniteReplicationHcImplReplicationTransportUsersHealthCProperties] = jsonOf[ComAdobeGraniteReplicationHcImplReplicationTransportUsersHealthCProperties]
  implicit val ComAdobeGraniteReplicationHcImplReplicationTransportUsersHealthCPropertiesEncoder: EntityEncoder[ComAdobeGraniteReplicationHcImplReplicationTransportUsersHealthCProperties] = jsonEncoderOf[ComAdobeGraniteReplicationHcImplReplicationTransportUsersHealthCProperties]
}
