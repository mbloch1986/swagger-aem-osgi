package org.openapitools.client.api

import argonaut._
import argonaut.EncodeJson._
import argonaut.DecodeJson._

import org.http4s.{EntityDecoder, EntityEncoder}
import org.http4s.argonaut._
import org.joda.time.DateTime
import OrgApacheJackrabbitOakPluginsBlobDatastoreDataStoreTextProviderProperties._

case class OrgApacheJackrabbitOakPluginsBlobDatastoreDataStoreTextProviderProperties (
  dir: Option[ConfigNodePropertyString])

object OrgApacheJackrabbitOakPluginsBlobDatastoreDataStoreTextProviderProperties {
  import DateTimeCodecs._

  implicit val OrgApacheJackrabbitOakPluginsBlobDatastoreDataStoreTextProviderPropertiesCodecJson: CodecJson[OrgApacheJackrabbitOakPluginsBlobDatastoreDataStoreTextProviderProperties] = CodecJson.derive[OrgApacheJackrabbitOakPluginsBlobDatastoreDataStoreTextProviderProperties]
  implicit val OrgApacheJackrabbitOakPluginsBlobDatastoreDataStoreTextProviderPropertiesDecoder: EntityDecoder[OrgApacheJackrabbitOakPluginsBlobDatastoreDataStoreTextProviderProperties] = jsonOf[OrgApacheJackrabbitOakPluginsBlobDatastoreDataStoreTextProviderProperties]
  implicit val OrgApacheJackrabbitOakPluginsBlobDatastoreDataStoreTextProviderPropertiesEncoder: EntityEncoder[OrgApacheJackrabbitOakPluginsBlobDatastoreDataStoreTextProviderProperties] = jsonEncoderOf[OrgApacheJackrabbitOakPluginsBlobDatastoreDataStoreTextProviderProperties]
}
