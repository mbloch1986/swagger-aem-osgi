/**
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 3.2.1-SNAPSHOT.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OrgApacheSlingServletsGetDefaultGetServletProperties.h
 *
 * 
 */

#ifndef OrgApacheSlingServletsGetDefaultGetServletProperties_H_
#define OrgApacheSlingServletsGetDefaultGetServletProperties_H_



#include "ConfigNodePropertyBoolean.h"
#include "ConfigNodePropertyInteger.h"
#include "ConfigNodePropertyArray.h"
#include <memory>

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
/// 
/// </summary>
class  OrgApacheSlingServletsGetDefaultGetServletProperties
{
public:
    OrgApacheSlingServletsGetDefaultGetServletProperties();
    virtual ~OrgApacheSlingServletsGetDefaultGetServletProperties();
    
    std::string toJsonString();
    void fromJsonString(std::string const& jsonString);

    /////////////////////////////////////////////
    /// OrgApacheSlingServletsGetDefaultGetServletProperties members
    
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyArray> getAliases() const;
    void setAliases(std::shared_ptr<ConfigNodePropertyArray> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyBoolean> getIndex() const;
    void setIndex(std::shared_ptr<ConfigNodePropertyBoolean> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyArray> getIndexFiles() const;
    void setIndexFiles(std::shared_ptr<ConfigNodePropertyArray> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyBoolean> getEnableHtml() const;
    void setEnableHtml(std::shared_ptr<ConfigNodePropertyBoolean> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyBoolean> getEnableJson() const;
    void setEnableJson(std::shared_ptr<ConfigNodePropertyBoolean> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyBoolean> getEnableTxt() const;
    void setEnableTxt(std::shared_ptr<ConfigNodePropertyBoolean> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyBoolean> getEnableXml() const;
    void setEnableXml(std::shared_ptr<ConfigNodePropertyBoolean> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyInteger> getJsonMaximumresults() const;
    void setJsonMaximumresults(std::shared_ptr<ConfigNodePropertyInteger> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyBoolean> getEcmaSuport() const;
    void setEcmaSuport(std::shared_ptr<ConfigNodePropertyBoolean> value);

protected:
    std::shared_ptr<ConfigNodePropertyArray> m_Aliases;
    std::shared_ptr<ConfigNodePropertyBoolean> m_Index;
    std::shared_ptr<ConfigNodePropertyArray> m_Index_files;
    std::shared_ptr<ConfigNodePropertyBoolean> m_Enable_html;
    std::shared_ptr<ConfigNodePropertyBoolean> m_Enable_json;
    std::shared_ptr<ConfigNodePropertyBoolean> m_Enable_txt;
    std::shared_ptr<ConfigNodePropertyBoolean> m_Enable_xml;
    std::shared_ptr<ConfigNodePropertyInteger> m_Json_maximumresults;
    std::shared_ptr<ConfigNodePropertyBoolean> m_EcmaSuport;
};

}
}
}
}

#endif /* OrgApacheSlingServletsGetDefaultGetServletProperties_H_ */
