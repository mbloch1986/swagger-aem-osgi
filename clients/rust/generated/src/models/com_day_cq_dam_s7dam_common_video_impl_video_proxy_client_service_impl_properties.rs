/* 
 * Adobe Experience Manager OSGI config (AEM) API
 *
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 * Generated by: https://openapi-generator.tech
 */


#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct ComDayCqDamS7damCommonVideoImplVideoProxyClientServiceImplProperties {
  #[serde(rename = "cq.dam.s7dam.videoproxyclientservice.multipartupload.minsize.name")]
  cq_dam_s7dam_videoproxyclientservice_multipartupload_minsize_name: Option<::models::ConfigNodePropertyInteger>,
  #[serde(rename = "cq.dam.s7dam.videoproxyclientservice.multipartupload.partsize.name")]
  cq_dam_s7dam_videoproxyclientservice_multipartupload_partsize_name: Option<::models::ConfigNodePropertyInteger>,
  #[serde(rename = "cq.dam.s7dam.videoproxyclientservice.multipartupload.numthread.name")]
  cq_dam_s7dam_videoproxyclientservice_multipartupload_numthread_name: Option<::models::ConfigNodePropertyInteger>,
  #[serde(rename = "cq.dam.s7dam.videoproxyclientservice.http.readtimeout.name")]
  cq_dam_s7dam_videoproxyclientservice_http_readtimeout_name: Option<::models::ConfigNodePropertyInteger>,
  #[serde(rename = "cq.dam.s7dam.videoproxyclientservice.http.connectiontimeout.name")]
  cq_dam_s7dam_videoproxyclientservice_http_connectiontimeout_name: Option<::models::ConfigNodePropertyInteger>,
  #[serde(rename = "cq.dam.s7dam.videoproxyclientservice.http.maxretrycount.name")]
  cq_dam_s7dam_videoproxyclientservice_http_maxretrycount_name: Option<::models::ConfigNodePropertyInteger>,
  #[serde(rename = "cq.dam.s7dam.videoproxyclientservice.uploadprogress.interval.name")]
  cq_dam_s7dam_videoproxyclientservice_uploadprogress_interval_name: Option<::models::ConfigNodePropertyInteger>
}

impl ComDayCqDamS7damCommonVideoImplVideoProxyClientServiceImplProperties {
  pub fn new() -> ComDayCqDamS7damCommonVideoImplVideoProxyClientServiceImplProperties {
    ComDayCqDamS7damCommonVideoImplVideoProxyClientServiceImplProperties {
      cq_dam_s7dam_videoproxyclientservice_multipartupload_minsize_name: None,
      cq_dam_s7dam_videoproxyclientservice_multipartupload_partsize_name: None,
      cq_dam_s7dam_videoproxyclientservice_multipartupload_numthread_name: None,
      cq_dam_s7dam_videoproxyclientservice_http_readtimeout_name: None,
      cq_dam_s7dam_videoproxyclientservice_http_connectiontimeout_name: None,
      cq_dam_s7dam_videoproxyclientservice_http_maxretrycount_name: None,
      cq_dam_s7dam_videoproxyclientservice_uploadprogress_interval_name: None
    }
  }

  pub fn set_cq_dam_s7dam_videoproxyclientservice_multipartupload_minsize_name(&mut self, cq_dam_s7dam_videoproxyclientservice_multipartupload_minsize_name: ::models::ConfigNodePropertyInteger) {
    self.cq_dam_s7dam_videoproxyclientservice_multipartupload_minsize_name = Some(cq_dam_s7dam_videoproxyclientservice_multipartupload_minsize_name);
  }

  pub fn with_cq_dam_s7dam_videoproxyclientservice_multipartupload_minsize_name(mut self, cq_dam_s7dam_videoproxyclientservice_multipartupload_minsize_name: ::models::ConfigNodePropertyInteger) -> ComDayCqDamS7damCommonVideoImplVideoProxyClientServiceImplProperties {
    self.cq_dam_s7dam_videoproxyclientservice_multipartupload_minsize_name = Some(cq_dam_s7dam_videoproxyclientservice_multipartupload_minsize_name);
    self
  }

  pub fn cq_dam_s7dam_videoproxyclientservice_multipartupload_minsize_name(&self) -> Option<&::models::ConfigNodePropertyInteger> {
    self.cq_dam_s7dam_videoproxyclientservice_multipartupload_minsize_name.as_ref()
  }

  pub fn reset_cq_dam_s7dam_videoproxyclientservice_multipartupload_minsize_name(&mut self) {
    self.cq_dam_s7dam_videoproxyclientservice_multipartupload_minsize_name = None;
  }

  pub fn set_cq_dam_s7dam_videoproxyclientservice_multipartupload_partsize_name(&mut self, cq_dam_s7dam_videoproxyclientservice_multipartupload_partsize_name: ::models::ConfigNodePropertyInteger) {
    self.cq_dam_s7dam_videoproxyclientservice_multipartupload_partsize_name = Some(cq_dam_s7dam_videoproxyclientservice_multipartupload_partsize_name);
  }

  pub fn with_cq_dam_s7dam_videoproxyclientservice_multipartupload_partsize_name(mut self, cq_dam_s7dam_videoproxyclientservice_multipartupload_partsize_name: ::models::ConfigNodePropertyInteger) -> ComDayCqDamS7damCommonVideoImplVideoProxyClientServiceImplProperties {
    self.cq_dam_s7dam_videoproxyclientservice_multipartupload_partsize_name = Some(cq_dam_s7dam_videoproxyclientservice_multipartupload_partsize_name);
    self
  }

  pub fn cq_dam_s7dam_videoproxyclientservice_multipartupload_partsize_name(&self) -> Option<&::models::ConfigNodePropertyInteger> {
    self.cq_dam_s7dam_videoproxyclientservice_multipartupload_partsize_name.as_ref()
  }

  pub fn reset_cq_dam_s7dam_videoproxyclientservice_multipartupload_partsize_name(&mut self) {
    self.cq_dam_s7dam_videoproxyclientservice_multipartupload_partsize_name = None;
  }

  pub fn set_cq_dam_s7dam_videoproxyclientservice_multipartupload_numthread_name(&mut self, cq_dam_s7dam_videoproxyclientservice_multipartupload_numthread_name: ::models::ConfigNodePropertyInteger) {
    self.cq_dam_s7dam_videoproxyclientservice_multipartupload_numthread_name = Some(cq_dam_s7dam_videoproxyclientservice_multipartupload_numthread_name);
  }

  pub fn with_cq_dam_s7dam_videoproxyclientservice_multipartupload_numthread_name(mut self, cq_dam_s7dam_videoproxyclientservice_multipartupload_numthread_name: ::models::ConfigNodePropertyInteger) -> ComDayCqDamS7damCommonVideoImplVideoProxyClientServiceImplProperties {
    self.cq_dam_s7dam_videoproxyclientservice_multipartupload_numthread_name = Some(cq_dam_s7dam_videoproxyclientservice_multipartupload_numthread_name);
    self
  }

  pub fn cq_dam_s7dam_videoproxyclientservice_multipartupload_numthread_name(&self) -> Option<&::models::ConfigNodePropertyInteger> {
    self.cq_dam_s7dam_videoproxyclientservice_multipartupload_numthread_name.as_ref()
  }

  pub fn reset_cq_dam_s7dam_videoproxyclientservice_multipartupload_numthread_name(&mut self) {
    self.cq_dam_s7dam_videoproxyclientservice_multipartupload_numthread_name = None;
  }

  pub fn set_cq_dam_s7dam_videoproxyclientservice_http_readtimeout_name(&mut self, cq_dam_s7dam_videoproxyclientservice_http_readtimeout_name: ::models::ConfigNodePropertyInteger) {
    self.cq_dam_s7dam_videoproxyclientservice_http_readtimeout_name = Some(cq_dam_s7dam_videoproxyclientservice_http_readtimeout_name);
  }

  pub fn with_cq_dam_s7dam_videoproxyclientservice_http_readtimeout_name(mut self, cq_dam_s7dam_videoproxyclientservice_http_readtimeout_name: ::models::ConfigNodePropertyInteger) -> ComDayCqDamS7damCommonVideoImplVideoProxyClientServiceImplProperties {
    self.cq_dam_s7dam_videoproxyclientservice_http_readtimeout_name = Some(cq_dam_s7dam_videoproxyclientservice_http_readtimeout_name);
    self
  }

  pub fn cq_dam_s7dam_videoproxyclientservice_http_readtimeout_name(&self) -> Option<&::models::ConfigNodePropertyInteger> {
    self.cq_dam_s7dam_videoproxyclientservice_http_readtimeout_name.as_ref()
  }

  pub fn reset_cq_dam_s7dam_videoproxyclientservice_http_readtimeout_name(&mut self) {
    self.cq_dam_s7dam_videoproxyclientservice_http_readtimeout_name = None;
  }

  pub fn set_cq_dam_s7dam_videoproxyclientservice_http_connectiontimeout_name(&mut self, cq_dam_s7dam_videoproxyclientservice_http_connectiontimeout_name: ::models::ConfigNodePropertyInteger) {
    self.cq_dam_s7dam_videoproxyclientservice_http_connectiontimeout_name = Some(cq_dam_s7dam_videoproxyclientservice_http_connectiontimeout_name);
  }

  pub fn with_cq_dam_s7dam_videoproxyclientservice_http_connectiontimeout_name(mut self, cq_dam_s7dam_videoproxyclientservice_http_connectiontimeout_name: ::models::ConfigNodePropertyInteger) -> ComDayCqDamS7damCommonVideoImplVideoProxyClientServiceImplProperties {
    self.cq_dam_s7dam_videoproxyclientservice_http_connectiontimeout_name = Some(cq_dam_s7dam_videoproxyclientservice_http_connectiontimeout_name);
    self
  }

  pub fn cq_dam_s7dam_videoproxyclientservice_http_connectiontimeout_name(&self) -> Option<&::models::ConfigNodePropertyInteger> {
    self.cq_dam_s7dam_videoproxyclientservice_http_connectiontimeout_name.as_ref()
  }

  pub fn reset_cq_dam_s7dam_videoproxyclientservice_http_connectiontimeout_name(&mut self) {
    self.cq_dam_s7dam_videoproxyclientservice_http_connectiontimeout_name = None;
  }

  pub fn set_cq_dam_s7dam_videoproxyclientservice_http_maxretrycount_name(&mut self, cq_dam_s7dam_videoproxyclientservice_http_maxretrycount_name: ::models::ConfigNodePropertyInteger) {
    self.cq_dam_s7dam_videoproxyclientservice_http_maxretrycount_name = Some(cq_dam_s7dam_videoproxyclientservice_http_maxretrycount_name);
  }

  pub fn with_cq_dam_s7dam_videoproxyclientservice_http_maxretrycount_name(mut self, cq_dam_s7dam_videoproxyclientservice_http_maxretrycount_name: ::models::ConfigNodePropertyInteger) -> ComDayCqDamS7damCommonVideoImplVideoProxyClientServiceImplProperties {
    self.cq_dam_s7dam_videoproxyclientservice_http_maxretrycount_name = Some(cq_dam_s7dam_videoproxyclientservice_http_maxretrycount_name);
    self
  }

  pub fn cq_dam_s7dam_videoproxyclientservice_http_maxretrycount_name(&self) -> Option<&::models::ConfigNodePropertyInteger> {
    self.cq_dam_s7dam_videoproxyclientservice_http_maxretrycount_name.as_ref()
  }

  pub fn reset_cq_dam_s7dam_videoproxyclientservice_http_maxretrycount_name(&mut self) {
    self.cq_dam_s7dam_videoproxyclientservice_http_maxretrycount_name = None;
  }

  pub fn set_cq_dam_s7dam_videoproxyclientservice_uploadprogress_interval_name(&mut self, cq_dam_s7dam_videoproxyclientservice_uploadprogress_interval_name: ::models::ConfigNodePropertyInteger) {
    self.cq_dam_s7dam_videoproxyclientservice_uploadprogress_interval_name = Some(cq_dam_s7dam_videoproxyclientservice_uploadprogress_interval_name);
  }

  pub fn with_cq_dam_s7dam_videoproxyclientservice_uploadprogress_interval_name(mut self, cq_dam_s7dam_videoproxyclientservice_uploadprogress_interval_name: ::models::ConfigNodePropertyInteger) -> ComDayCqDamS7damCommonVideoImplVideoProxyClientServiceImplProperties {
    self.cq_dam_s7dam_videoproxyclientservice_uploadprogress_interval_name = Some(cq_dam_s7dam_videoproxyclientservice_uploadprogress_interval_name);
    self
  }

  pub fn cq_dam_s7dam_videoproxyclientservice_uploadprogress_interval_name(&self) -> Option<&::models::ConfigNodePropertyInteger> {
    self.cq_dam_s7dam_videoproxyclientservice_uploadprogress_interval_name.as_ref()
  }

  pub fn reset_cq_dam_s7dam_videoproxyclientservice_uploadprogress_interval_name(&mut self) {
    self.cq_dam_s7dam_videoproxyclientservice_uploadprogress_interval_name = None;
  }

}



