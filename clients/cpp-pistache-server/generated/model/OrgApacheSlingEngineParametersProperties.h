/**
* Adobe Experience Manager OSGI config (AEM) API
* Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
*
* OpenAPI spec version: 1.0.0-pre.0
* Contact: opensource@shinesolutions.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
/*
 * OrgApacheSlingEngineParametersProperties.h
 *
 * 
 */

#ifndef OrgApacheSlingEngineParametersProperties_H_
#define OrgApacheSlingEngineParametersProperties_H_


#include "ModelBase.h"

#include "ConfigNodePropertyBoolean.h"
#include "ConfigNodePropertyInteger.h"
#include "ConfigNodePropertyString.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
/// 
/// </summary>
class  OrgApacheSlingEngineParametersProperties
    : public ModelBase
{
public:
    OrgApacheSlingEngineParametersProperties();
    virtual ~OrgApacheSlingEngineParametersProperties();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    nlohmann::json toJson() const override;
    void fromJson(nlohmann::json& json) override;

    /////////////////////////////////////////////
    /// OrgApacheSlingEngineParametersProperties members

    /// <summary>
    /// 
    /// </summary>
    ConfigNodePropertyString getSlingDefaultParameterEncoding() const;
    void setSlingDefaultParameterEncoding(ConfigNodePropertyString const& value);
    bool slingDefaultParameterEncodingIsSet() const;
    void unsetSling_default_parameter_encoding();
    /// <summary>
    /// 
    /// </summary>
    ConfigNodePropertyInteger getSlingDefaultMaxParameters() const;
    void setSlingDefaultMaxParameters(ConfigNodePropertyInteger const& value);
    bool slingDefaultMaxParametersIsSet() const;
    void unsetSling_default_max_parameters();
    /// <summary>
    /// 
    /// </summary>
    ConfigNodePropertyString getFileLocation() const;
    void setFileLocation(ConfigNodePropertyString const& value);
    bool fileLocationIsSet() const;
    void unsetFile_location();
    /// <summary>
    /// 
    /// </summary>
    ConfigNodePropertyInteger getFileThreshold() const;
    void setFileThreshold(ConfigNodePropertyInteger const& value);
    bool fileThresholdIsSet() const;
    void unsetFile_threshold();
    /// <summary>
    /// 
    /// </summary>
    ConfigNodePropertyInteger getFileMax() const;
    void setFileMax(ConfigNodePropertyInteger const& value);
    bool fileMaxIsSet() const;
    void unsetFile_max();
    /// <summary>
    /// 
    /// </summary>
    ConfigNodePropertyInteger getRequestMax() const;
    void setRequestMax(ConfigNodePropertyInteger const& value);
    bool requestMaxIsSet() const;
    void unsetRequest_max();
    /// <summary>
    /// 
    /// </summary>
    ConfigNodePropertyBoolean getSlingDefaultParameterCheckForAdditionalContainerParameters() const;
    void setSlingDefaultParameterCheckForAdditionalContainerParameters(ConfigNodePropertyBoolean const& value);
    bool slingDefaultParameterCheckForAdditionalContainerParametersIsSet() const;
    void unsetSling_default_parameter_checkForAdditionalContainerParameters();

protected:
    ConfigNodePropertyString m_Sling_default_parameter_encoding;
    bool m_Sling_default_parameter_encodingIsSet;
    ConfigNodePropertyInteger m_Sling_default_max_parameters;
    bool m_Sling_default_max_parametersIsSet;
    ConfigNodePropertyString m_File_location;
    bool m_File_locationIsSet;
    ConfigNodePropertyInteger m_File_threshold;
    bool m_File_thresholdIsSet;
    ConfigNodePropertyInteger m_File_max;
    bool m_File_maxIsSet;
    ConfigNodePropertyInteger m_Request_max;
    bool m_Request_maxIsSet;
    ConfigNodePropertyBoolean m_Sling_default_parameter_checkForAdditionalContainerParameters;
    bool m_Sling_default_parameter_checkForAdditionalContainerParametersIsSet;
};

}
}
}
}

#endif /* OrgApacheSlingEngineParametersProperties_H_ */
