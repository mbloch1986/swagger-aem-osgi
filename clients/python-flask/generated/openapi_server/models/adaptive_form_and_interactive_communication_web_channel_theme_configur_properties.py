# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server.models.config_node_property_array import ConfigNodePropertyArray  # noqa: F401,E501
from openapi_server import util


class AdaptiveFormAndInteractiveCommunicationWebChannelThemeConfigurProperties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, font_list: ConfigNodePropertyArray=None):  # noqa: E501
        """AdaptiveFormAndInteractiveCommunicationWebChannelThemeConfigurProperties - a model defined in OpenAPI

        :param font_list: The font_list of this AdaptiveFormAndInteractiveCommunicationWebChannelThemeConfigurProperties.  # noqa: E501
        :type font_list: ConfigNodePropertyArray
        """
        self.openapi_types = {
            'font_list': ConfigNodePropertyArray
        }

        self.attribute_map = {
            'font_list': 'fontList'
        }

        self._font_list = font_list

    @classmethod
    def from_dict(cls, dikt) -> 'AdaptiveFormAndInteractiveCommunicationWebChannelThemeConfigurProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The adaptiveFormAndInteractiveCommunicationWebChannelThemeConfigurProperties of this AdaptiveFormAndInteractiveCommunicationWebChannelThemeConfigurProperties.  # noqa: E501
        :rtype: AdaptiveFormAndInteractiveCommunicationWebChannelThemeConfigurProperties
        """
        return util.deserialize_model(dikt, cls)

    @property
    def font_list(self) -> ConfigNodePropertyArray:
        """Gets the font_list of this AdaptiveFormAndInteractiveCommunicationWebChannelThemeConfigurProperties.


        :return: The font_list of this AdaptiveFormAndInteractiveCommunicationWebChannelThemeConfigurProperties.
        :rtype: ConfigNodePropertyArray
        """
        return self._font_list

    @font_list.setter
    def font_list(self, font_list: ConfigNodePropertyArray):
        """Sets the font_list of this AdaptiveFormAndInteractiveCommunicationWebChannelThemeConfigurProperties.


        :param font_list: The font_list of this AdaptiveFormAndInteractiveCommunicationWebChannelThemeConfigurProperties.
        :type font_list: ConfigNodePropertyArray
        """

        self._font_list = font_list
