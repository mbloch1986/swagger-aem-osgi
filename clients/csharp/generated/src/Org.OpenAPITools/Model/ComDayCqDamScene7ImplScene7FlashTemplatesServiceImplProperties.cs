/* 
 * Adobe Experience Manager OSGI config (AEM) API
 *
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Org.OpenAPITools.Client.OpenAPIDateConverter;

namespace Org.OpenAPITools.Model
{
    /// <summary>
    /// ComDayCqDamScene7ImplScene7FlashTemplatesServiceImplProperties
    /// </summary>
    [DataContract]
    public partial class ComDayCqDamScene7ImplScene7FlashTemplatesServiceImplProperties :  IEquatable<ComDayCqDamScene7ImplScene7FlashTemplatesServiceImplProperties>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ComDayCqDamScene7ImplScene7FlashTemplatesServiceImplProperties" /> class.
        /// </summary>
        /// <param name="scene7FlashTemplatesRti">scene7FlashTemplatesRti.</param>
        /// <param name="scene7FlashTemplatesRsi">scene7FlashTemplatesRsi.</param>
        /// <param name="scene7FlashTemplatesRb">scene7FlashTemplatesRb.</param>
        /// <param name="scene7FlashTemplatesRurl">scene7FlashTemplatesRurl.</param>
        /// <param name="scene7FlashTemplateUrlFormatParameter">scene7FlashTemplateUrlFormatParameter.</param>
        public ComDayCqDamScene7ImplScene7FlashTemplatesServiceImplProperties(ConfigNodePropertyString scene7FlashTemplatesRti = default(ConfigNodePropertyString), ConfigNodePropertyString scene7FlashTemplatesRsi = default(ConfigNodePropertyString), ConfigNodePropertyString scene7FlashTemplatesRb = default(ConfigNodePropertyString), ConfigNodePropertyString scene7FlashTemplatesRurl = default(ConfigNodePropertyString), ConfigNodePropertyString scene7FlashTemplateUrlFormatParameter = default(ConfigNodePropertyString))
        {
            this.Scene7FlashTemplatesRti = scene7FlashTemplatesRti;
            this.Scene7FlashTemplatesRsi = scene7FlashTemplatesRsi;
            this.Scene7FlashTemplatesRb = scene7FlashTemplatesRb;
            this.Scene7FlashTemplatesRurl = scene7FlashTemplatesRurl;
            this.Scene7FlashTemplateUrlFormatParameter = scene7FlashTemplateUrlFormatParameter;
        }
        
        /// <summary>
        /// Gets or Sets Scene7FlashTemplatesRti
        /// </summary>
        [DataMember(Name="scene7FlashTemplates.rti", EmitDefaultValue=false)]
        public ConfigNodePropertyString Scene7FlashTemplatesRti { get; set; }

        /// <summary>
        /// Gets or Sets Scene7FlashTemplatesRsi
        /// </summary>
        [DataMember(Name="scene7FlashTemplates.rsi", EmitDefaultValue=false)]
        public ConfigNodePropertyString Scene7FlashTemplatesRsi { get; set; }

        /// <summary>
        /// Gets or Sets Scene7FlashTemplatesRb
        /// </summary>
        [DataMember(Name="scene7FlashTemplates.rb", EmitDefaultValue=false)]
        public ConfigNodePropertyString Scene7FlashTemplatesRb { get; set; }

        /// <summary>
        /// Gets or Sets Scene7FlashTemplatesRurl
        /// </summary>
        [DataMember(Name="scene7FlashTemplates.rurl", EmitDefaultValue=false)]
        public ConfigNodePropertyString Scene7FlashTemplatesRurl { get; set; }

        /// <summary>
        /// Gets or Sets Scene7FlashTemplateUrlFormatParameter
        /// </summary>
        [DataMember(Name="scene7FlashTemplate.urlFormatParameter", EmitDefaultValue=false)]
        public ConfigNodePropertyString Scene7FlashTemplateUrlFormatParameter { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class ComDayCqDamScene7ImplScene7FlashTemplatesServiceImplProperties {\n");
            sb.Append("  Scene7FlashTemplatesRti: ").Append(Scene7FlashTemplatesRti).Append("\n");
            sb.Append("  Scene7FlashTemplatesRsi: ").Append(Scene7FlashTemplatesRsi).Append("\n");
            sb.Append("  Scene7FlashTemplatesRb: ").Append(Scene7FlashTemplatesRb).Append("\n");
            sb.Append("  Scene7FlashTemplatesRurl: ").Append(Scene7FlashTemplatesRurl).Append("\n");
            sb.Append("  Scene7FlashTemplateUrlFormatParameter: ").Append(Scene7FlashTemplateUrlFormatParameter).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as ComDayCqDamScene7ImplScene7FlashTemplatesServiceImplProperties);
        }

        /// <summary>
        /// Returns true if ComDayCqDamScene7ImplScene7FlashTemplatesServiceImplProperties instances are equal
        /// </summary>
        /// <param name="input">Instance of ComDayCqDamScene7ImplScene7FlashTemplatesServiceImplProperties to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(ComDayCqDamScene7ImplScene7FlashTemplatesServiceImplProperties input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.Scene7FlashTemplatesRti == input.Scene7FlashTemplatesRti ||
                    (this.Scene7FlashTemplatesRti != null &&
                    this.Scene7FlashTemplatesRti.Equals(input.Scene7FlashTemplatesRti))
                ) && 
                (
                    this.Scene7FlashTemplatesRsi == input.Scene7FlashTemplatesRsi ||
                    (this.Scene7FlashTemplatesRsi != null &&
                    this.Scene7FlashTemplatesRsi.Equals(input.Scene7FlashTemplatesRsi))
                ) && 
                (
                    this.Scene7FlashTemplatesRb == input.Scene7FlashTemplatesRb ||
                    (this.Scene7FlashTemplatesRb != null &&
                    this.Scene7FlashTemplatesRb.Equals(input.Scene7FlashTemplatesRb))
                ) && 
                (
                    this.Scene7FlashTemplatesRurl == input.Scene7FlashTemplatesRurl ||
                    (this.Scene7FlashTemplatesRurl != null &&
                    this.Scene7FlashTemplatesRurl.Equals(input.Scene7FlashTemplatesRurl))
                ) && 
                (
                    this.Scene7FlashTemplateUrlFormatParameter == input.Scene7FlashTemplateUrlFormatParameter ||
                    (this.Scene7FlashTemplateUrlFormatParameter != null &&
                    this.Scene7FlashTemplateUrlFormatParameter.Equals(input.Scene7FlashTemplateUrlFormatParameter))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Scene7FlashTemplatesRti != null)
                    hashCode = hashCode * 59 + this.Scene7FlashTemplatesRti.GetHashCode();
                if (this.Scene7FlashTemplatesRsi != null)
                    hashCode = hashCode * 59 + this.Scene7FlashTemplatesRsi.GetHashCode();
                if (this.Scene7FlashTemplatesRb != null)
                    hashCode = hashCode * 59 + this.Scene7FlashTemplatesRb.GetHashCode();
                if (this.Scene7FlashTemplatesRurl != null)
                    hashCode = hashCode * 59 + this.Scene7FlashTemplatesRurl.GetHashCode();
                if (this.Scene7FlashTemplateUrlFormatParameter != null)
                    hashCode = hashCode * 59 + this.Scene7FlashTemplateUrlFormatParameter.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
