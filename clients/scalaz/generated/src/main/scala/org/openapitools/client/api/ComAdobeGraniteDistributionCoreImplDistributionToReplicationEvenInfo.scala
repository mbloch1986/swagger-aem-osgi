package org.openapitools.client.api

import argonaut._
import argonaut.EncodeJson._
import argonaut.DecodeJson._

import org.http4s.{EntityDecoder, EntityEncoder}
import org.http4s.argonaut._
import org.joda.time.DateTime
import ComAdobeGraniteDistributionCoreImplDistributionToReplicationEvenInfo._

case class ComAdobeGraniteDistributionCoreImplDistributionToReplicationEvenInfo (
  pid: Option[String],
title: Option[String],
description: Option[String],
properties: Option[ComAdobeGraniteDistributionCoreImplDistributionToReplicationEvenProperties])

object ComAdobeGraniteDistributionCoreImplDistributionToReplicationEvenInfo {
  import DateTimeCodecs._

  implicit val ComAdobeGraniteDistributionCoreImplDistributionToReplicationEvenInfoCodecJson: CodecJson[ComAdobeGraniteDistributionCoreImplDistributionToReplicationEvenInfo] = CodecJson.derive[ComAdobeGraniteDistributionCoreImplDistributionToReplicationEvenInfo]
  implicit val ComAdobeGraniteDistributionCoreImplDistributionToReplicationEvenInfoDecoder: EntityDecoder[ComAdobeGraniteDistributionCoreImplDistributionToReplicationEvenInfo] = jsonOf[ComAdobeGraniteDistributionCoreImplDistributionToReplicationEvenInfo]
  implicit val ComAdobeGraniteDistributionCoreImplDistributionToReplicationEvenInfoEncoder: EntityEncoder[ComAdobeGraniteDistributionCoreImplDistributionToReplicationEvenInfo] = jsonEncoderOf[ComAdobeGraniteDistributionCoreImplDistributionToReplicationEvenInfo]
}
