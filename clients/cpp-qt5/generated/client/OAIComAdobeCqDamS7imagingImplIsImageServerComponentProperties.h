/**
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIComAdobeCqDamS7imagingImplIsImageServerComponentProperties.h
 *
 * 
 */

#ifndef OAIComAdobeCqDamS7imagingImplIsImageServerComponentProperties_H_
#define OAIComAdobeCqDamS7imagingImplIsImageServerComponentProperties_H_

#include <QJsonObject>


#include "OAIOAIConfigNodePropertyBoolean.h"
#include "OAIOAIConfigNodePropertyInteger.h"
#include "OAIOAIConfigNodePropertyString.h"

#include "OAIObject.h"

namespace OpenAPI {

class OAIComAdobeCqDamS7imagingImplIsImageServerComponentProperties: public OAIObject {
public:
    OAIComAdobeCqDamS7imagingImplIsImageServerComponentProperties();
    OAIComAdobeCqDamS7imagingImplIsImageServerComponentProperties(QString json);
    ~OAIComAdobeCqDamS7imagingImplIsImageServerComponentProperties();
    void init();
    void cleanup();

    QString asJson () override;
    QJsonObject asJsonObject() override;
    void fromJsonObject(QJsonObject json) override;
    OAIComAdobeCqDamS7imagingImplIsImageServerComponentProperties* fromJson(QString jsonString) override;

    OAIConfigNodePropertyString* getTcpPort();
    void setTcpPort(OAIConfigNodePropertyString* tcp_port);

    OAIConfigNodePropertyBoolean* getAllowRemoteAccess();
    void setAllowRemoteAccess(OAIConfigNodePropertyBoolean* allow_remote_access);

    OAIConfigNodePropertyString* getMaxRenderRgnPixels();
    void setMaxRenderRgnPixels(OAIConfigNodePropertyString* max_render_rgn_pixels);

    OAIConfigNodePropertyString* getMaxMessageSize();
    void setMaxMessageSize(OAIConfigNodePropertyString* max_message_size);

    OAIConfigNodePropertyInteger* getRandomAccessUrlTimeout();
    void setRandomAccessUrlTimeout(OAIConfigNodePropertyInteger* random_access_url_timeout);

    OAIConfigNodePropertyInteger* getWorkerThreads();
    void setWorkerThreads(OAIConfigNodePropertyInteger* worker_threads);


    virtual bool isSet() override;

private:
    OAIConfigNodePropertyString* tcp_port;
    bool m_tcp_port_isSet;

    OAIConfigNodePropertyBoolean* allow_remote_access;
    bool m_allow_remote_access_isSet;

    OAIConfigNodePropertyString* max_render_rgn_pixels;
    bool m_max_render_rgn_pixels_isSet;

    OAIConfigNodePropertyString* max_message_size;
    bool m_max_message_size_isSet;

    OAIConfigNodePropertyInteger* random_access_url_timeout;
    bool m_random_access_url_timeout_isSet;

    OAIConfigNodePropertyInteger* worker_threads;
    bool m_worker_threads_isSet;

};

}

#endif /* OAIComAdobeCqDamS7imagingImplIsImageServerComponentProperties_H_ */
