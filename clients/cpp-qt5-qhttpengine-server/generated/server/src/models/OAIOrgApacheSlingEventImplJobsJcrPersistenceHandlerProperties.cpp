/**
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


#include "OAIOrgApacheSlingEventImplJobsJcrPersistenceHandlerProperties.h"

#include "OAIHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace OpenAPI {

OAIOrgApacheSlingEventImplJobsJcrPersistenceHandlerProperties::OAIOrgApacheSlingEventImplJobsJcrPersistenceHandlerProperties(QString json) {
    this->fromJson(json);
}

OAIOrgApacheSlingEventImplJobsJcrPersistenceHandlerProperties::OAIOrgApacheSlingEventImplJobsJcrPersistenceHandlerProperties() {
    this->init();
}

OAIOrgApacheSlingEventImplJobsJcrPersistenceHandlerProperties::~OAIOrgApacheSlingEventImplJobsJcrPersistenceHandlerProperties() {
    
}

void
OAIOrgApacheSlingEventImplJobsJcrPersistenceHandlerProperties::init() {
    m_job_consumermanager_disable_distribution_isSet = false;
    m_startup_delay_isSet = false;
    m_cleanup_period_isSet = false;
}

void
OAIOrgApacheSlingEventImplJobsJcrPersistenceHandlerProperties::fromJson(QString jsonString) {
    QByteArray array (jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void
OAIOrgApacheSlingEventImplJobsJcrPersistenceHandlerProperties::fromJsonObject(QJsonObject json) {
    ::OpenAPI::fromJsonValue(job_consumermanager_disable_distribution, json[QString("job.consumermanager.disableDistribution")]);
    
    ::OpenAPI::fromJsonValue(startup_delay, json[QString("startup.delay")]);
    
    ::OpenAPI::fromJsonValue(cleanup_period, json[QString("cleanup.period")]);
    
}

QString
OAIOrgApacheSlingEventImplJobsJcrPersistenceHandlerProperties::asJson () const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject
OAIOrgApacheSlingEventImplJobsJcrPersistenceHandlerProperties::asJsonObject() const {
    QJsonObject obj;
	if(job_consumermanager_disable_distribution.isSet()){
        obj.insert(QString("job.consumermanager.disableDistribution"), ::OpenAPI::toJsonValue(job_consumermanager_disable_distribution));
    }
	if(startup_delay.isSet()){
        obj.insert(QString("startup.delay"), ::OpenAPI::toJsonValue(startup_delay));
    }
	if(cleanup_period.isSet()){
        obj.insert(QString("cleanup.period"), ::OpenAPI::toJsonValue(cleanup_period));
    }
    return obj;
}

OAIConfigNodePropertyBoolean
OAIOrgApacheSlingEventImplJobsJcrPersistenceHandlerProperties::getJobConsumermanagerDisableDistribution() const {
    return job_consumermanager_disable_distribution;
}
void
OAIOrgApacheSlingEventImplJobsJcrPersistenceHandlerProperties::setJobConsumermanagerDisableDistribution(const OAIConfigNodePropertyBoolean &job_consumermanager_disable_distribution) {
    this->job_consumermanager_disable_distribution = job_consumermanager_disable_distribution;
    this->m_job_consumermanager_disable_distribution_isSet = true;
}

OAIConfigNodePropertyInteger
OAIOrgApacheSlingEventImplJobsJcrPersistenceHandlerProperties::getStartupDelay() const {
    return startup_delay;
}
void
OAIOrgApacheSlingEventImplJobsJcrPersistenceHandlerProperties::setStartupDelay(const OAIConfigNodePropertyInteger &startup_delay) {
    this->startup_delay = startup_delay;
    this->m_startup_delay_isSet = true;
}

OAIConfigNodePropertyInteger
OAIOrgApacheSlingEventImplJobsJcrPersistenceHandlerProperties::getCleanupPeriod() const {
    return cleanup_period;
}
void
OAIOrgApacheSlingEventImplJobsJcrPersistenceHandlerProperties::setCleanupPeriod(const OAIConfigNodePropertyInteger &cleanup_period) {
    this->cleanup_period = cleanup_period;
    this->m_cleanup_period_isSet = true;
}


bool
OAIOrgApacheSlingEventImplJobsJcrPersistenceHandlerProperties::isSet() const {
    bool isObjectUpdated = false;
    do{ 
        if(job_consumermanager_disable_distribution.isSet()){ isObjectUpdated = true; break;}
    
        if(startup_delay.isSet()){ isObjectUpdated = true; break;}
    
        if(cleanup_period.isSet()){ isObjectUpdated = true; break;}
    }while(false);
    return isObjectUpdated;
}

}

