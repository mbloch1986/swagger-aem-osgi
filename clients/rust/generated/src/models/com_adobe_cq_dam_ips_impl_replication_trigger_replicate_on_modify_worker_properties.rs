/* 
 * Adobe Experience Manager OSGI config (AEM) API
 *
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 * Generated by: https://openapi-generator.tech
 */


#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct ComAdobeCqDamIpsImplReplicationTriggerReplicateOnModifyWorkerProperties {
  #[serde(rename = "dmreplicateonmodify.enabled")]
  dmreplicateonmodify_enabled: Option<::models::ConfigNodePropertyBoolean>,
  #[serde(rename = "dmreplicateonmodify.forcesyncdeletes")]
  dmreplicateonmodify_forcesyncdeletes: Option<::models::ConfigNodePropertyBoolean>
}

impl ComAdobeCqDamIpsImplReplicationTriggerReplicateOnModifyWorkerProperties {
  pub fn new() -> ComAdobeCqDamIpsImplReplicationTriggerReplicateOnModifyWorkerProperties {
    ComAdobeCqDamIpsImplReplicationTriggerReplicateOnModifyWorkerProperties {
      dmreplicateonmodify_enabled: None,
      dmreplicateonmodify_forcesyncdeletes: None
    }
  }

  pub fn set_dmreplicateonmodify_enabled(&mut self, dmreplicateonmodify_enabled: ::models::ConfigNodePropertyBoolean) {
    self.dmreplicateonmodify_enabled = Some(dmreplicateonmodify_enabled);
  }

  pub fn with_dmreplicateonmodify_enabled(mut self, dmreplicateonmodify_enabled: ::models::ConfigNodePropertyBoolean) -> ComAdobeCqDamIpsImplReplicationTriggerReplicateOnModifyWorkerProperties {
    self.dmreplicateonmodify_enabled = Some(dmreplicateonmodify_enabled);
    self
  }

  pub fn dmreplicateonmodify_enabled(&self) -> Option<&::models::ConfigNodePropertyBoolean> {
    self.dmreplicateonmodify_enabled.as_ref()
  }

  pub fn reset_dmreplicateonmodify_enabled(&mut self) {
    self.dmreplicateonmodify_enabled = None;
  }

  pub fn set_dmreplicateonmodify_forcesyncdeletes(&mut self, dmreplicateonmodify_forcesyncdeletes: ::models::ConfigNodePropertyBoolean) {
    self.dmreplicateonmodify_forcesyncdeletes = Some(dmreplicateonmodify_forcesyncdeletes);
  }

  pub fn with_dmreplicateonmodify_forcesyncdeletes(mut self, dmreplicateonmodify_forcesyncdeletes: ::models::ConfigNodePropertyBoolean) -> ComAdobeCqDamIpsImplReplicationTriggerReplicateOnModifyWorkerProperties {
    self.dmreplicateonmodify_forcesyncdeletes = Some(dmreplicateonmodify_forcesyncdeletes);
    self
  }

  pub fn dmreplicateonmodify_forcesyncdeletes(&self) -> Option<&::models::ConfigNodePropertyBoolean> {
    self.dmreplicateonmodify_forcesyncdeletes.as_ref()
  }

  pub fn reset_dmreplicateonmodify_forcesyncdeletes(&mut self) {
    self.dmreplicateonmodify_forcesyncdeletes = None;
  }

}



