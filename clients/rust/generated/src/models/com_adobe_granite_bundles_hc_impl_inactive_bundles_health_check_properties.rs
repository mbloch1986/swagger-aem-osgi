/* 
 * Adobe Experience Manager OSGI config (AEM) API
 *
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 * Generated by: https://openapi-generator.tech
 */


#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct ComAdobeGraniteBundlesHcImplInactiveBundlesHealthCheckProperties {
  #[serde(rename = "hc.tags")]
  hc_tags: Option<::models::ConfigNodePropertyArray>,
  #[serde(rename = "ignored.bundles")]
  ignored_bundles: Option<::models::ConfigNodePropertyArray>
}

impl ComAdobeGraniteBundlesHcImplInactiveBundlesHealthCheckProperties {
  pub fn new() -> ComAdobeGraniteBundlesHcImplInactiveBundlesHealthCheckProperties {
    ComAdobeGraniteBundlesHcImplInactiveBundlesHealthCheckProperties {
      hc_tags: None,
      ignored_bundles: None
    }
  }

  pub fn set_hc_tags(&mut self, hc_tags: ::models::ConfigNodePropertyArray) {
    self.hc_tags = Some(hc_tags);
  }

  pub fn with_hc_tags(mut self, hc_tags: ::models::ConfigNodePropertyArray) -> ComAdobeGraniteBundlesHcImplInactiveBundlesHealthCheckProperties {
    self.hc_tags = Some(hc_tags);
    self
  }

  pub fn hc_tags(&self) -> Option<&::models::ConfigNodePropertyArray> {
    self.hc_tags.as_ref()
  }

  pub fn reset_hc_tags(&mut self) {
    self.hc_tags = None;
  }

  pub fn set_ignored_bundles(&mut self, ignored_bundles: ::models::ConfigNodePropertyArray) {
    self.ignored_bundles = Some(ignored_bundles);
  }

  pub fn with_ignored_bundles(mut self, ignored_bundles: ::models::ConfigNodePropertyArray) -> ComAdobeGraniteBundlesHcImplInactiveBundlesHealthCheckProperties {
    self.ignored_bundles = Some(ignored_bundles);
    self
  }

  pub fn ignored_bundles(&self) -> Option<&::models::ConfigNodePropertyArray> {
    self.ignored_bundles.as_ref()
  }

  pub fn reset_ignored_bundles(&mut self) {
    self.ignored_bundles = None;
  }

}



