/* 
 * Adobe Experience Manager OSGI config (AEM) API
 *
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using NUnit.Framework;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using Org.OpenAPITools.Api;
using Org.OpenAPITools.Model;
using Org.OpenAPITools.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace Org.OpenAPITools.Test
{
    /// <summary>
    ///  Class for testing OrgApacheJackrabbitOakPluginsDocumentDocumentNodeStoreServiceProperties
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    [TestFixture]
    public class OrgApacheJackrabbitOakPluginsDocumentDocumentNodeStoreServicePropertiesTests
    {
        // TODO uncomment below to declare an instance variable for OrgApacheJackrabbitOakPluginsDocumentDocumentNodeStoreServiceProperties
        //private OrgApacheJackrabbitOakPluginsDocumentDocumentNodeStoreServiceProperties instance;

        /// <summary>
        /// Setup before each test
        /// </summary>
        [SetUp]
        public void Init()
        {
            // TODO uncomment below to create an instance of OrgApacheJackrabbitOakPluginsDocumentDocumentNodeStoreServiceProperties
            //instance = new OrgApacheJackrabbitOakPluginsDocumentDocumentNodeStoreServiceProperties();
        }

        /// <summary>
        /// Clean up after each test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of OrgApacheJackrabbitOakPluginsDocumentDocumentNodeStoreServiceProperties
        /// </summary>
        [Test]
        public void OrgApacheJackrabbitOakPluginsDocumentDocumentNodeStoreServicePropertiesInstanceTest()
        {
            // TODO uncomment below to test "IsInstanceOfType" OrgApacheJackrabbitOakPluginsDocumentDocumentNodeStoreServiceProperties
            //Assert.IsInstanceOfType<OrgApacheJackrabbitOakPluginsDocumentDocumentNodeStoreServiceProperties> (instance, "variable 'instance' is a OrgApacheJackrabbitOakPluginsDocumentDocumentNodeStoreServiceProperties");
        }


        /// <summary>
        /// Test the property 'Mongouri'
        /// </summary>
        [Test]
        public void MongouriTest()
        {
            // TODO unit test for the property 'Mongouri'
        }
        /// <summary>
        /// Test the property 'Db'
        /// </summary>
        [Test]
        public void DbTest()
        {
            // TODO unit test for the property 'Db'
        }
        /// <summary>
        /// Test the property 'SocketKeepAlive'
        /// </summary>
        [Test]
        public void SocketKeepAliveTest()
        {
            // TODO unit test for the property 'SocketKeepAlive'
        }
        /// <summary>
        /// Test the property 'Cache'
        /// </summary>
        [Test]
        public void CacheTest()
        {
            // TODO unit test for the property 'Cache'
        }
        /// <summary>
        /// Test the property 'NodeCachePercentage'
        /// </summary>
        [Test]
        public void NodeCachePercentageTest()
        {
            // TODO unit test for the property 'NodeCachePercentage'
        }
        /// <summary>
        /// Test the property 'PrevDocCachePercentage'
        /// </summary>
        [Test]
        public void PrevDocCachePercentageTest()
        {
            // TODO unit test for the property 'PrevDocCachePercentage'
        }
        /// <summary>
        /// Test the property 'ChildrenCachePercentage'
        /// </summary>
        [Test]
        public void ChildrenCachePercentageTest()
        {
            // TODO unit test for the property 'ChildrenCachePercentage'
        }
        /// <summary>
        /// Test the property 'DiffCachePercentage'
        /// </summary>
        [Test]
        public void DiffCachePercentageTest()
        {
            // TODO unit test for the property 'DiffCachePercentage'
        }
        /// <summary>
        /// Test the property 'CacheSegmentCount'
        /// </summary>
        [Test]
        public void CacheSegmentCountTest()
        {
            // TODO unit test for the property 'CacheSegmentCount'
        }
        /// <summary>
        /// Test the property 'CacheStackMoveDistance'
        /// </summary>
        [Test]
        public void CacheStackMoveDistanceTest()
        {
            // TODO unit test for the property 'CacheStackMoveDistance'
        }
        /// <summary>
        /// Test the property 'BlobCacheSize'
        /// </summary>
        [Test]
        public void BlobCacheSizeTest()
        {
            // TODO unit test for the property 'BlobCacheSize'
        }
        /// <summary>
        /// Test the property 'PersistentCache'
        /// </summary>
        [Test]
        public void PersistentCacheTest()
        {
            // TODO unit test for the property 'PersistentCache'
        }
        /// <summary>
        /// Test the property 'JournalCache'
        /// </summary>
        [Test]
        public void JournalCacheTest()
        {
            // TODO unit test for the property 'JournalCache'
        }
        /// <summary>
        /// Test the property 'CustomBlobStore'
        /// </summary>
        [Test]
        public void CustomBlobStoreTest()
        {
            // TODO unit test for the property 'CustomBlobStore'
        }
        /// <summary>
        /// Test the property 'JournalGCInterval'
        /// </summary>
        [Test]
        public void JournalGCIntervalTest()
        {
            // TODO unit test for the property 'JournalGCInterval'
        }
        /// <summary>
        /// Test the property 'JournalGCMaxAge'
        /// </summary>
        [Test]
        public void JournalGCMaxAgeTest()
        {
            // TODO unit test for the property 'JournalGCMaxAge'
        }
        /// <summary>
        /// Test the property 'PrefetchExternalChanges'
        /// </summary>
        [Test]
        public void PrefetchExternalChangesTest()
        {
            // TODO unit test for the property 'PrefetchExternalChanges'
        }
        /// <summary>
        /// Test the property 'Role'
        /// </summary>
        [Test]
        public void RoleTest()
        {
            // TODO unit test for the property 'Role'
        }
        /// <summary>
        /// Test the property 'VersionGcMaxAgeInSecs'
        /// </summary>
        [Test]
        public void VersionGcMaxAgeInSecsTest()
        {
            // TODO unit test for the property 'VersionGcMaxAgeInSecs'
        }
        /// <summary>
        /// Test the property 'VersionGCExpression'
        /// </summary>
        [Test]
        public void VersionGCExpressionTest()
        {
            // TODO unit test for the property 'VersionGCExpression'
        }
        /// <summary>
        /// Test the property 'VersionGCTimeLimitInSecs'
        /// </summary>
        [Test]
        public void VersionGCTimeLimitInSecsTest()
        {
            // TODO unit test for the property 'VersionGCTimeLimitInSecs'
        }
        /// <summary>
        /// Test the property 'BlobGcMaxAgeInSecs'
        /// </summary>
        [Test]
        public void BlobGcMaxAgeInSecsTest()
        {
            // TODO unit test for the property 'BlobGcMaxAgeInSecs'
        }
        /// <summary>
        /// Test the property 'BlobTrackSnapshotIntervalInSecs'
        /// </summary>
        [Test]
        public void BlobTrackSnapshotIntervalInSecsTest()
        {
            // TODO unit test for the property 'BlobTrackSnapshotIntervalInSecs'
        }
        /// <summary>
        /// Test the property 'RepositoryHome'
        /// </summary>
        [Test]
        public void RepositoryHomeTest()
        {
            // TODO unit test for the property 'RepositoryHome'
        }
        /// <summary>
        /// Test the property 'MaxReplicationLagInSecs'
        /// </summary>
        [Test]
        public void MaxReplicationLagInSecsTest()
        {
            // TODO unit test for the property 'MaxReplicationLagInSecs'
        }
        /// <summary>
        /// Test the property 'DocumentStoreType'
        /// </summary>
        [Test]
        public void DocumentStoreTypeTest()
        {
            // TODO unit test for the property 'DocumentStoreType'
        }
        /// <summary>
        /// Test the property 'BundlingDisabled'
        /// </summary>
        [Test]
        public void BundlingDisabledTest()
        {
            // TODO unit test for the property 'BundlingDisabled'
        }
        /// <summary>
        /// Test the property 'UpdateLimit'
        /// </summary>
        [Test]
        public void UpdateLimitTest()
        {
            // TODO unit test for the property 'UpdateLimit'
        }
        /// <summary>
        /// Test the property 'PersistentCacheIncludes'
        /// </summary>
        [Test]
        public void PersistentCacheIncludesTest()
        {
            // TODO unit test for the property 'PersistentCacheIncludes'
        }
        /// <summary>
        /// Test the property 'LeaseCheckMode'
        /// </summary>
        [Test]
        public void LeaseCheckModeTest()
        {
            // TODO unit test for the property 'LeaseCheckMode'
        }

    }

}
