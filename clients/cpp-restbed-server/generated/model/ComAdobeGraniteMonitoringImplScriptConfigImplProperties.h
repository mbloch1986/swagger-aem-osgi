/**
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 3.2.1-SNAPSHOT.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * ComAdobeGraniteMonitoringImplScriptConfigImplProperties.h
 *
 * 
 */

#ifndef ComAdobeGraniteMonitoringImplScriptConfigImplProperties_H_
#define ComAdobeGraniteMonitoringImplScriptConfigImplProperties_H_



#include "ConfigNodePropertyInteger.h"
#include "ConfigNodePropertyArray.h"
#include "ConfigNodePropertyString.h"
#include <memory>

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
/// 
/// </summary>
class  ComAdobeGraniteMonitoringImplScriptConfigImplProperties
{
public:
    ComAdobeGraniteMonitoringImplScriptConfigImplProperties();
    virtual ~ComAdobeGraniteMonitoringImplScriptConfigImplProperties();
    
    std::string toJsonString();
    void fromJsonString(std::string const& jsonString);

    /////////////////////////////////////////////
    /// ComAdobeGraniteMonitoringImplScriptConfigImplProperties members
    
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyString> getScriptFilename() const;
    void setScriptFilename(std::shared_ptr<ConfigNodePropertyString> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyString> getScriptDisplay() const;
    void setScriptDisplay(std::shared_ptr<ConfigNodePropertyString> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyString> getScriptPath() const;
    void setScriptPath(std::shared_ptr<ConfigNodePropertyString> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyArray> getScriptPlatform() const;
    void setScriptPlatform(std::shared_ptr<ConfigNodePropertyArray> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyInteger> getInterval() const;
    void setInterval(std::shared_ptr<ConfigNodePropertyInteger> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyString> getJmxdomain() const;
    void setJmxdomain(std::shared_ptr<ConfigNodePropertyString> value);

protected:
    std::shared_ptr<ConfigNodePropertyString> m_Script_filename;
    std::shared_ptr<ConfigNodePropertyString> m_Script_display;
    std::shared_ptr<ConfigNodePropertyString> m_Script_path;
    std::shared_ptr<ConfigNodePropertyArray> m_Script_platform;
    std::shared_ptr<ConfigNodePropertyInteger> m_Interval;
    std::shared_ptr<ConfigNodePropertyString> m_Jmxdomain;
};

}
}
}
}

#endif /* ComAdobeGraniteMonitoringImplScriptConfigImplProperties_H_ */
