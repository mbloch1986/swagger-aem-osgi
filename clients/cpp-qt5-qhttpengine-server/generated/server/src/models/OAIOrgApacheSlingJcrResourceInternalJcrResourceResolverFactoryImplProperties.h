/**
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIOrgApacheSlingJcrResourceInternalJcrResourceResolverFactoryImplProperties.h
 *
 * 
 */

#ifndef OAIOrgApacheSlingJcrResourceInternalJcrResourceResolverFactoryImplProperties_H
#define OAIOrgApacheSlingJcrResourceInternalJcrResourceResolverFactoryImplProperties_H

#include <QJsonObject>


#include "OAIConfigNodePropertyArray.h"
#include "OAIConfigNodePropertyBoolean.h"
#include "OAIConfigNodePropertyInteger.h"
#include "OAIConfigNodePropertyString.h"

#include "OAIObject.h"

namespace OpenAPI {

class OAIOrgApacheSlingJcrResourceInternalJcrResourceResolverFactoryImplProperties: public OAIObject {
public:
    OAIOrgApacheSlingJcrResourceInternalJcrResourceResolverFactoryImplProperties();
    OAIOrgApacheSlingJcrResourceInternalJcrResourceResolverFactoryImplProperties(QString json);
    ~OAIOrgApacheSlingJcrResourceInternalJcrResourceResolverFactoryImplProperties() override;
    void init();

    QString asJson () const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIConfigNodePropertyArray getResourceResolverSearchpath() const;
    void setResourceResolverSearchpath(const OAIConfigNodePropertyArray &resource_resolver_searchpath);

    OAIConfigNodePropertyBoolean getResourceResolverManglenamespaces() const;
    void setResourceResolverManglenamespaces(const OAIConfigNodePropertyBoolean &resource_resolver_manglenamespaces);

    OAIConfigNodePropertyBoolean getResourceResolverAllowDirect() const;
    void setResourceResolverAllowDirect(const OAIConfigNodePropertyBoolean &resource_resolver_allow_direct);

    OAIConfigNodePropertyArray getResourceResolverRequiredProviders() const;
    void setResourceResolverRequiredProviders(const OAIConfigNodePropertyArray &resource_resolver_required_providers);

    OAIConfigNodePropertyArray getResourceResolverRequiredProvidernames() const;
    void setResourceResolverRequiredProvidernames(const OAIConfigNodePropertyArray &resource_resolver_required_providernames);

    OAIConfigNodePropertyArray getResourceResolverVirtual() const;
    void setResourceResolverVirtual(const OAIConfigNodePropertyArray &resource_resolver_virtual);

    OAIConfigNodePropertyArray getResourceResolverMapping() const;
    void setResourceResolverMapping(const OAIConfigNodePropertyArray &resource_resolver_mapping);

    OAIConfigNodePropertyString getResourceResolverMapLocation() const;
    void setResourceResolverMapLocation(const OAIConfigNodePropertyString &resource_resolver_map_location);

    OAIConfigNodePropertyArray getResourceResolverMapObservation() const;
    void setResourceResolverMapObservation(const OAIConfigNodePropertyArray &resource_resolver_map_observation);

    OAIConfigNodePropertyInteger getResourceResolverDefaultVanityRedirectStatus() const;
    void setResourceResolverDefaultVanityRedirectStatus(const OAIConfigNodePropertyInteger &resource_resolver_default_vanity_redirect_status);

    OAIConfigNodePropertyBoolean getResourceResolverEnableVanitypath() const;
    void setResourceResolverEnableVanitypath(const OAIConfigNodePropertyBoolean &resource_resolver_enable_vanitypath);

    OAIConfigNodePropertyInteger getResourceResolverVanitypathMaxEntries() const;
    void setResourceResolverVanitypathMaxEntries(const OAIConfigNodePropertyInteger &resource_resolver_vanitypath_max_entries);

    OAIConfigNodePropertyBoolean getResourceResolverVanitypathMaxEntriesStartup() const;
    void setResourceResolverVanitypathMaxEntriesStartup(const OAIConfigNodePropertyBoolean &resource_resolver_vanitypath_max_entries_startup);

    OAIConfigNodePropertyInteger getResourceResolverVanitypathBloomfilterMaxBytes() const;
    void setResourceResolverVanitypathBloomfilterMaxBytes(const OAIConfigNodePropertyInteger &resource_resolver_vanitypath_bloomfilter_max_bytes);

    OAIConfigNodePropertyBoolean getResourceResolverOptimizeAliasResolution() const;
    void setResourceResolverOptimizeAliasResolution(const OAIConfigNodePropertyBoolean &resource_resolver_optimize_alias_resolution);

    OAIConfigNodePropertyArray getResourceResolverVanitypathWhitelist() const;
    void setResourceResolverVanitypathWhitelist(const OAIConfigNodePropertyArray &resource_resolver_vanitypath_whitelist);

    OAIConfigNodePropertyArray getResourceResolverVanitypathBlacklist() const;
    void setResourceResolverVanitypathBlacklist(const OAIConfigNodePropertyArray &resource_resolver_vanitypath_blacklist);

    OAIConfigNodePropertyBoolean getResourceResolverVanityPrecedence() const;
    void setResourceResolverVanityPrecedence(const OAIConfigNodePropertyBoolean &resource_resolver_vanity_precedence);

    OAIConfigNodePropertyBoolean getResourceResolverProviderhandlingParanoid() const;
    void setResourceResolverProviderhandlingParanoid(const OAIConfigNodePropertyBoolean &resource_resolver_providerhandling_paranoid);

    OAIConfigNodePropertyBoolean getResourceResolverLogClosing() const;
    void setResourceResolverLogClosing(const OAIConfigNodePropertyBoolean &resource_resolver_log_closing);

    OAIConfigNodePropertyBoolean getResourceResolverLogUnclosed() const;
    void setResourceResolverLogUnclosed(const OAIConfigNodePropertyBoolean &resource_resolver_log_unclosed);

    virtual bool isSet() const override;

private:
    OAIConfigNodePropertyArray resource_resolver_searchpath;
    bool m_resource_resolver_searchpath_isSet;

    OAIConfigNodePropertyBoolean resource_resolver_manglenamespaces;
    bool m_resource_resolver_manglenamespaces_isSet;

    OAIConfigNodePropertyBoolean resource_resolver_allow_direct;
    bool m_resource_resolver_allow_direct_isSet;

    OAIConfigNodePropertyArray resource_resolver_required_providers;
    bool m_resource_resolver_required_providers_isSet;

    OAIConfigNodePropertyArray resource_resolver_required_providernames;
    bool m_resource_resolver_required_providernames_isSet;

    OAIConfigNodePropertyArray resource_resolver_virtual;
    bool m_resource_resolver_virtual_isSet;

    OAIConfigNodePropertyArray resource_resolver_mapping;
    bool m_resource_resolver_mapping_isSet;

    OAIConfigNodePropertyString resource_resolver_map_location;
    bool m_resource_resolver_map_location_isSet;

    OAIConfigNodePropertyArray resource_resolver_map_observation;
    bool m_resource_resolver_map_observation_isSet;

    OAIConfigNodePropertyInteger resource_resolver_default_vanity_redirect_status;
    bool m_resource_resolver_default_vanity_redirect_status_isSet;

    OAIConfigNodePropertyBoolean resource_resolver_enable_vanitypath;
    bool m_resource_resolver_enable_vanitypath_isSet;

    OAIConfigNodePropertyInteger resource_resolver_vanitypath_max_entries;
    bool m_resource_resolver_vanitypath_max_entries_isSet;

    OAIConfigNodePropertyBoolean resource_resolver_vanitypath_max_entries_startup;
    bool m_resource_resolver_vanitypath_max_entries_startup_isSet;

    OAIConfigNodePropertyInteger resource_resolver_vanitypath_bloomfilter_max_bytes;
    bool m_resource_resolver_vanitypath_bloomfilter_max_bytes_isSet;

    OAIConfigNodePropertyBoolean resource_resolver_optimize_alias_resolution;
    bool m_resource_resolver_optimize_alias_resolution_isSet;

    OAIConfigNodePropertyArray resource_resolver_vanitypath_whitelist;
    bool m_resource_resolver_vanitypath_whitelist_isSet;

    OAIConfigNodePropertyArray resource_resolver_vanitypath_blacklist;
    bool m_resource_resolver_vanitypath_blacklist_isSet;

    OAIConfigNodePropertyBoolean resource_resolver_vanity_precedence;
    bool m_resource_resolver_vanity_precedence_isSet;

    OAIConfigNodePropertyBoolean resource_resolver_providerhandling_paranoid;
    bool m_resource_resolver_providerhandling_paranoid_isSet;

    OAIConfigNodePropertyBoolean resource_resolver_log_closing;
    bool m_resource_resolver_log_closing_isSet;

    OAIConfigNodePropertyBoolean resource_resolver_log_unclosed;
    bool m_resource_resolver_log_unclosed_isSet;

};

}

#endif // OAIOrgApacheSlingJcrResourceInternalJcrResourceResolverFactoryImplProperties_H
