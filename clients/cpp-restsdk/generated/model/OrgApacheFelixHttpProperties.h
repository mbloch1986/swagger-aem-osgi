/**
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 3.2.1-SNAPSHOT.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OrgApacheFelixHttpProperties.h
 *
 * 
 */

#ifndef ORG_OPENAPITOOLS_CLIENT_MODEL_OrgApacheFelixHttpProperties_H_
#define ORG_OPENAPITOOLS_CLIENT_MODEL_OrgApacheFelixHttpProperties_H_


#include "../ModelBase.h"

#include "ConfigNodePropertyBoolean.h"
#include "ConfigNodePropertyDropDown.h"
#include "ConfigNodePropertyInteger.h"
#include "ConfigNodePropertyArray.h"
#include "ConfigNodePropertyString.h"

namespace org {
namespace openapitools {
namespace client {
namespace model {

/// <summary>
/// 
/// </summary>
class  OrgApacheFelixHttpProperties
    : public ModelBase
{
public:
    OrgApacheFelixHttpProperties();
    virtual ~OrgApacheFelixHttpProperties();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    void fromJson(web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    void fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// OrgApacheFelixHttpProperties members

    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyString> getOrgApacheFelixHttpHost() const;
    bool orgApacheFelixHttpHostIsSet() const;
    void unsetOrg_apache_felix_http_host();
    void setOrgApacheFelixHttpHost(std::shared_ptr<ConfigNodePropertyString> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyBoolean> getOrgApacheFelixHttpEnable() const;
    bool orgApacheFelixHttpEnableIsSet() const;
    void unsetOrg_apache_felix_http_enable();
    void setOrgApacheFelixHttpEnable(std::shared_ptr<ConfigNodePropertyBoolean> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyInteger> getOrgOsgiServiceHttpPort() const;
    bool orgOsgiServiceHttpPortIsSet() const;
    void unsetOrg_osgi_service_http_port();
    void setOrgOsgiServiceHttpPort(std::shared_ptr<ConfigNodePropertyInteger> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyInteger> getOrgApacheFelixHttpTimeout() const;
    bool orgApacheFelixHttpTimeoutIsSet() const;
    void unsetOrg_apache_felix_http_timeout();
    void setOrgApacheFelixHttpTimeout(std::shared_ptr<ConfigNodePropertyInteger> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyBoolean> getOrgApacheFelixHttpsEnable() const;
    bool orgApacheFelixHttpsEnableIsSet() const;
    void unsetOrg_apache_felix_https_enable();
    void setOrgApacheFelixHttpsEnable(std::shared_ptr<ConfigNodePropertyBoolean> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyInteger> getOrgOsgiServiceHttpPortSecure() const;
    bool orgOsgiServiceHttpPortSecureIsSet() const;
    void unsetOrg_osgi_service_http_port_secure();
    void setOrgOsgiServiceHttpPortSecure(std::shared_ptr<ConfigNodePropertyInteger> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyString> getOrgApacheFelixHttpsKeystore() const;
    bool orgApacheFelixHttpsKeystoreIsSet() const;
    void unsetOrg_apache_felix_https_keystore();
    void setOrgApacheFelixHttpsKeystore(std::shared_ptr<ConfigNodePropertyString> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyString> getOrgApacheFelixHttpsKeystorePassword() const;
    bool orgApacheFelixHttpsKeystorePasswordIsSet() const;
    void unsetOrg_apache_felix_https_keystore_password();
    void setOrgApacheFelixHttpsKeystorePassword(std::shared_ptr<ConfigNodePropertyString> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyString> getOrgApacheFelixHttpsKeystoreKeyPassword() const;
    bool orgApacheFelixHttpsKeystoreKeyPasswordIsSet() const;
    void unsetOrg_apache_felix_https_keystore_key_password();
    void setOrgApacheFelixHttpsKeystoreKeyPassword(std::shared_ptr<ConfigNodePropertyString> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyString> getOrgApacheFelixHttpsTruststore() const;
    bool orgApacheFelixHttpsTruststoreIsSet() const;
    void unsetOrg_apache_felix_https_truststore();
    void setOrgApacheFelixHttpsTruststore(std::shared_ptr<ConfigNodePropertyString> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyString> getOrgApacheFelixHttpsTruststorePassword() const;
    bool orgApacheFelixHttpsTruststorePasswordIsSet() const;
    void unsetOrg_apache_felix_https_truststore_password();
    void setOrgApacheFelixHttpsTruststorePassword(std::shared_ptr<ConfigNodePropertyString> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyDropDown> getOrgApacheFelixHttpsClientcertificate() const;
    bool orgApacheFelixHttpsClientcertificateIsSet() const;
    void unsetOrg_apache_felix_https_clientcertificate();
    void setOrgApacheFelixHttpsClientcertificate(std::shared_ptr<ConfigNodePropertyDropDown> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyString> getOrgApacheFelixHttpContextPath() const;
    bool orgApacheFelixHttpContextPathIsSet() const;
    void unsetOrg_apache_felix_http_context_path();
    void setOrgApacheFelixHttpContextPath(std::shared_ptr<ConfigNodePropertyString> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyBoolean> getOrgApacheFelixHttpMbeans() const;
    bool orgApacheFelixHttpMbeansIsSet() const;
    void unsetOrg_apache_felix_http_mbeans();
    void setOrgApacheFelixHttpMbeans(std::shared_ptr<ConfigNodePropertyBoolean> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyInteger> getOrgApacheFelixHttpSessionTimeout() const;
    bool orgApacheFelixHttpSessionTimeoutIsSet() const;
    void unsetOrg_apache_felix_http_session_timeout();
    void setOrgApacheFelixHttpSessionTimeout(std::shared_ptr<ConfigNodePropertyInteger> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyInteger> getOrgApacheFelixHttpJettyThreadpoolMax() const;
    bool orgApacheFelixHttpJettyThreadpoolMaxIsSet() const;
    void unsetOrg_apache_felix_http_jetty_threadpool_max();
    void setOrgApacheFelixHttpJettyThreadpoolMax(std::shared_ptr<ConfigNodePropertyInteger> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyInteger> getOrgApacheFelixHttpJettyAcceptors() const;
    bool orgApacheFelixHttpJettyAcceptorsIsSet() const;
    void unsetOrg_apache_felix_http_jetty_acceptors();
    void setOrgApacheFelixHttpJettyAcceptors(std::shared_ptr<ConfigNodePropertyInteger> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyInteger> getOrgApacheFelixHttpJettySelectors() const;
    bool orgApacheFelixHttpJettySelectorsIsSet() const;
    void unsetOrg_apache_felix_http_jetty_selectors();
    void setOrgApacheFelixHttpJettySelectors(std::shared_ptr<ConfigNodePropertyInteger> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyInteger> getOrgApacheFelixHttpJettyHeaderBufferSize() const;
    bool orgApacheFelixHttpJettyHeaderBufferSizeIsSet() const;
    void unsetOrg_apache_felix_http_jetty_headerBufferSize();
    void setOrgApacheFelixHttpJettyHeaderBufferSize(std::shared_ptr<ConfigNodePropertyInteger> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyInteger> getOrgApacheFelixHttpJettyRequestBufferSize() const;
    bool orgApacheFelixHttpJettyRequestBufferSizeIsSet() const;
    void unsetOrg_apache_felix_http_jetty_requestBufferSize();
    void setOrgApacheFelixHttpJettyRequestBufferSize(std::shared_ptr<ConfigNodePropertyInteger> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyInteger> getOrgApacheFelixHttpJettyResponseBufferSize() const;
    bool orgApacheFelixHttpJettyResponseBufferSizeIsSet() const;
    void unsetOrg_apache_felix_http_jetty_responseBufferSize();
    void setOrgApacheFelixHttpJettyResponseBufferSize(std::shared_ptr<ConfigNodePropertyInteger> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyInteger> getOrgApacheFelixHttpJettyMaxFormSize() const;
    bool orgApacheFelixHttpJettyMaxFormSizeIsSet() const;
    void unsetOrg_apache_felix_http_jetty_maxFormSize();
    void setOrgApacheFelixHttpJettyMaxFormSize(std::shared_ptr<ConfigNodePropertyInteger> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyArray> getOrgApacheFelixHttpPathExclusions() const;
    bool orgApacheFelixHttpPathExclusionsIsSet() const;
    void unsetOrg_apache_felix_http_path_exclusions();
    void setOrgApacheFelixHttpPathExclusions(std::shared_ptr<ConfigNodePropertyArray> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyArray> getOrgApacheFelixHttpsJettyCiphersuitesExcluded() const;
    bool orgApacheFelixHttpsJettyCiphersuitesExcludedIsSet() const;
    void unsetOrg_apache_felix_https_jetty_ciphersuites_excluded();
    void setOrgApacheFelixHttpsJettyCiphersuitesExcluded(std::shared_ptr<ConfigNodePropertyArray> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyArray> getOrgApacheFelixHttpsJettyCiphersuitesIncluded() const;
    bool orgApacheFelixHttpsJettyCiphersuitesIncludedIsSet() const;
    void unsetOrg_apache_felix_https_jetty_ciphersuites_included();
    void setOrgApacheFelixHttpsJettyCiphersuitesIncluded(std::shared_ptr<ConfigNodePropertyArray> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyBoolean> getOrgApacheFelixHttpJettySendServerHeader() const;
    bool orgApacheFelixHttpJettySendServerHeaderIsSet() const;
    void unsetOrg_apache_felix_http_jetty_sendServerHeader();
    void setOrgApacheFelixHttpJettySendServerHeader(std::shared_ptr<ConfigNodePropertyBoolean> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyArray> getOrgApacheFelixHttpsJettyProtocolsIncluded() const;
    bool orgApacheFelixHttpsJettyProtocolsIncludedIsSet() const;
    void unsetOrg_apache_felix_https_jetty_protocols_included();
    void setOrgApacheFelixHttpsJettyProtocolsIncluded(std::shared_ptr<ConfigNodePropertyArray> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyArray> getOrgApacheFelixHttpsJettyProtocolsExcluded() const;
    bool orgApacheFelixHttpsJettyProtocolsExcludedIsSet() const;
    void unsetOrg_apache_felix_https_jetty_protocols_excluded();
    void setOrgApacheFelixHttpsJettyProtocolsExcluded(std::shared_ptr<ConfigNodePropertyArray> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyBoolean> getOrgApacheFelixProxyLoadBalancerConnectionEnable() const;
    bool orgApacheFelixProxyLoadBalancerConnectionEnableIsSet() const;
    void unsetOrg_apache_felix_proxy_load_balancer_connection_enable();
    void setOrgApacheFelixProxyLoadBalancerConnectionEnable(std::shared_ptr<ConfigNodePropertyBoolean> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyBoolean> getOrgApacheFelixHttpsJettyRenegotiateAllowed() const;
    bool orgApacheFelixHttpsJettyRenegotiateAllowedIsSet() const;
    void unsetOrg_apache_felix_https_jetty_renegotiateAllowed();
    void setOrgApacheFelixHttpsJettyRenegotiateAllowed(std::shared_ptr<ConfigNodePropertyBoolean> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyBoolean> getOrgApacheFelixHttpsJettySessionCookieHttpOnly() const;
    bool orgApacheFelixHttpsJettySessionCookieHttpOnlyIsSet() const;
    void unsetOrg_apache_felix_https_jetty_session_cookie_httpOnly();
    void setOrgApacheFelixHttpsJettySessionCookieHttpOnly(std::shared_ptr<ConfigNodePropertyBoolean> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyBoolean> getOrgApacheFelixHttpsJettySessionCookieSecure() const;
    bool orgApacheFelixHttpsJettySessionCookieSecureIsSet() const;
    void unsetOrg_apache_felix_https_jetty_session_cookie_secure();
    void setOrgApacheFelixHttpsJettySessionCookieSecure(std::shared_ptr<ConfigNodePropertyBoolean> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyString> getOrgEclipseJettyServletSessionIdPathParameterName() const;
    bool orgEclipseJettyServletSessionIdPathParameterNameIsSet() const;
    void unsetOrg_eclipse_jetty_servlet_SessionIdPathParameterName();
    void setOrgEclipseJettyServletSessionIdPathParameterName(std::shared_ptr<ConfigNodePropertyString> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyBoolean> getOrgEclipseJettyServletCheckingRemoteSessionIdEncoding() const;
    bool orgEclipseJettyServletCheckingRemoteSessionIdEncodingIsSet() const;
    void unsetOrg_eclipse_jetty_servlet_CheckingRemoteSessionIdEncoding();
    void setOrgEclipseJettyServletCheckingRemoteSessionIdEncoding(std::shared_ptr<ConfigNodePropertyBoolean> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyString> getOrgEclipseJettyServletSessionCookie() const;
    bool orgEclipseJettyServletSessionCookieIsSet() const;
    void unsetOrg_eclipse_jetty_servlet_SessionCookie();
    void setOrgEclipseJettyServletSessionCookie(std::shared_ptr<ConfigNodePropertyString> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyString> getOrgEclipseJettyServletSessionDomain() const;
    bool orgEclipseJettyServletSessionDomainIsSet() const;
    void unsetOrg_eclipse_jetty_servlet_SessionDomain();
    void setOrgEclipseJettyServletSessionDomain(std::shared_ptr<ConfigNodePropertyString> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyString> getOrgEclipseJettyServletSessionPath() const;
    bool orgEclipseJettyServletSessionPathIsSet() const;
    void unsetOrg_eclipse_jetty_servlet_SessionPath();
    void setOrgEclipseJettyServletSessionPath(std::shared_ptr<ConfigNodePropertyString> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyInteger> getOrgEclipseJettyServletMaxAge() const;
    bool orgEclipseJettyServletMaxAgeIsSet() const;
    void unsetOrg_eclipse_jetty_servlet_MaxAge();
    void setOrgEclipseJettyServletMaxAge(std::shared_ptr<ConfigNodePropertyInteger> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyString> getOrgApacheFelixHttpName() const;
    bool orgApacheFelixHttpNameIsSet() const;
    void unsetOrg_apache_felix_http_name();
    void setOrgApacheFelixHttpName(std::shared_ptr<ConfigNodePropertyString> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyBoolean> getOrgApacheFelixJettyGziphandlerEnable() const;
    bool orgApacheFelixJettyGziphandlerEnableIsSet() const;
    void unsetOrg_apache_felix_jetty_gziphandler_enable();
    void setOrgApacheFelixJettyGziphandlerEnable(std::shared_ptr<ConfigNodePropertyBoolean> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyInteger> getOrgApacheFelixJettyGzipMinGzipSize() const;
    bool orgApacheFelixJettyGzipMinGzipSizeIsSet() const;
    void unsetOrg_apache_felix_jetty_gzip_minGzipSize();
    void setOrgApacheFelixJettyGzipMinGzipSize(std::shared_ptr<ConfigNodePropertyInteger> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyInteger> getOrgApacheFelixJettyGzipCompressionLevel() const;
    bool orgApacheFelixJettyGzipCompressionLevelIsSet() const;
    void unsetOrg_apache_felix_jetty_gzip_compressionLevel();
    void setOrgApacheFelixJettyGzipCompressionLevel(std::shared_ptr<ConfigNodePropertyInteger> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyInteger> getOrgApacheFelixJettyGzipInflateBufferSize() const;
    bool orgApacheFelixJettyGzipInflateBufferSizeIsSet() const;
    void unsetOrg_apache_felix_jetty_gzip_inflateBufferSize();
    void setOrgApacheFelixJettyGzipInflateBufferSize(std::shared_ptr<ConfigNodePropertyInteger> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyBoolean> getOrgApacheFelixJettyGzipSyncFlush() const;
    bool orgApacheFelixJettyGzipSyncFlushIsSet() const;
    void unsetOrg_apache_felix_jetty_gzip_syncFlush();
    void setOrgApacheFelixJettyGzipSyncFlush(std::shared_ptr<ConfigNodePropertyBoolean> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyArray> getOrgApacheFelixJettyGzipExcludedUserAgents() const;
    bool orgApacheFelixJettyGzipExcludedUserAgentsIsSet() const;
    void unsetOrg_apache_felix_jetty_gzip_excludedUserAgents();
    void setOrgApacheFelixJettyGzipExcludedUserAgents(std::shared_ptr<ConfigNodePropertyArray> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyArray> getOrgApacheFelixJettyGzipIncludedMethods() const;
    bool orgApacheFelixJettyGzipIncludedMethodsIsSet() const;
    void unsetOrg_apache_felix_jetty_gzip_includedMethods();
    void setOrgApacheFelixJettyGzipIncludedMethods(std::shared_ptr<ConfigNodePropertyArray> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyArray> getOrgApacheFelixJettyGzipExcludedMethods() const;
    bool orgApacheFelixJettyGzipExcludedMethodsIsSet() const;
    void unsetOrg_apache_felix_jetty_gzip_excludedMethods();
    void setOrgApacheFelixJettyGzipExcludedMethods(std::shared_ptr<ConfigNodePropertyArray> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyArray> getOrgApacheFelixJettyGzipIncludedPaths() const;
    bool orgApacheFelixJettyGzipIncludedPathsIsSet() const;
    void unsetOrg_apache_felix_jetty_gzip_includedPaths();
    void setOrgApacheFelixJettyGzipIncludedPaths(std::shared_ptr<ConfigNodePropertyArray> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyArray> getOrgApacheFelixJettyGzipExcludedPaths() const;
    bool orgApacheFelixJettyGzipExcludedPathsIsSet() const;
    void unsetOrg_apache_felix_jetty_gzip_excludedPaths();
    void setOrgApacheFelixJettyGzipExcludedPaths(std::shared_ptr<ConfigNodePropertyArray> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyArray> getOrgApacheFelixJettyGzipIncludedMimeTypes() const;
    bool orgApacheFelixJettyGzipIncludedMimeTypesIsSet() const;
    void unsetOrg_apache_felix_jetty_gzip_includedMimeTypes();
    void setOrgApacheFelixJettyGzipIncludedMimeTypes(std::shared_ptr<ConfigNodePropertyArray> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyArray> getOrgApacheFelixJettyGzipExcludedMimeTypes() const;
    bool orgApacheFelixJettyGzipExcludedMimeTypesIsSet() const;
    void unsetOrg_apache_felix_jetty_gzip_excludedMimeTypes();
    void setOrgApacheFelixJettyGzipExcludedMimeTypes(std::shared_ptr<ConfigNodePropertyArray> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyBoolean> getOrgApacheFelixHttpSessionInvalidate() const;
    bool orgApacheFelixHttpSessionInvalidateIsSet() const;
    void unsetOrg_apache_felix_http_session_invalidate();
    void setOrgApacheFelixHttpSessionInvalidate(std::shared_ptr<ConfigNodePropertyBoolean> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyBoolean> getOrgApacheFelixHttpSessionUniqueid() const;
    bool orgApacheFelixHttpSessionUniqueidIsSet() const;
    void unsetOrg_apache_felix_http_session_uniqueid();
    void setOrgApacheFelixHttpSessionUniqueid(std::shared_ptr<ConfigNodePropertyBoolean> value);

protected:
    std::shared_ptr<ConfigNodePropertyString> m_Org_apache_felix_http_host;
    bool m_Org_apache_felix_http_hostIsSet;
    std::shared_ptr<ConfigNodePropertyBoolean> m_Org_apache_felix_http_enable;
    bool m_Org_apache_felix_http_enableIsSet;
    std::shared_ptr<ConfigNodePropertyInteger> m_Org_osgi_service_http_port;
    bool m_Org_osgi_service_http_portIsSet;
    std::shared_ptr<ConfigNodePropertyInteger> m_Org_apache_felix_http_timeout;
    bool m_Org_apache_felix_http_timeoutIsSet;
    std::shared_ptr<ConfigNodePropertyBoolean> m_Org_apache_felix_https_enable;
    bool m_Org_apache_felix_https_enableIsSet;
    std::shared_ptr<ConfigNodePropertyInteger> m_Org_osgi_service_http_port_secure;
    bool m_Org_osgi_service_http_port_secureIsSet;
    std::shared_ptr<ConfigNodePropertyString> m_Org_apache_felix_https_keystore;
    bool m_Org_apache_felix_https_keystoreIsSet;
    std::shared_ptr<ConfigNodePropertyString> m_Org_apache_felix_https_keystore_password;
    bool m_Org_apache_felix_https_keystore_passwordIsSet;
    std::shared_ptr<ConfigNodePropertyString> m_Org_apache_felix_https_keystore_key_password;
    bool m_Org_apache_felix_https_keystore_key_passwordIsSet;
    std::shared_ptr<ConfigNodePropertyString> m_Org_apache_felix_https_truststore;
    bool m_Org_apache_felix_https_truststoreIsSet;
    std::shared_ptr<ConfigNodePropertyString> m_Org_apache_felix_https_truststore_password;
    bool m_Org_apache_felix_https_truststore_passwordIsSet;
    std::shared_ptr<ConfigNodePropertyDropDown> m_Org_apache_felix_https_clientcertificate;
    bool m_Org_apache_felix_https_clientcertificateIsSet;
    std::shared_ptr<ConfigNodePropertyString> m_Org_apache_felix_http_context_path;
    bool m_Org_apache_felix_http_context_pathIsSet;
    std::shared_ptr<ConfigNodePropertyBoolean> m_Org_apache_felix_http_mbeans;
    bool m_Org_apache_felix_http_mbeansIsSet;
    std::shared_ptr<ConfigNodePropertyInteger> m_Org_apache_felix_http_session_timeout;
    bool m_Org_apache_felix_http_session_timeoutIsSet;
    std::shared_ptr<ConfigNodePropertyInteger> m_Org_apache_felix_http_jetty_threadpool_max;
    bool m_Org_apache_felix_http_jetty_threadpool_maxIsSet;
    std::shared_ptr<ConfigNodePropertyInteger> m_Org_apache_felix_http_jetty_acceptors;
    bool m_Org_apache_felix_http_jetty_acceptorsIsSet;
    std::shared_ptr<ConfigNodePropertyInteger> m_Org_apache_felix_http_jetty_selectors;
    bool m_Org_apache_felix_http_jetty_selectorsIsSet;
    std::shared_ptr<ConfigNodePropertyInteger> m_Org_apache_felix_http_jetty_headerBufferSize;
    bool m_Org_apache_felix_http_jetty_headerBufferSizeIsSet;
    std::shared_ptr<ConfigNodePropertyInteger> m_Org_apache_felix_http_jetty_requestBufferSize;
    bool m_Org_apache_felix_http_jetty_requestBufferSizeIsSet;
    std::shared_ptr<ConfigNodePropertyInteger> m_Org_apache_felix_http_jetty_responseBufferSize;
    bool m_Org_apache_felix_http_jetty_responseBufferSizeIsSet;
    std::shared_ptr<ConfigNodePropertyInteger> m_Org_apache_felix_http_jetty_maxFormSize;
    bool m_Org_apache_felix_http_jetty_maxFormSizeIsSet;
    std::shared_ptr<ConfigNodePropertyArray> m_Org_apache_felix_http_path_exclusions;
    bool m_Org_apache_felix_http_path_exclusionsIsSet;
    std::shared_ptr<ConfigNodePropertyArray> m_Org_apache_felix_https_jetty_ciphersuites_excluded;
    bool m_Org_apache_felix_https_jetty_ciphersuites_excludedIsSet;
    std::shared_ptr<ConfigNodePropertyArray> m_Org_apache_felix_https_jetty_ciphersuites_included;
    bool m_Org_apache_felix_https_jetty_ciphersuites_includedIsSet;
    std::shared_ptr<ConfigNodePropertyBoolean> m_Org_apache_felix_http_jetty_sendServerHeader;
    bool m_Org_apache_felix_http_jetty_sendServerHeaderIsSet;
    std::shared_ptr<ConfigNodePropertyArray> m_Org_apache_felix_https_jetty_protocols_included;
    bool m_Org_apache_felix_https_jetty_protocols_includedIsSet;
    std::shared_ptr<ConfigNodePropertyArray> m_Org_apache_felix_https_jetty_protocols_excluded;
    bool m_Org_apache_felix_https_jetty_protocols_excludedIsSet;
    std::shared_ptr<ConfigNodePropertyBoolean> m_Org_apache_felix_proxy_load_balancer_connection_enable;
    bool m_Org_apache_felix_proxy_load_balancer_connection_enableIsSet;
    std::shared_ptr<ConfigNodePropertyBoolean> m_Org_apache_felix_https_jetty_renegotiateAllowed;
    bool m_Org_apache_felix_https_jetty_renegotiateAllowedIsSet;
    std::shared_ptr<ConfigNodePropertyBoolean> m_Org_apache_felix_https_jetty_session_cookie_httpOnly;
    bool m_Org_apache_felix_https_jetty_session_cookie_httpOnlyIsSet;
    std::shared_ptr<ConfigNodePropertyBoolean> m_Org_apache_felix_https_jetty_session_cookie_secure;
    bool m_Org_apache_felix_https_jetty_session_cookie_secureIsSet;
    std::shared_ptr<ConfigNodePropertyString> m_Org_eclipse_jetty_servlet_SessionIdPathParameterName;
    bool m_Org_eclipse_jetty_servlet_SessionIdPathParameterNameIsSet;
    std::shared_ptr<ConfigNodePropertyBoolean> m_Org_eclipse_jetty_servlet_CheckingRemoteSessionIdEncoding;
    bool m_Org_eclipse_jetty_servlet_CheckingRemoteSessionIdEncodingIsSet;
    std::shared_ptr<ConfigNodePropertyString> m_Org_eclipse_jetty_servlet_SessionCookie;
    bool m_Org_eclipse_jetty_servlet_SessionCookieIsSet;
    std::shared_ptr<ConfigNodePropertyString> m_Org_eclipse_jetty_servlet_SessionDomain;
    bool m_Org_eclipse_jetty_servlet_SessionDomainIsSet;
    std::shared_ptr<ConfigNodePropertyString> m_Org_eclipse_jetty_servlet_SessionPath;
    bool m_Org_eclipse_jetty_servlet_SessionPathIsSet;
    std::shared_ptr<ConfigNodePropertyInteger> m_Org_eclipse_jetty_servlet_MaxAge;
    bool m_Org_eclipse_jetty_servlet_MaxAgeIsSet;
    std::shared_ptr<ConfigNodePropertyString> m_Org_apache_felix_http_name;
    bool m_Org_apache_felix_http_nameIsSet;
    std::shared_ptr<ConfigNodePropertyBoolean> m_Org_apache_felix_jetty_gziphandler_enable;
    bool m_Org_apache_felix_jetty_gziphandler_enableIsSet;
    std::shared_ptr<ConfigNodePropertyInteger> m_Org_apache_felix_jetty_gzip_minGzipSize;
    bool m_Org_apache_felix_jetty_gzip_minGzipSizeIsSet;
    std::shared_ptr<ConfigNodePropertyInteger> m_Org_apache_felix_jetty_gzip_compressionLevel;
    bool m_Org_apache_felix_jetty_gzip_compressionLevelIsSet;
    std::shared_ptr<ConfigNodePropertyInteger> m_Org_apache_felix_jetty_gzip_inflateBufferSize;
    bool m_Org_apache_felix_jetty_gzip_inflateBufferSizeIsSet;
    std::shared_ptr<ConfigNodePropertyBoolean> m_Org_apache_felix_jetty_gzip_syncFlush;
    bool m_Org_apache_felix_jetty_gzip_syncFlushIsSet;
    std::shared_ptr<ConfigNodePropertyArray> m_Org_apache_felix_jetty_gzip_excludedUserAgents;
    bool m_Org_apache_felix_jetty_gzip_excludedUserAgentsIsSet;
    std::shared_ptr<ConfigNodePropertyArray> m_Org_apache_felix_jetty_gzip_includedMethods;
    bool m_Org_apache_felix_jetty_gzip_includedMethodsIsSet;
    std::shared_ptr<ConfigNodePropertyArray> m_Org_apache_felix_jetty_gzip_excludedMethods;
    bool m_Org_apache_felix_jetty_gzip_excludedMethodsIsSet;
    std::shared_ptr<ConfigNodePropertyArray> m_Org_apache_felix_jetty_gzip_includedPaths;
    bool m_Org_apache_felix_jetty_gzip_includedPathsIsSet;
    std::shared_ptr<ConfigNodePropertyArray> m_Org_apache_felix_jetty_gzip_excludedPaths;
    bool m_Org_apache_felix_jetty_gzip_excludedPathsIsSet;
    std::shared_ptr<ConfigNodePropertyArray> m_Org_apache_felix_jetty_gzip_includedMimeTypes;
    bool m_Org_apache_felix_jetty_gzip_includedMimeTypesIsSet;
    std::shared_ptr<ConfigNodePropertyArray> m_Org_apache_felix_jetty_gzip_excludedMimeTypes;
    bool m_Org_apache_felix_jetty_gzip_excludedMimeTypesIsSet;
    std::shared_ptr<ConfigNodePropertyBoolean> m_Org_apache_felix_http_session_invalidate;
    bool m_Org_apache_felix_http_session_invalidateIsSet;
    std::shared_ptr<ConfigNodePropertyBoolean> m_Org_apache_felix_http_session_uniqueid;
    bool m_Org_apache_felix_http_session_uniqueidIsSet;
};

}
}
}
}

#endif /* ORG_OPENAPITOOLS_CLIENT_MODEL_OrgApacheFelixHttpProperties_H_ */
