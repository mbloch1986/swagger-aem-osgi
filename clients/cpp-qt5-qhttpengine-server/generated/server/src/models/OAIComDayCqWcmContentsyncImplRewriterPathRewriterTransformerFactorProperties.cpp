/**
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


#include "OAIComDayCqWcmContentsyncImplRewriterPathRewriterTransformerFactorProperties.h"

#include "OAIHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace OpenAPI {

OAIComDayCqWcmContentsyncImplRewriterPathRewriterTransformerFactorProperties::OAIComDayCqWcmContentsyncImplRewriterPathRewriterTransformerFactorProperties(QString json) {
    this->fromJson(json);
}

OAIComDayCqWcmContentsyncImplRewriterPathRewriterTransformerFactorProperties::OAIComDayCqWcmContentsyncImplRewriterPathRewriterTransformerFactorProperties() {
    this->init();
}

OAIComDayCqWcmContentsyncImplRewriterPathRewriterTransformerFactorProperties::~OAIComDayCqWcmContentsyncImplRewriterPathRewriterTransformerFactorProperties() {
    
}

void
OAIComDayCqWcmContentsyncImplRewriterPathRewriterTransformerFactorProperties::init() {
    m_cq_contentsync_pathrewritertransformer_mapping_links_isSet = false;
    m_cq_contentsync_pathrewritertransformer_mapping_clientlibs_isSet = false;
    m_cq_contentsync_pathrewritertransformer_mapping_images_isSet = false;
    m_cq_contentsync_pathrewritertransformer_attribute_pattern_isSet = false;
    m_cq_contentsync_pathrewritertransformer_clientlibrary_pattern_isSet = false;
    m_cq_contentsync_pathrewritertransformer_clientlibrary_replace_isSet = false;
}

void
OAIComDayCqWcmContentsyncImplRewriterPathRewriterTransformerFactorProperties::fromJson(QString jsonString) {
    QByteArray array (jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void
OAIComDayCqWcmContentsyncImplRewriterPathRewriterTransformerFactorProperties::fromJsonObject(QJsonObject json) {
    ::OpenAPI::fromJsonValue(cq_contentsync_pathrewritertransformer_mapping_links, json[QString("cq.contentsync.pathrewritertransformer.mapping.links")]);
    
    ::OpenAPI::fromJsonValue(cq_contentsync_pathrewritertransformer_mapping_clientlibs, json[QString("cq.contentsync.pathrewritertransformer.mapping.clientlibs")]);
    
    ::OpenAPI::fromJsonValue(cq_contentsync_pathrewritertransformer_mapping_images, json[QString("cq.contentsync.pathrewritertransformer.mapping.images")]);
    
    ::OpenAPI::fromJsonValue(cq_contentsync_pathrewritertransformer_attribute_pattern, json[QString("cq.contentsync.pathrewritertransformer.attribute.pattern")]);
    
    ::OpenAPI::fromJsonValue(cq_contentsync_pathrewritertransformer_clientlibrary_pattern, json[QString("cq.contentsync.pathrewritertransformer.clientlibrary.pattern")]);
    
    ::OpenAPI::fromJsonValue(cq_contentsync_pathrewritertransformer_clientlibrary_replace, json[QString("cq.contentsync.pathrewritertransformer.clientlibrary.replace")]);
    
}

QString
OAIComDayCqWcmContentsyncImplRewriterPathRewriterTransformerFactorProperties::asJson () const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject
OAIComDayCqWcmContentsyncImplRewriterPathRewriterTransformerFactorProperties::asJsonObject() const {
    QJsonObject obj;
	if(cq_contentsync_pathrewritertransformer_mapping_links.isSet()){
        obj.insert(QString("cq.contentsync.pathrewritertransformer.mapping.links"), ::OpenAPI::toJsonValue(cq_contentsync_pathrewritertransformer_mapping_links));
    }
	if(cq_contentsync_pathrewritertransformer_mapping_clientlibs.isSet()){
        obj.insert(QString("cq.contentsync.pathrewritertransformer.mapping.clientlibs"), ::OpenAPI::toJsonValue(cq_contentsync_pathrewritertransformer_mapping_clientlibs));
    }
	if(cq_contentsync_pathrewritertransformer_mapping_images.isSet()){
        obj.insert(QString("cq.contentsync.pathrewritertransformer.mapping.images"), ::OpenAPI::toJsonValue(cq_contentsync_pathrewritertransformer_mapping_images));
    }
	if(cq_contentsync_pathrewritertransformer_attribute_pattern.isSet()){
        obj.insert(QString("cq.contentsync.pathrewritertransformer.attribute.pattern"), ::OpenAPI::toJsonValue(cq_contentsync_pathrewritertransformer_attribute_pattern));
    }
	if(cq_contentsync_pathrewritertransformer_clientlibrary_pattern.isSet()){
        obj.insert(QString("cq.contentsync.pathrewritertransformer.clientlibrary.pattern"), ::OpenAPI::toJsonValue(cq_contentsync_pathrewritertransformer_clientlibrary_pattern));
    }
	if(cq_contentsync_pathrewritertransformer_clientlibrary_replace.isSet()){
        obj.insert(QString("cq.contentsync.pathrewritertransformer.clientlibrary.replace"), ::OpenAPI::toJsonValue(cq_contentsync_pathrewritertransformer_clientlibrary_replace));
    }
    return obj;
}

OAIConfigNodePropertyArray
OAIComDayCqWcmContentsyncImplRewriterPathRewriterTransformerFactorProperties::getCqContentsyncPathrewritertransformerMappingLinks() const {
    return cq_contentsync_pathrewritertransformer_mapping_links;
}
void
OAIComDayCqWcmContentsyncImplRewriterPathRewriterTransformerFactorProperties::setCqContentsyncPathrewritertransformerMappingLinks(const OAIConfigNodePropertyArray &cq_contentsync_pathrewritertransformer_mapping_links) {
    this->cq_contentsync_pathrewritertransformer_mapping_links = cq_contentsync_pathrewritertransformer_mapping_links;
    this->m_cq_contentsync_pathrewritertransformer_mapping_links_isSet = true;
}

OAIConfigNodePropertyArray
OAIComDayCqWcmContentsyncImplRewriterPathRewriterTransformerFactorProperties::getCqContentsyncPathrewritertransformerMappingClientlibs() const {
    return cq_contentsync_pathrewritertransformer_mapping_clientlibs;
}
void
OAIComDayCqWcmContentsyncImplRewriterPathRewriterTransformerFactorProperties::setCqContentsyncPathrewritertransformerMappingClientlibs(const OAIConfigNodePropertyArray &cq_contentsync_pathrewritertransformer_mapping_clientlibs) {
    this->cq_contentsync_pathrewritertransformer_mapping_clientlibs = cq_contentsync_pathrewritertransformer_mapping_clientlibs;
    this->m_cq_contentsync_pathrewritertransformer_mapping_clientlibs_isSet = true;
}

OAIConfigNodePropertyArray
OAIComDayCqWcmContentsyncImplRewriterPathRewriterTransformerFactorProperties::getCqContentsyncPathrewritertransformerMappingImages() const {
    return cq_contentsync_pathrewritertransformer_mapping_images;
}
void
OAIComDayCqWcmContentsyncImplRewriterPathRewriterTransformerFactorProperties::setCqContentsyncPathrewritertransformerMappingImages(const OAIConfigNodePropertyArray &cq_contentsync_pathrewritertransformer_mapping_images) {
    this->cq_contentsync_pathrewritertransformer_mapping_images = cq_contentsync_pathrewritertransformer_mapping_images;
    this->m_cq_contentsync_pathrewritertransformer_mapping_images_isSet = true;
}

OAIConfigNodePropertyString
OAIComDayCqWcmContentsyncImplRewriterPathRewriterTransformerFactorProperties::getCqContentsyncPathrewritertransformerAttributePattern() const {
    return cq_contentsync_pathrewritertransformer_attribute_pattern;
}
void
OAIComDayCqWcmContentsyncImplRewriterPathRewriterTransformerFactorProperties::setCqContentsyncPathrewritertransformerAttributePattern(const OAIConfigNodePropertyString &cq_contentsync_pathrewritertransformer_attribute_pattern) {
    this->cq_contentsync_pathrewritertransformer_attribute_pattern = cq_contentsync_pathrewritertransformer_attribute_pattern;
    this->m_cq_contentsync_pathrewritertransformer_attribute_pattern_isSet = true;
}

OAIConfigNodePropertyString
OAIComDayCqWcmContentsyncImplRewriterPathRewriterTransformerFactorProperties::getCqContentsyncPathrewritertransformerClientlibraryPattern() const {
    return cq_contentsync_pathrewritertransformer_clientlibrary_pattern;
}
void
OAIComDayCqWcmContentsyncImplRewriterPathRewriterTransformerFactorProperties::setCqContentsyncPathrewritertransformerClientlibraryPattern(const OAIConfigNodePropertyString &cq_contentsync_pathrewritertransformer_clientlibrary_pattern) {
    this->cq_contentsync_pathrewritertransformer_clientlibrary_pattern = cq_contentsync_pathrewritertransformer_clientlibrary_pattern;
    this->m_cq_contentsync_pathrewritertransformer_clientlibrary_pattern_isSet = true;
}

OAIConfigNodePropertyString
OAIComDayCqWcmContentsyncImplRewriterPathRewriterTransformerFactorProperties::getCqContentsyncPathrewritertransformerClientlibraryReplace() const {
    return cq_contentsync_pathrewritertransformer_clientlibrary_replace;
}
void
OAIComDayCqWcmContentsyncImplRewriterPathRewriterTransformerFactorProperties::setCqContentsyncPathrewritertransformerClientlibraryReplace(const OAIConfigNodePropertyString &cq_contentsync_pathrewritertransformer_clientlibrary_replace) {
    this->cq_contentsync_pathrewritertransformer_clientlibrary_replace = cq_contentsync_pathrewritertransformer_clientlibrary_replace;
    this->m_cq_contentsync_pathrewritertransformer_clientlibrary_replace_isSet = true;
}


bool
OAIComDayCqWcmContentsyncImplRewriterPathRewriterTransformerFactorProperties::isSet() const {
    bool isObjectUpdated = false;
    do{ 
        if(cq_contentsync_pathrewritertransformer_mapping_links.isSet()){ isObjectUpdated = true; break;}
    
        if(cq_contentsync_pathrewritertransformer_mapping_clientlibs.isSet()){ isObjectUpdated = true; break;}
    
        if(cq_contentsync_pathrewritertransformer_mapping_images.isSet()){ isObjectUpdated = true; break;}
    
        if(cq_contentsync_pathrewritertransformer_attribute_pattern.isSet()){ isObjectUpdated = true; break;}
    
        if(cq_contentsync_pathrewritertransformer_clientlibrary_pattern.isSet()){ isObjectUpdated = true; break;}
    
        if(cq_contentsync_pathrewritertransformer_clientlibrary_replace.isSet()){ isObjectUpdated = true; break;}
    }while(false);
    return isObjectUpdated;
}

}

