/**
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.client.model;

import org.openapitools.client.model.ConfigNodePropertyArray;
import org.openapitools.client.model.ConfigNodePropertyBoolean;
import org.openapitools.client.model.ConfigNodePropertyInteger;
import org.openapitools.client.model.ConfigNodePropertyString;
import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

@ApiModel(description = "")
public class ComDayCqAuthImplLoginSelectorHandlerProperties {
  
  @SerializedName("path")
  private ConfigNodePropertyString path = null;
  @SerializedName("service.ranking")
  private ConfigNodePropertyInteger serviceRanking = null;
  @SerializedName("auth.loginselector.mappings")
  private ConfigNodePropertyArray authLoginselectorMappings = null;
  @SerializedName("auth.loginselector.changepw.mappings")
  private ConfigNodePropertyArray authLoginselectorChangepwMappings = null;
  @SerializedName("auth.loginselector.defaultloginpage")
  private ConfigNodePropertyString authLoginselectorDefaultloginpage = null;
  @SerializedName("auth.loginselector.defaultchangepwpage")
  private ConfigNodePropertyString authLoginselectorDefaultchangepwpage = null;
  @SerializedName("auth.loginselector.handle")
  private ConfigNodePropertyArray authLoginselectorHandle = null;
  @SerializedName("auth.loginselector.handle.all.extensions")
  private ConfigNodePropertyBoolean authLoginselectorHandleAllExtensions = null;

  /**
   **/
  @ApiModelProperty(value = "")
  public ConfigNodePropertyString getPath() {
    return path;
  }
  public void setPath(ConfigNodePropertyString path) {
    this.path = path;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public ConfigNodePropertyInteger getServiceRanking() {
    return serviceRanking;
  }
  public void setServiceRanking(ConfigNodePropertyInteger serviceRanking) {
    this.serviceRanking = serviceRanking;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public ConfigNodePropertyArray getAuthLoginselectorMappings() {
    return authLoginselectorMappings;
  }
  public void setAuthLoginselectorMappings(ConfigNodePropertyArray authLoginselectorMappings) {
    this.authLoginselectorMappings = authLoginselectorMappings;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public ConfigNodePropertyArray getAuthLoginselectorChangepwMappings() {
    return authLoginselectorChangepwMappings;
  }
  public void setAuthLoginselectorChangepwMappings(ConfigNodePropertyArray authLoginselectorChangepwMappings) {
    this.authLoginselectorChangepwMappings = authLoginselectorChangepwMappings;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public ConfigNodePropertyString getAuthLoginselectorDefaultloginpage() {
    return authLoginselectorDefaultloginpage;
  }
  public void setAuthLoginselectorDefaultloginpage(ConfigNodePropertyString authLoginselectorDefaultloginpage) {
    this.authLoginselectorDefaultloginpage = authLoginselectorDefaultloginpage;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public ConfigNodePropertyString getAuthLoginselectorDefaultchangepwpage() {
    return authLoginselectorDefaultchangepwpage;
  }
  public void setAuthLoginselectorDefaultchangepwpage(ConfigNodePropertyString authLoginselectorDefaultchangepwpage) {
    this.authLoginselectorDefaultchangepwpage = authLoginselectorDefaultchangepwpage;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public ConfigNodePropertyArray getAuthLoginselectorHandle() {
    return authLoginselectorHandle;
  }
  public void setAuthLoginselectorHandle(ConfigNodePropertyArray authLoginselectorHandle) {
    this.authLoginselectorHandle = authLoginselectorHandle;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public ConfigNodePropertyBoolean getAuthLoginselectorHandleAllExtensions() {
    return authLoginselectorHandleAllExtensions;
  }
  public void setAuthLoginselectorHandleAllExtensions(ConfigNodePropertyBoolean authLoginselectorHandleAllExtensions) {
    this.authLoginselectorHandleAllExtensions = authLoginselectorHandleAllExtensions;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ComDayCqAuthImplLoginSelectorHandlerProperties comDayCqAuthImplLoginSelectorHandlerProperties = (ComDayCqAuthImplLoginSelectorHandlerProperties) o;
    return (this.path == null ? comDayCqAuthImplLoginSelectorHandlerProperties.path == null : this.path.equals(comDayCqAuthImplLoginSelectorHandlerProperties.path)) &&
        (this.serviceRanking == null ? comDayCqAuthImplLoginSelectorHandlerProperties.serviceRanking == null : this.serviceRanking.equals(comDayCqAuthImplLoginSelectorHandlerProperties.serviceRanking)) &&
        (this.authLoginselectorMappings == null ? comDayCqAuthImplLoginSelectorHandlerProperties.authLoginselectorMappings == null : this.authLoginselectorMappings.equals(comDayCqAuthImplLoginSelectorHandlerProperties.authLoginselectorMappings)) &&
        (this.authLoginselectorChangepwMappings == null ? comDayCqAuthImplLoginSelectorHandlerProperties.authLoginselectorChangepwMappings == null : this.authLoginselectorChangepwMappings.equals(comDayCqAuthImplLoginSelectorHandlerProperties.authLoginselectorChangepwMappings)) &&
        (this.authLoginselectorDefaultloginpage == null ? comDayCqAuthImplLoginSelectorHandlerProperties.authLoginselectorDefaultloginpage == null : this.authLoginselectorDefaultloginpage.equals(comDayCqAuthImplLoginSelectorHandlerProperties.authLoginselectorDefaultloginpage)) &&
        (this.authLoginselectorDefaultchangepwpage == null ? comDayCqAuthImplLoginSelectorHandlerProperties.authLoginselectorDefaultchangepwpage == null : this.authLoginselectorDefaultchangepwpage.equals(comDayCqAuthImplLoginSelectorHandlerProperties.authLoginselectorDefaultchangepwpage)) &&
        (this.authLoginselectorHandle == null ? comDayCqAuthImplLoginSelectorHandlerProperties.authLoginselectorHandle == null : this.authLoginselectorHandle.equals(comDayCqAuthImplLoginSelectorHandlerProperties.authLoginselectorHandle)) &&
        (this.authLoginselectorHandleAllExtensions == null ? comDayCqAuthImplLoginSelectorHandlerProperties.authLoginselectorHandleAllExtensions == null : this.authLoginselectorHandleAllExtensions.equals(comDayCqAuthImplLoginSelectorHandlerProperties.authLoginselectorHandleAllExtensions));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.path == null ? 0: this.path.hashCode());
    result = 31 * result + (this.serviceRanking == null ? 0: this.serviceRanking.hashCode());
    result = 31 * result + (this.authLoginselectorMappings == null ? 0: this.authLoginselectorMappings.hashCode());
    result = 31 * result + (this.authLoginselectorChangepwMappings == null ? 0: this.authLoginselectorChangepwMappings.hashCode());
    result = 31 * result + (this.authLoginselectorDefaultloginpage == null ? 0: this.authLoginselectorDefaultloginpage.hashCode());
    result = 31 * result + (this.authLoginselectorDefaultchangepwpage == null ? 0: this.authLoginselectorDefaultchangepwpage.hashCode());
    result = 31 * result + (this.authLoginselectorHandle == null ? 0: this.authLoginselectorHandle.hashCode());
    result = 31 * result + (this.authLoginselectorHandleAllExtensions == null ? 0: this.authLoginselectorHandleAllExtensions.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class ComDayCqAuthImplLoginSelectorHandlerProperties {\n");
    
    sb.append("  path: ").append(path).append("\n");
    sb.append("  serviceRanking: ").append(serviceRanking).append("\n");
    sb.append("  authLoginselectorMappings: ").append(authLoginselectorMappings).append("\n");
    sb.append("  authLoginselectorChangepwMappings: ").append(authLoginselectorChangepwMappings).append("\n");
    sb.append("  authLoginselectorDefaultloginpage: ").append(authLoginselectorDefaultloginpage).append("\n");
    sb.append("  authLoginselectorDefaultchangepwpage: ").append(authLoginselectorDefaultchangepwpage).append("\n");
    sb.append("  authLoginselectorHandle: ").append(authLoginselectorHandle).append("\n");
    sb.append("  authLoginselectorHandleAllExtensions: ").append(authLoginselectorHandleAllExtensions).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
