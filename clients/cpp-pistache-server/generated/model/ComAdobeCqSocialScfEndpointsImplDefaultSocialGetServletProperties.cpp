/**
* Adobe Experience Manager OSGI config (AEM) API
* Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
*
* OpenAPI spec version: 1.0.0-pre.0
* Contact: opensource@shinesolutions.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/


#include "ComAdobeCqSocialScfEndpointsImplDefaultSocialGetServletProperties.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

ComAdobeCqSocialScfEndpointsImplDefaultSocialGetServletProperties::ComAdobeCqSocialScfEndpointsImplDefaultSocialGetServletProperties()
{
    m_Sling_servlet_selectorsIsSet = false;
    m_Sling_servlet_extensionsIsSet = false;
    
}

ComAdobeCqSocialScfEndpointsImplDefaultSocialGetServletProperties::~ComAdobeCqSocialScfEndpointsImplDefaultSocialGetServletProperties()
{
}

void ComAdobeCqSocialScfEndpointsImplDefaultSocialGetServletProperties::validate()
{
    // TODO: implement validation
}

nlohmann::json ComAdobeCqSocialScfEndpointsImplDefaultSocialGetServletProperties::toJson() const
{
    nlohmann::json val = nlohmann::json::object();

    if(m_Sling_servlet_selectorsIsSet)
    {
        val["sling.servlet.selectors"] = ModelBase::toJson(m_Sling_servlet_selectors);
    }
    if(m_Sling_servlet_extensionsIsSet)
    {
        val["sling.servlet.extensions"] = ModelBase::toJson(m_Sling_servlet_extensions);
    }
    

    return val;
}

void ComAdobeCqSocialScfEndpointsImplDefaultSocialGetServletProperties::fromJson(nlohmann::json& val)
{
    if(val.find("sling.servlet.selectors") != val.end())
    {
        if(!val["sling.servlet.selectors"].is_null())
        {
            ConfigNodePropertyArray newItem;
            newItem.fromJson(val["sling.servlet.selectors"]);
            setSlingServletSelectors( newItem );
        }
        
    }
    if(val.find("sling.servlet.extensions") != val.end())
    {
        if(!val["sling.servlet.extensions"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["sling.servlet.extensions"]);
            setSlingServletExtensions( newItem );
        }
        
    }
    
}


ConfigNodePropertyArray ComAdobeCqSocialScfEndpointsImplDefaultSocialGetServletProperties::getSlingServletSelectors() const
{
    return m_Sling_servlet_selectors;
}
void ComAdobeCqSocialScfEndpointsImplDefaultSocialGetServletProperties::setSlingServletSelectors(ConfigNodePropertyArray const& value)
{
    m_Sling_servlet_selectors = value;
    m_Sling_servlet_selectorsIsSet = true;
}
bool ComAdobeCqSocialScfEndpointsImplDefaultSocialGetServletProperties::slingServletSelectorsIsSet() const
{
    return m_Sling_servlet_selectorsIsSet;
}
void ComAdobeCqSocialScfEndpointsImplDefaultSocialGetServletProperties::unsetSling_servlet_selectors()
{
    m_Sling_servlet_selectorsIsSet = false;
}
ConfigNodePropertyString ComAdobeCqSocialScfEndpointsImplDefaultSocialGetServletProperties::getSlingServletExtensions() const
{
    return m_Sling_servlet_extensions;
}
void ComAdobeCqSocialScfEndpointsImplDefaultSocialGetServletProperties::setSlingServletExtensions(ConfigNodePropertyString const& value)
{
    m_Sling_servlet_extensions = value;
    m_Sling_servlet_extensionsIsSet = true;
}
bool ComAdobeCqSocialScfEndpointsImplDefaultSocialGetServletProperties::slingServletExtensionsIsSet() const
{
    return m_Sling_servlet_extensionsIsSet;
}
void ComAdobeCqSocialScfEndpointsImplDefaultSocialGetServletProperties::unsetSling_servlet_extensions()
{
    m_Sling_servlet_extensionsIsSet = false;
}

}
}
}
}

