/**
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


#include "OAIOrgApacheSlingDistributionTransportImplUserCredentialsDistributiProperties.h"

#include "OAIHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace OpenAPI {

OAIOrgApacheSlingDistributionTransportImplUserCredentialsDistributiProperties::OAIOrgApacheSlingDistributionTransportImplUserCredentialsDistributiProperties(QString json) {
    init();
    this->fromJson(json);
}

OAIOrgApacheSlingDistributionTransportImplUserCredentialsDistributiProperties::OAIOrgApacheSlingDistributionTransportImplUserCredentialsDistributiProperties() {
    init();
}

OAIOrgApacheSlingDistributionTransportImplUserCredentialsDistributiProperties::~OAIOrgApacheSlingDistributionTransportImplUserCredentialsDistributiProperties() {
    this->cleanup();
}

void
OAIOrgApacheSlingDistributionTransportImplUserCredentialsDistributiProperties::init() {
    name = new OAIConfigNodePropertyString();
    m_name_isSet = false;
    username = new OAIConfigNodePropertyString();
    m_username_isSet = false;
    password = new OAIConfigNodePropertyString();
    m_password_isSet = false;
}

void
OAIOrgApacheSlingDistributionTransportImplUserCredentialsDistributiProperties::cleanup() {
    if(name != nullptr) { 
        delete name;
    }
    if(username != nullptr) { 
        delete username;
    }
    if(password != nullptr) { 
        delete password;
    }
}

OAIOrgApacheSlingDistributionTransportImplUserCredentialsDistributiProperties*
OAIOrgApacheSlingDistributionTransportImplUserCredentialsDistributiProperties::fromJson(QString json) {
    QByteArray array (json.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
    return this;
}

void
OAIOrgApacheSlingDistributionTransportImplUserCredentialsDistributiProperties::fromJsonObject(QJsonObject pJson) {
    ::OpenAPI::setValue(&name, pJson["name"], "OAIConfigNodePropertyString", "OAIConfigNodePropertyString");
    
    ::OpenAPI::setValue(&username, pJson["username"], "OAIConfigNodePropertyString", "OAIConfigNodePropertyString");
    
    ::OpenAPI::setValue(&password, pJson["password"], "OAIConfigNodePropertyString", "OAIConfigNodePropertyString");
    
}

QString
OAIOrgApacheSlingDistributionTransportImplUserCredentialsDistributiProperties::asJson ()
{
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject
OAIOrgApacheSlingDistributionTransportImplUserCredentialsDistributiProperties::asJsonObject() {
    QJsonObject obj;
    if((name != nullptr) && (name->isSet())){
        toJsonValue(QString("name"), name, obj, QString("OAIConfigNodePropertyString"));
    }
    if((username != nullptr) && (username->isSet())){
        toJsonValue(QString("username"), username, obj, QString("OAIConfigNodePropertyString"));
    }
    if((password != nullptr) && (password->isSet())){
        toJsonValue(QString("password"), password, obj, QString("OAIConfigNodePropertyString"));
    }

    return obj;
}

OAIConfigNodePropertyString*
OAIOrgApacheSlingDistributionTransportImplUserCredentialsDistributiProperties::getName() {
    return name;
}
void
OAIOrgApacheSlingDistributionTransportImplUserCredentialsDistributiProperties::setName(OAIConfigNodePropertyString* name) {
    this->name = name;
    this->m_name_isSet = true;
}

OAIConfigNodePropertyString*
OAIOrgApacheSlingDistributionTransportImplUserCredentialsDistributiProperties::getUsername() {
    return username;
}
void
OAIOrgApacheSlingDistributionTransportImplUserCredentialsDistributiProperties::setUsername(OAIConfigNodePropertyString* username) {
    this->username = username;
    this->m_username_isSet = true;
}

OAIConfigNodePropertyString*
OAIOrgApacheSlingDistributionTransportImplUserCredentialsDistributiProperties::getPassword() {
    return password;
}
void
OAIOrgApacheSlingDistributionTransportImplUserCredentialsDistributiProperties::setPassword(OAIConfigNodePropertyString* password) {
    this->password = password;
    this->m_password_isSet = true;
}


bool
OAIOrgApacheSlingDistributionTransportImplUserCredentialsDistributiProperties::isSet(){
    bool isObjectUpdated = false;
    do{
        if(name != nullptr && name->isSet()){ isObjectUpdated = true; break;}
        if(username != nullptr && username->isSet()){ isObjectUpdated = true; break;}
        if(password != nullptr && password->isSet()){ isObjectUpdated = true; break;}
    }while(false);
    return isObjectUpdated;
}
}

