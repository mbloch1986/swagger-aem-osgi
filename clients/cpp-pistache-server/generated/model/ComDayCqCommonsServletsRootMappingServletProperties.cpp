/**
* Adobe Experience Manager OSGI config (AEM) API
* Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
*
* OpenAPI spec version: 1.0.0-pre.0
* Contact: opensource@shinesolutions.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/


#include "ComDayCqCommonsServletsRootMappingServletProperties.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

ComDayCqCommonsServletsRootMappingServletProperties::ComDayCqCommonsServletsRootMappingServletProperties()
{
    m_Rootmapping_targetIsSet = false;
    
}

ComDayCqCommonsServletsRootMappingServletProperties::~ComDayCqCommonsServletsRootMappingServletProperties()
{
}

void ComDayCqCommonsServletsRootMappingServletProperties::validate()
{
    // TODO: implement validation
}

nlohmann::json ComDayCqCommonsServletsRootMappingServletProperties::toJson() const
{
    nlohmann::json val = nlohmann::json::object();

    if(m_Rootmapping_targetIsSet)
    {
        val["rootmapping.target"] = ModelBase::toJson(m_Rootmapping_target);
    }
    

    return val;
}

void ComDayCqCommonsServletsRootMappingServletProperties::fromJson(nlohmann::json& val)
{
    if(val.find("rootmapping.target") != val.end())
    {
        if(!val["rootmapping.target"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["rootmapping.target"]);
            setRootmappingTarget( newItem );
        }
        
    }
    
}


ConfigNodePropertyString ComDayCqCommonsServletsRootMappingServletProperties::getRootmappingTarget() const
{
    return m_Rootmapping_target;
}
void ComDayCqCommonsServletsRootMappingServletProperties::setRootmappingTarget(ConfigNodePropertyString const& value)
{
    m_Rootmapping_target = value;
    m_Rootmapping_targetIsSet = true;
}
bool ComDayCqCommonsServletsRootMappingServletProperties::rootmappingTargetIsSet() const
{
    return m_Rootmapping_targetIsSet;
}
void ComDayCqCommonsServletsRootMappingServletProperties::unsetRootmapping_target()
{
    m_Rootmapping_targetIsSet = false;
}

}
}
}
}

