/**
* Adobe Experience Manager OSGI config (AEM) API
* Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
*
* OpenAPI spec version: 1.0.0-pre.0
* Contact: opensource@shinesolutions.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/


#include "ComDayCqWcmCoreImplPagePageInfoAggregatorImplProperties.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

ComDayCqWcmCoreImplPagePageInfoAggregatorImplProperties::ComDayCqWcmCoreImplPagePageInfoAggregatorImplProperties()
{
    m_Page_info_provider_property_regex_defaultIsSet = false;
    m_Page_info_provider_property_nameIsSet = false;
    
}

ComDayCqWcmCoreImplPagePageInfoAggregatorImplProperties::~ComDayCqWcmCoreImplPagePageInfoAggregatorImplProperties()
{
}

void ComDayCqWcmCoreImplPagePageInfoAggregatorImplProperties::validate()
{
    // TODO: implement validation
}

nlohmann::json ComDayCqWcmCoreImplPagePageInfoAggregatorImplProperties::toJson() const
{
    nlohmann::json val = nlohmann::json::object();

    if(m_Page_info_provider_property_regex_defaultIsSet)
    {
        val["page.info.provider.property.regex.default"] = ModelBase::toJson(m_Page_info_provider_property_regex_default);
    }
    if(m_Page_info_provider_property_nameIsSet)
    {
        val["page.info.provider.property.name"] = ModelBase::toJson(m_Page_info_provider_property_name);
    }
    

    return val;
}

void ComDayCqWcmCoreImplPagePageInfoAggregatorImplProperties::fromJson(nlohmann::json& val)
{
    if(val.find("page.info.provider.property.regex.default") != val.end())
    {
        if(!val["page.info.provider.property.regex.default"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["page.info.provider.property.regex.default"]);
            setPageInfoProviderPropertyRegexDefault( newItem );
        }
        
    }
    if(val.find("page.info.provider.property.name") != val.end())
    {
        if(!val["page.info.provider.property.name"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["page.info.provider.property.name"]);
            setPageInfoProviderPropertyName( newItem );
        }
        
    }
    
}


ConfigNodePropertyString ComDayCqWcmCoreImplPagePageInfoAggregatorImplProperties::getPageInfoProviderPropertyRegexDefault() const
{
    return m_Page_info_provider_property_regex_default;
}
void ComDayCqWcmCoreImplPagePageInfoAggregatorImplProperties::setPageInfoProviderPropertyRegexDefault(ConfigNodePropertyString const& value)
{
    m_Page_info_provider_property_regex_default = value;
    m_Page_info_provider_property_regex_defaultIsSet = true;
}
bool ComDayCqWcmCoreImplPagePageInfoAggregatorImplProperties::pageInfoProviderPropertyRegexDefaultIsSet() const
{
    return m_Page_info_provider_property_regex_defaultIsSet;
}
void ComDayCqWcmCoreImplPagePageInfoAggregatorImplProperties::unsetPage_info_provider_property_regex_default()
{
    m_Page_info_provider_property_regex_defaultIsSet = false;
}
ConfigNodePropertyString ComDayCqWcmCoreImplPagePageInfoAggregatorImplProperties::getPageInfoProviderPropertyName() const
{
    return m_Page_info_provider_property_name;
}
void ComDayCqWcmCoreImplPagePageInfoAggregatorImplProperties::setPageInfoProviderPropertyName(ConfigNodePropertyString const& value)
{
    m_Page_info_provider_property_name = value;
    m_Page_info_provider_property_nameIsSet = true;
}
bool ComDayCqWcmCoreImplPagePageInfoAggregatorImplProperties::pageInfoProviderPropertyNameIsSet() const
{
    return m_Page_info_provider_property_nameIsSet;
}
void ComDayCqWcmCoreImplPagePageInfoAggregatorImplProperties::unsetPage_info_provider_property_name()
{
    m_Page_info_provider_property_nameIsSet = false;
}

}
}
}
}

