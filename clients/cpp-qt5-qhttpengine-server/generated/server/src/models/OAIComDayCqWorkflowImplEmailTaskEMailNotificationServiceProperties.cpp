/**
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


#include "OAIComDayCqWorkflowImplEmailTaskEMailNotificationServiceProperties.h"

#include "OAIHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace OpenAPI {

OAIComDayCqWorkflowImplEmailTaskEMailNotificationServiceProperties::OAIComDayCqWorkflowImplEmailTaskEMailNotificationServiceProperties(QString json) {
    this->fromJson(json);
}

OAIComDayCqWorkflowImplEmailTaskEMailNotificationServiceProperties::OAIComDayCqWorkflowImplEmailTaskEMailNotificationServiceProperties() {
    this->init();
}

OAIComDayCqWorkflowImplEmailTaskEMailNotificationServiceProperties::~OAIComDayCqWorkflowImplEmailTaskEMailNotificationServiceProperties() {
    
}

void
OAIComDayCqWorkflowImplEmailTaskEMailNotificationServiceProperties::init() {
    m_notify_onupdate_isSet = false;
    m_notify_oncomplete_isSet = false;
}

void
OAIComDayCqWorkflowImplEmailTaskEMailNotificationServiceProperties::fromJson(QString jsonString) {
    QByteArray array (jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void
OAIComDayCqWorkflowImplEmailTaskEMailNotificationServiceProperties::fromJsonObject(QJsonObject json) {
    ::OpenAPI::fromJsonValue(notify_onupdate, json[QString("notify.onupdate")]);
    
    ::OpenAPI::fromJsonValue(notify_oncomplete, json[QString("notify.oncomplete")]);
    
}

QString
OAIComDayCqWorkflowImplEmailTaskEMailNotificationServiceProperties::asJson () const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject
OAIComDayCqWorkflowImplEmailTaskEMailNotificationServiceProperties::asJsonObject() const {
    QJsonObject obj;
	if(notify_onupdate.isSet()){
        obj.insert(QString("notify.onupdate"), ::OpenAPI::toJsonValue(notify_onupdate));
    }
	if(notify_oncomplete.isSet()){
        obj.insert(QString("notify.oncomplete"), ::OpenAPI::toJsonValue(notify_oncomplete));
    }
    return obj;
}

OAIConfigNodePropertyBoolean
OAIComDayCqWorkflowImplEmailTaskEMailNotificationServiceProperties::getNotifyOnupdate() const {
    return notify_onupdate;
}
void
OAIComDayCqWorkflowImplEmailTaskEMailNotificationServiceProperties::setNotifyOnupdate(const OAIConfigNodePropertyBoolean &notify_onupdate) {
    this->notify_onupdate = notify_onupdate;
    this->m_notify_onupdate_isSet = true;
}

OAIConfigNodePropertyBoolean
OAIComDayCqWorkflowImplEmailTaskEMailNotificationServiceProperties::getNotifyOncomplete() const {
    return notify_oncomplete;
}
void
OAIComDayCqWorkflowImplEmailTaskEMailNotificationServiceProperties::setNotifyOncomplete(const OAIConfigNodePropertyBoolean &notify_oncomplete) {
    this->notify_oncomplete = notify_oncomplete;
    this->m_notify_oncomplete_isSet = true;
}


bool
OAIComDayCqWorkflowImplEmailTaskEMailNotificationServiceProperties::isSet() const {
    bool isObjectUpdated = false;
    do{ 
        if(notify_onupdate.isSet()){ isObjectUpdated = true; break;}
    
        if(notify_oncomplete.isSet()){ isObjectUpdated = true; break;}
    }while(false);
    return isObjectUpdated;
}

}

