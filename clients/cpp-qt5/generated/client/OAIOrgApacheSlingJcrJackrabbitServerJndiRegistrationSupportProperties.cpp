/**
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


#include "OAIOrgApacheSlingJcrJackrabbitServerJndiRegistrationSupportProperties.h"

#include "OAIHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace OpenAPI {

OAIOrgApacheSlingJcrJackrabbitServerJndiRegistrationSupportProperties::OAIOrgApacheSlingJcrJackrabbitServerJndiRegistrationSupportProperties(QString json) {
    init();
    this->fromJson(json);
}

OAIOrgApacheSlingJcrJackrabbitServerJndiRegistrationSupportProperties::OAIOrgApacheSlingJcrJackrabbitServerJndiRegistrationSupportProperties() {
    init();
}

OAIOrgApacheSlingJcrJackrabbitServerJndiRegistrationSupportProperties::~OAIOrgApacheSlingJcrJackrabbitServerJndiRegistrationSupportProperties() {
    this->cleanup();
}

void
OAIOrgApacheSlingJcrJackrabbitServerJndiRegistrationSupportProperties::init() {
    java_naming_factory_initial = new OAIConfigNodePropertyString();
    m_java_naming_factory_initial_isSet = false;
    java_naming_provider_url = new OAIConfigNodePropertyString();
    m_java_naming_provider_url_isSet = false;
}

void
OAIOrgApacheSlingJcrJackrabbitServerJndiRegistrationSupportProperties::cleanup() {
    if(java_naming_factory_initial != nullptr) { 
        delete java_naming_factory_initial;
    }
    if(java_naming_provider_url != nullptr) { 
        delete java_naming_provider_url;
    }
}

OAIOrgApacheSlingJcrJackrabbitServerJndiRegistrationSupportProperties*
OAIOrgApacheSlingJcrJackrabbitServerJndiRegistrationSupportProperties::fromJson(QString json) {
    QByteArray array (json.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
    return this;
}

void
OAIOrgApacheSlingJcrJackrabbitServerJndiRegistrationSupportProperties::fromJsonObject(QJsonObject pJson) {
    ::OpenAPI::setValue(&java_naming_factory_initial, pJson["java.naming.factory.initial"], "OAIConfigNodePropertyString", "OAIConfigNodePropertyString");
    
    ::OpenAPI::setValue(&java_naming_provider_url, pJson["java.naming.provider.url"], "OAIConfigNodePropertyString", "OAIConfigNodePropertyString");
    
}

QString
OAIOrgApacheSlingJcrJackrabbitServerJndiRegistrationSupportProperties::asJson ()
{
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject
OAIOrgApacheSlingJcrJackrabbitServerJndiRegistrationSupportProperties::asJsonObject() {
    QJsonObject obj;
    if((java_naming_factory_initial != nullptr) && (java_naming_factory_initial->isSet())){
        toJsonValue(QString("java.naming.factory.initial"), java_naming_factory_initial, obj, QString("OAIConfigNodePropertyString"));
    }
    if((java_naming_provider_url != nullptr) && (java_naming_provider_url->isSet())){
        toJsonValue(QString("java.naming.provider.url"), java_naming_provider_url, obj, QString("OAIConfigNodePropertyString"));
    }

    return obj;
}

OAIConfigNodePropertyString*
OAIOrgApacheSlingJcrJackrabbitServerJndiRegistrationSupportProperties::getJavaNamingFactoryInitial() {
    return java_naming_factory_initial;
}
void
OAIOrgApacheSlingJcrJackrabbitServerJndiRegistrationSupportProperties::setJavaNamingFactoryInitial(OAIConfigNodePropertyString* java_naming_factory_initial) {
    this->java_naming_factory_initial = java_naming_factory_initial;
    this->m_java_naming_factory_initial_isSet = true;
}

OAIConfigNodePropertyString*
OAIOrgApacheSlingJcrJackrabbitServerJndiRegistrationSupportProperties::getJavaNamingProviderUrl() {
    return java_naming_provider_url;
}
void
OAIOrgApacheSlingJcrJackrabbitServerJndiRegistrationSupportProperties::setJavaNamingProviderUrl(OAIConfigNodePropertyString* java_naming_provider_url) {
    this->java_naming_provider_url = java_naming_provider_url;
    this->m_java_naming_provider_url_isSet = true;
}


bool
OAIOrgApacheSlingJcrJackrabbitServerJndiRegistrationSupportProperties::isSet(){
    bool isObjectUpdated = false;
    do{
        if(java_naming_factory_initial != nullptr && java_naming_factory_initial->isSet()){ isObjectUpdated = true; break;}
        if(java_naming_provider_url != nullptr && java_naming_provider_url->isSet()){ isObjectUpdated = true; break;}
    }while(false);
    return isObjectUpdated;
}
}

