//
// OrgApacheSlingEngineImplAuthSlingAuthenticatorProperties.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation



public struct OrgApacheSlingEngineImplAuthSlingAuthenticatorProperties: Codable {

    public var osgiHttpWhiteboardContextSelect: ConfigNodePropertyString?
    public var osgiHttpWhiteboardListener: ConfigNodePropertyString?
    public var authSudoCookie: ConfigNodePropertyString?
    public var authSudoParameter: ConfigNodePropertyString?
    public var authAnnonymous: ConfigNodePropertyBoolean?
    public var slingAuthRequirements: ConfigNodePropertyArray?
    public var slingAuthAnonymousUser: ConfigNodePropertyString?
    public var slingAuthAnonymousPassword: ConfigNodePropertyString?
    public var authHttp: ConfigNodePropertyDropDown?
    public var authHttpRealm: ConfigNodePropertyString?
    public var authUriSuffix: ConfigNodePropertyArray?

    public init(osgiHttpWhiteboardContextSelect: ConfigNodePropertyString?, osgiHttpWhiteboardListener: ConfigNodePropertyString?, authSudoCookie: ConfigNodePropertyString?, authSudoParameter: ConfigNodePropertyString?, authAnnonymous: ConfigNodePropertyBoolean?, slingAuthRequirements: ConfigNodePropertyArray?, slingAuthAnonymousUser: ConfigNodePropertyString?, slingAuthAnonymousPassword: ConfigNodePropertyString?, authHttp: ConfigNodePropertyDropDown?, authHttpRealm: ConfigNodePropertyString?, authUriSuffix: ConfigNodePropertyArray?) {
        self.osgiHttpWhiteboardContextSelect = osgiHttpWhiteboardContextSelect
        self.osgiHttpWhiteboardListener = osgiHttpWhiteboardListener
        self.authSudoCookie = authSudoCookie
        self.authSudoParameter = authSudoParameter
        self.authAnnonymous = authAnnonymous
        self.slingAuthRequirements = slingAuthRequirements
        self.slingAuthAnonymousUser = slingAuthAnonymousUser
        self.slingAuthAnonymousPassword = slingAuthAnonymousPassword
        self.authHttp = authHttp
        self.authHttpRealm = authHttpRealm
        self.authUriSuffix = authUriSuffix
    }

    public enum CodingKeys: String, CodingKey { 
        case osgiHttpWhiteboardContextSelect = "osgi.http.whiteboard.context.select"
        case osgiHttpWhiteboardListener = "osgi.http.whiteboard.listener"
        case authSudoCookie = "auth.sudo.cookie"
        case authSudoParameter = "auth.sudo.parameter"
        case authAnnonymous = "auth.annonymous"
        case slingAuthRequirements = "sling.auth.requirements"
        case slingAuthAnonymousUser = "sling.auth.anonymous.user"
        case slingAuthAnonymousPassword = "sling.auth.anonymous.password"
        case authHttp = "auth.http"
        case authHttpRealm = "auth.http.realm"
        case authUriSuffix = "auth.uri.suffix"
    }


}

