note
 description:"[
		Adobe Experience Manager OSGI config (AEM) API
 		Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
  		OpenAPI spec version: 1.0.0-pre.0
 	    Contact: opensource@shinesolutions.com

  	NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

 		 Do not edit the class manually.
 	]"
	date: "$Date$"
	revision: "$Revision$"
	EIS:"Eiffel openapi generator", "src=https://openapi-generator.tech", "protocol=uri"
class COM_DAY_CQ_WCM_WORKFLOW_IMPL_WCM_WORKFLOW_SERVICE_IMPL_PROPERTIES 

inherit

  ANY
      redefine
          out 
      end


feature --Access

    event_filter: detachable CONFIG_NODE_PROPERTY_STRING 
      
    min_thread_pool_size: detachable CONFIG_NODE_PROPERTY_INTEGER 
      
    max_thread_pool_size: detachable CONFIG_NODE_PROPERTY_INTEGER 
      
    cq_wcm_workflow_terminate_on_activate: detachable CONFIG_NODE_PROPERTY_BOOLEAN 
      
    cq_wcm_worklfow_terminate_exclusion_list: detachable CONFIG_NODE_PROPERTY_ARRAY 
      

feature -- Change Element  
 
    set_event_filter (a_name: like event_filter)
        -- Set 'event_filter' with 'a_name'.
      do
        event_filter := a_name
      ensure
        event_filter_set: event_filter = a_name		
      end

    set_min_thread_pool_size (a_name: like min_thread_pool_size)
        -- Set 'min_thread_pool_size' with 'a_name'.
      do
        min_thread_pool_size := a_name
      ensure
        min_thread_pool_size_set: min_thread_pool_size = a_name		
      end

    set_max_thread_pool_size (a_name: like max_thread_pool_size)
        -- Set 'max_thread_pool_size' with 'a_name'.
      do
        max_thread_pool_size := a_name
      ensure
        max_thread_pool_size_set: max_thread_pool_size = a_name		
      end

    set_cq_wcm_workflow_terminate_on_activate (a_name: like cq_wcm_workflow_terminate_on_activate)
        -- Set 'cq_wcm_workflow_terminate_on_activate' with 'a_name'.
      do
        cq_wcm_workflow_terminate_on_activate := a_name
      ensure
        cq_wcm_workflow_terminate_on_activate_set: cq_wcm_workflow_terminate_on_activate = a_name		
      end

    set_cq_wcm_worklfow_terminate_exclusion_list (a_name: like cq_wcm_worklfow_terminate_exclusion_list)
        -- Set 'cq_wcm_worklfow_terminate_exclusion_list' with 'a_name'.
      do
        cq_wcm_worklfow_terminate_exclusion_list := a_name
      ensure
        cq_wcm_worklfow_terminate_exclusion_list_set: cq_wcm_worklfow_terminate_exclusion_list = a_name		
      end


 feature -- Status Report

    out: STRING
          -- <Precursor>
      do
        create Result.make_empty
        Result.append("%Nclass COM_DAY_CQ_WCM_WORKFLOW_IMPL_WCM_WORKFLOW_SERVICE_IMPL_PROPERTIES%N")
        if attached event_filter as l_event_filter then
          Result.append ("%Nevent_filter:")
          Result.append (l_event_filter.out)
          Result.append ("%N")    
        end  
        if attached min_thread_pool_size as l_min_thread_pool_size then
          Result.append ("%Nmin_thread_pool_size:")
          Result.append (l_min_thread_pool_size.out)
          Result.append ("%N")    
        end  
        if attached max_thread_pool_size as l_max_thread_pool_size then
          Result.append ("%Nmax_thread_pool_size:")
          Result.append (l_max_thread_pool_size.out)
          Result.append ("%N")    
        end  
        if attached cq_wcm_workflow_terminate_on_activate as l_cq_wcm_workflow_terminate_on_activate then
          Result.append ("%Ncq_wcm_workflow_terminate_on_activate:")
          Result.append (l_cq_wcm_workflow_terminate_on_activate.out)
          Result.append ("%N")    
        end  
        if attached cq_wcm_worklfow_terminate_exclusion_list as l_cq_wcm_worklfow_terminate_exclusion_list then
          Result.append ("%Ncq_wcm_worklfow_terminate_exclusion_list:")
          Result.append (l_cq_wcm_worklfow_terminate_exclusion_list.out)
          Result.append ("%N")    
        end  
      end
end


