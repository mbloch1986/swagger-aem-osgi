/**
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


#include "OAIComDayCqWcmFoundationFormsImplFormsHandlingServletProperties.h"

#include "OAIHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace OpenAPI {

OAIComDayCqWcmFoundationFormsImplFormsHandlingServletProperties::OAIComDayCqWcmFoundationFormsImplFormsHandlingServletProperties(QString json) {
    this->fromJson(json);
}

OAIComDayCqWcmFoundationFormsImplFormsHandlingServletProperties::OAIComDayCqWcmFoundationFormsImplFormsHandlingServletProperties() {
    this->init();
}

OAIComDayCqWcmFoundationFormsImplFormsHandlingServletProperties::~OAIComDayCqWcmFoundationFormsImplFormsHandlingServletProperties() {
    
}

void
OAIComDayCqWcmFoundationFormsImplFormsHandlingServletProperties::init() {
    m_name_whitelist_isSet = false;
    m_allow_expressions_isSet = false;
}

void
OAIComDayCqWcmFoundationFormsImplFormsHandlingServletProperties::fromJson(QString jsonString) {
    QByteArray array (jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void
OAIComDayCqWcmFoundationFormsImplFormsHandlingServletProperties::fromJsonObject(QJsonObject json) {
    ::OpenAPI::fromJsonValue(name_whitelist, json[QString("name.whitelist")]);
    
    ::OpenAPI::fromJsonValue(allow_expressions, json[QString("allow.expressions")]);
    
}

QString
OAIComDayCqWcmFoundationFormsImplFormsHandlingServletProperties::asJson () const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject
OAIComDayCqWcmFoundationFormsImplFormsHandlingServletProperties::asJsonObject() const {
    QJsonObject obj;
	if(name_whitelist.isSet()){
        obj.insert(QString("name.whitelist"), ::OpenAPI::toJsonValue(name_whitelist));
    }
	if(allow_expressions.isSet()){
        obj.insert(QString("allow.expressions"), ::OpenAPI::toJsonValue(allow_expressions));
    }
    return obj;
}

OAIConfigNodePropertyString
OAIComDayCqWcmFoundationFormsImplFormsHandlingServletProperties::getNameWhitelist() const {
    return name_whitelist;
}
void
OAIComDayCqWcmFoundationFormsImplFormsHandlingServletProperties::setNameWhitelist(const OAIConfigNodePropertyString &name_whitelist) {
    this->name_whitelist = name_whitelist;
    this->m_name_whitelist_isSet = true;
}

OAIConfigNodePropertyBoolean
OAIComDayCqWcmFoundationFormsImplFormsHandlingServletProperties::getAllowExpressions() const {
    return allow_expressions;
}
void
OAIComDayCqWcmFoundationFormsImplFormsHandlingServletProperties::setAllowExpressions(const OAIConfigNodePropertyBoolean &allow_expressions) {
    this->allow_expressions = allow_expressions;
    this->m_allow_expressions_isSet = true;
}


bool
OAIComDayCqWcmFoundationFormsImplFormsHandlingServletProperties::isSet() const {
    bool isObjectUpdated = false;
    do{ 
        if(name_whitelist.isSet()){ isObjectUpdated = true; break;}
    
        if(allow_expressions.isSet()){ isObjectUpdated = true; break;}
    }while(false);
    return isObjectUpdated;
}

}

