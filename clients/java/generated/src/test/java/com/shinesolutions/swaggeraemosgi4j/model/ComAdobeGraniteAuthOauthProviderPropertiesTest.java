/*
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.shinesolutions.swaggeraemosgi4j.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.shinesolutions.swaggeraemosgi4j.model.ConfigNodePropertyArray;
import com.shinesolutions.swaggeraemosgi4j.model.ConfigNodePropertyBoolean;
import com.shinesolutions.swaggeraemosgi4j.model.ConfigNodePropertyString;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import org.junit.Assert;
import org.junit.Ignore;
import org.junit.Test;


/**
 * Model tests for ComAdobeGraniteAuthOauthProviderProperties
 */
public class ComAdobeGraniteAuthOauthProviderPropertiesTest {
    private final ComAdobeGraniteAuthOauthProviderProperties model = new ComAdobeGraniteAuthOauthProviderProperties();

    /**
     * Model tests for ComAdobeGraniteAuthOauthProviderProperties
     */
    @Test
    public void testComAdobeGraniteAuthOauthProviderProperties() {
        // TODO: test ComAdobeGraniteAuthOauthProviderProperties
    }

    /**
     * Test the property 'oauthConfigId'
     */
    @Test
    public void oauthConfigIdTest() {
        // TODO: test oauthConfigId
    }

    /**
     * Test the property 'oauthClientId'
     */
    @Test
    public void oauthClientIdTest() {
        // TODO: test oauthClientId
    }

    /**
     * Test the property 'oauthClientSecret'
     */
    @Test
    public void oauthClientSecretTest() {
        // TODO: test oauthClientSecret
    }

    /**
     * Test the property 'oauthScope'
     */
    @Test
    public void oauthScopeTest() {
        // TODO: test oauthScope
    }

    /**
     * Test the property 'oauthConfigProviderId'
     */
    @Test
    public void oauthConfigProviderIdTest() {
        // TODO: test oauthConfigProviderId
    }

    /**
     * Test the property 'oauthCreateUsers'
     */
    @Test
    public void oauthCreateUsersTest() {
        // TODO: test oauthCreateUsers
    }

    /**
     * Test the property 'oauthUseridProperty'
     */
    @Test
    public void oauthUseridPropertyTest() {
        // TODO: test oauthUseridProperty
    }

    /**
     * Test the property 'forceStrictUsernameMatching'
     */
    @Test
    public void forceStrictUsernameMatchingTest() {
        // TODO: test forceStrictUsernameMatching
    }

    /**
     * Test the property 'oauthEncodeUserids'
     */
    @Test
    public void oauthEncodeUseridsTest() {
        // TODO: test oauthEncodeUserids
    }

    /**
     * Test the property 'oauthHashUserids'
     */
    @Test
    public void oauthHashUseridsTest() {
        // TODO: test oauthHashUserids
    }

    /**
     * Test the property 'oauthCallBackUrl'
     */
    @Test
    public void oauthCallBackUrlTest() {
        // TODO: test oauthCallBackUrl
    }

    /**
     * Test the property 'oauthAccessTokenPersist'
     */
    @Test
    public void oauthAccessTokenPersistTest() {
        // TODO: test oauthAccessTokenPersist
    }

    /**
     * Test the property 'oauthAccessTokenPersistCookie'
     */
    @Test
    public void oauthAccessTokenPersistCookieTest() {
        // TODO: test oauthAccessTokenPersistCookie
    }

    /**
     * Test the property 'oauthCsrfStateProtection'
     */
    @Test
    public void oauthCsrfStateProtectionTest() {
        // TODO: test oauthCsrfStateProtection
    }

    /**
     * Test the property 'oauthRedirectRequestParams'
     */
    @Test
    public void oauthRedirectRequestParamsTest() {
        // TODO: test oauthRedirectRequestParams
    }

    /**
     * Test the property 'oauthConfigSiblingsAllow'
     */
    @Test
    public void oauthConfigSiblingsAllowTest() {
        // TODO: test oauthConfigSiblingsAllow
    }

}
