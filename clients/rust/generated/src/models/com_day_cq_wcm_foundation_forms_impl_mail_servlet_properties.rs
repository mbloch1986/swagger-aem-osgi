/* 
 * Adobe Experience Manager OSGI config (AEM) API
 *
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 * Generated by: https://openapi-generator.tech
 */


#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct ComDayCqWcmFoundationFormsImplMailServletProperties {
  #[serde(rename = "sling.servlet.resourceTypes")]
  sling_servlet_resource_types: Option<::models::ConfigNodePropertyString>,
  #[serde(rename = "sling.servlet.selectors")]
  sling_servlet_selectors: Option<::models::ConfigNodePropertyString>,
  #[serde(rename = "resource.whitelist")]
  resource_whitelist: Option<::models::ConfigNodePropertyArray>,
  #[serde(rename = "resource.blacklist")]
  resource_blacklist: Option<::models::ConfigNodePropertyString>
}

impl ComDayCqWcmFoundationFormsImplMailServletProperties {
  pub fn new() -> ComDayCqWcmFoundationFormsImplMailServletProperties {
    ComDayCqWcmFoundationFormsImplMailServletProperties {
      sling_servlet_resource_types: None,
      sling_servlet_selectors: None,
      resource_whitelist: None,
      resource_blacklist: None
    }
  }

  pub fn set_sling_servlet_resource_types(&mut self, sling_servlet_resource_types: ::models::ConfigNodePropertyString) {
    self.sling_servlet_resource_types = Some(sling_servlet_resource_types);
  }

  pub fn with_sling_servlet_resource_types(mut self, sling_servlet_resource_types: ::models::ConfigNodePropertyString) -> ComDayCqWcmFoundationFormsImplMailServletProperties {
    self.sling_servlet_resource_types = Some(sling_servlet_resource_types);
    self
  }

  pub fn sling_servlet_resource_types(&self) -> Option<&::models::ConfigNodePropertyString> {
    self.sling_servlet_resource_types.as_ref()
  }

  pub fn reset_sling_servlet_resource_types(&mut self) {
    self.sling_servlet_resource_types = None;
  }

  pub fn set_sling_servlet_selectors(&mut self, sling_servlet_selectors: ::models::ConfigNodePropertyString) {
    self.sling_servlet_selectors = Some(sling_servlet_selectors);
  }

  pub fn with_sling_servlet_selectors(mut self, sling_servlet_selectors: ::models::ConfigNodePropertyString) -> ComDayCqWcmFoundationFormsImplMailServletProperties {
    self.sling_servlet_selectors = Some(sling_servlet_selectors);
    self
  }

  pub fn sling_servlet_selectors(&self) -> Option<&::models::ConfigNodePropertyString> {
    self.sling_servlet_selectors.as_ref()
  }

  pub fn reset_sling_servlet_selectors(&mut self) {
    self.sling_servlet_selectors = None;
  }

  pub fn set_resource_whitelist(&mut self, resource_whitelist: ::models::ConfigNodePropertyArray) {
    self.resource_whitelist = Some(resource_whitelist);
  }

  pub fn with_resource_whitelist(mut self, resource_whitelist: ::models::ConfigNodePropertyArray) -> ComDayCqWcmFoundationFormsImplMailServletProperties {
    self.resource_whitelist = Some(resource_whitelist);
    self
  }

  pub fn resource_whitelist(&self) -> Option<&::models::ConfigNodePropertyArray> {
    self.resource_whitelist.as_ref()
  }

  pub fn reset_resource_whitelist(&mut self) {
    self.resource_whitelist = None;
  }

  pub fn set_resource_blacklist(&mut self, resource_blacklist: ::models::ConfigNodePropertyString) {
    self.resource_blacklist = Some(resource_blacklist);
  }

  pub fn with_resource_blacklist(mut self, resource_blacklist: ::models::ConfigNodePropertyString) -> ComDayCqWcmFoundationFormsImplMailServletProperties {
    self.resource_blacklist = Some(resource_blacklist);
    self
  }

  pub fn resource_blacklist(&self) -> Option<&::models::ConfigNodePropertyString> {
    self.resource_blacklist.as_ref()
  }

  pub fn reset_resource_blacklist(&mut self) {
    self.resource_blacklist = None;
  }

}



