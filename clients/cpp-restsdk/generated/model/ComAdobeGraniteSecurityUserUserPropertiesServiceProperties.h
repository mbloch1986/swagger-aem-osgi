/**
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 3.2.1-SNAPSHOT.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * ComAdobeGraniteSecurityUserUserPropertiesServiceProperties.h
 *
 * 
 */

#ifndef ORG_OPENAPITOOLS_CLIENT_MODEL_ComAdobeGraniteSecurityUserUserPropertiesServiceProperties_H_
#define ORG_OPENAPITOOLS_CLIENT_MODEL_ComAdobeGraniteSecurityUserUserPropertiesServiceProperties_H_


#include "../ModelBase.h"

#include "ConfigNodePropertyArray.h"
#include "ConfigNodePropertyString.h"

namespace org {
namespace openapitools {
namespace client {
namespace model {

/// <summary>
/// 
/// </summary>
class  ComAdobeGraniteSecurityUserUserPropertiesServiceProperties
    : public ModelBase
{
public:
    ComAdobeGraniteSecurityUserUserPropertiesServiceProperties();
    virtual ~ComAdobeGraniteSecurityUserUserPropertiesServiceProperties();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    void fromJson(web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    void fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// ComAdobeGraniteSecurityUserUserPropertiesServiceProperties members

    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyString> getAdapterCondition() const;
    bool adapterConditionIsSet() const;
    void unsetAdapter_condition();
    void setAdapterCondition(std::shared_ptr<ConfigNodePropertyString> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyArray> getGraniteUserpropertiesNodetypes() const;
    bool graniteUserpropertiesNodetypesIsSet() const;
    void unsetGranite_userproperties_nodetypes();
    void setGraniteUserpropertiesNodetypes(std::shared_ptr<ConfigNodePropertyArray> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyArray> getGraniteUserpropertiesResourcetypes() const;
    bool graniteUserpropertiesResourcetypesIsSet() const;
    void unsetGranite_userproperties_resourcetypes();
    void setGraniteUserpropertiesResourcetypes(std::shared_ptr<ConfigNodePropertyArray> value);

protected:
    std::shared_ptr<ConfigNodePropertyString> m_Adapter_condition;
    bool m_Adapter_conditionIsSet;
    std::shared_ptr<ConfigNodePropertyArray> m_Granite_userproperties_nodetypes;
    bool m_Granite_userproperties_nodetypesIsSet;
    std::shared_ptr<ConfigNodePropertyArray> m_Granite_userproperties_resourcetypes;
    bool m_Granite_userproperties_resourcetypesIsSet;
};

}
}
}
}

#endif /* ORG_OPENAPITOOLS_CLIENT_MODEL_ComAdobeGraniteSecurityUserUserPropertiesServiceProperties_H_ */
