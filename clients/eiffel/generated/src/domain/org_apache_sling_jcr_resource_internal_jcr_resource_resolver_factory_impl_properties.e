note
 description:"[
		Adobe Experience Manager OSGI config (AEM) API
 		Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
  		OpenAPI spec version: 1.0.0-pre.0
 	    Contact: opensource@shinesolutions.com

  	NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

 		 Do not edit the class manually.
 	]"
	date: "$Date$"
	revision: "$Revision$"
	EIS:"Eiffel openapi generator", "src=https://openapi-generator.tech", "protocol=uri"
class ORG_APACHE_SLING_JCR_RESOURCE_INTERNAL_JCR_RESOURCE_RESOLVER_FACTORY_IMPL_PROPERTIES 

inherit

  ANY
      redefine
          out 
      end


feature --Access

    resource_resolver_searchpath: detachable CONFIG_NODE_PROPERTY_ARRAY 
      
    resource_resolver_manglenamespaces: detachable CONFIG_NODE_PROPERTY_BOOLEAN 
      
    resource_resolver_allow_direct: detachable CONFIG_NODE_PROPERTY_BOOLEAN 
      
    resource_resolver_required_providers: detachable CONFIG_NODE_PROPERTY_ARRAY 
      
    resource_resolver_required_providernames: detachable CONFIG_NODE_PROPERTY_ARRAY 
      
    resource_resolver_virtual: detachable CONFIG_NODE_PROPERTY_ARRAY 
      
    resource_resolver_mapping: detachable CONFIG_NODE_PROPERTY_ARRAY 
      
    resource_resolver_map_location: detachable CONFIG_NODE_PROPERTY_STRING 
      
    resource_resolver_map_observation: detachable CONFIG_NODE_PROPERTY_ARRAY 
      
    resource_resolver_default_vanity_redirect_status: detachable CONFIG_NODE_PROPERTY_INTEGER 
      
    resource_resolver_enable_vanitypath: detachable CONFIG_NODE_PROPERTY_BOOLEAN 
      
    resource_resolver_vanitypath_max_entries: detachable CONFIG_NODE_PROPERTY_INTEGER 
      
    resource_resolver_vanitypath_max_entries_startup: detachable CONFIG_NODE_PROPERTY_BOOLEAN 
      
    resource_resolver_vanitypath_bloomfilter_max_bytes: detachable CONFIG_NODE_PROPERTY_INTEGER 
      
    resource_resolver_optimize_alias_resolution: detachable CONFIG_NODE_PROPERTY_BOOLEAN 
      
    resource_resolver_vanitypath_whitelist: detachable CONFIG_NODE_PROPERTY_ARRAY 
      
    resource_resolver_vanitypath_blacklist: detachable CONFIG_NODE_PROPERTY_ARRAY 
      
    resource_resolver_vanity_precedence: detachable CONFIG_NODE_PROPERTY_BOOLEAN 
      
    resource_resolver_providerhandling_paranoid: detachable CONFIG_NODE_PROPERTY_BOOLEAN 
      
    resource_resolver_log_closing: detachable CONFIG_NODE_PROPERTY_BOOLEAN 
      
    resource_resolver_log_unclosed: detachable CONFIG_NODE_PROPERTY_BOOLEAN 
      

feature -- Change Element  
 
    set_resource_resolver_searchpath (a_name: like resource_resolver_searchpath)
        -- Set 'resource_resolver_searchpath' with 'a_name'.
      do
        resource_resolver_searchpath := a_name
      ensure
        resource_resolver_searchpath_set: resource_resolver_searchpath = a_name		
      end

    set_resource_resolver_manglenamespaces (a_name: like resource_resolver_manglenamespaces)
        -- Set 'resource_resolver_manglenamespaces' with 'a_name'.
      do
        resource_resolver_manglenamespaces := a_name
      ensure
        resource_resolver_manglenamespaces_set: resource_resolver_manglenamespaces = a_name		
      end

    set_resource_resolver_allow_direct (a_name: like resource_resolver_allow_direct)
        -- Set 'resource_resolver_allow_direct' with 'a_name'.
      do
        resource_resolver_allow_direct := a_name
      ensure
        resource_resolver_allow_direct_set: resource_resolver_allow_direct = a_name		
      end

    set_resource_resolver_required_providers (a_name: like resource_resolver_required_providers)
        -- Set 'resource_resolver_required_providers' with 'a_name'.
      do
        resource_resolver_required_providers := a_name
      ensure
        resource_resolver_required_providers_set: resource_resolver_required_providers = a_name		
      end

    set_resource_resolver_required_providernames (a_name: like resource_resolver_required_providernames)
        -- Set 'resource_resolver_required_providernames' with 'a_name'.
      do
        resource_resolver_required_providernames := a_name
      ensure
        resource_resolver_required_providernames_set: resource_resolver_required_providernames = a_name		
      end

    set_resource_resolver_virtual (a_name: like resource_resolver_virtual)
        -- Set 'resource_resolver_virtual' with 'a_name'.
      do
        resource_resolver_virtual := a_name
      ensure
        resource_resolver_virtual_set: resource_resolver_virtual = a_name		
      end

    set_resource_resolver_mapping (a_name: like resource_resolver_mapping)
        -- Set 'resource_resolver_mapping' with 'a_name'.
      do
        resource_resolver_mapping := a_name
      ensure
        resource_resolver_mapping_set: resource_resolver_mapping = a_name		
      end

    set_resource_resolver_map_location (a_name: like resource_resolver_map_location)
        -- Set 'resource_resolver_map_location' with 'a_name'.
      do
        resource_resolver_map_location := a_name
      ensure
        resource_resolver_map_location_set: resource_resolver_map_location = a_name		
      end

    set_resource_resolver_map_observation (a_name: like resource_resolver_map_observation)
        -- Set 'resource_resolver_map_observation' with 'a_name'.
      do
        resource_resolver_map_observation := a_name
      ensure
        resource_resolver_map_observation_set: resource_resolver_map_observation = a_name		
      end

    set_resource_resolver_default_vanity_redirect_status (a_name: like resource_resolver_default_vanity_redirect_status)
        -- Set 'resource_resolver_default_vanity_redirect_status' with 'a_name'.
      do
        resource_resolver_default_vanity_redirect_status := a_name
      ensure
        resource_resolver_default_vanity_redirect_status_set: resource_resolver_default_vanity_redirect_status = a_name		
      end

    set_resource_resolver_enable_vanitypath (a_name: like resource_resolver_enable_vanitypath)
        -- Set 'resource_resolver_enable_vanitypath' with 'a_name'.
      do
        resource_resolver_enable_vanitypath := a_name
      ensure
        resource_resolver_enable_vanitypath_set: resource_resolver_enable_vanitypath = a_name		
      end

    set_resource_resolver_vanitypath_max_entries (a_name: like resource_resolver_vanitypath_max_entries)
        -- Set 'resource_resolver_vanitypath_max_entries' with 'a_name'.
      do
        resource_resolver_vanitypath_max_entries := a_name
      ensure
        resource_resolver_vanitypath_max_entries_set: resource_resolver_vanitypath_max_entries = a_name		
      end

    set_resource_resolver_vanitypath_max_entries_startup (a_name: like resource_resolver_vanitypath_max_entries_startup)
        -- Set 'resource_resolver_vanitypath_max_entries_startup' with 'a_name'.
      do
        resource_resolver_vanitypath_max_entries_startup := a_name
      ensure
        resource_resolver_vanitypath_max_entries_startup_set: resource_resolver_vanitypath_max_entries_startup = a_name		
      end

    set_resource_resolver_vanitypath_bloomfilter_max_bytes (a_name: like resource_resolver_vanitypath_bloomfilter_max_bytes)
        -- Set 'resource_resolver_vanitypath_bloomfilter_max_bytes' with 'a_name'.
      do
        resource_resolver_vanitypath_bloomfilter_max_bytes := a_name
      ensure
        resource_resolver_vanitypath_bloomfilter_max_bytes_set: resource_resolver_vanitypath_bloomfilter_max_bytes = a_name		
      end

    set_resource_resolver_optimize_alias_resolution (a_name: like resource_resolver_optimize_alias_resolution)
        -- Set 'resource_resolver_optimize_alias_resolution' with 'a_name'.
      do
        resource_resolver_optimize_alias_resolution := a_name
      ensure
        resource_resolver_optimize_alias_resolution_set: resource_resolver_optimize_alias_resolution = a_name		
      end

    set_resource_resolver_vanitypath_whitelist (a_name: like resource_resolver_vanitypath_whitelist)
        -- Set 'resource_resolver_vanitypath_whitelist' with 'a_name'.
      do
        resource_resolver_vanitypath_whitelist := a_name
      ensure
        resource_resolver_vanitypath_whitelist_set: resource_resolver_vanitypath_whitelist = a_name		
      end

    set_resource_resolver_vanitypath_blacklist (a_name: like resource_resolver_vanitypath_blacklist)
        -- Set 'resource_resolver_vanitypath_blacklist' with 'a_name'.
      do
        resource_resolver_vanitypath_blacklist := a_name
      ensure
        resource_resolver_vanitypath_blacklist_set: resource_resolver_vanitypath_blacklist = a_name		
      end

    set_resource_resolver_vanity_precedence (a_name: like resource_resolver_vanity_precedence)
        -- Set 'resource_resolver_vanity_precedence' with 'a_name'.
      do
        resource_resolver_vanity_precedence := a_name
      ensure
        resource_resolver_vanity_precedence_set: resource_resolver_vanity_precedence = a_name		
      end

    set_resource_resolver_providerhandling_paranoid (a_name: like resource_resolver_providerhandling_paranoid)
        -- Set 'resource_resolver_providerhandling_paranoid' with 'a_name'.
      do
        resource_resolver_providerhandling_paranoid := a_name
      ensure
        resource_resolver_providerhandling_paranoid_set: resource_resolver_providerhandling_paranoid = a_name		
      end

    set_resource_resolver_log_closing (a_name: like resource_resolver_log_closing)
        -- Set 'resource_resolver_log_closing' with 'a_name'.
      do
        resource_resolver_log_closing := a_name
      ensure
        resource_resolver_log_closing_set: resource_resolver_log_closing = a_name		
      end

    set_resource_resolver_log_unclosed (a_name: like resource_resolver_log_unclosed)
        -- Set 'resource_resolver_log_unclosed' with 'a_name'.
      do
        resource_resolver_log_unclosed := a_name
      ensure
        resource_resolver_log_unclosed_set: resource_resolver_log_unclosed = a_name		
      end


 feature -- Status Report

    out: STRING
          -- <Precursor>
      do
        create Result.make_empty
        Result.append("%Nclass ORG_APACHE_SLING_JCR_RESOURCE_INTERNAL_JCR_RESOURCE_RESOLVER_FACTORY_IMPL_PROPERTIES%N")
        if attached resource_resolver_searchpath as l_resource_resolver_searchpath then
          Result.append ("%Nresource_resolver_searchpath:")
          Result.append (l_resource_resolver_searchpath.out)
          Result.append ("%N")    
        end  
        if attached resource_resolver_manglenamespaces as l_resource_resolver_manglenamespaces then
          Result.append ("%Nresource_resolver_manglenamespaces:")
          Result.append (l_resource_resolver_manglenamespaces.out)
          Result.append ("%N")    
        end  
        if attached resource_resolver_allow_direct as l_resource_resolver_allow_direct then
          Result.append ("%Nresource_resolver_allow_direct:")
          Result.append (l_resource_resolver_allow_direct.out)
          Result.append ("%N")    
        end  
        if attached resource_resolver_required_providers as l_resource_resolver_required_providers then
          Result.append ("%Nresource_resolver_required_providers:")
          Result.append (l_resource_resolver_required_providers.out)
          Result.append ("%N")    
        end  
        if attached resource_resolver_required_providernames as l_resource_resolver_required_providernames then
          Result.append ("%Nresource_resolver_required_providernames:")
          Result.append (l_resource_resolver_required_providernames.out)
          Result.append ("%N")    
        end  
        if attached resource_resolver_virtual as l_resource_resolver_virtual then
          Result.append ("%Nresource_resolver_virtual:")
          Result.append (l_resource_resolver_virtual.out)
          Result.append ("%N")    
        end  
        if attached resource_resolver_mapping as l_resource_resolver_mapping then
          Result.append ("%Nresource_resolver_mapping:")
          Result.append (l_resource_resolver_mapping.out)
          Result.append ("%N")    
        end  
        if attached resource_resolver_map_location as l_resource_resolver_map_location then
          Result.append ("%Nresource_resolver_map_location:")
          Result.append (l_resource_resolver_map_location.out)
          Result.append ("%N")    
        end  
        if attached resource_resolver_map_observation as l_resource_resolver_map_observation then
          Result.append ("%Nresource_resolver_map_observation:")
          Result.append (l_resource_resolver_map_observation.out)
          Result.append ("%N")    
        end  
        if attached resource_resolver_default_vanity_redirect_status as l_resource_resolver_default_vanity_redirect_status then
          Result.append ("%Nresource_resolver_default_vanity_redirect_status:")
          Result.append (l_resource_resolver_default_vanity_redirect_status.out)
          Result.append ("%N")    
        end  
        if attached resource_resolver_enable_vanitypath as l_resource_resolver_enable_vanitypath then
          Result.append ("%Nresource_resolver_enable_vanitypath:")
          Result.append (l_resource_resolver_enable_vanitypath.out)
          Result.append ("%N")    
        end  
        if attached resource_resolver_vanitypath_max_entries as l_resource_resolver_vanitypath_max_entries then
          Result.append ("%Nresource_resolver_vanitypath_max_entries:")
          Result.append (l_resource_resolver_vanitypath_max_entries.out)
          Result.append ("%N")    
        end  
        if attached resource_resolver_vanitypath_max_entries_startup as l_resource_resolver_vanitypath_max_entries_startup then
          Result.append ("%Nresource_resolver_vanitypath_max_entries_startup:")
          Result.append (l_resource_resolver_vanitypath_max_entries_startup.out)
          Result.append ("%N")    
        end  
        if attached resource_resolver_vanitypath_bloomfilter_max_bytes as l_resource_resolver_vanitypath_bloomfilter_max_bytes then
          Result.append ("%Nresource_resolver_vanitypath_bloomfilter_max_bytes:")
          Result.append (l_resource_resolver_vanitypath_bloomfilter_max_bytes.out)
          Result.append ("%N")    
        end  
        if attached resource_resolver_optimize_alias_resolution as l_resource_resolver_optimize_alias_resolution then
          Result.append ("%Nresource_resolver_optimize_alias_resolution:")
          Result.append (l_resource_resolver_optimize_alias_resolution.out)
          Result.append ("%N")    
        end  
        if attached resource_resolver_vanitypath_whitelist as l_resource_resolver_vanitypath_whitelist then
          Result.append ("%Nresource_resolver_vanitypath_whitelist:")
          Result.append (l_resource_resolver_vanitypath_whitelist.out)
          Result.append ("%N")    
        end  
        if attached resource_resolver_vanitypath_blacklist as l_resource_resolver_vanitypath_blacklist then
          Result.append ("%Nresource_resolver_vanitypath_blacklist:")
          Result.append (l_resource_resolver_vanitypath_blacklist.out)
          Result.append ("%N")    
        end  
        if attached resource_resolver_vanity_precedence as l_resource_resolver_vanity_precedence then
          Result.append ("%Nresource_resolver_vanity_precedence:")
          Result.append (l_resource_resolver_vanity_precedence.out)
          Result.append ("%N")    
        end  
        if attached resource_resolver_providerhandling_paranoid as l_resource_resolver_providerhandling_paranoid then
          Result.append ("%Nresource_resolver_providerhandling_paranoid:")
          Result.append (l_resource_resolver_providerhandling_paranoid.out)
          Result.append ("%N")    
        end  
        if attached resource_resolver_log_closing as l_resource_resolver_log_closing then
          Result.append ("%Nresource_resolver_log_closing:")
          Result.append (l_resource_resolver_log_closing.out)
          Result.append ("%N")    
        end  
        if attached resource_resolver_log_unclosed as l_resource_resolver_log_unclosed then
          Result.append ("%Nresource_resolver_log_unclosed:")
          Result.append (l_resource_resolver_log_unclosed.out)
          Result.append ("%N")    
        end  
      end
end


