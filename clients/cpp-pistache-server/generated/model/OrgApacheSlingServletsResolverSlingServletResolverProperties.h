/**
* Adobe Experience Manager OSGI config (AEM) API
* Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
*
* OpenAPI spec version: 1.0.0-pre.0
* Contact: opensource@shinesolutions.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
/*
 * OrgApacheSlingServletsResolverSlingServletResolverProperties.h
 *
 * 
 */

#ifndef OrgApacheSlingServletsResolverSlingServletResolverProperties_H_
#define OrgApacheSlingServletsResolverSlingServletResolverProperties_H_


#include "ModelBase.h"

#include "ConfigNodePropertyInteger.h"
#include "ConfigNodePropertyArray.h"
#include "ConfigNodePropertyString.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
/// 
/// </summary>
class  OrgApacheSlingServletsResolverSlingServletResolverProperties
    : public ModelBase
{
public:
    OrgApacheSlingServletsResolverSlingServletResolverProperties();
    virtual ~OrgApacheSlingServletsResolverSlingServletResolverProperties();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    nlohmann::json toJson() const override;
    void fromJson(nlohmann::json& json) override;

    /////////////////////////////////////////////
    /// OrgApacheSlingServletsResolverSlingServletResolverProperties members

    /// <summary>
    /// 
    /// </summary>
    ConfigNodePropertyString getServletresolverServletRoot() const;
    void setServletresolverServletRoot(ConfigNodePropertyString const& value);
    bool servletresolverServletRootIsSet() const;
    void unsetServletresolver_servletRoot();
    /// <summary>
    /// 
    /// </summary>
    ConfigNodePropertyInteger getServletresolverCacheSize() const;
    void setServletresolverCacheSize(ConfigNodePropertyInteger const& value);
    bool servletresolverCacheSizeIsSet() const;
    void unsetServletresolver_cacheSize();
    /// <summary>
    /// 
    /// </summary>
    ConfigNodePropertyArray getServletresolverPaths() const;
    void setServletresolverPaths(ConfigNodePropertyArray const& value);
    bool servletresolverPathsIsSet() const;
    void unsetServletresolver_paths();
    /// <summary>
    /// 
    /// </summary>
    ConfigNodePropertyArray getServletresolverDefaultExtensions() const;
    void setServletresolverDefaultExtensions(ConfigNodePropertyArray const& value);
    bool servletresolverDefaultExtensionsIsSet() const;
    void unsetServletresolver_defaultExtensions();

protected:
    ConfigNodePropertyString m_Servletresolver_servletRoot;
    bool m_Servletresolver_servletRootIsSet;
    ConfigNodePropertyInteger m_Servletresolver_cacheSize;
    bool m_Servletresolver_cacheSizeIsSet;
    ConfigNodePropertyArray m_Servletresolver_paths;
    bool m_Servletresolver_pathsIsSet;
    ConfigNodePropertyArray m_Servletresolver_defaultExtensions;
    bool m_Servletresolver_defaultExtensionsIsSet;
};

}
}
}
}

#endif /* OrgApacheSlingServletsResolverSlingServletResolverProperties_H_ */
