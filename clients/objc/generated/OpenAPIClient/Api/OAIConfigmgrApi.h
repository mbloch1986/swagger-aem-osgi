#import <Foundation/Foundation.h>
#import "OAIAdaptiveFormAndInteractiveCommunicationWebChannelConfigurationInfo.h"
#import "OAIAdaptiveFormAndInteractiveCommunicationWebChannelThemeConfigurInfo.h"
#import "OAIAnalyticsComponentQueryCacheServiceInfo.h"
#import "OAIApacheSlingHealthCheckResultHTMLSerializerInfo.h"
#import "OAIComAdobeAemFormsndocumentsConfigAEMFormsManagerConfigurationInfo.h"
#import "OAIComAdobeAemTransactionCoreImplTransactionRecorderInfo.h"
#import "OAIComAdobeAemUpgradePrechecksHcImplDeprecateIndexesHCInfo.h"
#import "OAIComAdobeAemUpgradePrechecksHcImplReplicationAgentsDisabledHCInfo.h"
#import "OAIComAdobeAemUpgradePrechecksMbeanImplPreUpgradeTasksMBeanImplInfo.h"
#import "OAIComAdobeAemUpgradePrechecksTasksImplConsistencyCheckTaskImplInfo.h"
#import "OAIComAdobeCqAccountApiAccountManagementServiceInfo.h"
#import "OAIComAdobeCqAccountImplAccountManagementServletInfo.h"
#import "OAIComAdobeCqAddressImplLocationLocationListServletInfo.h"
#import "OAIComAdobeCqAuditPurgeDamInfo.h"
#import "OAIComAdobeCqAuditPurgePagesInfo.h"
#import "OAIComAdobeCqAuditPurgeReplicationInfo.h"
#import "OAIComAdobeCqCdnRewriterImplAWSCloudFrontRewriterInfo.h"
#import "OAIComAdobeCqCdnRewriterImplCDNConfigServiceImplInfo.h"
#import "OAIComAdobeCqCdnRewriterImplCDNRewriterInfo.h"
#import "OAIComAdobeCqCloudconfigCoreImplConfigurationReplicationEventHandleInfo.h"
#import "OAIComAdobeCqCommerceImplAssetDynamicImageHandlerInfo.h"
#import "OAIComAdobeCqCommerceImplAssetProductAssetHandlerProviderImplInfo.h"
#import "OAIComAdobeCqCommerceImplAssetStaticImageHandlerInfo.h"
#import "OAIComAdobeCqCommerceImplAssetVideoHandlerInfo.h"
#import "OAIComAdobeCqCommerceImplPromotionPromotionManagerImplInfo.h"
#import "OAIComAdobeCqCommercePimImplCataloggeneratorCatalogGeneratorImplInfo.h"
#import "OAIComAdobeCqCommercePimImplPageEventListenerInfo.h"
#import "OAIComAdobeCqCommercePimImplProductfeedProductFeedServiceImplInfo.h"
#import "OAIComAdobeCqContentinsightImplReportingServicesSettingsProviderInfo.h"
#import "OAIComAdobeCqContentinsightImplServletsBrightEdgeProxyServletInfo.h"
#import "OAIComAdobeCqContentinsightImplServletsReportingServicesProxyServleInfo.h"
#import "OAIComAdobeCqDamCfmImplComponentComponentConfigImplInfo.h"
#import "OAIComAdobeCqDamCfmImplConfFeatureConfigImplInfo.h"
#import "OAIComAdobeCqDamCfmImplContentRewriterAssetProcessorInfo.h"
#import "OAIComAdobeCqDamCfmImplContentRewriterParRangeFilterInfo.h"
#import "OAIComAdobeCqDamCfmImplContentRewriterPayloadFilterInfo.h"
#import "OAIComAdobeCqDamDmProcessImagePTiffManagerImplInfo.h"
#import "OAIComAdobeCqDamIpsImplReplicationTriggerReplicateOnModifyWorkerInfo.h"
#import "OAIComAdobeCqDamMacSyncHelperImplMACSyncClientImplInfo.h"
#import "OAIComAdobeCqDamMacSyncImplDAMSyncServiceImplInfo.h"
#import "OAIComAdobeCqDamProcessorNuiImplNuiAssetProcessorInfo.h"
#import "OAIComAdobeCqDamS7imagingImplIsImageServerComponentInfo.h"
#import "OAIComAdobeCqDamS7imagingImplPsPlatformServerServletInfo.h"
#import "OAIComAdobeCqDamWebdavImplIoAssetIOHandlerInfo.h"
#import "OAIComAdobeCqDamWebdavImplIoDamWebdavVersionLinkingJobInfo.h"
#import "OAIComAdobeCqDamWebdavImplIoSpecialFilesHandlerInfo.h"
#import "OAIComAdobeCqDeserfwImplDeserializationFirewallImplInfo.h"
#import "OAIComAdobeCqDtmImplServiceDTMWebServiceImplInfo.h"
#import "OAIComAdobeCqDtmImplServletsDTMDeployHookServletInfo.h"
#import "OAIComAdobeCqDtmReactorImplServiceWebServiceImplInfo.h"
#import "OAIComAdobeCqExperiencelogImplExperienceLogConfigServletInfo.h"
#import "OAIComAdobeCqHcContentPackagesHealthCheckInfo.h"
#import "OAIComAdobeCqHistoryImplHistoryRequestFilterInfo.h"
#import "OAIComAdobeCqHistoryImplHistoryServiceImplInfo.h"
#import "OAIComAdobeCqInboxImplTypeproviderItemTypeProviderInfo.h"
#import "OAIComAdobeCqProjectsImplServletProjectImageServletInfo.h"
#import "OAIComAdobeCqProjectsPurgeSchedulerInfo.h"
#import "OAIComAdobeCqScheduledExporterImplScheduledExporterImplInfo.h"
#import "OAIComAdobeCqScreensAnalyticsImplScreensAnalyticsServiceImplInfo.h"
#import "OAIComAdobeCqScreensDeviceImplDeviceServiceInfo.h"
#import "OAIComAdobeCqScreensDeviceRegistrationImplRegistrationServiceImplInfo.h"
#import "OAIComAdobeCqScreensImplHandlerChannelsUpdateHandlerInfo.h"
#import "OAIComAdobeCqScreensImplJobsDistributedDevicesStatiUpdateJobInfo.h"
#import "OAIComAdobeCqScreensImplRemoteImplDistributedHttpClientImplInfo.h"
#import "OAIComAdobeCqScreensImplScreensChannelPostProcessorInfo.h"
#import "OAIComAdobeCqScreensMonitoringImplScreensMonitoringServiceImplInfo.h"
#import "OAIComAdobeCqScreensMqActivemqImplArtemisJMSProviderInfo.h"
#import "OAIComAdobeCqScreensOfflinecontentImplBulkOfflineUpdateServiceImplInfo.h"
#import "OAIComAdobeCqScreensOfflinecontentImplOfflineContentServiceImplInfo.h"
#import "OAIComAdobeCqScreensSegmentationImplSegmentationFeatureFlagInfo.h"
#import "OAIComAdobeCqSecurityHcBundlesImplHtmlLibraryManagerConfigHealthChInfo.h"
#import "OAIComAdobeCqSecurityHcBundlesImplWcmFilterHealthCheckInfo.h"
#import "OAIComAdobeCqSecurityHcDispatcherImplDispatcherAccessHealthCheckInfo.h"
#import "OAIComAdobeCqSecurityHcPackagesImplExampleContentHealthCheckInfo.h"
#import "OAIComAdobeCqSecurityHcWebserverImplClickjackingHealthCheckInfo.h"
#import "OAIComAdobeCqSocialAccountverificationImplAccountManagementConfigImInfo.h"
#import "OAIComAdobeCqSocialActivitystreamsClientImplSocialActivityComponenInfo.h"
#import "OAIComAdobeCqSocialActivitystreamsClientImplSocialActivityStreamCoInfo.h"
#import "OAIComAdobeCqSocialActivitystreamsListenerImplEventListenerHandlerInfo.h"
#import "OAIComAdobeCqSocialActivitystreamsListenerImplModerationEventExtenInfo.h"
#import "OAIComAdobeCqSocialActivitystreamsListenerImplRatingEventActivitySInfo.h"
#import "OAIComAdobeCqSocialActivitystreamsListenerImplResourceActivityStreInfo.h"
#import "OAIComAdobeCqSocialCalendarClientEndpointsImplCalendarOperationsIInfo.h"
#import "OAIComAdobeCqSocialCalendarClientOperationextensionsEventAttachmenInfo.h"
#import "OAIComAdobeCqSocialCalendarServletsTimeZoneServletInfo.h"
#import "OAIComAdobeCqSocialCommonsCommentsEndpointsImplCommentDeleteEventInfo.h"
#import "OAIComAdobeCqSocialCommonsCommentsEndpointsImplCommentOperationSeInfo.h"
#import "OAIComAdobeCqSocialCommonsCommentsEndpointsImplTranslationOperatiInfo.h"
#import "OAIComAdobeCqSocialCommonsCommentsListingImplSearchCommentSocialCInfo.h"
#import "OAIComAdobeCqSocialCommonsCommentsSchedulerImplSearchScheduledPosInfo.h"
#import "OAIComAdobeCqSocialCommonsCorsCORSAuthenticationFilterInfo.h"
#import "OAIComAdobeCqSocialCommonsEmailreplyImplAndroidEmailClientProviderInfo.h"
#import "OAIComAdobeCqSocialCommonsEmailreplyImplCommentEmailBuilderImplInfo.h"
#import "OAIComAdobeCqSocialCommonsEmailreplyImplCommentEmailEventListenerInfo.h"
#import "OAIComAdobeCqSocialCommonsEmailreplyImplCustomEmailClientProviderInfo.h"
#import "OAIComAdobeCqSocialCommonsEmailreplyImplEmailQuotedTextPatternsImpInfo.h"
#import "OAIComAdobeCqSocialCommonsEmailreplyImplEmailReplyConfigurationImpInfo.h"
#import "OAIComAdobeCqSocialCommonsEmailreplyImplEmailReplyImporterInfo.h"
#import "OAIComAdobeCqSocialCommonsEmailreplyImplGmailEmailClientProviderInfo.h"
#import "OAIComAdobeCqSocialCommonsEmailreplyImplIOSEmailClientProviderInfo.h"
#import "OAIComAdobeCqSocialCommonsEmailreplyImplMacmailEmailClientProviderInfo.h"
#import "OAIComAdobeCqSocialCommonsEmailreplyImplOutLookEmailClientProviderInfo.h"
#import "OAIComAdobeCqSocialCommonsEmailreplyImplUnknownEmailClientProviderInfo.h"
#import "OAIComAdobeCqSocialCommonsEmailreplyImplYahooEmailClientProviderInfo.h"
#import "OAIComAdobeCqSocialCommonsMaintainanceImplDeleteTempUGCImageUploadInfo.h"
#import "OAIComAdobeCqSocialCommonsUgclimiterImplUGCLimiterServiceImplInfo.h"
#import "OAIComAdobeCqSocialCommonsUgclimitsconfigImplCommunityUserUGCLimitInfo.h"
#import "OAIComAdobeCqSocialConnectOauthImplFacebookProviderImplInfo.h"
#import "OAIComAdobeCqSocialConnectOauthImplSocialOAuthAuthenticationHandleInfo.h"
#import "OAIComAdobeCqSocialConnectOauthImplSocialOAuthUserProfileMapperInfo.h"
#import "OAIComAdobeCqSocialConnectOauthImplTwitterProviderImplInfo.h"
#import "OAIComAdobeCqSocialContentFragmentsServicesImplCommunitiesFragmenInfo.h"
#import "OAIComAdobeCqSocialDatastoreAsImplASResourceProviderFactoryInfo.h"
#import "OAIComAdobeCqSocialDatastoreOpImplSocialMSResourceProviderFactoryInfo.h"
#import "OAIComAdobeCqSocialDatastoreRdbImplSocialRDBResourceProviderFactorInfo.h"
#import "OAIComAdobeCqSocialEnablementAdaptorsEnablementLearningPathAdaptorFInfo.h"
#import "OAIComAdobeCqSocialEnablementAdaptorsEnablementResourceAdaptorFactoInfo.h"
#import "OAIComAdobeCqSocialEnablementLearningpathEndpointsImplEnablementLInfo.h"
#import "OAIComAdobeCqSocialEnablementResourceEndpointsImplEnablementResouInfo.h"
#import "OAIComAdobeCqSocialEnablementServicesImplAuthorMarkerImplInfo.h"
#import "OAIComAdobeCqSocialFilelibraryClientEndpointsFilelibraryDownloadGeInfo.h"
#import "OAIComAdobeCqSocialFilelibraryClientEndpointsImplFileLibraryOperaInfo.h"
#import "OAIComAdobeCqSocialForumClientEndpointsImplForumOperationsServiceInfo.h"
#import "OAIComAdobeCqSocialForumDispatcherImplFlushOperationsInfo.h"
#import "OAIComAdobeCqSocialGroupClientImplCommunityGroupCollectionComponenInfo.h"
#import "OAIComAdobeCqSocialGroupImplGroupServiceImplInfo.h"
#import "OAIComAdobeCqSocialHandlebarsGuavaTemplateCacheImplInfo.h"
#import "OAIComAdobeCqSocialIdeationClientEndpointsImplIdeationOperationsSInfo.h"
#import "OAIComAdobeCqSocialJournalClientEndpointsImplJournalOperationsSerInfo.h"
#import "OAIComAdobeCqSocialMembersEndpointsImplCommunityMemberGroupProfileInfo.h"
#import "OAIComAdobeCqSocialMembersEndpointsImplCommunityMemberUserProfileOInfo.h"
#import "OAIComAdobeCqSocialMembersImplCommunityMemberGroupProfileComponentFInfo.h"
#import "OAIComAdobeCqSocialMessagingClientEndpointsImplMessagingOperationInfo.h"
#import "OAIComAdobeCqSocialModerationDashboardApiFilterGroupSocialComponenInfo.h"
#import "OAIComAdobeCqSocialModerationDashboardApiModerationDashboardSocialInfo.h"
#import "OAIComAdobeCqSocialModerationDashboardApiUserDetailsSocialComponenInfo.h"
#import "OAIComAdobeCqSocialModerationDashboardInternalImplFilterGroupSociInfo.h"
#import "OAIComAdobeCqSocialNotificationsImplMentionsRouterInfo.h"
#import "OAIComAdobeCqSocialNotificationsImplNotificationManagerImplInfo.h"
#import "OAIComAdobeCqSocialNotificationsImplNotificationsRouterInfo.h"
#import "OAIComAdobeCqSocialQnaClientEndpointsImplQnaForumOperationsServicInfo.h"
#import "OAIComAdobeCqSocialReportingAnalyticsServicesImplAnalyticsReportIInfo.h"
#import "OAIComAdobeCqSocialReportingAnalyticsServicesImplAnalyticsReportMInfo.h"
#import "OAIComAdobeCqSocialReportingAnalyticsServicesImplSiteTrendReportSInfo.h"
#import "OAIComAdobeCqSocialReviewClientEndpointsImplReviewOperationsServiInfo.h"
#import "OAIComAdobeCqSocialScfCoreOperationsImplSocialOperationsServletInfo.h"
#import "OAIComAdobeCqSocialScfEndpointsImplDefaultSocialGetServletInfo.h"
#import "OAIComAdobeCqSocialScoringImplScoringEventListenerInfo.h"
#import "OAIComAdobeCqSocialServiceusersInternalImplServiceUserWrapperImplInfo.h"
#import "OAIComAdobeCqSocialSiteEndpointsImplSiteOperationServiceInfo.h"
#import "OAIComAdobeCqSocialSiteImplAnalyticsComponentConfigurationServiceImInfo.h"
#import "OAIComAdobeCqSocialSiteImplSiteConfiguratorImplInfo.h"
#import "OAIComAdobeCqSocialSrpImplSocialSolrConnectorInfo.h"
#import "OAIComAdobeCqSocialSyncImplDiffChangesObserverInfo.h"
#import "OAIComAdobeCqSocialSyncImplGroupSyncListenerImplInfo.h"
#import "OAIComAdobeCqSocialSyncImplPublisherSyncServiceImplInfo.h"
#import "OAIComAdobeCqSocialSyncImplUserSyncListenerImplInfo.h"
#import "OAIComAdobeCqSocialTranslationImplTranslationServiceConfigManagerInfo.h"
#import "OAIComAdobeCqSocialTranslationImplUGCLanguageDetectorInfo.h"
#import "OAIComAdobeCqSocialUgcbaseDispatcherImplFlushServiceImplInfo.h"
#import "OAIComAdobeCqSocialUgcbaseImplAysncReverseReplicatorImplInfo.h"
#import "OAIComAdobeCqSocialUgcbaseImplPublisherConfigurationImplInfo.h"
#import "OAIComAdobeCqSocialUgcbaseImplSocialUtilsImplInfo.h"
#import "OAIComAdobeCqSocialUgcbaseModerationImplAutoModerationImplInfo.h"
#import "OAIComAdobeCqSocialUgcbaseModerationImplSentimentProcessInfo.h"
#import "OAIComAdobeCqSocialUgcbaseSecurityImplDefaultAttachmentTypeBlackliInfo.h"
#import "OAIComAdobeCqSocialUgcbaseSecurityImplSaferSlingPostValidatorImplInfo.h"
#import "OAIComAdobeCqSocialUserEndpointsImplUsersGroupFromPublishServletInfo.h"
#import "OAIComAdobeCqSocialUserImplTransportHttpToPublisherInfo.h"
#import "OAIComAdobeCqUiWcmCommonsInternalServletsRteRTEFilterServletFactInfo.h"
#import "OAIComAdobeCqUpgradesCleanupImplUpgradeContentCleanupInfo.h"
#import "OAIComAdobeCqUpgradesCleanupImplUpgradeInstallFolderCleanupInfo.h"
#import "OAIComAdobeCqWcmJobsAsyncImplAsyncDeleteConfigProviderServiceInfo.h"
#import "OAIComAdobeCqWcmJobsAsyncImplAsyncJobCleanUpTaskInfo.h"
#import "OAIComAdobeCqWcmJobsAsyncImplAsyncMoveConfigProviderServiceInfo.h"
#import "OAIComAdobeCqWcmJobsAsyncImplAsyncPageMoveConfigProviderServiceInfo.h"
#import "OAIComAdobeCqWcmLaunchesImplLaunchesEventHandlerInfo.h"
#import "OAIComAdobeCqWcmMobileQrcodeServletQRCodeImageGeneratorInfo.h"
#import "OAIComAdobeCqWcmStyleInternalComponentStyleInfoCacheImplInfo.h"
#import "OAIComAdobeCqWcmTranslationImplTranslationPlatformConfigurationImplInfo.h"
#import "OAIComAdobeFdFpConfigFormsPortalDraftsandSubmissionConfigServiceInfo.h"
#import "OAIComAdobeFdFpConfigFormsPortalSchedulerServiceInfo.h"
#import "OAIComAdobeFormsCommonServiceImplDefaultDataProviderInfo.h"
#import "OAIComAdobeFormsCommonServiceImplFormsCommonConfigurationServiceImpInfo.h"
#import "OAIComAdobeFormsCommonServletTempCleanUpTaskInfo.h"
#import "OAIComAdobeGraniteAcpPlatformPlatformServletInfo.h"
#import "OAIComAdobeGraniteActivitystreamsImplActivityManagerImplInfo.h"
#import "OAIComAdobeGraniteAnalyzerBaseSystemStatusServletInfo.h"
#import "OAIComAdobeGraniteAnalyzerScriptsCompileAllScriptsCompilerServletInfo.h"
#import "OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryInfo.h"
#import "OAIComAdobeGraniteAuthCertImplClientCertAuthHandlerInfo.h"
#import "OAIComAdobeGraniteAuthImsImplExternalUserIdMappingProviderExtensionInfo.h"
#import "OAIComAdobeGraniteAuthImsImplIMSAccessTokenRequestCustomizerImplInfo.h"
#import "OAIComAdobeGraniteAuthImsImplIMSInstanceCredentialsValidatorInfo.h"
#import "OAIComAdobeGraniteAuthImsImplIMSProviderImplInfo.h"
#import "OAIComAdobeGraniteAuthImsImplImsConfigProviderImplInfo.h"
#import "OAIComAdobeGraniteAuthImsInfo.h"
#import "OAIComAdobeGraniteAuthOauthAccesstokenProviderInfo.h"
#import "OAIComAdobeGraniteAuthOauthImplBearerAuthenticationHandlerInfo.h"
#import "OAIComAdobeGraniteAuthOauthImplDefaultTokenValidatorImplInfo.h"
#import "OAIComAdobeGraniteAuthOauthImplFacebookProviderImplInfo.h"
#import "OAIComAdobeGraniteAuthOauthImplGithubProviderImplInfo.h"
#import "OAIComAdobeGraniteAuthOauthImplGraniteProviderInfo.h"
#import "OAIComAdobeGraniteAuthOauthImplHelperProviderConfigManagerInfo.h"
#import "OAIComAdobeGraniteAuthOauthImplHelperProviderConfigManagerInternalInfo.h"
#import "OAIComAdobeGraniteAuthOauthImplOAuthAuthenticationHandlerInfo.h"
#import "OAIComAdobeGraniteAuthOauthImplTwitterProviderImplInfo.h"
#import "OAIComAdobeGraniteAuthOauthProviderInfo.h"
#import "OAIComAdobeGraniteAuthRequirementImplDefaultRequirementHandlerInfo.h"
#import "OAIComAdobeGraniteAuthSamlSamlAuthenticationHandlerInfo.h"
#import "OAIComAdobeGraniteAuthSsoImplSsoAuthenticationHandlerInfo.h"
#import "OAIComAdobeGraniteBundlesHcImplCodeCacheHealthCheckInfo.h"
#import "OAIComAdobeGraniteBundlesHcImplCrxdeSupportBundleHealthCheckInfo.h"
#import "OAIComAdobeGraniteBundlesHcImplDavExBundleHealthCheckInfo.h"
#import "OAIComAdobeGraniteBundlesHcImplInactiveBundlesHealthCheckInfo.h"
#import "OAIComAdobeGraniteBundlesHcImplJobsHealthCheckInfo.h"
#import "OAIComAdobeGraniteBundlesHcImplSlingGetServletHealthCheckInfo.h"
#import "OAIComAdobeGraniteBundlesHcImplSlingJavaScriptHandlerHealthCheckInfo.h"
#import "OAIComAdobeGraniteBundlesHcImplSlingJspScriptHandlerHealthCheckInfo.h"
#import "OAIComAdobeGraniteBundlesHcImplSlingReferrerFilterHealthCheckInfo.h"
#import "OAIComAdobeGraniteBundlesHcImplWebDavBundleHealthCheckInfo.h"
#import "OAIComAdobeGraniteCommentsInternalCommentReplicationContentFilterFacInfo.h"
#import "OAIComAdobeGraniteCompatrouterImplCompatSwitchingServiceImplInfo.h"
#import "OAIComAdobeGraniteCompatrouterImplRoutingConfigInfo.h"
#import "OAIComAdobeGraniteCompatrouterImplSwitchMappingConfigInfo.h"
#import "OAIComAdobeGraniteConfImplRuntimeAwareConfigurationResourceResolvingInfo.h"
#import "OAIComAdobeGraniteContexthubImplContextHubImplInfo.h"
#import "OAIComAdobeGraniteCorsImplCORSPolicyImplInfo.h"
#import "OAIComAdobeGraniteCsrfImplCSRFFilterInfo.h"
#import "OAIComAdobeGraniteCsrfImplCSRFServletInfo.h"
#import "OAIComAdobeGraniteDistributionCoreImplCryptoDistributionTransportSeInfo.h"
#import "OAIComAdobeGraniteDistributionCoreImplDiffDiffChangesObserverInfo.h"
#import "OAIComAdobeGraniteDistributionCoreImplDiffDiffEventListenerInfo.h"
#import "OAIComAdobeGraniteDistributionCoreImplDistributionToReplicationEvenInfo.h"
#import "OAIComAdobeGraniteDistributionCoreImplReplicationAdaptersReplicatInfo.h"
#import "OAIComAdobeGraniteDistributionCoreImplReplicationDistributionTransInfo.h"
#import "OAIComAdobeGraniteDistributionCoreImplTransportAccessTokenDistribuInfo.h"
#import "OAIComAdobeGraniteFragsImplCheckHttpHeaderFlagInfo.h"
#import "OAIComAdobeGraniteFragsImplRandomFeatureInfo.h"
#import "OAIComAdobeGraniteHttpcacheFileFileCacheStoreInfo.h"
#import "OAIComAdobeGraniteHttpcacheImplOuterCacheFilterInfo.h"
#import "OAIComAdobeGraniteI18nImplBundlePseudoTranslationsInfo.h"
#import "OAIComAdobeGraniteI18nImplPreferencesLocaleResolverServiceInfo.h"
#import "OAIComAdobeGraniteInfocollectorInfoCollectorInfo.h"
#import "OAIComAdobeGraniteJettySslInternalGraniteSslConnectorFactoryInfo.h"
#import "OAIComAdobeGraniteLicenseImplLicenseCheckFilterInfo.h"
#import "OAIComAdobeGraniteLoggingImplLogAnalyserImplInfo.h"
#import "OAIComAdobeGraniteLoggingImplLogErrorHealthCheckInfo.h"
#import "OAIComAdobeGraniteMaintenanceCrxImplDataStoreGarbageCollectionTaskInfo.h"
#import "OAIComAdobeGraniteMaintenanceCrxImplLuceneBinariesCleanupTaskInfo.h"
#import "OAIComAdobeGraniteMaintenanceCrxImplRevisionCleanupTaskInfo.h"
#import "OAIComAdobeGraniteMonitoringImplScriptConfigImplInfo.h"
#import "OAIComAdobeGraniteOauthServerAuthImplOAuth2ServerAuthenticationHanInfo.h"
#import "OAIComAdobeGraniteOauthServerImplAccessTokenCleanupTaskInfo.h"
#import "OAIComAdobeGraniteOauthServerImplOAuth2ClientRevocationServletInfo.h"
#import "OAIComAdobeGraniteOauthServerImplOAuth2RevocationEndpointServletInfo.h"
#import "OAIComAdobeGraniteOauthServerImplOAuth2TokenEndpointServletInfo.h"
#import "OAIComAdobeGraniteOauthServerImplOAuth2TokenRevocationServletInfo.h"
#import "OAIComAdobeGraniteOffloadingImplOffloadingConfiguratorInfo.h"
#import "OAIComAdobeGraniteOffloadingImplOffloadingJobClonerInfo.h"
#import "OAIComAdobeGraniteOffloadingImplOffloadingJobOffloaderInfo.h"
#import "OAIComAdobeGraniteOffloadingImplTransporterOffloadingAgentManagerInfo.h"
#import "OAIComAdobeGraniteOffloadingImplTransporterOffloadingDefaultTranspoInfo.h"
#import "OAIComAdobeGraniteOmnisearchImplCoreOmniSearchServiceImplInfo.h"
#import "OAIComAdobeGraniteOptoutImplOptOutServiceImplInfo.h"
#import "OAIComAdobeGraniteQueriesImplHcAsyncIndexHealthCheckInfo.h"
#import "OAIComAdobeGraniteQueriesImplHcLargeIndexHealthCheckInfo.h"
#import "OAIComAdobeGraniteQueriesImplHcQueriesStatusHealthCheckInfo.h"
#import "OAIComAdobeGraniteQueriesImplHcQueryHealthCheckMetricsInfo.h"
#import "OAIComAdobeGraniteQueriesImplHcQueryLimitsHealthCheckInfo.h"
#import "OAIComAdobeGraniteReplicationHcImplReplicationQueueHealthCheckInfo.h"
#import "OAIComAdobeGraniteReplicationHcImplReplicationTransportUsersHealthCInfo.h"
#import "OAIComAdobeGraniteRepositoryHcImplAuthorizableNodeNameHealthCheckInfo.h"
#import "OAIComAdobeGraniteRepositoryHcImplContentSlingSlingContentHealthCInfo.h"
#import "OAIComAdobeGraniteRepositoryHcImplContinuousRGCHealthCheckInfo.h"
#import "OAIComAdobeGraniteRepositoryHcImplDefaultAccessUserProfileHealthCheInfo.h"
#import "OAIComAdobeGraniteRepositoryHcImplDefaultLoginsHealthCheckInfo.h"
#import "OAIComAdobeGraniteRepositoryHcImplDiskSpaceHealthCheckInfo.h"
#import "OAIComAdobeGraniteRepositoryHcImplObservationQueueLengthHealthCheckInfo.h"
#import "OAIComAdobeGraniteRepositoryImplCommitStatsConfigInfo.h"
#import "OAIComAdobeGraniteRepositoryServiceUserConfigurationInfo.h"
#import "OAIComAdobeGraniteRequestsLoggingImplHcRequestsStatusHealthCheckImInfo.h"
#import "OAIComAdobeGraniteResourcestatusImplCompositeStatusTypeInfo.h"
#import "OAIComAdobeGraniteResourcestatusImplStatusResourceProviderImplInfo.h"
#import "OAIComAdobeGraniteRestAssetsImplAssetContentDispositionFilterInfo.h"
#import "OAIComAdobeGraniteRestImplApiEndpointResourceProviderFactoryImplInfo.h"
#import "OAIComAdobeGraniteRestImplServletDefaultGETServletInfo.h"
#import "OAIComAdobeGraniteSecurityUserUiInternalServletsSSLConfigurationSInfo.h"
#import "OAIComAdobeGraniteSecurityUserUserPropertiesServiceInfo.h"
#import "OAIComAdobeGraniteSocialgraphImplSocialGraphFactoryImplInfo.h"
#import "OAIComAdobeGraniteSystemMonitoringImplSystemStatsMBeanImplInfo.h"
#import "OAIComAdobeGraniteTaskmanagementImplJcrTaskAdapterFactoryInfo.h"
#import "OAIComAdobeGraniteTaskmanagementImplJcrTaskArchiveServiceInfo.h"
#import "OAIComAdobeGraniteTaskmanagementImplPurgeTaskPurgeMaintenanceTaskInfo.h"
#import "OAIComAdobeGraniteTaskmanagementImplServiceTaskManagerAdapterFactorInfo.h"
#import "OAIComAdobeGraniteThreaddumpThreadDumpCollectorInfo.h"
#import "OAIComAdobeGraniteTranslationConnectorMsftCoreImplMicrosoftTranslInfo.h"
#import "OAIComAdobeGraniteTranslationCoreImplTranslationManagerImplInfo.h"
#import "OAIComAdobeGraniteUiClientlibsImplHtmlLibraryManagerImplInfo.h"
#import "OAIComAdobeGraniteWorkflowConsoleFragsWorkflowWithdrawFeatureInfo.h"
#import "OAIComAdobeGraniteWorkflowConsolePublishWorkflowPublishEventServiceInfo.h"
#import "OAIComAdobeGraniteWorkflowCoreJcrWorkflowBucketManagerInfo.h"
#import "OAIComAdobeGraniteWorkflowCoreJobExternalProcessJobHandlerInfo.h"
#import "OAIComAdobeGraniteWorkflowCoreJobJobHandlerInfo.h"
#import "OAIComAdobeGraniteWorkflowCoreOffloadingWorkflowOffloadingJobConsumInfo.h"
#import "OAIComAdobeGraniteWorkflowCorePayloadMapCacheInfo.h"
#import "OAIComAdobeGraniteWorkflowCorePayloadmapPayloadMoveListenerInfo.h"
#import "OAIComAdobeGraniteWorkflowCoreWorkflowConfigInfo.h"
#import "OAIComAdobeGraniteWorkflowCoreWorkflowSessionFactoryInfo.h"
#import "OAIComAdobeGraniteWorkflowPurgeSchedulerInfo.h"
#import "OAIComAdobeOctopusNcommBootstrapInfo.h"
#import "OAIComAdobeSocialIntegrationsLivefyreUserPingforpullImplPingPullSInfo.h"
#import "OAIComAdobeXmpWorkerFilesNcommXMPFilesNCommInfo.h"
#import "OAIComDayCommonsDatasourceJdbcpoolJdbcPoolServiceInfo.h"
#import "OAIComDayCommonsHttpclientInfo.h"
#import "OAIComDayCqAnalyticsImplStorePropertiesChangeListenerInfo.h"
#import "OAIComDayCqAnalyticsSitecatalystImplExporterClassificationsExporteInfo.h"
#import "OAIComDayCqAnalyticsSitecatalystImplImporterReportImporterInfo.h"
#import "OAIComDayCqAnalyticsSitecatalystImplSitecatalystAdapterFactoryInfo.h"
#import "OAIComDayCqAnalyticsSitecatalystImplSitecatalystHttpClientImplInfo.h"
#import "OAIComDayCqAnalyticsTestandtargetImplAccountOptionsUpdaterInfo.h"
#import "OAIComDayCqAnalyticsTestandtargetImplDeleteAuthorActivityListenerInfo.h"
#import "OAIComDayCqAnalyticsTestandtargetImplPushAuthorCampaignPageListenerInfo.h"
#import "OAIComDayCqAnalyticsTestandtargetImplSegmentImporterInfo.h"
#import "OAIComDayCqAnalyticsTestandtargetImplServiceWebServiceImplInfo.h"
#import "OAIComDayCqAnalyticsTestandtargetImplServletsAdminServerServletInfo.h"
#import "OAIComDayCqAnalyticsTestandtargetImplTestandtargetHttpClientImplInfo.h"
#import "OAIComDayCqAuthImplCugCugSupportImplInfo.h"
#import "OAIComDayCqAuthImplLoginSelectorHandlerInfo.h"
#import "OAIComDayCqCommonsImplExternalizerImplInfo.h"
#import "OAIComDayCqCommonsServletsRootMappingServletInfo.h"
#import "OAIComDayCqCompatCodeupgradeImplCodeUpgradeExecutionConditionCheckeInfo.h"
#import "OAIComDayCqCompatCodeupgradeImplUpgradeTaskIgnoreListInfo.h"
#import "OAIComDayCqCompatCodeupgradeImplVersionRangeTaskIgnorelistInfo.h"
#import "OAIComDayCqContentsyncImplContentSyncManagerImplInfo.h"
#import "OAIComDayCqDamCommonsHandlerStandardImageHandlerInfo.h"
#import "OAIComDayCqDamCommonsMetadataXmpFilterBlackWhiteInfo.h"
#import "OAIComDayCqDamCommonsUtilImplAssetCacheImplInfo.h"
#import "OAIComDayCqDamCoreImplAnnotationPdfAnnotationPdfConfigInfo.h"
#import "OAIComDayCqDamCoreImplAssetMoveListenerInfo.h"
#import "OAIComDayCqDamCoreImplAssethomeAssetHomePageConfigurationInfo.h"
#import "OAIComDayCqDamCoreImplAssetlinkshareAdhocAssetShareProxyServletInfo.h"
#import "OAIComDayCqDamCoreImplCacheCQBufferedImageCacheInfo.h"
#import "OAIComDayCqDamCoreImplDamChangeEventListenerInfo.h"
#import "OAIComDayCqDamCoreImplDamEventPurgeServiceInfo.h"
#import "OAIComDayCqDamCoreImplDamEventRecorderImplInfo.h"
#import "OAIComDayCqDamCoreImplEventDamEventAuditListenerInfo.h"
#import "OAIComDayCqDamCoreImplExpiryNotificationJobImplInfo.h"
#import "OAIComDayCqDamCoreImplFoldermetadataschemaFolderMetadataSchemaFeatInfo.h"
#import "OAIComDayCqDamCoreImplGfxCommonsGfxRendererInfo.h"
#import "OAIComDayCqDamCoreImplHandlerEPSFormatHandlerInfo.h"
#import "OAIComDayCqDamCoreImplHandlerIndesignFormatHandlerInfo.h"
#import "OAIComDayCqDamCoreImplHandlerJpegHandlerInfo.h"
#import "OAIComDayCqDamCoreImplHandlerXmpNCommXMPHandlerInfo.h"
#import "OAIComDayCqDamCoreImplJmxAssetIndexUpdateMonitorInfo.h"
#import "OAIComDayCqDamCoreImplJmxAssetMigrationMBeanImplInfo.h"
#import "OAIComDayCqDamCoreImplJmxAssetUpdateMonitorImplInfo.h"
#import "OAIComDayCqDamCoreImplJobsMetadataexportAsyncMetadataExportConfigInfo.h"
#import "OAIComDayCqDamCoreImplJobsMetadataimportAsyncMetadataImportConfigInfo.h"
#import "OAIComDayCqDamCoreImplLightboxLightboxServletInfo.h"
#import "OAIComDayCqDamCoreImplMetadataEditorSelectComponentHandlerInfo.h"
#import "OAIComDayCqDamCoreImplMimeTypeAssetUploadRestrictionHelperInfo.h"
#import "OAIComDayCqDamCoreImplMimeTypeDamMimeTypeServiceImplInfo.h"
#import "OAIComDayCqDamCoreImplMissingMetadataNotificationJobInfo.h"
#import "OAIComDayCqDamCoreImplProcessSendTransientWorkflowCompletedEmailPrInfo.h"
#import "OAIComDayCqDamCoreImplProcessTextExtractionProcessInfo.h"
#import "OAIComDayCqDamCoreImplRenditionMakerImplInfo.h"
#import "OAIComDayCqDamCoreImplReportsReportExportServiceInfo.h"
#import "OAIComDayCqDamCoreImplReportsReportPurgeServiceInfo.h"
#import "OAIComDayCqDamCoreImplServletAssetDownloadServletInfo.h"
#import "OAIComDayCqDamCoreImplServletAssetStatusServletInfo.h"
#import "OAIComDayCqDamCoreImplServletAssetXMPSearchServletInfo.h"
#import "OAIComDayCqDamCoreImplServletBatchMetadataServletInfo.h"
#import "OAIComDayCqDamCoreImplServletBinaryProviderServletInfo.h"
#import "OAIComDayCqDamCoreImplServletCollectionServletInfo.h"
#import "OAIComDayCqDamCoreImplServletCollectionsServletInfo.h"
#import "OAIComDayCqDamCoreImplServletCompanionServletInfo.h"
#import "OAIComDayCqDamCoreImplServletCreateAssetServletInfo.h"
#import "OAIComDayCqDamCoreImplServletDamContentDispositionFilterInfo.h"
#import "OAIComDayCqDamCoreImplServletGuidLookupFilterInfo.h"
#import "OAIComDayCqDamCoreImplServletHealthCheckServletInfo.h"
#import "OAIComDayCqDamCoreImplServletMetadataGetServletInfo.h"
#import "OAIComDayCqDamCoreImplServletMultipleLicenseAcceptServletInfo.h"
#import "OAIComDayCqDamCoreImplServletResourceCollectionServletInfo.h"
#import "OAIComDayCqDamCoreImplUiPreviewFolderPreviewUpdaterImplInfo.h"
#import "OAIComDayCqDamCoreImplUnzipUnzipConfigInfo.h"
#import "OAIComDayCqDamCoreProcessExifToolExtractMetadataProcessInfo.h"
#import "OAIComDayCqDamCoreProcessExtractMetadataProcessInfo.h"
#import "OAIComDayCqDamCoreProcessMetadataProcessorProcessInfo.h"
#import "OAIComDayCqDamHandlerFfmpegLocatorImplInfo.h"
#import "OAIComDayCqDamHandlerGibsonFontmanagerImplFontManagerServiceImplInfo.h"
#import "OAIComDayCqDamHandlerStandardPdfPdfHandlerInfo.h"
#import "OAIComDayCqDamHandlerStandardPsPostScriptHandlerInfo.h"
#import "OAIComDayCqDamHandlerStandardPsdPsdHandlerInfo.h"
#import "OAIComDayCqDamIdsImplIDSJobProcessorInfo.h"
#import "OAIComDayCqDamIdsImplIDSPoolManagerImplInfo.h"
#import "OAIComDayCqDamInddImplHandlerIndesignXMPHandlerInfo.h"
#import "OAIComDayCqDamInddImplServletSnippetCreationServletInfo.h"
#import "OAIComDayCqDamInddProcessINDDMediaExtractProcessInfo.h"
#import "OAIComDayCqDamPerformanceInternalAssetPerformanceDataHandlerImplInfo.h"
#import "OAIComDayCqDamPerformanceInternalAssetPerformanceReportSyncJobInfo.h"
#import "OAIComDayCqDamPimImplSourcingUploadProcessProductAssetsUploadProInfo.h"
#import "OAIComDayCqDamS7damCommonAnalyticsImplS7damDynamicMediaConfigEvenInfo.h"
#import "OAIComDayCqDamS7damCommonAnalyticsImplSiteCatalystReportRunnerInfo.h"
#import "OAIComDayCqDamS7damCommonPostServletsSetCreateHandlerInfo.h"
#import "OAIComDayCqDamS7damCommonPostServletsSetModifyHandlerInfo.h"
#import "OAIComDayCqDamS7damCommonProcessVideoThumbnailDownloadProcessInfo.h"
#import "OAIComDayCqDamS7damCommonS7damDamChangeEventListenerInfo.h"
#import "OAIComDayCqDamS7damCommonServletsS7damProductInfoServletInfo.h"
#import "OAIComDayCqDamS7damCommonVideoImplVideoProxyClientServiceImplInfo.h"
#import "OAIComDayCqDamScene7ImplScene7APIClientImplInfo.h"
#import "OAIComDayCqDamScene7ImplScene7AssetMimeTypeServiceImplInfo.h"
#import "OAIComDayCqDamScene7ImplScene7ConfigurationEventListenerInfo.h"
#import "OAIComDayCqDamScene7ImplScene7DamChangeEventListenerInfo.h"
#import "OAIComDayCqDamScene7ImplScene7FlashTemplatesServiceImplInfo.h"
#import "OAIComDayCqDamScene7ImplScene7UploadServiceImplInfo.h"
#import "OAIComDayCqDamStockIntegrationImplCacheStockCacheConfigurationSerInfo.h"
#import "OAIComDayCqDamStockIntegrationImplConfigurationStockConfigurationInfo.h"
#import "OAIComDayCqDamVideoImplServletVideoTestServletInfo.h"
#import "OAIComDayCqExtwidgetServletsImageSpriteServletInfo.h"
#import "OAIComDayCqImageInternalFontFontHelperInfo.h"
#import "OAIComDayCqJcrclustersupportClusterStartLevelControllerInfo.h"
#import "OAIComDayCqMailerDefaultMailServiceInfo.h"
#import "OAIComDayCqMailerImplCqMailingServiceInfo.h"
#import "OAIComDayCqMailerImplEmailCqEmailTemplateFactoryInfo.h"
#import "OAIComDayCqMailerImplEmailCqRetrieverTemplateFactoryInfo.h"
#import "OAIComDayCqMcmCampaignImplIntegrationConfigImplInfo.h"
#import "OAIComDayCqMcmCampaignImporterPersonalizedTextHandlerFactoryInfo.h"
#import "OAIComDayCqMcmCoreNewsletterNewsletterEmailServiceImplInfo.h"
#import "OAIComDayCqMcmImplMCMConfigurationInfo.h"
#import "OAIComDayCqMcmLandingpageParserTaghandlersCtaClickThroughComponenInfo.h"
#import "OAIComDayCqMcmLandingpageParserTaghandlersCtaGraphicalClickThrougInfo.h"
#import "OAIComDayCqMcmLandingpageParserTaghandlersCtaLeadFormCTAComponentInfo.h"
#import "OAIComDayCqMcmLandingpageParserTaghandlersMboxMBoxExperienceTagHaInfo.h"
#import "OAIComDayCqMcmLandingpageParserTaghandlersMboxTargetComponentTagHInfo.h"
#import "OAIComDayCqNotificationImplNotificationServiceImplInfo.h"
#import "OAIComDayCqPersonalizationImplServletsTargetingConfigurationServletInfo.h"
#import "OAIComDayCqPollingImporterImplManagedPollConfigImplInfo.h"
#import "OAIComDayCqPollingImporterImplManagedPollingImporterImplInfo.h"
#import "OAIComDayCqPollingImporterImplPollingImporterImplInfo.h"
#import "OAIComDayCqReplicationAuditReplicationEventListenerInfo.h"
#import "OAIComDayCqReplicationContentStaticContentBuilderInfo.h"
#import "OAIComDayCqReplicationImplAgentManagerImplInfo.h"
#import "OAIComDayCqReplicationImplContentDurboBinaryLessContentBuilderInfo.h"
#import "OAIComDayCqReplicationImplContentDurboDurboImportConfigurationProvInfo.h"
#import "OAIComDayCqReplicationImplReplicationContentFactoryProviderImplInfo.h"
#import "OAIComDayCqReplicationImplReplicationReceiverImplInfo.h"
#import "OAIComDayCqReplicationImplReplicatorImplInfo.h"
#import "OAIComDayCqReplicationImplReverseReplicatorInfo.h"
#import "OAIComDayCqReplicationImplTransportBinaryLessTransportHandlerInfo.h"
#import "OAIComDayCqReplicationImplTransportHttpInfo.h"
#import "OAIComDayCqReportingImplCacheCacheImplInfo.h"
#import "OAIComDayCqReportingImplConfigServiceImplInfo.h"
#import "OAIComDayCqReportingImplRLogAnalyzerInfo.h"
#import "OAIComDayCqRewriterLinkcheckerImplLinkCheckerImplInfo.h"
#import "OAIComDayCqRewriterLinkcheckerImplLinkCheckerTaskInfo.h"
#import "OAIComDayCqRewriterLinkcheckerImplLinkCheckerTransformerFactoryInfo.h"
#import "OAIComDayCqRewriterLinkcheckerImplLinkInfoStorageImplInfo.h"
#import "OAIComDayCqRewriterProcessorImplHtmlParserFactoryInfo.h"
#import "OAIComDayCqSearchImplBuilderQueryBuilderImplInfo.h"
#import "OAIComDayCqSearchSuggestImplSuggestionIndexManagerImplInfo.h"
#import "OAIComDayCqSearchpromoteImplPublishSearchPromoteConfigHandlerInfo.h"
#import "OAIComDayCqSearchpromoteImplSearchPromoteServiceImplInfo.h"
#import "OAIComDayCqSecurityACLSetupInfo.h"
#import "OAIComDayCqStatisticsImplStatisticsServiceImplInfo.h"
#import "OAIComDayCqTaggingImplJcrTagManagerFactoryImplInfo.h"
#import "OAIComDayCqTaggingImplSearchTagPredicateEvaluatorInfo.h"
#import "OAIComDayCqTaggingImplTagGarbageCollectorInfo.h"
#import "OAIComDayCqWcmContentsyncImplHandlerPagesUpdateHandlerInfo.h"
#import "OAIComDayCqWcmContentsyncImplRewriterPathRewriterTransformerFactorInfo.h"
#import "OAIComDayCqWcmCoreImplAuthoringUIModeServiceImplInfo.h"
#import "OAIComDayCqWcmCoreImplCommandsWCMCommandServletInfo.h"
#import "OAIComDayCqWcmCoreImplDevicedetectionDeviceIdentificationModeImplInfo.h"
#import "OAIComDayCqWcmCoreImplEventPageEventAuditListenerInfo.h"
#import "OAIComDayCqWcmCoreImplEventPagePostProcessorInfo.h"
#import "OAIComDayCqWcmCoreImplEventRepositoryChangeEventListenerInfo.h"
#import "OAIComDayCqWcmCoreImplEventTemplatePostProcessorInfo.h"
#import "OAIComDayCqWcmCoreImplLanguageManagerImplInfo.h"
#import "OAIComDayCqWcmCoreImplLinkCheckerConfigurationFactoryImplInfo.h"
#import "OAIComDayCqWcmCoreImplPagePageInfoAggregatorImplInfo.h"
#import "OAIComDayCqWcmCoreImplPagePageManagerFactoryImplInfo.h"
#import "OAIComDayCqWcmCoreImplReferencesContentContentReferenceConfigInfo.h"
#import "OAIComDayCqWcmCoreImplServletsContentfinderAssetViewHandlerInfo.h"
#import "OAIComDayCqWcmCoreImplServletsContentfinderConnectorConnectorVieInfo.h"
#import "OAIComDayCqWcmCoreImplServletsContentfinderPageViewHandlerInfo.h"
#import "OAIComDayCqWcmCoreImplServletsFindReplaceServletInfo.h"
#import "OAIComDayCqWcmCoreImplServletsReferenceSearchServletInfo.h"
#import "OAIComDayCqWcmCoreImplServletsThumbnailServletInfo.h"
#import "OAIComDayCqWcmCoreImplUtilsDefaultPageNameValidatorInfo.h"
#import "OAIComDayCqWcmCoreImplVariantsPageVariantsProviderImplInfo.h"
#import "OAIComDayCqWcmCoreImplVersionManagerImplInfo.h"
#import "OAIComDayCqWcmCoreImplVersionPurgeTaskInfo.h"
#import "OAIComDayCqWcmCoreImplWCMDebugFilterInfo.h"
#import "OAIComDayCqWcmCoreImplWCMDeveloperModeFilterInfo.h"
#import "OAIComDayCqWcmCoreImplWarpTimeWarpFilterInfo.h"
#import "OAIComDayCqWcmCoreMvtMVTStatisticsImplInfo.h"
#import "OAIComDayCqWcmCoreStatsPageViewStatisticsImplInfo.h"
#import "OAIComDayCqWcmCoreWCMRequestFilterInfo.h"
#import "OAIComDayCqWcmDesignimporterDesignPackageImporterInfo.h"
#import "OAIComDayCqWcmDesignimporterImplCanvasBuilderImplInfo.h"
#import "OAIComDayCqWcmDesignimporterImplCanvasPageDeleteHandlerInfo.h"
#import "OAIComDayCqWcmDesignimporterImplEntryPreprocessorImplInfo.h"
#import "OAIComDayCqWcmDesignimporterImplMobileCanvasBuilderImplInfo.h"
#import "OAIComDayCqWcmDesignimporterParserTaghandlersFactoryCanvasComponeInfo.h"
#import "OAIComDayCqWcmDesignimporterParserTaghandlersFactoryDefaultComponInfo.h"
#import "OAIComDayCqWcmDesignimporterParserTaghandlersFactoryDefaultTagHanInfo.h"
#import "OAIComDayCqWcmDesignimporterParserTaghandlersFactoryHeadTagHandleInfo.h"
#import "OAIComDayCqWcmDesignimporterParserTaghandlersFactoryIFrameTagHandInfo.h"
#import "OAIComDayCqWcmDesignimporterParserTaghandlersFactoryImageComponenInfo.h"
#import "OAIComDayCqWcmDesignimporterParserTaghandlersFactoryImgTagHandlerInfo.h"
#import "OAIComDayCqWcmDesignimporterParserTaghandlersFactoryInlineScriptTInfo.h"
#import "OAIComDayCqWcmDesignimporterParserTaghandlersFactoryLinkTagHandleInfo.h"
#import "OAIComDayCqWcmDesignimporterParserTaghandlersFactoryMetaTagHandleInfo.h"
#import "OAIComDayCqWcmDesignimporterParserTaghandlersFactoryNonScriptTagHInfo.h"
#import "OAIComDayCqWcmDesignimporterParserTaghandlersFactoryParsysComponeInfo.h"
#import "OAIComDayCqWcmDesignimporterParserTaghandlersFactoryScriptTagHandInfo.h"
#import "OAIComDayCqWcmDesignimporterParserTaghandlersFactoryStyleTagHandlInfo.h"
#import "OAIComDayCqWcmDesignimporterParserTaghandlersFactoryTextComponentInfo.h"
#import "OAIComDayCqWcmDesignimporterParserTaghandlersFactoryTitleComponenInfo.h"
#import "OAIComDayCqWcmDesignimporterParserTaghandlersFactoryTitleTagHandlInfo.h"
#import "OAIComDayCqWcmFoundationFormsImplFormChooserServletInfo.h"
#import "OAIComDayCqWcmFoundationFormsImplFormParagraphPostProcessorInfo.h"
#import "OAIComDayCqWcmFoundationFormsImplFormsHandlingServletInfo.h"
#import "OAIComDayCqWcmFoundationFormsImplMailServletInfo.h"
#import "OAIComDayCqWcmFoundationImplAdaptiveImageComponentServletInfo.h"
#import "OAIComDayCqWcmFoundationImplHTTPAuthHandlerInfo.h"
#import "OAIComDayCqWcmFoundationImplPageImpressionsTrackerInfo.h"
#import "OAIComDayCqWcmFoundationImplPageRedirectServletInfo.h"
#import "OAIComDayCqWcmFoundationSecurityImplDefaultAttachmentTypeBlacklistInfo.h"
#import "OAIComDayCqWcmFoundationSecurityImplSaferSlingPostValidatorImplInfo.h"
#import "OAIComDayCqWcmMobileCoreImplDeviceDeviceInfoTransformerFactoryInfo.h"
#import "OAIComDayCqWcmMobileCoreImplRedirectRedirectFilterInfo.h"
#import "OAIComDayCqWcmMsmImplActionsContentCopyActionFactoryInfo.h"
#import "OAIComDayCqWcmMsmImplActionsContentDeleteActionFactoryInfo.h"
#import "OAIComDayCqWcmMsmImplActionsContentUpdateActionFactoryInfo.h"
#import "OAIComDayCqWcmMsmImplActionsOrderChildrenActionFactoryInfo.h"
#import "OAIComDayCqWcmMsmImplActionsPageMoveActionFactoryInfo.h"
#import "OAIComDayCqWcmMsmImplActionsReferencesUpdateActionFactoryInfo.h"
#import "OAIComDayCqWcmMsmImplActionsVersionCopyActionFactoryInfo.h"
#import "OAIComDayCqWcmMsmImplLiveRelationshipManagerImplInfo.h"
#import "OAIComDayCqWcmMsmImplRolloutManagerImplInfo.h"
#import "OAIComDayCqWcmMsmImplServletsAuditLogServletInfo.h"
#import "OAIComDayCqWcmNotificationEmailImplEmailChannelInfo.h"
#import "OAIComDayCqWcmNotificationImplNotificationManagerImplInfo.h"
#import "OAIComDayCqWcmScriptingImplBVPManagerInfo.h"
#import "OAIComDayCqWcmUndoUndoConfigInfo.h"
#import "OAIComDayCqWcmWebservicesupportImplReplicationEventListenerInfo.h"
#import "OAIComDayCqWcmWorkflowImplWcmWorkflowServiceImplInfo.h"
#import "OAIComDayCqWcmWorkflowImplWorkflowPackageInfoProviderInfo.h"
#import "OAIComDayCqWidgetImplHtmlLibraryManagerImplInfo.h"
#import "OAIComDayCqWidgetImplWidgetExtensionProviderImplInfo.h"
#import "OAIComDayCqWorkflowImplEmailEMailNotificationServiceInfo.h"
#import "OAIComDayCqWorkflowImplEmailTaskEMailNotificationServiceInfo.h"
#import "OAIComDayCrxSecurityTokenImplImplTokenAuthenticationHandlerInfo.h"
#import "OAIComDayCrxSecurityTokenImplTokenCleanupTaskInfo.h"
#import "OAIGuideLocalizationServiceInfo.h"
#import "OAIMessagingUserComponentFactoryInfo.h"
#import "OAIOrgApacheAriesJmxFrameworkStateConfigInfo.h"
#import "OAIOrgApacheFelixEventadminImplEventAdminInfo.h"
#import "OAIOrgApacheFelixHttpInfo.h"
#import "OAIOrgApacheFelixHttpSslfilterSslFilterInfo.h"
#import "OAIOrgApacheFelixJaasConfigurationFactoryInfo.h"
#import "OAIOrgApacheFelixJaasConfigurationSpiInfo.h"
#import "OAIOrgApacheFelixScrScrServiceInfo.h"
#import "OAIOrgApacheFelixSystemreadyImplComponentsCheckInfo.h"
#import "OAIOrgApacheFelixSystemreadyImplFrameworkStartCheckInfo.h"
#import "OAIOrgApacheFelixSystemreadyImplServicesCheckInfo.h"
#import "OAIOrgApacheFelixSystemreadyImplServletSystemAliveServletInfo.h"
#import "OAIOrgApacheFelixSystemreadyImplServletSystemReadyServletInfo.h"
#import "OAIOrgApacheFelixSystemreadySystemReadyMonitorInfo.h"
#import "OAIOrgApacheFelixWebconsoleInternalServletOsgiManagerInfo.h"
#import "OAIOrgApacheFelixWebconsolePluginsEventInternalPluginServletInfo.h"
#import "OAIOrgApacheFelixWebconsolePluginsMemoryusageInternalMemoryUsageCoInfo.h"
#import "OAIOrgApacheHttpProxyconfiguratorInfo.h"
#import "OAIOrgApacheJackrabbitOakPluginsBlobDatastoreDataStoreTextProviderInfo.h"
#import "OAIOrgApacheJackrabbitOakPluginsBlobDatastoreFileDataStoreInfo.h"
#import "OAIOrgApacheJackrabbitOakPluginsDocumentDocumentNodeStoreServiceInfo.h"
#import "OAIOrgApacheJackrabbitOakPluginsDocumentDocumentNodeStoreServicePreInfo.h"
#import "OAIOrgApacheJackrabbitOakPluginsDocumentSecondarySecondaryStoreCacInfo.h"
#import "OAIOrgApacheJackrabbitOakPluginsIndexAsyncIndexerServiceInfo.h"
#import "OAIOrgApacheJackrabbitOakPluginsIndexLuceneLuceneIndexProviderServInfo.h"
#import "OAIOrgApacheJackrabbitOakPluginsIndexSolrOsgiEmbeddedSolrServerCoInfo.h"
#import "OAIOrgApacheJackrabbitOakPluginsIndexSolrOsgiNodeStateSolrServersInfo.h"
#import "OAIOrgApacheJackrabbitOakPluginsIndexSolrOsgiOakSolrConfigurationInfo.h"
#import "OAIOrgApacheJackrabbitOakPluginsIndexSolrOsgiRemoteSolrServerConfInfo.h"
#import "OAIOrgApacheJackrabbitOakPluginsIndexSolrOsgiSolrQueryIndexProvidInfo.h"
#import "OAIOrgApacheJackrabbitOakPluginsIndexSolrOsgiSolrServerProviderSeInfo.h"
#import "OAIOrgApacheJackrabbitOakPluginsMetricStatisticsProviderFactoryInfo.h"
#import "OAIOrgApacheJackrabbitOakPluginsObservationChangeCollectorProviderInfo.h"
#import "OAIOrgApacheJackrabbitOakQueryQueryEngineSettingsServiceInfo.h"
#import "OAIOrgApacheJackrabbitOakSecurityAuthenticationAuthenticationConfigInfo.h"
#import "OAIOrgApacheJackrabbitOakSecurityAuthenticationLdapImplLdapIdentiInfo.h"
#import "OAIOrgApacheJackrabbitOakSecurityAuthenticationTokenTokenConfiguraInfo.h"
#import "OAIOrgApacheJackrabbitOakSecurityAuthorizationAuthorizationConfigurInfo.h"
#import "OAIOrgApacheJackrabbitOakSecurityInternalSecurityProviderRegistratiInfo.h"
#import "OAIOrgApacheJackrabbitOakSecurityUserRandomAuthorizableNodeNameInfo.h"
#import "OAIOrgApacheJackrabbitOakSecurityUserUserConfigurationImplInfo.h"
#import "OAIOrgApacheJackrabbitOakSegmentAzureAzureSegmentStoreServiceInfo.h"
#import "OAIOrgApacheJackrabbitOakSegmentSegmentNodeStoreFactoryInfo.h"
#import "OAIOrgApacheJackrabbitOakSegmentSegmentNodeStoreMonitorServiceInfo.h"
#import "OAIOrgApacheJackrabbitOakSegmentSegmentNodeStoreServiceInfo.h"
#import "OAIOrgApacheJackrabbitOakSegmentStandbyStoreStandbyStoreServiceInfo.h"
#import "OAIOrgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplDeInfo.h"
#import "OAIOrgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplExInfo.h"
#import "OAIOrgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplPrInfo.h"
#import "OAIOrgApacheJackrabbitOakSpiSecurityAuthorizationCugImplCugConfiInfo.h"
#import "OAIOrgApacheJackrabbitOakSpiSecurityAuthorizationCugImplCugExcluInfo.h"
#import "OAIOrgApacheJackrabbitOakSpiSecurityUserActionDefaultAuthorizableInfo.h"
#import "OAIOrgApacheJackrabbitVaultPackagingImplPackagingImplInfo.h"
#import "OAIOrgApacheJackrabbitVaultPackagingRegistryImplFSPackageRegistryInfo.h"
#import "OAIOrgApacheSlingAuthCoreImplLogoutServletInfo.h"
#import "OAIOrgApacheSlingCaconfigImplConfigurationBindingsValueProviderInfo.h"
#import "OAIOrgApacheSlingCaconfigImplConfigurationResolverImplInfo.h"
#import "OAIOrgApacheSlingCaconfigImplDefDefaultConfigurationInheritanceStraInfo.h"
#import "OAIOrgApacheSlingCaconfigImplDefDefaultConfigurationPersistenceStraInfo.h"
#import "OAIOrgApacheSlingCaconfigImplOverrideOsgiConfigurationOverrideProviInfo.h"
#import "OAIOrgApacheSlingCaconfigImplOverrideSystemPropertyConfigurationOveInfo.h"
#import "OAIOrgApacheSlingCaconfigManagementImplConfigurationManagementSettiInfo.h"
#import "OAIOrgApacheSlingCaconfigResourceImplDefDefaultConfigurationResourInfo.h"
#import "OAIOrgApacheSlingCaconfigResourceImplDefDefaultContextPathStrategyInfo.h"
#import "OAIOrgApacheSlingCommonsHtmlInternalTagsoupHtmlParserInfo.h"
#import "OAIOrgApacheSlingCommonsLogLogManagerFactoryConfigInfo.h"
#import "OAIOrgApacheSlingCommonsLogLogManagerFactoryWriterInfo.h"
#import "OAIOrgApacheSlingCommonsLogLogManagerInfo.h"
#import "OAIOrgApacheSlingCommonsMetricsInternalLogReporterInfo.h"
#import "OAIOrgApacheSlingCommonsMetricsRrd4jImplCodahaleMetricsReporterInfo.h"
#import "OAIOrgApacheSlingCommonsMimeInternalMimeTypeServiceImplInfo.h"
#import "OAIOrgApacheSlingCommonsSchedulerImplQuartzSchedulerInfo.h"
#import "OAIOrgApacheSlingCommonsSchedulerImplSchedulerHealthCheckInfo.h"
#import "OAIOrgApacheSlingCommonsThreadsImplDefaultThreadPoolFactoryInfo.h"
#import "OAIOrgApacheSlingDatasourceDataSourceFactoryInfo.h"
#import "OAIOrgApacheSlingDatasourceJNDIDataSourceFactoryInfo.h"
#import "OAIOrgApacheSlingDiscoveryOakConfigInfo.h"
#import "OAIOrgApacheSlingDiscoveryOakSynchronizedClocksHealthCheckInfo.h"
#import "OAIOrgApacheSlingDistributionAgentImplForwardDistributionAgentFactoInfo.h"
#import "OAIOrgApacheSlingDistributionAgentImplPrivilegeDistributionRequestAInfo.h"
#import "OAIOrgApacheSlingDistributionAgentImplQueueDistributionAgentFactoryInfo.h"
#import "OAIOrgApacheSlingDistributionAgentImplReverseDistributionAgentFactoInfo.h"
#import "OAIOrgApacheSlingDistributionAgentImplSimpleDistributionAgentFactorInfo.h"
#import "OAIOrgApacheSlingDistributionAgentImplSyncDistributionAgentFactoryInfo.h"
#import "OAIOrgApacheSlingDistributionMonitorDistributionQueueHealthCheckInfo.h"
#import "OAIOrgApacheSlingDistributionPackagingImplExporterAgentDistributioInfo.h"
#import "OAIOrgApacheSlingDistributionPackagingImplExporterLocalDistributioInfo.h"
#import "OAIOrgApacheSlingDistributionPackagingImplExporterRemoteDistributiInfo.h"
#import "OAIOrgApacheSlingDistributionPackagingImplImporterLocalDistributioInfo.h"
#import "OAIOrgApacheSlingDistributionPackagingImplImporterRemoteDistributiInfo.h"
#import "OAIOrgApacheSlingDistributionPackagingImplImporterRepositoryDistriInfo.h"
#import "OAIOrgApacheSlingDistributionResourcesImplDistributionConfigurationInfo.h"
#import "OAIOrgApacheSlingDistributionResourcesImplDistributionServiceResourInfo.h"
#import "OAIOrgApacheSlingDistributionSerializationImplDistributionPackageBuInfo.h"
#import "OAIOrgApacheSlingDistributionSerializationImplVltVaultDistributionInfo.h"
#import "OAIOrgApacheSlingDistributionTransportImplUserCredentialsDistributiInfo.h"
#import "OAIOrgApacheSlingDistributionTriggerImplDistributionEventDistributeInfo.h"
#import "OAIOrgApacheSlingDistributionTriggerImplJcrEventDistributionTriggerInfo.h"
#import "OAIOrgApacheSlingDistributionTriggerImplPersistedJcrEventDistributiInfo.h"
#import "OAIOrgApacheSlingDistributionTriggerImplRemoteEventDistributionTrigInfo.h"
#import "OAIOrgApacheSlingDistributionTriggerImplResourceEventDistributionTrInfo.h"
#import "OAIOrgApacheSlingDistributionTriggerImplScheduledDistributionTriggeInfo.h"
#import "OAIOrgApacheSlingEngineImplAuthSlingAuthenticatorInfo.h"
#import "OAIOrgApacheSlingEngineImplDebugRequestProgressTrackerLogFilterInfo.h"
#import "OAIOrgApacheSlingEngineImplLogRequestLoggerInfo.h"
#import "OAIOrgApacheSlingEngineImplLogRequestLoggerServiceInfo.h"
#import "OAIOrgApacheSlingEngineImplSlingMainServletInfo.h"
#import "OAIOrgApacheSlingEngineParametersInfo.h"
#import "OAIOrgApacheSlingEventImplEventingThreadPoolInfo.h"
#import "OAIOrgApacheSlingEventImplJobsDefaultJobManagerInfo.h"
#import "OAIOrgApacheSlingEventImplJobsJcrPersistenceHandlerInfo.h"
#import "OAIOrgApacheSlingEventImplJobsJobConsumerManagerInfo.h"
#import "OAIOrgApacheSlingEventJobsQueueConfigurationInfo.h"
#import "OAIOrgApacheSlingExtensionsWebconsolesecurityproviderInternalSlingWInfo.h"
#import "OAIOrgApacheSlingFeatureflagsFeatureInfo.h"
#import "OAIOrgApacheSlingFeatureflagsImplConfiguredFeatureInfo.h"
#import "OAIOrgApacheSlingHapiImplHApiUtilImplInfo.h"
#import "OAIOrgApacheSlingHcCoreImplCompositeHealthCheckInfo.h"
#import "OAIOrgApacheSlingHcCoreImplExecutorHealthCheckExecutorImplInfo.h"
#import "OAIOrgApacheSlingHcCoreImplJmxAttributeHealthCheckInfo.h"
#import "OAIOrgApacheSlingHcCoreImplScriptableHealthCheckInfo.h"
#import "OAIOrgApacheSlingHcCoreImplServletHealthCheckExecutorServletInfo.h"
#import "OAIOrgApacheSlingHcCoreImplServletResultTxtVerboseSerializerInfo.h"
#import "OAIOrgApacheSlingI18nImplI18NFilterInfo.h"
#import "OAIOrgApacheSlingI18nImplJcrResourceBundleProviderInfo.h"
#import "OAIOrgApacheSlingInstallerProviderJcrImplJcrInstallerInfo.h"
#import "OAIOrgApacheSlingJcrBaseInternalLoginAdminWhitelistFragmentInfo.h"
#import "OAIOrgApacheSlingJcrBaseInternalLoginAdminWhitelistInfo.h"
#import "OAIOrgApacheSlingJcrDavexImplServletsSlingDavExServletInfo.h"
#import "OAIOrgApacheSlingJcrJackrabbitServerJndiRegistrationSupportInfo.h"
#import "OAIOrgApacheSlingJcrJackrabbitServerRmiRegistrationSupportInfo.h"
#import "OAIOrgApacheSlingJcrRepoinitImplRepositoryInitializerInfo.h"
#import "OAIOrgApacheSlingJcrRepoinitRepositoryInitializerInfo.h"
#import "OAIOrgApacheSlingJcrResourceInternalJcrResourceResolverFactoryImplInfo.h"
#import "OAIOrgApacheSlingJcrResourceInternalJcrSystemUserValidatorInfo.h"
#import "OAIOrgApacheSlingJcrResourcesecurityImplResourceAccessGateFactoryInfo.h"
#import "OAIOrgApacheSlingJcrWebdavImplHandlerDefaultHandlerServiceInfo.h"
#import "OAIOrgApacheSlingJcrWebdavImplHandlerDirListingExportHandlerServicInfo.h"
#import "OAIOrgApacheSlingJcrWebdavImplServletsSimpleWebDavServletInfo.h"
#import "OAIOrgApacheSlingJmxProviderImplJMXResourceProviderInfo.h"
#import "OAIOrgApacheSlingModelsImplModelAdapterFactoryInfo.h"
#import "OAIOrgApacheSlingModelsJacksonexporterImplResourceModuleProviderInfo.h"
#import "OAIOrgApacheSlingResourceInventoryImplResourceInventoryPrinterFactoInfo.h"
#import "OAIOrgApacheSlingResourcemergerImplMergedResourceProviderFactoryInfo.h"
#import "OAIOrgApacheSlingResourcemergerPickerOverridingInfo.h"
#import "OAIOrgApacheSlingScriptingCoreImplScriptCacheImplInfo.h"
#import "OAIOrgApacheSlingScriptingCoreImplScriptingResourceResolverProviderInfo.h"
#import "OAIOrgApacheSlingScriptingJavaImplJavaScriptEngineFactoryInfo.h"
#import "OAIOrgApacheSlingScriptingJavascriptInternalRhinoJavaScriptEngineFaInfo.h"
#import "OAIOrgApacheSlingScriptingJspJspScriptEngineFactoryInfo.h"
#import "OAIOrgApacheSlingScriptingSightlyJsImplJsapiSlyBindingsValuesProvInfo.h"
#import "OAIOrgApacheSlingSecurityImplContentDispositionFilterInfo.h"
#import "OAIOrgApacheSlingSecurityImplReferrerFilterInfo.h"
#import "OAIOrgApacheSlingServiceusermappingImplServiceUserMapperImplAmendedInfo.h"
#import "OAIOrgApacheSlingServiceusermappingImplServiceUserMapperImplInfo.h"
#import "OAIOrgApacheSlingServletsGetDefaultGetServletInfo.h"
#import "OAIOrgApacheSlingServletsGetImplVersionVersionInfoServletInfo.h"
#import "OAIOrgApacheSlingServletsPostImplHelperChunkCleanUpTaskInfo.h"
#import "OAIOrgApacheSlingServletsPostImplSlingPostServletInfo.h"
#import "OAIOrgApacheSlingServletsResolverSlingServletResolverInfo.h"
#import "OAIOrgApacheSlingSettingsImplSlingSettingsServiceImplInfo.h"
#import "OAIOrgApacheSlingStartupfilterImplStartupFilterImplInfo.h"
#import "OAIOrgApacheSlingTenantInternalTenantProviderImplInfo.h"
#import "OAIOrgApacheSlingTracerInternalLogTracerInfo.h"
#import "OAIOrgApacheSlingXssImplXSSFilterImplInfo.h"
#import "OAIApi.h"

/**
* Adobe Experience Manager OSGI config (AEM) API
* Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
*
* OpenAPI spec version: 1.0.0-pre.0
* Contact: opensource@shinesolutions.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/



@interface OAIConfigmgrApi: NSObject <OAIApi>

extern NSString* kOAIConfigmgrApiErrorDomain;
extern NSInteger kOAIConfigmgrApiMissingParamErrorCode;

-(instancetype) initWithApiClient:(OAIApiClient *)apiClient NS_DESIGNATED_INITIALIZER;

/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param showPlaceholder  (optional)
/// @param maximumCacheEntries  (optional)
/// @param afScriptingCompatversion  (optional)
/// @param makeFileNameUnique  (optional)
/// @param generatingCompliantData  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIAdaptiveFormAndInteractiveCommunicationWebChannelConfigurationInfo*
-(NSURLSessionTask*) adaptiveFormAndInteractiveCommunicationWebChannelConfigurationWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    showPlaceholder: (NSNumber*) showPlaceholder
    maximumCacheEntries: (NSNumber*) maximumCacheEntries
    afScriptingCompatversion: (NSString*) afScriptingCompatversion
    makeFileNameUnique: (NSNumber*) makeFileNameUnique
    generatingCompliantData: (NSNumber*) generatingCompliantData
    completionHandler: (void (^)(OAIAdaptiveFormAndInteractiveCommunicationWebChannelConfigurationInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param fontList  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIAdaptiveFormAndInteractiveCommunicationWebChannelThemeConfigurInfo*
-(NSURLSessionTask*) adaptiveFormAndInteractiveCommunicationWebChannelThemeConfigurWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    fontList: (NSArray<NSString*>*) fontList
    completionHandler: (void (^)(OAIAdaptiveFormAndInteractiveCommunicationWebChannelThemeConfigurInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param cqAnalyticsComponentQueryCacheSize  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIAnalyticsComponentQueryCacheServiceInfo*
-(NSURLSessionTask*) analyticsComponentQueryCacheServiceWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    cqAnalyticsComponentQueryCacheSize: (NSNumber*) cqAnalyticsComponentQueryCacheSize
    completionHandler: (void (^)(OAIAnalyticsComponentQueryCacheServiceInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param styleString  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIApacheSlingHealthCheckResultHTMLSerializerInfo*
-(NSURLSessionTask*) apacheSlingHealthCheckResultHTMLSerializerWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    styleString: (NSString*) styleString
    completionHandler: (void (^)(OAIApacheSlingHealthCheckResultHTMLSerializerInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param formsManagerConfigIncludeOOTBTemplates  (optional)
/// @param formsManagerConfigIncludeDeprecatedTemplates  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeAemFormsndocumentsConfigAEMFormsManagerConfigurationInfo*
-(NSURLSessionTask*) comAdobeAemFormsndocumentsConfigAEMFormsManagerConfigurationWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    formsManagerConfigIncludeOOTBTemplates: (NSNumber*) formsManagerConfigIncludeOOTBTemplates
    formsManagerConfigIncludeDeprecatedTemplates: (NSNumber*) formsManagerConfigIncludeDeprecatedTemplates
    completionHandler: (void (^)(OAIComAdobeAemFormsndocumentsConfigAEMFormsManagerConfigurationInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param isTransactionRecordingEnabled  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeAemTransactionCoreImplTransactionRecorderInfo*
-(NSURLSessionTask*) comAdobeAemTransactionCoreImplTransactionRecorderWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    isTransactionRecordingEnabled: (NSNumber*) isTransactionRecordingEnabled
    completionHandler: (void (^)(OAIComAdobeAemTransactionCoreImplTransactionRecorderInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param hcName  (optional)
/// @param hcTags  (optional)
/// @param hcMbeanName  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeAemUpgradePrechecksHcImplDeprecateIndexesHCInfo*
-(NSURLSessionTask*) comAdobeAemUpgradePrechecksHcImplDeprecateIndexesHCWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    hcName: (NSString*) hcName
    hcTags: (NSArray<NSString*>*) hcTags
    hcMbeanName: (NSString*) hcMbeanName
    completionHandler: (void (^)(OAIComAdobeAemUpgradePrechecksHcImplDeprecateIndexesHCInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param hcName  (optional)
/// @param hcTags  (optional)
/// @param hcMbeanName  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeAemUpgradePrechecksHcImplReplicationAgentsDisabledHCInfo*
-(NSURLSessionTask*) comAdobeAemUpgradePrechecksHcImplReplicationAgentsDisabledHCWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    hcName: (NSString*) hcName
    hcTags: (NSArray<NSString*>*) hcTags
    hcMbeanName: (NSString*) hcMbeanName
    completionHandler: (void (^)(OAIComAdobeAemUpgradePrechecksHcImplReplicationAgentsDisabledHCInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param preUpgradeMaintenanceTasks  (optional)
/// @param preUpgradeHcTags  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeAemUpgradePrechecksMbeanImplPreUpgradeTasksMBeanImplInfo*
-(NSURLSessionTask*) comAdobeAemUpgradePrechecksMbeanImplPreUpgradeTasksMBeanImplWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    preUpgradeMaintenanceTasks: (NSArray<NSString*>*) preUpgradeMaintenanceTasks
    preUpgradeHcTags: (NSArray<NSString*>*) preUpgradeHcTags
    completionHandler: (void (^)(OAIComAdobeAemUpgradePrechecksMbeanImplPreUpgradeTasksMBeanImplInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param rootPath  (optional)
/// @param fixInconsistencies  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeAemUpgradePrechecksTasksImplConsistencyCheckTaskImplInfo*
-(NSURLSessionTask*) comAdobeAemUpgradePrechecksTasksImplConsistencyCheckTaskImplWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    rootPath: (NSString*) rootPath
    fixInconsistencies: (NSNumber*) fixInconsistencies
    completionHandler: (void (^)(OAIComAdobeAemUpgradePrechecksTasksImplConsistencyCheckTaskImplInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param cqAccountmanagerTokenValidityPeriod  (optional)
/// @param cqAccountmanagerConfigRequestnewaccountMail  (optional)
/// @param cqAccountmanagerConfigRequestnewpwdMail  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeCqAccountApiAccountManagementServiceInfo*
-(NSURLSessionTask*) comAdobeCqAccountApiAccountManagementServiceWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    cqAccountmanagerTokenValidityPeriod: (NSNumber*) cqAccountmanagerTokenValidityPeriod
    cqAccountmanagerConfigRequestnewaccountMail: (NSString*) cqAccountmanagerConfigRequestnewaccountMail
    cqAccountmanagerConfigRequestnewpwdMail: (NSString*) cqAccountmanagerConfigRequestnewpwdMail
    completionHandler: (void (^)(OAIComAdobeCqAccountApiAccountManagementServiceInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param cqAccountmanagerConfigInformnewaccountMail  (optional)
/// @param cqAccountmanagerConfigInformnewpwdMail  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeCqAccountImplAccountManagementServletInfo*
-(NSURLSessionTask*) comAdobeCqAccountImplAccountManagementServletWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    cqAccountmanagerConfigInformnewaccountMail: (NSString*) cqAccountmanagerConfigInformnewaccountMail
    cqAccountmanagerConfigInformnewpwdMail: (NSString*) cqAccountmanagerConfigInformnewpwdMail
    completionHandler: (void (^)(OAIComAdobeCqAccountImplAccountManagementServletInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param cqAddressLocationDefaultMaxResults  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeCqAddressImplLocationLocationListServletInfo*
-(NSURLSessionTask*) comAdobeCqAddressImplLocationLocationListServletWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    cqAddressLocationDefaultMaxResults: (NSNumber*) cqAddressLocationDefaultMaxResults
    completionHandler: (void (^)(OAIComAdobeCqAddressImplLocationLocationListServletInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param auditlogRuleName  (optional)
/// @param auditlogRuleContentpath  (optional)
/// @param auditlogRuleMinimumage  (optional)
/// @param auditlogRuleTypes  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeCqAuditPurgeDamInfo*
-(NSURLSessionTask*) comAdobeCqAuditPurgeDamWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    auditlogRuleName: (NSString*) auditlogRuleName
    auditlogRuleContentpath: (NSString*) auditlogRuleContentpath
    auditlogRuleMinimumage: (NSNumber*) auditlogRuleMinimumage
    auditlogRuleTypes: (NSString*) auditlogRuleTypes
    completionHandler: (void (^)(OAIComAdobeCqAuditPurgeDamInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param auditlogRuleName  (optional)
/// @param auditlogRuleContentpath  (optional)
/// @param auditlogRuleMinimumage  (optional)
/// @param auditlogRuleTypes  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeCqAuditPurgePagesInfo*
-(NSURLSessionTask*) comAdobeCqAuditPurgePagesWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    auditlogRuleName: (NSString*) auditlogRuleName
    auditlogRuleContentpath: (NSString*) auditlogRuleContentpath
    auditlogRuleMinimumage: (NSNumber*) auditlogRuleMinimumage
    auditlogRuleTypes: (NSString*) auditlogRuleTypes
    completionHandler: (void (^)(OAIComAdobeCqAuditPurgePagesInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param auditlogRuleName  (optional)
/// @param auditlogRuleContentpath  (optional)
/// @param auditlogRuleMinimumage  (optional)
/// @param auditlogRuleTypes  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeCqAuditPurgeReplicationInfo*
-(NSURLSessionTask*) comAdobeCqAuditPurgeReplicationWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    auditlogRuleName: (NSString*) auditlogRuleName
    auditlogRuleContentpath: (NSString*) auditlogRuleContentpath
    auditlogRuleMinimumage: (NSNumber*) auditlogRuleMinimumage
    auditlogRuleTypes: (NSString*) auditlogRuleTypes
    completionHandler: (void (^)(OAIComAdobeCqAuditPurgeReplicationInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param serviceRanking  (optional)
/// @param keypairId  (optional)
/// @param keypairAlias  (optional)
/// @param cdnrewriterAttributes  (optional)
/// @param cdnRewriterDistributionDomain  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeCqCdnRewriterImplAWSCloudFrontRewriterInfo*
-(NSURLSessionTask*) comAdobeCqCdnRewriterImplAWSCloudFrontRewriterWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    serviceRanking: (NSNumber*) serviceRanking
    keypairId: (NSString*) keypairId
    keypairAlias: (NSString*) keypairAlias
    cdnrewriterAttributes: (NSArray<NSString*>*) cdnrewriterAttributes
    cdnRewriterDistributionDomain: (NSString*) cdnRewriterDistributionDomain
    completionHandler: (void (^)(OAIComAdobeCqCdnRewriterImplAWSCloudFrontRewriterInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param cdnConfigDistributionDomain  (optional)
/// @param cdnConfigEnableRewriting  (optional)
/// @param cdnConfigPathPrefixes  (optional)
/// @param cdnConfigCdnttl  (optional)
/// @param cdnConfigApplicationProtocol  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeCqCdnRewriterImplCDNConfigServiceImplInfo*
-(NSURLSessionTask*) comAdobeCqCdnRewriterImplCDNConfigServiceImplWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    cdnConfigDistributionDomain: (NSString*) cdnConfigDistributionDomain
    cdnConfigEnableRewriting: (NSNumber*) cdnConfigEnableRewriting
    cdnConfigPathPrefixes: (NSArray<NSString*>*) cdnConfigPathPrefixes
    cdnConfigCdnttl: (NSNumber*) cdnConfigCdnttl
    cdnConfigApplicationProtocol: (NSString*) cdnConfigApplicationProtocol
    completionHandler: (void (^)(OAIComAdobeCqCdnRewriterImplCDNConfigServiceImplInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param serviceRanking  (optional)
/// @param cdnrewriterAttributes  (optional)
/// @param cdnRewriterDistributionDomain  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeCqCdnRewriterImplCDNRewriterInfo*
-(NSURLSessionTask*) comAdobeCqCdnRewriterImplCDNRewriterWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    serviceRanking: (NSNumber*) serviceRanking
    cdnrewriterAttributes: (NSArray<NSString*>*) cdnrewriterAttributes
    cdnRewriterDistributionDomain: (NSString*) cdnRewriterDistributionDomain
    completionHandler: (void (^)(OAIComAdobeCqCdnRewriterImplCDNRewriterInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param flushAgents  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeCqCloudconfigCoreImplConfigurationReplicationEventHandleInfo*
-(NSURLSessionTask*) comAdobeCqCloudconfigCoreImplConfigurationReplicationEventHandleWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    flushAgents: (NSArray<NSString*>*) flushAgents
    completionHandler: (void (^)(OAIComAdobeCqCloudconfigCoreImplConfigurationReplicationEventHandleInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param cqCommerceAssetHandlerActive  (optional)
/// @param cqCommerceAssetHandlerName  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeCqCommerceImplAssetDynamicImageHandlerInfo*
-(NSURLSessionTask*) comAdobeCqCommerceImplAssetDynamicImageHandlerWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    cqCommerceAssetHandlerActive: (NSNumber*) cqCommerceAssetHandlerActive
    cqCommerceAssetHandlerName: (NSString*) cqCommerceAssetHandlerName
    completionHandler: (void (^)(OAIComAdobeCqCommerceImplAssetDynamicImageHandlerInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param cqCommerceAssetHandlerFallback  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeCqCommerceImplAssetProductAssetHandlerProviderImplInfo*
-(NSURLSessionTask*) comAdobeCqCommerceImplAssetProductAssetHandlerProviderImplWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    cqCommerceAssetHandlerFallback: (NSString*) cqCommerceAssetHandlerFallback
    completionHandler: (void (^)(OAIComAdobeCqCommerceImplAssetProductAssetHandlerProviderImplInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param cqCommerceAssetHandlerActive  (optional)
/// @param cqCommerceAssetHandlerName  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeCqCommerceImplAssetStaticImageHandlerInfo*
-(NSURLSessionTask*) comAdobeCqCommerceImplAssetStaticImageHandlerWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    cqCommerceAssetHandlerActive: (NSNumber*) cqCommerceAssetHandlerActive
    cqCommerceAssetHandlerName: (NSString*) cqCommerceAssetHandlerName
    completionHandler: (void (^)(OAIComAdobeCqCommerceImplAssetStaticImageHandlerInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param cqCommerceAssetHandlerActive  (optional)
/// @param cqCommerceAssetHandlerName  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeCqCommerceImplAssetVideoHandlerInfo*
-(NSURLSessionTask*) comAdobeCqCommerceImplAssetVideoHandlerWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    cqCommerceAssetHandlerActive: (NSNumber*) cqCommerceAssetHandlerActive
    cqCommerceAssetHandlerName: (NSString*) cqCommerceAssetHandlerName
    completionHandler: (void (^)(OAIComAdobeCqCommerceImplAssetVideoHandlerInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param cqCommercePromotionRoot  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeCqCommerceImplPromotionPromotionManagerImplInfo*
-(NSURLSessionTask*) comAdobeCqCommerceImplPromotionPromotionManagerImplWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    cqCommercePromotionRoot: (NSString*) cqCommercePromotionRoot
    completionHandler: (void (^)(OAIComAdobeCqCommerceImplPromotionPromotionManagerImplInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param cqCommerceCataloggeneratorBucketsize  (optional)
/// @param cqCommerceCataloggeneratorBucketname  (optional)
/// @param cqCommerceCataloggeneratorExcludedtemplateproperties  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeCqCommercePimImplCataloggeneratorCatalogGeneratorImplInfo*
-(NSURLSessionTask*) comAdobeCqCommercePimImplCataloggeneratorCatalogGeneratorImplWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    cqCommerceCataloggeneratorBucketsize: (NSNumber*) cqCommerceCataloggeneratorBucketsize
    cqCommerceCataloggeneratorBucketname: (NSString*) cqCommerceCataloggeneratorBucketname
    cqCommerceCataloggeneratorExcludedtemplateproperties: (NSArray<NSString*>*) cqCommerceCataloggeneratorExcludedtemplateproperties
    completionHandler: (void (^)(OAIComAdobeCqCommercePimImplCataloggeneratorCatalogGeneratorImplInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param cqCommercePageeventlistenerEnabled  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeCqCommercePimImplPageEventListenerInfo*
-(NSURLSessionTask*) comAdobeCqCommercePimImplPageEventListenerWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    cqCommercePageeventlistenerEnabled: (NSNumber*) cqCommercePageeventlistenerEnabled
    completionHandler: (void (^)(OAIComAdobeCqCommercePimImplPageEventListenerInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param feedGeneratorAlgorithm  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeCqCommercePimImplProductfeedProductFeedServiceImplInfo*
-(NSURLSessionTask*) comAdobeCqCommercePimImplProductfeedProductFeedServiceImplWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    feedGeneratorAlgorithm: (NSString*) feedGeneratorAlgorithm
    completionHandler: (void (^)(OAIComAdobeCqCommercePimImplProductfeedProductFeedServiceImplInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param reportingservicesUrl  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeCqContentinsightImplReportingServicesSettingsProviderInfo*
-(NSURLSessionTask*) comAdobeCqContentinsightImplReportingServicesSettingsProviderWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    reportingservicesUrl: (NSString*) reportingservicesUrl
    completionHandler: (void (^)(OAIComAdobeCqContentinsightImplReportingServicesSettingsProviderInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param brightedgeUrl  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeCqContentinsightImplServletsBrightEdgeProxyServletInfo*
-(NSURLSessionTask*) comAdobeCqContentinsightImplServletsBrightEdgeProxyServletWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    brightedgeUrl: (NSString*) brightedgeUrl
    completionHandler: (void (^)(OAIComAdobeCqContentinsightImplServletsBrightEdgeProxyServletInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param reportingservicesProxyWhitelist  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeCqContentinsightImplServletsReportingServicesProxyServleInfo*
-(NSURLSessionTask*) comAdobeCqContentinsightImplServletsReportingServicesProxyServleWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    reportingservicesProxyWhitelist: (NSArray<NSString*>*) reportingservicesProxyWhitelist
    completionHandler: (void (^)(OAIComAdobeCqContentinsightImplServletsReportingServicesProxyServleInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param damCfmComponentResourceType  (optional)
/// @param damCfmComponentFileReferenceProp  (optional)
/// @param damCfmComponentElementsProp  (optional)
/// @param damCfmComponentVariationProp  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeCqDamCfmImplComponentComponentConfigImplInfo*
-(NSURLSessionTask*) comAdobeCqDamCfmImplComponentComponentConfigImplWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    damCfmComponentResourceType: (NSString*) damCfmComponentResourceType
    damCfmComponentFileReferenceProp: (NSString*) damCfmComponentFileReferenceProp
    damCfmComponentElementsProp: (NSString*) damCfmComponentElementsProp
    damCfmComponentVariationProp: (NSString*) damCfmComponentVariationProp
    completionHandler: (void (^)(OAIComAdobeCqDamCfmImplComponentComponentConfigImplInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param damCfmResourceTypes  (optional)
/// @param damCfmReferenceProperties  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeCqDamCfmImplConfFeatureConfigImplInfo*
-(NSURLSessionTask*) comAdobeCqDamCfmImplConfFeatureConfigImplWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    damCfmResourceTypes: (NSArray<NSString*>*) damCfmResourceTypes
    damCfmReferenceProperties: (NSArray<NSString*>*) damCfmReferenceProperties
    completionHandler: (void (^)(OAIComAdobeCqDamCfmImplConfFeatureConfigImplInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param pipelineType  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeCqDamCfmImplContentRewriterAssetProcessorInfo*
-(NSURLSessionTask*) comAdobeCqDamCfmImplContentRewriterAssetProcessorWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    pipelineType: (NSString*) pipelineType
    completionHandler: (void (^)(OAIComAdobeCqDamCfmImplContentRewriterAssetProcessorInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param pipelineType  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeCqDamCfmImplContentRewriterParRangeFilterInfo*
-(NSURLSessionTask*) comAdobeCqDamCfmImplContentRewriterParRangeFilterWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    pipelineType: (NSString*) pipelineType
    completionHandler: (void (^)(OAIComAdobeCqDamCfmImplContentRewriterParRangeFilterInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param pipelineType  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeCqDamCfmImplContentRewriterPayloadFilterInfo*
-(NSURLSessionTask*) comAdobeCqDamCfmImplContentRewriterPayloadFilterWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    pipelineType: (NSString*) pipelineType
    completionHandler: (void (^)(OAIComAdobeCqDamCfmImplContentRewriterPayloadFilterInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param maxMemory  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeCqDamDmProcessImagePTiffManagerImplInfo*
-(NSURLSessionTask*) comAdobeCqDamDmProcessImagePTiffManagerImplWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    maxMemory: (NSNumber*) maxMemory
    completionHandler: (void (^)(OAIComAdobeCqDamDmProcessImagePTiffManagerImplInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param dmreplicateonmodifyEnabled  (optional)
/// @param dmreplicateonmodifyForcesyncdeletes  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeCqDamIpsImplReplicationTriggerReplicateOnModifyWorkerInfo*
-(NSURLSessionTask*) comAdobeCqDamIpsImplReplicationTriggerReplicateOnModifyWorkerWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    dmreplicateonmodifyEnabled: (NSNumber*) dmreplicateonmodifyEnabled
    dmreplicateonmodifyForcesyncdeletes: (NSNumber*) dmreplicateonmodifyForcesyncdeletes
    completionHandler: (void (^)(OAIComAdobeCqDamIpsImplReplicationTriggerReplicateOnModifyWorkerInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param comAdobeDamMacSyncClientSoTimeout  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeCqDamMacSyncHelperImplMACSyncClientImplInfo*
-(NSURLSessionTask*) comAdobeCqDamMacSyncHelperImplMACSyncClientImplWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    comAdobeDamMacSyncClientSoTimeout: (NSNumber*) comAdobeDamMacSyncClientSoTimeout
    completionHandler: (void (^)(OAIComAdobeCqDamMacSyncHelperImplMACSyncClientImplInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param comAdobeCqDamMacSyncDamsyncserviceRegisteredPaths  (optional)
/// @param comAdobeCqDamMacSyncDamsyncserviceSyncRenditions  (optional)
/// @param comAdobeCqDamMacSyncDamsyncserviceReplicateThreadWaitMs  (optional)
/// @param comAdobeCqDamMacSyncDamsyncservicePlatform  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeCqDamMacSyncImplDAMSyncServiceImplInfo*
-(NSURLSessionTask*) comAdobeCqDamMacSyncImplDAMSyncServiceImplWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    comAdobeCqDamMacSyncDamsyncserviceRegisteredPaths: (NSArray<NSString*>*) comAdobeCqDamMacSyncDamsyncserviceRegisteredPaths
    comAdobeCqDamMacSyncDamsyncserviceSyncRenditions: (NSNumber*) comAdobeCqDamMacSyncDamsyncserviceSyncRenditions
    comAdobeCqDamMacSyncDamsyncserviceReplicateThreadWaitMs: (NSNumber*) comAdobeCqDamMacSyncDamsyncserviceReplicateThreadWaitMs
    comAdobeCqDamMacSyncDamsyncservicePlatform: (NSString*) comAdobeCqDamMacSyncDamsyncservicePlatform
    completionHandler: (void (^)(OAIComAdobeCqDamMacSyncImplDAMSyncServiceImplInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param nuiEnabled  (optional)
/// @param nuiServiceUrl  (optional)
/// @param nuiApiKey  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeCqDamProcessorNuiImplNuiAssetProcessorInfo*
-(NSURLSessionTask*) comAdobeCqDamProcessorNuiImplNuiAssetProcessorWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    nuiEnabled: (NSNumber*) nuiEnabled
    nuiServiceUrl: (NSString*) nuiServiceUrl
    nuiApiKey: (NSString*) nuiApiKey
    completionHandler: (void (^)(OAIComAdobeCqDamProcessorNuiImplNuiAssetProcessorInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param tcpPort  (optional)
/// @param allowRemoteAccess  (optional)
/// @param maxRenderRgnPixels  (optional)
/// @param maxMessageSize  (optional)
/// @param randomAccessUrlTimeout  (optional)
/// @param workerThreads  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeCqDamS7imagingImplIsImageServerComponentInfo*
-(NSURLSessionTask*) comAdobeCqDamS7imagingImplIsImageServerComponentWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    tcpPort: (NSString*) tcpPort
    allowRemoteAccess: (NSNumber*) allowRemoteAccess
    maxRenderRgnPixels: (NSString*) maxRenderRgnPixels
    maxMessageSize: (NSString*) maxMessageSize
    randomAccessUrlTimeout: (NSNumber*) randomAccessUrlTimeout
    workerThreads: (NSNumber*) workerThreads
    completionHandler: (void (^)(OAIComAdobeCqDamS7imagingImplIsImageServerComponentInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param cacheEnable  (optional)
/// @param cacheRootPaths  (optional)
/// @param cacheMaxSize  (optional)
/// @param cacheMaxEntries  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeCqDamS7imagingImplPsPlatformServerServletInfo*
-(NSURLSessionTask*) comAdobeCqDamS7imagingImplPsPlatformServerServletWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    cacheEnable: (NSNumber*) cacheEnable
    cacheRootPaths: (NSArray<NSString*>*) cacheRootPaths
    cacheMaxSize: (NSNumber*) cacheMaxSize
    cacheMaxEntries: (NSNumber*) cacheMaxEntries
    completionHandler: (void (^)(OAIComAdobeCqDamS7imagingImplPsPlatformServerServletInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param serviceRanking  (optional)
/// @param pathPrefix  (optional)
/// @param createVersion  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeCqDamWebdavImplIoAssetIOHandlerInfo*
-(NSURLSessionTask*) comAdobeCqDamWebdavImplIoAssetIOHandlerWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    serviceRanking: (NSNumber*) serviceRanking
    pathPrefix: (NSString*) pathPrefix
    createVersion: (NSNumber*) createVersion
    completionHandler: (void (^)(OAIComAdobeCqDamWebdavImplIoAssetIOHandlerInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param cqDamWebdavVersionLinkingEnable  (optional)
/// @param cqDamWebdavVersionLinkingSchedulerPeriod  (optional)
/// @param cqDamWebdavVersionLinkingStagingTimeout  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeCqDamWebdavImplIoDamWebdavVersionLinkingJobInfo*
-(NSURLSessionTask*) comAdobeCqDamWebdavImplIoDamWebdavVersionLinkingJobWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    cqDamWebdavVersionLinkingEnable: (NSNumber*) cqDamWebdavVersionLinkingEnable
    cqDamWebdavVersionLinkingSchedulerPeriod: (NSNumber*) cqDamWebdavVersionLinkingSchedulerPeriod
    cqDamWebdavVersionLinkingStagingTimeout: (NSNumber*) cqDamWebdavVersionLinkingStagingTimeout
    completionHandler: (void (^)(OAIComAdobeCqDamWebdavImplIoDamWebdavVersionLinkingJobInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param comDayCqDamCoreImplIoSpecialFilesHandlerFilepatters  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeCqDamWebdavImplIoSpecialFilesHandlerInfo*
-(NSURLSessionTask*) comAdobeCqDamWebdavImplIoSpecialFilesHandlerWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    comDayCqDamCoreImplIoSpecialFilesHandlerFilepatters: (NSArray<NSString*>*) comDayCqDamCoreImplIoSpecialFilesHandlerFilepatters
    completionHandler: (void (^)(OAIComAdobeCqDamWebdavImplIoSpecialFilesHandlerInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param firewallDeserializationWhitelist  (optional)
/// @param firewallDeserializationBlacklist  (optional)
/// @param firewallDeserializationDiagnostics  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeCqDeserfwImplDeserializationFirewallImplInfo*
-(NSURLSessionTask*) comAdobeCqDeserfwImplDeserializationFirewallImplWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    firewallDeserializationWhitelist: (NSArray<NSString*>*) firewallDeserializationWhitelist
    firewallDeserializationBlacklist: (NSArray<NSString*>*) firewallDeserializationBlacklist
    firewallDeserializationDiagnostics: (NSString*) firewallDeserializationDiagnostics
    completionHandler: (void (^)(OAIComAdobeCqDeserfwImplDeserializationFirewallImplInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param connectionTimeout  (optional)
/// @param socketTimeout  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeCqDtmImplServiceDTMWebServiceImplInfo*
-(NSURLSessionTask*) comAdobeCqDtmImplServiceDTMWebServiceImplWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    connectionTimeout: (NSNumber*) connectionTimeout
    socketTimeout: (NSNumber*) socketTimeout
    completionHandler: (void (^)(OAIComAdobeCqDtmImplServiceDTMWebServiceImplInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param dtmStagingIpWhitelist  (optional)
/// @param dtmProductionIpWhitelist  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeCqDtmImplServletsDTMDeployHookServletInfo*
-(NSURLSessionTask*) comAdobeCqDtmImplServletsDTMDeployHookServletWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    dtmStagingIpWhitelist: (NSArray<NSString*>*) dtmStagingIpWhitelist
    dtmProductionIpWhitelist: (NSArray<NSString*>*) dtmProductionIpWhitelist
    completionHandler: (void (^)(OAIComAdobeCqDtmImplServletsDTMDeployHookServletInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param endpointUri  (optional)
/// @param connectionTimeout  (optional)
/// @param socketTimeout  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeCqDtmReactorImplServiceWebServiceImplInfo*
-(NSURLSessionTask*) comAdobeCqDtmReactorImplServiceWebServiceImplWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    endpointUri: (NSString*) endpointUri
    connectionTimeout: (NSNumber*) connectionTimeout
    socketTimeout: (NSNumber*) socketTimeout
    completionHandler: (void (^)(OAIComAdobeCqDtmReactorImplServiceWebServiceImplInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param enabled  (optional)
/// @param disabledForGroups  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeCqExperiencelogImplExperienceLogConfigServletInfo*
-(NSURLSessionTask*) comAdobeCqExperiencelogImplExperienceLogConfigServletWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    enabled: (NSNumber*) enabled
    disabledForGroups: (NSArray<NSString*>*) disabledForGroups
    completionHandler: (void (^)(OAIComAdobeCqExperiencelogImplExperienceLogConfigServletInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param hcName  (optional)
/// @param hcTags  (optional)
/// @param hcMbeanName  (optional)
/// @param packageNames  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeCqHcContentPackagesHealthCheckInfo*
-(NSURLSessionTask*) comAdobeCqHcContentPackagesHealthCheckWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    hcName: (NSString*) hcName
    hcTags: (NSArray<NSString*>*) hcTags
    hcMbeanName: (NSString*) hcMbeanName
    packageNames: (NSArray<NSString*>*) packageNames
    completionHandler: (void (^)(OAIComAdobeCqHcContentPackagesHealthCheckInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param historyRequestFilterExcludedSelectors  (optional)
/// @param historyRequestFilterExcludedExtensions  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeCqHistoryImplHistoryRequestFilterInfo*
-(NSURLSessionTask*) comAdobeCqHistoryImplHistoryRequestFilterWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    historyRequestFilterExcludedSelectors: (NSArray<NSString*>*) historyRequestFilterExcludedSelectors
    historyRequestFilterExcludedExtensions: (NSArray<NSString*>*) historyRequestFilterExcludedExtensions
    completionHandler: (void (^)(OAIComAdobeCqHistoryImplHistoryRequestFilterInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param historyServiceResourceTypes  (optional)
/// @param historyServicePathFilter  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeCqHistoryImplHistoryServiceImplInfo*
-(NSURLSessionTask*) comAdobeCqHistoryImplHistoryServiceImplWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    historyServiceResourceTypes: (NSArray<NSString*>*) historyServiceResourceTypes
    historyServicePathFilter: (NSArray<NSString*>*) historyServicePathFilter
    completionHandler: (void (^)(OAIComAdobeCqHistoryImplHistoryServiceImplInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param inboxImplTypeproviderRegistrypaths  (optional)
/// @param inboxImplTypeproviderLegacypaths  (optional)
/// @param inboxImplTypeproviderDefaulturlFailureitem  (optional)
/// @param inboxImplTypeproviderDefaulturlWorkitem  (optional)
/// @param inboxImplTypeproviderDefaulturlTask  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeCqInboxImplTypeproviderItemTypeProviderInfo*
-(NSURLSessionTask*) comAdobeCqInboxImplTypeproviderItemTypeProviderWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    inboxImplTypeproviderRegistrypaths: (NSArray<NSString*>*) inboxImplTypeproviderRegistrypaths
    inboxImplTypeproviderLegacypaths: (NSArray<NSString*>*) inboxImplTypeproviderLegacypaths
    inboxImplTypeproviderDefaulturlFailureitem: (NSString*) inboxImplTypeproviderDefaulturlFailureitem
    inboxImplTypeproviderDefaulturlWorkitem: (NSString*) inboxImplTypeproviderDefaulturlWorkitem
    inboxImplTypeproviderDefaulturlTask: (NSString*) inboxImplTypeproviderDefaulturlTask
    completionHandler: (void (^)(OAIComAdobeCqInboxImplTypeproviderItemTypeProviderInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param imageQuality  (optional)
/// @param imageSupportedResolutions  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeCqProjectsImplServletProjectImageServletInfo*
-(NSURLSessionTask*) comAdobeCqProjectsImplServletProjectImageServletWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    imageQuality: (NSString*) imageQuality
    imageSupportedResolutions: (NSString*) imageSupportedResolutions
    completionHandler: (void (^)(OAIComAdobeCqProjectsImplServletProjectImageServletInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param scheduledpurgeName  (optional)
/// @param scheduledpurgePurgeActive  (optional)
/// @param scheduledpurgeTemplates  (optional)
/// @param scheduledpurgePurgeGroups  (optional)
/// @param scheduledpurgePurgeAssets  (optional)
/// @param scheduledpurgeTerminateRunningWorkflows  (optional)
/// @param scheduledpurgeDaysold  (optional)
/// @param scheduledpurgeSaveThreshold  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeCqProjectsPurgeSchedulerInfo*
-(NSURLSessionTask*) comAdobeCqProjectsPurgeSchedulerWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    scheduledpurgeName: (NSString*) scheduledpurgeName
    scheduledpurgePurgeActive: (NSNumber*) scheduledpurgePurgeActive
    scheduledpurgeTemplates: (NSArray<NSString*>*) scheduledpurgeTemplates
    scheduledpurgePurgeGroups: (NSNumber*) scheduledpurgePurgeGroups
    scheduledpurgePurgeAssets: (NSNumber*) scheduledpurgePurgeAssets
    scheduledpurgeTerminateRunningWorkflows: (NSNumber*) scheduledpurgeTerminateRunningWorkflows
    scheduledpurgeDaysold: (NSNumber*) scheduledpurgeDaysold
    scheduledpurgeSaveThreshold: (NSNumber*) scheduledpurgeSaveThreshold
    completionHandler: (void (^)(OAIComAdobeCqProjectsPurgeSchedulerInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param includePaths  (optional)
/// @param exporterUser  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeCqScheduledExporterImplScheduledExporterImplInfo*
-(NSURLSessionTask*) comAdobeCqScheduledExporterImplScheduledExporterImplWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    includePaths: (NSArray<NSString*>*) includePaths
    exporterUser: (NSString*) exporterUser
    completionHandler: (void (^)(OAIComAdobeCqScheduledExporterImplScheduledExporterImplInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param comAdobeCqScreensAnalyticsImplUrl  (optional)
/// @param comAdobeCqScreensAnalyticsImplApikey  (optional)
/// @param comAdobeCqScreensAnalyticsImplProject  (optional)
/// @param comAdobeCqScreensAnalyticsImplEnvironment  (optional)
/// @param comAdobeCqScreensAnalyticsImplSendFrequency  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeCqScreensAnalyticsImplScreensAnalyticsServiceImplInfo*
-(NSURLSessionTask*) comAdobeCqScreensAnalyticsImplScreensAnalyticsServiceImplWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    comAdobeCqScreensAnalyticsImplUrl: (NSString*) comAdobeCqScreensAnalyticsImplUrl
    comAdobeCqScreensAnalyticsImplApikey: (NSString*) comAdobeCqScreensAnalyticsImplApikey
    comAdobeCqScreensAnalyticsImplProject: (NSString*) comAdobeCqScreensAnalyticsImplProject
    comAdobeCqScreensAnalyticsImplEnvironment: (NSString*) comAdobeCqScreensAnalyticsImplEnvironment
    comAdobeCqScreensAnalyticsImplSendFrequency: (NSNumber*) comAdobeCqScreensAnalyticsImplSendFrequency
    completionHandler: (void (^)(OAIComAdobeCqScreensAnalyticsImplScreensAnalyticsServiceImplInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param comAdobeAemScreensPlayerPingfrequency  (optional)
/// @param comAdobeAemScreensDevicePaswordSpecialchars  (optional)
/// @param comAdobeAemScreensDevicePaswordMinlowercasechars  (optional)
/// @param comAdobeAemScreensDevicePaswordMinuppercasechars  (optional)
/// @param comAdobeAemScreensDevicePaswordMinnumberchars  (optional)
/// @param comAdobeAemScreensDevicePaswordMinspecialchars  (optional)
/// @param comAdobeAemScreensDevicePaswordMinlength  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeCqScreensDeviceImplDeviceServiceInfo*
-(NSURLSessionTask*) comAdobeCqScreensDeviceImplDeviceServiceWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    comAdobeAemScreensPlayerPingfrequency: (NSNumber*) comAdobeAemScreensPlayerPingfrequency
    comAdobeAemScreensDevicePaswordSpecialchars: (NSString*) comAdobeAemScreensDevicePaswordSpecialchars
    comAdobeAemScreensDevicePaswordMinlowercasechars: (NSNumber*) comAdobeAemScreensDevicePaswordMinlowercasechars
    comAdobeAemScreensDevicePaswordMinuppercasechars: (NSNumber*) comAdobeAemScreensDevicePaswordMinuppercasechars
    comAdobeAemScreensDevicePaswordMinnumberchars: (NSNumber*) comAdobeAemScreensDevicePaswordMinnumberchars
    comAdobeAemScreensDevicePaswordMinspecialchars: (NSNumber*) comAdobeAemScreensDevicePaswordMinspecialchars
    comAdobeAemScreensDevicePaswordMinlength: (NSNumber*) comAdobeAemScreensDevicePaswordMinlength
    completionHandler: (void (^)(OAIComAdobeCqScreensDeviceImplDeviceServiceInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param deviceRegistrationTimeout  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeCqScreensDeviceRegistrationImplRegistrationServiceImplInfo*
-(NSURLSessionTask*) comAdobeCqScreensDeviceRegistrationImplRegistrationServiceImplWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    deviceRegistrationTimeout: (NSNumber*) deviceRegistrationTimeout
    completionHandler: (void (^)(OAIComAdobeCqScreensDeviceRegistrationImplRegistrationServiceImplInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param cqPagesupdatehandlerImageresourcetypes  (optional)
/// @param cqPagesupdatehandlerProductresourcetypes  (optional)
/// @param cqPagesupdatehandlerVideoresourcetypes  (optional)
/// @param cqPagesupdatehandlerDynamicsequenceresourcetypes  (optional)
/// @param cqPagesupdatehandlerPreviewmodepaths  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeCqScreensImplHandlerChannelsUpdateHandlerInfo*
-(NSURLSessionTask*) comAdobeCqScreensImplHandlerChannelsUpdateHandlerWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    cqPagesupdatehandlerImageresourcetypes: (NSArray<NSString*>*) cqPagesupdatehandlerImageresourcetypes
    cqPagesupdatehandlerProductresourcetypes: (NSArray<NSString*>*) cqPagesupdatehandlerProductresourcetypes
    cqPagesupdatehandlerVideoresourcetypes: (NSArray<NSString*>*) cqPagesupdatehandlerVideoresourcetypes
    cqPagesupdatehandlerDynamicsequenceresourcetypes: (NSArray<NSString*>*) cqPagesupdatehandlerDynamicsequenceresourcetypes
    cqPagesupdatehandlerPreviewmodepaths: (NSArray<NSString*>*) cqPagesupdatehandlerPreviewmodepaths
    completionHandler: (void (^)(OAIComAdobeCqScreensImplHandlerChannelsUpdateHandlerInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param schedulerExpression  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeCqScreensImplJobsDistributedDevicesStatiUpdateJobInfo*
-(NSURLSessionTask*) comAdobeCqScreensImplJobsDistributedDevicesStatiUpdateJobWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    schedulerExpression: (NSString*) schedulerExpression
    completionHandler: (void (^)(OAIComAdobeCqScreensImplJobsDistributedDevicesStatiUpdateJobInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param comAdobeAemScreensImplRemoteRequestTimeout  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeCqScreensImplRemoteImplDistributedHttpClientImplInfo*
-(NSURLSessionTask*) comAdobeCqScreensImplRemoteImplDistributedHttpClientImplWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    comAdobeAemScreensImplRemoteRequestTimeout: (NSNumber*) comAdobeAemScreensImplRemoteRequestTimeout
    completionHandler: (void (^)(OAIComAdobeCqScreensImplRemoteImplDistributedHttpClientImplInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param screensChannelsPropertiesToRemove  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeCqScreensImplScreensChannelPostProcessorInfo*
-(NSURLSessionTask*) comAdobeCqScreensImplScreensChannelPostProcessorWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    screensChannelsPropertiesToRemove: (NSArray<NSString*>*) screensChannelsPropertiesToRemove
    completionHandler: (void (^)(OAIComAdobeCqScreensImplScreensChannelPostProcessorInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param comAdobeCqScreensMonitoringImplScreensMonitoringServiceImplProjectPath  (optional)
/// @param comAdobeCqScreensMonitoringImplScreensMonitoringServiceImplScheduleFrequency  (optional)
/// @param comAdobeCqScreensMonitoringImplScreensMonitoringServiceImplPingTimeout  (optional)
/// @param comAdobeCqScreensMonitoringImplScreensMonitoringServiceImplRecipients  (optional)
/// @param comAdobeCqScreensMonitoringImplScreensMonitoringServiceImplSmtpserver  (optional)
/// @param comAdobeCqScreensMonitoringImplScreensMonitoringServiceImplSmtpport  (optional)
/// @param comAdobeCqScreensMonitoringImplScreensMonitoringServiceImplUsetls  (optional)
/// @param comAdobeCqScreensMonitoringImplScreensMonitoringServiceImplUsername  (optional)
/// @param comAdobeCqScreensMonitoringImplScreensMonitoringServiceImplPassword  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeCqScreensMonitoringImplScreensMonitoringServiceImplInfo*
-(NSURLSessionTask*) comAdobeCqScreensMonitoringImplScreensMonitoringServiceImplWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    comAdobeCqScreensMonitoringImplScreensMonitoringServiceImplProjectPath: (NSArray<NSString*>*) comAdobeCqScreensMonitoringImplScreensMonitoringServiceImplProjectPath
    comAdobeCqScreensMonitoringImplScreensMonitoringServiceImplScheduleFrequency: (NSString*) comAdobeCqScreensMonitoringImplScreensMonitoringServiceImplScheduleFrequency
    comAdobeCqScreensMonitoringImplScreensMonitoringServiceImplPingTimeout: (NSNumber*) comAdobeCqScreensMonitoringImplScreensMonitoringServiceImplPingTimeout
    comAdobeCqScreensMonitoringImplScreensMonitoringServiceImplRecipients: (NSString*) comAdobeCqScreensMonitoringImplScreensMonitoringServiceImplRecipients
    comAdobeCqScreensMonitoringImplScreensMonitoringServiceImplSmtpserver: (NSString*) comAdobeCqScreensMonitoringImplScreensMonitoringServiceImplSmtpserver
    comAdobeCqScreensMonitoringImplScreensMonitoringServiceImplSmtpport: (NSNumber*) comAdobeCqScreensMonitoringImplScreensMonitoringServiceImplSmtpport
    comAdobeCqScreensMonitoringImplScreensMonitoringServiceImplUsetls: (NSNumber*) comAdobeCqScreensMonitoringImplScreensMonitoringServiceImplUsetls
    comAdobeCqScreensMonitoringImplScreensMonitoringServiceImplUsername: (NSString*) comAdobeCqScreensMonitoringImplScreensMonitoringServiceImplUsername
    comAdobeCqScreensMonitoringImplScreensMonitoringServiceImplPassword: (NSString*) comAdobeCqScreensMonitoringImplScreensMonitoringServiceImplPassword
    completionHandler: (void (^)(OAIComAdobeCqScreensMonitoringImplScreensMonitoringServiceImplInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param serviceRanking  (optional)
/// @param globalSize  (optional)
/// @param maxDiskUsage  (optional)
/// @param persistenceEnabled  (optional)
/// @param threadPoolMaxSize  (optional)
/// @param scheduledThreadPoolMaxSize  (optional)
/// @param gracefulShutdownTimeout  (optional)
/// @param queues  (optional)
/// @param topics  (optional)
/// @param addressesMaxDeliveryAttempts  (optional)
/// @param addressesExpiryDelay  (optional)
/// @param addressesAddressFullMessagePolicy  (optional)
/// @param addressesMaxSizeBytes  (optional)
/// @param addressesPageSizeBytes  (optional)
/// @param addressesPageCacheMaxSize  (optional)
/// @param clusterUser  (optional)
/// @param clusterPassword  (optional)
/// @param clusterCallTimeout  (optional)
/// @param clusterCallFailoverTimeout  (optional)
/// @param clusterClientFailureCheckPeriod  (optional)
/// @param clusterNotificationAttempts  (optional)
/// @param clusterNotificationInterval  (optional)
/// @param idCacheSize  (optional)
/// @param clusterConfirmationWindowSize  (optional)
/// @param clusterConnectionTtl  (optional)
/// @param clusterDuplicateDetection  (optional)
/// @param clusterInitialConnectAttempts  (optional)
/// @param clusterMaxRetryInterval  (optional)
/// @param clusterMinLargeMessageSize  (optional)
/// @param clusterProducerWindowSize  (optional)
/// @param clusterReconnectAttempts  (optional)
/// @param clusterRetryInterval  (optional)
/// @param clusterRetryIntervalMultiplier  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeCqScreensMqActivemqImplArtemisJMSProviderInfo*
-(NSURLSessionTask*) comAdobeCqScreensMqActivemqImplArtemisJMSProviderWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    serviceRanking: (NSNumber*) serviceRanking
    globalSize: (NSNumber*) globalSize
    maxDiskUsage: (NSNumber*) maxDiskUsage
    persistenceEnabled: (NSNumber*) persistenceEnabled
    threadPoolMaxSize: (NSNumber*) threadPoolMaxSize
    scheduledThreadPoolMaxSize: (NSNumber*) scheduledThreadPoolMaxSize
    gracefulShutdownTimeout: (NSNumber*) gracefulShutdownTimeout
    queues: (NSArray<NSString*>*) queues
    topics: (NSArray<NSString*>*) topics
    addressesMaxDeliveryAttempts: (NSNumber*) addressesMaxDeliveryAttempts
    addressesExpiryDelay: (NSNumber*) addressesExpiryDelay
    addressesAddressFullMessagePolicy: (NSString*) addressesAddressFullMessagePolicy
    addressesMaxSizeBytes: (NSNumber*) addressesMaxSizeBytes
    addressesPageSizeBytes: (NSNumber*) addressesPageSizeBytes
    addressesPageCacheMaxSize: (NSNumber*) addressesPageCacheMaxSize
    clusterUser: (NSString*) clusterUser
    clusterPassword: (NSString*) clusterPassword
    clusterCallTimeout: (NSNumber*) clusterCallTimeout
    clusterCallFailoverTimeout: (NSNumber*) clusterCallFailoverTimeout
    clusterClientFailureCheckPeriod: (NSNumber*) clusterClientFailureCheckPeriod
    clusterNotificationAttempts: (NSNumber*) clusterNotificationAttempts
    clusterNotificationInterval: (NSNumber*) clusterNotificationInterval
    idCacheSize: (NSNumber*) idCacheSize
    clusterConfirmationWindowSize: (NSNumber*) clusterConfirmationWindowSize
    clusterConnectionTtl: (NSNumber*) clusterConnectionTtl
    clusterDuplicateDetection: (NSNumber*) clusterDuplicateDetection
    clusterInitialConnectAttempts: (NSNumber*) clusterInitialConnectAttempts
    clusterMaxRetryInterval: (NSNumber*) clusterMaxRetryInterval
    clusterMinLargeMessageSize: (NSNumber*) clusterMinLargeMessageSize
    clusterProducerWindowSize: (NSNumber*) clusterProducerWindowSize
    clusterReconnectAttempts: (NSNumber*) clusterReconnectAttempts
    clusterRetryInterval: (NSNumber*) clusterRetryInterval
    clusterRetryIntervalMultiplier: (NSNumber*) clusterRetryIntervalMultiplier
    completionHandler: (void (^)(OAIComAdobeCqScreensMqActivemqImplArtemisJMSProviderInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param comAdobeCqScreensOfflinecontentImplBulkOfflineUpdateServiceImplProjectPath  (optional)
/// @param comAdobeCqScreensOfflinecontentImplBulkOfflineUpdateServiceImplScheduleFrequency  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeCqScreensOfflinecontentImplBulkOfflineUpdateServiceImplInfo*
-(NSURLSessionTask*) comAdobeCqScreensOfflinecontentImplBulkOfflineUpdateServiceImplWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    comAdobeCqScreensOfflinecontentImplBulkOfflineUpdateServiceImplProjectPath: (NSArray<NSString*>*) comAdobeCqScreensOfflinecontentImplBulkOfflineUpdateServiceImplProjectPath
    comAdobeCqScreensOfflinecontentImplBulkOfflineUpdateServiceImplScheduleFrequency: (NSString*) comAdobeCqScreensOfflinecontentImplBulkOfflineUpdateServiceImplScheduleFrequency
    completionHandler: (void (^)(OAIComAdobeCqScreensOfflinecontentImplBulkOfflineUpdateServiceImplInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param disableSmartSync  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeCqScreensOfflinecontentImplOfflineContentServiceImplInfo*
-(NSURLSessionTask*) comAdobeCqScreensOfflinecontentImplOfflineContentServiceImplWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    disableSmartSync: (NSNumber*) disableSmartSync
    completionHandler: (void (^)(OAIComAdobeCqScreensOfflinecontentImplOfflineContentServiceImplInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param enableDataTriggeredContent  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeCqScreensSegmentationImplSegmentationFeatureFlagInfo*
-(NSURLSessionTask*) comAdobeCqScreensSegmentationImplSegmentationFeatureFlagWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    enableDataTriggeredContent: (NSNumber*) enableDataTriggeredContent
    completionHandler: (void (^)(OAIComAdobeCqScreensSegmentationImplSegmentationFeatureFlagInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param hcTags  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeCqSecurityHcBundlesImplHtmlLibraryManagerConfigHealthChInfo*
-(NSURLSessionTask*) comAdobeCqSecurityHcBundlesImplHtmlLibraryManagerConfigHealthChWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    hcTags: (NSArray<NSString*>*) hcTags
    completionHandler: (void (^)(OAIComAdobeCqSecurityHcBundlesImplHtmlLibraryManagerConfigHealthChInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param hcTags  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeCqSecurityHcBundlesImplWcmFilterHealthCheckInfo*
-(NSURLSessionTask*) comAdobeCqSecurityHcBundlesImplWcmFilterHealthCheckWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    hcTags: (NSArray<NSString*>*) hcTags
    completionHandler: (void (^)(OAIComAdobeCqSecurityHcBundlesImplWcmFilterHealthCheckInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param hcTags  (optional)
/// @param dispatcherAddress  (optional)
/// @param dispatcherFilterAllowed  (optional)
/// @param dispatcherFilterBlocked  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeCqSecurityHcDispatcherImplDispatcherAccessHealthCheckInfo*
-(NSURLSessionTask*) comAdobeCqSecurityHcDispatcherImplDispatcherAccessHealthCheckWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    hcTags: (NSArray<NSString*>*) hcTags
    dispatcherAddress: (NSString*) dispatcherAddress
    dispatcherFilterAllowed: (NSArray<NSString*>*) dispatcherFilterAllowed
    dispatcherFilterBlocked: (NSArray<NSString*>*) dispatcherFilterBlocked
    completionHandler: (void (^)(OAIComAdobeCqSecurityHcDispatcherImplDispatcherAccessHealthCheckInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param hcTags  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeCqSecurityHcPackagesImplExampleContentHealthCheckInfo*
-(NSURLSessionTask*) comAdobeCqSecurityHcPackagesImplExampleContentHealthCheckWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    hcTags: (NSArray<NSString*>*) hcTags
    completionHandler: (void (^)(OAIComAdobeCqSecurityHcPackagesImplExampleContentHealthCheckInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param hcTags  (optional)
/// @param webserverAddress  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeCqSecurityHcWebserverImplClickjackingHealthCheckInfo*
-(NSURLSessionTask*) comAdobeCqSecurityHcWebserverImplClickjackingHealthCheckWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    hcTags: (NSArray<NSString*>*) hcTags
    webserverAddress: (NSString*) webserverAddress
    completionHandler: (void (^)(OAIComAdobeCqSecurityHcWebserverImplClickjackingHealthCheckInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param enable  (optional)
/// @param ttl1  (optional)
/// @param ttl2  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeCqSocialAccountverificationImplAccountManagementConfigImInfo*
-(NSURLSessionTask*) comAdobeCqSocialAccountverificationImplAccountManagementConfigImWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    enable: (NSNumber*) enable
    ttl1: (NSNumber*) ttl1
    ttl2: (NSNumber*) ttl2
    completionHandler: (void (^)(OAIComAdobeCqSocialAccountverificationImplAccountManagementConfigImInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param priority  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeCqSocialActivitystreamsClientImplSocialActivityComponenInfo*
-(NSURLSessionTask*) comAdobeCqSocialActivitystreamsClientImplSocialActivityComponenWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    priority: (NSNumber*) priority
    completionHandler: (void (^)(OAIComAdobeCqSocialActivitystreamsClientImplSocialActivityComponenInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param priority  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeCqSocialActivitystreamsClientImplSocialActivityStreamCoInfo*
-(NSURLSessionTask*) comAdobeCqSocialActivitystreamsClientImplSocialActivityStreamCoWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    priority: (NSNumber*) priority
    completionHandler: (void (^)(OAIComAdobeCqSocialActivitystreamsClientImplSocialActivityStreamCoInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param eventTopics  (optional)
/// @param eventFilter  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeCqSocialActivitystreamsListenerImplEventListenerHandlerInfo*
-(NSURLSessionTask*) comAdobeCqSocialActivitystreamsListenerImplEventListenerHandlerWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    eventTopics: (NSString*) eventTopics
    eventFilter: (NSString*) eventFilter
    completionHandler: (void (^)(OAIComAdobeCqSocialActivitystreamsListenerImplEventListenerHandlerInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param accepted  (optional)
/// @param ranked  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeCqSocialActivitystreamsListenerImplModerationEventExtenInfo*
-(NSURLSessionTask*) comAdobeCqSocialActivitystreamsListenerImplModerationEventExtenWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    accepted: (NSNumber*) accepted
    ranked: (NSNumber*) ranked
    completionHandler: (void (^)(OAIComAdobeCqSocialActivitystreamsListenerImplModerationEventExtenInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param ranking  (optional)
/// @param enable  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeCqSocialActivitystreamsListenerImplRatingEventActivitySInfo*
-(NSURLSessionTask*) comAdobeCqSocialActivitystreamsListenerImplRatingEventActivitySWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    ranking: (NSNumber*) ranking
    enable: (NSNumber*) enable
    completionHandler: (void (^)(OAIComAdobeCqSocialActivitystreamsListenerImplRatingEventActivitySInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param streamPath  (optional)
/// @param streamName  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeCqSocialActivitystreamsListenerImplResourceActivityStreInfo*
-(NSURLSessionTask*) comAdobeCqSocialActivitystreamsListenerImplResourceActivityStreWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    streamPath: (NSString*) streamPath
    streamName: (NSString*) streamName
    completionHandler: (void (^)(OAIComAdobeCqSocialActivitystreamsListenerImplResourceActivityStreInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param maxRetry  (optional)
/// @param fieldWhitelist  (optional)
/// @param attachmentTypeBlacklist  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeCqSocialCalendarClientEndpointsImplCalendarOperationsIInfo*
-(NSURLSessionTask*) comAdobeCqSocialCalendarClientEndpointsImplCalendarOperationsIWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    maxRetry: (NSNumber*) maxRetry
    fieldWhitelist: (NSArray<NSString*>*) fieldWhitelist
    attachmentTypeBlacklist: (NSArray<NSString*>*) attachmentTypeBlacklist
    completionHandler: (void (^)(OAIComAdobeCqSocialCalendarClientEndpointsImplCalendarOperationsIInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param attachmentTypeBlacklist  (optional)
/// @param extensionOrder  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeCqSocialCalendarClientOperationextensionsEventAttachmenInfo*
-(NSURLSessionTask*) comAdobeCqSocialCalendarClientOperationextensionsEventAttachmenWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    attachmentTypeBlacklist: (NSString*) attachmentTypeBlacklist
    extensionOrder: (NSNumber*) extensionOrder
    completionHandler: (void (^)(OAIComAdobeCqSocialCalendarClientOperationextensionsEventAttachmenInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param timezonesExpirytime  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeCqSocialCalendarServletsTimeZoneServletInfo*
-(NSURLSessionTask*) comAdobeCqSocialCalendarServletsTimeZoneServletWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    timezonesExpirytime: (NSNumber*) timezonesExpirytime
    completionHandler: (void (^)(OAIComAdobeCqSocialCalendarServletsTimeZoneServletInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param ranking  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeCqSocialCommonsCommentsEndpointsImplCommentDeleteEventInfo*
-(NSURLSessionTask*) comAdobeCqSocialCommonsCommentsEndpointsImplCommentDeleteEventWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    ranking: (NSNumber*) ranking
    completionHandler: (void (^)(OAIComAdobeCqSocialCommonsCommentsEndpointsImplCommentDeleteEventInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param fieldWhitelist  (optional)
/// @param attachmentTypeBlacklist  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeCqSocialCommonsCommentsEndpointsImplCommentOperationSeInfo*
-(NSURLSessionTask*) comAdobeCqSocialCommonsCommentsEndpointsImplCommentOperationSeWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    fieldWhitelist: (NSArray<NSString*>*) fieldWhitelist
    attachmentTypeBlacklist: (NSArray<NSString*>*) attachmentTypeBlacklist
    completionHandler: (void (^)(OAIComAdobeCqSocialCommonsCommentsEndpointsImplCommentOperationSeInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param fieldWhitelist  (optional)
/// @param attachmentTypeBlacklist  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeCqSocialCommonsCommentsEndpointsImplTranslationOperatiInfo*
-(NSURLSessionTask*) comAdobeCqSocialCommonsCommentsEndpointsImplTranslationOperatiWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    fieldWhitelist: (NSArray<NSString*>*) fieldWhitelist
    attachmentTypeBlacklist: (NSArray<NSString*>*) attachmentTypeBlacklist
    completionHandler: (void (^)(OAIComAdobeCqSocialCommonsCommentsEndpointsImplTranslationOperatiInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param numUserLimit  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeCqSocialCommonsCommentsListingImplSearchCommentSocialCInfo*
-(NSURLSessionTask*) comAdobeCqSocialCommonsCommentsListingImplSearchCommentSocialCWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    numUserLimit: (NSNumber*) numUserLimit
    completionHandler: (void (^)(OAIComAdobeCqSocialCommonsCommentsListingImplSearchCommentSocialCInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param enableScheduledPostsSearch  (optional)
/// @param numberOfMinutes  (optional)
/// @param maxSearchLimit  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeCqSocialCommonsCommentsSchedulerImplSearchScheduledPosInfo*
-(NSURLSessionTask*) comAdobeCqSocialCommonsCommentsSchedulerImplSearchScheduledPosWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    enableScheduledPostsSearch: (NSNumber*) enableScheduledPostsSearch
    numberOfMinutes: (NSNumber*) numberOfMinutes
    maxSearchLimit: (NSNumber*) maxSearchLimit
    completionHandler: (void (^)(OAIComAdobeCqSocialCommonsCommentsSchedulerImplSearchScheduledPosInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param corsEnabling  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeCqSocialCommonsCorsCORSAuthenticationFilterInfo*
-(NSURLSessionTask*) comAdobeCqSocialCommonsCorsCORSAuthenticationFilterWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    corsEnabling: (NSNumber*) corsEnabling
    completionHandler: (void (^)(OAIComAdobeCqSocialCommonsCorsCORSAuthenticationFilterInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param priorityOrder  (optional)
/// @param replyEmailPatterns  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeCqSocialCommonsEmailreplyImplAndroidEmailClientProviderInfo*
-(NSURLSessionTask*) comAdobeCqSocialCommonsEmailreplyImplAndroidEmailClientProviderWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    priorityOrder: (NSNumber*) priorityOrder
    replyEmailPatterns: (NSArray<NSString*>*) replyEmailPatterns
    completionHandler: (void (^)(OAIComAdobeCqSocialCommonsEmailreplyImplAndroidEmailClientProviderInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param contextPath  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeCqSocialCommonsEmailreplyImplCommentEmailBuilderImplInfo*
-(NSURLSessionTask*) comAdobeCqSocialCommonsEmailreplyImplCommentEmailBuilderImplWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    contextPath: (NSString*) contextPath
    completionHandler: (void (^)(OAIComAdobeCqSocialCommonsEmailreplyImplCommentEmailBuilderImplInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param eventTopics  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeCqSocialCommonsEmailreplyImplCommentEmailEventListenerInfo*
-(NSURLSessionTask*) comAdobeCqSocialCommonsEmailreplyImplCommentEmailEventListenerWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    eventTopics: (NSString*) eventTopics
    completionHandler: (void (^)(OAIComAdobeCqSocialCommonsEmailreplyImplCommentEmailEventListenerInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param priorityOrder  (optional)
/// @param replyEmailPatterns  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeCqSocialCommonsEmailreplyImplCustomEmailClientProviderInfo*
-(NSURLSessionTask*) comAdobeCqSocialCommonsEmailreplyImplCustomEmailClientProviderWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    priorityOrder: (NSNumber*) priorityOrder
    replyEmailPatterns: (NSArray<NSString*>*) replyEmailPatterns
    completionHandler: (void (^)(OAIComAdobeCqSocialCommonsEmailreplyImplCustomEmailClientProviderInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param patternTime  (optional)
/// @param patternNewline  (optional)
/// @param patternDayOfMonth  (optional)
/// @param patternMonth  (optional)
/// @param patternYear  (optional)
/// @param patternDate  (optional)
/// @param patternDateTime  (optional)
/// @param patternEmail  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeCqSocialCommonsEmailreplyImplEmailQuotedTextPatternsImpInfo*
-(NSURLSessionTask*) comAdobeCqSocialCommonsEmailreplyImplEmailQuotedTextPatternsImpWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    patternTime: (NSString*) patternTime
    patternNewline: (NSString*) patternNewline
    patternDayOfMonth: (NSString*) patternDayOfMonth
    patternMonth: (NSString*) patternMonth
    patternYear: (NSString*) patternYear
    patternDate: (NSString*) patternDate
    patternDateTime: (NSString*) patternDateTime
    patternEmail: (NSString*) patternEmail
    completionHandler: (void (^)(OAIComAdobeCqSocialCommonsEmailreplyImplEmailQuotedTextPatternsImpInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param emailName  (optional)
/// @param emailCreatePostFromReply  (optional)
/// @param emailAddCommentIdTo  (optional)
/// @param emailSubjectMaximumLength  (optional)
/// @param emailReplyToAddress  (optional)
/// @param emailReplyToDelimiter  (optional)
/// @param emailTrackerIdPrefixInSubject  (optional)
/// @param emailTrackerIdPrefixInBody  (optional)
/// @param emailAsHTML  (optional)
/// @param emailDefaultUserName  (optional)
/// @param emailTemplatesRootPath  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeCqSocialCommonsEmailreplyImplEmailReplyConfigurationImpInfo*
-(NSURLSessionTask*) comAdobeCqSocialCommonsEmailreplyImplEmailReplyConfigurationImpWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    emailName: (NSString*) emailName
    emailCreatePostFromReply: (NSNumber*) emailCreatePostFromReply
    emailAddCommentIdTo: (NSString*) emailAddCommentIdTo
    emailSubjectMaximumLength: (NSNumber*) emailSubjectMaximumLength
    emailReplyToAddress: (NSString*) emailReplyToAddress
    emailReplyToDelimiter: (NSString*) emailReplyToDelimiter
    emailTrackerIdPrefixInSubject: (NSString*) emailTrackerIdPrefixInSubject
    emailTrackerIdPrefixInBody: (NSString*) emailTrackerIdPrefixInBody
    emailAsHTML: (NSNumber*) emailAsHTML
    emailDefaultUserName: (NSString*) emailDefaultUserName
    emailTemplatesRootPath: (NSString*) emailTemplatesRootPath
    completionHandler: (void (^)(OAIComAdobeCqSocialCommonsEmailreplyImplEmailReplyConfigurationImpInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param connectProtocol  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeCqSocialCommonsEmailreplyImplEmailReplyImporterInfo*
-(NSURLSessionTask*) comAdobeCqSocialCommonsEmailreplyImplEmailReplyImporterWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    connectProtocol: (NSString*) connectProtocol
    completionHandler: (void (^)(OAIComAdobeCqSocialCommonsEmailreplyImplEmailReplyImporterInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param priorityOrder  (optional)
/// @param replyEmailPatterns  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeCqSocialCommonsEmailreplyImplGmailEmailClientProviderInfo*
-(NSURLSessionTask*) comAdobeCqSocialCommonsEmailreplyImplGmailEmailClientProviderWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    priorityOrder: (NSNumber*) priorityOrder
    replyEmailPatterns: (NSArray<NSString*>*) replyEmailPatterns
    completionHandler: (void (^)(OAIComAdobeCqSocialCommonsEmailreplyImplGmailEmailClientProviderInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param priorityOrder  (optional)
/// @param replyEmailPatterns  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeCqSocialCommonsEmailreplyImplIOSEmailClientProviderInfo*
-(NSURLSessionTask*) comAdobeCqSocialCommonsEmailreplyImplIOSEmailClientProviderWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    priorityOrder: (NSNumber*) priorityOrder
    replyEmailPatterns: (NSArray<NSString*>*) replyEmailPatterns
    completionHandler: (void (^)(OAIComAdobeCqSocialCommonsEmailreplyImplIOSEmailClientProviderInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param priorityOrder  (optional)
/// @param replyEmailPatterns  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeCqSocialCommonsEmailreplyImplMacmailEmailClientProviderInfo*
-(NSURLSessionTask*) comAdobeCqSocialCommonsEmailreplyImplMacmailEmailClientProviderWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    priorityOrder: (NSNumber*) priorityOrder
    replyEmailPatterns: (NSArray<NSString*>*) replyEmailPatterns
    completionHandler: (void (^)(OAIComAdobeCqSocialCommonsEmailreplyImplMacmailEmailClientProviderInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param priorityOrder  (optional)
/// @param replyEmailPatterns  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeCqSocialCommonsEmailreplyImplOutLookEmailClientProviderInfo*
-(NSURLSessionTask*) comAdobeCqSocialCommonsEmailreplyImplOutLookEmailClientProviderWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    priorityOrder: (NSNumber*) priorityOrder
    replyEmailPatterns: (NSArray<NSString*>*) replyEmailPatterns
    completionHandler: (void (^)(OAIComAdobeCqSocialCommonsEmailreplyImplOutLookEmailClientProviderInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param replyEmailPatterns  (optional)
/// @param priorityOrder  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeCqSocialCommonsEmailreplyImplUnknownEmailClientProviderInfo*
-(NSURLSessionTask*) comAdobeCqSocialCommonsEmailreplyImplUnknownEmailClientProviderWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    replyEmailPatterns: (NSArray<NSString*>*) replyEmailPatterns
    priorityOrder: (NSNumber*) priorityOrder
    completionHandler: (void (^)(OAIComAdobeCqSocialCommonsEmailreplyImplUnknownEmailClientProviderInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param priorityOrder  (optional)
/// @param replyEmailPatterns  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeCqSocialCommonsEmailreplyImplYahooEmailClientProviderInfo*
-(NSURLSessionTask*) comAdobeCqSocialCommonsEmailreplyImplYahooEmailClientProviderWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    priorityOrder: (NSNumber*) priorityOrder
    replyEmailPatterns: (NSArray<NSString*>*) replyEmailPatterns
    completionHandler: (void (^)(OAIComAdobeCqSocialCommonsEmailreplyImplYahooEmailClientProviderInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param numberOfDays  (optional)
/// @param ageOfFile  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeCqSocialCommonsMaintainanceImplDeleteTempUGCImageUploadInfo*
-(NSURLSessionTask*) comAdobeCqSocialCommonsMaintainanceImplDeleteTempUGCImageUploadWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    numberOfDays: (NSNumber*) numberOfDays
    ageOfFile: (NSNumber*) ageOfFile
    completionHandler: (void (^)(OAIComAdobeCqSocialCommonsMaintainanceImplDeleteTempUGCImageUploadInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param eventTopics  (optional)
/// @param eventFilter  (optional)
/// @param verbs  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeCqSocialCommonsUgclimiterImplUGCLimiterServiceImplInfo*
-(NSURLSessionTask*) comAdobeCqSocialCommonsUgclimiterImplUGCLimiterServiceImplWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    eventTopics: (NSString*) eventTopics
    eventFilter: (NSString*) eventFilter
    verbs: (NSArray<NSString*>*) verbs
    completionHandler: (void (^)(OAIComAdobeCqSocialCommonsUgclimiterImplUGCLimiterServiceImplInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param enable  (optional)
/// @param uGCLimit  (optional)
/// @param ugcLimitDuration  (optional)
/// @param domains  (optional)
/// @param toList  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeCqSocialCommonsUgclimitsconfigImplCommunityUserUGCLimitInfo*
-(NSURLSessionTask*) comAdobeCqSocialCommonsUgclimitsconfigImplCommunityUserUGCLimitWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    enable: (NSNumber*) enable
    uGCLimit: (NSNumber*) uGCLimit
    ugcLimitDuration: (NSNumber*) ugcLimitDuration
    domains: (NSArray<NSString*>*) domains
    toList: (NSArray<NSString*>*) toList
    completionHandler: (void (^)(OAIComAdobeCqSocialCommonsUgclimitsconfigImplCommunityUserUGCLimitInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param oauthProviderId  (optional)
/// @param oauthCloudConfigRoot  (optional)
/// @param providerConfigRoot  (optional)
/// @param providerConfigCreateTagsEnabled  (optional)
/// @param providerConfigUserFolder  (optional)
/// @param providerConfigFacebookFetchFields  (optional)
/// @param providerConfigFacebookFields  (optional)
/// @param providerConfigRefreshUserdataEnabled  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeCqSocialConnectOauthImplFacebookProviderImplInfo*
-(NSURLSessionTask*) comAdobeCqSocialConnectOauthImplFacebookProviderImplWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    oauthProviderId: (NSString*) oauthProviderId
    oauthCloudConfigRoot: (NSString*) oauthCloudConfigRoot
    providerConfigRoot: (NSString*) providerConfigRoot
    providerConfigCreateTagsEnabled: (NSNumber*) providerConfigCreateTagsEnabled
    providerConfigUserFolder: (NSString*) providerConfigUserFolder
    providerConfigFacebookFetchFields: (NSNumber*) providerConfigFacebookFetchFields
    providerConfigFacebookFields: (NSArray<NSString*>*) providerConfigFacebookFields
    providerConfigRefreshUserdataEnabled: (NSNumber*) providerConfigRefreshUserdataEnabled
    completionHandler: (void (^)(OAIComAdobeCqSocialConnectOauthImplFacebookProviderImplInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param path  (optional)
/// @param serviceRanking  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeCqSocialConnectOauthImplSocialOAuthAuthenticationHandleInfo*
-(NSURLSessionTask*) comAdobeCqSocialConnectOauthImplSocialOAuthAuthenticationHandleWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    path: (NSArray<NSString*>*) path
    serviceRanking: (NSNumber*) serviceRanking
    completionHandler: (void (^)(OAIComAdobeCqSocialConnectOauthImplSocialOAuthAuthenticationHandleInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param facebook  (optional)
/// @param twitter  (optional)
/// @param providerConfigUserFolder  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeCqSocialConnectOauthImplSocialOAuthUserProfileMapperInfo*
-(NSURLSessionTask*) comAdobeCqSocialConnectOauthImplSocialOAuthUserProfileMapperWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    facebook: (NSArray<NSString*>*) facebook
    twitter: (NSArray<NSString*>*) twitter
    providerConfigUserFolder: (NSString*) providerConfigUserFolder
    completionHandler: (void (^)(OAIComAdobeCqSocialConnectOauthImplSocialOAuthUserProfileMapperInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param oauthProviderId  (optional)
/// @param oauthCloudConfigRoot  (optional)
/// @param providerConfigRoot  (optional)
/// @param providerConfigUserFolder  (optional)
/// @param providerConfigTwitterEnableParams  (optional)
/// @param providerConfigTwitterParams  (optional)
/// @param providerConfigRefreshUserdataEnabled  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeCqSocialConnectOauthImplTwitterProviderImplInfo*
-(NSURLSessionTask*) comAdobeCqSocialConnectOauthImplTwitterProviderImplWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    oauthProviderId: (NSString*) oauthProviderId
    oauthCloudConfigRoot: (NSString*) oauthCloudConfigRoot
    providerConfigRoot: (NSString*) providerConfigRoot
    providerConfigUserFolder: (NSString*) providerConfigUserFolder
    providerConfigTwitterEnableParams: (NSNumber*) providerConfigTwitterEnableParams
    providerConfigTwitterParams: (NSArray<NSString*>*) providerConfigTwitterParams
    providerConfigRefreshUserdataEnabled: (NSNumber*) providerConfigRefreshUserdataEnabled
    completionHandler: (void (^)(OAIComAdobeCqSocialConnectOauthImplTwitterProviderImplInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param cqSocialContentFragmentsServicesEnabled  (optional)
/// @param cqSocialContentFragmentsServicesWaitTimeSeconds  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeCqSocialContentFragmentsServicesImplCommunitiesFragmenInfo*
-(NSURLSessionTask*) comAdobeCqSocialContentFragmentsServicesImplCommunitiesFragmenWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    cqSocialContentFragmentsServicesEnabled: (NSNumber*) cqSocialContentFragmentsServicesEnabled
    cqSocialContentFragmentsServicesWaitTimeSeconds: (NSNumber*) cqSocialContentFragmentsServicesWaitTimeSeconds
    completionHandler: (void (^)(OAIComAdobeCqSocialContentFragmentsServicesImplCommunitiesFragmenInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param versionId  (optional)
/// @param cacheOn  (optional)
/// @param concurrencyLevel  (optional)
/// @param cacheStartSize  (optional)
/// @param cacheTtl  (optional)
/// @param cacheSize  (optional)
/// @param timeLimit  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeCqSocialDatastoreAsImplASResourceProviderFactoryInfo*
-(NSURLSessionTask*) comAdobeCqSocialDatastoreAsImplASResourceProviderFactoryWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    versionId: (NSString*) versionId
    cacheOn: (NSNumber*) cacheOn
    concurrencyLevel: (NSNumber*) concurrencyLevel
    cacheStartSize: (NSNumber*) cacheStartSize
    cacheTtl: (NSNumber*) cacheTtl
    cacheSize: (NSNumber*) cacheSize
    timeLimit: (NSNumber*) timeLimit
    completionHandler: (void (^)(OAIComAdobeCqSocialDatastoreAsImplASResourceProviderFactoryInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param solrZkTimeout  (optional)
/// @param solrCommit  (optional)
/// @param cacheOn  (optional)
/// @param concurrencyLevel  (optional)
/// @param cacheStartSize  (optional)
/// @param cacheTtl  (optional)
/// @param cacheSize  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeCqSocialDatastoreOpImplSocialMSResourceProviderFactoryInfo*
-(NSURLSessionTask*) comAdobeCqSocialDatastoreOpImplSocialMSResourceProviderFactoryWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    solrZkTimeout: (NSString*) solrZkTimeout
    solrCommit: (NSString*) solrCommit
    cacheOn: (NSNumber*) cacheOn
    concurrencyLevel: (NSNumber*) concurrencyLevel
    cacheStartSize: (NSNumber*) cacheStartSize
    cacheTtl: (NSNumber*) cacheTtl
    cacheSize: (NSNumber*) cacheSize
    completionHandler: (void (^)(OAIComAdobeCqSocialDatastoreOpImplSocialMSResourceProviderFactoryInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param solrZkTimeout  (optional)
/// @param solrCommit  (optional)
/// @param cacheOn  (optional)
/// @param concurrencyLevel  (optional)
/// @param cacheStartSize  (optional)
/// @param cacheTtl  (optional)
/// @param cacheSize  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeCqSocialDatastoreRdbImplSocialRDBResourceProviderFactorInfo*
-(NSURLSessionTask*) comAdobeCqSocialDatastoreRdbImplSocialRDBResourceProviderFactorWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    solrZkTimeout: (NSString*) solrZkTimeout
    solrCommit: (NSString*) solrCommit
    cacheOn: (NSNumber*) cacheOn
    concurrencyLevel: (NSNumber*) concurrencyLevel
    cacheStartSize: (NSNumber*) cacheStartSize
    cacheTtl: (NSNumber*) cacheTtl
    cacheSize: (NSNumber*) cacheSize
    completionHandler: (void (^)(OAIComAdobeCqSocialDatastoreRdbImplSocialRDBResourceProviderFactorInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param isMemberCheck  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeCqSocialEnablementAdaptorsEnablementLearningPathAdaptorFInfo*
-(NSURLSessionTask*) comAdobeCqSocialEnablementAdaptorsEnablementLearningPathAdaptorFWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    isMemberCheck: (NSNumber*) isMemberCheck
    completionHandler: (void (^)(OAIComAdobeCqSocialEnablementAdaptorsEnablementLearningPathAdaptorFInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param isMemberCheck  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeCqSocialEnablementAdaptorsEnablementResourceAdaptorFactoInfo*
-(NSURLSessionTask*) comAdobeCqSocialEnablementAdaptorsEnablementResourceAdaptorFactoWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    isMemberCheck: (NSNumber*) isMemberCheck
    completionHandler: (void (^)(OAIComAdobeCqSocialEnablementAdaptorsEnablementResourceAdaptorFactoInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param fieldWhitelist  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeCqSocialEnablementLearningpathEndpointsImplEnablementLInfo*
-(NSURLSessionTask*) comAdobeCqSocialEnablementLearningpathEndpointsImplEnablementLWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    fieldWhitelist: (NSArray<NSString*>*) fieldWhitelist
    completionHandler: (void (^)(OAIComAdobeCqSocialEnablementLearningpathEndpointsImplEnablementLInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param fieldWhitelist  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeCqSocialEnablementResourceEndpointsImplEnablementResouInfo*
-(NSURLSessionTask*) comAdobeCqSocialEnablementResourceEndpointsImplEnablementResouWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    fieldWhitelist: (NSArray<NSString*>*) fieldWhitelist
    completionHandler: (void (^)(OAIComAdobeCqSocialEnablementResourceEndpointsImplEnablementResouInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param serviceRanking  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeCqSocialEnablementServicesImplAuthorMarkerImplInfo*
-(NSURLSessionTask*) comAdobeCqSocialEnablementServicesImplAuthorMarkerImplWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    serviceRanking: (NSNumber*) serviceRanking
    completionHandler: (void (^)(OAIComAdobeCqSocialEnablementServicesImplAuthorMarkerImplInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param slingServletSelectors  (optional)
/// @param slingServletExtensions  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeCqSocialFilelibraryClientEndpointsFilelibraryDownloadGeInfo*
-(NSURLSessionTask*) comAdobeCqSocialFilelibraryClientEndpointsFilelibraryDownloadGeWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    slingServletSelectors: (NSString*) slingServletSelectors
    slingServletExtensions: (NSString*) slingServletExtensions
    completionHandler: (void (^)(OAIComAdobeCqSocialFilelibraryClientEndpointsFilelibraryDownloadGeInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param fieldWhitelist  (optional)
/// @param attachmentTypeBlacklist  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeCqSocialFilelibraryClientEndpointsImplFileLibraryOperaInfo*
-(NSURLSessionTask*) comAdobeCqSocialFilelibraryClientEndpointsImplFileLibraryOperaWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    fieldWhitelist: (NSArray<NSString*>*) fieldWhitelist
    attachmentTypeBlacklist: (NSArray<NSString*>*) attachmentTypeBlacklist
    completionHandler: (void (^)(OAIComAdobeCqSocialFilelibraryClientEndpointsImplFileLibraryOperaInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param fieldWhitelist  (optional)
/// @param attachmentTypeBlacklist  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeCqSocialForumClientEndpointsImplForumOperationsServiceInfo*
-(NSURLSessionTask*) comAdobeCqSocialForumClientEndpointsImplForumOperationsServiceWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    fieldWhitelist: (NSArray<NSString*>*) fieldWhitelist
    attachmentTypeBlacklist: (NSArray<NSString*>*) attachmentTypeBlacklist
    completionHandler: (void (^)(OAIComAdobeCqSocialForumClientEndpointsImplForumOperationsServiceInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param extensionOrder  (optional)
/// @param flushForumontopic  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeCqSocialForumDispatcherImplFlushOperationsInfo*
-(NSURLSessionTask*) comAdobeCqSocialForumDispatcherImplFlushOperationsWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    extensionOrder: (NSNumber*) extensionOrder
    flushForumontopic: (NSNumber*) flushForumontopic
    completionHandler: (void (^)(OAIComAdobeCqSocialForumDispatcherImplFlushOperationsInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param groupListingPaginationEnable  (optional)
/// @param groupListingLazyloadingEnable  (optional)
/// @param pageSize  (optional)
/// @param priority  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeCqSocialGroupClientImplCommunityGroupCollectionComponenInfo*
-(NSURLSessionTask*) comAdobeCqSocialGroupClientImplCommunityGroupCollectionComponenWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    groupListingPaginationEnable: (NSNumber*) groupListingPaginationEnable
    groupListingLazyloadingEnable: (NSNumber*) groupListingLazyloadingEnable
    pageSize: (NSNumber*) pageSize
    priority: (NSNumber*) priority
    completionHandler: (void (^)(OAIComAdobeCqSocialGroupClientImplCommunityGroupCollectionComponenInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param maxWaitTime  (optional)
/// @param minWaitBetweenRetries  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeCqSocialGroupImplGroupServiceImplInfo*
-(NSURLSessionTask*) comAdobeCqSocialGroupImplGroupServiceImplWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    maxWaitTime: (NSNumber*) maxWaitTime
    minWaitBetweenRetries: (NSNumber*) minWaitBetweenRetries
    completionHandler: (void (^)(OAIComAdobeCqSocialGroupImplGroupServiceImplInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param parameterGuavaCacheEnabled  (optional)
/// @param parameterGuavaCacheParams  (optional)
/// @param parameterGuavaCacheReload  (optional)
/// @param serviceRanking  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeCqSocialHandlebarsGuavaTemplateCacheImplInfo*
-(NSURLSessionTask*) comAdobeCqSocialHandlebarsGuavaTemplateCacheImplWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    parameterGuavaCacheEnabled: (NSNumber*) parameterGuavaCacheEnabled
    parameterGuavaCacheParams: (NSString*) parameterGuavaCacheParams
    parameterGuavaCacheReload: (NSNumber*) parameterGuavaCacheReload
    serviceRanking: (NSNumber*) serviceRanking
    completionHandler: (void (^)(OAIComAdobeCqSocialHandlebarsGuavaTemplateCacheImplInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param fieldWhitelist  (optional)
/// @param attachmentTypeBlacklist  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeCqSocialIdeationClientEndpointsImplIdeationOperationsSInfo*
-(NSURLSessionTask*) comAdobeCqSocialIdeationClientEndpointsImplIdeationOperationsSWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    fieldWhitelist: (NSArray<NSString*>*) fieldWhitelist
    attachmentTypeBlacklist: (NSArray<NSString*>*) attachmentTypeBlacklist
    completionHandler: (void (^)(OAIComAdobeCqSocialIdeationClientEndpointsImplIdeationOperationsSInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param fieldWhitelist  (optional)
/// @param attachmentTypeBlacklist  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeCqSocialJournalClientEndpointsImplJournalOperationsSerInfo*
-(NSURLSessionTask*) comAdobeCqSocialJournalClientEndpointsImplJournalOperationsSerWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    fieldWhitelist: (NSArray<NSString*>*) fieldWhitelist
    attachmentTypeBlacklist: (NSArray<NSString*>*) attachmentTypeBlacklist
    completionHandler: (void (^)(OAIComAdobeCqSocialJournalClientEndpointsImplJournalOperationsSerInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param fieldWhitelist  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeCqSocialMembersEndpointsImplCommunityMemberGroupProfileInfo*
-(NSURLSessionTask*) comAdobeCqSocialMembersEndpointsImplCommunityMemberGroupProfileWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    fieldWhitelist: (NSArray<NSString*>*) fieldWhitelist
    completionHandler: (void (^)(OAIComAdobeCqSocialMembersEndpointsImplCommunityMemberGroupProfileInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param fieldWhitelist  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeCqSocialMembersEndpointsImplCommunityMemberUserProfileOInfo*
-(NSURLSessionTask*) comAdobeCqSocialMembersEndpointsImplCommunityMemberUserProfileOWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    fieldWhitelist: (NSArray<NSString*>*) fieldWhitelist
    completionHandler: (void (^)(OAIComAdobeCqSocialMembersEndpointsImplCommunityMemberUserProfileOInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param everyoneLimit  (optional)
/// @param priority  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeCqSocialMembersImplCommunityMemberGroupProfileComponentFInfo*
-(NSURLSessionTask*) comAdobeCqSocialMembersImplCommunityMemberGroupProfileComponentFWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    everyoneLimit: (NSNumber*) everyoneLimit
    priority: (NSNumber*) priority
    completionHandler: (void (^)(OAIComAdobeCqSocialMembersImplCommunityMemberGroupProfileComponentFInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param messageProperties  (optional)
/// @param messageBoxSizeLimit  (optional)
/// @param messageCountLimit  (optional)
/// @param notifyFailure  (optional)
/// @param failureMessageFrom  (optional)
/// @param failureTemplatePath  (optional)
/// @param maxRetries  (optional)
/// @param minWaitBetweenRetries  (optional)
/// @param countUpdatePoolSize  (optional)
/// @param inboxPath  (optional)
/// @param sentitemsPath  (optional)
/// @param supportAttachments  (optional)
/// @param supportGroupMessaging  (optional)
/// @param maxTotalRecipients  (optional)
/// @param batchSize  (optional)
/// @param maxTotalAttachmentSize  (optional)
/// @param attachmentTypeBlacklist  (optional)
/// @param allowedAttachmentTypes  (optional)
/// @param serviceSelector  (optional)
/// @param fieldWhitelist  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeCqSocialMessagingClientEndpointsImplMessagingOperationInfo*
-(NSURLSessionTask*) comAdobeCqSocialMessagingClientEndpointsImplMessagingOperationWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    messageProperties: (NSArray<NSString*>*) messageProperties
    messageBoxSizeLimit: (NSNumber*) messageBoxSizeLimit
    messageCountLimit: (NSNumber*) messageCountLimit
    notifyFailure: (NSNumber*) notifyFailure
    failureMessageFrom: (NSString*) failureMessageFrom
    failureTemplatePath: (NSString*) failureTemplatePath
    maxRetries: (NSNumber*) maxRetries
    minWaitBetweenRetries: (NSNumber*) minWaitBetweenRetries
    countUpdatePoolSize: (NSNumber*) countUpdatePoolSize
    inboxPath: (NSString*) inboxPath
    sentitemsPath: (NSString*) sentitemsPath
    supportAttachments: (NSNumber*) supportAttachments
    supportGroupMessaging: (NSNumber*) supportGroupMessaging
    maxTotalRecipients: (NSNumber*) maxTotalRecipients
    batchSize: (NSNumber*) batchSize
    maxTotalAttachmentSize: (NSNumber*) maxTotalAttachmentSize
    attachmentTypeBlacklist: (NSArray<NSString*>*) attachmentTypeBlacklist
    allowedAttachmentTypes: (NSArray<NSString*>*) allowedAttachmentTypes
    serviceSelector: (NSString*) serviceSelector
    fieldWhitelist: (NSArray<NSString*>*) fieldWhitelist
    completionHandler: (void (^)(OAIComAdobeCqSocialMessagingClientEndpointsImplMessagingOperationInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param resourceTypeFilters  (optional)
/// @param priority  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeCqSocialModerationDashboardApiFilterGroupSocialComponenInfo*
-(NSURLSessionTask*) comAdobeCqSocialModerationDashboardApiFilterGroupSocialComponenWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    resourceTypeFilters: (NSArray<NSString*>*) resourceTypeFilters
    priority: (NSNumber*) priority
    completionHandler: (void (^)(OAIComAdobeCqSocialModerationDashboardApiFilterGroupSocialComponenInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param priority  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeCqSocialModerationDashboardApiModerationDashboardSocialInfo*
-(NSURLSessionTask*) comAdobeCqSocialModerationDashboardApiModerationDashboardSocialWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    priority: (NSNumber*) priority
    completionHandler: (void (^)(OAIComAdobeCqSocialModerationDashboardApiModerationDashboardSocialInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param priority  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeCqSocialModerationDashboardApiUserDetailsSocialComponenInfo*
-(NSURLSessionTask*) comAdobeCqSocialModerationDashboardApiUserDetailsSocialComponenWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    priority: (NSNumber*) priority
    completionHandler: (void (^)(OAIComAdobeCqSocialModerationDashboardApiUserDetailsSocialComponenInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param resourceTypeFilters  (optional)
/// @param priority  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeCqSocialModerationDashboardInternalImplFilterGroupSociInfo*
-(NSURLSessionTask*) comAdobeCqSocialModerationDashboardInternalImplFilterGroupSociWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    resourceTypeFilters: (NSArray<NSString*>*) resourceTypeFilters
    priority: (NSNumber*) priority
    completionHandler: (void (^)(OAIComAdobeCqSocialModerationDashboardInternalImplFilterGroupSociInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param eventTopics  (optional)
/// @param eventFilter  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeCqSocialNotificationsImplMentionsRouterInfo*
-(NSURLSessionTask*) comAdobeCqSocialNotificationsImplMentionsRouterWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    eventTopics: (NSString*) eventTopics
    eventFilter: (NSString*) eventFilter
    completionHandler: (void (^)(OAIComAdobeCqSocialNotificationsImplMentionsRouterInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param maxUnreadNotificationCount  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeCqSocialNotificationsImplNotificationManagerImplInfo*
-(NSURLSessionTask*) comAdobeCqSocialNotificationsImplNotificationManagerImplWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    maxUnreadNotificationCount: (NSNumber*) maxUnreadNotificationCount
    completionHandler: (void (^)(OAIComAdobeCqSocialNotificationsImplNotificationManagerImplInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param eventTopics  (optional)
/// @param eventFilter  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeCqSocialNotificationsImplNotificationsRouterInfo*
-(NSURLSessionTask*) comAdobeCqSocialNotificationsImplNotificationsRouterWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    eventTopics: (NSString*) eventTopics
    eventFilter: (NSString*) eventFilter
    completionHandler: (void (^)(OAIComAdobeCqSocialNotificationsImplNotificationsRouterInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param fieldWhitelist  (optional)
/// @param attachmentTypeBlacklist  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeCqSocialQnaClientEndpointsImplQnaForumOperationsServicInfo*
-(NSURLSessionTask*) comAdobeCqSocialQnaClientEndpointsImplQnaForumOperationsServicWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    fieldWhitelist: (NSArray<NSString*>*) fieldWhitelist
    attachmentTypeBlacklist: (NSArray<NSString*>*) attachmentTypeBlacklist
    completionHandler: (void (^)(OAIComAdobeCqSocialQnaClientEndpointsImplQnaForumOperationsServicInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param cqSocialReportingAnalyticsPollingImporterInterval  (optional)
/// @param cqSocialReportingAnalyticsPollingImporterPageSize  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeCqSocialReportingAnalyticsServicesImplAnalyticsReportIInfo*
-(NSURLSessionTask*) comAdobeCqSocialReportingAnalyticsServicesImplAnalyticsReportIWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    cqSocialReportingAnalyticsPollingImporterInterval: (NSNumber*) cqSocialReportingAnalyticsPollingImporterInterval
    cqSocialReportingAnalyticsPollingImporterPageSize: (NSNumber*) cqSocialReportingAnalyticsPollingImporterPageSize
    completionHandler: (void (^)(OAIComAdobeCqSocialReportingAnalyticsServicesImplAnalyticsReportIInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param reportFetchDelay  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeCqSocialReportingAnalyticsServicesImplAnalyticsReportMInfo*
-(NSURLSessionTask*) comAdobeCqSocialReportingAnalyticsServicesImplAnalyticsReportMWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    reportFetchDelay: (NSNumber*) reportFetchDelay
    completionHandler: (void (^)(OAIComAdobeCqSocialReportingAnalyticsServicesImplAnalyticsReportMInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param cqSocialConsoleAnalyticsSitesMapping  (optional)
/// @param priority  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeCqSocialReportingAnalyticsServicesImplSiteTrendReportSInfo*
-(NSURLSessionTask*) comAdobeCqSocialReportingAnalyticsServicesImplSiteTrendReportSWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    cqSocialConsoleAnalyticsSitesMapping: (NSArray<NSString*>*) cqSocialConsoleAnalyticsSitesMapping
    priority: (NSNumber*) priority
    completionHandler: (void (^)(OAIComAdobeCqSocialReportingAnalyticsServicesImplSiteTrendReportSInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param fieldWhitelist  (optional)
/// @param attachmentTypeBlacklist  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeCqSocialReviewClientEndpointsImplReviewOperationsServiInfo*
-(NSURLSessionTask*) comAdobeCqSocialReviewClientEndpointsImplReviewOperationsServiWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    fieldWhitelist: (NSArray<NSString*>*) fieldWhitelist
    attachmentTypeBlacklist: (NSArray<NSString*>*) attachmentTypeBlacklist
    completionHandler: (void (^)(OAIComAdobeCqSocialReviewClientEndpointsImplReviewOperationsServiInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param slingServletSelectors  (optional)
/// @param slingServletExtensions  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeCqSocialScfCoreOperationsImplSocialOperationsServletInfo*
-(NSURLSessionTask*) comAdobeCqSocialScfCoreOperationsImplSocialOperationsServletWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    slingServletSelectors: (NSString*) slingServletSelectors
    slingServletExtensions: (NSString*) slingServletExtensions
    completionHandler: (void (^)(OAIComAdobeCqSocialScfCoreOperationsImplSocialOperationsServletInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param slingServletSelectors  (optional)
/// @param slingServletExtensions  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeCqSocialScfEndpointsImplDefaultSocialGetServletInfo*
-(NSURLSessionTask*) comAdobeCqSocialScfEndpointsImplDefaultSocialGetServletWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    slingServletSelectors: (NSArray<NSString*>*) slingServletSelectors
    slingServletExtensions: (NSString*) slingServletExtensions
    completionHandler: (void (^)(OAIComAdobeCqSocialScfEndpointsImplDefaultSocialGetServletInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param eventTopics  (optional)
/// @param eventFilter  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeCqSocialScoringImplScoringEventListenerInfo*
-(NSURLSessionTask*) comAdobeCqSocialScoringImplScoringEventListenerWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    eventTopics: (NSString*) eventTopics
    eventFilter: (NSString*) eventFilter
    completionHandler: (void (^)(OAIComAdobeCqSocialScoringImplScoringEventListenerInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param enableFallback  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeCqSocialServiceusersInternalImplServiceUserWrapperImplInfo*
-(NSURLSessionTask*) comAdobeCqSocialServiceusersInternalImplServiceUserWrapperImplWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    enableFallback: (NSNumber*) enableFallback
    completionHandler: (void (^)(OAIComAdobeCqSocialServiceusersInternalImplServiceUserWrapperImplInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param fieldWhitelist  (optional)
/// @param sitePathFilters  (optional)
/// @param sitePackageGroup  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeCqSocialSiteEndpointsImplSiteOperationServiceInfo*
-(NSURLSessionTask*) comAdobeCqSocialSiteEndpointsImplSiteOperationServiceWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    fieldWhitelist: (NSArray<NSString*>*) fieldWhitelist
    sitePathFilters: (NSArray<NSString*>*) sitePathFilters
    sitePackageGroup: (NSString*) sitePackageGroup
    completionHandler: (void (^)(OAIComAdobeCqSocialSiteEndpointsImplSiteOperationServiceInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param cqSocialConsoleAnalyticsComponents  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeCqSocialSiteImplAnalyticsComponentConfigurationServiceImInfo*
-(NSURLSessionTask*) comAdobeCqSocialSiteImplAnalyticsComponentConfigurationServiceImWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    cqSocialConsoleAnalyticsComponents: (NSArray<NSString*>*) cqSocialConsoleAnalyticsComponents
    completionHandler: (void (^)(OAIComAdobeCqSocialSiteImplAnalyticsComponentConfigurationServiceImInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param componentsUsingTags  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeCqSocialSiteImplSiteConfiguratorImplInfo*
-(NSURLSessionTask*) comAdobeCqSocialSiteImplSiteConfiguratorImplWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    componentsUsingTags: (NSArray<NSString*>*) componentsUsingTags
    completionHandler: (void (^)(OAIComAdobeCqSocialSiteImplSiteConfiguratorImplInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param srpType  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeCqSocialSrpImplSocialSolrConnectorInfo*
-(NSURLSessionTask*) comAdobeCqSocialSrpImplSocialSolrConnectorWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    srpType: (NSString*) srpType
    completionHandler: (void (^)(OAIComAdobeCqSocialSrpImplSocialSolrConnectorInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param enabled  (optional)
/// @param agentName  (optional)
/// @param diffPath  (optional)
/// @param propertyNames  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeCqSocialSyncImplDiffChangesObserverInfo*
-(NSURLSessionTask*) comAdobeCqSocialSyncImplDiffChangesObserverWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    enabled: (NSNumber*) enabled
    agentName: (NSString*) agentName
    diffPath: (NSString*) diffPath
    propertyNames: (NSString*) propertyNames
    completionHandler: (void (^)(OAIComAdobeCqSocialSyncImplDiffChangesObserverInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param nodetypes  (optional)
/// @param ignorableprops  (optional)
/// @param ignorablenodes  (optional)
/// @param enabled  (optional)
/// @param distfolders  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeCqSocialSyncImplGroupSyncListenerImplInfo*
-(NSURLSessionTask*) comAdobeCqSocialSyncImplGroupSyncListenerImplWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    nodetypes: (NSArray<NSString*>*) nodetypes
    ignorableprops: (NSArray<NSString*>*) ignorableprops
    ignorablenodes: (NSString*) ignorablenodes
    enabled: (NSNumber*) enabled
    distfolders: (NSString*) distfolders
    completionHandler: (void (^)(OAIComAdobeCqSocialSyncImplGroupSyncListenerImplInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param activeRunModes  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeCqSocialSyncImplPublisherSyncServiceImplInfo*
-(NSURLSessionTask*) comAdobeCqSocialSyncImplPublisherSyncServiceImplWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    activeRunModes: (NSArray<NSString*>*) activeRunModes
    completionHandler: (void (^)(OAIComAdobeCqSocialSyncImplPublisherSyncServiceImplInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param nodetypes  (optional)
/// @param ignorableprops  (optional)
/// @param ignorablenodes  (optional)
/// @param enabled  (optional)
/// @param distfolders  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeCqSocialSyncImplUserSyncListenerImplInfo*
-(NSURLSessionTask*) comAdobeCqSocialSyncImplUserSyncListenerImplWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    nodetypes: (NSArray<NSString*>*) nodetypes
    ignorableprops: (NSArray<NSString*>*) ignorableprops
    ignorablenodes: (NSArray<NSString*>*) ignorablenodes
    enabled: (NSNumber*) enabled
    distfolders: (NSArray<NSString*>*) distfolders
    completionHandler: (void (^)(OAIComAdobeCqSocialSyncImplUserSyncListenerImplInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param translateLanguage  (optional)
/// @param translateDisplay  (optional)
/// @param translateAttribution  (optional)
/// @param translateCaching  (optional)
/// @param translateSmartRendering  (optional)
/// @param translateCachingDuration  (optional)
/// @param translateSessionSaveInterval  (optional)
/// @param translateSessionSaveBatchLimit  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeCqSocialTranslationImplTranslationServiceConfigManagerInfo*
-(NSURLSessionTask*) comAdobeCqSocialTranslationImplTranslationServiceConfigManagerWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    translateLanguage: (NSString*) translateLanguage
    translateDisplay: (NSString*) translateDisplay
    translateAttribution: (NSNumber*) translateAttribution
    translateCaching: (NSString*) translateCaching
    translateSmartRendering: (NSString*) translateSmartRendering
    translateCachingDuration: (NSString*) translateCachingDuration
    translateSessionSaveInterval: (NSString*) translateSessionSaveInterval
    translateSessionSaveBatchLimit: (NSString*) translateSessionSaveBatchLimit
    completionHandler: (void (^)(OAIComAdobeCqSocialTranslationImplTranslationServiceConfigManagerInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param eventTopics  (optional)
/// @param eventFilter  (optional)
/// @param translateListenerType  (optional)
/// @param translatePropertyList  (optional)
/// @param poolSize  (optional)
/// @param maxPoolSize  (optional)
/// @param queueSize  (optional)
/// @param keepAliveTime  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeCqSocialTranslationImplUGCLanguageDetectorInfo*
-(NSURLSessionTask*) comAdobeCqSocialTranslationImplUGCLanguageDetectorWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    eventTopics: (NSString*) eventTopics
    eventFilter: (NSString*) eventFilter
    translateListenerType: (NSArray<NSString*>*) translateListenerType
    translatePropertyList: (NSArray<NSString*>*) translatePropertyList
    poolSize: (NSNumber*) poolSize
    maxPoolSize: (NSNumber*) maxPoolSize
    queueSize: (NSNumber*) queueSize
    keepAliveTime: (NSNumber*) keepAliveTime
    completionHandler: (void (^)(OAIComAdobeCqSocialTranslationImplUGCLanguageDetectorInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param threadPoolSize  (optional)
/// @param delayTime  (optional)
/// @param workerSleepTime  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeCqSocialUgcbaseDispatcherImplFlushServiceImplInfo*
-(NSURLSessionTask*) comAdobeCqSocialUgcbaseDispatcherImplFlushServiceImplWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    threadPoolSize: (NSNumber*) threadPoolSize
    delayTime: (NSNumber*) delayTime
    workerSleepTime: (NSNumber*) workerSleepTime
    completionHandler: (void (^)(OAIComAdobeCqSocialUgcbaseDispatcherImplFlushServiceImplInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param poolSize  (optional)
/// @param maxPoolSize  (optional)
/// @param queueSize  (optional)
/// @param keepAliveTime  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeCqSocialUgcbaseImplAysncReverseReplicatorImplInfo*
-(NSURLSessionTask*) comAdobeCqSocialUgcbaseImplAysncReverseReplicatorImplWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    poolSize: (NSNumber*) poolSize
    maxPoolSize: (NSNumber*) maxPoolSize
    queueSize: (NSNumber*) queueSize
    keepAliveTime: (NSNumber*) keepAliveTime
    completionHandler: (void (^)(OAIComAdobeCqSocialUgcbaseImplAysncReverseReplicatorImplInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param isPrimaryPublisher  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeCqSocialUgcbaseImplPublisherConfigurationImplInfo*
-(NSURLSessionTask*) comAdobeCqSocialUgcbaseImplPublisherConfigurationImplWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    isPrimaryPublisher: (NSNumber*) isPrimaryPublisher
    completionHandler: (void (^)(OAIComAdobeCqSocialUgcbaseImplPublisherConfigurationImplInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param legacyCloudUGCPathMapping  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeCqSocialUgcbaseImplSocialUtilsImplInfo*
-(NSURLSessionTask*) comAdobeCqSocialUgcbaseImplSocialUtilsImplWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    legacyCloudUGCPathMapping: (NSNumber*) legacyCloudUGCPathMapping
    completionHandler: (void (^)(OAIComAdobeCqSocialUgcbaseImplSocialUtilsImplInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param automoderationSequence  (optional)
/// @param automoderationOnfailurestop  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeCqSocialUgcbaseModerationImplAutoModerationImplInfo*
-(NSURLSessionTask*) comAdobeCqSocialUgcbaseModerationImplAutoModerationImplWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    automoderationSequence: (NSArray<NSString*>*) automoderationSequence
    automoderationOnfailurestop: (NSNumber*) automoderationOnfailurestop
    completionHandler: (void (^)(OAIComAdobeCqSocialUgcbaseModerationImplAutoModerationImplInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param watchwordsPositive  (optional)
/// @param watchwordsNegative  (optional)
/// @param watchwordsPath  (optional)
/// @param sentimentPath  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeCqSocialUgcbaseModerationImplSentimentProcessInfo*
-(NSURLSessionTask*) comAdobeCqSocialUgcbaseModerationImplSentimentProcessWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    watchwordsPositive: (NSArray<NSString*>*) watchwordsPositive
    watchwordsNegative: (NSArray<NSString*>*) watchwordsNegative
    watchwordsPath: (NSString*) watchwordsPath
    sentimentPath: (NSString*) sentimentPath
    completionHandler: (void (^)(OAIComAdobeCqSocialUgcbaseModerationImplSentimentProcessInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param defaultAttachmentTypeBlacklist  (optional)
/// @param baselineAttachmentTypeBlacklist  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeCqSocialUgcbaseSecurityImplDefaultAttachmentTypeBlackliInfo*
-(NSURLSessionTask*) comAdobeCqSocialUgcbaseSecurityImplDefaultAttachmentTypeBlackliWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    defaultAttachmentTypeBlacklist: (NSArray<NSString*>*) defaultAttachmentTypeBlacklist
    baselineAttachmentTypeBlacklist: (NSArray<NSString*>*) baselineAttachmentTypeBlacklist
    completionHandler: (void (^)(OAIComAdobeCqSocialUgcbaseSecurityImplDefaultAttachmentTypeBlackliInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param parameterWhitelist  (optional)
/// @param parameterWhitelistPrefixes  (optional)
/// @param binaryParameterWhitelist  (optional)
/// @param modifierWhitelist  (optional)
/// @param operationWhitelist  (optional)
/// @param operationWhitelistPrefixes  (optional)
/// @param typehintWhitelist  (optional)
/// @param resourcetypeWhitelist  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeCqSocialUgcbaseSecurityImplSaferSlingPostValidatorImplInfo*
-(NSURLSessionTask*) comAdobeCqSocialUgcbaseSecurityImplSaferSlingPostValidatorImplWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    parameterWhitelist: (NSArray<NSString*>*) parameterWhitelist
    parameterWhitelistPrefixes: (NSArray<NSString*>*) parameterWhitelistPrefixes
    binaryParameterWhitelist: (NSArray<NSString*>*) binaryParameterWhitelist
    modifierWhitelist: (NSArray<NSString*>*) modifierWhitelist
    operationWhitelist: (NSArray<NSString*>*) operationWhitelist
    operationWhitelistPrefixes: (NSArray<NSString*>*) operationWhitelistPrefixes
    typehintWhitelist: (NSArray<NSString*>*) typehintWhitelist
    resourcetypeWhitelist: (NSArray<NSString*>*) resourcetypeWhitelist
    completionHandler: (void (^)(OAIComAdobeCqSocialUgcbaseSecurityImplSaferSlingPostValidatorImplInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param slingServletExtensions  (optional)
/// @param slingServletPaths  (optional)
/// @param slingServletMethods  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeCqSocialUserEndpointsImplUsersGroupFromPublishServletInfo*
-(NSURLSessionTask*) comAdobeCqSocialUserEndpointsImplUsersGroupFromPublishServletWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    slingServletExtensions: (NSString*) slingServletExtensions
    slingServletPaths: (NSString*) slingServletPaths
    slingServletMethods: (NSString*) slingServletMethods
    completionHandler: (void (^)(OAIComAdobeCqSocialUserEndpointsImplUsersGroupFromPublishServletInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param enable  (optional)
/// @param agentConfiguration  (optional)
/// @param contextPath  (optional)
/// @param disabledCipherSuites  (optional)
/// @param enabledCipherSuites  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeCqSocialUserImplTransportHttpToPublisherInfo*
-(NSURLSessionTask*) comAdobeCqSocialUserImplTransportHttpToPublisherWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    enable: (NSNumber*) enable
    agentConfiguration: (NSArray<NSString*>*) agentConfiguration
    contextPath: (NSString*) contextPath
    disabledCipherSuites: (NSArray<NSString*>*) disabledCipherSuites
    enabledCipherSuites: (NSArray<NSString*>*) enabledCipherSuites
    completionHandler: (void (^)(OAIComAdobeCqSocialUserImplTransportHttpToPublisherInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param resourceTypes  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeCqUiWcmCommonsInternalServletsRteRTEFilterServletFactInfo*
-(NSURLSessionTask*) comAdobeCqUiWcmCommonsInternalServletsRteRTEFilterServletFactWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    resourceTypes: (NSArray<NSString*>*) resourceTypes
    completionHandler: (void (^)(OAIComAdobeCqUiWcmCommonsInternalServletsRteRTEFilterServletFactInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param deletePathRegexps  (optional)
/// @param deleteSql2Query  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeCqUpgradesCleanupImplUpgradeContentCleanupInfo*
-(NSURLSessionTask*) comAdobeCqUpgradesCleanupImplUpgradeContentCleanupWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    deletePathRegexps: (NSArray<NSString*>*) deletePathRegexps
    deleteSql2Query: (NSString*) deleteSql2Query
    completionHandler: (void (^)(OAIComAdobeCqUpgradesCleanupImplUpgradeContentCleanupInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param deleteNameRegexps  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeCqUpgradesCleanupImplUpgradeInstallFolderCleanupInfo*
-(NSURLSessionTask*) comAdobeCqUpgradesCleanupImplUpgradeInstallFolderCleanupWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    deleteNameRegexps: (NSArray<NSString*>*) deleteNameRegexps
    completionHandler: (void (^)(OAIComAdobeCqUpgradesCleanupImplUpgradeInstallFolderCleanupInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param threshold  (optional)
/// @param jobTopicName  (optional)
/// @param emailEnabled  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeCqWcmJobsAsyncImplAsyncDeleteConfigProviderServiceInfo*
-(NSURLSessionTask*) comAdobeCqWcmJobsAsyncImplAsyncDeleteConfigProviderServiceWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    threshold: (NSNumber*) threshold
    jobTopicName: (NSString*) jobTopicName
    emailEnabled: (NSNumber*) emailEnabled
    completionHandler: (void (^)(OAIComAdobeCqWcmJobsAsyncImplAsyncDeleteConfigProviderServiceInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param schedulerExpression  (optional)
/// @param jobPurgeThreshold  (optional)
/// @param jobPurgeMaxJobs  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeCqWcmJobsAsyncImplAsyncJobCleanUpTaskInfo*
-(NSURLSessionTask*) comAdobeCqWcmJobsAsyncImplAsyncJobCleanUpTaskWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    schedulerExpression: (NSString*) schedulerExpression
    jobPurgeThreshold: (NSNumber*) jobPurgeThreshold
    jobPurgeMaxJobs: (NSNumber*) jobPurgeMaxJobs
    completionHandler: (void (^)(OAIComAdobeCqWcmJobsAsyncImplAsyncJobCleanUpTaskInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param threshold  (optional)
/// @param jobTopicName  (optional)
/// @param emailEnabled  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeCqWcmJobsAsyncImplAsyncMoveConfigProviderServiceInfo*
-(NSURLSessionTask*) comAdobeCqWcmJobsAsyncImplAsyncMoveConfigProviderServiceWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    threshold: (NSNumber*) threshold
    jobTopicName: (NSString*) jobTopicName
    emailEnabled: (NSNumber*) emailEnabled
    completionHandler: (void (^)(OAIComAdobeCqWcmJobsAsyncImplAsyncMoveConfigProviderServiceInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param threshold  (optional)
/// @param jobTopicName  (optional)
/// @param emailEnabled  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeCqWcmJobsAsyncImplAsyncPageMoveConfigProviderServiceInfo*
-(NSURLSessionTask*) comAdobeCqWcmJobsAsyncImplAsyncPageMoveConfigProviderServiceWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    threshold: (NSNumber*) threshold
    jobTopicName: (NSString*) jobTopicName
    emailEnabled: (NSNumber*) emailEnabled
    completionHandler: (void (^)(OAIComAdobeCqWcmJobsAsyncImplAsyncPageMoveConfigProviderServiceInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param eventFilter  (optional)
/// @param launchesEventhandlerThreadpoolMaxsize  (optional)
/// @param launchesEventhandlerThreadpoolPriority  (optional)
/// @param launchesEventhandlerUpdatelastmodification  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeCqWcmLaunchesImplLaunchesEventHandlerInfo*
-(NSURLSessionTask*) comAdobeCqWcmLaunchesImplLaunchesEventHandlerWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    eventFilter: (NSString*) eventFilter
    launchesEventhandlerThreadpoolMaxsize: (NSNumber*) launchesEventhandlerThreadpoolMaxsize
    launchesEventhandlerThreadpoolPriority: (NSString*) launchesEventhandlerThreadpoolPriority
    launchesEventhandlerUpdatelastmodification: (NSNumber*) launchesEventhandlerUpdatelastmodification
    completionHandler: (void (^)(OAIComAdobeCqWcmLaunchesImplLaunchesEventHandlerInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param cqWcmQrcodeServletWhitelist  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeCqWcmMobileQrcodeServletQRCodeImageGeneratorInfo*
-(NSURLSessionTask*) comAdobeCqWcmMobileQrcodeServletQRCodeImageGeneratorWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    cqWcmQrcodeServletWhitelist: (NSArray<NSString*>*) cqWcmQrcodeServletWhitelist
    completionHandler: (void (^)(OAIComAdobeCqWcmMobileQrcodeServletQRCodeImageGeneratorInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param size  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeCqWcmStyleInternalComponentStyleInfoCacheImplInfo*
-(NSURLSessionTask*) comAdobeCqWcmStyleInternalComponentStyleInfoCacheImplWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    size: (NSNumber*) size
    completionHandler: (void (^)(OAIComAdobeCqWcmStyleInternalComponentStyleInfoCacheImplInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param syncTranslationStateSchedulingFormat  (optional)
/// @param schedulingRepeatTranslationSchedulingFormat  (optional)
/// @param syncTranslationStateLockTimeoutInMinutes  (optional)
/// @param exportFormat  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeCqWcmTranslationImplTranslationPlatformConfigurationImplInfo*
-(NSURLSessionTask*) comAdobeCqWcmTranslationImplTranslationPlatformConfigurationImplWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    syncTranslationStateSchedulingFormat: (NSString*) syncTranslationStateSchedulingFormat
    schedulingRepeatTranslationSchedulingFormat: (NSString*) schedulingRepeatTranslationSchedulingFormat
    syncTranslationStateLockTimeoutInMinutes: (NSString*) syncTranslationStateLockTimeoutInMinutes
    exportFormat: (NSString*) exportFormat
    completionHandler: (void (^)(OAIComAdobeCqWcmTranslationImplTranslationPlatformConfigurationImplInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param portalOutboxes  (optional)
/// @param draftDataService  (optional)
/// @param draftMetadataService  (optional)
/// @param submitDataService  (optional)
/// @param submitMetadataService  (optional)
/// @param pendingSignDataService  (optional)
/// @param pendingSignMetadataService  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeFdFpConfigFormsPortalDraftsandSubmissionConfigServiceInfo*
-(NSURLSessionTask*) comAdobeFdFpConfigFormsPortalDraftsandSubmissionConfigServiceWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    portalOutboxes: (NSArray<NSString*>*) portalOutboxes
    draftDataService: (NSString*) draftDataService
    draftMetadataService: (NSString*) draftMetadataService
    submitDataService: (NSString*) submitDataService
    submitMetadataService: (NSString*) submitMetadataService
    pendingSignDataService: (NSString*) pendingSignDataService
    pendingSignMetadataService: (NSString*) pendingSignMetadataService
    completionHandler: (void (^)(OAIComAdobeFdFpConfigFormsPortalDraftsandSubmissionConfigServiceInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param formportalInterval  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeFdFpConfigFormsPortalSchedulerServiceInfo*
-(NSURLSessionTask*) comAdobeFdFpConfigFormsPortalSchedulerServiceWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    formportalInterval: (NSString*) formportalInterval
    completionHandler: (void (^)(OAIComAdobeFdFpConfigFormsPortalSchedulerServiceInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param alloweddataFileLocations  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeFormsCommonServiceImplDefaultDataProviderInfo*
-(NSURLSessionTask*) comAdobeFormsCommonServiceImplDefaultDataProviderWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    alloweddataFileLocations: (NSArray<NSString*>*) alloweddataFileLocations
    completionHandler: (void (^)(OAIComAdobeFormsCommonServiceImplDefaultDataProviderInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param tempStorageConfig  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeFormsCommonServiceImplFormsCommonConfigurationServiceImpInfo*
-(NSURLSessionTask*) comAdobeFormsCommonServiceImplFormsCommonConfigurationServiceImpWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    tempStorageConfig: (NSString*) tempStorageConfig
    completionHandler: (void (^)(OAIComAdobeFormsCommonServiceImplFormsCommonConfigurationServiceImpInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param schedulerExpression  (optional)
/// @param durationForTemporaryStorage  (optional)
/// @param durationForAnonymousStorage  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeFormsCommonServletTempCleanUpTaskInfo*
-(NSURLSessionTask*) comAdobeFormsCommonServletTempCleanUpTaskWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    schedulerExpression: (NSString*) schedulerExpression
    durationForTemporaryStorage: (NSString*) durationForTemporaryStorage
    durationForAnonymousStorage: (NSString*) durationForAnonymousStorage
    completionHandler: (void (^)(OAIComAdobeFormsCommonServletTempCleanUpTaskInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param queryLimit  (optional)
/// @param fileTypeExtensionMap  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeGraniteAcpPlatformPlatformServletInfo*
-(NSURLSessionTask*) comAdobeGraniteAcpPlatformPlatformServletWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    queryLimit: (NSNumber*) queryLimit
    fileTypeExtensionMap: (NSArray<NSString*>*) fileTypeExtensionMap
    completionHandler: (void (^)(OAIComAdobeGraniteAcpPlatformPlatformServletInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param aggregateRelationships  (optional)
/// @param aggregateDescendVirtual  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeGraniteActivitystreamsImplActivityManagerImplInfo*
-(NSURLSessionTask*) comAdobeGraniteActivitystreamsImplActivityManagerImplWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    aggregateRelationships: (NSArray<NSString*>*) aggregateRelationships
    aggregateDescendVirtual: (NSNumber*) aggregateDescendVirtual
    completionHandler: (void (^)(OAIComAdobeGraniteActivitystreamsImplActivityManagerImplInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param disabled  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeGraniteAnalyzerBaseSystemStatusServletInfo*
-(NSURLSessionTask*) comAdobeGraniteAnalyzerBaseSystemStatusServletWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    disabled: (NSNumber*) disabled
    completionHandler: (void (^)(OAIComAdobeGraniteAnalyzerBaseSystemStatusServletInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param disabled  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeGraniteAnalyzerScriptsCompileAllScriptsCompilerServletInfo*
-(NSURLSessionTask*) comAdobeGraniteAnalyzerScriptsCompileAllScriptsCompilerServletWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    disabled: (NSNumber*) disabled
    completionHandler: (void (^)(OAIComAdobeGraniteAnalyzerScriptsCompileAllScriptsCompilerServletInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param comAdobeCqCdnCdnRewriter  (optional)
/// @param comAdobeCqCloudConfigComponents  (optional)
/// @param comAdobeCqCloudConfigCore  (optional)
/// @param comAdobeCqCloudConfigUi  (optional)
/// @param comAdobeCqComAdobeCqEditor  (optional)
/// @param comAdobeCqComAdobeCqProjectsCore  (optional)
/// @param comAdobeCqComAdobeCqProjectsWcmCore  (optional)
/// @param comAdobeCqComAdobeCqUiCommons  (optional)
/// @param comAdobeCqComAdobeCqWcmStyle  (optional)
/// @param comAdobeCqCqActivitymapIntegration  (optional)
/// @param comAdobeCqCqContexthubCommons  (optional)
/// @param comAdobeCqCqDtm  (optional)
/// @param comAdobeCqCqHealthcheck  (optional)
/// @param comAdobeCqCqMultisiteTargeting  (optional)
/// @param comAdobeCqCqPreUpgradeCleanup  (optional)
/// @param comAdobeCqCqProductInfoProvider  (optional)
/// @param comAdobeCqCqRestSites  (optional)
/// @param comAdobeCqCqSecurityHc  (optional)
/// @param comAdobeCqDamCqDamSvgHandler  (optional)
/// @param comAdobeCqDamCqScene7Imaging  (optional)
/// @param comAdobeCqDtmReactorCore  (optional)
/// @param comAdobeCqDtmReactorUi  (optional)
/// @param comAdobeCqExpJspelResolver  (optional)
/// @param comAdobeCqInboxCqInbox  (optional)
/// @param comAdobeCqJsonSchemaParser  (optional)
/// @param comAdobeCqMediaCqMediaPublishingDpsFpCore  (optional)
/// @param comAdobeCqMobileCqMobileCaas  (optional)
/// @param comAdobeCqMobileCqMobileIndexBuilder  (optional)
/// @param comAdobeCqMobileCqMobilePhonegapBuild  (optional)
/// @param comAdobeCqMyspell  (optional)
/// @param comAdobeCqSampleWeRetailCore  (optional)
/// @param comAdobeCqScreensComAdobeCqScreensDcc  (optional)
/// @param comAdobeCqScreensComAdobeCqScreensMqCore  (optional)
/// @param comAdobeCqSocialCqSocialAsProvider  (optional)
/// @param comAdobeCqSocialCqSocialBadgingBasicImpl  (optional)
/// @param comAdobeCqSocialCqSocialBadgingImpl  (optional)
/// @param comAdobeCqSocialCqSocialCalendarImpl  (optional)
/// @param comAdobeCqSocialCqSocialContentFragmentsImpl  (optional)
/// @param comAdobeCqSocialCqSocialEnablementImpl  (optional)
/// @param comAdobeCqSocialCqSocialGraphImpl  (optional)
/// @param comAdobeCqSocialCqSocialIdeationImpl  (optional)
/// @param comAdobeCqSocialCqSocialJcrProvider  (optional)
/// @param comAdobeCqSocialCqSocialMembersImpl  (optional)
/// @param comAdobeCqSocialCqSocialMsProvider  (optional)
/// @param comAdobeCqSocialCqSocialNotificationsChannelsWeb  (optional)
/// @param comAdobeCqSocialCqSocialNotificationsImpl  (optional)
/// @param comAdobeCqSocialCqSocialRdbProvider  (optional)
/// @param comAdobeCqSocialCqSocialScfImpl  (optional)
/// @param comAdobeCqSocialCqSocialScoringBasicImpl  (optional)
/// @param comAdobeCqSocialCqSocialScoringImpl  (optional)
/// @param comAdobeCqSocialCqSocialServiceusersImpl  (optional)
/// @param comAdobeCqSocialCqSocialSrpImpl  (optional)
/// @param comAdobeCqSocialCqSocialUgcbaseImpl  (optional)
/// @param comAdobeDamCqDamCfmImpl  (optional)
/// @param comAdobeFormsFoundationFormsFoundationBase  (optional)
/// @param comAdobeGraniteApicontroller  (optional)
/// @param comAdobeGraniteAssetCore  (optional)
/// @param comAdobeGraniteAuthSso  (optional)
/// @param comAdobeGraniteBundlesHcImpl  (optional)
/// @param comAdobeGraniteCompatRouter  (optional)
/// @param comAdobeGraniteConf  (optional)
/// @param comAdobeGraniteConfUiCore  (optional)
/// @param comAdobeGraniteCors  (optional)
/// @param comAdobeGraniteCrxExplorer  (optional)
/// @param comAdobeGraniteCrxdeLite  (optional)
/// @param comAdobeGraniteCryptoConfig  (optional)
/// @param comAdobeGraniteCryptoExtension  (optional)
/// @param comAdobeGraniteCryptoFile  (optional)
/// @param comAdobeGraniteCryptoJcr  (optional)
/// @param comAdobeGraniteCsrf  (optional)
/// @param comAdobeGraniteDistributionCore  (optional)
/// @param comAdobeGraniteDropwizardMetrics  (optional)
/// @param comAdobeGraniteFragsImpl  (optional)
/// @param comAdobeGraniteGibson  (optional)
/// @param comAdobeGraniteInfocollector  (optional)
/// @param comAdobeGraniteInstallerFactoryPackages  (optional)
/// @param comAdobeGraniteJettySsl  (optional)
/// @param comAdobeGraniteJobsAsync  (optional)
/// @param comAdobeGraniteMaintenanceOak  (optional)
/// @param comAdobeGraniteMonitoringCore  (optional)
/// @param comAdobeGraniteQueries  (optional)
/// @param comAdobeGraniteReplicationHcImpl  (optional)
/// @param comAdobeGraniteRepositoryChecker  (optional)
/// @param comAdobeGraniteRepositoryHcImpl  (optional)
/// @param comAdobeGraniteRestAssets  (optional)
/// @param comAdobeGraniteSecurityUi  (optional)
/// @param comAdobeGraniteStartup  (optional)
/// @param comAdobeGraniteTagsoup  (optional)
/// @param comAdobeGraniteTaskmanagementCore  (optional)
/// @param comAdobeGraniteTaskmanagementWorkflow  (optional)
/// @param comAdobeGraniteUiClientlibsCompilerLess  (optional)
/// @param comAdobeGraniteUiClientlibsProcessorGcc  (optional)
/// @param comAdobeGraniteWebconsolePlugins  (optional)
/// @param comAdobeGraniteWorkflowConsole  (optional)
/// @param comAdobeXmpWorkerFilesNativeFragmentLinux  (optional)
/// @param comAdobeXmpWorkerFilesNativeFragmentMacosx  (optional)
/// @param comAdobeXmpWorkerFilesNativeFragmentWin  (optional)
/// @param comDayCommonsOsgiWrapperSimpleJndi  (optional)
/// @param comDayCqCqAuthhandler  (optional)
/// @param comDayCqCqCompatConfigupdate  (optional)
/// @param comDayCqCqLicensebranding  (optional)
/// @param comDayCqCqNotifcationImpl  (optional)
/// @param comDayCqCqReplicationAudit  (optional)
/// @param comDayCqCqSearchExt  (optional)
/// @param comDayCqDamCqDamAnnotationPrint  (optional)
/// @param comDayCqDamCqDamAssetUsage  (optional)
/// @param comDayCqDamCqDamS7dam  (optional)
/// @param comDayCqDamCqDamSimilaritysearch  (optional)
/// @param comDayCqDamDamWebdavSupport  (optional)
/// @param comDayCqPreUpgradeTasks  (optional)
/// @param comDayCqReplicationExtensions  (optional)
/// @param comDayCqWcmCqMsmCore  (optional)
/// @param comDayCqWcmCqWcmTranslation  (optional)
/// @param dayCommonsJrawio  (optional)
/// @param orgApacheAriesJmxWhiteboard  (optional)
/// @param orgApacheFelixHttpSslfilter  (optional)
/// @param orgApacheFelixOrgApacheFelixThreaddump  (optional)
/// @param orgApacheFelixWebconsolePluginsDs  (optional)
/// @param orgApacheFelixWebconsolePluginsEvent  (optional)
/// @param orgApacheFelixWebconsolePluginsMemoryusage  (optional)
/// @param orgApacheFelixWebconsolePluginsPackageadmin  (optional)
/// @param orgApacheJackrabbitOakAuthLdap  (optional)
/// @param orgApacheJackrabbitOakSegmentTar  (optional)
/// @param orgApacheJackrabbitOakSolrOsgi  (optional)
/// @param orgApacheSlingBundleresourceImpl  (optional)
/// @param orgApacheSlingCommonsFsclassloader  (optional)
/// @param orgApacheSlingCommonsLogWebconsole  (optional)
/// @param orgApacheSlingDatasource  (optional)
/// @param orgApacheSlingDiscoveryBase  (optional)
/// @param orgApacheSlingDiscoveryOak  (optional)
/// @param orgApacheSlingDiscoverySupport  (optional)
/// @param orgApacheSlingDistributionApi  (optional)
/// @param orgApacheSlingDistributionCore  (optional)
/// @param orgApacheSlingExtensionsWebconsolesecurityprovider  (optional)
/// @param orgApacheSlingHcWebconsole  (optional)
/// @param orgApacheSlingInstallerConsole  (optional)
/// @param orgApacheSlingInstallerProviderFile  (optional)
/// @param orgApacheSlingInstallerProviderJcr  (optional)
/// @param orgApacheSlingJcrDavex  (optional)
/// @param orgApacheSlingJcrResourcesecurity  (optional)
/// @param orgApacheSlingJmxProvider  (optional)
/// @param orgApacheSlingLaunchpadInstaller  (optional)
/// @param orgApacheSlingModelsImpl  (optional)
/// @param orgApacheSlingRepoinitParser  (optional)
/// @param orgApacheSlingResourceInventory  (optional)
/// @param orgApacheSlingResourceresolver  (optional)
/// @param orgApacheSlingScriptingJavascript  (optional)
/// @param orgApacheSlingScriptingJst  (optional)
/// @param orgApacheSlingScriptingSightlyJsProvider  (optional)
/// @param orgApacheSlingScriptingSightlyModelsProvider  (optional)
/// @param orgApacheSlingSecurity  (optional)
/// @param orgApacheSlingServletsCompat  (optional)
/// @param orgApacheSlingServletsGet  (optional)
/// @param orgApacheSlingStartupfilterDisabler  (optional)
/// @param orgApacheSlingTracer  (optional)
/// @param weRetailClientAppCore  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryInfo*
-(NSURLSessionTask*) comAdobeGraniteApicontrollerFilterResolverHookFactoryWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    comAdobeCqCdnCdnRewriter: (NSString*) comAdobeCqCdnCdnRewriter
    comAdobeCqCloudConfigComponents: (NSString*) comAdobeCqCloudConfigComponents
    comAdobeCqCloudConfigCore: (NSString*) comAdobeCqCloudConfigCore
    comAdobeCqCloudConfigUi: (NSString*) comAdobeCqCloudConfigUi
    comAdobeCqComAdobeCqEditor: (NSString*) comAdobeCqComAdobeCqEditor
    comAdobeCqComAdobeCqProjectsCore: (NSString*) comAdobeCqComAdobeCqProjectsCore
    comAdobeCqComAdobeCqProjectsWcmCore: (NSString*) comAdobeCqComAdobeCqProjectsWcmCore
    comAdobeCqComAdobeCqUiCommons: (NSString*) comAdobeCqComAdobeCqUiCommons
    comAdobeCqComAdobeCqWcmStyle: (NSString*) comAdobeCqComAdobeCqWcmStyle
    comAdobeCqCqActivitymapIntegration: (NSString*) comAdobeCqCqActivitymapIntegration
    comAdobeCqCqContexthubCommons: (NSString*) comAdobeCqCqContexthubCommons
    comAdobeCqCqDtm: (NSString*) comAdobeCqCqDtm
    comAdobeCqCqHealthcheck: (NSString*) comAdobeCqCqHealthcheck
    comAdobeCqCqMultisiteTargeting: (NSString*) comAdobeCqCqMultisiteTargeting
    comAdobeCqCqPreUpgradeCleanup: (NSString*) comAdobeCqCqPreUpgradeCleanup
    comAdobeCqCqProductInfoProvider: (NSString*) comAdobeCqCqProductInfoProvider
    comAdobeCqCqRestSites: (NSString*) comAdobeCqCqRestSites
    comAdobeCqCqSecurityHc: (NSString*) comAdobeCqCqSecurityHc
    comAdobeCqDamCqDamSvgHandler: (NSString*) comAdobeCqDamCqDamSvgHandler
    comAdobeCqDamCqScene7Imaging: (NSString*) comAdobeCqDamCqScene7Imaging
    comAdobeCqDtmReactorCore: (NSString*) comAdobeCqDtmReactorCore
    comAdobeCqDtmReactorUi: (NSString*) comAdobeCqDtmReactorUi
    comAdobeCqExpJspelResolver: (NSString*) comAdobeCqExpJspelResolver
    comAdobeCqInboxCqInbox: (NSString*) comAdobeCqInboxCqInbox
    comAdobeCqJsonSchemaParser: (NSString*) comAdobeCqJsonSchemaParser
    comAdobeCqMediaCqMediaPublishingDpsFpCore: (NSString*) comAdobeCqMediaCqMediaPublishingDpsFpCore
    comAdobeCqMobileCqMobileCaas: (NSString*) comAdobeCqMobileCqMobileCaas
    comAdobeCqMobileCqMobileIndexBuilder: (NSString*) comAdobeCqMobileCqMobileIndexBuilder
    comAdobeCqMobileCqMobilePhonegapBuild: (NSString*) comAdobeCqMobileCqMobilePhonegapBuild
    comAdobeCqMyspell: (NSString*) comAdobeCqMyspell
    comAdobeCqSampleWeRetailCore: (NSString*) comAdobeCqSampleWeRetailCore
    comAdobeCqScreensComAdobeCqScreensDcc: (NSString*) comAdobeCqScreensComAdobeCqScreensDcc
    comAdobeCqScreensComAdobeCqScreensMqCore: (NSString*) comAdobeCqScreensComAdobeCqScreensMqCore
    comAdobeCqSocialCqSocialAsProvider: (NSString*) comAdobeCqSocialCqSocialAsProvider
    comAdobeCqSocialCqSocialBadgingBasicImpl: (NSString*) comAdobeCqSocialCqSocialBadgingBasicImpl
    comAdobeCqSocialCqSocialBadgingImpl: (NSString*) comAdobeCqSocialCqSocialBadgingImpl
    comAdobeCqSocialCqSocialCalendarImpl: (NSString*) comAdobeCqSocialCqSocialCalendarImpl
    comAdobeCqSocialCqSocialContentFragmentsImpl: (NSString*) comAdobeCqSocialCqSocialContentFragmentsImpl
    comAdobeCqSocialCqSocialEnablementImpl: (NSString*) comAdobeCqSocialCqSocialEnablementImpl
    comAdobeCqSocialCqSocialGraphImpl: (NSString*) comAdobeCqSocialCqSocialGraphImpl
    comAdobeCqSocialCqSocialIdeationImpl: (NSString*) comAdobeCqSocialCqSocialIdeationImpl
    comAdobeCqSocialCqSocialJcrProvider: (NSString*) comAdobeCqSocialCqSocialJcrProvider
    comAdobeCqSocialCqSocialMembersImpl: (NSString*) comAdobeCqSocialCqSocialMembersImpl
    comAdobeCqSocialCqSocialMsProvider: (NSString*) comAdobeCqSocialCqSocialMsProvider
    comAdobeCqSocialCqSocialNotificationsChannelsWeb: (NSString*) comAdobeCqSocialCqSocialNotificationsChannelsWeb
    comAdobeCqSocialCqSocialNotificationsImpl: (NSString*) comAdobeCqSocialCqSocialNotificationsImpl
    comAdobeCqSocialCqSocialRdbProvider: (NSString*) comAdobeCqSocialCqSocialRdbProvider
    comAdobeCqSocialCqSocialScfImpl: (NSString*) comAdobeCqSocialCqSocialScfImpl
    comAdobeCqSocialCqSocialScoringBasicImpl: (NSString*) comAdobeCqSocialCqSocialScoringBasicImpl
    comAdobeCqSocialCqSocialScoringImpl: (NSString*) comAdobeCqSocialCqSocialScoringImpl
    comAdobeCqSocialCqSocialServiceusersImpl: (NSString*) comAdobeCqSocialCqSocialServiceusersImpl
    comAdobeCqSocialCqSocialSrpImpl: (NSString*) comAdobeCqSocialCqSocialSrpImpl
    comAdobeCqSocialCqSocialUgcbaseImpl: (NSString*) comAdobeCqSocialCqSocialUgcbaseImpl
    comAdobeDamCqDamCfmImpl: (NSString*) comAdobeDamCqDamCfmImpl
    comAdobeFormsFoundationFormsFoundationBase: (NSString*) comAdobeFormsFoundationFormsFoundationBase
    comAdobeGraniteApicontroller: (NSString*) comAdobeGraniteApicontroller
    comAdobeGraniteAssetCore: (NSString*) comAdobeGraniteAssetCore
    comAdobeGraniteAuthSso: (NSString*) comAdobeGraniteAuthSso
    comAdobeGraniteBundlesHcImpl: (NSString*) comAdobeGraniteBundlesHcImpl
    comAdobeGraniteCompatRouter: (NSString*) comAdobeGraniteCompatRouter
    comAdobeGraniteConf: (NSString*) comAdobeGraniteConf
    comAdobeGraniteConfUiCore: (NSString*) comAdobeGraniteConfUiCore
    comAdobeGraniteCors: (NSString*) comAdobeGraniteCors
    comAdobeGraniteCrxExplorer: (NSString*) comAdobeGraniteCrxExplorer
    comAdobeGraniteCrxdeLite: (NSString*) comAdobeGraniteCrxdeLite
    comAdobeGraniteCryptoConfig: (NSString*) comAdobeGraniteCryptoConfig
    comAdobeGraniteCryptoExtension: (NSString*) comAdobeGraniteCryptoExtension
    comAdobeGraniteCryptoFile: (NSString*) comAdobeGraniteCryptoFile
    comAdobeGraniteCryptoJcr: (NSString*) comAdobeGraniteCryptoJcr
    comAdobeGraniteCsrf: (NSString*) comAdobeGraniteCsrf
    comAdobeGraniteDistributionCore: (NSString*) comAdobeGraniteDistributionCore
    comAdobeGraniteDropwizardMetrics: (NSString*) comAdobeGraniteDropwizardMetrics
    comAdobeGraniteFragsImpl: (NSString*) comAdobeGraniteFragsImpl
    comAdobeGraniteGibson: (NSString*) comAdobeGraniteGibson
    comAdobeGraniteInfocollector: (NSString*) comAdobeGraniteInfocollector
    comAdobeGraniteInstallerFactoryPackages: (NSString*) comAdobeGraniteInstallerFactoryPackages
    comAdobeGraniteJettySsl: (NSString*) comAdobeGraniteJettySsl
    comAdobeGraniteJobsAsync: (NSString*) comAdobeGraniteJobsAsync
    comAdobeGraniteMaintenanceOak: (NSString*) comAdobeGraniteMaintenanceOak
    comAdobeGraniteMonitoringCore: (NSString*) comAdobeGraniteMonitoringCore
    comAdobeGraniteQueries: (NSString*) comAdobeGraniteQueries
    comAdobeGraniteReplicationHcImpl: (NSString*) comAdobeGraniteReplicationHcImpl
    comAdobeGraniteRepositoryChecker: (NSString*) comAdobeGraniteRepositoryChecker
    comAdobeGraniteRepositoryHcImpl: (NSString*) comAdobeGraniteRepositoryHcImpl
    comAdobeGraniteRestAssets: (NSString*) comAdobeGraniteRestAssets
    comAdobeGraniteSecurityUi: (NSString*) comAdobeGraniteSecurityUi
    comAdobeGraniteStartup: (NSString*) comAdobeGraniteStartup
    comAdobeGraniteTagsoup: (NSString*) comAdobeGraniteTagsoup
    comAdobeGraniteTaskmanagementCore: (NSString*) comAdobeGraniteTaskmanagementCore
    comAdobeGraniteTaskmanagementWorkflow: (NSString*) comAdobeGraniteTaskmanagementWorkflow
    comAdobeGraniteUiClientlibsCompilerLess: (NSString*) comAdobeGraniteUiClientlibsCompilerLess
    comAdobeGraniteUiClientlibsProcessorGcc: (NSString*) comAdobeGraniteUiClientlibsProcessorGcc
    comAdobeGraniteWebconsolePlugins: (NSString*) comAdobeGraniteWebconsolePlugins
    comAdobeGraniteWorkflowConsole: (NSString*) comAdobeGraniteWorkflowConsole
    comAdobeXmpWorkerFilesNativeFragmentLinux: (NSString*) comAdobeXmpWorkerFilesNativeFragmentLinux
    comAdobeXmpWorkerFilesNativeFragmentMacosx: (NSString*) comAdobeXmpWorkerFilesNativeFragmentMacosx
    comAdobeXmpWorkerFilesNativeFragmentWin: (NSString*) comAdobeXmpWorkerFilesNativeFragmentWin
    comDayCommonsOsgiWrapperSimpleJndi: (NSString*) comDayCommonsOsgiWrapperSimpleJndi
    comDayCqCqAuthhandler: (NSString*) comDayCqCqAuthhandler
    comDayCqCqCompatConfigupdate: (NSString*) comDayCqCqCompatConfigupdate
    comDayCqCqLicensebranding: (NSString*) comDayCqCqLicensebranding
    comDayCqCqNotifcationImpl: (NSString*) comDayCqCqNotifcationImpl
    comDayCqCqReplicationAudit: (NSString*) comDayCqCqReplicationAudit
    comDayCqCqSearchExt: (NSString*) comDayCqCqSearchExt
    comDayCqDamCqDamAnnotationPrint: (NSString*) comDayCqDamCqDamAnnotationPrint
    comDayCqDamCqDamAssetUsage: (NSString*) comDayCqDamCqDamAssetUsage
    comDayCqDamCqDamS7dam: (NSString*) comDayCqDamCqDamS7dam
    comDayCqDamCqDamSimilaritysearch: (NSString*) comDayCqDamCqDamSimilaritysearch
    comDayCqDamDamWebdavSupport: (NSString*) comDayCqDamDamWebdavSupport
    comDayCqPreUpgradeTasks: (NSString*) comDayCqPreUpgradeTasks
    comDayCqReplicationExtensions: (NSString*) comDayCqReplicationExtensions
    comDayCqWcmCqMsmCore: (NSString*) comDayCqWcmCqMsmCore
    comDayCqWcmCqWcmTranslation: (NSString*) comDayCqWcmCqWcmTranslation
    dayCommonsJrawio: (NSString*) dayCommonsJrawio
    orgApacheAriesJmxWhiteboard: (NSString*) orgApacheAriesJmxWhiteboard
    orgApacheFelixHttpSslfilter: (NSString*) orgApacheFelixHttpSslfilter
    orgApacheFelixOrgApacheFelixThreaddump: (NSString*) orgApacheFelixOrgApacheFelixThreaddump
    orgApacheFelixWebconsolePluginsDs: (NSString*) orgApacheFelixWebconsolePluginsDs
    orgApacheFelixWebconsolePluginsEvent: (NSString*) orgApacheFelixWebconsolePluginsEvent
    orgApacheFelixWebconsolePluginsMemoryusage: (NSString*) orgApacheFelixWebconsolePluginsMemoryusage
    orgApacheFelixWebconsolePluginsPackageadmin: (NSString*) orgApacheFelixWebconsolePluginsPackageadmin
    orgApacheJackrabbitOakAuthLdap: (NSString*) orgApacheJackrabbitOakAuthLdap
    orgApacheJackrabbitOakSegmentTar: (NSString*) orgApacheJackrabbitOakSegmentTar
    orgApacheJackrabbitOakSolrOsgi: (NSString*) orgApacheJackrabbitOakSolrOsgi
    orgApacheSlingBundleresourceImpl: (NSString*) orgApacheSlingBundleresourceImpl
    orgApacheSlingCommonsFsclassloader: (NSString*) orgApacheSlingCommonsFsclassloader
    orgApacheSlingCommonsLogWebconsole: (NSString*) orgApacheSlingCommonsLogWebconsole
    orgApacheSlingDatasource: (NSString*) orgApacheSlingDatasource
    orgApacheSlingDiscoveryBase: (NSString*) orgApacheSlingDiscoveryBase
    orgApacheSlingDiscoveryOak: (NSString*) orgApacheSlingDiscoveryOak
    orgApacheSlingDiscoverySupport: (NSString*) orgApacheSlingDiscoverySupport
    orgApacheSlingDistributionApi: (NSString*) orgApacheSlingDistributionApi
    orgApacheSlingDistributionCore: (NSString*) orgApacheSlingDistributionCore
    orgApacheSlingExtensionsWebconsolesecurityprovider: (NSString*) orgApacheSlingExtensionsWebconsolesecurityprovider
    orgApacheSlingHcWebconsole: (NSString*) orgApacheSlingHcWebconsole
    orgApacheSlingInstallerConsole: (NSString*) orgApacheSlingInstallerConsole
    orgApacheSlingInstallerProviderFile: (NSString*) orgApacheSlingInstallerProviderFile
    orgApacheSlingInstallerProviderJcr: (NSString*) orgApacheSlingInstallerProviderJcr
    orgApacheSlingJcrDavex: (NSString*) orgApacheSlingJcrDavex
    orgApacheSlingJcrResourcesecurity: (NSString*) orgApacheSlingJcrResourcesecurity
    orgApacheSlingJmxProvider: (NSString*) orgApacheSlingJmxProvider
    orgApacheSlingLaunchpadInstaller: (NSString*) orgApacheSlingLaunchpadInstaller
    orgApacheSlingModelsImpl: (NSString*) orgApacheSlingModelsImpl
    orgApacheSlingRepoinitParser: (NSString*) orgApacheSlingRepoinitParser
    orgApacheSlingResourceInventory: (NSString*) orgApacheSlingResourceInventory
    orgApacheSlingResourceresolver: (NSString*) orgApacheSlingResourceresolver
    orgApacheSlingScriptingJavascript: (NSString*) orgApacheSlingScriptingJavascript
    orgApacheSlingScriptingJst: (NSString*) orgApacheSlingScriptingJst
    orgApacheSlingScriptingSightlyJsProvider: (NSString*) orgApacheSlingScriptingSightlyJsProvider
    orgApacheSlingScriptingSightlyModelsProvider: (NSString*) orgApacheSlingScriptingSightlyModelsProvider
    orgApacheSlingSecurity: (NSString*) orgApacheSlingSecurity
    orgApacheSlingServletsCompat: (NSString*) orgApacheSlingServletsCompat
    orgApacheSlingServletsGet: (NSString*) orgApacheSlingServletsGet
    orgApacheSlingStartupfilterDisabler: (NSString*) orgApacheSlingStartupfilterDisabler
    orgApacheSlingTracer: (NSString*) orgApacheSlingTracer
    weRetailClientAppCore: (NSString*) weRetailClientAppCore
    completionHandler: (void (^)(OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param path  (optional)
/// @param serviceRanking  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeGraniteAuthCertImplClientCertAuthHandlerInfo*
-(NSURLSessionTask*) comAdobeGraniteAuthCertImplClientCertAuthHandlerWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    path: (NSString*) path
    serviceRanking: (NSNumber*) serviceRanking
    completionHandler: (void (^)(OAIComAdobeGraniteAuthCertImplClientCertAuthHandlerInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param configid  (optional)
/// @param scope  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeGraniteAuthImsInfo*
-(NSURLSessionTask*) comAdobeGraniteAuthImsWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    configid: (NSString*) configid
    scope: (NSString*) scope
    completionHandler: (void (^)(OAIComAdobeGraniteAuthImsInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param oauthProviderId  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeGraniteAuthImsImplExternalUserIdMappingProviderExtensionInfo*
-(NSURLSessionTask*) comAdobeGraniteAuthImsImplExternalUserIdMappingProviderExtensionWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    oauthProviderId: (NSString*) oauthProviderId
    completionHandler: (void (^)(OAIComAdobeGraniteAuthImsImplExternalUserIdMappingProviderExtensionInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param authImsClientSecret  (optional)
/// @param customizerType  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeGraniteAuthImsImplIMSAccessTokenRequestCustomizerImplInfo*
-(NSURLSessionTask*) comAdobeGraniteAuthImsImplIMSAccessTokenRequestCustomizerImplWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    authImsClientSecret: (NSString*) authImsClientSecret
    customizerType: (NSString*) customizerType
    completionHandler: (void (^)(OAIComAdobeGraniteAuthImsImplIMSAccessTokenRequestCustomizerImplInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param oauthProviderId  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeGraniteAuthImsImplIMSInstanceCredentialsValidatorInfo*
-(NSURLSessionTask*) comAdobeGraniteAuthImsImplIMSInstanceCredentialsValidatorWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    oauthProviderId: (NSString*) oauthProviderId
    completionHandler: (void (^)(OAIComAdobeGraniteAuthImsImplIMSInstanceCredentialsValidatorInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param oauthProviderId  (optional)
/// @param oauthProviderImsAuthorizationUrl  (optional)
/// @param oauthProviderImsTokenUrl  (optional)
/// @param oauthProviderImsProfileUrl  (optional)
/// @param oauthProviderImsExtendedDetailsUrls  (optional)
/// @param oauthProviderImsValidateTokenUrl  (optional)
/// @param oauthProviderImsSessionProperty  (optional)
/// @param oauthProviderImsServiceTokenClientId  (optional)
/// @param oauthProviderImsServiceTokenClientSecret  (optional)
/// @param oauthProviderImsServiceToken  (optional)
/// @param imsOrgRef  (optional)
/// @param imsGroupMapping  (optional)
/// @param oauthProviderImsOnlyLicenseGroup  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeGraniteAuthImsImplIMSProviderImplInfo*
-(NSURLSessionTask*) comAdobeGraniteAuthImsImplIMSProviderImplWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    oauthProviderId: (NSString*) oauthProviderId
    oauthProviderImsAuthorizationUrl: (NSString*) oauthProviderImsAuthorizationUrl
    oauthProviderImsTokenUrl: (NSString*) oauthProviderImsTokenUrl
    oauthProviderImsProfileUrl: (NSString*) oauthProviderImsProfileUrl
    oauthProviderImsExtendedDetailsUrls: (NSArray<NSString*>*) oauthProviderImsExtendedDetailsUrls
    oauthProviderImsValidateTokenUrl: (NSString*) oauthProviderImsValidateTokenUrl
    oauthProviderImsSessionProperty: (NSString*) oauthProviderImsSessionProperty
    oauthProviderImsServiceTokenClientId: (NSString*) oauthProviderImsServiceTokenClientId
    oauthProviderImsServiceTokenClientSecret: (NSString*) oauthProviderImsServiceTokenClientSecret
    oauthProviderImsServiceToken: (NSString*) oauthProviderImsServiceToken
    imsOrgRef: (NSString*) imsOrgRef
    imsGroupMapping: (NSArray<NSString*>*) imsGroupMapping
    oauthProviderImsOnlyLicenseGroup: (NSNumber*) oauthProviderImsOnlyLicenseGroup
    completionHandler: (void (^)(OAIComAdobeGraniteAuthImsImplIMSProviderImplInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param oauthConfigmanagerImsConfigid  (optional)
/// @param imsOwningEntity  (optional)
/// @param aemInstanceId  (optional)
/// @param imsServiceCode  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeGraniteAuthImsImplImsConfigProviderImplInfo*
-(NSURLSessionTask*) comAdobeGraniteAuthImsImplImsConfigProviderImplWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    oauthConfigmanagerImsConfigid: (NSString*) oauthConfigmanagerImsConfigid
    imsOwningEntity: (NSString*) imsOwningEntity
    aemInstanceId: (NSString*) aemInstanceId
    imsServiceCode: (NSString*) imsServiceCode
    completionHandler: (void (^)(OAIComAdobeGraniteAuthImsImplImsConfigProviderImplInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param name  (optional)
/// @param authTokenProviderTitle  (optional)
/// @param authTokenProviderDefaultClaims  (optional)
/// @param authTokenProviderEndpoint  (optional)
/// @param authAccessTokenRequest  (optional)
/// @param authTokenProviderKeypairAlias  (optional)
/// @param authTokenProviderConnTimeout  (optional)
/// @param authTokenProviderSoTimeout  (optional)
/// @param authTokenProviderClientId  (optional)
/// @param authTokenProviderScope  (optional)
/// @param authTokenProviderReuseAccessToken  (optional)
/// @param authTokenProviderRelaxedSsl  (optional)
/// @param tokenRequestCustomizerType  (optional)
/// @param authTokenValidatorType  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeGraniteAuthOauthAccesstokenProviderInfo*
-(NSURLSessionTask*) comAdobeGraniteAuthOauthAccesstokenProviderWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    name: (NSString*) name
    authTokenProviderTitle: (NSString*) authTokenProviderTitle
    authTokenProviderDefaultClaims: (NSArray<NSString*>*) authTokenProviderDefaultClaims
    authTokenProviderEndpoint: (NSString*) authTokenProviderEndpoint
    authAccessTokenRequest: (NSString*) authAccessTokenRequest
    authTokenProviderKeypairAlias: (NSString*) authTokenProviderKeypairAlias
    authTokenProviderConnTimeout: (NSNumber*) authTokenProviderConnTimeout
    authTokenProviderSoTimeout: (NSNumber*) authTokenProviderSoTimeout
    authTokenProviderClientId: (NSString*) authTokenProviderClientId
    authTokenProviderScope: (NSString*) authTokenProviderScope
    authTokenProviderReuseAccessToken: (NSNumber*) authTokenProviderReuseAccessToken
    authTokenProviderRelaxedSsl: (NSNumber*) authTokenProviderRelaxedSsl
    tokenRequestCustomizerType: (NSString*) tokenRequestCustomizerType
    authTokenValidatorType: (NSString*) authTokenValidatorType
    completionHandler: (void (^)(OAIComAdobeGraniteAuthOauthAccesstokenProviderInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param path  (optional)
/// @param oauthClientIdsAllowed  (optional)
/// @param authBearerSyncIms  (optional)
/// @param authTokenRequestParameter  (optional)
/// @param oauthBearerConfigid  (optional)
/// @param oauthJwtSupport  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeGraniteAuthOauthImplBearerAuthenticationHandlerInfo*
-(NSURLSessionTask*) comAdobeGraniteAuthOauthImplBearerAuthenticationHandlerWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    path: (NSString*) path
    oauthClientIdsAllowed: (NSArray<NSString*>*) oauthClientIdsAllowed
    authBearerSyncIms: (NSNumber*) authBearerSyncIms
    authTokenRequestParameter: (NSString*) authTokenRequestParameter
    oauthBearerConfigid: (NSString*) oauthBearerConfigid
    oauthJwtSupport: (NSNumber*) oauthJwtSupport
    completionHandler: (void (^)(OAIComAdobeGraniteAuthOauthImplBearerAuthenticationHandlerInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param authTokenValidatorType  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeGraniteAuthOauthImplDefaultTokenValidatorImplInfo*
-(NSURLSessionTask*) comAdobeGraniteAuthOauthImplDefaultTokenValidatorImplWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    authTokenValidatorType: (NSString*) authTokenValidatorType
    completionHandler: (void (^)(OAIComAdobeGraniteAuthOauthImplDefaultTokenValidatorImplInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param oauthProviderId  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeGraniteAuthOauthImplFacebookProviderImplInfo*
-(NSURLSessionTask*) comAdobeGraniteAuthOauthImplFacebookProviderImplWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    oauthProviderId: (NSString*) oauthProviderId
    completionHandler: (void (^)(OAIComAdobeGraniteAuthOauthImplFacebookProviderImplInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param oauthProviderId  (optional)
/// @param oauthProviderGithubAuthorizationUrl  (optional)
/// @param oauthProviderGithubTokenUrl  (optional)
/// @param oauthProviderGithubProfileUrl  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeGraniteAuthOauthImplGithubProviderImplInfo*
-(NSURLSessionTask*) comAdobeGraniteAuthOauthImplGithubProviderImplWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    oauthProviderId: (NSString*) oauthProviderId
    oauthProviderGithubAuthorizationUrl: (NSString*) oauthProviderGithubAuthorizationUrl
    oauthProviderGithubTokenUrl: (NSString*) oauthProviderGithubTokenUrl
    oauthProviderGithubProfileUrl: (NSString*) oauthProviderGithubProfileUrl
    completionHandler: (void (^)(OAIComAdobeGraniteAuthOauthImplGithubProviderImplInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param oauthProviderId  (optional)
/// @param oauthProviderGraniteAuthorizationUrl  (optional)
/// @param oauthProviderGraniteTokenUrl  (optional)
/// @param oauthProviderGraniteProfileUrl  (optional)
/// @param oauthProviderGraniteExtendedDetailsUrls  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeGraniteAuthOauthImplGraniteProviderInfo*
-(NSURLSessionTask*) comAdobeGraniteAuthOauthImplGraniteProviderWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    oauthProviderId: (NSString*) oauthProviderId
    oauthProviderGraniteAuthorizationUrl: (NSString*) oauthProviderGraniteAuthorizationUrl
    oauthProviderGraniteTokenUrl: (NSString*) oauthProviderGraniteTokenUrl
    oauthProviderGraniteProfileUrl: (NSString*) oauthProviderGraniteProfileUrl
    oauthProviderGraniteExtendedDetailsUrls: (NSString*) oauthProviderGraniteExtendedDetailsUrls
    completionHandler: (void (^)(OAIComAdobeGraniteAuthOauthImplGraniteProviderInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param oauthCookieLoginTimeout  (optional)
/// @param oauthCookieMaxAge  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeGraniteAuthOauthImplHelperProviderConfigManagerInfo*
-(NSURLSessionTask*) comAdobeGraniteAuthOauthImplHelperProviderConfigManagerWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    oauthCookieLoginTimeout: (NSString*) oauthCookieLoginTimeout
    oauthCookieMaxAge: (NSString*) oauthCookieMaxAge
    completionHandler: (void (^)(OAIComAdobeGraniteAuthOauthImplHelperProviderConfigManagerInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param oauthCookieLoginTimeout  (optional)
/// @param oauthCookieMaxAge  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeGraniteAuthOauthImplHelperProviderConfigManagerInternalInfo*
-(NSURLSessionTask*) comAdobeGraniteAuthOauthImplHelperProviderConfigManagerInternalWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    oauthCookieLoginTimeout: (NSString*) oauthCookieLoginTimeout
    oauthCookieMaxAge: (NSString*) oauthCookieMaxAge
    completionHandler: (void (^)(OAIComAdobeGraniteAuthOauthImplHelperProviderConfigManagerInternalInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param path  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeGraniteAuthOauthImplOAuthAuthenticationHandlerInfo*
-(NSURLSessionTask*) comAdobeGraniteAuthOauthImplOAuthAuthenticationHandlerWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    path: (NSString*) path
    completionHandler: (void (^)(OAIComAdobeGraniteAuthOauthImplOAuthAuthenticationHandlerInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param oauthProviderId  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeGraniteAuthOauthImplTwitterProviderImplInfo*
-(NSURLSessionTask*) comAdobeGraniteAuthOauthImplTwitterProviderImplWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    oauthProviderId: (NSString*) oauthProviderId
    completionHandler: (void (^)(OAIComAdobeGraniteAuthOauthImplTwitterProviderImplInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param oauthConfigId  (optional)
/// @param oauthClientId  (optional)
/// @param oauthClientSecret  (optional)
/// @param oauthScope  (optional)
/// @param oauthConfigProviderId  (optional)
/// @param oauthCreateUsers  (optional)
/// @param oauthUseridProperty  (optional)
/// @param forceStrictUsernameMatching  (optional)
/// @param oauthEncodeUserids  (optional)
/// @param oauthHashUserids  (optional)
/// @param oauthCallBackUrl  (optional)
/// @param oauthAccessTokenPersist  (optional)
/// @param oauthAccessTokenPersistCookie  (optional)
/// @param oauthCsrfStateProtection  (optional)
/// @param oauthRedirectRequestParams  (optional)
/// @param oauthConfigSiblingsAllow  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeGraniteAuthOauthProviderInfo*
-(NSURLSessionTask*) comAdobeGraniteAuthOauthProviderWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    oauthConfigId: (NSString*) oauthConfigId
    oauthClientId: (NSString*) oauthClientId
    oauthClientSecret: (NSString*) oauthClientSecret
    oauthScope: (NSArray<NSString*>*) oauthScope
    oauthConfigProviderId: (NSString*) oauthConfigProviderId
    oauthCreateUsers: (NSNumber*) oauthCreateUsers
    oauthUseridProperty: (NSString*) oauthUseridProperty
    forceStrictUsernameMatching: (NSNumber*) forceStrictUsernameMatching
    oauthEncodeUserids: (NSNumber*) oauthEncodeUserids
    oauthHashUserids: (NSNumber*) oauthHashUserids
    oauthCallBackUrl: (NSString*) oauthCallBackUrl
    oauthAccessTokenPersist: (NSNumber*) oauthAccessTokenPersist
    oauthAccessTokenPersistCookie: (NSNumber*) oauthAccessTokenPersistCookie
    oauthCsrfStateProtection: (NSNumber*) oauthCsrfStateProtection
    oauthRedirectRequestParams: (NSNumber*) oauthRedirectRequestParams
    oauthConfigSiblingsAllow: (NSNumber*) oauthConfigSiblingsAllow
    completionHandler: (void (^)(OAIComAdobeGraniteAuthOauthProviderInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param supportedPaths  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeGraniteAuthRequirementImplDefaultRequirementHandlerInfo*
-(NSURLSessionTask*) comAdobeGraniteAuthRequirementImplDefaultRequirementHandlerWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    supportedPaths: (NSArray<NSString*>*) supportedPaths
    completionHandler: (void (^)(OAIComAdobeGraniteAuthRequirementImplDefaultRequirementHandlerInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param path  (optional)
/// @param serviceRanking  (optional)
/// @param idpUrl  (optional)
/// @param idpCertAlias  (optional)
/// @param idpHttpRedirect  (optional)
/// @param serviceProviderEntityId  (optional)
/// @param assertionConsumerServiceURL  (optional)
/// @param spPrivateKeyAlias  (optional)
/// @param keyStorePassword  (optional)
/// @param defaultRedirectUrl  (optional)
/// @param userIDAttribute  (optional)
/// @param useEncryption  (optional)
/// @param createUser  (optional)
/// @param userIntermediatePath  (optional)
/// @param addGroupMemberships  (optional)
/// @param groupMembershipAttribute  (optional)
/// @param defaultGroups  (optional)
/// @param nameIdFormat  (optional)
/// @param synchronizeAttributes  (optional)
/// @param handleLogout  (optional)
/// @param logoutUrl  (optional)
/// @param clockTolerance  (optional)
/// @param digestMethod  (optional)
/// @param signatureMethod  (optional)
/// @param identitySyncType  (optional)
/// @param idpIdentifier  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeGraniteAuthSamlSamlAuthenticationHandlerInfo*
-(NSURLSessionTask*) comAdobeGraniteAuthSamlSamlAuthenticationHandlerWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    path: (NSArray<NSString*>*) path
    serviceRanking: (NSNumber*) serviceRanking
    idpUrl: (NSString*) idpUrl
    idpCertAlias: (NSString*) idpCertAlias
    idpHttpRedirect: (NSNumber*) idpHttpRedirect
    serviceProviderEntityId: (NSString*) serviceProviderEntityId
    assertionConsumerServiceURL: (NSString*) assertionConsumerServiceURL
    spPrivateKeyAlias: (NSString*) spPrivateKeyAlias
    keyStorePassword: (NSString*) keyStorePassword
    defaultRedirectUrl: (NSString*) defaultRedirectUrl
    userIDAttribute: (NSString*) userIDAttribute
    useEncryption: (NSNumber*) useEncryption
    createUser: (NSNumber*) createUser
    userIntermediatePath: (NSString*) userIntermediatePath
    addGroupMemberships: (NSNumber*) addGroupMemberships
    groupMembershipAttribute: (NSString*) groupMembershipAttribute
    defaultGroups: (NSArray<NSString*>*) defaultGroups
    nameIdFormat: (NSString*) nameIdFormat
    synchronizeAttributes: (NSArray<NSString*>*) synchronizeAttributes
    handleLogout: (NSNumber*) handleLogout
    logoutUrl: (NSString*) logoutUrl
    clockTolerance: (NSNumber*) clockTolerance
    digestMethod: (NSString*) digestMethod
    signatureMethod: (NSString*) signatureMethod
    identitySyncType: (NSString*) identitySyncType
    idpIdentifier: (NSString*) idpIdentifier
    completionHandler: (void (^)(OAIComAdobeGraniteAuthSamlSamlAuthenticationHandlerInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param path  (optional)
/// @param serviceRanking  (optional)
/// @param jaasControlFlag  (optional)
/// @param jaasRealmName  (optional)
/// @param jaasRanking  (optional)
/// @param headers  (optional)
/// @param cookies  (optional)
/// @param parameters  (optional)
/// @param usermap  (optional)
/// @param format  (optional)
/// @param trustedCredentialsAttribute  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeGraniteAuthSsoImplSsoAuthenticationHandlerInfo*
-(NSURLSessionTask*) comAdobeGraniteAuthSsoImplSsoAuthenticationHandlerWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    path: (NSString*) path
    serviceRanking: (NSNumber*) serviceRanking
    jaasControlFlag: (NSString*) jaasControlFlag
    jaasRealmName: (NSString*) jaasRealmName
    jaasRanking: (NSNumber*) jaasRanking
    headers: (NSArray<NSString*>*) headers
    cookies: (NSArray<NSString*>*) cookies
    parameters: (NSArray<NSString*>*) parameters
    usermap: (NSArray<NSString*>*) usermap
    format: (NSString*) format
    trustedCredentialsAttribute: (NSString*) trustedCredentialsAttribute
    completionHandler: (void (^)(OAIComAdobeGraniteAuthSsoImplSsoAuthenticationHandlerInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param hcTags  (optional)
/// @param minimumCodeCacheSize  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeGraniteBundlesHcImplCodeCacheHealthCheckInfo*
-(NSURLSessionTask*) comAdobeGraniteBundlesHcImplCodeCacheHealthCheckWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    hcTags: (NSArray<NSString*>*) hcTags
    minimumCodeCacheSize: (NSNumber*) minimumCodeCacheSize
    completionHandler: (void (^)(OAIComAdobeGraniteBundlesHcImplCodeCacheHealthCheckInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param hcTags  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeGraniteBundlesHcImplCrxdeSupportBundleHealthCheckInfo*
-(NSURLSessionTask*) comAdobeGraniteBundlesHcImplCrxdeSupportBundleHealthCheckWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    hcTags: (NSArray<NSString*>*) hcTags
    completionHandler: (void (^)(OAIComAdobeGraniteBundlesHcImplCrxdeSupportBundleHealthCheckInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param hcTags  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeGraniteBundlesHcImplDavExBundleHealthCheckInfo*
-(NSURLSessionTask*) comAdobeGraniteBundlesHcImplDavExBundleHealthCheckWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    hcTags: (NSArray<NSString*>*) hcTags
    completionHandler: (void (^)(OAIComAdobeGraniteBundlesHcImplDavExBundleHealthCheckInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param hcTags  (optional)
/// @param ignoredBundles  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeGraniteBundlesHcImplInactiveBundlesHealthCheckInfo*
-(NSURLSessionTask*) comAdobeGraniteBundlesHcImplInactiveBundlesHealthCheckWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    hcTags: (NSArray<NSString*>*) hcTags
    ignoredBundles: (NSArray<NSString*>*) ignoredBundles
    completionHandler: (void (^)(OAIComAdobeGraniteBundlesHcImplInactiveBundlesHealthCheckInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param hcTags  (optional)
/// @param maxQueuedJobs  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeGraniteBundlesHcImplJobsHealthCheckInfo*
-(NSURLSessionTask*) comAdobeGraniteBundlesHcImplJobsHealthCheckWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    hcTags: (NSArray<NSString*>*) hcTags
    maxQueuedJobs: (NSNumber*) maxQueuedJobs
    completionHandler: (void (^)(OAIComAdobeGraniteBundlesHcImplJobsHealthCheckInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param hcTags  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeGraniteBundlesHcImplSlingGetServletHealthCheckInfo*
-(NSURLSessionTask*) comAdobeGraniteBundlesHcImplSlingGetServletHealthCheckWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    hcTags: (NSArray<NSString*>*) hcTags
    completionHandler: (void (^)(OAIComAdobeGraniteBundlesHcImplSlingGetServletHealthCheckInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param hcTags  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeGraniteBundlesHcImplSlingJavaScriptHandlerHealthCheckInfo*
-(NSURLSessionTask*) comAdobeGraniteBundlesHcImplSlingJavaScriptHandlerHealthCheckWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    hcTags: (NSArray<NSString*>*) hcTags
    completionHandler: (void (^)(OAIComAdobeGraniteBundlesHcImplSlingJavaScriptHandlerHealthCheckInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param hcTags  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeGraniteBundlesHcImplSlingJspScriptHandlerHealthCheckInfo*
-(NSURLSessionTask*) comAdobeGraniteBundlesHcImplSlingJspScriptHandlerHealthCheckWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    hcTags: (NSArray<NSString*>*) hcTags
    completionHandler: (void (^)(OAIComAdobeGraniteBundlesHcImplSlingJspScriptHandlerHealthCheckInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param hcTags  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeGraniteBundlesHcImplSlingReferrerFilterHealthCheckInfo*
-(NSURLSessionTask*) comAdobeGraniteBundlesHcImplSlingReferrerFilterHealthCheckWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    hcTags: (NSArray<NSString*>*) hcTags
    completionHandler: (void (^)(OAIComAdobeGraniteBundlesHcImplSlingReferrerFilterHealthCheckInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param hcTags  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeGraniteBundlesHcImplWebDavBundleHealthCheckInfo*
-(NSURLSessionTask*) comAdobeGraniteBundlesHcImplWebDavBundleHealthCheckWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    hcTags: (NSArray<NSString*>*) hcTags
    completionHandler: (void (^)(OAIComAdobeGraniteBundlesHcImplWebDavBundleHealthCheckInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param replicateCommentResourceTypes  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeGraniteCommentsInternalCommentReplicationContentFilterFacInfo*
-(NSURLSessionTask*) comAdobeGraniteCommentsInternalCommentReplicationContentFilterFacWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    replicateCommentResourceTypes: (NSArray<NSString*>*) replicateCommentResourceTypes
    completionHandler: (void (^)(OAIComAdobeGraniteCommentsInternalCommentReplicationContentFilterFacInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param compatgroups  (optional)
/// @param enabled  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeGraniteCompatrouterImplCompatSwitchingServiceImplInfo*
-(NSURLSessionTask*) comAdobeGraniteCompatrouterImplCompatSwitchingServiceImplWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    compatgroups: (NSArray<NSString*>*) compatgroups
    enabled: (NSNumber*) enabled
    completionHandler: (void (^)(OAIComAdobeGraniteCompatrouterImplCompatSwitchingServiceImplInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param _id  (optional)
/// @param compatPath  (optional)
/// @param varNewPath  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeGraniteCompatrouterImplRoutingConfigInfo*
-(NSURLSessionTask*) comAdobeGraniteCompatrouterImplRoutingConfigWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    _id: (NSString*) _id
    compatPath: (NSString*) compatPath
    varNewPath: (NSString*) varNewPath
    completionHandler: (void (^)(OAIComAdobeGraniteCompatrouterImplRoutingConfigInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param group  (optional)
/// @param ids  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeGraniteCompatrouterImplSwitchMappingConfigInfo*
-(NSURLSessionTask*) comAdobeGraniteCompatrouterImplSwitchMappingConfigWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    group: (NSString*) group
    ids: (NSArray<NSString*>*) ids
    completionHandler: (void (^)(OAIComAdobeGraniteCompatrouterImplSwitchMappingConfigInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param enabled  (optional)
/// @param fallbackPaths  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeGraniteConfImplRuntimeAwareConfigurationResourceResolvingInfo*
-(NSURLSessionTask*) comAdobeGraniteConfImplRuntimeAwareConfigurationResourceResolvingWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    enabled: (NSNumber*) enabled
    fallbackPaths: (NSArray<NSString*>*) fallbackPaths
    completionHandler: (void (^)(OAIComAdobeGraniteConfImplRuntimeAwareConfigurationResourceResolvingInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param comAdobeGraniteContexthubSilentMode  (optional)
/// @param comAdobeGraniteContexthubShowUi  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeGraniteContexthubImplContextHubImplInfo*
-(NSURLSessionTask*) comAdobeGraniteContexthubImplContextHubImplWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    comAdobeGraniteContexthubSilentMode: (NSNumber*) comAdobeGraniteContexthubSilentMode
    comAdobeGraniteContexthubShowUi: (NSNumber*) comAdobeGraniteContexthubShowUi
    completionHandler: (void (^)(OAIComAdobeGraniteContexthubImplContextHubImplInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param alloworigin  (optional)
/// @param alloworiginregexp  (optional)
/// @param allowedpaths  (optional)
/// @param exposedheaders  (optional)
/// @param maxage  (optional)
/// @param supportedheaders  (optional)
/// @param supportedmethods  (optional)
/// @param supportscredentials  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeGraniteCorsImplCORSPolicyImplInfo*
-(NSURLSessionTask*) comAdobeGraniteCorsImplCORSPolicyImplWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    alloworigin: (NSArray<NSString*>*) alloworigin
    alloworiginregexp: (NSArray<NSString*>*) alloworiginregexp
    allowedpaths: (NSArray<NSString*>*) allowedpaths
    exposedheaders: (NSArray<NSString*>*) exposedheaders
    maxage: (NSNumber*) maxage
    supportedheaders: (NSArray<NSString*>*) supportedheaders
    supportedmethods: (NSArray<NSString*>*) supportedmethods
    supportscredentials: (NSNumber*) supportscredentials
    completionHandler: (void (^)(OAIComAdobeGraniteCorsImplCORSPolicyImplInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param filterMethods  (optional)
/// @param filterEnableSafeUserAgents  (optional)
/// @param filterSafeUserAgents  (optional)
/// @param filterExcludedPaths  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeGraniteCsrfImplCSRFFilterInfo*
-(NSURLSessionTask*) comAdobeGraniteCsrfImplCSRFFilterWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    filterMethods: (NSArray<NSString*>*) filterMethods
    filterEnableSafeUserAgents: (NSNumber*) filterEnableSafeUserAgents
    filterSafeUserAgents: (NSArray<NSString*>*) filterSafeUserAgents
    filterExcludedPaths: (NSArray<NSString*>*) filterExcludedPaths
    completionHandler: (void (^)(OAIComAdobeGraniteCsrfImplCSRFFilterInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param csrfTokenExpiresIn  (optional)
/// @param slingAuthRequirements  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeGraniteCsrfImplCSRFServletInfo*
-(NSURLSessionTask*) comAdobeGraniteCsrfImplCSRFServletWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    csrfTokenExpiresIn: (NSNumber*) csrfTokenExpiresIn
    slingAuthRequirements: (NSString*) slingAuthRequirements
    completionHandler: (void (^)(OAIComAdobeGraniteCsrfImplCSRFServletInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param name  (optional)
/// @param username  (optional)
/// @param encryptedPassword  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeGraniteDistributionCoreImplCryptoDistributionTransportSeInfo*
-(NSURLSessionTask*) comAdobeGraniteDistributionCoreImplCryptoDistributionTransportSeWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    name: (NSString*) name
    username: (NSString*) username
    encryptedPassword: (NSString*) encryptedPassword
    completionHandler: (void (^)(OAIComAdobeGraniteDistributionCoreImplCryptoDistributionTransportSeInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param enabled  (optional)
/// @param agentName  (optional)
/// @param diffPath  (optional)
/// @param observedPath  (optional)
/// @param serviceName  (optional)
/// @param propertyNames  (optional)
/// @param distributionDelay  (optional)
/// @param serviceUserTarget  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeGraniteDistributionCoreImplDiffDiffChangesObserverInfo*
-(NSURLSessionTask*) comAdobeGraniteDistributionCoreImplDiffDiffChangesObserverWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    enabled: (NSNumber*) enabled
    agentName: (NSString*) agentName
    diffPath: (NSString*) diffPath
    observedPath: (NSString*) observedPath
    serviceName: (NSString*) serviceName
    propertyNames: (NSString*) propertyNames
    distributionDelay: (NSNumber*) distributionDelay
    serviceUserTarget: (NSString*) serviceUserTarget
    completionHandler: (void (^)(OAIComAdobeGraniteDistributionCoreImplDiffDiffChangesObserverInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param diffPath  (optional)
/// @param serviceName  (optional)
/// @param serviceUserTarget  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeGraniteDistributionCoreImplDiffDiffEventListenerInfo*
-(NSURLSessionTask*) comAdobeGraniteDistributionCoreImplDiffDiffEventListenerWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    diffPath: (NSString*) diffPath
    serviceName: (NSString*) serviceName
    serviceUserTarget: (NSString*) serviceUserTarget
    completionHandler: (void (^)(OAIComAdobeGraniteDistributionCoreImplDiffDiffEventListenerInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param importerName  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeGraniteDistributionCoreImplDistributionToReplicationEvenInfo*
-(NSURLSessionTask*) comAdobeGraniteDistributionCoreImplDistributionToReplicationEvenWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    importerName: (NSArray<NSString*>*) importerName
    completionHandler: (void (^)(OAIComAdobeGraniteDistributionCoreImplDistributionToReplicationEvenInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param providerName  (optional)
/// @param forwardRequests  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeGraniteDistributionCoreImplReplicationAdaptersReplicatInfo*
-(NSURLSessionTask*) comAdobeGraniteDistributionCoreImplReplicationAdaptersReplicatWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    providerName: (NSString*) providerName
    forwardRequests: (NSNumber*) forwardRequests
    completionHandler: (void (^)(OAIComAdobeGraniteDistributionCoreImplReplicationAdaptersReplicatInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param forwardRequests  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeGraniteDistributionCoreImplReplicationDistributionTransInfo*
-(NSURLSessionTask*) comAdobeGraniteDistributionCoreImplReplicationDistributionTransWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    forwardRequests: (NSNumber*) forwardRequests
    completionHandler: (void (^)(OAIComAdobeGraniteDistributionCoreImplReplicationDistributionTransInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param name  (optional)
/// @param serviceName  (optional)
/// @param userId  (optional)
/// @param accessTokenProviderTarget  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeGraniteDistributionCoreImplTransportAccessTokenDistribuInfo*
-(NSURLSessionTask*) comAdobeGraniteDistributionCoreImplTransportAccessTokenDistribuWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    name: (NSString*) name
    serviceName: (NSString*) serviceName
    userId: (NSString*) userId
    accessTokenProviderTarget: (NSString*) accessTokenProviderTarget
    completionHandler: (void (^)(OAIComAdobeGraniteDistributionCoreImplTransportAccessTokenDistribuInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param featureName  (optional)
/// @param featureDescription  (optional)
/// @param httpHeaderName  (optional)
/// @param httpHeaderValuepattern  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeGraniteFragsImplCheckHttpHeaderFlagInfo*
-(NSURLSessionTask*) comAdobeGraniteFragsImplCheckHttpHeaderFlagWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    featureName: (NSString*) featureName
    featureDescription: (NSString*) featureDescription
    httpHeaderName: (NSString*) httpHeaderName
    httpHeaderValuepattern: (NSString*) httpHeaderValuepattern
    completionHandler: (void (^)(OAIComAdobeGraniteFragsImplCheckHttpHeaderFlagInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param featureName  (optional)
/// @param featureDescription  (optional)
/// @param activePercentage  (optional)
/// @param cookieName  (optional)
/// @param cookieMaxAge  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeGraniteFragsImplRandomFeatureInfo*
-(NSURLSessionTask*) comAdobeGraniteFragsImplRandomFeatureWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    featureName: (NSString*) featureName
    featureDescription: (NSString*) featureDescription
    activePercentage: (NSString*) activePercentage
    cookieName: (NSString*) cookieName
    cookieMaxAge: (NSNumber*) cookieMaxAge
    completionHandler: (void (^)(OAIComAdobeGraniteFragsImplRandomFeatureInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param comAdobeGraniteHttpcacheFileDocumentRoot  (optional)
/// @param comAdobeGraniteHttpcacheFileIncludeHost  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeGraniteHttpcacheFileFileCacheStoreInfo*
-(NSURLSessionTask*) comAdobeGraniteHttpcacheFileFileCacheStoreWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    comAdobeGraniteHttpcacheFileDocumentRoot: (NSString*) comAdobeGraniteHttpcacheFileDocumentRoot
    comAdobeGraniteHttpcacheFileIncludeHost: (NSString*) comAdobeGraniteHttpcacheFileIncludeHost
    completionHandler: (void (^)(OAIComAdobeGraniteHttpcacheFileFileCacheStoreInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param comAdobeGraniteHttpcacheUrlPaths  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeGraniteHttpcacheImplOuterCacheFilterInfo*
-(NSURLSessionTask*) comAdobeGraniteHttpcacheImplOuterCacheFilterWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    comAdobeGraniteHttpcacheUrlPaths: (NSArray<NSString*>*) comAdobeGraniteHttpcacheUrlPaths
    completionHandler: (void (^)(OAIComAdobeGraniteHttpcacheImplOuterCacheFilterInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param pseudoPatterns  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeGraniteI18nImplBundlePseudoTranslationsInfo*
-(NSURLSessionTask*) comAdobeGraniteI18nImplBundlePseudoTranslationsWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    pseudoPatterns: (NSArray<NSString*>*) pseudoPatterns
    completionHandler: (void (^)(OAIComAdobeGraniteI18nImplBundlePseudoTranslationsInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param securityPreferencesName  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeGraniteI18nImplPreferencesLocaleResolverServiceInfo*
-(NSURLSessionTask*) comAdobeGraniteI18nImplPreferencesLocaleResolverServiceWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    securityPreferencesName: (NSString*) securityPreferencesName
    completionHandler: (void (^)(OAIComAdobeGraniteI18nImplPreferencesLocaleResolverServiceInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param graniteInfocollectorIncludeThreadDumps  (optional)
/// @param graniteInfocollectorIncludeHeapDump  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeGraniteInfocollectorInfoCollectorInfo*
-(NSURLSessionTask*) comAdobeGraniteInfocollectorInfoCollectorWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    graniteInfocollectorIncludeThreadDumps: (NSNumber*) graniteInfocollectorIncludeThreadDumps
    graniteInfocollectorIncludeHeapDump: (NSNumber*) graniteInfocollectorIncludeHeapDump
    completionHandler: (void (^)(OAIComAdobeGraniteInfocollectorInfoCollectorInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param comAdobeGraniteJettySslPort  (optional)
/// @param comAdobeGraniteJettySslKeystoreUser  (optional)
/// @param comAdobeGraniteJettySslKeystorePassword  (optional)
/// @param comAdobeGraniteJettySslCiphersuitesExcluded  (optional)
/// @param comAdobeGraniteJettySslCiphersuitesIncluded  (optional)
/// @param comAdobeGraniteJettySslClientCertificate  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeGraniteJettySslInternalGraniteSslConnectorFactoryInfo*
-(NSURLSessionTask*) comAdobeGraniteJettySslInternalGraniteSslConnectorFactoryWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    comAdobeGraniteJettySslPort: (NSNumber*) comAdobeGraniteJettySslPort
    comAdobeGraniteJettySslKeystoreUser: (NSString*) comAdobeGraniteJettySslKeystoreUser
    comAdobeGraniteJettySslKeystorePassword: (NSString*) comAdobeGraniteJettySslKeystorePassword
    comAdobeGraniteJettySslCiphersuitesExcluded: (NSArray<NSString*>*) comAdobeGraniteJettySslCiphersuitesExcluded
    comAdobeGraniteJettySslCiphersuitesIncluded: (NSArray<NSString*>*) comAdobeGraniteJettySslCiphersuitesIncluded
    comAdobeGraniteJettySslClientCertificate: (NSString*) comAdobeGraniteJettySslClientCertificate
    completionHandler: (void (^)(OAIComAdobeGraniteJettySslInternalGraniteSslConnectorFactoryInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param checkInternval  (optional)
/// @param excludeIds  (optional)
/// @param encryptPing  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeGraniteLicenseImplLicenseCheckFilterInfo*
-(NSURLSessionTask*) comAdobeGraniteLicenseImplLicenseCheckFilterWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    checkInternval: (NSNumber*) checkInternval
    excludeIds: (NSArray<NSString*>*) excludeIds
    encryptPing: (NSNumber*) encryptPing
    completionHandler: (void (^)(OAIComAdobeGraniteLicenseImplLicenseCheckFilterInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param messagesQueueSize  (optional)
/// @param loggerConfig  (optional)
/// @param messagesSize  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeGraniteLoggingImplLogAnalyserImplInfo*
-(NSURLSessionTask*) comAdobeGraniteLoggingImplLogAnalyserImplWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    messagesQueueSize: (NSNumber*) messagesQueueSize
    loggerConfig: (NSArray<NSString*>*) loggerConfig
    messagesSize: (NSNumber*) messagesSize
    completionHandler: (void (^)(OAIComAdobeGraniteLoggingImplLogAnalyserImplInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param hcTags  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeGraniteLoggingImplLogErrorHealthCheckInfo*
-(NSURLSessionTask*) comAdobeGraniteLoggingImplLogErrorHealthCheckWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    hcTags: (NSArray<NSString*>*) hcTags
    completionHandler: (void (^)(OAIComAdobeGraniteLoggingImplLogErrorHealthCheckInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param graniteMaintenanceMandatory  (optional)
/// @param jobTopics  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeGraniteMaintenanceCrxImplDataStoreGarbageCollectionTaskInfo*
-(NSURLSessionTask*) comAdobeGraniteMaintenanceCrxImplDataStoreGarbageCollectionTaskWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    graniteMaintenanceMandatory: (NSNumber*) graniteMaintenanceMandatory
    jobTopics: (NSString*) jobTopics
    completionHandler: (void (^)(OAIComAdobeGraniteMaintenanceCrxImplDataStoreGarbageCollectionTaskInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param jobTopics  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeGraniteMaintenanceCrxImplLuceneBinariesCleanupTaskInfo*
-(NSURLSessionTask*) comAdobeGraniteMaintenanceCrxImplLuceneBinariesCleanupTaskWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    jobTopics: (NSString*) jobTopics
    completionHandler: (void (^)(OAIComAdobeGraniteMaintenanceCrxImplLuceneBinariesCleanupTaskInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param fullGcDays  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeGraniteMaintenanceCrxImplRevisionCleanupTaskInfo*
-(NSURLSessionTask*) comAdobeGraniteMaintenanceCrxImplRevisionCleanupTaskWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    fullGcDays: (NSArray<NSString*>*) fullGcDays
    completionHandler: (void (^)(OAIComAdobeGraniteMaintenanceCrxImplRevisionCleanupTaskInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param scriptFilename  (optional)
/// @param scriptDisplay  (optional)
/// @param scriptPath  (optional)
/// @param scriptPlatform  (optional)
/// @param interval  (optional)
/// @param jmxdomain  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeGraniteMonitoringImplScriptConfigImplInfo*
-(NSURLSessionTask*) comAdobeGraniteMonitoringImplScriptConfigImplWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    scriptFilename: (NSString*) scriptFilename
    scriptDisplay: (NSString*) scriptDisplay
    scriptPath: (NSString*) scriptPath
    scriptPlatform: (NSArray<NSString*>*) scriptPlatform
    interval: (NSNumber*) interval
    jmxdomain: (NSString*) jmxdomain
    completionHandler: (void (^)(OAIComAdobeGraniteMonitoringImplScriptConfigImplInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param path  (optional)
/// @param jaasControlFlag  (optional)
/// @param jaasRealmName  (optional)
/// @param jaasRanking  (optional)
/// @param oauthOfflineValidation  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeGraniteOauthServerAuthImplOAuth2ServerAuthenticationHanInfo*
-(NSURLSessionTask*) comAdobeGraniteOauthServerAuthImplOAuth2ServerAuthenticationHanWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    path: (NSString*) path
    jaasControlFlag: (NSString*) jaasControlFlag
    jaasRealmName: (NSString*) jaasRealmName
    jaasRanking: (NSNumber*) jaasRanking
    oauthOfflineValidation: (NSNumber*) oauthOfflineValidation
    completionHandler: (void (^)(OAIComAdobeGraniteOauthServerAuthImplOAuth2ServerAuthenticationHanInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param schedulerExpression  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeGraniteOauthServerImplAccessTokenCleanupTaskInfo*
-(NSURLSessionTask*) comAdobeGraniteOauthServerImplAccessTokenCleanupTaskWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    schedulerExpression: (NSString*) schedulerExpression
    completionHandler: (void (^)(OAIComAdobeGraniteOauthServerImplAccessTokenCleanupTaskInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param oauthClientRevocationActive  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeGraniteOauthServerImplOAuth2ClientRevocationServletInfo*
-(NSURLSessionTask*) comAdobeGraniteOauthServerImplOAuth2ClientRevocationServletWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    oauthClientRevocationActive: (NSNumber*) oauthClientRevocationActive
    completionHandler: (void (^)(OAIComAdobeGraniteOauthServerImplOAuth2ClientRevocationServletInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param slingServletPaths  (optional)
/// @param oauthRevocationActive  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeGraniteOauthServerImplOAuth2RevocationEndpointServletInfo*
-(NSURLSessionTask*) comAdobeGraniteOauthServerImplOAuth2RevocationEndpointServletWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    slingServletPaths: (NSString*) slingServletPaths
    oauthRevocationActive: (NSNumber*) oauthRevocationActive
    completionHandler: (void (^)(OAIComAdobeGraniteOauthServerImplOAuth2RevocationEndpointServletInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param oauthIssuer  (optional)
/// @param oauthAccessTokenExpiresIn  (optional)
/// @param osgiHttpWhiteboardServletPattern  (optional)
/// @param osgiHttpWhiteboardContextSelect  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeGraniteOauthServerImplOAuth2TokenEndpointServletInfo*
-(NSURLSessionTask*) comAdobeGraniteOauthServerImplOAuth2TokenEndpointServletWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    oauthIssuer: (NSString*) oauthIssuer
    oauthAccessTokenExpiresIn: (NSString*) oauthAccessTokenExpiresIn
    osgiHttpWhiteboardServletPattern: (NSString*) osgiHttpWhiteboardServletPattern
    osgiHttpWhiteboardContextSelect: (NSString*) osgiHttpWhiteboardContextSelect
    completionHandler: (void (^)(OAIComAdobeGraniteOauthServerImplOAuth2TokenEndpointServletInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param oauthTokenRevocationActive  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeGraniteOauthServerImplOAuth2TokenRevocationServletInfo*
-(NSURLSessionTask*) comAdobeGraniteOauthServerImplOAuth2TokenRevocationServletWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    oauthTokenRevocationActive: (NSNumber*) oauthTokenRevocationActive
    completionHandler: (void (^)(OAIComAdobeGraniteOauthServerImplOAuth2TokenRevocationServletInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param offloadingTransporter  (optional)
/// @param offloadingCleanupPayload  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeGraniteOffloadingImplOffloadingConfiguratorInfo*
-(NSURLSessionTask*) comAdobeGraniteOffloadingImplOffloadingConfiguratorWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    offloadingTransporter: (NSString*) offloadingTransporter
    offloadingCleanupPayload: (NSNumber*) offloadingCleanupPayload
    completionHandler: (void (^)(OAIComAdobeGraniteOffloadingImplOffloadingConfiguratorInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param offloadingJobclonerEnabled  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeGraniteOffloadingImplOffloadingJobClonerInfo*
-(NSURLSessionTask*) comAdobeGraniteOffloadingImplOffloadingJobClonerWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    offloadingJobclonerEnabled: (NSNumber*) offloadingJobclonerEnabled
    completionHandler: (void (^)(OAIComAdobeGraniteOffloadingImplOffloadingJobClonerInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param offloadingOffloaderEnabled  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeGraniteOffloadingImplOffloadingJobOffloaderInfo*
-(NSURLSessionTask*) comAdobeGraniteOffloadingImplOffloadingJobOffloaderWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    offloadingOffloaderEnabled: (NSNumber*) offloadingOffloaderEnabled
    completionHandler: (void (^)(OAIComAdobeGraniteOffloadingImplOffloadingJobOffloaderInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param offloadingAgentmanagerEnabled  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeGraniteOffloadingImplTransporterOffloadingAgentManagerInfo*
-(NSURLSessionTask*) comAdobeGraniteOffloadingImplTransporterOffloadingAgentManagerWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    offloadingAgentmanagerEnabled: (NSNumber*) offloadingAgentmanagerEnabled
    completionHandler: (void (^)(OAIComAdobeGraniteOffloadingImplTransporterOffloadingAgentManagerInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param defaultTransportAgentToWorkerPrefix  (optional)
/// @param defaultTransportAgentToMasterPrefix  (optional)
/// @param defaultTransportInputPackage  (optional)
/// @param defaultTransportOutputPackage  (optional)
/// @param defaultTransportReplicationSynchronous  (optional)
/// @param defaultTransportContentpackage  (optional)
/// @param offloadingTransporterDefaultEnabled  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeGraniteOffloadingImplTransporterOffloadingDefaultTranspoInfo*
-(NSURLSessionTask*) comAdobeGraniteOffloadingImplTransporterOffloadingDefaultTranspoWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    defaultTransportAgentToWorkerPrefix: (NSString*) defaultTransportAgentToWorkerPrefix
    defaultTransportAgentToMasterPrefix: (NSString*) defaultTransportAgentToMasterPrefix
    defaultTransportInputPackage: (NSString*) defaultTransportInputPackage
    defaultTransportOutputPackage: (NSString*) defaultTransportOutputPackage
    defaultTransportReplicationSynchronous: (NSNumber*) defaultTransportReplicationSynchronous
    defaultTransportContentpackage: (NSNumber*) defaultTransportContentpackage
    offloadingTransporterDefaultEnabled: (NSNumber*) offloadingTransporterDefaultEnabled
    completionHandler: (void (^)(OAIComAdobeGraniteOffloadingImplTransporterOffloadingDefaultTranspoInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param omnisearchSuggestionRequiretextMin  (optional)
/// @param omnisearchSuggestionSpellcheckRequire  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeGraniteOmnisearchImplCoreOmniSearchServiceImplInfo*
-(NSURLSessionTask*) comAdobeGraniteOmnisearchImplCoreOmniSearchServiceImplWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    omnisearchSuggestionRequiretextMin: (NSNumber*) omnisearchSuggestionRequiretextMin
    omnisearchSuggestionSpellcheckRequire: (NSNumber*) omnisearchSuggestionSpellcheckRequire
    completionHandler: (void (^)(OAIComAdobeGraniteOmnisearchImplCoreOmniSearchServiceImplInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param optoutCookies  (optional)
/// @param optoutHeaders  (optional)
/// @param optoutWhitelistCookies  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeGraniteOptoutImplOptOutServiceImplInfo*
-(NSURLSessionTask*) comAdobeGraniteOptoutImplOptOutServiceImplWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    optoutCookies: (NSArray<NSString*>*) optoutCookies
    optoutHeaders: (NSArray<NSString*>*) optoutHeaders
    optoutWhitelistCookies: (NSArray<NSString*>*) optoutWhitelistCookies
    completionHandler: (void (^)(OAIComAdobeGraniteOptoutImplOptOutServiceImplInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param indexingCriticalThreshold  (optional)
/// @param indexingWarnThreshold  (optional)
/// @param hcTags  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeGraniteQueriesImplHcAsyncIndexHealthCheckInfo*
-(NSURLSessionTask*) comAdobeGraniteQueriesImplHcAsyncIndexHealthCheckWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    indexingCriticalThreshold: (NSNumber*) indexingCriticalThreshold
    indexingWarnThreshold: (NSNumber*) indexingWarnThreshold
    hcTags: (NSArray<NSString*>*) hcTags
    completionHandler: (void (^)(OAIComAdobeGraniteQueriesImplHcAsyncIndexHealthCheckInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param largeIndexCriticalThreshold  (optional)
/// @param largeIndexWarnThreshold  (optional)
/// @param hcTags  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeGraniteQueriesImplHcLargeIndexHealthCheckInfo*
-(NSURLSessionTask*) comAdobeGraniteQueriesImplHcLargeIndexHealthCheckWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    largeIndexCriticalThreshold: (NSNumber*) largeIndexCriticalThreshold
    largeIndexWarnThreshold: (NSNumber*) largeIndexWarnThreshold
    hcTags: (NSArray<NSString*>*) hcTags
    completionHandler: (void (^)(OAIComAdobeGraniteQueriesImplHcLargeIndexHealthCheckInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param hcTags  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeGraniteQueriesImplHcQueriesStatusHealthCheckInfo*
-(NSURLSessionTask*) comAdobeGraniteQueriesImplHcQueriesStatusHealthCheckWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    hcTags: (NSArray<NSString*>*) hcTags
    completionHandler: (void (^)(OAIComAdobeGraniteQueriesImplHcQueriesStatusHealthCheckInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param getPeriod  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeGraniteQueriesImplHcQueryHealthCheckMetricsInfo*
-(NSURLSessionTask*) comAdobeGraniteQueriesImplHcQueryHealthCheckMetricsWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    getPeriod: (NSNumber*) getPeriod
    completionHandler: (void (^)(OAIComAdobeGraniteQueriesImplHcQueryHealthCheckMetricsInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param hcTags  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeGraniteQueriesImplHcQueryLimitsHealthCheckInfo*
-(NSURLSessionTask*) comAdobeGraniteQueriesImplHcQueryLimitsHealthCheckWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    hcTags: (NSArray<NSString*>*) hcTags
    completionHandler: (void (^)(OAIComAdobeGraniteQueriesImplHcQueryLimitsHealthCheckInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param numberOfRetriesAllowed  (optional)
/// @param hcTags  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeGraniteReplicationHcImplReplicationQueueHealthCheckInfo*
-(NSURLSessionTask*) comAdobeGraniteReplicationHcImplReplicationQueueHealthCheckWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    numberOfRetriesAllowed: (NSNumber*) numberOfRetriesAllowed
    hcTags: (NSArray<NSString*>*) hcTags
    completionHandler: (void (^)(OAIComAdobeGraniteReplicationHcImplReplicationQueueHealthCheckInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param hcTags  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeGraniteReplicationHcImplReplicationTransportUsersHealthCInfo*
-(NSURLSessionTask*) comAdobeGraniteReplicationHcImplReplicationTransportUsersHealthCWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    hcTags: (NSArray<NSString*>*) hcTags
    completionHandler: (void (^)(OAIComAdobeGraniteReplicationHcImplReplicationTransportUsersHealthCInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param hcTags  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeGraniteRepositoryHcImplAuthorizableNodeNameHealthCheckInfo*
-(NSURLSessionTask*) comAdobeGraniteRepositoryHcImplAuthorizableNodeNameHealthCheckWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    hcTags: (NSArray<NSString*>*) hcTags
    completionHandler: (void (^)(OAIComAdobeGraniteRepositoryHcImplAuthorizableNodeNameHealthCheckInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param hcTags  (optional)
/// @param excludeSearchPath  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeGraniteRepositoryHcImplContentSlingSlingContentHealthCInfo*
-(NSURLSessionTask*) comAdobeGraniteRepositoryHcImplContentSlingSlingContentHealthCWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    hcTags: (NSArray<NSString*>*) hcTags
    excludeSearchPath: (NSArray<NSString*>*) excludeSearchPath
    completionHandler: (void (^)(OAIComAdobeGraniteRepositoryHcImplContentSlingSlingContentHealthCInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param hcTags  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeGraniteRepositoryHcImplContinuousRGCHealthCheckInfo*
-(NSURLSessionTask*) comAdobeGraniteRepositoryHcImplContinuousRGCHealthCheckWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    hcTags: (NSArray<NSString*>*) hcTags
    completionHandler: (void (^)(OAIComAdobeGraniteRepositoryHcImplContinuousRGCHealthCheckInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param hcTags  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeGraniteRepositoryHcImplDefaultAccessUserProfileHealthCheInfo*
-(NSURLSessionTask*) comAdobeGraniteRepositoryHcImplDefaultAccessUserProfileHealthCheWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    hcTags: (NSArray<NSString*>*) hcTags
    completionHandler: (void (^)(OAIComAdobeGraniteRepositoryHcImplDefaultAccessUserProfileHealthCheInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param hcTags  (optional)
/// @param accountLogins  (optional)
/// @param consoleLogins  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeGraniteRepositoryHcImplDefaultLoginsHealthCheckInfo*
-(NSURLSessionTask*) comAdobeGraniteRepositoryHcImplDefaultLoginsHealthCheckWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    hcTags: (NSArray<NSString*>*) hcTags
    accountLogins: (NSArray<NSString*>*) accountLogins
    consoleLogins: (NSArray<NSString*>*) consoleLogins
    completionHandler: (void (^)(OAIComAdobeGraniteRepositoryHcImplDefaultLoginsHealthCheckInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param hcTags  (optional)
/// @param diskSpaceWarnThreshold  (optional)
/// @param diskSpaceErrorThreshold  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeGraniteRepositoryHcImplDiskSpaceHealthCheckInfo*
-(NSURLSessionTask*) comAdobeGraniteRepositoryHcImplDiskSpaceHealthCheckWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    hcTags: (NSArray<NSString*>*) hcTags
    diskSpaceWarnThreshold: (NSNumber*) diskSpaceWarnThreshold
    diskSpaceErrorThreshold: (NSNumber*) diskSpaceErrorThreshold
    completionHandler: (void (^)(OAIComAdobeGraniteRepositoryHcImplDiskSpaceHealthCheckInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param hcTags  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeGraniteRepositoryHcImplObservationQueueLengthHealthCheckInfo*
-(NSURLSessionTask*) comAdobeGraniteRepositoryHcImplObservationQueueLengthHealthCheckWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    hcTags: (NSArray<NSString*>*) hcTags
    completionHandler: (void (^)(OAIComAdobeGraniteRepositoryHcImplObservationQueueLengthHealthCheckInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param enabled  (optional)
/// @param intervalSeconds  (optional)
/// @param commitsPerIntervalThreshold  (optional)
/// @param maxLocationLength  (optional)
/// @param maxDetailsShown  (optional)
/// @param minDetailsPercentage  (optional)
/// @param threadMatchers  (optional)
/// @param maxGreedyDepth  (optional)
/// @param greedyStackMatchers  (optional)
/// @param stackFilters  (optional)
/// @param stackMatchers  (optional)
/// @param stackCategorizers  (optional)
/// @param stackShorteners  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeGraniteRepositoryImplCommitStatsConfigInfo*
-(NSURLSessionTask*) comAdobeGraniteRepositoryImplCommitStatsConfigWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    enabled: (NSNumber*) enabled
    intervalSeconds: (NSNumber*) intervalSeconds
    commitsPerIntervalThreshold: (NSNumber*) commitsPerIntervalThreshold
    maxLocationLength: (NSNumber*) maxLocationLength
    maxDetailsShown: (NSNumber*) maxDetailsShown
    minDetailsPercentage: (NSNumber*) minDetailsPercentage
    threadMatchers: (NSArray<NSString*>*) threadMatchers
    maxGreedyDepth: (NSNumber*) maxGreedyDepth
    greedyStackMatchers: (NSString*) greedyStackMatchers
    stackFilters: (NSArray<NSString*>*) stackFilters
    stackMatchers: (NSArray<NSString*>*) stackMatchers
    stackCategorizers: (NSArray<NSString*>*) stackCategorizers
    stackShorteners: (NSArray<NSString*>*) stackShorteners
    completionHandler: (void (^)(OAIComAdobeGraniteRepositoryImplCommitStatsConfigInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param serviceRanking  (optional)
/// @param serviceusersSimpleSubjectPopulation  (optional)
/// @param serviceusersList  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeGraniteRepositoryServiceUserConfigurationInfo*
-(NSURLSessionTask*) comAdobeGraniteRepositoryServiceUserConfigurationWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    serviceRanking: (NSNumber*) serviceRanking
    serviceusersSimpleSubjectPopulation: (NSNumber*) serviceusersSimpleSubjectPopulation
    serviceusersList: (NSArray<NSString*>*) serviceusersList
    completionHandler: (void (^)(OAIComAdobeGraniteRepositoryServiceUserConfigurationInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param hcTags  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeGraniteRequestsLoggingImplHcRequestsStatusHealthCheckImInfo*
-(NSURLSessionTask*) comAdobeGraniteRequestsLoggingImplHcRequestsStatusHealthCheckImWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    hcTags: (NSArray<NSString*>*) hcTags
    completionHandler: (void (^)(OAIComAdobeGraniteRequestsLoggingImplHcRequestsStatusHealthCheckImInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param name  (optional)
/// @param types  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeGraniteResourcestatusImplCompositeStatusTypeInfo*
-(NSURLSessionTask*) comAdobeGraniteResourcestatusImplCompositeStatusTypeWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    name: (NSString*) name
    types: (NSArray<NSString*>*) types
    completionHandler: (void (^)(OAIComAdobeGraniteResourcestatusImplCompositeStatusTypeInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param providerRoot  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeGraniteResourcestatusImplStatusResourceProviderImplInfo*
-(NSURLSessionTask*) comAdobeGraniteResourcestatusImplStatusResourceProviderImplWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    providerRoot: (NSString*) providerRoot
    completionHandler: (void (^)(OAIComAdobeGraniteResourcestatusImplStatusResourceProviderImplInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param mimeAllowEmpty  (optional)
/// @param mimeAllowed  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeGraniteRestAssetsImplAssetContentDispositionFilterInfo*
-(NSURLSessionTask*) comAdobeGraniteRestAssetsImplAssetContentDispositionFilterWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    mimeAllowEmpty: (NSNumber*) mimeAllowEmpty
    mimeAllowed: (NSArray<NSString*>*) mimeAllowed
    completionHandler: (void (^)(OAIComAdobeGraniteRestAssetsImplAssetContentDispositionFilterInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param providerRoots  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeGraniteRestImplApiEndpointResourceProviderFactoryImplInfo*
-(NSURLSessionTask*) comAdobeGraniteRestImplApiEndpointResourceProviderFactoryImplWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    providerRoots: (NSString*) providerRoots
    completionHandler: (void (^)(OAIComAdobeGraniteRestImplApiEndpointResourceProviderFactoryImplInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param defaultLimit  (optional)
/// @param useAbsoluteUri  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeGraniteRestImplServletDefaultGETServletInfo*
-(NSURLSessionTask*) comAdobeGraniteRestImplServletDefaultGETServletWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    defaultLimit: (NSNumber*) defaultLimit
    useAbsoluteUri: (NSNumber*) useAbsoluteUri
    completionHandler: (void (^)(OAIComAdobeGraniteRestImplServletDefaultGETServletInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param hcTags  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeGraniteSecurityUserUiInternalServletsSSLConfigurationSInfo*
-(NSURLSessionTask*) comAdobeGraniteSecurityUserUiInternalServletsSSLConfigurationSWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    hcTags: (NSArray<NSString*>*) hcTags
    completionHandler: (void (^)(OAIComAdobeGraniteSecurityUserUiInternalServletsSSLConfigurationSInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param adapterCondition  (optional)
/// @param graniteUserpropertiesNodetypes  (optional)
/// @param graniteUserpropertiesResourcetypes  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeGraniteSecurityUserUserPropertiesServiceInfo*
-(NSURLSessionTask*) comAdobeGraniteSecurityUserUserPropertiesServiceWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    adapterCondition: (NSString*) adapterCondition
    graniteUserpropertiesNodetypes: (NSArray<NSString*>*) graniteUserpropertiesNodetypes
    graniteUserpropertiesResourcetypes: (NSArray<NSString*>*) graniteUserpropertiesResourcetypes
    completionHandler: (void (^)(OAIComAdobeGraniteSecurityUserUserPropertiesServiceInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param group2memberRelationshipOutgoing  (optional)
/// @param group2memberExcludedOutgoing  (optional)
/// @param group2memberRelationshipIncoming  (optional)
/// @param group2memberExcludedIncoming  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeGraniteSocialgraphImplSocialGraphFactoryImplInfo*
-(NSURLSessionTask*) comAdobeGraniteSocialgraphImplSocialGraphFactoryImplWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    group2memberRelationshipOutgoing: (NSString*) group2memberRelationshipOutgoing
    group2memberExcludedOutgoing: (NSArray<NSString*>*) group2memberExcludedOutgoing
    group2memberRelationshipIncoming: (NSString*) group2memberRelationshipIncoming
    group2memberExcludedIncoming: (NSArray<NSString*>*) group2memberExcludedIncoming
    completionHandler: (void (^)(OAIComAdobeGraniteSocialgraphImplSocialGraphFactoryImplInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param schedulerExpression  (optional)
/// @param jmxObjectname  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeGraniteSystemMonitoringImplSystemStatsMBeanImplInfo*
-(NSURLSessionTask*) comAdobeGraniteSystemMonitoringImplSystemStatsMBeanImplWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    schedulerExpression: (NSString*) schedulerExpression
    jmxObjectname: (NSString*) jmxObjectname
    completionHandler: (void (^)(OAIComAdobeGraniteSystemMonitoringImplSystemStatsMBeanImplInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param adapterCondition  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeGraniteTaskmanagementImplJcrTaskAdapterFactoryInfo*
-(NSURLSessionTask*) comAdobeGraniteTaskmanagementImplJcrTaskAdapterFactoryWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    adapterCondition: (NSString*) adapterCondition
    completionHandler: (void (^)(OAIComAdobeGraniteTaskmanagementImplJcrTaskAdapterFactoryInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param archivingEnabled  (optional)
/// @param schedulerExpression  (optional)
/// @param archiveSinceDaysCompleted  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeGraniteTaskmanagementImplJcrTaskArchiveServiceInfo*
-(NSURLSessionTask*) comAdobeGraniteTaskmanagementImplJcrTaskArchiveServiceWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    archivingEnabled: (NSNumber*) archivingEnabled
    schedulerExpression: (NSString*) schedulerExpression
    archiveSinceDaysCompleted: (NSNumber*) archiveSinceDaysCompleted
    completionHandler: (void (^)(OAIComAdobeGraniteTaskmanagementImplJcrTaskArchiveServiceInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param purgeCompleted  (optional)
/// @param completedAge  (optional)
/// @param purgeActive  (optional)
/// @param activeAge  (optional)
/// @param saveThreshold  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeGraniteTaskmanagementImplPurgeTaskPurgeMaintenanceTaskInfo*
-(NSURLSessionTask*) comAdobeGraniteTaskmanagementImplPurgeTaskPurgeMaintenanceTaskWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    purgeCompleted: (NSNumber*) purgeCompleted
    completedAge: (NSNumber*) completedAge
    purgeActive: (NSNumber*) purgeActive
    activeAge: (NSNumber*) activeAge
    saveThreshold: (NSNumber*) saveThreshold
    completionHandler: (void (^)(OAIComAdobeGraniteTaskmanagementImplPurgeTaskPurgeMaintenanceTaskInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param adapterCondition  (optional)
/// @param taskmanagerAdmingroups  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeGraniteTaskmanagementImplServiceTaskManagerAdapterFactorInfo*
-(NSURLSessionTask*) comAdobeGraniteTaskmanagementImplServiceTaskManagerAdapterFactorWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    adapterCondition: (NSString*) adapterCondition
    taskmanagerAdmingroups: (NSArray<NSString*>*) taskmanagerAdmingroups
    completionHandler: (void (^)(OAIComAdobeGraniteTaskmanagementImplServiceTaskManagerAdapterFactorInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param schedulerPeriod  (optional)
/// @param schedulerRunOn  (optional)
/// @param graniteThreaddumpEnabled  (optional)
/// @param graniteThreaddumpDumpsPerFile  (optional)
/// @param graniteThreaddumpEnableGzipCompression  (optional)
/// @param graniteThreaddumpEnableDirectoriesCompression  (optional)
/// @param graniteThreaddumpEnableJStack  (optional)
/// @param graniteThreaddumpMaxBackupDays  (optional)
/// @param graniteThreaddumpBackupCleanTrigger  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeGraniteThreaddumpThreadDumpCollectorInfo*
-(NSURLSessionTask*) comAdobeGraniteThreaddumpThreadDumpCollectorWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    schedulerPeriod: (NSNumber*) schedulerPeriod
    schedulerRunOn: (NSString*) schedulerRunOn
    graniteThreaddumpEnabled: (NSNumber*) graniteThreaddumpEnabled
    graniteThreaddumpDumpsPerFile: (NSNumber*) graniteThreaddumpDumpsPerFile
    graniteThreaddumpEnableGzipCompression: (NSNumber*) graniteThreaddumpEnableGzipCompression
    graniteThreaddumpEnableDirectoriesCompression: (NSNumber*) graniteThreaddumpEnableDirectoriesCompression
    graniteThreaddumpEnableJStack: (NSNumber*) graniteThreaddumpEnableJStack
    graniteThreaddumpMaxBackupDays: (NSNumber*) graniteThreaddumpMaxBackupDays
    graniteThreaddumpBackupCleanTrigger: (NSString*) graniteThreaddumpBackupCleanTrigger
    completionHandler: (void (^)(OAIComAdobeGraniteThreaddumpThreadDumpCollectorInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param translationFactory  (optional)
/// @param defaultConnectorLabel  (optional)
/// @param defaultConnectorAttribution  (optional)
/// @param defaultConnectorWorkspaceId  (optional)
/// @param defaultConnectorSubscriptionKey  (optional)
/// @param languageMapLocation  (optional)
/// @param categoryMapLocation  (optional)
/// @param retryAttempts  (optional)
/// @param timeoutCount  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeGraniteTranslationConnectorMsftCoreImplMicrosoftTranslInfo*
-(NSURLSessionTask*) comAdobeGraniteTranslationConnectorMsftCoreImplMicrosoftTranslWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    translationFactory: (NSString*) translationFactory
    defaultConnectorLabel: (NSString*) defaultConnectorLabel
    defaultConnectorAttribution: (NSString*) defaultConnectorAttribution
    defaultConnectorWorkspaceId: (NSString*) defaultConnectorWorkspaceId
    defaultConnectorSubscriptionKey: (NSString*) defaultConnectorSubscriptionKey
    languageMapLocation: (NSString*) languageMapLocation
    categoryMapLocation: (NSString*) categoryMapLocation
    retryAttempts: (NSNumber*) retryAttempts
    timeoutCount: (NSNumber*) timeoutCount
    completionHandler: (void (^)(OAIComAdobeGraniteTranslationConnectorMsftCoreImplMicrosoftTranslInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param defaultConnectorName  (optional)
/// @param defaultCategory  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeGraniteTranslationCoreImplTranslationManagerImplInfo*
-(NSURLSessionTask*) comAdobeGraniteTranslationCoreImplTranslationManagerImplWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    defaultConnectorName: (NSString*) defaultConnectorName
    defaultCategory: (NSString*) defaultCategory
    completionHandler: (void (^)(OAIComAdobeGraniteTranslationCoreImplTranslationManagerImplInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param htmllibmanagerTiming  (optional)
/// @param htmllibmanagerDebugInitJs  (optional)
/// @param htmllibmanagerMinify  (optional)
/// @param htmllibmanagerDebug  (optional)
/// @param htmllibmanagerGzip  (optional)
/// @param htmllibmanagerMaxDataUriSize  (optional)
/// @param htmllibmanagerMaxage  (optional)
/// @param htmllibmanagerForceCQUrlInfo  (optional)
/// @param htmllibmanagerDefaultthemename  (optional)
/// @param htmllibmanagerDefaultuserthemename  (optional)
/// @param htmllibmanagerClientmanager  (optional)
/// @param htmllibmanagerPathList  (optional)
/// @param htmllibmanagerExcludedPathList  (optional)
/// @param htmllibmanagerProcessorJs  (optional)
/// @param htmllibmanagerProcessorCss  (optional)
/// @param htmllibmanagerLongcachePatterns  (optional)
/// @param htmllibmanagerLongcacheFormat  (optional)
/// @param htmllibmanagerUseFileSystemOutputCache  (optional)
/// @param htmllibmanagerFileSystemOutputCacheLocation  (optional)
/// @param htmllibmanagerDisableReplacement  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeGraniteUiClientlibsImplHtmlLibraryManagerImplInfo*
-(NSURLSessionTask*) comAdobeGraniteUiClientlibsImplHtmlLibraryManagerImplWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    htmllibmanagerTiming: (NSNumber*) htmllibmanagerTiming
    htmllibmanagerDebugInitJs: (NSString*) htmllibmanagerDebugInitJs
    htmllibmanagerMinify: (NSNumber*) htmllibmanagerMinify
    htmllibmanagerDebug: (NSNumber*) htmllibmanagerDebug
    htmllibmanagerGzip: (NSNumber*) htmllibmanagerGzip
    htmllibmanagerMaxDataUriSize: (NSNumber*) htmllibmanagerMaxDataUriSize
    htmllibmanagerMaxage: (NSNumber*) htmllibmanagerMaxage
    htmllibmanagerForceCQUrlInfo: (NSNumber*) htmllibmanagerForceCQUrlInfo
    htmllibmanagerDefaultthemename: (NSString*) htmllibmanagerDefaultthemename
    htmllibmanagerDefaultuserthemename: (NSString*) htmllibmanagerDefaultuserthemename
    htmllibmanagerClientmanager: (NSString*) htmllibmanagerClientmanager
    htmllibmanagerPathList: (NSArray<NSString*>*) htmllibmanagerPathList
    htmllibmanagerExcludedPathList: (NSArray<NSString*>*) htmllibmanagerExcludedPathList
    htmllibmanagerProcessorJs: (NSArray<NSString*>*) htmllibmanagerProcessorJs
    htmllibmanagerProcessorCss: (NSArray<NSString*>*) htmllibmanagerProcessorCss
    htmllibmanagerLongcachePatterns: (NSArray<NSString*>*) htmllibmanagerLongcachePatterns
    htmllibmanagerLongcacheFormat: (NSString*) htmllibmanagerLongcacheFormat
    htmllibmanagerUseFileSystemOutputCache: (NSNumber*) htmllibmanagerUseFileSystemOutputCache
    htmllibmanagerFileSystemOutputCacheLocation: (NSString*) htmllibmanagerFileSystemOutputCacheLocation
    htmllibmanagerDisableReplacement: (NSArray<NSString*>*) htmllibmanagerDisableReplacement
    completionHandler: (void (^)(OAIComAdobeGraniteUiClientlibsImplHtmlLibraryManagerImplInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param enabled  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeGraniteWorkflowConsoleFragsWorkflowWithdrawFeatureInfo*
-(NSURLSessionTask*) comAdobeGraniteWorkflowConsoleFragsWorkflowWithdrawFeatureWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    enabled: (NSNumber*) enabled
    completionHandler: (void (^)(OAIComAdobeGraniteWorkflowConsoleFragsWorkflowWithdrawFeatureInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param graniteWorkflowWorkflowPublishEventServiceEnabled  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeGraniteWorkflowConsolePublishWorkflowPublishEventServiceInfo*
-(NSURLSessionTask*) comAdobeGraniteWorkflowConsolePublishWorkflowPublishEventServiceWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    graniteWorkflowWorkflowPublishEventServiceEnabled: (NSNumber*) graniteWorkflowWorkflowPublishEventServiceEnabled
    completionHandler: (void (^)(OAIComAdobeGraniteWorkflowConsolePublishWorkflowPublishEventServiceInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param bucketSize  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeGraniteWorkflowCoreJcrWorkflowBucketManagerInfo*
-(NSURLSessionTask*) comAdobeGraniteWorkflowCoreJcrWorkflowBucketManagerWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    bucketSize: (NSNumber*) bucketSize
    completionHandler: (void (^)(OAIComAdobeGraniteWorkflowCoreJcrWorkflowBucketManagerInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param defaultTimeout  (optional)
/// @param maxTimeout  (optional)
/// @param defaultPeriod  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeGraniteWorkflowCoreJobExternalProcessJobHandlerInfo*
-(NSURLSessionTask*) comAdobeGraniteWorkflowCoreJobExternalProcessJobHandlerWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    defaultTimeout: (NSNumber*) defaultTimeout
    maxTimeout: (NSNumber*) maxTimeout
    defaultPeriod: (NSNumber*) defaultPeriod
    completionHandler: (void (^)(OAIComAdobeGraniteWorkflowCoreJobExternalProcessJobHandlerInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param jobTopics  (optional)
/// @param allowSelfProcessTermination  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeGraniteWorkflowCoreJobJobHandlerInfo*
-(NSURLSessionTask*) comAdobeGraniteWorkflowCoreJobJobHandlerWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    jobTopics: (NSArray<NSString*>*) jobTopics
    allowSelfProcessTermination: (NSNumber*) allowSelfProcessTermination
    completionHandler: (void (^)(OAIComAdobeGraniteWorkflowCoreJobJobHandlerInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param jobTopics  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeGraniteWorkflowCoreOffloadingWorkflowOffloadingJobConsumInfo*
-(NSURLSessionTask*) comAdobeGraniteWorkflowCoreOffloadingWorkflowOffloadingJobConsumWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    jobTopics: (NSString*) jobTopics
    completionHandler: (void (^)(OAIComAdobeGraniteWorkflowCoreOffloadingWorkflowOffloadingJobConsumInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param getSystemWorkflowModels  (optional)
/// @param getPackageRootPath  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeGraniteWorkflowCorePayloadMapCacheInfo*
-(NSURLSessionTask*) comAdobeGraniteWorkflowCorePayloadMapCacheWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    getSystemWorkflowModels: (NSArray<NSString*>*) getSystemWorkflowModels
    getPackageRootPath: (NSString*) getPackageRootPath
    completionHandler: (void (^)(OAIComAdobeGraniteWorkflowCorePayloadMapCacheInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param payloadMoveWhiteList  (optional)
/// @param payloadMoveHandleFromWorkflowProcess  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeGraniteWorkflowCorePayloadmapPayloadMoveListenerInfo*
-(NSURLSessionTask*) comAdobeGraniteWorkflowCorePayloadmapPayloadMoveListenerWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    payloadMoveWhiteList: (NSArray<NSString*>*) payloadMoveWhiteList
    payloadMoveHandleFromWorkflowProcess: (NSNumber*) payloadMoveHandleFromWorkflowProcess
    completionHandler: (void (^)(OAIComAdobeGraniteWorkflowCorePayloadmapPayloadMoveListenerInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param cqWorkflowConfigWorkflowPackagesRootPath  (optional)
/// @param cqWorkflowConfigWorkflowProcessLegacyMode  (optional)
/// @param cqWorkflowConfigAllowLocking  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeGraniteWorkflowCoreWorkflowConfigInfo*
-(NSURLSessionTask*) comAdobeGraniteWorkflowCoreWorkflowConfigWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    cqWorkflowConfigWorkflowPackagesRootPath: (NSArray<NSString*>*) cqWorkflowConfigWorkflowPackagesRootPath
    cqWorkflowConfigWorkflowProcessLegacyMode: (NSNumber*) cqWorkflowConfigWorkflowProcessLegacyMode
    cqWorkflowConfigAllowLocking: (NSNumber*) cqWorkflowConfigAllowLocking
    completionHandler: (void (^)(OAIComAdobeGraniteWorkflowCoreWorkflowConfigInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param graniteWorkflowinboxSortPropertyName  (optional)
/// @param graniteWorkflowinboxSortOrder  (optional)
/// @param cqWorkflowJobRetry  (optional)
/// @param cqWorkflowSuperuser  (optional)
/// @param graniteWorkflowInboxQuerySize  (optional)
/// @param graniteWorkflowAdminUserGroupFilter  (optional)
/// @param graniteWorkflowEnforceWorkitemAssigneePermissions  (optional)
/// @param graniteWorkflowEnforceWorkflowInitiatorPermissions  (optional)
/// @param graniteWorkflowInjectTenantIdInJobTopics  (optional)
/// @param graniteWorkflowMaxPurgeSaveThreshold  (optional)
/// @param graniteWorkflowMaxPurgeQueryCount  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeGraniteWorkflowCoreWorkflowSessionFactoryInfo*
-(NSURLSessionTask*) comAdobeGraniteWorkflowCoreWorkflowSessionFactoryWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    graniteWorkflowinboxSortPropertyName: (NSString*) graniteWorkflowinboxSortPropertyName
    graniteWorkflowinboxSortOrder: (NSString*) graniteWorkflowinboxSortOrder
    cqWorkflowJobRetry: (NSNumber*) cqWorkflowJobRetry
    cqWorkflowSuperuser: (NSArray<NSString*>*) cqWorkflowSuperuser
    graniteWorkflowInboxQuerySize: (NSNumber*) graniteWorkflowInboxQuerySize
    graniteWorkflowAdminUserGroupFilter: (NSNumber*) graniteWorkflowAdminUserGroupFilter
    graniteWorkflowEnforceWorkitemAssigneePermissions: (NSNumber*) graniteWorkflowEnforceWorkitemAssigneePermissions
    graniteWorkflowEnforceWorkflowInitiatorPermissions: (NSNumber*) graniteWorkflowEnforceWorkflowInitiatorPermissions
    graniteWorkflowInjectTenantIdInJobTopics: (NSNumber*) graniteWorkflowInjectTenantIdInJobTopics
    graniteWorkflowMaxPurgeSaveThreshold: (NSNumber*) graniteWorkflowMaxPurgeSaveThreshold
    graniteWorkflowMaxPurgeQueryCount: (NSNumber*) graniteWorkflowMaxPurgeQueryCount
    completionHandler: (void (^)(OAIComAdobeGraniteWorkflowCoreWorkflowSessionFactoryInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param scheduledpurgeName  (optional)
/// @param scheduledpurgeWorkflowStatus  (optional)
/// @param scheduledpurgeModelIds  (optional)
/// @param scheduledpurgeDaysold  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeGraniteWorkflowPurgeSchedulerInfo*
-(NSURLSessionTask*) comAdobeGraniteWorkflowPurgeSchedulerWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    scheduledpurgeName: (NSString*) scheduledpurgeName
    scheduledpurgeWorkflowStatus: (NSString*) scheduledpurgeWorkflowStatus
    scheduledpurgeModelIds: (NSArray<NSString*>*) scheduledpurgeModelIds
    scheduledpurgeDaysold: (NSNumber*) scheduledpurgeDaysold
    completionHandler: (void (^)(OAIComAdobeGraniteWorkflowPurgeSchedulerInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param maxConnections  (optional)
/// @param maxRequests  (optional)
/// @param requestTimeout  (optional)
/// @param requestRetries  (optional)
/// @param launchTimeout  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeOctopusNcommBootstrapInfo*
-(NSURLSessionTask*) comAdobeOctopusNcommBootstrapWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    maxConnections: (NSNumber*) maxConnections
    maxRequests: (NSNumber*) maxRequests
    requestTimeout: (NSNumber*) requestTimeout
    requestRetries: (NSNumber*) requestRetries
    launchTimeout: (NSNumber*) launchTimeout
    completionHandler: (void (^)(OAIComAdobeOctopusNcommBootstrapInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param communitiesIntegrationLivefyreSlingEventFilter  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeSocialIntegrationsLivefyreUserPingforpullImplPingPullSInfo*
-(NSURLSessionTask*) comAdobeSocialIntegrationsLivefyreUserPingforpullImplPingPullSWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    communitiesIntegrationLivefyreSlingEventFilter: (NSString*) communitiesIntegrationLivefyreSlingEventFilter
    completionHandler: (void (^)(OAIComAdobeSocialIntegrationsLivefyreUserPingforpullImplPingPullSInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param maxConnections  (optional)
/// @param maxRequests  (optional)
/// @param requestTimeout  (optional)
/// @param logDir  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComAdobeXmpWorkerFilesNcommXMPFilesNCommInfo*
-(NSURLSessionTask*) comAdobeXmpWorkerFilesNcommXMPFilesNCommWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    maxConnections: (NSString*) maxConnections
    maxRequests: (NSString*) maxRequests
    requestTimeout: (NSString*) requestTimeout
    logDir: (NSString*) logDir
    completionHandler: (void (^)(OAIComAdobeXmpWorkerFilesNcommXMPFilesNCommInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param jdbcDriverClass  (optional)
/// @param jdbcConnectionUri  (optional)
/// @param jdbcUsername  (optional)
/// @param jdbcPassword  (optional)
/// @param jdbcValidationQuery  (optional)
/// @param defaultReadonly  (optional)
/// @param defaultAutocommit  (optional)
/// @param poolSize  (optional)
/// @param poolMaxWaitMsec  (optional)
/// @param datasourceName  (optional)
/// @param datasourceSvcProperties  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComDayCommonsDatasourceJdbcpoolJdbcPoolServiceInfo*
-(NSURLSessionTask*) comDayCommonsDatasourceJdbcpoolJdbcPoolServiceWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    jdbcDriverClass: (NSString*) jdbcDriverClass
    jdbcConnectionUri: (NSString*) jdbcConnectionUri
    jdbcUsername: (NSString*) jdbcUsername
    jdbcPassword: (NSString*) jdbcPassword
    jdbcValidationQuery: (NSString*) jdbcValidationQuery
    defaultReadonly: (NSNumber*) defaultReadonly
    defaultAutocommit: (NSNumber*) defaultAutocommit
    poolSize: (NSNumber*) poolSize
    poolMaxWaitMsec: (NSNumber*) poolMaxWaitMsec
    datasourceName: (NSString*) datasourceName
    datasourceSvcProperties: (NSArray<NSString*>*) datasourceSvcProperties
    completionHandler: (void (^)(OAIComDayCommonsDatasourceJdbcpoolJdbcPoolServiceInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param proxyEnabled  (optional)
/// @param proxyHost  (optional)
/// @param proxyUser  (optional)
/// @param proxyPassword  (optional)
/// @param proxyNtlmHost  (optional)
/// @param proxyNtlmDomain  (optional)
/// @param proxyExceptions  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComDayCommonsHttpclientInfo*
-(NSURLSessionTask*) comDayCommonsHttpclientWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    proxyEnabled: (NSNumber*) proxyEnabled
    proxyHost: (NSString*) proxyHost
    proxyUser: (NSString*) proxyUser
    proxyPassword: (NSString*) proxyPassword
    proxyNtlmHost: (NSString*) proxyNtlmHost
    proxyNtlmDomain: (NSString*) proxyNtlmDomain
    proxyExceptions: (NSArray<NSString*>*) proxyExceptions
    completionHandler: (void (^)(OAIComDayCommonsHttpclientInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param cqStoreListenerAdditionalStorePaths  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComDayCqAnalyticsImplStorePropertiesChangeListenerInfo*
-(NSURLSessionTask*) comDayCqAnalyticsImplStorePropertiesChangeListenerWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    cqStoreListenerAdditionalStorePaths: (NSArray<NSString*>*) cqStoreListenerAdditionalStorePaths
    completionHandler: (void (^)(OAIComDayCqAnalyticsImplStorePropertiesChangeListenerInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param allowedPaths  (optional)
/// @param cqAnalyticsSaintExporterPagesize  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComDayCqAnalyticsSitecatalystImplExporterClassificationsExporteInfo*
-(NSURLSessionTask*) comDayCqAnalyticsSitecatalystImplExporterClassificationsExporteWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    allowedPaths: (NSArray<NSString*>*) allowedPaths
    cqAnalyticsSaintExporterPagesize: (NSNumber*) cqAnalyticsSaintExporterPagesize
    completionHandler: (void (^)(OAIComDayCqAnalyticsSitecatalystImplExporterClassificationsExporteInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param reportFetchAttempts  (optional)
/// @param reportFetchDelay  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComDayCqAnalyticsSitecatalystImplImporterReportImporterInfo*
-(NSURLSessionTask*) comDayCqAnalyticsSitecatalystImplImporterReportImporterWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    reportFetchAttempts: (NSNumber*) reportFetchAttempts
    reportFetchDelay: (NSNumber*) reportFetchDelay
    completionHandler: (void (^)(OAIComDayCqAnalyticsSitecatalystImplImporterReportImporterInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param cqAnalyticsAdapterfactoryContextstores  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComDayCqAnalyticsSitecatalystImplSitecatalystAdapterFactoryInfo*
-(NSURLSessionTask*) comDayCqAnalyticsSitecatalystImplSitecatalystAdapterFactoryWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    cqAnalyticsAdapterfactoryContextstores: (NSArray<NSString*>*) cqAnalyticsAdapterfactoryContextstores
    completionHandler: (void (^)(OAIComDayCqAnalyticsSitecatalystImplSitecatalystAdapterFactoryInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param cqAnalyticsSitecatalystServiceDatacenterUrl  (optional)
/// @param devhostnamepatterns  (optional)
/// @param connectionTimeout  (optional)
/// @param socketTimeout  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComDayCqAnalyticsSitecatalystImplSitecatalystHttpClientImplInfo*
-(NSURLSessionTask*) comDayCqAnalyticsSitecatalystImplSitecatalystHttpClientImplWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    cqAnalyticsSitecatalystServiceDatacenterUrl: (NSArray<NSString*>*) cqAnalyticsSitecatalystServiceDatacenterUrl
    devhostnamepatterns: (NSArray<NSString*>*) devhostnamepatterns
    connectionTimeout: (NSNumber*) connectionTimeout
    socketTimeout: (NSNumber*) socketTimeout
    completionHandler: (void (^)(OAIComDayCqAnalyticsSitecatalystImplSitecatalystHttpClientImplInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param cqAnalyticsTestandtargetAccountoptionsupdaterEnabled  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComDayCqAnalyticsTestandtargetImplAccountOptionsUpdaterInfo*
-(NSURLSessionTask*) comDayCqAnalyticsTestandtargetImplAccountOptionsUpdaterWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    cqAnalyticsTestandtargetAccountoptionsupdaterEnabled: (NSNumber*) cqAnalyticsTestandtargetAccountoptionsupdaterEnabled
    completionHandler: (void (^)(OAIComDayCqAnalyticsTestandtargetImplAccountOptionsUpdaterInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param cqAnalyticsTestandtargetDeleteauthoractivitylistenerEnabled  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComDayCqAnalyticsTestandtargetImplDeleteAuthorActivityListenerInfo*
-(NSURLSessionTask*) comDayCqAnalyticsTestandtargetImplDeleteAuthorActivityListenerWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    cqAnalyticsTestandtargetDeleteauthoractivitylistenerEnabled: (NSNumber*) cqAnalyticsTestandtargetDeleteauthoractivitylistenerEnabled
    completionHandler: (void (^)(OAIComDayCqAnalyticsTestandtargetImplDeleteAuthorActivityListenerInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param cqAnalyticsTestandtargetPushauthorcampaignpagelistenerEnabled  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComDayCqAnalyticsTestandtargetImplPushAuthorCampaignPageListenerInfo*
-(NSURLSessionTask*) comDayCqAnalyticsTestandtargetImplPushAuthorCampaignPageListenerWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    cqAnalyticsTestandtargetPushauthorcampaignpagelistenerEnabled: (NSNumber*) cqAnalyticsTestandtargetPushauthorcampaignpagelistenerEnabled
    completionHandler: (void (^)(OAIComDayCqAnalyticsTestandtargetImplPushAuthorCampaignPageListenerInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param cqAnalyticsTestandtargetSegmentimporterEnabled  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComDayCqAnalyticsTestandtargetImplSegmentImporterInfo*
-(NSURLSessionTask*) comDayCqAnalyticsTestandtargetImplSegmentImporterWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    cqAnalyticsTestandtargetSegmentimporterEnabled: (NSNumber*) cqAnalyticsTestandtargetSegmentimporterEnabled
    completionHandler: (void (^)(OAIComDayCqAnalyticsTestandtargetImplSegmentImporterInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param endpointUri  (optional)
/// @param connectionTimeout  (optional)
/// @param socketTimeout  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComDayCqAnalyticsTestandtargetImplServiceWebServiceImplInfo*
-(NSURLSessionTask*) comDayCqAnalyticsTestandtargetImplServiceWebServiceImplWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    endpointUri: (NSString*) endpointUri
    connectionTimeout: (NSNumber*) connectionTimeout
    socketTimeout: (NSNumber*) socketTimeout
    completionHandler: (void (^)(OAIComDayCqAnalyticsTestandtargetImplServiceWebServiceImplInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param testandtargetEndpointUrl  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComDayCqAnalyticsTestandtargetImplServletsAdminServerServletInfo*
-(NSURLSessionTask*) comDayCqAnalyticsTestandtargetImplServletsAdminServerServletWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    testandtargetEndpointUrl: (NSString*) testandtargetEndpointUrl
    completionHandler: (void (^)(OAIComDayCqAnalyticsTestandtargetImplServletsAdminServerServletInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param cqAnalyticsTestandtargetApiUrl  (optional)
/// @param cqAnalyticsTestandtargetTimeout  (optional)
/// @param cqAnalyticsTestandtargetSockettimeout  (optional)
/// @param cqAnalyticsTestandtargetRecommendationsUrlReplace  (optional)
/// @param cqAnalyticsTestandtargetRecommendationsUrlReplacewith  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComDayCqAnalyticsTestandtargetImplTestandtargetHttpClientImplInfo*
-(NSURLSessionTask*) comDayCqAnalyticsTestandtargetImplTestandtargetHttpClientImplWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    cqAnalyticsTestandtargetApiUrl: (NSString*) cqAnalyticsTestandtargetApiUrl
    cqAnalyticsTestandtargetTimeout: (NSNumber*) cqAnalyticsTestandtargetTimeout
    cqAnalyticsTestandtargetSockettimeout: (NSNumber*) cqAnalyticsTestandtargetSockettimeout
    cqAnalyticsTestandtargetRecommendationsUrlReplace: (NSString*) cqAnalyticsTestandtargetRecommendationsUrlReplace
    cqAnalyticsTestandtargetRecommendationsUrlReplacewith: (NSString*) cqAnalyticsTestandtargetRecommendationsUrlReplacewith
    completionHandler: (void (^)(OAIComDayCqAnalyticsTestandtargetImplTestandtargetHttpClientImplInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param cugExemptedPrincipals  (optional)
/// @param cugEnabled  (optional)
/// @param cugPrincipalsRegex  (optional)
/// @param cugPrincipalsReplacement  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComDayCqAuthImplCugCugSupportImplInfo*
-(NSURLSessionTask*) comDayCqAuthImplCugCugSupportImplWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    cugExemptedPrincipals: (NSArray<NSString*>*) cugExemptedPrincipals
    cugEnabled: (NSNumber*) cugEnabled
    cugPrincipalsRegex: (NSString*) cugPrincipalsRegex
    cugPrincipalsReplacement: (NSString*) cugPrincipalsReplacement
    completionHandler: (void (^)(OAIComDayCqAuthImplCugCugSupportImplInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param path  (optional)
/// @param serviceRanking  (optional)
/// @param authLoginselectorMappings  (optional)
/// @param authLoginselectorChangepwMappings  (optional)
/// @param authLoginselectorDefaultloginpage  (optional)
/// @param authLoginselectorDefaultchangepwpage  (optional)
/// @param authLoginselectorHandle  (optional)
/// @param authLoginselectorHandleAllExtensions  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComDayCqAuthImplLoginSelectorHandlerInfo*
-(NSURLSessionTask*) comDayCqAuthImplLoginSelectorHandlerWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    path: (NSString*) path
    serviceRanking: (NSNumber*) serviceRanking
    authLoginselectorMappings: (NSArray<NSString*>*) authLoginselectorMappings
    authLoginselectorChangepwMappings: (NSArray<NSString*>*) authLoginselectorChangepwMappings
    authLoginselectorDefaultloginpage: (NSString*) authLoginselectorDefaultloginpage
    authLoginselectorDefaultchangepwpage: (NSString*) authLoginselectorDefaultchangepwpage
    authLoginselectorHandle: (NSArray<NSString*>*) authLoginselectorHandle
    authLoginselectorHandleAllExtensions: (NSNumber*) authLoginselectorHandleAllExtensions
    completionHandler: (void (^)(OAIComDayCqAuthImplLoginSelectorHandlerInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param externalizerDomains  (optional)
/// @param externalizerHost  (optional)
/// @param externalizerContextpath  (optional)
/// @param externalizerEncodedpath  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComDayCqCommonsImplExternalizerImplInfo*
-(NSURLSessionTask*) comDayCqCommonsImplExternalizerImplWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    externalizerDomains: (NSArray<NSString*>*) externalizerDomains
    externalizerHost: (NSString*) externalizerHost
    externalizerContextpath: (NSString*) externalizerContextpath
    externalizerEncodedpath: (NSNumber*) externalizerEncodedpath
    completionHandler: (void (^)(OAIComDayCqCommonsImplExternalizerImplInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param rootmappingTarget  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComDayCqCommonsServletsRootMappingServletInfo*
-(NSURLSessionTask*) comDayCqCommonsServletsRootMappingServletWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    rootmappingTarget: (NSString*) rootmappingTarget
    completionHandler: (void (^)(OAIComDayCqCommonsServletsRootMappingServletInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param codeupgradetasks  (optional)
/// @param codeupgradetaskfilters  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComDayCqCompatCodeupgradeImplCodeUpgradeExecutionConditionCheckeInfo*
-(NSURLSessionTask*) comDayCqCompatCodeupgradeImplCodeUpgradeExecutionConditionCheckeWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    codeupgradetasks: (NSArray<NSString*>*) codeupgradetasks
    codeupgradetaskfilters: (NSArray<NSString*>*) codeupgradetaskfilters
    completionHandler: (void (^)(OAIComDayCqCompatCodeupgradeImplCodeUpgradeExecutionConditionCheckeInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param upgradeTaskIgnoreList  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComDayCqCompatCodeupgradeImplUpgradeTaskIgnoreListInfo*
-(NSURLSessionTask*) comDayCqCompatCodeupgradeImplUpgradeTaskIgnoreListWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    upgradeTaskIgnoreList: (NSArray<NSString*>*) upgradeTaskIgnoreList
    completionHandler: (void (^)(OAIComDayCqCompatCodeupgradeImplUpgradeTaskIgnoreListInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param effectiveBundleListPath  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComDayCqCompatCodeupgradeImplVersionRangeTaskIgnorelistInfo*
-(NSURLSessionTask*) comDayCqCompatCodeupgradeImplVersionRangeTaskIgnorelistWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    effectiveBundleListPath: (NSString*) effectiveBundleListPath
    completionHandler: (void (^)(OAIComDayCqCompatCodeupgradeImplVersionRangeTaskIgnorelistInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param contentsyncFallbackAuthorizable  (optional)
/// @param contentsyncFallbackUpdateuser  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComDayCqContentsyncImplContentSyncManagerImplInfo*
-(NSURLSessionTask*) comDayCqContentsyncImplContentSyncManagerImplWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    contentsyncFallbackAuthorizable: (NSString*) contentsyncFallbackAuthorizable
    contentsyncFallbackUpdateuser: (NSString*) contentsyncFallbackUpdateuser
    completionHandler: (void (^)(OAIComDayCqContentsyncImplContentSyncManagerImplInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param largeFileThreshold  (optional)
/// @param largeCommentThreshold  (optional)
/// @param cqDamEnableExtMetaExtraction  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComDayCqDamCommonsHandlerStandardImageHandlerInfo*
-(NSURLSessionTask*) comDayCqDamCommonsHandlerStandardImageHandlerWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    largeFileThreshold: (NSNumber*) largeFileThreshold
    largeCommentThreshold: (NSNumber*) largeCommentThreshold
    cqDamEnableExtMetaExtraction: (NSNumber*) cqDamEnableExtMetaExtraction
    completionHandler: (void (^)(OAIComDayCqDamCommonsHandlerStandardImageHandlerInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param xmpFilterApplyWhitelist  (optional)
/// @param xmpFilterWhitelist  (optional)
/// @param xmpFilterApplyBlacklist  (optional)
/// @param xmpFilterBlacklist  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComDayCqDamCommonsMetadataXmpFilterBlackWhiteInfo*
-(NSURLSessionTask*) comDayCqDamCommonsMetadataXmpFilterBlackWhiteWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    xmpFilterApplyWhitelist: (NSNumber*) xmpFilterApplyWhitelist
    xmpFilterWhitelist: (NSArray<NSString*>*) xmpFilterWhitelist
    xmpFilterApplyBlacklist: (NSNumber*) xmpFilterApplyBlacklist
    xmpFilterBlacklist: (NSArray<NSString*>*) xmpFilterBlacklist
    completionHandler: (void (^)(OAIComDayCqDamCommonsMetadataXmpFilterBlackWhiteInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param largeFileMin  (optional)
/// @param cacheApply  (optional)
/// @param mimeTypes  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComDayCqDamCommonsUtilImplAssetCacheImplInfo*
-(NSURLSessionTask*) comDayCqDamCommonsUtilImplAssetCacheImplWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    largeFileMin: (NSNumber*) largeFileMin
    cacheApply: (NSNumber*) cacheApply
    mimeTypes: (NSArray<NSString*>*) mimeTypes
    completionHandler: (void (^)(OAIComDayCqDamCommonsUtilImplAssetCacheImplInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param cqDamConfigAnnotationPdfDocumentWidth  (optional)
/// @param cqDamConfigAnnotationPdfDocumentHeight  (optional)
/// @param cqDamConfigAnnotationPdfDocumentPaddingHorizontal  (optional)
/// @param cqDamConfigAnnotationPdfDocumentPaddingVertical  (optional)
/// @param cqDamConfigAnnotationPdfFontSize  (optional)
/// @param cqDamConfigAnnotationPdfFontColor  (optional)
/// @param cqDamConfigAnnotationPdfFontFamily  (optional)
/// @param cqDamConfigAnnotationPdfFontLight  (optional)
/// @param cqDamConfigAnnotationPdfMarginTextImage  (optional)
/// @param cqDamConfigAnnotationPdfMinImageHeight  (optional)
/// @param cqDamConfigAnnotationPdfReviewStatusWidth  (optional)
/// @param cqDamConfigAnnotationPdfReviewStatusColorApproved  (optional)
/// @param cqDamConfigAnnotationPdfReviewStatusColorRejected  (optional)
/// @param cqDamConfigAnnotationPdfReviewStatusColorChangesRequested  (optional)
/// @param cqDamConfigAnnotationPdfAnnotationMarkerWidth  (optional)
/// @param cqDamConfigAnnotationPdfAssetMinheight  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComDayCqDamCoreImplAnnotationPdfAnnotationPdfConfigInfo*
-(NSURLSessionTask*) comDayCqDamCoreImplAnnotationPdfAnnotationPdfConfigWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    cqDamConfigAnnotationPdfDocumentWidth: (NSNumber*) cqDamConfigAnnotationPdfDocumentWidth
    cqDamConfigAnnotationPdfDocumentHeight: (NSNumber*) cqDamConfigAnnotationPdfDocumentHeight
    cqDamConfigAnnotationPdfDocumentPaddingHorizontal: (NSNumber*) cqDamConfigAnnotationPdfDocumentPaddingHorizontal
    cqDamConfigAnnotationPdfDocumentPaddingVertical: (NSNumber*) cqDamConfigAnnotationPdfDocumentPaddingVertical
    cqDamConfigAnnotationPdfFontSize: (NSNumber*) cqDamConfigAnnotationPdfFontSize
    cqDamConfigAnnotationPdfFontColor: (NSString*) cqDamConfigAnnotationPdfFontColor
    cqDamConfigAnnotationPdfFontFamily: (NSString*) cqDamConfigAnnotationPdfFontFamily
    cqDamConfigAnnotationPdfFontLight: (NSString*) cqDamConfigAnnotationPdfFontLight
    cqDamConfigAnnotationPdfMarginTextImage: (NSNumber*) cqDamConfigAnnotationPdfMarginTextImage
    cqDamConfigAnnotationPdfMinImageHeight: (NSNumber*) cqDamConfigAnnotationPdfMinImageHeight
    cqDamConfigAnnotationPdfReviewStatusWidth: (NSNumber*) cqDamConfigAnnotationPdfReviewStatusWidth
    cqDamConfigAnnotationPdfReviewStatusColorApproved: (NSString*) cqDamConfigAnnotationPdfReviewStatusColorApproved
    cqDamConfigAnnotationPdfReviewStatusColorRejected: (NSString*) cqDamConfigAnnotationPdfReviewStatusColorRejected
    cqDamConfigAnnotationPdfReviewStatusColorChangesRequested: (NSString*) cqDamConfigAnnotationPdfReviewStatusColorChangesRequested
    cqDamConfigAnnotationPdfAnnotationMarkerWidth: (NSNumber*) cqDamConfigAnnotationPdfAnnotationMarkerWidth
    cqDamConfigAnnotationPdfAssetMinheight: (NSNumber*) cqDamConfigAnnotationPdfAssetMinheight
    completionHandler: (void (^)(OAIComDayCqDamCoreImplAnnotationPdfAnnotationPdfConfigInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param enabled  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComDayCqDamCoreImplAssetMoveListenerInfo*
-(NSURLSessionTask*) comDayCqDamCoreImplAssetMoveListenerWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    enabled: (NSNumber*) enabled
    completionHandler: (void (^)(OAIComDayCqDamCoreImplAssetMoveListenerInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param isEnabled  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComDayCqDamCoreImplAssethomeAssetHomePageConfigurationInfo*
-(NSURLSessionTask*) comDayCqDamCoreImplAssethomeAssetHomePageConfigurationWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    isEnabled: (NSNumber*) isEnabled
    completionHandler: (void (^)(OAIComDayCqDamCoreImplAssethomeAssetHomePageConfigurationInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param cqDamAdhocAssetSharePrezipMaxcontentsize  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComDayCqDamCoreImplAssetlinkshareAdhocAssetShareProxyServletInfo*
-(NSURLSessionTask*) comDayCqDamCoreImplAssetlinkshareAdhocAssetShareProxyServletWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    cqDamAdhocAssetSharePrezipMaxcontentsize: (NSNumber*) cqDamAdhocAssetSharePrezipMaxcontentsize
    completionHandler: (void (^)(OAIComDayCqDamCoreImplAssetlinkshareAdhocAssetShareProxyServletInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param cqDamImageCacheMaxMemory  (optional)
/// @param cqDamImageCacheMaxAge  (optional)
/// @param cqDamImageCacheMaxDimension  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComDayCqDamCoreImplCacheCQBufferedImageCacheInfo*
-(NSURLSessionTask*) comDayCqDamCoreImplCacheCQBufferedImageCacheWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    cqDamImageCacheMaxMemory: (NSNumber*) cqDamImageCacheMaxMemory
    cqDamImageCacheMaxAge: (NSNumber*) cqDamImageCacheMaxAge
    cqDamImageCacheMaxDimension: (NSString*) cqDamImageCacheMaxDimension
    completionHandler: (void (^)(OAIComDayCqDamCoreImplCacheCQBufferedImageCacheInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param changeeventlistenerObservedPaths  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComDayCqDamCoreImplDamChangeEventListenerInfo*
-(NSURLSessionTask*) comDayCqDamCoreImplDamChangeEventListenerWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    changeeventlistenerObservedPaths: (NSArray<NSString*>*) changeeventlistenerObservedPaths
    completionHandler: (void (^)(OAIComDayCqDamCoreImplDamChangeEventListenerInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param schedulerExpression  (optional)
/// @param maxSavedActivities  (optional)
/// @param saveInterval  (optional)
/// @param enableActivityPurge  (optional)
/// @param eventTypes  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComDayCqDamCoreImplDamEventPurgeServiceInfo*
-(NSURLSessionTask*) comDayCqDamCoreImplDamEventPurgeServiceWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    schedulerExpression: (NSString*) schedulerExpression
    maxSavedActivities: (NSNumber*) maxSavedActivities
    saveInterval: (NSNumber*) saveInterval
    enableActivityPurge: (NSNumber*) enableActivityPurge
    eventTypes: (NSString*) eventTypes
    completionHandler: (void (^)(OAIComDayCqDamCoreImplDamEventPurgeServiceInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param eventFilter  (optional)
/// @param eventQueueLength  (optional)
/// @param eventrecorderEnabled  (optional)
/// @param eventrecorderBlacklist  (optional)
/// @param eventrecorderEventtypes  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComDayCqDamCoreImplDamEventRecorderImplInfo*
-(NSURLSessionTask*) comDayCqDamCoreImplDamEventRecorderImplWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    eventFilter: (NSString*) eventFilter
    eventQueueLength: (NSNumber*) eventQueueLength
    eventrecorderEnabled: (NSNumber*) eventrecorderEnabled
    eventrecorderBlacklist: (NSArray<NSString*>*) eventrecorderBlacklist
    eventrecorderEventtypes: (NSString*) eventrecorderEventtypes
    completionHandler: (void (^)(OAIComDayCqDamCoreImplDamEventRecorderImplInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param eventFilter  (optional)
/// @param enabled  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComDayCqDamCoreImplEventDamEventAuditListenerInfo*
-(NSURLSessionTask*) comDayCqDamCoreImplEventDamEventAuditListenerWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    eventFilter: (NSString*) eventFilter
    enabled: (NSNumber*) enabled
    completionHandler: (void (^)(OAIComDayCqDamCoreImplEventDamEventAuditListenerInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param cqDamExpiryNotificationSchedulerIstimebased  (optional)
/// @param cqDamExpiryNotificationSchedulerTimebasedRule  (optional)
/// @param cqDamExpiryNotificationSchedulerPeriodRule  (optional)
/// @param sendEmail  (optional)
/// @param assetExpiredLimit  (optional)
/// @param priorNotificationSeconds  (optional)
/// @param cqDamExpiryNotificationUrlProtocol  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComDayCqDamCoreImplExpiryNotificationJobImplInfo*
-(NSURLSessionTask*) comDayCqDamCoreImplExpiryNotificationJobImplWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    cqDamExpiryNotificationSchedulerIstimebased: (NSNumber*) cqDamExpiryNotificationSchedulerIstimebased
    cqDamExpiryNotificationSchedulerTimebasedRule: (NSString*) cqDamExpiryNotificationSchedulerTimebasedRule
    cqDamExpiryNotificationSchedulerPeriodRule: (NSNumber*) cqDamExpiryNotificationSchedulerPeriodRule
    sendEmail: (NSNumber*) sendEmail
    assetExpiredLimit: (NSNumber*) assetExpiredLimit
    priorNotificationSeconds: (NSNumber*) priorNotificationSeconds
    cqDamExpiryNotificationUrlProtocol: (NSString*) cqDamExpiryNotificationUrlProtocol
    completionHandler: (void (^)(OAIComDayCqDamCoreImplExpiryNotificationJobImplInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param isEnabled  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComDayCqDamCoreImplFoldermetadataschemaFolderMetadataSchemaFeatInfo*
-(NSURLSessionTask*) comDayCqDamCoreImplFoldermetadataschemaFolderMetadataSchemaFeatWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    isEnabled: (NSNumber*) isEnabled
    completionHandler: (void (^)(OAIComDayCqDamCoreImplFoldermetadataschemaFolderMetadataSchemaFeatInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param skipBufferedcache  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComDayCqDamCoreImplGfxCommonsGfxRendererInfo*
-(NSURLSessionTask*) comDayCqDamCoreImplGfxCommonsGfxRendererWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    skipBufferedcache: (NSNumber*) skipBufferedcache
    completionHandler: (void (^)(OAIComDayCqDamCoreImplGfxCommonsGfxRendererInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param mimetype  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComDayCqDamCoreImplHandlerEPSFormatHandlerInfo*
-(NSURLSessionTask*) comDayCqDamCoreImplHandlerEPSFormatHandlerWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    mimetype: (NSString*) mimetype
    completionHandler: (void (^)(OAIComDayCqDamCoreImplHandlerEPSFormatHandlerInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param mimetype  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComDayCqDamCoreImplHandlerIndesignFormatHandlerInfo*
-(NSURLSessionTask*) comDayCqDamCoreImplHandlerIndesignFormatHandlerWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    mimetype: (NSArray<NSString*>*) mimetype
    completionHandler: (void (^)(OAIComDayCqDamCoreImplHandlerIndesignFormatHandlerInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param cqDamEnableExtMetaExtraction  (optional)
/// @param largeFileThreshold  (optional)
/// @param largeCommentThreshold  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComDayCqDamCoreImplHandlerJpegHandlerInfo*
-(NSURLSessionTask*) comDayCqDamCoreImplHandlerJpegHandlerWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    cqDamEnableExtMetaExtraction: (NSNumber*) cqDamEnableExtMetaExtraction
    largeFileThreshold: (NSNumber*) largeFileThreshold
    largeCommentThreshold: (NSNumber*) largeCommentThreshold
    completionHandler: (void (^)(OAIComDayCqDamCoreImplHandlerJpegHandlerInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param xmphandlerCqFormats  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComDayCqDamCoreImplHandlerXmpNCommXMPHandlerInfo*
-(NSURLSessionTask*) comDayCqDamCoreImplHandlerXmpNCommXMPHandlerWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    xmphandlerCqFormats: (NSArray<NSString*>*) xmphandlerCqFormats
    completionHandler: (void (^)(OAIComDayCqDamCoreImplHandlerXmpNCommXMPHandlerInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param jmxObjectname  (optional)
/// @param propertyMeasureEnabled  (optional)
/// @param propertyName  (optional)
/// @param propertyMaxWaitMs  (optional)
/// @param propertyMaxRate  (optional)
/// @param fulltextMeasureEnabled  (optional)
/// @param fulltextName  (optional)
/// @param fulltextMaxWaitMs  (optional)
/// @param fulltextMaxRate  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComDayCqDamCoreImplJmxAssetIndexUpdateMonitorInfo*
-(NSURLSessionTask*) comDayCqDamCoreImplJmxAssetIndexUpdateMonitorWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    jmxObjectname: (NSString*) jmxObjectname
    propertyMeasureEnabled: (NSNumber*) propertyMeasureEnabled
    propertyName: (NSString*) propertyName
    propertyMaxWaitMs: (NSNumber*) propertyMaxWaitMs
    propertyMaxRate: (NSNumber*) propertyMaxRate
    fulltextMeasureEnabled: (NSNumber*) fulltextMeasureEnabled
    fulltextName: (NSString*) fulltextName
    fulltextMaxWaitMs: (NSNumber*) fulltextMaxWaitMs
    fulltextMaxRate: (NSNumber*) fulltextMaxRate
    completionHandler: (void (^)(OAIComDayCqDamCoreImplJmxAssetIndexUpdateMonitorInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param jmxObjectname  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComDayCqDamCoreImplJmxAssetMigrationMBeanImplInfo*
-(NSURLSessionTask*) comDayCqDamCoreImplJmxAssetMigrationMBeanImplWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    jmxObjectname: (NSString*) jmxObjectname
    completionHandler: (void (^)(OAIComDayCqDamCoreImplJmxAssetMigrationMBeanImplInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param jmxObjectname  (optional)
/// @param active  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComDayCqDamCoreImplJmxAssetUpdateMonitorImplInfo*
-(NSURLSessionTask*) comDayCqDamCoreImplJmxAssetUpdateMonitorImplWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    jmxObjectname: (NSString*) jmxObjectname
    active: (NSNumber*) active
    completionHandler: (void (^)(OAIComDayCqDamCoreImplJmxAssetUpdateMonitorImplInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param operation  (optional)
/// @param emailEnabled  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComDayCqDamCoreImplJobsMetadataexportAsyncMetadataExportConfigInfo*
-(NSURLSessionTask*) comDayCqDamCoreImplJobsMetadataexportAsyncMetadataExportConfigWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    operation: (NSString*) operation
    emailEnabled: (NSNumber*) emailEnabled
    completionHandler: (void (^)(OAIComDayCqDamCoreImplJobsMetadataexportAsyncMetadataExportConfigInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param operation  (optional)
/// @param operationIcon  (optional)
/// @param topicName  (optional)
/// @param emailEnabled  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComDayCqDamCoreImplJobsMetadataimportAsyncMetadataImportConfigInfo*
-(NSURLSessionTask*) comDayCqDamCoreImplJobsMetadataimportAsyncMetadataImportConfigWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    operation: (NSString*) operation
    operationIcon: (NSString*) operationIcon
    topicName: (NSString*) topicName
    emailEnabled: (NSNumber*) emailEnabled
    completionHandler: (void (^)(OAIComDayCqDamCoreImplJobsMetadataimportAsyncMetadataImportConfigInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param slingServletPaths  (optional)
/// @param slingServletMethods  (optional)
/// @param cqDamEnableAnonymous  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComDayCqDamCoreImplLightboxLightboxServletInfo*
-(NSURLSessionTask*) comDayCqDamCoreImplLightboxLightboxServletWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    slingServletPaths: (NSString*) slingServletPaths
    slingServletMethods: (NSArray<NSString*>*) slingServletMethods
    cqDamEnableAnonymous: (NSNumber*) cqDamEnableAnonymous
    completionHandler: (void (^)(OAIComDayCqDamCoreImplLightboxLightboxServletInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param granitedata  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComDayCqDamCoreImplMetadataEditorSelectComponentHandlerInfo*
-(NSURLSessionTask*) comDayCqDamCoreImplMetadataEditorSelectComponentHandlerWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    granitedata: (NSArray<NSString*>*) granitedata
    completionHandler: (void (^)(OAIComDayCqDamCoreImplMetadataEditorSelectComponentHandlerInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param cqDamAllowAllMime  (optional)
/// @param cqDamAllowedAssetMimes  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComDayCqDamCoreImplMimeTypeAssetUploadRestrictionHelperInfo*
-(NSURLSessionTask*) comDayCqDamCoreImplMimeTypeAssetUploadRestrictionHelperWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    cqDamAllowAllMime: (NSNumber*) cqDamAllowAllMime
    cqDamAllowedAssetMimes: (NSArray<NSString*>*) cqDamAllowedAssetMimes
    completionHandler: (void (^)(OAIComDayCqDamCoreImplMimeTypeAssetUploadRestrictionHelperInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param cqDamDetectAssetMimeFromContent  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComDayCqDamCoreImplMimeTypeDamMimeTypeServiceImplInfo*
-(NSURLSessionTask*) comDayCqDamCoreImplMimeTypeDamMimeTypeServiceImplWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    cqDamDetectAssetMimeFromContent: (NSNumber*) cqDamDetectAssetMimeFromContent
    completionHandler: (void (^)(OAIComDayCqDamCoreImplMimeTypeDamMimeTypeServiceImplInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param cqDamMissingmetadataNotificationSchedulerIstimebased  (optional)
/// @param cqDamMissingmetadataNotificationSchedulerTimebasedRule  (optional)
/// @param cqDamMissingmetadataNotificationSchedulerPeriodRule  (optional)
/// @param cqDamMissingmetadataNotificationRecipient  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComDayCqDamCoreImplMissingMetadataNotificationJobInfo*
-(NSURLSessionTask*) comDayCqDamCoreImplMissingMetadataNotificationJobWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    cqDamMissingmetadataNotificationSchedulerIstimebased: (NSNumber*) cqDamMissingmetadataNotificationSchedulerIstimebased
    cqDamMissingmetadataNotificationSchedulerTimebasedRule: (NSString*) cqDamMissingmetadataNotificationSchedulerTimebasedRule
    cqDamMissingmetadataNotificationSchedulerPeriodRule: (NSNumber*) cqDamMissingmetadataNotificationSchedulerPeriodRule
    cqDamMissingmetadataNotificationRecipient: (NSString*) cqDamMissingmetadataNotificationRecipient
    completionHandler: (void (^)(OAIComDayCqDamCoreImplMissingMetadataNotificationJobInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param processLabel  (optional)
/// @param notifyOnComplete  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComDayCqDamCoreImplProcessSendTransientWorkflowCompletedEmailPrInfo*
-(NSURLSessionTask*) comDayCqDamCoreImplProcessSendTransientWorkflowCompletedEmailPrWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    processLabel: (NSString*) processLabel
    notifyOnComplete: (NSNumber*) notifyOnComplete
    completionHandler: (void (^)(OAIComDayCqDamCoreImplProcessSendTransientWorkflowCompletedEmailPrInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param mimeTypes  (optional)
/// @param maxExtract  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComDayCqDamCoreImplProcessTextExtractionProcessInfo*
-(NSURLSessionTask*) comDayCqDamCoreImplProcessTextExtractionProcessWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    mimeTypes: (NSArray<NSString*>*) mimeTypes
    maxExtract: (NSNumber*) maxExtract
    completionHandler: (void (^)(OAIComDayCqDamCoreImplProcessTextExtractionProcessInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param xmpPropagate  (optional)
/// @param xmpExcludes  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComDayCqDamCoreImplRenditionMakerImplInfo*
-(NSURLSessionTask*) comDayCqDamCoreImplRenditionMakerImplWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    xmpPropagate: (NSNumber*) xmpPropagate
    xmpExcludes: (NSArray<NSString*>*) xmpExcludes
    completionHandler: (void (^)(OAIComDayCqDamCoreImplRenditionMakerImplInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param queryBatchSize  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComDayCqDamCoreImplReportsReportExportServiceInfo*
-(NSURLSessionTask*) comDayCqDamCoreImplReportsReportExportServiceWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    queryBatchSize: (NSNumber*) queryBatchSize
    completionHandler: (void (^)(OAIComDayCqDamCoreImplReportsReportExportServiceInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param schedulerExpression  (optional)
/// @param maxSavedReports  (optional)
/// @param timeDuration  (optional)
/// @param enableReportPurge  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComDayCqDamCoreImplReportsReportPurgeServiceInfo*
-(NSURLSessionTask*) comDayCqDamCoreImplReportsReportPurgeServiceWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    schedulerExpression: (NSString*) schedulerExpression
    maxSavedReports: (NSNumber*) maxSavedReports
    timeDuration: (NSNumber*) timeDuration
    enableReportPurge: (NSNumber*) enableReportPurge
    completionHandler: (void (^)(OAIComDayCqDamCoreImplReportsReportPurgeServiceInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param enabled  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComDayCqDamCoreImplServletAssetDownloadServletInfo*
-(NSURLSessionTask*) comDayCqDamCoreImplServletAssetDownloadServletWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    enabled: (NSNumber*) enabled
    completionHandler: (void (^)(OAIComDayCqDamCoreImplServletAssetDownloadServletInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param cqDamBatchStatusMaxassets  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComDayCqDamCoreImplServletAssetStatusServletInfo*
-(NSURLSessionTask*) comDayCqDamCoreImplServletAssetStatusServletWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    cqDamBatchStatusMaxassets: (NSNumber*) cqDamBatchStatusMaxassets
    completionHandler: (void (^)(OAIComDayCqDamCoreImplServletAssetStatusServletInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param cqDamBatchIndesignMaxassets  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComDayCqDamCoreImplServletAssetXMPSearchServletInfo*
-(NSURLSessionTask*) comDayCqDamCoreImplServletAssetXMPSearchServletWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    cqDamBatchIndesignMaxassets: (NSNumber*) cqDamBatchIndesignMaxassets
    completionHandler: (void (^)(OAIComDayCqDamCoreImplServletAssetXMPSearchServletInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param cqDamBatchMetadataAssetDefault  (optional)
/// @param cqDamBatchMetadataCollectionDefault  (optional)
/// @param cqDamBatchMetadataMaxresources  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComDayCqDamCoreImplServletBatchMetadataServletInfo*
-(NSURLSessionTask*) comDayCqDamCoreImplServletBatchMetadataServletWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    cqDamBatchMetadataAssetDefault: (NSArray<NSString*>*) cqDamBatchMetadataAssetDefault
    cqDamBatchMetadataCollectionDefault: (NSArray<NSString*>*) cqDamBatchMetadataCollectionDefault
    cqDamBatchMetadataMaxresources: (NSNumber*) cqDamBatchMetadataMaxresources
    completionHandler: (void (^)(OAIComDayCqDamCoreImplServletBatchMetadataServletInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param slingServletResourceTypes  (optional)
/// @param slingServletMethods  (optional)
/// @param cqDamDrmEnable  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComDayCqDamCoreImplServletBinaryProviderServletInfo*
-(NSURLSessionTask*) comDayCqDamCoreImplServletBinaryProviderServletWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    slingServletResourceTypes: (NSArray<NSString*>*) slingServletResourceTypes
    slingServletMethods: (NSArray<NSString*>*) slingServletMethods
    cqDamDrmEnable: (NSNumber*) cqDamDrmEnable
    completionHandler: (void (^)(OAIComDayCqDamCoreImplServletBinaryProviderServletInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param cqDamBatchCollectionProperties  (optional)
/// @param cqDamBatchCollectionMaxcollections  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComDayCqDamCoreImplServletCollectionServletInfo*
-(NSURLSessionTask*) comDayCqDamCoreImplServletCollectionServletWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    cqDamBatchCollectionProperties: (NSArray<NSString*>*) cqDamBatchCollectionProperties
    cqDamBatchCollectionMaxcollections: (NSNumber*) cqDamBatchCollectionMaxcollections
    completionHandler: (void (^)(OAIComDayCqDamCoreImplServletCollectionServletInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param cqDamBatchCollectionsProperties  (optional)
/// @param cqDamBatchCollectionsLimit  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComDayCqDamCoreImplServletCollectionsServletInfo*
-(NSURLSessionTask*) comDayCqDamCoreImplServletCollectionsServletWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    cqDamBatchCollectionsProperties: (NSArray<NSString*>*) cqDamBatchCollectionsProperties
    cqDamBatchCollectionsLimit: (NSNumber*) cqDamBatchCollectionsLimit
    completionHandler: (void (^)(OAIComDayCqDamCoreImplServletCollectionsServletInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param moreInfo  (optional)
/// @param mntoverlaydamguicontentassetsmoreinfoHtmlpath  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComDayCqDamCoreImplServletCompanionServletInfo*
-(NSURLSessionTask*) comDayCqDamCoreImplServletCompanionServletWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    moreInfo: (NSString*) moreInfo
    mntoverlaydamguicontentassetsmoreinfoHtmlpath: (NSString*) mntoverlaydamguicontentassetsmoreinfoHtmlpath
    completionHandler: (void (^)(OAIComDayCqDamCoreImplServletCompanionServletInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param detectDuplicate  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComDayCqDamCoreImplServletCreateAssetServletInfo*
-(NSURLSessionTask*) comDayCqDamCoreImplServletCreateAssetServletWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    detectDuplicate: (NSNumber*) detectDuplicate
    completionHandler: (void (^)(OAIComDayCqDamCoreImplServletCreateAssetServletInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param cqMimeTypeBlacklist  (optional)
/// @param cqDamEmptyMime  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComDayCqDamCoreImplServletDamContentDispositionFilterInfo*
-(NSURLSessionTask*) comDayCqDamCoreImplServletDamContentDispositionFilterWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    cqMimeTypeBlacklist: (NSArray<NSString*>*) cqMimeTypeBlacklist
    cqDamEmptyMime: (NSNumber*) cqDamEmptyMime
    completionHandler: (void (^)(OAIComDayCqDamCoreImplServletDamContentDispositionFilterInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param cqDamCoreGuidlookupfilterEnabled  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComDayCqDamCoreImplServletGuidLookupFilterInfo*
-(NSURLSessionTask*) comDayCqDamCoreImplServletGuidLookupFilterWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    cqDamCoreGuidlookupfilterEnabled: (NSNumber*) cqDamCoreGuidlookupfilterEnabled
    completionHandler: (void (^)(OAIComDayCqDamCoreImplServletGuidLookupFilterInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param cqDamSyncWorkflowId  (optional)
/// @param cqDamSyncFolderTypes  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComDayCqDamCoreImplServletHealthCheckServletInfo*
-(NSURLSessionTask*) comDayCqDamCoreImplServletHealthCheckServletWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    cqDamSyncWorkflowId: (NSString*) cqDamSyncWorkflowId
    cqDamSyncFolderTypes: (NSArray<NSString*>*) cqDamSyncFolderTypes
    completionHandler: (void (^)(OAIComDayCqDamCoreImplServletHealthCheckServletInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param slingServletResourceTypes  (optional)
/// @param slingServletMethods  (optional)
/// @param slingServletExtensions  (optional)
/// @param slingServletSelectors  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComDayCqDamCoreImplServletMetadataGetServletInfo*
-(NSURLSessionTask*) comDayCqDamCoreImplServletMetadataGetServletWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    slingServletResourceTypes: (NSString*) slingServletResourceTypes
    slingServletMethods: (NSString*) slingServletMethods
    slingServletExtensions: (NSString*) slingServletExtensions
    slingServletSelectors: (NSString*) slingServletSelectors
    completionHandler: (void (^)(OAIComDayCqDamCoreImplServletMetadataGetServletInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param cqDamDrmEnable  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComDayCqDamCoreImplServletMultipleLicenseAcceptServletInfo*
-(NSURLSessionTask*) comDayCqDamCoreImplServletMultipleLicenseAcceptServletWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    cqDamDrmEnable: (NSNumber*) cqDamDrmEnable
    completionHandler: (void (^)(OAIComDayCqDamCoreImplServletMultipleLicenseAcceptServletInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param slingServletResourceTypes  (optional)
/// @param slingServletMethods  (optional)
/// @param slingServletSelectors  (optional)
/// @param downloadConfig  (optional)
/// @param viewSelector  (optional)
/// @param sendEmail  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComDayCqDamCoreImplServletResourceCollectionServletInfo*
-(NSURLSessionTask*) comDayCqDamCoreImplServletResourceCollectionServletWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    slingServletResourceTypes: (NSArray<NSString*>*) slingServletResourceTypes
    slingServletMethods: (NSString*) slingServletMethods
    slingServletSelectors: (NSString*) slingServletSelectors
    downloadConfig: (NSString*) downloadConfig
    viewSelector: (NSString*) viewSelector
    sendEmail: (NSNumber*) sendEmail
    completionHandler: (void (^)(OAIComDayCqDamCoreImplServletResourceCollectionServletInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param createPreviewEnabled  (optional)
/// @param updatePreviewEnabled  (optional)
/// @param queueSize  (optional)
/// @param folderPreviewRenditionRegex  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComDayCqDamCoreImplUiPreviewFolderPreviewUpdaterImplInfo*
-(NSURLSessionTask*) comDayCqDamCoreImplUiPreviewFolderPreviewUpdaterImplWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    createPreviewEnabled: (NSNumber*) createPreviewEnabled
    updatePreviewEnabled: (NSNumber*) updatePreviewEnabled
    queueSize: (NSNumber*) queueSize
    folderPreviewRenditionRegex: (NSString*) folderPreviewRenditionRegex
    completionHandler: (void (^)(OAIComDayCqDamCoreImplUiPreviewFolderPreviewUpdaterImplInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param cqDamConfigUnzipMaxuncompressedsize  (optional)
/// @param cqDamConfigUnzipEncoding  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComDayCqDamCoreImplUnzipUnzipConfigInfo*
-(NSURLSessionTask*) comDayCqDamCoreImplUnzipUnzipConfigWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    cqDamConfigUnzipMaxuncompressedsize: (NSNumber*) cqDamConfigUnzipMaxuncompressedsize
    cqDamConfigUnzipEncoding: (NSString*) cqDamConfigUnzipEncoding
    completionHandler: (void (^)(OAIComDayCqDamCoreImplUnzipUnzipConfigInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param processLabel  (optional)
/// @param cqDamEnableSha1  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComDayCqDamCoreProcessExifToolExtractMetadataProcessInfo*
-(NSURLSessionTask*) comDayCqDamCoreProcessExifToolExtractMetadataProcessWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    processLabel: (NSString*) processLabel
    cqDamEnableSha1: (NSNumber*) cqDamEnableSha1
    completionHandler: (void (^)(OAIComDayCqDamCoreProcessExifToolExtractMetadataProcessInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param processLabel  (optional)
/// @param cqDamEnableSha1  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComDayCqDamCoreProcessExtractMetadataProcessInfo*
-(NSURLSessionTask*) comDayCqDamCoreProcessExtractMetadataProcessWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    processLabel: (NSString*) processLabel
    cqDamEnableSha1: (NSNumber*) cqDamEnableSha1
    completionHandler: (void (^)(OAIComDayCqDamCoreProcessExtractMetadataProcessInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param processLabel  (optional)
/// @param cqDamEnableSha1  (optional)
/// @param cqDamMetadataXssprotectedProperties  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComDayCqDamCoreProcessMetadataProcessorProcessInfo*
-(NSURLSessionTask*) comDayCqDamCoreProcessMetadataProcessorProcessWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    processLabel: (NSString*) processLabel
    cqDamEnableSha1: (NSNumber*) cqDamEnableSha1
    cqDamMetadataXssprotectedProperties: (NSArray<NSString*>*) cqDamMetadataXssprotectedProperties
    completionHandler: (void (^)(OAIComDayCqDamCoreProcessMetadataProcessorProcessInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param executableSearchpath  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComDayCqDamHandlerFfmpegLocatorImplInfo*
-(NSURLSessionTask*) comDayCqDamHandlerFfmpegLocatorImplWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    executableSearchpath: (NSArray<NSString*>*) executableSearchpath
    completionHandler: (void (^)(OAIComDayCqDamHandlerFfmpegLocatorImplInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param eventFilter  (optional)
/// @param fontmgrSystemFontDir  (optional)
/// @param fontmgrAdobeFontDir  (optional)
/// @param fontmgrCustomerFontDir  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComDayCqDamHandlerGibsonFontmanagerImplFontManagerServiceImplInfo*
-(NSURLSessionTask*) comDayCqDamHandlerGibsonFontmanagerImplFontManagerServiceImplWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    eventFilter: (NSString*) eventFilter
    fontmgrSystemFontDir: (NSArray<NSString*>*) fontmgrSystemFontDir
    fontmgrAdobeFontDir: (NSString*) fontmgrAdobeFontDir
    fontmgrCustomerFontDir: (NSString*) fontmgrCustomerFontDir
    completionHandler: (void (^)(OAIComDayCqDamHandlerGibsonFontmanagerImplFontManagerServiceImplInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param rasterAnnotation  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComDayCqDamHandlerStandardPdfPdfHandlerInfo*
-(NSURLSessionTask*) comDayCqDamHandlerStandardPdfPdfHandlerWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    rasterAnnotation: (NSNumber*) rasterAnnotation
    completionHandler: (void (^)(OAIComDayCqDamHandlerStandardPdfPdfHandlerInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param rasterAnnotation  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComDayCqDamHandlerStandardPsPostScriptHandlerInfo*
-(NSURLSessionTask*) comDayCqDamHandlerStandardPsPostScriptHandlerWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    rasterAnnotation: (NSNumber*) rasterAnnotation
    completionHandler: (void (^)(OAIComDayCqDamHandlerStandardPsPostScriptHandlerInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param largeFileThreshold  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComDayCqDamHandlerStandardPsdPsdHandlerInfo*
-(NSURLSessionTask*) comDayCqDamHandlerStandardPsdPsdHandlerWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    largeFileThreshold: (NSNumber*) largeFileThreshold
    completionHandler: (void (^)(OAIComDayCqDamHandlerStandardPsdPsdHandlerInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param enableMultisession  (optional)
/// @param idsCcEnable  (optional)
/// @param enableRetry  (optional)
/// @param enableRetryScripterror  (optional)
/// @param externalizerDomainCqhost  (optional)
/// @param externalizerDomainHttp  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComDayCqDamIdsImplIDSJobProcessorInfo*
-(NSURLSessionTask*) comDayCqDamIdsImplIDSJobProcessorWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    enableMultisession: (NSNumber*) enableMultisession
    idsCcEnable: (NSNumber*) idsCcEnable
    enableRetry: (NSNumber*) enableRetry
    enableRetryScripterror: (NSNumber*) enableRetryScripterror
    externalizerDomainCqhost: (NSString*) externalizerDomainCqhost
    externalizerDomainHttp: (NSString*) externalizerDomainHttp
    completionHandler: (void (^)(OAIComDayCqDamIdsImplIDSJobProcessorInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param maxErrorsToBlacklist  (optional)
/// @param retryIntervalToWhitelist  (optional)
/// @param connectTimeout  (optional)
/// @param socketTimeout  (optional)
/// @param processLabel  (optional)
/// @param connectionUseMax  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComDayCqDamIdsImplIDSPoolManagerImplInfo*
-(NSURLSessionTask*) comDayCqDamIdsImplIDSPoolManagerImplWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    maxErrorsToBlacklist: (NSNumber*) maxErrorsToBlacklist
    retryIntervalToWhitelist: (NSNumber*) retryIntervalToWhitelist
    connectTimeout: (NSNumber*) connectTimeout
    socketTimeout: (NSNumber*) socketTimeout
    processLabel: (NSString*) processLabel
    connectionUseMax: (NSNumber*) connectionUseMax
    completionHandler: (void (^)(OAIComDayCqDamIdsImplIDSPoolManagerImplInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param processLabel  (optional)
/// @param extractPages  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComDayCqDamInddImplHandlerIndesignXMPHandlerInfo*
-(NSURLSessionTask*) comDayCqDamInddImplHandlerIndesignXMPHandlerWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    processLabel: (NSString*) processLabel
    extractPages: (NSNumber*) extractPages
    completionHandler: (void (^)(OAIComDayCqDamInddImplHandlerIndesignXMPHandlerInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param snippetcreationMaxcollections  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComDayCqDamInddImplServletSnippetCreationServletInfo*
-(NSURLSessionTask*) comDayCqDamInddImplServletSnippetCreationServletWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    snippetcreationMaxcollections: (NSNumber*) snippetcreationMaxcollections
    completionHandler: (void (^)(OAIComDayCqDamInddImplServletSnippetCreationServletInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param processLabel  (optional)
/// @param cqDamInddPagesRegex  (optional)
/// @param idsJobDecoupled  (optional)
/// @param idsJobWorkflowModel  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComDayCqDamInddProcessINDDMediaExtractProcessInfo*
-(NSURLSessionTask*) comDayCqDamInddProcessINDDMediaExtractProcessWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    processLabel: (NSString*) processLabel
    cqDamInddPagesRegex: (NSString*) cqDamInddPagesRegex
    idsJobDecoupled: (NSNumber*) idsJobDecoupled
    idsJobWorkflowModel: (NSString*) idsJobWorkflowModel
    completionHandler: (void (^)(OAIComDayCqDamInddProcessINDDMediaExtractProcessInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param batchCommitSize  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComDayCqDamPerformanceInternalAssetPerformanceDataHandlerImplInfo*
-(NSURLSessionTask*) comDayCqDamPerformanceInternalAssetPerformanceDataHandlerImplWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    batchCommitSize: (NSNumber*) batchCommitSize
    completionHandler: (void (^)(OAIComDayCqDamPerformanceInternalAssetPerformanceDataHandlerImplInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param schedulerExpression  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComDayCqDamPerformanceInternalAssetPerformanceReportSyncJobInfo*
-(NSURLSessionTask*) comDayCqDamPerformanceInternalAssetPerformanceReportSyncJobWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    schedulerExpression: (NSString*) schedulerExpression
    completionHandler: (void (^)(OAIComDayCqDamPerformanceInternalAssetPerformanceReportSyncJobInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param deleteZipFile  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComDayCqDamPimImplSourcingUploadProcessProductAssetsUploadProInfo*
-(NSURLSessionTask*) comDayCqDamPimImplSourcingUploadProcessProductAssetsUploadProWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    deleteZipFile: (NSNumber*) deleteZipFile
    completionHandler: (void (^)(OAIComDayCqDamPimImplSourcingUploadProcessProductAssetsUploadProInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param cqDamS7damDynamicmediaconfigeventlistenerEnabled  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComDayCqDamS7damCommonAnalyticsImplS7damDynamicMediaConfigEvenInfo*
-(NSURLSessionTask*) comDayCqDamS7damCommonAnalyticsImplS7damDynamicMediaConfigEvenWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    cqDamS7damDynamicmediaconfigeventlistenerEnabled: (NSNumber*) cqDamS7damDynamicmediaconfigeventlistenerEnabled
    completionHandler: (void (^)(OAIComDayCqDamS7damCommonAnalyticsImplS7damDynamicMediaConfigEvenInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param schedulerExpression  (optional)
/// @param schedulerConcurrent  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComDayCqDamS7damCommonAnalyticsImplSiteCatalystReportRunnerInfo*
-(NSURLSessionTask*) comDayCqDamS7damCommonAnalyticsImplSiteCatalystReportRunnerWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    schedulerExpression: (NSString*) schedulerExpression
    schedulerConcurrent: (NSNumber*) schedulerConcurrent
    completionHandler: (void (^)(OAIComDayCqDamS7damCommonAnalyticsImplSiteCatalystReportRunnerInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param slingPostOperation  (optional)
/// @param slingServletMethods  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComDayCqDamS7damCommonPostServletsSetCreateHandlerInfo*
-(NSURLSessionTask*) comDayCqDamS7damCommonPostServletsSetCreateHandlerWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    slingPostOperation: (NSString*) slingPostOperation
    slingServletMethods: (NSString*) slingServletMethods
    completionHandler: (void (^)(OAIComDayCqDamS7damCommonPostServletsSetCreateHandlerInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param slingPostOperation  (optional)
/// @param slingServletMethods  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComDayCqDamS7damCommonPostServletsSetModifyHandlerInfo*
-(NSURLSessionTask*) comDayCqDamS7damCommonPostServletsSetModifyHandlerWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    slingPostOperation: (NSString*) slingPostOperation
    slingServletMethods: (NSString*) slingServletMethods
    completionHandler: (void (^)(OAIComDayCqDamS7damCommonPostServletsSetModifyHandlerInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param processLabel  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComDayCqDamS7damCommonProcessVideoThumbnailDownloadProcessInfo*
-(NSURLSessionTask*) comDayCqDamS7damCommonProcessVideoThumbnailDownloadProcessWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    processLabel: (NSString*) processLabel
    completionHandler: (void (^)(OAIComDayCqDamS7damCommonProcessVideoThumbnailDownloadProcessInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param cqDamS7damDamchangeeventlistenerEnabled  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComDayCqDamS7damCommonS7damDamChangeEventListenerInfo*
-(NSURLSessionTask*) comDayCqDamS7damCommonS7damDamChangeEventListenerWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    cqDamS7damDamchangeeventlistenerEnabled: (NSNumber*) cqDamS7damDamchangeeventlistenerEnabled
    completionHandler: (void (^)(OAIComDayCqDamS7damCommonS7damDamChangeEventListenerInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param slingServletPaths  (optional)
/// @param slingServletMethods  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComDayCqDamS7damCommonServletsS7damProductInfoServletInfo*
-(NSURLSessionTask*) comDayCqDamS7damCommonServletsS7damProductInfoServletWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    slingServletPaths: (NSString*) slingServletPaths
    slingServletMethods: (NSString*) slingServletMethods
    completionHandler: (void (^)(OAIComDayCqDamS7damCommonServletsS7damProductInfoServletInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param cqDamS7damVideoproxyclientserviceMultipartuploadMinsizeName  (optional)
/// @param cqDamS7damVideoproxyclientserviceMultipartuploadPartsizeName  (optional)
/// @param cqDamS7damVideoproxyclientserviceMultipartuploadNumthreadName  (optional)
/// @param cqDamS7damVideoproxyclientserviceHttpReadtimeoutName  (optional)
/// @param cqDamS7damVideoproxyclientserviceHttpConnectiontimeoutName  (optional)
/// @param cqDamS7damVideoproxyclientserviceHttpMaxretrycountName  (optional)
/// @param cqDamS7damVideoproxyclientserviceUploadprogressIntervalName  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComDayCqDamS7damCommonVideoImplVideoProxyClientServiceImplInfo*
-(NSURLSessionTask*) comDayCqDamS7damCommonVideoImplVideoProxyClientServiceImplWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    cqDamS7damVideoproxyclientserviceMultipartuploadMinsizeName: (NSNumber*) cqDamS7damVideoproxyclientserviceMultipartuploadMinsizeName
    cqDamS7damVideoproxyclientserviceMultipartuploadPartsizeName: (NSNumber*) cqDamS7damVideoproxyclientserviceMultipartuploadPartsizeName
    cqDamS7damVideoproxyclientserviceMultipartuploadNumthreadName: (NSNumber*) cqDamS7damVideoproxyclientserviceMultipartuploadNumthreadName
    cqDamS7damVideoproxyclientserviceHttpReadtimeoutName: (NSNumber*) cqDamS7damVideoproxyclientserviceHttpReadtimeoutName
    cqDamS7damVideoproxyclientserviceHttpConnectiontimeoutName: (NSNumber*) cqDamS7damVideoproxyclientserviceHttpConnectiontimeoutName
    cqDamS7damVideoproxyclientserviceHttpMaxretrycountName: (NSNumber*) cqDamS7damVideoproxyclientserviceHttpMaxretrycountName
    cqDamS7damVideoproxyclientserviceUploadprogressIntervalName: (NSNumber*) cqDamS7damVideoproxyclientserviceUploadprogressIntervalName
    completionHandler: (void (^)(OAIComDayCqDamS7damCommonVideoImplVideoProxyClientServiceImplInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param cqDamScene7ApiclientRecordsperpageNofilterName  (optional)
/// @param cqDamScene7ApiclientRecordsperpageWithfilterName  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComDayCqDamScene7ImplScene7APIClientImplInfo*
-(NSURLSessionTask*) comDayCqDamScene7ImplScene7APIClientImplWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    cqDamScene7ApiclientRecordsperpageNofilterName: (NSNumber*) cqDamScene7ApiclientRecordsperpageNofilterName
    cqDamScene7ApiclientRecordsperpageWithfilterName: (NSNumber*) cqDamScene7ApiclientRecordsperpageWithfilterName
    completionHandler: (void (^)(OAIComDayCqDamScene7ImplScene7APIClientImplInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param cqDamScene7AssetmimetypeserviceMapping  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComDayCqDamScene7ImplScene7AssetMimeTypeServiceImplInfo*
-(NSURLSessionTask*) comDayCqDamScene7ImplScene7AssetMimeTypeServiceImplWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    cqDamScene7AssetmimetypeserviceMapping: (NSArray<NSString*>*) cqDamScene7AssetmimetypeserviceMapping
    completionHandler: (void (^)(OAIComDayCqDamScene7ImplScene7AssetMimeTypeServiceImplInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param cqDamScene7ConfigurationeventlistenerEnabled  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComDayCqDamScene7ImplScene7ConfigurationEventListenerInfo*
-(NSURLSessionTask*) comDayCqDamScene7ImplScene7ConfigurationEventListenerWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    cqDamScene7ConfigurationeventlistenerEnabled: (NSNumber*) cqDamScene7ConfigurationeventlistenerEnabled
    completionHandler: (void (^)(OAIComDayCqDamScene7ImplScene7ConfigurationEventListenerInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param cqDamScene7DamchangeeventlistenerEnabled  (optional)
/// @param cqDamScene7DamchangeeventlistenerObservedPaths  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComDayCqDamScene7ImplScene7DamChangeEventListenerInfo*
-(NSURLSessionTask*) comDayCqDamScene7ImplScene7DamChangeEventListenerWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    cqDamScene7DamchangeeventlistenerEnabled: (NSNumber*) cqDamScene7DamchangeeventlistenerEnabled
    cqDamScene7DamchangeeventlistenerObservedPaths: (NSArray<NSString*>*) cqDamScene7DamchangeeventlistenerObservedPaths
    completionHandler: (void (^)(OAIComDayCqDamScene7ImplScene7DamChangeEventListenerInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param scene7FlashTemplatesRti  (optional)
/// @param scene7FlashTemplatesRsi  (optional)
/// @param scene7FlashTemplatesRb  (optional)
/// @param scene7FlashTemplatesRurl  (optional)
/// @param scene7FlashTemplateUrlFormatParameter  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComDayCqDamScene7ImplScene7FlashTemplatesServiceImplInfo*
-(NSURLSessionTask*) comDayCqDamScene7ImplScene7FlashTemplatesServiceImplWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    scene7FlashTemplatesRti: (NSString*) scene7FlashTemplatesRti
    scene7FlashTemplatesRsi: (NSString*) scene7FlashTemplatesRsi
    scene7FlashTemplatesRb: (NSString*) scene7FlashTemplatesRb
    scene7FlashTemplatesRurl: (NSString*) scene7FlashTemplatesRurl
    scene7FlashTemplateUrlFormatParameter: (NSString*) scene7FlashTemplateUrlFormatParameter
    completionHandler: (void (^)(OAIComDayCqDamScene7ImplScene7FlashTemplatesServiceImplInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param cqDamScene7UploadserviceActivejobtimeoutLabel  (optional)
/// @param cqDamScene7UploadserviceConnectionmaxperrouteLabel  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComDayCqDamScene7ImplScene7UploadServiceImplInfo*
-(NSURLSessionTask*) comDayCqDamScene7ImplScene7UploadServiceImplWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    cqDamScene7UploadserviceActivejobtimeoutLabel: (NSNumber*) cqDamScene7UploadserviceActivejobtimeoutLabel
    cqDamScene7UploadserviceConnectionmaxperrouteLabel: (NSNumber*) cqDamScene7UploadserviceConnectionmaxperrouteLabel
    completionHandler: (void (^)(OAIComDayCqDamScene7ImplScene7UploadServiceImplInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param getCacheExpirationUnit  (optional)
/// @param getCacheExpirationValue  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComDayCqDamStockIntegrationImplCacheStockCacheConfigurationSerInfo*
-(NSURLSessionTask*) comDayCqDamStockIntegrationImplCacheStockCacheConfigurationSerWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    getCacheExpirationUnit: (NSString*) getCacheExpirationUnit
    getCacheExpirationValue: (NSNumber*) getCacheExpirationValue
    completionHandler: (void (^)(OAIComDayCqDamStockIntegrationImplCacheStockCacheConfigurationSerInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param name  (optional)
/// @param locale  (optional)
/// @param imsConfig  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComDayCqDamStockIntegrationImplConfigurationStockConfigurationInfo*
-(NSURLSessionTask*) comDayCqDamStockIntegrationImplConfigurationStockConfigurationWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    name: (NSString*) name
    locale: (NSString*) locale
    imsConfig: (NSString*) imsConfig
    completionHandler: (void (^)(OAIComDayCqDamStockIntegrationImplConfigurationStockConfigurationInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param enabled  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComDayCqDamVideoImplServletVideoTestServletInfo*
-(NSURLSessionTask*) comDayCqDamVideoImplServletVideoTestServletWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    enabled: (NSNumber*) enabled
    completionHandler: (void (^)(OAIComDayCqDamVideoImplServletVideoTestServletInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param maxWidth  (optional)
/// @param maxHeight  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComDayCqExtwidgetServletsImageSpriteServletInfo*
-(NSURLSessionTask*) comDayCqExtwidgetServletsImageSpriteServletWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    maxWidth: (NSNumber*) maxWidth
    maxHeight: (NSNumber*) maxHeight
    completionHandler: (void (^)(OAIComDayCqExtwidgetServletsImageSpriteServletInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param fontpath  (optional)
/// @param oversamplingFactor  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComDayCqImageInternalFontFontHelperInfo*
-(NSURLSessionTask*) comDayCqImageInternalFontFontHelperWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    fontpath: (NSArray<NSString*>*) fontpath
    oversamplingFactor: (NSNumber*) oversamplingFactor
    completionHandler: (void (^)(OAIComDayCqImageInternalFontFontHelperInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param clusterLevelEnable  (optional)
/// @param clusterMasterLevel  (optional)
/// @param clusterSlaveLevel  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComDayCqJcrclustersupportClusterStartLevelControllerInfo*
-(NSURLSessionTask*) comDayCqJcrclustersupportClusterStartLevelControllerWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    clusterLevelEnable: (NSNumber*) clusterLevelEnable
    clusterMasterLevel: (NSNumber*) clusterMasterLevel
    clusterSlaveLevel: (NSNumber*) clusterSlaveLevel
    completionHandler: (void (^)(OAIComDayCqJcrclustersupportClusterStartLevelControllerInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param smtpHost  (optional)
/// @param smtpPort  (optional)
/// @param smtpUser  (optional)
/// @param smtpPassword  (optional)
/// @param fromAddress  (optional)
/// @param smtpSsl  (optional)
/// @param smtpStarttls  (optional)
/// @param debugEmail  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComDayCqMailerDefaultMailServiceInfo*
-(NSURLSessionTask*) comDayCqMailerDefaultMailServiceWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    smtpHost: (NSString*) smtpHost
    smtpPort: (NSNumber*) smtpPort
    smtpUser: (NSString*) smtpUser
    smtpPassword: (NSString*) smtpPassword
    fromAddress: (NSString*) fromAddress
    smtpSsl: (NSNumber*) smtpSsl
    smtpStarttls: (NSNumber*) smtpStarttls
    debugEmail: (NSNumber*) debugEmail
    completionHandler: (void (^)(OAIComDayCqMailerDefaultMailServiceInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param maxRecipientCount  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComDayCqMailerImplCqMailingServiceInfo*
-(NSURLSessionTask*) comDayCqMailerImplCqMailingServiceWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    maxRecipientCount: (NSString*) maxRecipientCount
    completionHandler: (void (^)(OAIComDayCqMailerImplCqMailingServiceInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param mailerEmailCharset  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComDayCqMailerImplEmailCqEmailTemplateFactoryInfo*
-(NSURLSessionTask*) comDayCqMailerImplEmailCqEmailTemplateFactoryWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    mailerEmailCharset: (NSString*) mailerEmailCharset
    completionHandler: (void (^)(OAIComDayCqMailerImplEmailCqEmailTemplateFactoryInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param mailerEmailEmbed  (optional)
/// @param mailerEmailCharset  (optional)
/// @param mailerEmailRetrieverUserID  (optional)
/// @param mailerEmailRetrieverUserPWD  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComDayCqMailerImplEmailCqRetrieverTemplateFactoryInfo*
-(NSURLSessionTask*) comDayCqMailerImplEmailCqRetrieverTemplateFactoryWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    mailerEmailEmbed: (NSNumber*) mailerEmailEmbed
    mailerEmailCharset: (NSString*) mailerEmailCharset
    mailerEmailRetrieverUserID: (NSString*) mailerEmailRetrieverUserID
    mailerEmailRetrieverUserPWD: (NSString*) mailerEmailRetrieverUserPWD
    completionHandler: (void (^)(OAIComDayCqMailerImplEmailCqRetrieverTemplateFactoryInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param aemMcmCampaignFormConstraints  (optional)
/// @param aemMcmCampaignPublicUrl  (optional)
/// @param aemMcmCampaignRelaxedSSL  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComDayCqMcmCampaignImplIntegrationConfigImplInfo*
-(NSURLSessionTask*) comDayCqMcmCampaignImplIntegrationConfigImplWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    aemMcmCampaignFormConstraints: (NSArray<NSString*>*) aemMcmCampaignFormConstraints
    aemMcmCampaignPublicUrl: (NSString*) aemMcmCampaignPublicUrl
    aemMcmCampaignRelaxedSSL: (NSNumber*) aemMcmCampaignRelaxedSSL
    completionHandler: (void (^)(OAIComDayCqMcmCampaignImplIntegrationConfigImplInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param serviceRanking  (optional)
/// @param tagpattern  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComDayCqMcmCampaignImporterPersonalizedTextHandlerFactoryInfo*
-(NSURLSessionTask*) comDayCqMcmCampaignImporterPersonalizedTextHandlerFactoryWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    serviceRanking: (NSNumber*) serviceRanking
    tagpattern: (NSString*) tagpattern
    completionHandler: (void (^)(OAIComDayCqMcmCampaignImporterPersonalizedTextHandlerFactoryInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param fromAddress  (optional)
/// @param senderHost  (optional)
/// @param maxBounceCount  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComDayCqMcmCoreNewsletterNewsletterEmailServiceImplInfo*
-(NSURLSessionTask*) comDayCqMcmCoreNewsletterNewsletterEmailServiceImplWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    fromAddress: (NSString*) fromAddress
    senderHost: (NSString*) senderHost
    maxBounceCount: (NSString*) maxBounceCount
    completionHandler: (void (^)(OAIComDayCqMcmCoreNewsletterNewsletterEmailServiceImplInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param experienceIndirection  (optional)
/// @param touchpointIndirection  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComDayCqMcmImplMCMConfigurationInfo*
-(NSURLSessionTask*) comDayCqMcmImplMCMConfigurationWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    experienceIndirection: (NSArray<NSString*>*) experienceIndirection
    touchpointIndirection: (NSArray<NSString*>*) touchpointIndirection
    completionHandler: (void (^)(OAIComDayCqMcmImplMCMConfigurationInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param serviceRanking  (optional)
/// @param tagpattern  (optional)
/// @param componentResourceType  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComDayCqMcmLandingpageParserTaghandlersCtaClickThroughComponenInfo*
-(NSURLSessionTask*) comDayCqMcmLandingpageParserTaghandlersCtaClickThroughComponenWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    serviceRanking: (NSNumber*) serviceRanking
    tagpattern: (NSString*) tagpattern
    componentResourceType: (NSString*) componentResourceType
    completionHandler: (void (^)(OAIComDayCqMcmLandingpageParserTaghandlersCtaClickThroughComponenInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param serviceRanking  (optional)
/// @param tagpattern  (optional)
/// @param componentResourceType  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComDayCqMcmLandingpageParserTaghandlersCtaGraphicalClickThrougInfo*
-(NSURLSessionTask*) comDayCqMcmLandingpageParserTaghandlersCtaGraphicalClickThrougWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    serviceRanking: (NSNumber*) serviceRanking
    tagpattern: (NSString*) tagpattern
    componentResourceType: (NSString*) componentResourceType
    completionHandler: (void (^)(OAIComDayCqMcmLandingpageParserTaghandlersCtaGraphicalClickThrougInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param serviceRanking  (optional)
/// @param tagpattern  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComDayCqMcmLandingpageParserTaghandlersCtaLeadFormCTAComponentInfo*
-(NSURLSessionTask*) comDayCqMcmLandingpageParserTaghandlersCtaLeadFormCTAComponentWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    serviceRanking: (NSNumber*) serviceRanking
    tagpattern: (NSString*) tagpattern
    completionHandler: (void (^)(OAIComDayCqMcmLandingpageParserTaghandlersCtaLeadFormCTAComponentInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param serviceRanking  (optional)
/// @param tagpattern  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComDayCqMcmLandingpageParserTaghandlersMboxMBoxExperienceTagHaInfo*
-(NSURLSessionTask*) comDayCqMcmLandingpageParserTaghandlersMboxMBoxExperienceTagHaWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    serviceRanking: (NSNumber*) serviceRanking
    tagpattern: (NSString*) tagpattern
    completionHandler: (void (^)(OAIComDayCqMcmLandingpageParserTaghandlersMboxMBoxExperienceTagHaInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param serviceRanking  (optional)
/// @param tagpattern  (optional)
/// @param componentResourceType  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComDayCqMcmLandingpageParserTaghandlersMboxTargetComponentTagHInfo*
-(NSURLSessionTask*) comDayCqMcmLandingpageParserTaghandlersMboxTargetComponentTagHWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    serviceRanking: (NSNumber*) serviceRanking
    tagpattern: (NSString*) tagpattern
    componentResourceType: (NSString*) componentResourceType
    completionHandler: (void (^)(OAIComDayCqMcmLandingpageParserTaghandlersMboxTargetComponentTagHInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param eventFilter  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComDayCqNotificationImplNotificationServiceImplInfo*
-(NSURLSessionTask*) comDayCqNotificationImplNotificationServiceImplWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    eventFilter: (NSString*) eventFilter
    completionHandler: (void (^)(OAIComDayCqNotificationImplNotificationServiceImplInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param forcelocation  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComDayCqPersonalizationImplServletsTargetingConfigurationServletInfo*
-(NSURLSessionTask*) comDayCqPersonalizationImplServletsTargetingConfigurationServletWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    forcelocation: (NSNumber*) forcelocation
    completionHandler: (void (^)(OAIComDayCqPersonalizationImplServletsTargetingConfigurationServletInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param _id  (optional)
/// @param enabled  (optional)
/// @param reference  (optional)
/// @param interval  (optional)
/// @param expression  (optional)
/// @param source  (optional)
/// @param target  (optional)
/// @param login  (optional)
/// @param password  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComDayCqPollingImporterImplManagedPollConfigImplInfo*
-(NSURLSessionTask*) comDayCqPollingImporterImplManagedPollConfigImplWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    _id: (NSString*) _id
    enabled: (NSNumber*) enabled
    reference: (NSNumber*) reference
    interval: (NSNumber*) interval
    expression: (NSString*) expression
    source: (NSString*) source
    target: (NSString*) target
    login: (NSString*) login
    password: (NSString*) password
    completionHandler: (void (^)(OAIComDayCqPollingImporterImplManagedPollConfigImplInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param importerUser  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComDayCqPollingImporterImplManagedPollingImporterImplInfo*
-(NSURLSessionTask*) comDayCqPollingImporterImplManagedPollingImporterImplWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    importerUser: (NSString*) importerUser
    completionHandler: (void (^)(OAIComDayCqPollingImporterImplManagedPollingImporterImplInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param importerMinInterval  (optional)
/// @param importerUser  (optional)
/// @param excludePaths  (optional)
/// @param includePaths  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComDayCqPollingImporterImplPollingImporterImplInfo*
-(NSURLSessionTask*) comDayCqPollingImporterImplPollingImporterImplWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    importerMinInterval: (NSNumber*) importerMinInterval
    importerUser: (NSString*) importerUser
    excludePaths: (NSArray<NSString*>*) excludePaths
    includePaths: (NSArray<NSString*>*) includePaths
    completionHandler: (void (^)(OAIComDayCqPollingImporterImplPollingImporterImplInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param serviceRanking  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComDayCqReplicationAuditReplicationEventListenerInfo*
-(NSURLSessionTask*) comDayCqReplicationAuditReplicationEventListenerWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    serviceRanking: (NSNumber*) serviceRanking
    completionHandler: (void (^)(OAIComDayCqReplicationAuditReplicationEventListenerInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param host  (optional)
/// @param port  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComDayCqReplicationContentStaticContentBuilderInfo*
-(NSURLSessionTask*) comDayCqReplicationContentStaticContentBuilderWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    host: (NSString*) host
    port: (NSNumber*) port
    completionHandler: (void (^)(OAIComDayCqReplicationContentStaticContentBuilderInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param jobTopics  (optional)
/// @param serviceUserTarget  (optional)
/// @param agentProviderTarget  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComDayCqReplicationImplAgentManagerImplInfo*
-(NSURLSessionTask*) comDayCqReplicationImplAgentManagerImplWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    jobTopics: (NSString*) jobTopics
    serviceUserTarget: (NSString*) serviceUserTarget
    agentProviderTarget: (NSString*) agentProviderTarget
    completionHandler: (void (^)(OAIComDayCqReplicationImplAgentManagerImplInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param binaryThreshold  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComDayCqReplicationImplContentDurboBinaryLessContentBuilderInfo*
-(NSURLSessionTask*) comDayCqReplicationImplContentDurboBinaryLessContentBuilderWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    binaryThreshold: (NSNumber*) binaryThreshold
    completionHandler: (void (^)(OAIComDayCqReplicationImplContentDurboBinaryLessContentBuilderInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param preserveHierarchyNodes  (optional)
/// @param ignoreVersioning  (optional)
/// @param importAcl  (optional)
/// @param saveThreshold  (optional)
/// @param preserveUserPaths  (optional)
/// @param preserveUuid  (optional)
/// @param preserveUuidNodetypes  (optional)
/// @param preserveUuidSubtrees  (optional)
/// @param autoCommit  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComDayCqReplicationImplContentDurboDurboImportConfigurationProvInfo*
-(NSURLSessionTask*) comDayCqReplicationImplContentDurboDurboImportConfigurationProvWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    preserveHierarchyNodes: (NSNumber*) preserveHierarchyNodes
    ignoreVersioning: (NSNumber*) ignoreVersioning
    importAcl: (NSNumber*) importAcl
    saveThreshold: (NSNumber*) saveThreshold
    preserveUserPaths: (NSNumber*) preserveUserPaths
    preserveUuid: (NSNumber*) preserveUuid
    preserveUuidNodetypes: (NSArray<NSString*>*) preserveUuidNodetypes
    preserveUuidSubtrees: (NSArray<NSString*>*) preserveUuidSubtrees
    autoCommit: (NSNumber*) autoCommit
    completionHandler: (void (^)(OAIComDayCqReplicationImplContentDurboDurboImportConfigurationProvInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param replicationContentUseFileStorage  (optional)
/// @param replicationContentMaxCommitAttempts  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComDayCqReplicationImplReplicationContentFactoryProviderImplInfo*
-(NSURLSessionTask*) comDayCqReplicationImplReplicationContentFactoryProviderImplWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    replicationContentUseFileStorage: (NSNumber*) replicationContentUseFileStorage
    replicationContentMaxCommitAttempts: (NSNumber*) replicationContentMaxCommitAttempts
    completionHandler: (void (^)(OAIComDayCqReplicationImplReplicationContentFactoryProviderImplInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param receiverTmpfileThreshold  (optional)
/// @param receiverPackagesUseInstall  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComDayCqReplicationImplReplicationReceiverImplInfo*
-(NSURLSessionTask*) comDayCqReplicationImplReplicationReceiverImplWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    receiverTmpfileThreshold: (NSNumber*) receiverTmpfileThreshold
    receiverPackagesUseInstall: (NSNumber*) receiverPackagesUseInstall
    completionHandler: (void (^)(OAIComDayCqReplicationImplReplicationReceiverImplInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param distributeEvents  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComDayCqReplicationImplReplicatorImplInfo*
-(NSURLSessionTask*) comDayCqReplicationImplReplicatorImplWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    distributeEvents: (NSNumber*) distributeEvents
    completionHandler: (void (^)(OAIComDayCqReplicationImplReplicatorImplInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param schedulerPeriod  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComDayCqReplicationImplReverseReplicatorInfo*
-(NSURLSessionTask*) comDayCqReplicationImplReverseReplicatorWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    schedulerPeriod: (NSNumber*) schedulerPeriod
    completionHandler: (void (^)(OAIComDayCqReplicationImplReverseReplicatorInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param disabledCipherSuites  (optional)
/// @param enabledCipherSuites  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComDayCqReplicationImplTransportBinaryLessTransportHandlerInfo*
-(NSURLSessionTask*) comDayCqReplicationImplTransportBinaryLessTransportHandlerWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    disabledCipherSuites: (NSArray<NSString*>*) disabledCipherSuites
    enabledCipherSuites: (NSArray<NSString*>*) enabledCipherSuites
    completionHandler: (void (^)(OAIComDayCqReplicationImplTransportBinaryLessTransportHandlerInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param disabledCipherSuites  (optional)
/// @param enabledCipherSuites  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComDayCqReplicationImplTransportHttpInfo*
-(NSURLSessionTask*) comDayCqReplicationImplTransportHttpWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    disabledCipherSuites: (NSArray<NSString*>*) disabledCipherSuites
    enabledCipherSuites: (NSArray<NSString*>*) enabledCipherSuites
    completionHandler: (void (^)(OAIComDayCqReplicationImplTransportHttpInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param repcacheEnable  (optional)
/// @param repcacheTtl  (optional)
/// @param repcacheMax  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComDayCqReportingImplCacheCacheImplInfo*
-(NSURLSessionTask*) comDayCqReportingImplCacheCacheImplWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    repcacheEnable: (NSNumber*) repcacheEnable
    repcacheTtl: (NSNumber*) repcacheTtl
    repcacheMax: (NSNumber*) repcacheMax
    completionHandler: (void (^)(OAIComDayCqReportingImplCacheCacheImplInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param repconfTimezone  (optional)
/// @param repconfLocale  (optional)
/// @param repconfSnapshots  (optional)
/// @param repconfRepdir  (optional)
/// @param repconfHourofday  (optional)
/// @param repconfMinofhour  (optional)
/// @param repconfMaxrows  (optional)
/// @param repconfFakedata  (optional)
/// @param repconfSnapshotuser  (optional)
/// @param repconfEnforcesnapshotuser  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComDayCqReportingImplConfigServiceImplInfo*
-(NSURLSessionTask*) comDayCqReportingImplConfigServiceImplWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    repconfTimezone: (NSString*) repconfTimezone
    repconfLocale: (NSString*) repconfLocale
    repconfSnapshots: (NSString*) repconfSnapshots
    repconfRepdir: (NSString*) repconfRepdir
    repconfHourofday: (NSNumber*) repconfHourofday
    repconfMinofhour: (NSNumber*) repconfMinofhour
    repconfMaxrows: (NSNumber*) repconfMaxrows
    repconfFakedata: (NSNumber*) repconfFakedata
    repconfSnapshotuser: (NSString*) repconfSnapshotuser
    repconfEnforcesnapshotuser: (NSNumber*) repconfEnforcesnapshotuser
    completionHandler: (void (^)(OAIComDayCqReportingImplConfigServiceImplInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param requestLogOutput  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComDayCqReportingImplRLogAnalyzerInfo*
-(NSURLSessionTask*) comDayCqReportingImplRLogAnalyzerWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    requestLogOutput: (NSString*) requestLogOutput
    completionHandler: (void (^)(OAIComDayCqReportingImplRLogAnalyzerInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param schedulerPeriod  (optional)
/// @param schedulerConcurrent  (optional)
/// @param serviceBadLinkToleranceInterval  (optional)
/// @param serviceCheckOverridePatterns  (optional)
/// @param serviceCacheBrokenInternalLinks  (optional)
/// @param serviceSpecialLinkPrefix  (optional)
/// @param serviceSpecialLinkPatterns  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComDayCqRewriterLinkcheckerImplLinkCheckerImplInfo*
-(NSURLSessionTask*) comDayCqRewriterLinkcheckerImplLinkCheckerImplWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    schedulerPeriod: (NSNumber*) schedulerPeriod
    schedulerConcurrent: (NSNumber*) schedulerConcurrent
    serviceBadLinkToleranceInterval: (NSNumber*) serviceBadLinkToleranceInterval
    serviceCheckOverridePatterns: (NSArray<NSString*>*) serviceCheckOverridePatterns
    serviceCacheBrokenInternalLinks: (NSNumber*) serviceCacheBrokenInternalLinks
    serviceSpecialLinkPrefix: (NSArray<NSString*>*) serviceSpecialLinkPrefix
    serviceSpecialLinkPatterns: (NSArray<NSString*>*) serviceSpecialLinkPatterns
    completionHandler: (void (^)(OAIComDayCqRewriterLinkcheckerImplLinkCheckerImplInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param schedulerPeriod  (optional)
/// @param schedulerConcurrent  (optional)
/// @param goodLinkTestInterval  (optional)
/// @param badLinkTestInterval  (optional)
/// @param linkUnusedInterval  (optional)
/// @param connectionTimeout  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComDayCqRewriterLinkcheckerImplLinkCheckerTaskInfo*
-(NSURLSessionTask*) comDayCqRewriterLinkcheckerImplLinkCheckerTaskWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    schedulerPeriod: (NSNumber*) schedulerPeriod
    schedulerConcurrent: (NSNumber*) schedulerConcurrent
    goodLinkTestInterval: (NSNumber*) goodLinkTestInterval
    badLinkTestInterval: (NSNumber*) badLinkTestInterval
    linkUnusedInterval: (NSNumber*) linkUnusedInterval
    connectionTimeout: (NSNumber*) connectionTimeout
    completionHandler: (void (^)(OAIComDayCqRewriterLinkcheckerImplLinkCheckerTaskInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param linkcheckertransformerDisableRewriting  (optional)
/// @param linkcheckertransformerDisableChecking  (optional)
/// @param linkcheckertransformerMapCacheSize  (optional)
/// @param linkcheckertransformerStrictExtensionCheck  (optional)
/// @param linkcheckertransformerStripHtmltExtension  (optional)
/// @param linkcheckertransformerRewriteElements  (optional)
/// @param linkcheckertransformerStripExtensionPathBlacklist  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComDayCqRewriterLinkcheckerImplLinkCheckerTransformerFactoryInfo*
-(NSURLSessionTask*) comDayCqRewriterLinkcheckerImplLinkCheckerTransformerFactoryWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    linkcheckertransformerDisableRewriting: (NSNumber*) linkcheckertransformerDisableRewriting
    linkcheckertransformerDisableChecking: (NSNumber*) linkcheckertransformerDisableChecking
    linkcheckertransformerMapCacheSize: (NSNumber*) linkcheckertransformerMapCacheSize
    linkcheckertransformerStrictExtensionCheck: (NSNumber*) linkcheckertransformerStrictExtensionCheck
    linkcheckertransformerStripHtmltExtension: (NSNumber*) linkcheckertransformerStripHtmltExtension
    linkcheckertransformerRewriteElements: (NSArray<NSString*>*) linkcheckertransformerRewriteElements
    linkcheckertransformerStripExtensionPathBlacklist: (NSArray<NSString*>*) linkcheckertransformerStripExtensionPathBlacklist
    completionHandler: (void (^)(OAIComDayCqRewriterLinkcheckerImplLinkCheckerTransformerFactoryInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param serviceMaxLinksPerHost  (optional)
/// @param serviceSaveExternalLinkReferences  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComDayCqRewriterLinkcheckerImplLinkInfoStorageImplInfo*
-(NSURLSessionTask*) comDayCqRewriterLinkcheckerImplLinkInfoStorageImplWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    serviceMaxLinksPerHost: (NSNumber*) serviceMaxLinksPerHost
    serviceSaveExternalLinkReferences: (NSNumber*) serviceSaveExternalLinkReferences
    completionHandler: (void (^)(OAIComDayCqRewriterLinkcheckerImplLinkInfoStorageImplInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param htmlparserProcessTags  (optional)
/// @param htmlparserPreserveCamelCase  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComDayCqRewriterProcessorImplHtmlParserFactoryInfo*
-(NSURLSessionTask*) comDayCqRewriterProcessorImplHtmlParserFactoryWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    htmlparserProcessTags: (NSArray<NSString*>*) htmlparserProcessTags
    htmlparserPreserveCamelCase: (NSNumber*) htmlparserPreserveCamelCase
    completionHandler: (void (^)(OAIComDayCqRewriterProcessorImplHtmlParserFactoryInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param excerptProperties  (optional)
/// @param cacheMaxEntries  (optional)
/// @param cacheEntryLifetime  (optional)
/// @param xpathUnion  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComDayCqSearchImplBuilderQueryBuilderImplInfo*
-(NSURLSessionTask*) comDayCqSearchImplBuilderQueryBuilderImplWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    excerptProperties: (NSArray<NSString*>*) excerptProperties
    cacheMaxEntries: (NSNumber*) cacheMaxEntries
    cacheEntryLifetime: (NSNumber*) cacheEntryLifetime
    xpathUnion: (NSNumber*) xpathUnion
    completionHandler: (void (^)(OAIComDayCqSearchImplBuilderQueryBuilderImplInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param pathBuilderTarget  (optional)
/// @param suggestBasepath  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComDayCqSearchSuggestImplSuggestionIndexManagerImplInfo*
-(NSURLSessionTask*) comDayCqSearchSuggestImplSuggestionIndexManagerImplWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    pathBuilderTarget: (NSString*) pathBuilderTarget
    suggestBasepath: (NSString*) suggestBasepath
    completionHandler: (void (^)(OAIComDayCqSearchSuggestImplSuggestionIndexManagerImplInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param cqSearchpromoteConfighandlerEnabled  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComDayCqSearchpromoteImplPublishSearchPromoteConfigHandlerInfo*
-(NSURLSessionTask*) comDayCqSearchpromoteImplPublishSearchPromoteConfigHandlerWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    cqSearchpromoteConfighandlerEnabled: (NSNumber*) cqSearchpromoteConfighandlerEnabled
    completionHandler: (void (^)(OAIComDayCqSearchpromoteImplPublishSearchPromoteConfigHandlerInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param cqSearchpromoteConfigurationServerUri  (optional)
/// @param cqSearchpromoteConfigurationEnvironment  (optional)
/// @param connectionTimeout  (optional)
/// @param socketTimeout  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComDayCqSearchpromoteImplSearchPromoteServiceImplInfo*
-(NSURLSessionTask*) comDayCqSearchpromoteImplSearchPromoteServiceImplWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    cqSearchpromoteConfigurationServerUri: (NSString*) cqSearchpromoteConfigurationServerUri
    cqSearchpromoteConfigurationEnvironment: (NSString*) cqSearchpromoteConfigurationEnvironment
    connectionTimeout: (NSNumber*) connectionTimeout
    socketTimeout: (NSNumber*) socketTimeout
    completionHandler: (void (^)(OAIComDayCqSearchpromoteImplSearchPromoteServiceImplInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param cqAclsetupRules  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComDayCqSecurityACLSetupInfo*
-(NSURLSessionTask*) comDayCqSecurityACLSetupWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    cqAclsetupRules: (NSArray<NSString*>*) cqAclsetupRules
    completionHandler: (void (^)(OAIComDayCqSecurityACLSetupInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param schedulerPeriod  (optional)
/// @param schedulerConcurrent  (optional)
/// @param path  (optional)
/// @param workspace  (optional)
/// @param keywordsPath  (optional)
/// @param asyncEntries  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComDayCqStatisticsImplStatisticsServiceImplInfo*
-(NSURLSessionTask*) comDayCqStatisticsImplStatisticsServiceImplWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    schedulerPeriod: (NSNumber*) schedulerPeriod
    schedulerConcurrent: (NSNumber*) schedulerConcurrent
    path: (NSString*) path
    workspace: (NSString*) workspace
    keywordsPath: (NSString*) keywordsPath
    asyncEntries: (NSNumber*) asyncEntries
    completionHandler: (void (^)(OAIComDayCqStatisticsImplStatisticsServiceImplInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param validationEnabled  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComDayCqTaggingImplJcrTagManagerFactoryImplInfo*
-(NSURLSessionTask*) comDayCqTaggingImplJcrTagManagerFactoryImplWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    validationEnabled: (NSNumber*) validationEnabled
    completionHandler: (void (^)(OAIComDayCqTaggingImplJcrTagManagerFactoryImplInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param ignorePath  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComDayCqTaggingImplSearchTagPredicateEvaluatorInfo*
-(NSURLSessionTask*) comDayCqTaggingImplSearchTagPredicateEvaluatorWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    ignorePath: (NSNumber*) ignorePath
    completionHandler: (void (^)(OAIComDayCqTaggingImplSearchTagPredicateEvaluatorInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param schedulerExpression  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComDayCqTaggingImplTagGarbageCollectorInfo*
-(NSURLSessionTask*) comDayCqTaggingImplTagGarbageCollectorWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    schedulerExpression: (NSString*) schedulerExpression
    completionHandler: (void (^)(OAIComDayCqTaggingImplTagGarbageCollectorInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param cqPagesupdatehandlerImageresourcetypes  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComDayCqWcmContentsyncImplHandlerPagesUpdateHandlerInfo*
-(NSURLSessionTask*) comDayCqWcmContentsyncImplHandlerPagesUpdateHandlerWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    cqPagesupdatehandlerImageresourcetypes: (NSArray<NSString*>*) cqPagesupdatehandlerImageresourcetypes
    completionHandler: (void (^)(OAIComDayCqWcmContentsyncImplHandlerPagesUpdateHandlerInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param cqContentsyncPathrewritertransformerMappingLinks  (optional)
/// @param cqContentsyncPathrewritertransformerMappingClientlibs  (optional)
/// @param cqContentsyncPathrewritertransformerMappingImages  (optional)
/// @param cqContentsyncPathrewritertransformerAttributePattern  (optional)
/// @param cqContentsyncPathrewritertransformerClientlibraryPattern  (optional)
/// @param cqContentsyncPathrewritertransformerClientlibraryReplace  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComDayCqWcmContentsyncImplRewriterPathRewriterTransformerFactorInfo*
-(NSURLSessionTask*) comDayCqWcmContentsyncImplRewriterPathRewriterTransformerFactorWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    cqContentsyncPathrewritertransformerMappingLinks: (NSArray<NSString*>*) cqContentsyncPathrewritertransformerMappingLinks
    cqContentsyncPathrewritertransformerMappingClientlibs: (NSArray<NSString*>*) cqContentsyncPathrewritertransformerMappingClientlibs
    cqContentsyncPathrewritertransformerMappingImages: (NSArray<NSString*>*) cqContentsyncPathrewritertransformerMappingImages
    cqContentsyncPathrewritertransformerAttributePattern: (NSString*) cqContentsyncPathrewritertransformerAttributePattern
    cqContentsyncPathrewritertransformerClientlibraryPattern: (NSString*) cqContentsyncPathrewritertransformerClientlibraryPattern
    cqContentsyncPathrewritertransformerClientlibraryReplace: (NSString*) cqContentsyncPathrewritertransformerClientlibraryReplace
    completionHandler: (void (^)(OAIComDayCqWcmContentsyncImplRewriterPathRewriterTransformerFactorInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param authoringUIModeServiceDefault  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComDayCqWcmCoreImplAuthoringUIModeServiceImplInfo*
-(NSURLSessionTask*) comDayCqWcmCoreImplAuthoringUIModeServiceImplWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    authoringUIModeServiceDefault: (NSString*) authoringUIModeServiceDefault
    completionHandler: (void (^)(OAIComDayCqWcmCoreImplAuthoringUIModeServiceImplInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param wcmcommandservletDeleteWhitelist  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComDayCqWcmCoreImplCommandsWCMCommandServletInfo*
-(NSURLSessionTask*) comDayCqWcmCoreImplCommandsWCMCommandServletWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    wcmcommandservletDeleteWhitelist: (NSArray<NSString*>*) wcmcommandservletDeleteWhitelist
    completionHandler: (void (^)(OAIComDayCqWcmCoreImplCommandsWCMCommandServletInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param dimDefaultMode  (optional)
/// @param dimAppcacheEnabled  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComDayCqWcmCoreImplDevicedetectionDeviceIdentificationModeImplInfo*
-(NSURLSessionTask*) comDayCqWcmCoreImplDevicedetectionDeviceIdentificationModeImplWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    dimDefaultMode: (NSString*) dimDefaultMode
    dimAppcacheEnabled: (NSNumber*) dimAppcacheEnabled
    completionHandler: (void (^)(OAIComDayCqWcmCoreImplDevicedetectionDeviceIdentificationModeImplInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param configured  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComDayCqWcmCoreImplEventPageEventAuditListenerInfo*
-(NSURLSessionTask*) comDayCqWcmCoreImplEventPageEventAuditListenerWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    configured: (NSString*) configured
    completionHandler: (void (^)(OAIComDayCqWcmCoreImplEventPageEventAuditListenerInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param paths  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComDayCqWcmCoreImplEventPagePostProcessorInfo*
-(NSURLSessionTask*) comDayCqWcmCoreImplEventPagePostProcessorWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    paths: (NSArray<NSString*>*) paths
    completionHandler: (void (^)(OAIComDayCqWcmCoreImplEventPagePostProcessorInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param paths  (optional)
/// @param excludedPaths  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComDayCqWcmCoreImplEventRepositoryChangeEventListenerInfo*
-(NSURLSessionTask*) comDayCqWcmCoreImplEventRepositoryChangeEventListenerWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    paths: (NSArray<NSString*>*) paths
    excludedPaths: (NSArray<NSString*>*) excludedPaths
    completionHandler: (void (^)(OAIComDayCqWcmCoreImplEventRepositoryChangeEventListenerInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param paths  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComDayCqWcmCoreImplEventTemplatePostProcessorInfo*
-(NSURLSessionTask*) comDayCqWcmCoreImplEventTemplatePostProcessorWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    paths: (NSString*) paths
    completionHandler: (void (^)(OAIComDayCqWcmCoreImplEventTemplatePostProcessorInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param langmgrListPath  (optional)
/// @param langmgrCountryDefault  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComDayCqWcmCoreImplLanguageManagerImplInfo*
-(NSURLSessionTask*) comDayCqWcmCoreImplLanguageManagerImplWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    langmgrListPath: (NSString*) langmgrListPath
    langmgrCountryDefault: (NSArray<NSString*>*) langmgrCountryDefault
    completionHandler: (void (^)(OAIComDayCqWcmCoreImplLanguageManagerImplInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param linkExpiredPrefix  (optional)
/// @param linkExpiredRemove  (optional)
/// @param linkExpiredSuffix  (optional)
/// @param linkInvalidPrefix  (optional)
/// @param linkInvalidRemove  (optional)
/// @param linkInvalidSuffix  (optional)
/// @param linkPredatedPrefix  (optional)
/// @param linkPredatedRemove  (optional)
/// @param linkPredatedSuffix  (optional)
/// @param linkWcmmodes  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComDayCqWcmCoreImplLinkCheckerConfigurationFactoryImplInfo*
-(NSURLSessionTask*) comDayCqWcmCoreImplLinkCheckerConfigurationFactoryImplWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    linkExpiredPrefix: (NSString*) linkExpiredPrefix
    linkExpiredRemove: (NSNumber*) linkExpiredRemove
    linkExpiredSuffix: (NSString*) linkExpiredSuffix
    linkInvalidPrefix: (NSString*) linkInvalidPrefix
    linkInvalidRemove: (NSNumber*) linkInvalidRemove
    linkInvalidSuffix: (NSString*) linkInvalidSuffix
    linkPredatedPrefix: (NSString*) linkPredatedPrefix
    linkPredatedRemove: (NSNumber*) linkPredatedRemove
    linkPredatedSuffix: (NSString*) linkPredatedSuffix
    linkWcmmodes: (NSArray<NSString*>*) linkWcmmodes
    completionHandler: (void (^)(OAIComDayCqWcmCoreImplLinkCheckerConfigurationFactoryImplInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param pageInfoProviderPropertyRegexDefault  (optional)
/// @param pageInfoProviderPropertyName  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComDayCqWcmCoreImplPagePageInfoAggregatorImplInfo*
-(NSURLSessionTask*) comDayCqWcmCoreImplPagePageInfoAggregatorImplWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    pageInfoProviderPropertyRegexDefault: (NSString*) pageInfoProviderPropertyRegexDefault
    pageInfoProviderPropertyName: (NSString*) pageInfoProviderPropertyName
    completionHandler: (void (^)(OAIComDayCqWcmCoreImplPagePageInfoAggregatorImplInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param illegalCharMapping  (optional)
/// @param pageSubTreeActivationCheck  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComDayCqWcmCoreImplPagePageManagerFactoryImplInfo*
-(NSURLSessionTask*) comDayCqWcmCoreImplPagePageManagerFactoryImplWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    illegalCharMapping: (NSString*) illegalCharMapping
    pageSubTreeActivationCheck: (NSNumber*) pageSubTreeActivationCheck
    completionHandler: (void (^)(OAIComDayCqWcmCoreImplPagePageManagerFactoryImplInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param contentReferenceConfigResourceTypes  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComDayCqWcmCoreImplReferencesContentContentReferenceConfigInfo*
-(NSURLSessionTask*) comDayCqWcmCoreImplReferencesContentContentReferenceConfigWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    contentReferenceConfigResourceTypes: (NSArray<NSString*>*) contentReferenceConfigResourceTypes
    completionHandler: (void (^)(OAIComDayCqWcmCoreImplReferencesContentContentReferenceConfigInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param damShowexpired  (optional)
/// @param damShowhidden  (optional)
/// @param tagTitleSearch  (optional)
/// @param guessTotal  (optional)
/// @param damExpiryProperty  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComDayCqWcmCoreImplServletsContentfinderAssetViewHandlerInfo*
-(NSURLSessionTask*) comDayCqWcmCoreImplServletsContentfinderAssetViewHandlerWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    damShowexpired: (NSNumber*) damShowexpired
    damShowhidden: (NSNumber*) damShowhidden
    tagTitleSearch: (NSNumber*) tagTitleSearch
    guessTotal: (NSString*) guessTotal
    damExpiryProperty: (NSString*) damExpiryProperty
    completionHandler: (void (^)(OAIComDayCqWcmCoreImplServletsContentfinderAssetViewHandlerInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param itemResourceTypes  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComDayCqWcmCoreImplServletsContentfinderConnectorConnectorVieInfo*
-(NSURLSessionTask*) comDayCqWcmCoreImplServletsContentfinderConnectorConnectorVieWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    itemResourceTypes: (NSArray<NSString*>*) itemResourceTypes
    completionHandler: (void (^)(OAIComDayCqWcmCoreImplServletsContentfinderConnectorConnectorVieInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param guessTotal  (optional)
/// @param tagTitleSearch  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComDayCqWcmCoreImplServletsContentfinderPageViewHandlerInfo*
-(NSURLSessionTask*) comDayCqWcmCoreImplServletsContentfinderPageViewHandlerWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    guessTotal: (NSString*) guessTotal
    tagTitleSearch: (NSNumber*) tagTitleSearch
    completionHandler: (void (^)(OAIComDayCqWcmCoreImplServletsContentfinderPageViewHandlerInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param scope  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComDayCqWcmCoreImplServletsFindReplaceServletInfo*
-(NSURLSessionTask*) comDayCqWcmCoreImplServletsFindReplaceServletWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    scope: (NSArray<NSString*>*) scope
    completionHandler: (void (^)(OAIComDayCqWcmCoreImplServletsFindReplaceServletInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param referencesearchservletMaxReferencesPerPage  (optional)
/// @param referencesearchservletMaxPages  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComDayCqWcmCoreImplServletsReferenceSearchServletInfo*
-(NSURLSessionTask*) comDayCqWcmCoreImplServletsReferenceSearchServletWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    referencesearchservletMaxReferencesPerPage: (NSNumber*) referencesearchservletMaxReferencesPerPage
    referencesearchservletMaxPages: (NSNumber*) referencesearchservletMaxPages
    completionHandler: (void (^)(OAIComDayCqWcmCoreImplServletsReferenceSearchServletInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param workspace  (optional)
/// @param dimensions  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComDayCqWcmCoreImplServletsThumbnailServletInfo*
-(NSURLSessionTask*) comDayCqWcmCoreImplServletsThumbnailServletWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    workspace: (NSString*) workspace
    dimensions: (NSArray<NSString*>*) dimensions
    completionHandler: (void (^)(OAIComDayCqWcmCoreImplServletsThumbnailServletInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param nonValidChars  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComDayCqWcmCoreImplUtilsDefaultPageNameValidatorInfo*
-(NSURLSessionTask*) comDayCqWcmCoreImplUtilsDefaultPageNameValidatorWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    nonValidChars: (NSString*) nonValidChars
    completionHandler: (void (^)(OAIComDayCqWcmCoreImplUtilsDefaultPageNameValidatorInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param defaultExternalizerDomain  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComDayCqWcmCoreImplVariantsPageVariantsProviderImplInfo*
-(NSURLSessionTask*) comDayCqWcmCoreImplVariantsPageVariantsProviderImplWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    defaultExternalizerDomain: (NSString*) defaultExternalizerDomain
    completionHandler: (void (^)(OAIComDayCqWcmCoreImplVariantsPageVariantsProviderImplInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param versionmanagerCreateVersionOnActivation  (optional)
/// @param versionmanagerPurgingEnabled  (optional)
/// @param versionmanagerPurgePaths  (optional)
/// @param versionmanagerIvPaths  (optional)
/// @param versionmanagerMaxAgeDays  (optional)
/// @param versionmanagerMaxNumberVersions  (optional)
/// @param versionmanagerMinNumberVersions  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComDayCqWcmCoreImplVersionManagerImplInfo*
-(NSURLSessionTask*) comDayCqWcmCoreImplVersionManagerImplWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    versionmanagerCreateVersionOnActivation: (NSNumber*) versionmanagerCreateVersionOnActivation
    versionmanagerPurgingEnabled: (NSNumber*) versionmanagerPurgingEnabled
    versionmanagerPurgePaths: (NSArray<NSString*>*) versionmanagerPurgePaths
    versionmanagerIvPaths: (NSArray<NSString*>*) versionmanagerIvPaths
    versionmanagerMaxAgeDays: (NSNumber*) versionmanagerMaxAgeDays
    versionmanagerMaxNumberVersions: (NSNumber*) versionmanagerMaxNumberVersions
    versionmanagerMinNumberVersions: (NSNumber*) versionmanagerMinNumberVersions
    completionHandler: (void (^)(OAIComDayCqWcmCoreImplVersionManagerImplInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param versionpurgePaths  (optional)
/// @param versionpurgeRecursive  (optional)
/// @param versionpurgeMaxVersions  (optional)
/// @param versionpurgeMinVersions  (optional)
/// @param versionpurgeMaxAgeDays  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComDayCqWcmCoreImplVersionPurgeTaskInfo*
-(NSURLSessionTask*) comDayCqWcmCoreImplVersionPurgeTaskWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    versionpurgePaths: (NSArray<NSString*>*) versionpurgePaths
    versionpurgeRecursive: (NSNumber*) versionpurgeRecursive
    versionpurgeMaxVersions: (NSNumber*) versionpurgeMaxVersions
    versionpurgeMinVersions: (NSNumber*) versionpurgeMinVersions
    versionpurgeMaxAgeDays: (NSNumber*) versionpurgeMaxAgeDays
    completionHandler: (void (^)(OAIComDayCqWcmCoreImplVersionPurgeTaskInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param wcmdbgfilterEnabled  (optional)
/// @param wcmdbgfilterJspDebug  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComDayCqWcmCoreImplWCMDebugFilterInfo*
-(NSURLSessionTask*) comDayCqWcmCoreImplWCMDebugFilterWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    wcmdbgfilterEnabled: (NSNumber*) wcmdbgfilterEnabled
    wcmdbgfilterJspDebug: (NSNumber*) wcmdbgfilterJspDebug
    completionHandler: (void (^)(OAIComDayCqWcmCoreImplWCMDebugFilterInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param wcmdevmodefilterEnabled  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComDayCqWcmCoreImplWCMDeveloperModeFilterInfo*
-(NSURLSessionTask*) comDayCqWcmCoreImplWCMDeveloperModeFilterWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    wcmdevmodefilterEnabled: (NSNumber*) wcmdevmodefilterEnabled
    completionHandler: (void (^)(OAIComDayCqWcmCoreImplWCMDeveloperModeFilterInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param filterOrder  (optional)
/// @param filterScope  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComDayCqWcmCoreImplWarpTimeWarpFilterInfo*
-(NSURLSessionTask*) comDayCqWcmCoreImplWarpTimeWarpFilterWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    filterOrder: (NSString*) filterOrder
    filterScope: (NSString*) filterScope
    completionHandler: (void (^)(OAIComDayCqWcmCoreImplWarpTimeWarpFilterInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param mvtstatisticsTrackingurl  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComDayCqWcmCoreMvtMVTStatisticsImplInfo*
-(NSURLSessionTask*) comDayCqWcmCoreMvtMVTStatisticsImplWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    mvtstatisticsTrackingurl: (NSString*) mvtstatisticsTrackingurl
    completionHandler: (void (^)(OAIComDayCqWcmCoreMvtMVTStatisticsImplInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param pageviewstatisticsTrackingurl  (optional)
/// @param pageviewstatisticsTrackingscriptEnabled  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComDayCqWcmCoreStatsPageViewStatisticsImplInfo*
-(NSURLSessionTask*) comDayCqWcmCoreStatsPageViewStatisticsImplWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    pageviewstatisticsTrackingurl: (NSString*) pageviewstatisticsTrackingurl
    pageviewstatisticsTrackingscriptEnabled: (NSString*) pageviewstatisticsTrackingscriptEnabled
    completionHandler: (void (^)(OAIComDayCqWcmCoreStatsPageViewStatisticsImplInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param wcmfilterMode  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComDayCqWcmCoreWCMRequestFilterInfo*
-(NSURLSessionTask*) comDayCqWcmCoreWCMRequestFilterWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    wcmfilterMode: (NSString*) wcmfilterMode
    completionHandler: (void (^)(OAIComDayCqWcmCoreWCMRequestFilterInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param extractFilter  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComDayCqWcmDesignimporterDesignPackageImporterInfo*
-(NSURLSessionTask*) comDayCqWcmDesignimporterDesignPackageImporterWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    extractFilter: (NSArray<NSString*>*) extractFilter
    completionHandler: (void (^)(OAIComDayCqWcmDesignimporterDesignPackageImporterInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param filepattern  (optional)
/// @param buildPageNodes  (optional)
/// @param buildClientLibs  (optional)
/// @param buildCanvasComponent  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComDayCqWcmDesignimporterImplCanvasBuilderImplInfo*
-(NSURLSessionTask*) comDayCqWcmDesignimporterImplCanvasBuilderImplWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    filepattern: (NSString*) filepattern
    buildPageNodes: (NSNumber*) buildPageNodes
    buildClientLibs: (NSNumber*) buildClientLibs
    buildCanvasComponent: (NSNumber*) buildCanvasComponent
    completionHandler: (void (^)(OAIComDayCqWcmDesignimporterImplCanvasBuilderImplInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param minThreadPoolSize  (optional)
/// @param maxThreadPoolSize  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComDayCqWcmDesignimporterImplCanvasPageDeleteHandlerInfo*
-(NSURLSessionTask*) comDayCqWcmDesignimporterImplCanvasPageDeleteHandlerWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    minThreadPoolSize: (NSNumber*) minThreadPoolSize
    maxThreadPoolSize: (NSNumber*) maxThreadPoolSize
    completionHandler: (void (^)(OAIComDayCqWcmDesignimporterImplCanvasPageDeleteHandlerInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param searchPattern  (optional)
/// @param replacePattern  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComDayCqWcmDesignimporterImplEntryPreprocessorImplInfo*
-(NSURLSessionTask*) comDayCqWcmDesignimporterImplEntryPreprocessorImplWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    searchPattern: (NSString*) searchPattern
    replacePattern: (NSString*) replacePattern
    completionHandler: (void (^)(OAIComDayCqWcmDesignimporterImplEntryPreprocessorImplInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param filepattern  (optional)
/// @param deviceGroups  (optional)
/// @param buildPageNodes  (optional)
/// @param buildClientLibs  (optional)
/// @param buildCanvasComponent  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComDayCqWcmDesignimporterImplMobileCanvasBuilderImplInfo*
-(NSURLSessionTask*) comDayCqWcmDesignimporterImplMobileCanvasBuilderImplWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    filepattern: (NSString*) filepattern
    deviceGroups: (NSArray<NSString*>*) deviceGroups
    buildPageNodes: (NSNumber*) buildPageNodes
    buildClientLibs: (NSNumber*) buildClientLibs
    buildCanvasComponent: (NSNumber*) buildCanvasComponent
    completionHandler: (void (^)(OAIComDayCqWcmDesignimporterImplMobileCanvasBuilderImplInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param serviceRanking  (optional)
/// @param tagpattern  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComDayCqWcmDesignimporterParserTaghandlersFactoryCanvasComponeInfo*
-(NSURLSessionTask*) comDayCqWcmDesignimporterParserTaghandlersFactoryCanvasComponeWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    serviceRanking: (NSNumber*) serviceRanking
    tagpattern: (NSString*) tagpattern
    completionHandler: (void (^)(OAIComDayCqWcmDesignimporterParserTaghandlersFactoryCanvasComponeInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param serviceRanking  (optional)
/// @param tagpattern  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComDayCqWcmDesignimporterParserTaghandlersFactoryDefaultComponInfo*
-(NSURLSessionTask*) comDayCqWcmDesignimporterParserTaghandlersFactoryDefaultComponWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    serviceRanking: (NSNumber*) serviceRanking
    tagpattern: (NSString*) tagpattern
    completionHandler: (void (^)(OAIComDayCqWcmDesignimporterParserTaghandlersFactoryDefaultComponInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param serviceRanking  (optional)
/// @param tagpattern  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComDayCqWcmDesignimporterParserTaghandlersFactoryDefaultTagHanInfo*
-(NSURLSessionTask*) comDayCqWcmDesignimporterParserTaghandlersFactoryDefaultTagHanWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    serviceRanking: (NSNumber*) serviceRanking
    tagpattern: (NSString*) tagpattern
    completionHandler: (void (^)(OAIComDayCqWcmDesignimporterParserTaghandlersFactoryDefaultTagHanInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param serviceRanking  (optional)
/// @param tagpattern  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComDayCqWcmDesignimporterParserTaghandlersFactoryHeadTagHandleInfo*
-(NSURLSessionTask*) comDayCqWcmDesignimporterParserTaghandlersFactoryHeadTagHandleWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    serviceRanking: (NSNumber*) serviceRanking
    tagpattern: (NSString*) tagpattern
    completionHandler: (void (^)(OAIComDayCqWcmDesignimporterParserTaghandlersFactoryHeadTagHandleInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param serviceRanking  (optional)
/// @param tagpattern  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComDayCqWcmDesignimporterParserTaghandlersFactoryIFrameTagHandInfo*
-(NSURLSessionTask*) comDayCqWcmDesignimporterParserTaghandlersFactoryIFrameTagHandWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    serviceRanking: (NSNumber*) serviceRanking
    tagpattern: (NSString*) tagpattern
    completionHandler: (void (^)(OAIComDayCqWcmDesignimporterParserTaghandlersFactoryIFrameTagHandInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param serviceRanking  (optional)
/// @param tagpattern  (optional)
/// @param componentResourceType  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComDayCqWcmDesignimporterParserTaghandlersFactoryImageComponenInfo*
-(NSURLSessionTask*) comDayCqWcmDesignimporterParserTaghandlersFactoryImageComponenWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    serviceRanking: (NSNumber*) serviceRanking
    tagpattern: (NSString*) tagpattern
    componentResourceType: (NSString*) componentResourceType
    completionHandler: (void (^)(OAIComDayCqWcmDesignimporterParserTaghandlersFactoryImageComponenInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param serviceRanking  (optional)
/// @param tagpattern  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComDayCqWcmDesignimporterParserTaghandlersFactoryImgTagHandlerInfo*
-(NSURLSessionTask*) comDayCqWcmDesignimporterParserTaghandlersFactoryImgTagHandlerWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    serviceRanking: (NSNumber*) serviceRanking
    tagpattern: (NSString*) tagpattern
    completionHandler: (void (^)(OAIComDayCqWcmDesignimporterParserTaghandlersFactoryImgTagHandlerInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param serviceRanking  (optional)
/// @param tagpattern  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComDayCqWcmDesignimporterParserTaghandlersFactoryInlineScriptTInfo*
-(NSURLSessionTask*) comDayCqWcmDesignimporterParserTaghandlersFactoryInlineScriptTWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    serviceRanking: (NSNumber*) serviceRanking
    tagpattern: (NSString*) tagpattern
    completionHandler: (void (^)(OAIComDayCqWcmDesignimporterParserTaghandlersFactoryInlineScriptTInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param serviceRanking  (optional)
/// @param tagpattern  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComDayCqWcmDesignimporterParserTaghandlersFactoryLinkTagHandleInfo*
-(NSURLSessionTask*) comDayCqWcmDesignimporterParserTaghandlersFactoryLinkTagHandleWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    serviceRanking: (NSNumber*) serviceRanking
    tagpattern: (NSString*) tagpattern
    completionHandler: (void (^)(OAIComDayCqWcmDesignimporterParserTaghandlersFactoryLinkTagHandleInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param serviceRanking  (optional)
/// @param tagpattern  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComDayCqWcmDesignimporterParserTaghandlersFactoryMetaTagHandleInfo*
-(NSURLSessionTask*) comDayCqWcmDesignimporterParserTaghandlersFactoryMetaTagHandleWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    serviceRanking: (NSNumber*) serviceRanking
    tagpattern: (NSString*) tagpattern
    completionHandler: (void (^)(OAIComDayCqWcmDesignimporterParserTaghandlersFactoryMetaTagHandleInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param serviceRanking  (optional)
/// @param tagpattern  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComDayCqWcmDesignimporterParserTaghandlersFactoryNonScriptTagHInfo*
-(NSURLSessionTask*) comDayCqWcmDesignimporterParserTaghandlersFactoryNonScriptTagHWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    serviceRanking: (NSNumber*) serviceRanking
    tagpattern: (NSString*) tagpattern
    completionHandler: (void (^)(OAIComDayCqWcmDesignimporterParserTaghandlersFactoryNonScriptTagHInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param serviceRanking  (optional)
/// @param tagpattern  (optional)
/// @param componentResourceType  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComDayCqWcmDesignimporterParserTaghandlersFactoryParsysComponeInfo*
-(NSURLSessionTask*) comDayCqWcmDesignimporterParserTaghandlersFactoryParsysComponeWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    serviceRanking: (NSNumber*) serviceRanking
    tagpattern: (NSString*) tagpattern
    componentResourceType: (NSString*) componentResourceType
    completionHandler: (void (^)(OAIComDayCqWcmDesignimporterParserTaghandlersFactoryParsysComponeInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param serviceRanking  (optional)
/// @param tagpattern  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComDayCqWcmDesignimporterParserTaghandlersFactoryScriptTagHandInfo*
-(NSURLSessionTask*) comDayCqWcmDesignimporterParserTaghandlersFactoryScriptTagHandWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    serviceRanking: (NSNumber*) serviceRanking
    tagpattern: (NSString*) tagpattern
    completionHandler: (void (^)(OAIComDayCqWcmDesignimporterParserTaghandlersFactoryScriptTagHandInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param serviceRanking  (optional)
/// @param tagpattern  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComDayCqWcmDesignimporterParserTaghandlersFactoryStyleTagHandlInfo*
-(NSURLSessionTask*) comDayCqWcmDesignimporterParserTaghandlersFactoryStyleTagHandlWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    serviceRanking: (NSNumber*) serviceRanking
    tagpattern: (NSString*) tagpattern
    completionHandler: (void (^)(OAIComDayCqWcmDesignimporterParserTaghandlersFactoryStyleTagHandlInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param serviceRanking  (optional)
/// @param tagpattern  (optional)
/// @param componentResourceType  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComDayCqWcmDesignimporterParserTaghandlersFactoryTextComponentInfo*
-(NSURLSessionTask*) comDayCqWcmDesignimporterParserTaghandlersFactoryTextComponentWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    serviceRanking: (NSNumber*) serviceRanking
    tagpattern: (NSString*) tagpattern
    componentResourceType: (NSString*) componentResourceType
    completionHandler: (void (^)(OAIComDayCqWcmDesignimporterParserTaghandlersFactoryTextComponentInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param serviceRanking  (optional)
/// @param tagpattern  (optional)
/// @param componentResourceType  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComDayCqWcmDesignimporterParserTaghandlersFactoryTitleComponenInfo*
-(NSURLSessionTask*) comDayCqWcmDesignimporterParserTaghandlersFactoryTitleComponenWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    serviceRanking: (NSNumber*) serviceRanking
    tagpattern: (NSString*) tagpattern
    componentResourceType: (NSString*) componentResourceType
    completionHandler: (void (^)(OAIComDayCqWcmDesignimporterParserTaghandlersFactoryTitleComponenInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param serviceRanking  (optional)
/// @param tagpattern  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComDayCqWcmDesignimporterParserTaghandlersFactoryTitleTagHandlInfo*
-(NSURLSessionTask*) comDayCqWcmDesignimporterParserTaghandlersFactoryTitleTagHandlWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    serviceRanking: (NSNumber*) serviceRanking
    tagpattern: (NSString*) tagpattern
    completionHandler: (void (^)(OAIComDayCqWcmDesignimporterParserTaghandlersFactoryTitleTagHandlInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param serviceName  (optional)
/// @param slingServletResourceTypes  (optional)
/// @param slingServletSelectors  (optional)
/// @param slingServletMethods  (optional)
/// @param formsFormchooserservletAdvansesearchRequire  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComDayCqWcmFoundationFormsImplFormChooserServletInfo*
-(NSURLSessionTask*) comDayCqWcmFoundationFormsImplFormChooserServletWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    serviceName: (NSString*) serviceName
    slingServletResourceTypes: (NSString*) slingServletResourceTypes
    slingServletSelectors: (NSString*) slingServletSelectors
    slingServletMethods: (NSArray<NSString*>*) slingServletMethods
    formsFormchooserservletAdvansesearchRequire: (NSNumber*) formsFormchooserservletAdvansesearchRequire
    completionHandler: (void (^)(OAIComDayCqWcmFoundationFormsImplFormChooserServletInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param formsFormparagraphpostprocessorEnabled  (optional)
/// @param formsFormparagraphpostprocessorFormresourcetypes  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComDayCqWcmFoundationFormsImplFormParagraphPostProcessorInfo*
-(NSURLSessionTask*) comDayCqWcmFoundationFormsImplFormParagraphPostProcessorWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    formsFormparagraphpostprocessorEnabled: (NSNumber*) formsFormparagraphpostprocessorEnabled
    formsFormparagraphpostprocessorFormresourcetypes: (NSArray<NSString*>*) formsFormparagraphpostprocessorFormresourcetypes
    completionHandler: (void (^)(OAIComDayCqWcmFoundationFormsImplFormParagraphPostProcessorInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param nameWhitelist  (optional)
/// @param allowExpressions  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComDayCqWcmFoundationFormsImplFormsHandlingServletInfo*
-(NSURLSessionTask*) comDayCqWcmFoundationFormsImplFormsHandlingServletWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    nameWhitelist: (NSString*) nameWhitelist
    allowExpressions: (NSNumber*) allowExpressions
    completionHandler: (void (^)(OAIComDayCqWcmFoundationFormsImplFormsHandlingServletInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param slingServletResourceTypes  (optional)
/// @param slingServletSelectors  (optional)
/// @param resourceWhitelist  (optional)
/// @param resourceBlacklist  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComDayCqWcmFoundationFormsImplMailServletInfo*
-(NSURLSessionTask*) comDayCqWcmFoundationFormsImplMailServletWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    slingServletResourceTypes: (NSString*) slingServletResourceTypes
    slingServletSelectors: (NSString*) slingServletSelectors
    resourceWhitelist: (NSArray<NSString*>*) resourceWhitelist
    resourceBlacklist: (NSString*) resourceBlacklist
    completionHandler: (void (^)(OAIComDayCqWcmFoundationFormsImplMailServletInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param adaptSupportedWidths  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComDayCqWcmFoundationImplAdaptiveImageComponentServletInfo*
-(NSURLSessionTask*) comDayCqWcmFoundationImplAdaptiveImageComponentServletWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    adaptSupportedWidths: (NSArray<NSString*>*) adaptSupportedWidths
    completionHandler: (void (^)(OAIComDayCqWcmFoundationImplAdaptiveImageComponentServletInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param path  (optional)
/// @param authHttpNologin  (optional)
/// @param authHttpRealm  (optional)
/// @param authDefaultLoginpage  (optional)
/// @param authCredForm  (optional)
/// @param authCredUtf8  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComDayCqWcmFoundationImplHTTPAuthHandlerInfo*
-(NSURLSessionTask*) comDayCqWcmFoundationImplHTTPAuthHandlerWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    path: (NSString*) path
    authHttpNologin: (NSNumber*) authHttpNologin
    authHttpRealm: (NSString*) authHttpRealm
    authDefaultLoginpage: (NSString*) authDefaultLoginpage
    authCredForm: (NSArray<NSString*>*) authCredForm
    authCredUtf8: (NSArray<NSString*>*) authCredUtf8
    completionHandler: (void (^)(OAIComDayCqWcmFoundationImplHTTPAuthHandlerInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param slingAuthRequirements  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComDayCqWcmFoundationImplPageImpressionsTrackerInfo*
-(NSURLSessionTask*) comDayCqWcmFoundationImplPageImpressionsTrackerWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    slingAuthRequirements: (NSString*) slingAuthRequirements
    completionHandler: (void (^)(OAIComDayCqWcmFoundationImplPageImpressionsTrackerInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param excludedResourceTypes  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComDayCqWcmFoundationImplPageRedirectServletInfo*
-(NSURLSessionTask*) comDayCqWcmFoundationImplPageRedirectServletWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    excludedResourceTypes: (NSArray<NSString*>*) excludedResourceTypes
    completionHandler: (void (^)(OAIComDayCqWcmFoundationImplPageRedirectServletInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param defaultAttachmentTypeBlacklist  (optional)
/// @param baselineAttachmentTypeBlacklist  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComDayCqWcmFoundationSecurityImplDefaultAttachmentTypeBlacklistInfo*
-(NSURLSessionTask*) comDayCqWcmFoundationSecurityImplDefaultAttachmentTypeBlacklistWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    defaultAttachmentTypeBlacklist: (NSArray<NSString*>*) defaultAttachmentTypeBlacklist
    baselineAttachmentTypeBlacklist: (NSArray<NSString*>*) baselineAttachmentTypeBlacklist
    completionHandler: (void (^)(OAIComDayCqWcmFoundationSecurityImplDefaultAttachmentTypeBlacklistInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param parameterWhitelist  (optional)
/// @param parameterWhitelistPrefixes  (optional)
/// @param binaryParameterWhitelist  (optional)
/// @param modifierWhitelist  (optional)
/// @param operationWhitelist  (optional)
/// @param operationWhitelistPrefixes  (optional)
/// @param typehintWhitelist  (optional)
/// @param resourcetypeWhitelist  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComDayCqWcmFoundationSecurityImplSaferSlingPostValidatorImplInfo*
-(NSURLSessionTask*) comDayCqWcmFoundationSecurityImplSaferSlingPostValidatorImplWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    parameterWhitelist: (NSArray<NSString*>*) parameterWhitelist
    parameterWhitelistPrefixes: (NSArray<NSString*>*) parameterWhitelistPrefixes
    binaryParameterWhitelist: (NSArray<NSString*>*) binaryParameterWhitelist
    modifierWhitelist: (NSArray<NSString*>*) modifierWhitelist
    operationWhitelist: (NSArray<NSString*>*) operationWhitelist
    operationWhitelistPrefixes: (NSArray<NSString*>*) operationWhitelistPrefixes
    typehintWhitelist: (NSArray<NSString*>*) typehintWhitelist
    resourcetypeWhitelist: (NSArray<NSString*>*) resourcetypeWhitelist
    completionHandler: (void (^)(OAIComDayCqWcmFoundationSecurityImplSaferSlingPostValidatorImplInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param deviceInfoTransformerEnabled  (optional)
/// @param deviceInfoTransformerCssStyle  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComDayCqWcmMobileCoreImplDeviceDeviceInfoTransformerFactoryInfo*
-(NSURLSessionTask*) comDayCqWcmMobileCoreImplDeviceDeviceInfoTransformerFactoryWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    deviceInfoTransformerEnabled: (NSNumber*) deviceInfoTransformerEnabled
    deviceInfoTransformerCssStyle: (NSString*) deviceInfoTransformerCssStyle
    completionHandler: (void (^)(OAIComDayCqWcmMobileCoreImplDeviceDeviceInfoTransformerFactoryInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param redirectEnabled  (optional)
/// @param redirectStatsEnabled  (optional)
/// @param redirectExtensions  (optional)
/// @param redirectPaths  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComDayCqWcmMobileCoreImplRedirectRedirectFilterInfo*
-(NSURLSessionTask*) comDayCqWcmMobileCoreImplRedirectRedirectFilterWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    redirectEnabled: (NSNumber*) redirectEnabled
    redirectStatsEnabled: (NSNumber*) redirectStatsEnabled
    redirectExtensions: (NSArray<NSString*>*) redirectExtensions
    redirectPaths: (NSArray<NSString*>*) redirectPaths
    completionHandler: (void (^)(OAIComDayCqWcmMobileCoreImplRedirectRedirectFilterInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param cqWcmMsmActionExcludednodetypes  (optional)
/// @param cqWcmMsmActionExcludedparagraphitems  (optional)
/// @param cqWcmMsmActionExcludedprops  (optional)
/// @param contentcopyactionOrderStyle  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComDayCqWcmMsmImplActionsContentCopyActionFactoryInfo*
-(NSURLSessionTask*) comDayCqWcmMsmImplActionsContentCopyActionFactoryWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    cqWcmMsmActionExcludednodetypes: (NSArray<NSString*>*) cqWcmMsmActionExcludednodetypes
    cqWcmMsmActionExcludedparagraphitems: (NSArray<NSString*>*) cqWcmMsmActionExcludedparagraphitems
    cqWcmMsmActionExcludedprops: (NSArray<NSString*>*) cqWcmMsmActionExcludedprops
    contentcopyactionOrderStyle: (NSString*) contentcopyactionOrderStyle
    completionHandler: (void (^)(OAIComDayCqWcmMsmImplActionsContentCopyActionFactoryInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param cqWcmMsmActionExcludednodetypes  (optional)
/// @param cqWcmMsmActionExcludedparagraphitems  (optional)
/// @param cqWcmMsmActionExcludedprops  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComDayCqWcmMsmImplActionsContentDeleteActionFactoryInfo*
-(NSURLSessionTask*) comDayCqWcmMsmImplActionsContentDeleteActionFactoryWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    cqWcmMsmActionExcludednodetypes: (NSArray<NSString*>*) cqWcmMsmActionExcludednodetypes
    cqWcmMsmActionExcludedparagraphitems: (NSArray<NSString*>*) cqWcmMsmActionExcludedparagraphitems
    cqWcmMsmActionExcludedprops: (NSArray<NSString*>*) cqWcmMsmActionExcludedprops
    completionHandler: (void (^)(OAIComDayCqWcmMsmImplActionsContentDeleteActionFactoryInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param cqWcmMsmActionExcludednodetypes  (optional)
/// @param cqWcmMsmActionExcludedparagraphitems  (optional)
/// @param cqWcmMsmActionExcludedprops  (optional)
/// @param cqWcmMsmActionIgnoredMixin  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComDayCqWcmMsmImplActionsContentUpdateActionFactoryInfo*
-(NSURLSessionTask*) comDayCqWcmMsmImplActionsContentUpdateActionFactoryWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    cqWcmMsmActionExcludednodetypes: (NSArray<NSString*>*) cqWcmMsmActionExcludednodetypes
    cqWcmMsmActionExcludedparagraphitems: (NSArray<NSString*>*) cqWcmMsmActionExcludedparagraphitems
    cqWcmMsmActionExcludedprops: (NSArray<NSString*>*) cqWcmMsmActionExcludedprops
    cqWcmMsmActionIgnoredMixin: (NSArray<NSString*>*) cqWcmMsmActionIgnoredMixin
    completionHandler: (void (^)(OAIComDayCqWcmMsmImplActionsContentUpdateActionFactoryInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param cqWcmMsmActionExcludednodetypes  (optional)
/// @param cqWcmMsmActionExcludedparagraphitems  (optional)
/// @param cqWcmMsmActionExcludedprops  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComDayCqWcmMsmImplActionsOrderChildrenActionFactoryInfo*
-(NSURLSessionTask*) comDayCqWcmMsmImplActionsOrderChildrenActionFactoryWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    cqWcmMsmActionExcludednodetypes: (NSArray<NSString*>*) cqWcmMsmActionExcludednodetypes
    cqWcmMsmActionExcludedparagraphitems: (NSArray<NSString*>*) cqWcmMsmActionExcludedparagraphitems
    cqWcmMsmActionExcludedprops: (NSArray<NSString*>*) cqWcmMsmActionExcludedprops
    completionHandler: (void (^)(OAIComDayCqWcmMsmImplActionsOrderChildrenActionFactoryInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param cqWcmMsmActionExcludednodetypes  (optional)
/// @param cqWcmMsmActionExcludedparagraphitems  (optional)
/// @param cqWcmMsmActionExcludedprops  (optional)
/// @param cqWcmMsmImplActionsPagemovePropReferenceUpdate  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComDayCqWcmMsmImplActionsPageMoveActionFactoryInfo*
-(NSURLSessionTask*) comDayCqWcmMsmImplActionsPageMoveActionFactoryWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    cqWcmMsmActionExcludednodetypes: (NSArray<NSString*>*) cqWcmMsmActionExcludednodetypes
    cqWcmMsmActionExcludedparagraphitems: (NSArray<NSString*>*) cqWcmMsmActionExcludedparagraphitems
    cqWcmMsmActionExcludedprops: (NSArray<NSString*>*) cqWcmMsmActionExcludedprops
    cqWcmMsmImplActionsPagemovePropReferenceUpdate: (NSNumber*) cqWcmMsmImplActionsPagemovePropReferenceUpdate
    completionHandler: (void (^)(OAIComDayCqWcmMsmImplActionsPageMoveActionFactoryInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param cqWcmMsmActionExcludednodetypes  (optional)
/// @param cqWcmMsmActionExcludedparagraphitems  (optional)
/// @param cqWcmMsmActionExcludedprops  (optional)
/// @param cqWcmMsmImplActionReferencesupdatePropUpdateNested  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComDayCqWcmMsmImplActionsReferencesUpdateActionFactoryInfo*
-(NSURLSessionTask*) comDayCqWcmMsmImplActionsReferencesUpdateActionFactoryWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    cqWcmMsmActionExcludednodetypes: (NSArray<NSString*>*) cqWcmMsmActionExcludednodetypes
    cqWcmMsmActionExcludedparagraphitems: (NSArray<NSString*>*) cqWcmMsmActionExcludedparagraphitems
    cqWcmMsmActionExcludedprops: (NSArray<NSString*>*) cqWcmMsmActionExcludedprops
    cqWcmMsmImplActionReferencesupdatePropUpdateNested: (NSNumber*) cqWcmMsmImplActionReferencesupdatePropUpdateNested
    completionHandler: (void (^)(OAIComDayCqWcmMsmImplActionsReferencesUpdateActionFactoryInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param cqWcmMsmActionExcludednodetypes  (optional)
/// @param cqWcmMsmActionExcludedparagraphitems  (optional)
/// @param cqWcmMsmActionExcludedprops  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComDayCqWcmMsmImplActionsVersionCopyActionFactoryInfo*
-(NSURLSessionTask*) comDayCqWcmMsmImplActionsVersionCopyActionFactoryWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    cqWcmMsmActionExcludednodetypes: (NSArray<NSString*>*) cqWcmMsmActionExcludednodetypes
    cqWcmMsmActionExcludedparagraphitems: (NSArray<NSString*>*) cqWcmMsmActionExcludedparagraphitems
    cqWcmMsmActionExcludedprops: (NSArray<NSString*>*) cqWcmMsmActionExcludedprops
    completionHandler: (void (^)(OAIComDayCqWcmMsmImplActionsVersionCopyActionFactoryInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param liverelationshipmgrRelationsconfigDefault  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComDayCqWcmMsmImplLiveRelationshipManagerImplInfo*
-(NSURLSessionTask*) comDayCqWcmMsmImplLiveRelationshipManagerImplWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    liverelationshipmgrRelationsconfigDefault: (NSString*) liverelationshipmgrRelationsconfigDefault
    completionHandler: (void (^)(OAIComDayCqWcmMsmImplLiveRelationshipManagerImplInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param eventFilter  (optional)
/// @param rolloutmgrExcludedpropsDefault  (optional)
/// @param rolloutmgrExcludedparagraphpropsDefault  (optional)
/// @param rolloutmgrExcludednodetypesDefault  (optional)
/// @param rolloutmgrThreadpoolMaxsize  (optional)
/// @param rolloutmgrThreadpoolMaxshutdowntime  (optional)
/// @param rolloutmgrThreadpoolPriority  (optional)
/// @param rolloutmgrCommitSize  (optional)
/// @param rolloutmgrConflicthandlingEnabled  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComDayCqWcmMsmImplRolloutManagerImplInfo*
-(NSURLSessionTask*) comDayCqWcmMsmImplRolloutManagerImplWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    eventFilter: (NSString*) eventFilter
    rolloutmgrExcludedpropsDefault: (NSArray<NSString*>*) rolloutmgrExcludedpropsDefault
    rolloutmgrExcludedparagraphpropsDefault: (NSArray<NSString*>*) rolloutmgrExcludedparagraphpropsDefault
    rolloutmgrExcludednodetypesDefault: (NSArray<NSString*>*) rolloutmgrExcludednodetypesDefault
    rolloutmgrThreadpoolMaxsize: (NSNumber*) rolloutmgrThreadpoolMaxsize
    rolloutmgrThreadpoolMaxshutdowntime: (NSNumber*) rolloutmgrThreadpoolMaxshutdowntime
    rolloutmgrThreadpoolPriority: (NSString*) rolloutmgrThreadpoolPriority
    rolloutmgrCommitSize: (NSNumber*) rolloutmgrCommitSize
    rolloutmgrConflicthandlingEnabled: (NSNumber*) rolloutmgrConflicthandlingEnabled
    completionHandler: (void (^)(OAIComDayCqWcmMsmImplRolloutManagerImplInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param auditlogservletDefaultEventsCount  (optional)
/// @param auditlogservletDefaultPath  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComDayCqWcmMsmImplServletsAuditLogServletInfo*
-(NSURLSessionTask*) comDayCqWcmMsmImplServletsAuditLogServletWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    auditlogservletDefaultEventsCount: (NSNumber*) auditlogservletDefaultEventsCount
    auditlogservletDefaultPath: (NSString*) auditlogservletDefaultPath
    completionHandler: (void (^)(OAIComDayCqWcmMsmImplServletsAuditLogServletInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param emailFrom  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComDayCqWcmNotificationEmailImplEmailChannelInfo*
-(NSURLSessionTask*) comDayCqWcmNotificationEmailImplEmailChannelWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    emailFrom: (NSString*) emailFrom
    completionHandler: (void (^)(OAIComDayCqWcmNotificationEmailImplEmailChannelInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param eventTopics  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComDayCqWcmNotificationImplNotificationManagerImplInfo*
-(NSURLSessionTask*) comDayCqWcmNotificationImplNotificationManagerImplWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    eventTopics: (NSArray<NSString*>*) eventTopics
    completionHandler: (void (^)(OAIComDayCqWcmNotificationImplNotificationManagerImplInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param comDayCqWcmScriptingBvpScriptEngines  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComDayCqWcmScriptingImplBVPManagerInfo*
-(NSURLSessionTask*) comDayCqWcmScriptingImplBVPManagerWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    comDayCqWcmScriptingBvpScriptEngines: (NSArray<NSString*>*) comDayCqWcmScriptingBvpScriptEngines
    completionHandler: (void (^)(OAIComDayCqWcmScriptingImplBVPManagerInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param cqWcmUndoEnabled  (optional)
/// @param cqWcmUndoPath  (optional)
/// @param cqWcmUndoValidity  (optional)
/// @param cqWcmUndoSteps  (optional)
/// @param cqWcmUndoPersistence  (optional)
/// @param cqWcmUndoPersistenceMode  (optional)
/// @param cqWcmUndoMarkermode  (optional)
/// @param cqWcmUndoWhitelist  (optional)
/// @param cqWcmUndoBlacklist  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComDayCqWcmUndoUndoConfigInfo*
-(NSURLSessionTask*) comDayCqWcmUndoUndoConfigWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    cqWcmUndoEnabled: (NSNumber*) cqWcmUndoEnabled
    cqWcmUndoPath: (NSString*) cqWcmUndoPath
    cqWcmUndoValidity: (NSNumber*) cqWcmUndoValidity
    cqWcmUndoSteps: (NSNumber*) cqWcmUndoSteps
    cqWcmUndoPersistence: (NSString*) cqWcmUndoPersistence
    cqWcmUndoPersistenceMode: (NSNumber*) cqWcmUndoPersistenceMode
    cqWcmUndoMarkermode: (NSString*) cqWcmUndoMarkermode
    cqWcmUndoWhitelist: (NSArray<NSString*>*) cqWcmUndoWhitelist
    cqWcmUndoBlacklist: (NSArray<NSString*>*) cqWcmUndoBlacklist
    completionHandler: (void (^)(OAIComDayCqWcmUndoUndoConfigInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param flushAgents  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComDayCqWcmWebservicesupportImplReplicationEventListenerInfo*
-(NSURLSessionTask*) comDayCqWcmWebservicesupportImplReplicationEventListenerWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    flushAgents: (NSArray<NSString*>*) flushAgents
    completionHandler: (void (^)(OAIComDayCqWcmWebservicesupportImplReplicationEventListenerInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param eventFilter  (optional)
/// @param minThreadPoolSize  (optional)
/// @param maxThreadPoolSize  (optional)
/// @param cqWcmWorkflowTerminateOnActivate  (optional)
/// @param cqWcmWorklfowTerminateExclusionList  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComDayCqWcmWorkflowImplWcmWorkflowServiceImplInfo*
-(NSURLSessionTask*) comDayCqWcmWorkflowImplWcmWorkflowServiceImplWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    eventFilter: (NSString*) eventFilter
    minThreadPoolSize: (NSNumber*) minThreadPoolSize
    maxThreadPoolSize: (NSNumber*) maxThreadPoolSize
    cqWcmWorkflowTerminateOnActivate: (NSNumber*) cqWcmWorkflowTerminateOnActivate
    cqWcmWorklfowTerminateExclusionList: (NSArray<NSString*>*) cqWcmWorklfowTerminateExclusionList
    completionHandler: (void (^)(OAIComDayCqWcmWorkflowImplWcmWorkflowServiceImplInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param workflowpackageinfoproviderFilter  (optional)
/// @param workflowpackageinfoproviderFilterRootpath  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComDayCqWcmWorkflowImplWorkflowPackageInfoProviderInfo*
-(NSURLSessionTask*) comDayCqWcmWorkflowImplWorkflowPackageInfoProviderWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    workflowpackageinfoproviderFilter: (NSArray<NSString*>*) workflowpackageinfoproviderFilter
    workflowpackageinfoproviderFilterRootpath: (NSString*) workflowpackageinfoproviderFilterRootpath
    completionHandler: (void (^)(OAIComDayCqWcmWorkflowImplWorkflowPackageInfoProviderInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param htmllibmanagerClientmanager  (optional)
/// @param htmllibmanagerDebug  (optional)
/// @param htmllibmanagerDebugConsole  (optional)
/// @param htmllibmanagerDebugInitJs  (optional)
/// @param htmllibmanagerDefaultthemename  (optional)
/// @param htmllibmanagerDefaultuserthemename  (optional)
/// @param htmllibmanagerFirebuglitePath  (optional)
/// @param htmllibmanagerForceCQUrlInfo  (optional)
/// @param htmllibmanagerGzip  (optional)
/// @param htmllibmanagerMaxage  (optional)
/// @param htmllibmanagerMaxDataUriSize  (optional)
/// @param htmllibmanagerMinify  (optional)
/// @param htmllibmanagerPathList  (optional)
/// @param htmllibmanagerTiming  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComDayCqWidgetImplHtmlLibraryManagerImplInfo*
-(NSURLSessionTask*) comDayCqWidgetImplHtmlLibraryManagerImplWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    htmllibmanagerClientmanager: (NSString*) htmllibmanagerClientmanager
    htmllibmanagerDebug: (NSNumber*) htmllibmanagerDebug
    htmllibmanagerDebugConsole: (NSNumber*) htmllibmanagerDebugConsole
    htmllibmanagerDebugInitJs: (NSString*) htmllibmanagerDebugInitJs
    htmllibmanagerDefaultthemename: (NSString*) htmllibmanagerDefaultthemename
    htmllibmanagerDefaultuserthemename: (NSString*) htmllibmanagerDefaultuserthemename
    htmllibmanagerFirebuglitePath: (NSString*) htmllibmanagerFirebuglitePath
    htmllibmanagerForceCQUrlInfo: (NSNumber*) htmllibmanagerForceCQUrlInfo
    htmllibmanagerGzip: (NSNumber*) htmllibmanagerGzip
    htmllibmanagerMaxage: (NSNumber*) htmllibmanagerMaxage
    htmllibmanagerMaxDataUriSize: (NSNumber*) htmllibmanagerMaxDataUriSize
    htmllibmanagerMinify: (NSNumber*) htmllibmanagerMinify
    htmllibmanagerPathList: (NSArray<NSString*>*) htmllibmanagerPathList
    htmllibmanagerTiming: (NSNumber*) htmllibmanagerTiming
    completionHandler: (void (^)(OAIComDayCqWidgetImplHtmlLibraryManagerImplInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param extendableWidgets  (optional)
/// @param widgetextensionproviderDebug  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComDayCqWidgetImplWidgetExtensionProviderImplInfo*
-(NSURLSessionTask*) comDayCqWidgetImplWidgetExtensionProviderImplWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    extendableWidgets: (NSArray<NSString*>*) extendableWidgets
    widgetextensionproviderDebug: (NSNumber*) widgetextensionproviderDebug
    completionHandler: (void (^)(OAIComDayCqWidgetImplWidgetExtensionProviderImplInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param fromAddress  (optional)
/// @param hostPrefix  (optional)
/// @param notifyOnabort  (optional)
/// @param notifyOncomplete  (optional)
/// @param notifyOncontainercomplete  (optional)
/// @param notifyUseronly  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComDayCqWorkflowImplEmailEMailNotificationServiceInfo*
-(NSURLSessionTask*) comDayCqWorkflowImplEmailEMailNotificationServiceWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    fromAddress: (NSString*) fromAddress
    hostPrefix: (NSString*) hostPrefix
    notifyOnabort: (NSNumber*) notifyOnabort
    notifyOncomplete: (NSNumber*) notifyOncomplete
    notifyOncontainercomplete: (NSNumber*) notifyOncontainercomplete
    notifyUseronly: (NSNumber*) notifyUseronly
    completionHandler: (void (^)(OAIComDayCqWorkflowImplEmailEMailNotificationServiceInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param notifyOnupdate  (optional)
/// @param notifyOncomplete  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComDayCqWorkflowImplEmailTaskEMailNotificationServiceInfo*
-(NSURLSessionTask*) comDayCqWorkflowImplEmailTaskEMailNotificationServiceWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    notifyOnupdate: (NSNumber*) notifyOnupdate
    notifyOncomplete: (NSNumber*) notifyOncomplete
    completionHandler: (void (^)(OAIComDayCqWorkflowImplEmailTaskEMailNotificationServiceInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param path  (optional)
/// @param tokenRequiredAttr  (optional)
/// @param tokenAlternateUrl  (optional)
/// @param tokenEncapsulated  (optional)
/// @param skipTokenRefresh  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComDayCrxSecurityTokenImplImplTokenAuthenticationHandlerInfo*
-(NSURLSessionTask*) comDayCrxSecurityTokenImplImplTokenAuthenticationHandlerWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    path: (NSString*) path
    tokenRequiredAttr: (NSString*) tokenRequiredAttr
    tokenAlternateUrl: (NSString*) tokenAlternateUrl
    tokenEncapsulated: (NSNumber*) tokenEncapsulated
    skipTokenRefresh: (NSArray<NSString*>*) skipTokenRefresh
    completionHandler: (void (^)(OAIComDayCrxSecurityTokenImplImplTokenAuthenticationHandlerInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param enableTokenCleanupTask  (optional)
/// @param schedulerExpression  (optional)
/// @param batchSize  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIComDayCrxSecurityTokenImplTokenCleanupTaskInfo*
-(NSURLSessionTask*) comDayCrxSecurityTokenImplTokenCleanupTaskWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    enableTokenCleanupTask: (NSNumber*) enableTokenCleanupTask
    schedulerExpression: (NSString*) schedulerExpression
    batchSize: (NSNumber*) batchSize
    completionHandler: (void (^)(OAIComDayCrxSecurityTokenImplTokenCleanupTaskInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param supportedLocales  (optional)
/// @param localizableProperties  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIGuideLocalizationServiceInfo*
-(NSURLSessionTask*) guideLocalizationServiceWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    supportedLocales: (NSArray<NSString*>*) supportedLocales
    localizableProperties: (NSArray<NSString*>*) localizableProperties
    completionHandler: (void (^)(OAIGuideLocalizationServiceInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param priority  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIMessagingUserComponentFactoryInfo*
-(NSURLSessionTask*) messagingUserComponentFactoryWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    priority: (NSNumber*) priority
    completionHandler: (void (^)(OAIMessagingUserComponentFactoryInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param attributeChangeNotificationEnabled  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIOrgApacheAriesJmxFrameworkStateConfigInfo*
-(NSURLSessionTask*) orgApacheAriesJmxFrameworkStateConfigWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    attributeChangeNotificationEnabled: (NSNumber*) attributeChangeNotificationEnabled
    completionHandler: (void (^)(OAIOrgApacheAriesJmxFrameworkStateConfigInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param orgApacheFelixEventadminThreadPoolSize  (optional)
/// @param orgApacheFelixEventadminAsyncToSyncThreadRatio  (optional)
/// @param orgApacheFelixEventadminTimeout  (optional)
/// @param orgApacheFelixEventadminRequireTopic  (optional)
/// @param orgApacheFelixEventadminIgnoreTimeout  (optional)
/// @param orgApacheFelixEventadminIgnoreTopic  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIOrgApacheFelixEventadminImplEventAdminInfo*
-(NSURLSessionTask*) orgApacheFelixEventadminImplEventAdminWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    orgApacheFelixEventadminThreadPoolSize: (NSNumber*) orgApacheFelixEventadminThreadPoolSize
    orgApacheFelixEventadminAsyncToSyncThreadRatio: (NSNumber*) orgApacheFelixEventadminAsyncToSyncThreadRatio
    orgApacheFelixEventadminTimeout: (NSNumber*) orgApacheFelixEventadminTimeout
    orgApacheFelixEventadminRequireTopic: (NSNumber*) orgApacheFelixEventadminRequireTopic
    orgApacheFelixEventadminIgnoreTimeout: (NSArray<NSString*>*) orgApacheFelixEventadminIgnoreTimeout
    orgApacheFelixEventadminIgnoreTopic: (NSArray<NSString*>*) orgApacheFelixEventadminIgnoreTopic
    completionHandler: (void (^)(OAIOrgApacheFelixEventadminImplEventAdminInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param orgApacheFelixHttpHost  (optional)
/// @param orgApacheFelixHttpEnable  (optional)
/// @param orgOsgiServiceHttpPort  (optional)
/// @param orgApacheFelixHttpTimeout  (optional)
/// @param orgApacheFelixHttpsEnable  (optional)
/// @param orgOsgiServiceHttpPortSecure  (optional)
/// @param orgApacheFelixHttpsKeystore  (optional)
/// @param orgApacheFelixHttpsKeystorePassword  (optional)
/// @param orgApacheFelixHttpsKeystoreKeyPassword  (optional)
/// @param orgApacheFelixHttpsTruststore  (optional)
/// @param orgApacheFelixHttpsTruststorePassword  (optional)
/// @param orgApacheFelixHttpsClientcertificate  (optional)
/// @param orgApacheFelixHttpContextPath  (optional)
/// @param orgApacheFelixHttpMbeans  (optional)
/// @param orgApacheFelixHttpSessionTimeout  (optional)
/// @param orgApacheFelixHttpJettyThreadpoolMax  (optional)
/// @param orgApacheFelixHttpJettyAcceptors  (optional)
/// @param orgApacheFelixHttpJettySelectors  (optional)
/// @param orgApacheFelixHttpJettyHeaderBufferSize  (optional)
/// @param orgApacheFelixHttpJettyRequestBufferSize  (optional)
/// @param orgApacheFelixHttpJettyResponseBufferSize  (optional)
/// @param orgApacheFelixHttpJettyMaxFormSize  (optional)
/// @param orgApacheFelixHttpPathExclusions  (optional)
/// @param orgApacheFelixHttpsJettyCiphersuitesExcluded  (optional)
/// @param orgApacheFelixHttpsJettyCiphersuitesIncluded  (optional)
/// @param orgApacheFelixHttpJettySendServerHeader  (optional)
/// @param orgApacheFelixHttpsJettyProtocolsIncluded  (optional)
/// @param orgApacheFelixHttpsJettyProtocolsExcluded  (optional)
/// @param orgApacheFelixProxyLoadBalancerConnectionEnable  (optional)
/// @param orgApacheFelixHttpsJettyRenegotiateAllowed  (optional)
/// @param orgApacheFelixHttpsJettySessionCookieHttpOnly  (optional)
/// @param orgApacheFelixHttpsJettySessionCookieSecure  (optional)
/// @param orgEclipseJettyServletSessionIdPathParameterName  (optional)
/// @param orgEclipseJettyServletCheckingRemoteSessionIdEncoding  (optional)
/// @param orgEclipseJettyServletSessionCookie  (optional)
/// @param orgEclipseJettyServletSessionDomain  (optional)
/// @param orgEclipseJettyServletSessionPath  (optional)
/// @param orgEclipseJettyServletMaxAge  (optional)
/// @param orgApacheFelixHttpName  (optional)
/// @param orgApacheFelixJettyGziphandlerEnable  (optional)
/// @param orgApacheFelixJettyGzipMinGzipSize  (optional)
/// @param orgApacheFelixJettyGzipCompressionLevel  (optional)
/// @param orgApacheFelixJettyGzipInflateBufferSize  (optional)
/// @param orgApacheFelixJettyGzipSyncFlush  (optional)
/// @param orgApacheFelixJettyGzipExcludedUserAgents  (optional)
/// @param orgApacheFelixJettyGzipIncludedMethods  (optional)
/// @param orgApacheFelixJettyGzipExcludedMethods  (optional)
/// @param orgApacheFelixJettyGzipIncludedPaths  (optional)
/// @param orgApacheFelixJettyGzipExcludedPaths  (optional)
/// @param orgApacheFelixJettyGzipIncludedMimeTypes  (optional)
/// @param orgApacheFelixJettyGzipExcludedMimeTypes  (optional)
/// @param orgApacheFelixHttpSessionInvalidate  (optional)
/// @param orgApacheFelixHttpSessionUniqueid  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIOrgApacheFelixHttpInfo*
-(NSURLSessionTask*) orgApacheFelixHttpWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    orgApacheFelixHttpHost: (NSString*) orgApacheFelixHttpHost
    orgApacheFelixHttpEnable: (NSNumber*) orgApacheFelixHttpEnable
    orgOsgiServiceHttpPort: (NSNumber*) orgOsgiServiceHttpPort
    orgApacheFelixHttpTimeout: (NSNumber*) orgApacheFelixHttpTimeout
    orgApacheFelixHttpsEnable: (NSNumber*) orgApacheFelixHttpsEnable
    orgOsgiServiceHttpPortSecure: (NSNumber*) orgOsgiServiceHttpPortSecure
    orgApacheFelixHttpsKeystore: (NSString*) orgApacheFelixHttpsKeystore
    orgApacheFelixHttpsKeystorePassword: (NSString*) orgApacheFelixHttpsKeystorePassword
    orgApacheFelixHttpsKeystoreKeyPassword: (NSString*) orgApacheFelixHttpsKeystoreKeyPassword
    orgApacheFelixHttpsTruststore: (NSString*) orgApacheFelixHttpsTruststore
    orgApacheFelixHttpsTruststorePassword: (NSString*) orgApacheFelixHttpsTruststorePassword
    orgApacheFelixHttpsClientcertificate: (NSString*) orgApacheFelixHttpsClientcertificate
    orgApacheFelixHttpContextPath: (NSString*) orgApacheFelixHttpContextPath
    orgApacheFelixHttpMbeans: (NSNumber*) orgApacheFelixHttpMbeans
    orgApacheFelixHttpSessionTimeout: (NSNumber*) orgApacheFelixHttpSessionTimeout
    orgApacheFelixHttpJettyThreadpoolMax: (NSNumber*) orgApacheFelixHttpJettyThreadpoolMax
    orgApacheFelixHttpJettyAcceptors: (NSNumber*) orgApacheFelixHttpJettyAcceptors
    orgApacheFelixHttpJettySelectors: (NSNumber*) orgApacheFelixHttpJettySelectors
    orgApacheFelixHttpJettyHeaderBufferSize: (NSNumber*) orgApacheFelixHttpJettyHeaderBufferSize
    orgApacheFelixHttpJettyRequestBufferSize: (NSNumber*) orgApacheFelixHttpJettyRequestBufferSize
    orgApacheFelixHttpJettyResponseBufferSize: (NSNumber*) orgApacheFelixHttpJettyResponseBufferSize
    orgApacheFelixHttpJettyMaxFormSize: (NSNumber*) orgApacheFelixHttpJettyMaxFormSize
    orgApacheFelixHttpPathExclusions: (NSArray<NSString*>*) orgApacheFelixHttpPathExclusions
    orgApacheFelixHttpsJettyCiphersuitesExcluded: (NSArray<NSString*>*) orgApacheFelixHttpsJettyCiphersuitesExcluded
    orgApacheFelixHttpsJettyCiphersuitesIncluded: (NSArray<NSString*>*) orgApacheFelixHttpsJettyCiphersuitesIncluded
    orgApacheFelixHttpJettySendServerHeader: (NSNumber*) orgApacheFelixHttpJettySendServerHeader
    orgApacheFelixHttpsJettyProtocolsIncluded: (NSArray<NSString*>*) orgApacheFelixHttpsJettyProtocolsIncluded
    orgApacheFelixHttpsJettyProtocolsExcluded: (NSArray<NSString*>*) orgApacheFelixHttpsJettyProtocolsExcluded
    orgApacheFelixProxyLoadBalancerConnectionEnable: (NSNumber*) orgApacheFelixProxyLoadBalancerConnectionEnable
    orgApacheFelixHttpsJettyRenegotiateAllowed: (NSNumber*) orgApacheFelixHttpsJettyRenegotiateAllowed
    orgApacheFelixHttpsJettySessionCookieHttpOnly: (NSNumber*) orgApacheFelixHttpsJettySessionCookieHttpOnly
    orgApacheFelixHttpsJettySessionCookieSecure: (NSNumber*) orgApacheFelixHttpsJettySessionCookieSecure
    orgEclipseJettyServletSessionIdPathParameterName: (NSString*) orgEclipseJettyServletSessionIdPathParameterName
    orgEclipseJettyServletCheckingRemoteSessionIdEncoding: (NSNumber*) orgEclipseJettyServletCheckingRemoteSessionIdEncoding
    orgEclipseJettyServletSessionCookie: (NSString*) orgEclipseJettyServletSessionCookie
    orgEclipseJettyServletSessionDomain: (NSString*) orgEclipseJettyServletSessionDomain
    orgEclipseJettyServletSessionPath: (NSString*) orgEclipseJettyServletSessionPath
    orgEclipseJettyServletMaxAge: (NSNumber*) orgEclipseJettyServletMaxAge
    orgApacheFelixHttpName: (NSString*) orgApacheFelixHttpName
    orgApacheFelixJettyGziphandlerEnable: (NSNumber*) orgApacheFelixJettyGziphandlerEnable
    orgApacheFelixJettyGzipMinGzipSize: (NSNumber*) orgApacheFelixJettyGzipMinGzipSize
    orgApacheFelixJettyGzipCompressionLevel: (NSNumber*) orgApacheFelixJettyGzipCompressionLevel
    orgApacheFelixJettyGzipInflateBufferSize: (NSNumber*) orgApacheFelixJettyGzipInflateBufferSize
    orgApacheFelixJettyGzipSyncFlush: (NSNumber*) orgApacheFelixJettyGzipSyncFlush
    orgApacheFelixJettyGzipExcludedUserAgents: (NSArray<NSString*>*) orgApacheFelixJettyGzipExcludedUserAgents
    orgApacheFelixJettyGzipIncludedMethods: (NSArray<NSString*>*) orgApacheFelixJettyGzipIncludedMethods
    orgApacheFelixJettyGzipExcludedMethods: (NSArray<NSString*>*) orgApacheFelixJettyGzipExcludedMethods
    orgApacheFelixJettyGzipIncludedPaths: (NSArray<NSString*>*) orgApacheFelixJettyGzipIncludedPaths
    orgApacheFelixJettyGzipExcludedPaths: (NSArray<NSString*>*) orgApacheFelixJettyGzipExcludedPaths
    orgApacheFelixJettyGzipIncludedMimeTypes: (NSArray<NSString*>*) orgApacheFelixJettyGzipIncludedMimeTypes
    orgApacheFelixJettyGzipExcludedMimeTypes: (NSArray<NSString*>*) orgApacheFelixJettyGzipExcludedMimeTypes
    orgApacheFelixHttpSessionInvalidate: (NSNumber*) orgApacheFelixHttpSessionInvalidate
    orgApacheFelixHttpSessionUniqueid: (NSNumber*) orgApacheFelixHttpSessionUniqueid
    completionHandler: (void (^)(OAIOrgApacheFelixHttpInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param sslForwardHeader  (optional)
/// @param sslForwardValue  (optional)
/// @param sslForwardCertHeader  (optional)
/// @param rewriteAbsoluteUrls  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIOrgApacheFelixHttpSslfilterSslFilterInfo*
-(NSURLSessionTask*) orgApacheFelixHttpSslfilterSslFilterWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    sslForwardHeader: (NSString*) sslForwardHeader
    sslForwardValue: (NSString*) sslForwardValue
    sslForwardCertHeader: (NSString*) sslForwardCertHeader
    rewriteAbsoluteUrls: (NSNumber*) rewriteAbsoluteUrls
    completionHandler: (void (^)(OAIOrgApacheFelixHttpSslfilterSslFilterInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param jaasControlFlag  (optional)
/// @param jaasRanking  (optional)
/// @param jaasRealmName  (optional)
/// @param jaasClassname  (optional)
/// @param jaasOptions  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIOrgApacheFelixJaasConfigurationFactoryInfo*
-(NSURLSessionTask*) orgApacheFelixJaasConfigurationFactoryWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    jaasControlFlag: (NSString*) jaasControlFlag
    jaasRanking: (NSNumber*) jaasRanking
    jaasRealmName: (NSString*) jaasRealmName
    jaasClassname: (NSString*) jaasClassname
    jaasOptions: (NSArray<NSString*>*) jaasOptions
    completionHandler: (void (^)(OAIOrgApacheFelixJaasConfigurationFactoryInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param jaasDefaultRealmName  (optional)
/// @param jaasConfigProviderName  (optional)
/// @param jaasGlobalConfigPolicy  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIOrgApacheFelixJaasConfigurationSpiInfo*
-(NSURLSessionTask*) orgApacheFelixJaasConfigurationSpiWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    jaasDefaultRealmName: (NSString*) jaasDefaultRealmName
    jaasConfigProviderName: (NSString*) jaasConfigProviderName
    jaasGlobalConfigPolicy: (NSString*) jaasGlobalConfigPolicy
    completionHandler: (void (^)(OAIOrgApacheFelixJaasConfigurationSpiInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param dsLoglevel  (optional)
/// @param dsFactoryEnabled  (optional)
/// @param dsDelayedKeepInstances  (optional)
/// @param dsLockTimeoutMilliseconds  (optional)
/// @param dsStopTimeoutMilliseconds  (optional)
/// @param dsGlobalExtender  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIOrgApacheFelixScrScrServiceInfo*
-(NSURLSessionTask*) orgApacheFelixScrScrServiceWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    dsLoglevel: (NSNumber*) dsLoglevel
    dsFactoryEnabled: (NSNumber*) dsFactoryEnabled
    dsDelayedKeepInstances: (NSNumber*) dsDelayedKeepInstances
    dsLockTimeoutMilliseconds: (NSNumber*) dsLockTimeoutMilliseconds
    dsStopTimeoutMilliseconds: (NSNumber*) dsStopTimeoutMilliseconds
    dsGlobalExtender: (NSNumber*) dsGlobalExtender
    completionHandler: (void (^)(OAIOrgApacheFelixScrScrServiceInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param componentsList  (optional)
/// @param type  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIOrgApacheFelixSystemreadyImplComponentsCheckInfo*
-(NSURLSessionTask*) orgApacheFelixSystemreadyImplComponentsCheckWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    componentsList: (NSArray<NSString*>*) componentsList
    type: (NSString*) type
    completionHandler: (void (^)(OAIOrgApacheFelixSystemreadyImplComponentsCheckInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param timeout  (optional)
/// @param targetStartLevel  (optional)
/// @param targetStartLevelPropName  (optional)
/// @param type  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIOrgApacheFelixSystemreadyImplFrameworkStartCheckInfo*
-(NSURLSessionTask*) orgApacheFelixSystemreadyImplFrameworkStartCheckWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    timeout: (NSNumber*) timeout
    targetStartLevel: (NSNumber*) targetStartLevel
    targetStartLevelPropName: (NSString*) targetStartLevelPropName
    type: (NSString*) type
    completionHandler: (void (^)(OAIOrgApacheFelixSystemreadyImplFrameworkStartCheckInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param servicesList  (optional)
/// @param type  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIOrgApacheFelixSystemreadyImplServicesCheckInfo*
-(NSURLSessionTask*) orgApacheFelixSystemreadyImplServicesCheckWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    servicesList: (NSArray<NSString*>*) servicesList
    type: (NSString*) type
    completionHandler: (void (^)(OAIOrgApacheFelixSystemreadyImplServicesCheckInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param osgiHttpWhiteboardServletPattern  (optional)
/// @param osgiHttpWhiteboardContextSelect  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIOrgApacheFelixSystemreadyImplServletSystemAliveServletInfo*
-(NSURLSessionTask*) orgApacheFelixSystemreadyImplServletSystemAliveServletWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    osgiHttpWhiteboardServletPattern: (NSString*) osgiHttpWhiteboardServletPattern
    osgiHttpWhiteboardContextSelect: (NSString*) osgiHttpWhiteboardContextSelect
    completionHandler: (void (^)(OAIOrgApacheFelixSystemreadyImplServletSystemAliveServletInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param osgiHttpWhiteboardServletPattern  (optional)
/// @param osgiHttpWhiteboardContextSelect  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIOrgApacheFelixSystemreadyImplServletSystemReadyServletInfo*
-(NSURLSessionTask*) orgApacheFelixSystemreadyImplServletSystemReadyServletWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    osgiHttpWhiteboardServletPattern: (NSString*) osgiHttpWhiteboardServletPattern
    osgiHttpWhiteboardContextSelect: (NSString*) osgiHttpWhiteboardContextSelect
    completionHandler: (void (^)(OAIOrgApacheFelixSystemreadyImplServletSystemReadyServletInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param pollInterval  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIOrgApacheFelixSystemreadySystemReadyMonitorInfo*
-(NSURLSessionTask*) orgApacheFelixSystemreadySystemReadyMonitorWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    pollInterval: (NSNumber*) pollInterval
    completionHandler: (void (^)(OAIOrgApacheFelixSystemreadySystemReadyMonitorInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param managerRoot  (optional)
/// @param httpServiceFilter  (optional)
/// @param defaultRender  (optional)
/// @param realm  (optional)
/// @param username  (optional)
/// @param password  (optional)
/// @param category  (optional)
/// @param locale  (optional)
/// @param loglevel  (optional)
/// @param plugins  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIOrgApacheFelixWebconsoleInternalServletOsgiManagerInfo*
-(NSURLSessionTask*) orgApacheFelixWebconsoleInternalServletOsgiManagerWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    managerRoot: (NSString*) managerRoot
    httpServiceFilter: (NSString*) httpServiceFilter
    defaultRender: (NSString*) defaultRender
    realm: (NSString*) realm
    username: (NSString*) username
    password: (NSString*) password
    category: (NSString*) category
    locale: (NSString*) locale
    loglevel: (NSNumber*) loglevel
    plugins: (NSString*) plugins
    completionHandler: (void (^)(OAIOrgApacheFelixWebconsoleInternalServletOsgiManagerInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param maxSize  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIOrgApacheFelixWebconsolePluginsEventInternalPluginServletInfo*
-(NSURLSessionTask*) orgApacheFelixWebconsolePluginsEventInternalPluginServletWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    maxSize: (NSNumber*) maxSize
    completionHandler: (void (^)(OAIOrgApacheFelixWebconsolePluginsEventInternalPluginServletInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param felixMemoryusageDumpThreshold  (optional)
/// @param felixMemoryusageDumpInterval  (optional)
/// @param felixMemoryusageDumpLocation  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIOrgApacheFelixWebconsolePluginsMemoryusageInternalMemoryUsageCoInfo*
-(NSURLSessionTask*) orgApacheFelixWebconsolePluginsMemoryusageInternalMemoryUsageCoWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    felixMemoryusageDumpThreshold: (NSNumber*) felixMemoryusageDumpThreshold
    felixMemoryusageDumpInterval: (NSNumber*) felixMemoryusageDumpInterval
    felixMemoryusageDumpLocation: (NSString*) felixMemoryusageDumpLocation
    completionHandler: (void (^)(OAIOrgApacheFelixWebconsolePluginsMemoryusageInternalMemoryUsageCoInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param proxyEnabled  (optional)
/// @param proxyHost  (optional)
/// @param proxyPort  (optional)
/// @param proxyUser  (optional)
/// @param proxyPassword  (optional)
/// @param proxyExceptions  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIOrgApacheHttpProxyconfiguratorInfo*
-(NSURLSessionTask*) orgApacheHttpProxyconfiguratorWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    proxyEnabled: (NSNumber*) proxyEnabled
    proxyHost: (NSString*) proxyHost
    proxyPort: (NSNumber*) proxyPort
    proxyUser: (NSString*) proxyUser
    proxyPassword: (NSString*) proxyPassword
    proxyExceptions: (NSArray<NSString*>*) proxyExceptions
    completionHandler: (void (^)(OAIOrgApacheHttpProxyconfiguratorInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param dir  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIOrgApacheJackrabbitOakPluginsBlobDatastoreDataStoreTextProviderInfo*
-(NSURLSessionTask*) orgApacheJackrabbitOakPluginsBlobDatastoreDataStoreTextProviderWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    dir: (NSString*) dir
    completionHandler: (void (^)(OAIOrgApacheJackrabbitOakPluginsBlobDatastoreDataStoreTextProviderInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param path  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIOrgApacheJackrabbitOakPluginsBlobDatastoreFileDataStoreInfo*
-(NSURLSessionTask*) orgApacheJackrabbitOakPluginsBlobDatastoreFileDataStoreWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    path: (NSString*) path
    completionHandler: (void (^)(OAIOrgApacheJackrabbitOakPluginsBlobDatastoreFileDataStoreInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param mongouri  (optional)
/// @param db  (optional)
/// @param socketKeepAlive  (optional)
/// @param cache  (optional)
/// @param nodeCachePercentage  (optional)
/// @param prevDocCachePercentage  (optional)
/// @param childrenCachePercentage  (optional)
/// @param diffCachePercentage  (optional)
/// @param cacheSegmentCount  (optional)
/// @param cacheStackMoveDistance  (optional)
/// @param blobCacheSize  (optional)
/// @param persistentCache  (optional)
/// @param journalCache  (optional)
/// @param customBlobStore  (optional)
/// @param journalGCInterval  (optional)
/// @param journalGCMaxAge  (optional)
/// @param prefetchExternalChanges  (optional)
/// @param role  (optional)
/// @param versionGcMaxAgeInSecs  (optional)
/// @param versionGCExpression  (optional)
/// @param versionGCTimeLimitInSecs  (optional)
/// @param blobGcMaxAgeInSecs  (optional)
/// @param blobTrackSnapshotIntervalInSecs  (optional)
/// @param repositoryHome  (optional)
/// @param maxReplicationLagInSecs  (optional)
/// @param documentStoreType  (optional)
/// @param bundlingDisabled  (optional)
/// @param updateLimit  (optional)
/// @param persistentCacheIncludes  (optional)
/// @param leaseCheckMode  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIOrgApacheJackrabbitOakPluginsDocumentDocumentNodeStoreServiceInfo*
-(NSURLSessionTask*) orgApacheJackrabbitOakPluginsDocumentDocumentNodeStoreServiceWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    mongouri: (NSString*) mongouri
    db: (NSString*) db
    socketKeepAlive: (NSNumber*) socketKeepAlive
    cache: (NSNumber*) cache
    nodeCachePercentage: (NSNumber*) nodeCachePercentage
    prevDocCachePercentage: (NSNumber*) prevDocCachePercentage
    childrenCachePercentage: (NSNumber*) childrenCachePercentage
    diffCachePercentage: (NSNumber*) diffCachePercentage
    cacheSegmentCount: (NSNumber*) cacheSegmentCount
    cacheStackMoveDistance: (NSNumber*) cacheStackMoveDistance
    blobCacheSize: (NSNumber*) blobCacheSize
    persistentCache: (NSString*) persistentCache
    journalCache: (NSString*) journalCache
    customBlobStore: (NSNumber*) customBlobStore
    journalGCInterval: (NSNumber*) journalGCInterval
    journalGCMaxAge: (NSNumber*) journalGCMaxAge
    prefetchExternalChanges: (NSNumber*) prefetchExternalChanges
    role: (NSString*) role
    versionGcMaxAgeInSecs: (NSNumber*) versionGcMaxAgeInSecs
    versionGCExpression: (NSString*) versionGCExpression
    versionGCTimeLimitInSecs: (NSNumber*) versionGCTimeLimitInSecs
    blobGcMaxAgeInSecs: (NSNumber*) blobGcMaxAgeInSecs
    blobTrackSnapshotIntervalInSecs: (NSNumber*) blobTrackSnapshotIntervalInSecs
    repositoryHome: (NSString*) repositoryHome
    maxReplicationLagInSecs: (NSNumber*) maxReplicationLagInSecs
    documentStoreType: (NSString*) documentStoreType
    bundlingDisabled: (NSNumber*) bundlingDisabled
    updateLimit: (NSNumber*) updateLimit
    persistentCacheIncludes: (NSArray<NSString*>*) persistentCacheIncludes
    leaseCheckMode: (NSString*) leaseCheckMode
    completionHandler: (void (^)(OAIOrgApacheJackrabbitOakPluginsDocumentDocumentNodeStoreServiceInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param persistentCacheIncludes  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIOrgApacheJackrabbitOakPluginsDocumentDocumentNodeStoreServicePreInfo*
-(NSURLSessionTask*) orgApacheJackrabbitOakPluginsDocumentDocumentNodeStoreServicePreWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    persistentCacheIncludes: (NSArray<NSString*>*) persistentCacheIncludes
    completionHandler: (void (^)(OAIOrgApacheJackrabbitOakPluginsDocumentDocumentNodeStoreServicePreInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param includedPaths  (optional)
/// @param enableAsyncObserver  (optional)
/// @param observerQueueSize  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIOrgApacheJackrabbitOakPluginsDocumentSecondarySecondaryStoreCacInfo*
-(NSURLSessionTask*) orgApacheJackrabbitOakPluginsDocumentSecondarySecondaryStoreCacWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    includedPaths: (NSArray<NSString*>*) includedPaths
    enableAsyncObserver: (NSNumber*) enableAsyncObserver
    observerQueueSize: (NSNumber*) observerQueueSize
    completionHandler: (void (^)(OAIOrgApacheJackrabbitOakPluginsDocumentSecondarySecondaryStoreCacInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param asyncConfigs  (optional)
/// @param leaseTimeOutMinutes  (optional)
/// @param failingIndexTimeoutSeconds  (optional)
/// @param errorWarnIntervalSeconds  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIOrgApacheJackrabbitOakPluginsIndexAsyncIndexerServiceInfo*
-(NSURLSessionTask*) orgApacheJackrabbitOakPluginsIndexAsyncIndexerServiceWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    asyncConfigs: (NSArray<NSString*>*) asyncConfigs
    leaseTimeOutMinutes: (NSNumber*) leaseTimeOutMinutes
    failingIndexTimeoutSeconds: (NSNumber*) failingIndexTimeoutSeconds
    errorWarnIntervalSeconds: (NSNumber*) errorWarnIntervalSeconds
    completionHandler: (void (^)(OAIOrgApacheJackrabbitOakPluginsIndexAsyncIndexerServiceInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param disabled  (optional)
/// @param debug  (optional)
/// @param localIndexDir  (optional)
/// @param enableOpenIndexAsync  (optional)
/// @param threadPoolSize  (optional)
/// @param prefetchIndexFiles  (optional)
/// @param extractedTextCacheSizeInMB  (optional)
/// @param extractedTextCacheExpiryInSecs  (optional)
/// @param alwaysUsePreExtractedCache  (optional)
/// @param booleanClauseLimit  (optional)
/// @param enableHybridIndexing  (optional)
/// @param hybridQueueSize  (optional)
/// @param disableStoredIndexDefinition  (optional)
/// @param deletedBlobsCollectionEnabled  (optional)
/// @param propIndexCleanerIntervalInSecs  (optional)
/// @param enableSingleBlobIndexFiles  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIOrgApacheJackrabbitOakPluginsIndexLuceneLuceneIndexProviderServInfo*
-(NSURLSessionTask*) orgApacheJackrabbitOakPluginsIndexLuceneLuceneIndexProviderServWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    disabled: (NSNumber*) disabled
    debug: (NSNumber*) debug
    localIndexDir: (NSString*) localIndexDir
    enableOpenIndexAsync: (NSNumber*) enableOpenIndexAsync
    threadPoolSize: (NSNumber*) threadPoolSize
    prefetchIndexFiles: (NSNumber*) prefetchIndexFiles
    extractedTextCacheSizeInMB: (NSNumber*) extractedTextCacheSizeInMB
    extractedTextCacheExpiryInSecs: (NSNumber*) extractedTextCacheExpiryInSecs
    alwaysUsePreExtractedCache: (NSNumber*) alwaysUsePreExtractedCache
    booleanClauseLimit: (NSNumber*) booleanClauseLimit
    enableHybridIndexing: (NSNumber*) enableHybridIndexing
    hybridQueueSize: (NSNumber*) hybridQueueSize
    disableStoredIndexDefinition: (NSNumber*) disableStoredIndexDefinition
    deletedBlobsCollectionEnabled: (NSNumber*) deletedBlobsCollectionEnabled
    propIndexCleanerIntervalInSecs: (NSNumber*) propIndexCleanerIntervalInSecs
    enableSingleBlobIndexFiles: (NSNumber*) enableSingleBlobIndexFiles
    completionHandler: (void (^)(OAIOrgApacheJackrabbitOakPluginsIndexLuceneLuceneIndexProviderServInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param solrHomePath  (optional)
/// @param solrCoreName  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIOrgApacheJackrabbitOakPluginsIndexSolrOsgiEmbeddedSolrServerCoInfo*
-(NSURLSessionTask*) orgApacheJackrabbitOakPluginsIndexSolrOsgiEmbeddedSolrServerCoWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    solrHomePath: (NSString*) solrHomePath
    solrCoreName: (NSString*) solrCoreName
    completionHandler: (void (^)(OAIOrgApacheJackrabbitOakPluginsIndexSolrOsgiEmbeddedSolrServerCoInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param enabled  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIOrgApacheJackrabbitOakPluginsIndexSolrOsgiNodeStateSolrServersInfo*
-(NSURLSessionTask*) orgApacheJackrabbitOakPluginsIndexSolrOsgiNodeStateSolrServersWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    enabled: (NSNumber*) enabled
    completionHandler: (void (^)(OAIOrgApacheJackrabbitOakPluginsIndexSolrOsgiNodeStateSolrServersInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param pathDescField  (optional)
/// @param pathChildField  (optional)
/// @param pathParentField  (optional)
/// @param pathExactField  (optional)
/// @param catchAllField  (optional)
/// @param collapsedPathField  (optional)
/// @param pathDepthField  (optional)
/// @param commitPolicy  (optional)
/// @param rows  (optional)
/// @param pathRestrictions  (optional)
/// @param propertyRestrictions  (optional)
/// @param primarytypesRestrictions  (optional)
/// @param ignoredProperties  (optional)
/// @param usedProperties  (optional)
/// @param typeMappings  (optional)
/// @param propertyMappings  (optional)
/// @param collapseJcrcontentNodes  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIOrgApacheJackrabbitOakPluginsIndexSolrOsgiOakSolrConfigurationInfo*
-(NSURLSessionTask*) orgApacheJackrabbitOakPluginsIndexSolrOsgiOakSolrConfigurationWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    pathDescField: (NSString*) pathDescField
    pathChildField: (NSString*) pathChildField
    pathParentField: (NSString*) pathParentField
    pathExactField: (NSString*) pathExactField
    catchAllField: (NSString*) catchAllField
    collapsedPathField: (NSString*) collapsedPathField
    pathDepthField: (NSString*) pathDepthField
    commitPolicy: (NSString*) commitPolicy
    rows: (NSNumber*) rows
    pathRestrictions: (NSNumber*) pathRestrictions
    propertyRestrictions: (NSNumber*) propertyRestrictions
    primarytypesRestrictions: (NSNumber*) primarytypesRestrictions
    ignoredProperties: (NSArray<NSString*>*) ignoredProperties
    usedProperties: (NSArray<NSString*>*) usedProperties
    typeMappings: (NSArray<NSString*>*) typeMappings
    propertyMappings: (NSArray<NSString*>*) propertyMappings
    collapseJcrcontentNodes: (NSNumber*) collapseJcrcontentNodes
    completionHandler: (void (^)(OAIOrgApacheJackrabbitOakPluginsIndexSolrOsgiOakSolrConfigurationInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param solrHttpUrl  (optional)
/// @param solrZkHost  (optional)
/// @param solrCollection  (optional)
/// @param solrSocketTimeout  (optional)
/// @param solrConnectionTimeout  (optional)
/// @param solrShardsNo  (optional)
/// @param solrReplicationFactor  (optional)
/// @param solrConfDir  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIOrgApacheJackrabbitOakPluginsIndexSolrOsgiRemoteSolrServerConfInfo*
-(NSURLSessionTask*) orgApacheJackrabbitOakPluginsIndexSolrOsgiRemoteSolrServerConfWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    solrHttpUrl: (NSString*) solrHttpUrl
    solrZkHost: (NSString*) solrZkHost
    solrCollection: (NSString*) solrCollection
    solrSocketTimeout: (NSNumber*) solrSocketTimeout
    solrConnectionTimeout: (NSNumber*) solrConnectionTimeout
    solrShardsNo: (NSNumber*) solrShardsNo
    solrReplicationFactor: (NSNumber*) solrReplicationFactor
    solrConfDir: (NSString*) solrConfDir
    completionHandler: (void (^)(OAIOrgApacheJackrabbitOakPluginsIndexSolrOsgiRemoteSolrServerConfInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param queryAggregation  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIOrgApacheJackrabbitOakPluginsIndexSolrOsgiSolrQueryIndexProvidInfo*
-(NSURLSessionTask*) orgApacheJackrabbitOakPluginsIndexSolrOsgiSolrQueryIndexProvidWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    queryAggregation: (NSNumber*) queryAggregation
    completionHandler: (void (^)(OAIOrgApacheJackrabbitOakPluginsIndexSolrOsgiSolrQueryIndexProvidInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param serverType  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIOrgApacheJackrabbitOakPluginsIndexSolrOsgiSolrServerProviderSeInfo*
-(NSURLSessionTask*) orgApacheJackrabbitOakPluginsIndexSolrOsgiSolrServerProviderSeWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    serverType: (NSString*) serverType
    completionHandler: (void (^)(OAIOrgApacheJackrabbitOakPluginsIndexSolrOsgiSolrServerProviderSeInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param providerType  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIOrgApacheJackrabbitOakPluginsMetricStatisticsProviderFactoryInfo*
-(NSURLSessionTask*) orgApacheJackrabbitOakPluginsMetricStatisticsProviderFactoryWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    providerType: (NSString*) providerType
    completionHandler: (void (^)(OAIOrgApacheJackrabbitOakPluginsMetricStatisticsProviderFactoryInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param maxItems  (optional)
/// @param maxPathDepth  (optional)
/// @param enabled  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIOrgApacheJackrabbitOakPluginsObservationChangeCollectorProviderInfo*
-(NSURLSessionTask*) orgApacheJackrabbitOakPluginsObservationChangeCollectorProviderWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    maxItems: (NSNumber*) maxItems
    maxPathDepth: (NSNumber*) maxPathDepth
    enabled: (NSNumber*) enabled
    completionHandler: (void (^)(OAIOrgApacheJackrabbitOakPluginsObservationChangeCollectorProviderInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param queryLimitInMemory  (optional)
/// @param queryLimitReads  (optional)
/// @param queryFailTraversal  (optional)
/// @param fastQuerySize  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIOrgApacheJackrabbitOakQueryQueryEngineSettingsServiceInfo*
-(NSURLSessionTask*) orgApacheJackrabbitOakQueryQueryEngineSettingsServiceWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    queryLimitInMemory: (NSNumber*) queryLimitInMemory
    queryLimitReads: (NSNumber*) queryLimitReads
    queryFailTraversal: (NSNumber*) queryFailTraversal
    fastQuerySize: (NSNumber*) fastQuerySize
    completionHandler: (void (^)(OAIOrgApacheJackrabbitOakQueryQueryEngineSettingsServiceInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param orgApacheJackrabbitOakAuthenticationAppName  (optional)
/// @param orgApacheJackrabbitOakAuthenticationConfigSpiName  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIOrgApacheJackrabbitOakSecurityAuthenticationAuthenticationConfigInfo*
-(NSURLSessionTask*) orgApacheJackrabbitOakSecurityAuthenticationAuthenticationConfigWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    orgApacheJackrabbitOakAuthenticationAppName: (NSString*) orgApacheJackrabbitOakAuthenticationAppName
    orgApacheJackrabbitOakAuthenticationConfigSpiName: (NSString*) orgApacheJackrabbitOakAuthenticationConfigSpiName
    completionHandler: (void (^)(OAIOrgApacheJackrabbitOakSecurityAuthenticationAuthenticationConfigInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param providerName  (optional)
/// @param hostName  (optional)
/// @param hostPort  (optional)
/// @param hostSsl  (optional)
/// @param hostTls  (optional)
/// @param hostNoCertCheck  (optional)
/// @param bindDn  (optional)
/// @param bindPassword  (optional)
/// @param searchTimeout  (optional)
/// @param adminPoolMaxActive  (optional)
/// @param adminPoolLookupOnValidate  (optional)
/// @param userPoolMaxActive  (optional)
/// @param userPoolLookupOnValidate  (optional)
/// @param userBaseDN  (optional)
/// @param userObjectclass  (optional)
/// @param userIdAttribute  (optional)
/// @param userExtraFilter  (optional)
/// @param userMakeDnPath  (optional)
/// @param groupBaseDN  (optional)
/// @param groupObjectclass  (optional)
/// @param groupNameAttribute  (optional)
/// @param groupExtraFilter  (optional)
/// @param groupMakeDnPath  (optional)
/// @param groupMemberAttribute  (optional)
/// @param useUidForExtId  (optional)
/// @param customattributes  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIOrgApacheJackrabbitOakSecurityAuthenticationLdapImplLdapIdentiInfo*
-(NSURLSessionTask*) orgApacheJackrabbitOakSecurityAuthenticationLdapImplLdapIdentiWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    providerName: (NSString*) providerName
    hostName: (NSString*) hostName
    hostPort: (NSNumber*) hostPort
    hostSsl: (NSNumber*) hostSsl
    hostTls: (NSNumber*) hostTls
    hostNoCertCheck: (NSNumber*) hostNoCertCheck
    bindDn: (NSString*) bindDn
    bindPassword: (NSString*) bindPassword
    searchTimeout: (NSString*) searchTimeout
    adminPoolMaxActive: (NSNumber*) adminPoolMaxActive
    adminPoolLookupOnValidate: (NSNumber*) adminPoolLookupOnValidate
    userPoolMaxActive: (NSNumber*) userPoolMaxActive
    userPoolLookupOnValidate: (NSNumber*) userPoolLookupOnValidate
    userBaseDN: (NSString*) userBaseDN
    userObjectclass: (NSArray<NSString*>*) userObjectclass
    userIdAttribute: (NSString*) userIdAttribute
    userExtraFilter: (NSString*) userExtraFilter
    userMakeDnPath: (NSNumber*) userMakeDnPath
    groupBaseDN: (NSString*) groupBaseDN
    groupObjectclass: (NSArray<NSString*>*) groupObjectclass
    groupNameAttribute: (NSString*) groupNameAttribute
    groupExtraFilter: (NSString*) groupExtraFilter
    groupMakeDnPath: (NSNumber*) groupMakeDnPath
    groupMemberAttribute: (NSString*) groupMemberAttribute
    useUidForExtId: (NSNumber*) useUidForExtId
    customattributes: (NSArray<NSString*>*) customattributes
    completionHandler: (void (^)(OAIOrgApacheJackrabbitOakSecurityAuthenticationLdapImplLdapIdentiInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param tokenExpiration  (optional)
/// @param tokenLength  (optional)
/// @param tokenRefresh  (optional)
/// @param tokenCleanupThreshold  (optional)
/// @param passwordHashAlgorithm  (optional)
/// @param passwordHashIterations  (optional)
/// @param passwordSaltSize  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIOrgApacheJackrabbitOakSecurityAuthenticationTokenTokenConfiguraInfo*
-(NSURLSessionTask*) orgApacheJackrabbitOakSecurityAuthenticationTokenTokenConfiguraWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    tokenExpiration: (NSString*) tokenExpiration
    tokenLength: (NSString*) tokenLength
    tokenRefresh: (NSNumber*) tokenRefresh
    tokenCleanupThreshold: (NSNumber*) tokenCleanupThreshold
    passwordHashAlgorithm: (NSString*) passwordHashAlgorithm
    passwordHashIterations: (NSNumber*) passwordHashIterations
    passwordSaltSize: (NSNumber*) passwordSaltSize
    completionHandler: (void (^)(OAIOrgApacheJackrabbitOakSecurityAuthenticationTokenTokenConfiguraInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param permissionsJr2  (optional)
/// @param importBehavior  (optional)
/// @param readPaths  (optional)
/// @param administrativePrincipals  (optional)
/// @param configurationRanking  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIOrgApacheJackrabbitOakSecurityAuthorizationAuthorizationConfigurInfo*
-(NSURLSessionTask*) orgApacheJackrabbitOakSecurityAuthorizationAuthorizationConfigurWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    permissionsJr2: (NSString*) permissionsJr2
    importBehavior: (NSString*) importBehavior
    readPaths: (NSArray<NSString*>*) readPaths
    administrativePrincipals: (NSArray<NSString*>*) administrativePrincipals
    configurationRanking: (NSNumber*) configurationRanking
    completionHandler: (void (^)(OAIOrgApacheJackrabbitOakSecurityAuthorizationAuthorizationConfigurInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param requiredServicePids  (optional)
/// @param authorizationCompositionType  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIOrgApacheJackrabbitOakSecurityInternalSecurityProviderRegistratiInfo*
-(NSURLSessionTask*) orgApacheJackrabbitOakSecurityInternalSecurityProviderRegistratiWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    requiredServicePids: (NSArray<NSString*>*) requiredServicePids
    authorizationCompositionType: (NSString*) authorizationCompositionType
    completionHandler: (void (^)(OAIOrgApacheJackrabbitOakSecurityInternalSecurityProviderRegistratiInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param length  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIOrgApacheJackrabbitOakSecurityUserRandomAuthorizableNodeNameInfo*
-(NSURLSessionTask*) orgApacheJackrabbitOakSecurityUserRandomAuthorizableNodeNameWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    length: (NSNumber*) length
    completionHandler: (void (^)(OAIOrgApacheJackrabbitOakSecurityUserRandomAuthorizableNodeNameInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param usersPath  (optional)
/// @param groupsPath  (optional)
/// @param systemRelativePath  (optional)
/// @param defaultDepth  (optional)
/// @param importBehavior  (optional)
/// @param passwordHashAlgorithm  (optional)
/// @param passwordHashIterations  (optional)
/// @param passwordSaltSize  (optional)
/// @param omitAdminPw  (optional)
/// @param supportAutoSave  (optional)
/// @param passwordMaxAge  (optional)
/// @param initialPasswordChange  (optional)
/// @param passwordHistorySize  (optional)
/// @param passwordExpiryForAdmin  (optional)
/// @param cacheExpiration  (optional)
/// @param enableRFC7613UsercaseMappedProfile  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIOrgApacheJackrabbitOakSecurityUserUserConfigurationImplInfo*
-(NSURLSessionTask*) orgApacheJackrabbitOakSecurityUserUserConfigurationImplWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    usersPath: (NSString*) usersPath
    groupsPath: (NSString*) groupsPath
    systemRelativePath: (NSString*) systemRelativePath
    defaultDepth: (NSNumber*) defaultDepth
    importBehavior: (NSString*) importBehavior
    passwordHashAlgorithm: (NSString*) passwordHashAlgorithm
    passwordHashIterations: (NSNumber*) passwordHashIterations
    passwordSaltSize: (NSNumber*) passwordSaltSize
    omitAdminPw: (NSNumber*) omitAdminPw
    supportAutoSave: (NSNumber*) supportAutoSave
    passwordMaxAge: (NSNumber*) passwordMaxAge
    initialPasswordChange: (NSNumber*) initialPasswordChange
    passwordHistorySize: (NSNumber*) passwordHistorySize
    passwordExpiryForAdmin: (NSNumber*) passwordExpiryForAdmin
    cacheExpiration: (NSNumber*) cacheExpiration
    enableRFC7613UsercaseMappedProfile: (NSNumber*) enableRFC7613UsercaseMappedProfile
    completionHandler: (void (^)(OAIOrgApacheJackrabbitOakSecurityUserUserConfigurationImplInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param accountName  (optional)
/// @param containerName  (optional)
/// @param accessKey  (optional)
/// @param rootPath  (optional)
/// @param connectionURL  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIOrgApacheJackrabbitOakSegmentAzureAzureSegmentStoreServiceInfo*
-(NSURLSessionTask*) orgApacheJackrabbitOakSegmentAzureAzureSegmentStoreServiceWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    accountName: (NSString*) accountName
    containerName: (NSString*) containerName
    accessKey: (NSString*) accessKey
    rootPath: (NSString*) rootPath
    connectionURL: (NSString*) connectionURL
    completionHandler: (void (^)(OAIOrgApacheJackrabbitOakSegmentAzureAzureSegmentStoreServiceInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param repositoryHome  (optional)
/// @param tarmkMode  (optional)
/// @param tarmkSize  (optional)
/// @param segmentCacheSize  (optional)
/// @param stringCacheSize  (optional)
/// @param templateCacheSize  (optional)
/// @param stringDeduplicationCacheSize  (optional)
/// @param templateDeduplicationCacheSize  (optional)
/// @param nodeDeduplicationCacheSize  (optional)
/// @param pauseCompaction  (optional)
/// @param compactionRetryCount  (optional)
/// @param compactionForceTimeout  (optional)
/// @param compactionSizeDeltaEstimation  (optional)
/// @param compactionDisableEstimation  (optional)
/// @param compactionRetainedGenerations  (optional)
/// @param compactionMemoryThreshold  (optional)
/// @param compactionProgressLog  (optional)
/// @param standby  (optional)
/// @param customBlobStore  (optional)
/// @param customSegmentStore  (optional)
/// @param splitPersistence  (optional)
/// @param repositoryBackupDir  (optional)
/// @param blobGcMaxAgeInSecs  (optional)
/// @param blobTrackSnapshotIntervalInSecs  (optional)
/// @param role  (optional)
/// @param registerDescriptors  (optional)
/// @param dispatchChanges  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIOrgApacheJackrabbitOakSegmentSegmentNodeStoreFactoryInfo*
-(NSURLSessionTask*) orgApacheJackrabbitOakSegmentSegmentNodeStoreFactoryWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    repositoryHome: (NSString*) repositoryHome
    tarmkMode: (NSString*) tarmkMode
    tarmkSize: (NSNumber*) tarmkSize
    segmentCacheSize: (NSNumber*) segmentCacheSize
    stringCacheSize: (NSNumber*) stringCacheSize
    templateCacheSize: (NSNumber*) templateCacheSize
    stringDeduplicationCacheSize: (NSNumber*) stringDeduplicationCacheSize
    templateDeduplicationCacheSize: (NSNumber*) templateDeduplicationCacheSize
    nodeDeduplicationCacheSize: (NSNumber*) nodeDeduplicationCacheSize
    pauseCompaction: (NSNumber*) pauseCompaction
    compactionRetryCount: (NSNumber*) compactionRetryCount
    compactionForceTimeout: (NSNumber*) compactionForceTimeout
    compactionSizeDeltaEstimation: (NSNumber*) compactionSizeDeltaEstimation
    compactionDisableEstimation: (NSNumber*) compactionDisableEstimation
    compactionRetainedGenerations: (NSNumber*) compactionRetainedGenerations
    compactionMemoryThreshold: (NSNumber*) compactionMemoryThreshold
    compactionProgressLog: (NSNumber*) compactionProgressLog
    standby: (NSNumber*) standby
    customBlobStore: (NSNumber*) customBlobStore
    customSegmentStore: (NSNumber*) customSegmentStore
    splitPersistence: (NSNumber*) splitPersistence
    repositoryBackupDir: (NSString*) repositoryBackupDir
    blobGcMaxAgeInSecs: (NSNumber*) blobGcMaxAgeInSecs
    blobTrackSnapshotIntervalInSecs: (NSNumber*) blobTrackSnapshotIntervalInSecs
    role: (NSString*) role
    registerDescriptors: (NSNumber*) registerDescriptors
    dispatchChanges: (NSNumber*) dispatchChanges
    completionHandler: (void (^)(OAIOrgApacheJackrabbitOakSegmentSegmentNodeStoreFactoryInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param commitsTrackerWriterGroups  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIOrgApacheJackrabbitOakSegmentSegmentNodeStoreMonitorServiceInfo*
-(NSURLSessionTask*) orgApacheJackrabbitOakSegmentSegmentNodeStoreMonitorServiceWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    commitsTrackerWriterGroups: (NSArray<NSString*>*) commitsTrackerWriterGroups
    completionHandler: (void (^)(OAIOrgApacheJackrabbitOakSegmentSegmentNodeStoreMonitorServiceInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param repositoryHome  (optional)
/// @param tarmkMode  (optional)
/// @param tarmkSize  (optional)
/// @param segmentCacheSize  (optional)
/// @param stringCacheSize  (optional)
/// @param templateCacheSize  (optional)
/// @param stringDeduplicationCacheSize  (optional)
/// @param templateDeduplicationCacheSize  (optional)
/// @param nodeDeduplicationCacheSize  (optional)
/// @param pauseCompaction  (optional)
/// @param compactionRetryCount  (optional)
/// @param compactionForceTimeout  (optional)
/// @param compactionSizeDeltaEstimation  (optional)
/// @param compactionDisableEstimation  (optional)
/// @param compactionRetainedGenerations  (optional)
/// @param compactionMemoryThreshold  (optional)
/// @param compactionProgressLog  (optional)
/// @param standby  (optional)
/// @param customBlobStore  (optional)
/// @param customSegmentStore  (optional)
/// @param splitPersistence  (optional)
/// @param repositoryBackupDir  (optional)
/// @param blobGcMaxAgeInSecs  (optional)
/// @param blobTrackSnapshotIntervalInSecs  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIOrgApacheJackrabbitOakSegmentSegmentNodeStoreServiceInfo*
-(NSURLSessionTask*) orgApacheJackrabbitOakSegmentSegmentNodeStoreServiceWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    repositoryHome: (NSString*) repositoryHome
    tarmkMode: (NSString*) tarmkMode
    tarmkSize: (NSNumber*) tarmkSize
    segmentCacheSize: (NSNumber*) segmentCacheSize
    stringCacheSize: (NSNumber*) stringCacheSize
    templateCacheSize: (NSNumber*) templateCacheSize
    stringDeduplicationCacheSize: (NSNumber*) stringDeduplicationCacheSize
    templateDeduplicationCacheSize: (NSNumber*) templateDeduplicationCacheSize
    nodeDeduplicationCacheSize: (NSNumber*) nodeDeduplicationCacheSize
    pauseCompaction: (NSNumber*) pauseCompaction
    compactionRetryCount: (NSNumber*) compactionRetryCount
    compactionForceTimeout: (NSNumber*) compactionForceTimeout
    compactionSizeDeltaEstimation: (NSNumber*) compactionSizeDeltaEstimation
    compactionDisableEstimation: (NSNumber*) compactionDisableEstimation
    compactionRetainedGenerations: (NSNumber*) compactionRetainedGenerations
    compactionMemoryThreshold: (NSNumber*) compactionMemoryThreshold
    compactionProgressLog: (NSNumber*) compactionProgressLog
    standby: (NSNumber*) standby
    customBlobStore: (NSNumber*) customBlobStore
    customSegmentStore: (NSNumber*) customSegmentStore
    splitPersistence: (NSNumber*) splitPersistence
    repositoryBackupDir: (NSString*) repositoryBackupDir
    blobGcMaxAgeInSecs: (NSNumber*) blobGcMaxAgeInSecs
    blobTrackSnapshotIntervalInSecs: (NSNumber*) blobTrackSnapshotIntervalInSecs
    completionHandler: (void (^)(OAIOrgApacheJackrabbitOakSegmentSegmentNodeStoreServiceInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param orgApacheSlingInstallerConfigurationPersist  (optional)
/// @param mode  (optional)
/// @param port  (optional)
/// @param primaryHost  (optional)
/// @param interval  (optional)
/// @param primaryAllowedClientIpRanges  (optional)
/// @param secure  (optional)
/// @param standbyReadtimeout  (optional)
/// @param standbyAutoclean  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIOrgApacheJackrabbitOakSegmentStandbyStoreStandbyStoreServiceInfo*
-(NSURLSessionTask*) orgApacheJackrabbitOakSegmentStandbyStoreStandbyStoreServiceWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    orgApacheSlingInstallerConfigurationPersist: (NSNumber*) orgApacheSlingInstallerConfigurationPersist
    mode: (NSString*) mode
    port: (NSNumber*) port
    primaryHost: (NSString*) primaryHost
    interval: (NSNumber*) interval
    primaryAllowedClientIpRanges: (NSArray<NSString*>*) primaryAllowedClientIpRanges
    secure: (NSNumber*) secure
    standbyReadtimeout: (NSNumber*) standbyReadtimeout
    standbyAutoclean: (NSNumber*) standbyAutoclean
    completionHandler: (void (^)(OAIOrgApacheJackrabbitOakSegmentStandbyStoreStandbyStoreServiceInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param handlerName  (optional)
/// @param userExpirationTime  (optional)
/// @param userAutoMembership  (optional)
/// @param userPropertyMapping  (optional)
/// @param userPathPrefix  (optional)
/// @param userMembershipExpTime  (optional)
/// @param userMembershipNestingDepth  (optional)
/// @param userDynamicMembership  (optional)
/// @param userDisableMissing  (optional)
/// @param groupExpirationTime  (optional)
/// @param groupAutoMembership  (optional)
/// @param groupPropertyMapping  (optional)
/// @param groupPathPrefix  (optional)
/// @param enableRFC7613UsercaseMappedProfile  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIOrgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplDeInfo*
-(NSURLSessionTask*) orgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplDeWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    handlerName: (NSString*) handlerName
    userExpirationTime: (NSString*) userExpirationTime
    userAutoMembership: (NSArray<NSString*>*) userAutoMembership
    userPropertyMapping: (NSArray<NSString*>*) userPropertyMapping
    userPathPrefix: (NSString*) userPathPrefix
    userMembershipExpTime: (NSString*) userMembershipExpTime
    userMembershipNestingDepth: (NSNumber*) userMembershipNestingDepth
    userDynamicMembership: (NSNumber*) userDynamicMembership
    userDisableMissing: (NSNumber*) userDisableMissing
    groupExpirationTime: (NSString*) groupExpirationTime
    groupAutoMembership: (NSArray<NSString*>*) groupAutoMembership
    groupPropertyMapping: (NSArray<NSString*>*) groupPropertyMapping
    groupPathPrefix: (NSString*) groupPathPrefix
    enableRFC7613UsercaseMappedProfile: (NSNumber*) enableRFC7613UsercaseMappedProfile
    completionHandler: (void (^)(OAIOrgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplDeInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param jaasRanking  (optional)
/// @param jaasControlFlag  (optional)
/// @param jaasRealmName  (optional)
/// @param idpName  (optional)
/// @param syncHandlerName  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIOrgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplExInfo*
-(NSURLSessionTask*) orgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplExWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    jaasRanking: (NSNumber*) jaasRanking
    jaasControlFlag: (NSString*) jaasControlFlag
    jaasRealmName: (NSString*) jaasRealmName
    idpName: (NSString*) idpName
    syncHandlerName: (NSString*) syncHandlerName
    completionHandler: (void (^)(OAIOrgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplExInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param protectExternalId  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIOrgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplPrInfo*
-(NSURLSessionTask*) orgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplPrWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    protectExternalId: (NSNumber*) protectExternalId
    completionHandler: (void (^)(OAIOrgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplPrInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param cugSupportedPaths  (optional)
/// @param cugEnabled  (optional)
/// @param configurationRanking  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIOrgApacheJackrabbitOakSpiSecurityAuthorizationCugImplCugConfiInfo*
-(NSURLSessionTask*) orgApacheJackrabbitOakSpiSecurityAuthorizationCugImplCugConfiWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    cugSupportedPaths: (NSArray<NSString*>*) cugSupportedPaths
    cugEnabled: (NSNumber*) cugEnabled
    configurationRanking: (NSNumber*) configurationRanking
    completionHandler: (void (^)(OAIOrgApacheJackrabbitOakSpiSecurityAuthorizationCugImplCugConfiInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param principalNames  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIOrgApacheJackrabbitOakSpiSecurityAuthorizationCugImplCugExcluInfo*
-(NSURLSessionTask*) orgApacheJackrabbitOakSpiSecurityAuthorizationCugImplCugExcluWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    principalNames: (NSArray<NSString*>*) principalNames
    completionHandler: (void (^)(OAIOrgApacheJackrabbitOakSpiSecurityAuthorizationCugImplCugExcluInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param enabledActions  (optional)
/// @param userPrivilegeNames  (optional)
/// @param groupPrivilegeNames  (optional)
/// @param constraint  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIOrgApacheJackrabbitOakSpiSecurityUserActionDefaultAuthorizableInfo*
-(NSURLSessionTask*) orgApacheJackrabbitOakSpiSecurityUserActionDefaultAuthorizableWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    enabledActions: (NSString*) enabledActions
    userPrivilegeNames: (NSArray<NSString*>*) userPrivilegeNames
    groupPrivilegeNames: (NSArray<NSString*>*) groupPrivilegeNames
    constraint: (NSString*) constraint
    completionHandler: (void (^)(OAIOrgApacheJackrabbitOakSpiSecurityUserActionDefaultAuthorizableInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param packageRoots  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIOrgApacheJackrabbitVaultPackagingImplPackagingImplInfo*
-(NSURLSessionTask*) orgApacheJackrabbitVaultPackagingImplPackagingImplWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    packageRoots: (NSArray<NSString*>*) packageRoots
    completionHandler: (void (^)(OAIOrgApacheJackrabbitVaultPackagingImplPackagingImplInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param homePath  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIOrgApacheJackrabbitVaultPackagingRegistryImplFSPackageRegistryInfo*
-(NSURLSessionTask*) orgApacheJackrabbitVaultPackagingRegistryImplFSPackageRegistryWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    homePath: (NSString*) homePath
    completionHandler: (void (^)(OAIOrgApacheJackrabbitVaultPackagingRegistryImplFSPackageRegistryInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param slingServletMethods  (optional)
/// @param slingServletPaths  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIOrgApacheSlingAuthCoreImplLogoutServletInfo*
-(NSURLSessionTask*) orgApacheSlingAuthCoreImplLogoutServletWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    slingServletMethods: (NSArray<NSString*>*) slingServletMethods
    slingServletPaths: (NSString*) slingServletPaths
    completionHandler: (void (^)(OAIOrgApacheSlingAuthCoreImplLogoutServletInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param enabled  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIOrgApacheSlingCaconfigImplConfigurationBindingsValueProviderInfo*
-(NSURLSessionTask*) orgApacheSlingCaconfigImplConfigurationBindingsValueProviderWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    enabled: (NSNumber*) enabled
    completionHandler: (void (^)(OAIOrgApacheSlingCaconfigImplConfigurationBindingsValueProviderInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param configBucketNames  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIOrgApacheSlingCaconfigImplConfigurationResolverImplInfo*
-(NSURLSessionTask*) orgApacheSlingCaconfigImplConfigurationResolverImplWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    configBucketNames: (NSArray<NSString*>*) configBucketNames
    completionHandler: (void (^)(OAIOrgApacheSlingCaconfigImplConfigurationResolverImplInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param enabled  (optional)
/// @param configPropertyInheritancePropertyNames  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIOrgApacheSlingCaconfigImplDefDefaultConfigurationInheritanceStraInfo*
-(NSURLSessionTask*) orgApacheSlingCaconfigImplDefDefaultConfigurationInheritanceStraWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    enabled: (NSNumber*) enabled
    configPropertyInheritancePropertyNames: (NSArray<NSString*>*) configPropertyInheritancePropertyNames
    completionHandler: (void (^)(OAIOrgApacheSlingCaconfigImplDefDefaultConfigurationInheritanceStraInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param enabled  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIOrgApacheSlingCaconfigImplDefDefaultConfigurationPersistenceStraInfo*
-(NSURLSessionTask*) orgApacheSlingCaconfigImplDefDefaultConfigurationPersistenceStraWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    enabled: (NSNumber*) enabled
    completionHandler: (void (^)(OAIOrgApacheSlingCaconfigImplDefDefaultConfigurationPersistenceStraInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param _description  (optional)
/// @param overrides  (optional)
/// @param enabled  (optional)
/// @param serviceRanking  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIOrgApacheSlingCaconfigImplOverrideOsgiConfigurationOverrideProviInfo*
-(NSURLSessionTask*) orgApacheSlingCaconfigImplOverrideOsgiConfigurationOverrideProviWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    _description: (NSString*) _description
    overrides: (NSArray<NSString*>*) overrides
    enabled: (NSNumber*) enabled
    serviceRanking: (NSNumber*) serviceRanking
    completionHandler: (void (^)(OAIOrgApacheSlingCaconfigImplOverrideOsgiConfigurationOverrideProviInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param enabled  (optional)
/// @param serviceRanking  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIOrgApacheSlingCaconfigImplOverrideSystemPropertyConfigurationOveInfo*
-(NSURLSessionTask*) orgApacheSlingCaconfigImplOverrideSystemPropertyConfigurationOveWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    enabled: (NSNumber*) enabled
    serviceRanking: (NSNumber*) serviceRanking
    completionHandler: (void (^)(OAIOrgApacheSlingCaconfigImplOverrideSystemPropertyConfigurationOveInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param ignorePropertyNameRegex  (optional)
/// @param configCollectionPropertiesResourceNames  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIOrgApacheSlingCaconfigManagementImplConfigurationManagementSettiInfo*
-(NSURLSessionTask*) orgApacheSlingCaconfigManagementImplConfigurationManagementSettiWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    ignorePropertyNameRegex: (NSArray<NSString*>*) ignorePropertyNameRegex
    configCollectionPropertiesResourceNames: (NSArray<NSString*>*) configCollectionPropertiesResourceNames
    completionHandler: (void (^)(OAIOrgApacheSlingCaconfigManagementImplConfigurationManagementSettiInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param enabled  (optional)
/// @param configPath  (optional)
/// @param fallbackPaths  (optional)
/// @param configCollectionInheritancePropertyNames  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIOrgApacheSlingCaconfigResourceImplDefDefaultConfigurationResourInfo*
-(NSURLSessionTask*) orgApacheSlingCaconfigResourceImplDefDefaultConfigurationResourWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    enabled: (NSNumber*) enabled
    configPath: (NSString*) configPath
    fallbackPaths: (NSArray<NSString*>*) fallbackPaths
    configCollectionInheritancePropertyNames: (NSArray<NSString*>*) configCollectionInheritancePropertyNames
    completionHandler: (void (^)(OAIOrgApacheSlingCaconfigResourceImplDefDefaultConfigurationResourInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param enabled  (optional)
/// @param configRefResourceNames  (optional)
/// @param configRefPropertyNames  (optional)
/// @param serviceRanking  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIOrgApacheSlingCaconfigResourceImplDefDefaultContextPathStrategyInfo*
-(NSURLSessionTask*) orgApacheSlingCaconfigResourceImplDefDefaultContextPathStrategyWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    enabled: (NSNumber*) enabled
    configRefResourceNames: (NSArray<NSString*>*) configRefResourceNames
    configRefPropertyNames: (NSArray<NSString*>*) configRefPropertyNames
    serviceRanking: (NSNumber*) serviceRanking
    completionHandler: (void (^)(OAIOrgApacheSlingCaconfigResourceImplDefDefaultContextPathStrategyInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param parserFeatures  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIOrgApacheSlingCommonsHtmlInternalTagsoupHtmlParserInfo*
-(NSURLSessionTask*) orgApacheSlingCommonsHtmlInternalTagsoupHtmlParserWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    parserFeatures: (NSArray<NSString*>*) parserFeatures
    completionHandler: (void (^)(OAIOrgApacheSlingCommonsHtmlInternalTagsoupHtmlParserInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param orgApacheSlingCommonsLogLevel  (optional)
/// @param orgApacheSlingCommonsLogFile  (optional)
/// @param orgApacheSlingCommonsLogFileNumber  (optional)
/// @param orgApacheSlingCommonsLogFileSize  (optional)
/// @param orgApacheSlingCommonsLogPattern  (optional)
/// @param orgApacheSlingCommonsLogConfigurationFile  (optional)
/// @param orgApacheSlingCommonsLogPackagingDataEnabled  (optional)
/// @param orgApacheSlingCommonsLogMaxCallerDataDepth  (optional)
/// @param orgApacheSlingCommonsLogMaxOldFileCountInDump  (optional)
/// @param orgApacheSlingCommonsLogNumOfLines  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIOrgApacheSlingCommonsLogLogManagerInfo*
-(NSURLSessionTask*) orgApacheSlingCommonsLogLogManagerWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    orgApacheSlingCommonsLogLevel: (NSString*) orgApacheSlingCommonsLogLevel
    orgApacheSlingCommonsLogFile: (NSString*) orgApacheSlingCommonsLogFile
    orgApacheSlingCommonsLogFileNumber: (NSNumber*) orgApacheSlingCommonsLogFileNumber
    orgApacheSlingCommonsLogFileSize: (NSString*) orgApacheSlingCommonsLogFileSize
    orgApacheSlingCommonsLogPattern: (NSString*) orgApacheSlingCommonsLogPattern
    orgApacheSlingCommonsLogConfigurationFile: (NSString*) orgApacheSlingCommonsLogConfigurationFile
    orgApacheSlingCommonsLogPackagingDataEnabled: (NSNumber*) orgApacheSlingCommonsLogPackagingDataEnabled
    orgApacheSlingCommonsLogMaxCallerDataDepth: (NSNumber*) orgApacheSlingCommonsLogMaxCallerDataDepth
    orgApacheSlingCommonsLogMaxOldFileCountInDump: (NSNumber*) orgApacheSlingCommonsLogMaxOldFileCountInDump
    orgApacheSlingCommonsLogNumOfLines: (NSNumber*) orgApacheSlingCommonsLogNumOfLines
    completionHandler: (void (^)(OAIOrgApacheSlingCommonsLogLogManagerInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param orgApacheSlingCommonsLogLevel  (optional)
/// @param orgApacheSlingCommonsLogFile  (optional)
/// @param orgApacheSlingCommonsLogPattern  (optional)
/// @param orgApacheSlingCommonsLogNames  (optional)
/// @param orgApacheSlingCommonsLogAdditiv  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIOrgApacheSlingCommonsLogLogManagerFactoryConfigInfo*
-(NSURLSessionTask*) orgApacheSlingCommonsLogLogManagerFactoryConfigWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    orgApacheSlingCommonsLogLevel: (NSString*) orgApacheSlingCommonsLogLevel
    orgApacheSlingCommonsLogFile: (NSString*) orgApacheSlingCommonsLogFile
    orgApacheSlingCommonsLogPattern: (NSString*) orgApacheSlingCommonsLogPattern
    orgApacheSlingCommonsLogNames: (NSArray<NSString*>*) orgApacheSlingCommonsLogNames
    orgApacheSlingCommonsLogAdditiv: (NSNumber*) orgApacheSlingCommonsLogAdditiv
    completionHandler: (void (^)(OAIOrgApacheSlingCommonsLogLogManagerFactoryConfigInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param orgApacheSlingCommonsLogFile  (optional)
/// @param orgApacheSlingCommonsLogFileNumber  (optional)
/// @param orgApacheSlingCommonsLogFileSize  (optional)
/// @param orgApacheSlingCommonsLogFileBuffered  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIOrgApacheSlingCommonsLogLogManagerFactoryWriterInfo*
-(NSURLSessionTask*) orgApacheSlingCommonsLogLogManagerFactoryWriterWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    orgApacheSlingCommonsLogFile: (NSString*) orgApacheSlingCommonsLogFile
    orgApacheSlingCommonsLogFileNumber: (NSNumber*) orgApacheSlingCommonsLogFileNumber
    orgApacheSlingCommonsLogFileSize: (NSString*) orgApacheSlingCommonsLogFileSize
    orgApacheSlingCommonsLogFileBuffered: (NSNumber*) orgApacheSlingCommonsLogFileBuffered
    completionHandler: (void (^)(OAIOrgApacheSlingCommonsLogLogManagerFactoryWriterInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param period  (optional)
/// @param timeUnit  (optional)
/// @param level  (optional)
/// @param loggerName  (optional)
/// @param prefix  (optional)
/// @param pattern  (optional)
/// @param registryName  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIOrgApacheSlingCommonsMetricsInternalLogReporterInfo*
-(NSURLSessionTask*) orgApacheSlingCommonsMetricsInternalLogReporterWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    period: (NSNumber*) period
    timeUnit: (NSString*) timeUnit
    level: (NSString*) level
    loggerName: (NSString*) loggerName
    prefix: (NSString*) prefix
    pattern: (NSString*) pattern
    registryName: (NSString*) registryName
    completionHandler: (void (^)(OAIOrgApacheSlingCommonsMetricsInternalLogReporterInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param datasources  (optional)
/// @param step  (optional)
/// @param archives  (optional)
/// @param path  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIOrgApacheSlingCommonsMetricsRrd4jImplCodahaleMetricsReporterInfo*
-(NSURLSessionTask*) orgApacheSlingCommonsMetricsRrd4jImplCodahaleMetricsReporterWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    datasources: (NSArray<NSString*>*) datasources
    step: (NSNumber*) step
    archives: (NSArray<NSString*>*) archives
    path: (NSString*) path
    completionHandler: (void (^)(OAIOrgApacheSlingCommonsMetricsRrd4jImplCodahaleMetricsReporterInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param mimeTypes  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIOrgApacheSlingCommonsMimeInternalMimeTypeServiceImplInfo*
-(NSURLSessionTask*) orgApacheSlingCommonsMimeInternalMimeTypeServiceImplWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    mimeTypes: (NSArray<NSString*>*) mimeTypes
    completionHandler: (void (^)(OAIOrgApacheSlingCommonsMimeInternalMimeTypeServiceImplInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param poolName  (optional)
/// @param allowedPoolNames  (optional)
/// @param schedulerUseleaderforsingle  (optional)
/// @param metricsFilters  (optional)
/// @param slowThresholdMillis  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIOrgApacheSlingCommonsSchedulerImplQuartzSchedulerInfo*
-(NSURLSessionTask*) orgApacheSlingCommonsSchedulerImplQuartzSchedulerWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    poolName: (NSString*) poolName
    allowedPoolNames: (NSArray<NSString*>*) allowedPoolNames
    schedulerUseleaderforsingle: (NSNumber*) schedulerUseleaderforsingle
    metricsFilters: (NSArray<NSString*>*) metricsFilters
    slowThresholdMillis: (NSNumber*) slowThresholdMillis
    completionHandler: (void (^)(OAIOrgApacheSlingCommonsSchedulerImplQuartzSchedulerInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param maxQuartzJobDurationAcceptable  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIOrgApacheSlingCommonsSchedulerImplSchedulerHealthCheckInfo*
-(NSURLSessionTask*) orgApacheSlingCommonsSchedulerImplSchedulerHealthCheckWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    maxQuartzJobDurationAcceptable: (NSNumber*) maxQuartzJobDurationAcceptable
    completionHandler: (void (^)(OAIOrgApacheSlingCommonsSchedulerImplSchedulerHealthCheckInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param name  (optional)
/// @param minPoolSize  (optional)
/// @param maxPoolSize  (optional)
/// @param queueSize  (optional)
/// @param maxThreadAge  (optional)
/// @param keepAliveTime  (optional)
/// @param blockPolicy  (optional)
/// @param shutdownGraceful  (optional)
/// @param daemon  (optional)
/// @param shutdownWaitTime  (optional)
/// @param priority  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIOrgApacheSlingCommonsThreadsImplDefaultThreadPoolFactoryInfo*
-(NSURLSessionTask*) orgApacheSlingCommonsThreadsImplDefaultThreadPoolFactoryWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    name: (NSString*) name
    minPoolSize: (NSNumber*) minPoolSize
    maxPoolSize: (NSNumber*) maxPoolSize
    queueSize: (NSNumber*) queueSize
    maxThreadAge: (NSNumber*) maxThreadAge
    keepAliveTime: (NSNumber*) keepAliveTime
    blockPolicy: (NSString*) blockPolicy
    shutdownGraceful: (NSNumber*) shutdownGraceful
    daemon: (NSNumber*) daemon
    shutdownWaitTime: (NSNumber*) shutdownWaitTime
    priority: (NSString*) priority
    completionHandler: (void (^)(OAIOrgApacheSlingCommonsThreadsImplDefaultThreadPoolFactoryInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param datasourceName  (optional)
/// @param datasourceSvcPropName  (optional)
/// @param driverClassName  (optional)
/// @param url  (optional)
/// @param username  (optional)
/// @param password  (optional)
/// @param defaultAutoCommit  (optional)
/// @param defaultReadOnly  (optional)
/// @param defaultTransactionIsolation  (optional)
/// @param defaultCatalog  (optional)
/// @param maxActive  (optional)
/// @param maxIdle  (optional)
/// @param minIdle  (optional)
/// @param initialSize  (optional)
/// @param maxWait  (optional)
/// @param maxAge  (optional)
/// @param testOnBorrow  (optional)
/// @param testOnReturn  (optional)
/// @param testWhileIdle  (optional)
/// @param validationQuery  (optional)
/// @param validationQueryTimeout  (optional)
/// @param timeBetweenEvictionRunsMillis  (optional)
/// @param minEvictableIdleTimeMillis  (optional)
/// @param connectionProperties  (optional)
/// @param initSQL  (optional)
/// @param jdbcInterceptors  (optional)
/// @param validationInterval  (optional)
/// @param logValidationErrors  (optional)
/// @param datasourceSvcProperties  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIOrgApacheSlingDatasourceDataSourceFactoryInfo*
-(NSURLSessionTask*) orgApacheSlingDatasourceDataSourceFactoryWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    datasourceName: (NSString*) datasourceName
    datasourceSvcPropName: (NSString*) datasourceSvcPropName
    driverClassName: (NSString*) driverClassName
    url: (NSString*) url
    username: (NSString*) username
    password: (NSString*) password
    defaultAutoCommit: (NSString*) defaultAutoCommit
    defaultReadOnly: (NSString*) defaultReadOnly
    defaultTransactionIsolation: (NSString*) defaultTransactionIsolation
    defaultCatalog: (NSString*) defaultCatalog
    maxActive: (NSNumber*) maxActive
    maxIdle: (NSNumber*) maxIdle
    minIdle: (NSNumber*) minIdle
    initialSize: (NSNumber*) initialSize
    maxWait: (NSNumber*) maxWait
    maxAge: (NSNumber*) maxAge
    testOnBorrow: (NSNumber*) testOnBorrow
    testOnReturn: (NSNumber*) testOnReturn
    testWhileIdle: (NSNumber*) testWhileIdle
    validationQuery: (NSString*) validationQuery
    validationQueryTimeout: (NSNumber*) validationQueryTimeout
    timeBetweenEvictionRunsMillis: (NSNumber*) timeBetweenEvictionRunsMillis
    minEvictableIdleTimeMillis: (NSNumber*) minEvictableIdleTimeMillis
    connectionProperties: (NSString*) connectionProperties
    initSQL: (NSString*) initSQL
    jdbcInterceptors: (NSString*) jdbcInterceptors
    validationInterval: (NSNumber*) validationInterval
    logValidationErrors: (NSNumber*) logValidationErrors
    datasourceSvcProperties: (NSArray<NSString*>*) datasourceSvcProperties
    completionHandler: (void (^)(OAIOrgApacheSlingDatasourceDataSourceFactoryInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param datasourceName  (optional)
/// @param datasourceSvcPropName  (optional)
/// @param datasourceJndiName  (optional)
/// @param jndiProperties  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIOrgApacheSlingDatasourceJNDIDataSourceFactoryInfo*
-(NSURLSessionTask*) orgApacheSlingDatasourceJNDIDataSourceFactoryWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    datasourceName: (NSString*) datasourceName
    datasourceSvcPropName: (NSString*) datasourceSvcPropName
    datasourceJndiName: (NSString*) datasourceJndiName
    jndiProperties: (NSArray<NSString*>*) jndiProperties
    completionHandler: (void (^)(OAIOrgApacheSlingDatasourceJNDIDataSourceFactoryInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param connectorPingTimeout  (optional)
/// @param connectorPingInterval  (optional)
/// @param discoveryLiteCheckInterval  (optional)
/// @param clusterSyncServiceTimeout  (optional)
/// @param clusterSyncServiceInterval  (optional)
/// @param enableSyncToken  (optional)
/// @param minEventDelay  (optional)
/// @param socketConnectTimeout  (optional)
/// @param soTimeout  (optional)
/// @param topologyConnectorUrls  (optional)
/// @param topologyConnectorWhitelist  (optional)
/// @param autoStopLocalLoopEnabled  (optional)
/// @param gzipConnectorRequestsEnabled  (optional)
/// @param hmacEnabled  (optional)
/// @param enableEncryption  (optional)
/// @param sharedKey  (optional)
/// @param hmacSharedKeyTTL  (optional)
/// @param backoffStandbyFactor  (optional)
/// @param backoffStableFactor  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIOrgApacheSlingDiscoveryOakConfigInfo*
-(NSURLSessionTask*) orgApacheSlingDiscoveryOakConfigWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    connectorPingTimeout: (NSNumber*) connectorPingTimeout
    connectorPingInterval: (NSNumber*) connectorPingInterval
    discoveryLiteCheckInterval: (NSNumber*) discoveryLiteCheckInterval
    clusterSyncServiceTimeout: (NSNumber*) clusterSyncServiceTimeout
    clusterSyncServiceInterval: (NSNumber*) clusterSyncServiceInterval
    enableSyncToken: (NSNumber*) enableSyncToken
    minEventDelay: (NSNumber*) minEventDelay
    socketConnectTimeout: (NSNumber*) socketConnectTimeout
    soTimeout: (NSNumber*) soTimeout
    topologyConnectorUrls: (NSArray<NSString*>*) topologyConnectorUrls
    topologyConnectorWhitelist: (NSArray<NSString*>*) topologyConnectorWhitelist
    autoStopLocalLoopEnabled: (NSNumber*) autoStopLocalLoopEnabled
    gzipConnectorRequestsEnabled: (NSNumber*) gzipConnectorRequestsEnabled
    hmacEnabled: (NSNumber*) hmacEnabled
    enableEncryption: (NSNumber*) enableEncryption
    sharedKey: (NSString*) sharedKey
    hmacSharedKeyTTL: (NSNumber*) hmacSharedKeyTTL
    backoffStandbyFactor: (NSString*) backoffStandbyFactor
    backoffStableFactor: (NSString*) backoffStableFactor
    completionHandler: (void (^)(OAIOrgApacheSlingDiscoveryOakConfigInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param hcName  (optional)
/// @param hcTags  (optional)
/// @param hcMbeanName  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIOrgApacheSlingDiscoveryOakSynchronizedClocksHealthCheckInfo*
-(NSURLSessionTask*) orgApacheSlingDiscoveryOakSynchronizedClocksHealthCheckWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    hcName: (NSString*) hcName
    hcTags: (NSArray<NSString*>*) hcTags
    hcMbeanName: (NSString*) hcMbeanName
    completionHandler: (void (^)(OAIOrgApacheSlingDiscoveryOakSynchronizedClocksHealthCheckInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param name  (optional)
/// @param title  (optional)
/// @param details  (optional)
/// @param enabled  (optional)
/// @param serviceName  (optional)
/// @param logLevel  (optional)
/// @param allowedRoots  (optional)
/// @param queueProcessingEnabled  (optional)
/// @param packageImporterEndpoints  (optional)
/// @param passiveQueues  (optional)
/// @param priorityQueues  (optional)
/// @param retryStrategy  (optional)
/// @param retryAttempts  (optional)
/// @param requestAuthorizationStrategyTarget  (optional)
/// @param transportSecretProviderTarget  (optional)
/// @param packageBuilderTarget  (optional)
/// @param triggersTarget  (optional)
/// @param queueProvider  (optional)
/// @param asyncDelivery  (optional)
/// @param httpConnTimeout  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIOrgApacheSlingDistributionAgentImplForwardDistributionAgentFactoInfo*
-(NSURLSessionTask*) orgApacheSlingDistributionAgentImplForwardDistributionAgentFactoWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    name: (NSString*) name
    title: (NSString*) title
    details: (NSString*) details
    enabled: (NSNumber*) enabled
    serviceName: (NSString*) serviceName
    logLevel: (NSString*) logLevel
    allowedRoots: (NSArray<NSString*>*) allowedRoots
    queueProcessingEnabled: (NSNumber*) queueProcessingEnabled
    packageImporterEndpoints: (NSArray<NSString*>*) packageImporterEndpoints
    passiveQueues: (NSArray<NSString*>*) passiveQueues
    priorityQueues: (NSArray<NSString*>*) priorityQueues
    retryStrategy: (NSString*) retryStrategy
    retryAttempts: (NSNumber*) retryAttempts
    requestAuthorizationStrategyTarget: (NSString*) requestAuthorizationStrategyTarget
    transportSecretProviderTarget: (NSString*) transportSecretProviderTarget
    packageBuilderTarget: (NSString*) packageBuilderTarget
    triggersTarget: (NSString*) triggersTarget
    queueProvider: (NSString*) queueProvider
    asyncDelivery: (NSNumber*) asyncDelivery
    httpConnTimeout: (NSNumber*) httpConnTimeout
    completionHandler: (void (^)(OAIOrgApacheSlingDistributionAgentImplForwardDistributionAgentFactoInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param name  (optional)
/// @param jcrPrivilege  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIOrgApacheSlingDistributionAgentImplPrivilegeDistributionRequestAInfo*
-(NSURLSessionTask*) orgApacheSlingDistributionAgentImplPrivilegeDistributionRequestAWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    name: (NSString*) name
    jcrPrivilege: (NSString*) jcrPrivilege
    completionHandler: (void (^)(OAIOrgApacheSlingDistributionAgentImplPrivilegeDistributionRequestAInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param name  (optional)
/// @param title  (optional)
/// @param details  (optional)
/// @param enabled  (optional)
/// @param serviceName  (optional)
/// @param logLevel  (optional)
/// @param allowedRoots  (optional)
/// @param requestAuthorizationStrategyTarget  (optional)
/// @param queueProviderFactoryTarget  (optional)
/// @param packageBuilderTarget  (optional)
/// @param triggersTarget  (optional)
/// @param priorityQueues  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIOrgApacheSlingDistributionAgentImplQueueDistributionAgentFactoryInfo*
-(NSURLSessionTask*) orgApacheSlingDistributionAgentImplQueueDistributionAgentFactoryWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    name: (NSString*) name
    title: (NSString*) title
    details: (NSString*) details
    enabled: (NSNumber*) enabled
    serviceName: (NSString*) serviceName
    logLevel: (NSString*) logLevel
    allowedRoots: (NSArray<NSString*>*) allowedRoots
    requestAuthorizationStrategyTarget: (NSString*) requestAuthorizationStrategyTarget
    queueProviderFactoryTarget: (NSString*) queueProviderFactoryTarget
    packageBuilderTarget: (NSString*) packageBuilderTarget
    triggersTarget: (NSString*) triggersTarget
    priorityQueues: (NSArray<NSString*>*) priorityQueues
    completionHandler: (void (^)(OAIOrgApacheSlingDistributionAgentImplQueueDistributionAgentFactoryInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param name  (optional)
/// @param title  (optional)
/// @param details  (optional)
/// @param enabled  (optional)
/// @param serviceName  (optional)
/// @param logLevel  (optional)
/// @param queueProcessingEnabled  (optional)
/// @param packageExporterEndpoints  (optional)
/// @param pullItems  (optional)
/// @param httpConnTimeout  (optional)
/// @param requestAuthorizationStrategyTarget  (optional)
/// @param transportSecretProviderTarget  (optional)
/// @param packageBuilderTarget  (optional)
/// @param triggersTarget  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIOrgApacheSlingDistributionAgentImplReverseDistributionAgentFactoInfo*
-(NSURLSessionTask*) orgApacheSlingDistributionAgentImplReverseDistributionAgentFactoWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    name: (NSString*) name
    title: (NSString*) title
    details: (NSString*) details
    enabled: (NSNumber*) enabled
    serviceName: (NSString*) serviceName
    logLevel: (NSString*) logLevel
    queueProcessingEnabled: (NSNumber*) queueProcessingEnabled
    packageExporterEndpoints: (NSArray<NSString*>*) packageExporterEndpoints
    pullItems: (NSNumber*) pullItems
    httpConnTimeout: (NSNumber*) httpConnTimeout
    requestAuthorizationStrategyTarget: (NSString*) requestAuthorizationStrategyTarget
    transportSecretProviderTarget: (NSString*) transportSecretProviderTarget
    packageBuilderTarget: (NSString*) packageBuilderTarget
    triggersTarget: (NSString*) triggersTarget
    completionHandler: (void (^)(OAIOrgApacheSlingDistributionAgentImplReverseDistributionAgentFactoInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param name  (optional)
/// @param title  (optional)
/// @param details  (optional)
/// @param enabled  (optional)
/// @param serviceName  (optional)
/// @param logLevel  (optional)
/// @param queueProcessingEnabled  (optional)
/// @param packageExporterTarget  (optional)
/// @param packageImporterTarget  (optional)
/// @param requestAuthorizationStrategyTarget  (optional)
/// @param triggersTarget  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIOrgApacheSlingDistributionAgentImplSimpleDistributionAgentFactorInfo*
-(NSURLSessionTask*) orgApacheSlingDistributionAgentImplSimpleDistributionAgentFactorWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    name: (NSString*) name
    title: (NSString*) title
    details: (NSString*) details
    enabled: (NSNumber*) enabled
    serviceName: (NSString*) serviceName
    logLevel: (NSString*) logLevel
    queueProcessingEnabled: (NSNumber*) queueProcessingEnabled
    packageExporterTarget: (NSString*) packageExporterTarget
    packageImporterTarget: (NSString*) packageImporterTarget
    requestAuthorizationStrategyTarget: (NSString*) requestAuthorizationStrategyTarget
    triggersTarget: (NSString*) triggersTarget
    completionHandler: (void (^)(OAIOrgApacheSlingDistributionAgentImplSimpleDistributionAgentFactorInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param name  (optional)
/// @param title  (optional)
/// @param details  (optional)
/// @param enabled  (optional)
/// @param serviceName  (optional)
/// @param logLevel  (optional)
/// @param queueProcessingEnabled  (optional)
/// @param passiveQueues  (optional)
/// @param packageExporterEndpoints  (optional)
/// @param packageImporterEndpoints  (optional)
/// @param retryStrategy  (optional)
/// @param retryAttempts  (optional)
/// @param pullItems  (optional)
/// @param httpConnTimeout  (optional)
/// @param requestAuthorizationStrategyTarget  (optional)
/// @param transportSecretProviderTarget  (optional)
/// @param packageBuilderTarget  (optional)
/// @param triggersTarget  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIOrgApacheSlingDistributionAgentImplSyncDistributionAgentFactoryInfo*
-(NSURLSessionTask*) orgApacheSlingDistributionAgentImplSyncDistributionAgentFactoryWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    name: (NSString*) name
    title: (NSString*) title
    details: (NSString*) details
    enabled: (NSNumber*) enabled
    serviceName: (NSString*) serviceName
    logLevel: (NSString*) logLevel
    queueProcessingEnabled: (NSNumber*) queueProcessingEnabled
    passiveQueues: (NSArray<NSString*>*) passiveQueues
    packageExporterEndpoints: (NSArray<NSString*>*) packageExporterEndpoints
    packageImporterEndpoints: (NSArray<NSString*>*) packageImporterEndpoints
    retryStrategy: (NSString*) retryStrategy
    retryAttempts: (NSNumber*) retryAttempts
    pullItems: (NSNumber*) pullItems
    httpConnTimeout: (NSNumber*) httpConnTimeout
    requestAuthorizationStrategyTarget: (NSString*) requestAuthorizationStrategyTarget
    transportSecretProviderTarget: (NSString*) transportSecretProviderTarget
    packageBuilderTarget: (NSString*) packageBuilderTarget
    triggersTarget: (NSString*) triggersTarget
    completionHandler: (void (^)(OAIOrgApacheSlingDistributionAgentImplSyncDistributionAgentFactoryInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param hcName  (optional)
/// @param hcTags  (optional)
/// @param hcMbeanName  (optional)
/// @param numberOfRetriesAllowed  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIOrgApacheSlingDistributionMonitorDistributionQueueHealthCheckInfo*
-(NSURLSessionTask*) orgApacheSlingDistributionMonitorDistributionQueueHealthCheckWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    hcName: (NSString*) hcName
    hcTags: (NSArray<NSString*>*) hcTags
    hcMbeanName: (NSString*) hcMbeanName
    numberOfRetriesAllowed: (NSNumber*) numberOfRetriesAllowed
    completionHandler: (void (^)(OAIOrgApacheSlingDistributionMonitorDistributionQueueHealthCheckInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param name  (optional)
/// @param queue  (optional)
/// @param dropInvalidItems  (optional)
/// @param agentTarget  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIOrgApacheSlingDistributionPackagingImplExporterAgentDistributioInfo*
-(NSURLSessionTask*) orgApacheSlingDistributionPackagingImplExporterAgentDistributioWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    name: (NSString*) name
    queue: (NSString*) queue
    dropInvalidItems: (NSNumber*) dropInvalidItems
    agentTarget: (NSString*) agentTarget
    completionHandler: (void (^)(OAIOrgApacheSlingDistributionPackagingImplExporterAgentDistributioInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param name  (optional)
/// @param packageBuilderTarget  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIOrgApacheSlingDistributionPackagingImplExporterLocalDistributioInfo*
-(NSURLSessionTask*) orgApacheSlingDistributionPackagingImplExporterLocalDistributioWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    name: (NSString*) name
    packageBuilderTarget: (NSString*) packageBuilderTarget
    completionHandler: (void (^)(OAIOrgApacheSlingDistributionPackagingImplExporterLocalDistributioInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param name  (optional)
/// @param endpoints  (optional)
/// @param pullItems  (optional)
/// @param packageBuilderTarget  (optional)
/// @param transportSecretProviderTarget  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIOrgApacheSlingDistributionPackagingImplExporterRemoteDistributiInfo*
-(NSURLSessionTask*) orgApacheSlingDistributionPackagingImplExporterRemoteDistributiWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    name: (NSString*) name
    endpoints: (NSArray<NSString*>*) endpoints
    pullItems: (NSNumber*) pullItems
    packageBuilderTarget: (NSString*) packageBuilderTarget
    transportSecretProviderTarget: (NSString*) transportSecretProviderTarget
    completionHandler: (void (^)(OAIOrgApacheSlingDistributionPackagingImplExporterRemoteDistributiInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param name  (optional)
/// @param packageBuilderTarget  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIOrgApacheSlingDistributionPackagingImplImporterLocalDistributioInfo*
-(NSURLSessionTask*) orgApacheSlingDistributionPackagingImplImporterLocalDistributioWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    name: (NSString*) name
    packageBuilderTarget: (NSString*) packageBuilderTarget
    completionHandler: (void (^)(OAIOrgApacheSlingDistributionPackagingImplImporterLocalDistributioInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param name  (optional)
/// @param endpoints  (optional)
/// @param transportSecretProviderTarget  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIOrgApacheSlingDistributionPackagingImplImporterRemoteDistributiInfo*
-(NSURLSessionTask*) orgApacheSlingDistributionPackagingImplImporterRemoteDistributiWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    name: (NSString*) name
    endpoints: (NSArray<NSString*>*) endpoints
    transportSecretProviderTarget: (NSString*) transportSecretProviderTarget
    completionHandler: (void (^)(OAIOrgApacheSlingDistributionPackagingImplImporterRemoteDistributiInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param name  (optional)
/// @param serviceName  (optional)
/// @param path  (optional)
/// @param privilegeName  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIOrgApacheSlingDistributionPackagingImplImporterRepositoryDistriInfo*
-(NSURLSessionTask*) orgApacheSlingDistributionPackagingImplImporterRepositoryDistriWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    name: (NSString*) name
    serviceName: (NSString*) serviceName
    path: (NSString*) path
    privilegeName: (NSString*) privilegeName
    completionHandler: (void (^)(OAIOrgApacheSlingDistributionPackagingImplImporterRepositoryDistriInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param providerRoots  (optional)
/// @param kind  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIOrgApacheSlingDistributionResourcesImplDistributionConfigurationInfo*
-(NSURLSessionTask*) orgApacheSlingDistributionResourcesImplDistributionConfigurationWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    providerRoots: (NSString*) providerRoots
    kind: (NSString*) kind
    completionHandler: (void (^)(OAIOrgApacheSlingDistributionResourcesImplDistributionConfigurationInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param providerRoots  (optional)
/// @param kind  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIOrgApacheSlingDistributionResourcesImplDistributionServiceResourInfo*
-(NSURLSessionTask*) orgApacheSlingDistributionResourcesImplDistributionServiceResourWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    providerRoots: (NSString*) providerRoots
    kind: (NSString*) kind
    completionHandler: (void (^)(OAIOrgApacheSlingDistributionResourcesImplDistributionServiceResourInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param name  (optional)
/// @param type  (optional)
/// @param formatTarget  (optional)
/// @param tempFsFolder  (optional)
/// @param fileThreshold  (optional)
/// @param memoryUnit  (optional)
/// @param useOffHeapMemory  (optional)
/// @param digestAlgorithm  (optional)
/// @param monitoringQueueSize  (optional)
/// @param cleanupDelay  (optional)
/// @param packageFilters  (optional)
/// @param propertyFilters  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIOrgApacheSlingDistributionSerializationImplDistributionPackageBuInfo*
-(NSURLSessionTask*) orgApacheSlingDistributionSerializationImplDistributionPackageBuWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    name: (NSString*) name
    type: (NSString*) type
    formatTarget: (NSString*) formatTarget
    tempFsFolder: (NSString*) tempFsFolder
    fileThreshold: (NSNumber*) fileThreshold
    memoryUnit: (NSString*) memoryUnit
    useOffHeapMemory: (NSNumber*) useOffHeapMemory
    digestAlgorithm: (NSString*) digestAlgorithm
    monitoringQueueSize: (NSNumber*) monitoringQueueSize
    cleanupDelay: (NSNumber*) cleanupDelay
    packageFilters: (NSArray<NSString*>*) packageFilters
    propertyFilters: (NSArray<NSString*>*) propertyFilters
    completionHandler: (void (^)(OAIOrgApacheSlingDistributionSerializationImplDistributionPackageBuInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param name  (optional)
/// @param type  (optional)
/// @param importMode  (optional)
/// @param aclHandling  (optional)
/// @param packageRoots  (optional)
/// @param packageFilters  (optional)
/// @param propertyFilters  (optional)
/// @param tempFsFolder  (optional)
/// @param useBinaryReferences  (optional)
/// @param autoSaveThreshold  (optional)
/// @param cleanupDelay  (optional)
/// @param fileThreshold  (optional)
/// @param mEGABYTES  (optional)
/// @param useOffHeapMemory  (optional)
/// @param digestAlgorithm  (optional)
/// @param monitoringQueueSize  (optional)
/// @param pathsMapping  (optional)
/// @param strictImport  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIOrgApacheSlingDistributionSerializationImplVltVaultDistributionInfo*
-(NSURLSessionTask*) orgApacheSlingDistributionSerializationImplVltVaultDistributionWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    name: (NSString*) name
    type: (NSString*) type
    importMode: (NSString*) importMode
    aclHandling: (NSString*) aclHandling
    packageRoots: (NSString*) packageRoots
    packageFilters: (NSArray<NSString*>*) packageFilters
    propertyFilters: (NSArray<NSString*>*) propertyFilters
    tempFsFolder: (NSString*) tempFsFolder
    useBinaryReferences: (NSNumber*) useBinaryReferences
    autoSaveThreshold: (NSNumber*) autoSaveThreshold
    cleanupDelay: (NSNumber*) cleanupDelay
    fileThreshold: (NSNumber*) fileThreshold
    mEGABYTES: (NSString*) mEGABYTES
    useOffHeapMemory: (NSNumber*) useOffHeapMemory
    digestAlgorithm: (NSString*) digestAlgorithm
    monitoringQueueSize: (NSNumber*) monitoringQueueSize
    pathsMapping: (NSArray<NSString*>*) pathsMapping
    strictImport: (NSNumber*) strictImport
    completionHandler: (void (^)(OAIOrgApacheSlingDistributionSerializationImplVltVaultDistributionInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param name  (optional)
/// @param username  (optional)
/// @param password  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIOrgApacheSlingDistributionTransportImplUserCredentialsDistributiInfo*
-(NSURLSessionTask*) orgApacheSlingDistributionTransportImplUserCredentialsDistributiWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    name: (NSString*) name
    username: (NSString*) username
    password: (NSString*) password
    completionHandler: (void (^)(OAIOrgApacheSlingDistributionTransportImplUserCredentialsDistributiInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param name  (optional)
/// @param path  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIOrgApacheSlingDistributionTriggerImplDistributionEventDistributeInfo*
-(NSURLSessionTask*) orgApacheSlingDistributionTriggerImplDistributionEventDistributeWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    name: (NSString*) name
    path: (NSString*) path
    completionHandler: (void (^)(OAIOrgApacheSlingDistributionTriggerImplDistributionEventDistributeInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param name  (optional)
/// @param path  (optional)
/// @param ignoredPathsPatterns  (optional)
/// @param serviceName  (optional)
/// @param deep  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIOrgApacheSlingDistributionTriggerImplJcrEventDistributionTriggerInfo*
-(NSURLSessionTask*) orgApacheSlingDistributionTriggerImplJcrEventDistributionTriggerWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    name: (NSString*) name
    path: (NSString*) path
    ignoredPathsPatterns: (NSArray<NSString*>*) ignoredPathsPatterns
    serviceName: (NSString*) serviceName
    deep: (NSNumber*) deep
    completionHandler: (void (^)(OAIOrgApacheSlingDistributionTriggerImplJcrEventDistributionTriggerInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param name  (optional)
/// @param path  (optional)
/// @param serviceName  (optional)
/// @param nuggetsPath  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIOrgApacheSlingDistributionTriggerImplPersistedJcrEventDistributiInfo*
-(NSURLSessionTask*) orgApacheSlingDistributionTriggerImplPersistedJcrEventDistributiWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    name: (NSString*) name
    path: (NSString*) path
    serviceName: (NSString*) serviceName
    nuggetsPath: (NSString*) nuggetsPath
    completionHandler: (void (^)(OAIOrgApacheSlingDistributionTriggerImplPersistedJcrEventDistributiInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param name  (optional)
/// @param endpoint  (optional)
/// @param transportSecretProviderTarget  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIOrgApacheSlingDistributionTriggerImplRemoteEventDistributionTrigInfo*
-(NSURLSessionTask*) orgApacheSlingDistributionTriggerImplRemoteEventDistributionTrigWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    name: (NSString*) name
    endpoint: (NSString*) endpoint
    transportSecretProviderTarget: (NSString*) transportSecretProviderTarget
    completionHandler: (void (^)(OAIOrgApacheSlingDistributionTriggerImplRemoteEventDistributionTrigInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param name  (optional)
/// @param path  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIOrgApacheSlingDistributionTriggerImplResourceEventDistributionTrInfo*
-(NSURLSessionTask*) orgApacheSlingDistributionTriggerImplResourceEventDistributionTrWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    name: (NSString*) name
    path: (NSString*) path
    completionHandler: (void (^)(OAIOrgApacheSlingDistributionTriggerImplResourceEventDistributionTrInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param name  (optional)
/// @param path  (optional)
/// @param seconds  (optional)
/// @param serviceName  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIOrgApacheSlingDistributionTriggerImplScheduledDistributionTriggeInfo*
-(NSURLSessionTask*) orgApacheSlingDistributionTriggerImplScheduledDistributionTriggeWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    name: (NSString*) name
    path: (NSString*) path
    seconds: (NSString*) seconds
    serviceName: (NSString*) serviceName
    completionHandler: (void (^)(OAIOrgApacheSlingDistributionTriggerImplScheduledDistributionTriggeInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param osgiHttpWhiteboardContextSelect  (optional)
/// @param osgiHttpWhiteboardListener  (optional)
/// @param authSudoCookie  (optional)
/// @param authSudoParameter  (optional)
/// @param authAnnonymous  (optional)
/// @param slingAuthRequirements  (optional)
/// @param slingAuthAnonymousUser  (optional)
/// @param slingAuthAnonymousPassword  (optional)
/// @param authHttp  (optional)
/// @param authHttpRealm  (optional)
/// @param authUriSuffix  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIOrgApacheSlingEngineImplAuthSlingAuthenticatorInfo*
-(NSURLSessionTask*) orgApacheSlingEngineImplAuthSlingAuthenticatorWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    osgiHttpWhiteboardContextSelect: (NSString*) osgiHttpWhiteboardContextSelect
    osgiHttpWhiteboardListener: (NSString*) osgiHttpWhiteboardListener
    authSudoCookie: (NSString*) authSudoCookie
    authSudoParameter: (NSString*) authSudoParameter
    authAnnonymous: (NSNumber*) authAnnonymous
    slingAuthRequirements: (NSArray<NSString*>*) slingAuthRequirements
    slingAuthAnonymousUser: (NSString*) slingAuthAnonymousUser
    slingAuthAnonymousPassword: (NSString*) slingAuthAnonymousPassword
    authHttp: (NSString*) authHttp
    authHttpRealm: (NSString*) authHttpRealm
    authUriSuffix: (NSArray<NSString*>*) authUriSuffix
    completionHandler: (void (^)(OAIOrgApacheSlingEngineImplAuthSlingAuthenticatorInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param extensions  (optional)
/// @param minDurationMs  (optional)
/// @param maxDurationMs  (optional)
/// @param compactLogFormat  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIOrgApacheSlingEngineImplDebugRequestProgressTrackerLogFilterInfo*
-(NSURLSessionTask*) orgApacheSlingEngineImplDebugRequestProgressTrackerLogFilterWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    extensions: (NSArray<NSString*>*) extensions
    minDurationMs: (NSNumber*) minDurationMs
    maxDurationMs: (NSNumber*) maxDurationMs
    compactLogFormat: (NSNumber*) compactLogFormat
    completionHandler: (void (^)(OAIOrgApacheSlingEngineImplDebugRequestProgressTrackerLogFilterInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param requestLogOutput  (optional)
/// @param requestLogOutputtype  (optional)
/// @param requestLogEnabled  (optional)
/// @param accessLogOutput  (optional)
/// @param accessLogOutputtype  (optional)
/// @param accessLogEnabled  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIOrgApacheSlingEngineImplLogRequestLoggerInfo*
-(NSURLSessionTask*) orgApacheSlingEngineImplLogRequestLoggerWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    requestLogOutput: (NSString*) requestLogOutput
    requestLogOutputtype: (NSNumber*) requestLogOutputtype
    requestLogEnabled: (NSNumber*) requestLogEnabled
    accessLogOutput: (NSString*) accessLogOutput
    accessLogOutputtype: (NSNumber*) accessLogOutputtype
    accessLogEnabled: (NSNumber*) accessLogEnabled
    completionHandler: (void (^)(OAIOrgApacheSlingEngineImplLogRequestLoggerInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param requestLogServiceFormat  (optional)
/// @param requestLogServiceOutput  (optional)
/// @param requestLogServiceOutputtype  (optional)
/// @param requestLogServiceOnentry  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIOrgApacheSlingEngineImplLogRequestLoggerServiceInfo*
-(NSURLSessionTask*) orgApacheSlingEngineImplLogRequestLoggerServiceWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    requestLogServiceFormat: (NSString*) requestLogServiceFormat
    requestLogServiceOutput: (NSString*) requestLogServiceOutput
    requestLogServiceOutputtype: (NSNumber*) requestLogServiceOutputtype
    requestLogServiceOnentry: (NSNumber*) requestLogServiceOnentry
    completionHandler: (void (^)(OAIOrgApacheSlingEngineImplLogRequestLoggerServiceInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param slingMaxCalls  (optional)
/// @param slingMaxInclusions  (optional)
/// @param slingTraceAllow  (optional)
/// @param slingMaxRecordRequests  (optional)
/// @param slingStorePatternRequests  (optional)
/// @param slingServerinfo  (optional)
/// @param slingAdditionalResponseHeaders  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIOrgApacheSlingEngineImplSlingMainServletInfo*
-(NSURLSessionTask*) orgApacheSlingEngineImplSlingMainServletWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    slingMaxCalls: (NSNumber*) slingMaxCalls
    slingMaxInclusions: (NSNumber*) slingMaxInclusions
    slingTraceAllow: (NSNumber*) slingTraceAllow
    slingMaxRecordRequests: (NSNumber*) slingMaxRecordRequests
    slingStorePatternRequests: (NSArray<NSString*>*) slingStorePatternRequests
    slingServerinfo: (NSString*) slingServerinfo
    slingAdditionalResponseHeaders: (NSArray<NSString*>*) slingAdditionalResponseHeaders
    completionHandler: (void (^)(OAIOrgApacheSlingEngineImplSlingMainServletInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param slingDefaultParameterEncoding  (optional)
/// @param slingDefaultMaxParameters  (optional)
/// @param fileLocation  (optional)
/// @param fileThreshold  (optional)
/// @param fileMax  (optional)
/// @param requestMax  (optional)
/// @param slingDefaultParameterCheckForAdditionalContainerParameters  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIOrgApacheSlingEngineParametersInfo*
-(NSURLSessionTask*) orgApacheSlingEngineParametersWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    slingDefaultParameterEncoding: (NSString*) slingDefaultParameterEncoding
    slingDefaultMaxParameters: (NSNumber*) slingDefaultMaxParameters
    fileLocation: (NSString*) fileLocation
    fileThreshold: (NSNumber*) fileThreshold
    fileMax: (NSNumber*) fileMax
    requestMax: (NSNumber*) requestMax
    slingDefaultParameterCheckForAdditionalContainerParameters: (NSNumber*) slingDefaultParameterCheckForAdditionalContainerParameters
    completionHandler: (void (^)(OAIOrgApacheSlingEngineParametersInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param minPoolSize  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIOrgApacheSlingEventImplEventingThreadPoolInfo*
-(NSURLSessionTask*) orgApacheSlingEventImplEventingThreadPoolWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    minPoolSize: (NSNumber*) minPoolSize
    completionHandler: (void (^)(OAIOrgApacheSlingEventImplEventingThreadPoolInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param queuePriority  (optional)
/// @param queueRetries  (optional)
/// @param queueRetrydelay  (optional)
/// @param queueMaxparallel  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIOrgApacheSlingEventImplJobsDefaultJobManagerInfo*
-(NSURLSessionTask*) orgApacheSlingEventImplJobsDefaultJobManagerWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    queuePriority: (NSString*) queuePriority
    queueRetries: (NSNumber*) queueRetries
    queueRetrydelay: (NSNumber*) queueRetrydelay
    queueMaxparallel: (NSNumber*) queueMaxparallel
    completionHandler: (void (^)(OAIOrgApacheSlingEventImplJobsDefaultJobManagerInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param jobConsumermanagerDisableDistribution  (optional)
/// @param startupDelay  (optional)
/// @param cleanupPeriod  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIOrgApacheSlingEventImplJobsJcrPersistenceHandlerInfo*
-(NSURLSessionTask*) orgApacheSlingEventImplJobsJcrPersistenceHandlerWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    jobConsumermanagerDisableDistribution: (NSNumber*) jobConsumermanagerDisableDistribution
    startupDelay: (NSNumber*) startupDelay
    cleanupPeriod: (NSNumber*) cleanupPeriod
    completionHandler: (void (^)(OAIOrgApacheSlingEventImplJobsJcrPersistenceHandlerInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param orgApacheSlingInstallerConfigurationPersist  (optional)
/// @param jobConsumermanagerWhitelist  (optional)
/// @param jobConsumermanagerBlacklist  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIOrgApacheSlingEventImplJobsJobConsumerManagerInfo*
-(NSURLSessionTask*) orgApacheSlingEventImplJobsJobConsumerManagerWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    orgApacheSlingInstallerConfigurationPersist: (NSNumber*) orgApacheSlingInstallerConfigurationPersist
    jobConsumermanagerWhitelist: (NSArray<NSString*>*) jobConsumermanagerWhitelist
    jobConsumermanagerBlacklist: (NSArray<NSString*>*) jobConsumermanagerBlacklist
    completionHandler: (void (^)(OAIOrgApacheSlingEventImplJobsJobConsumerManagerInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param queueName  (optional)
/// @param queueTopics  (optional)
/// @param queueType  (optional)
/// @param queuePriority  (optional)
/// @param queueRetries  (optional)
/// @param queueRetrydelay  (optional)
/// @param queueMaxparallel  (optional)
/// @param queueKeepJobs  (optional)
/// @param queuePreferRunOnCreationInstance  (optional)
/// @param queueThreadPoolSize  (optional)
/// @param serviceRanking  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIOrgApacheSlingEventJobsQueueConfigurationInfo*
-(NSURLSessionTask*) orgApacheSlingEventJobsQueueConfigurationWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    queueName: (NSString*) queueName
    queueTopics: (NSArray<NSString*>*) queueTopics
    queueType: (NSString*) queueType
    queuePriority: (NSString*) queuePriority
    queueRetries: (NSNumber*) queueRetries
    queueRetrydelay: (NSNumber*) queueRetrydelay
    queueMaxparallel: (NSNumber*) queueMaxparallel
    queueKeepJobs: (NSNumber*) queueKeepJobs
    queuePreferRunOnCreationInstance: (NSNumber*) queuePreferRunOnCreationInstance
    queueThreadPoolSize: (NSNumber*) queueThreadPoolSize
    serviceRanking: (NSNumber*) serviceRanking
    completionHandler: (void (^)(OAIOrgApacheSlingEventJobsQueueConfigurationInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param users  (optional)
/// @param groups  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIOrgApacheSlingExtensionsWebconsolesecurityproviderInternalSlingWInfo*
-(NSURLSessionTask*) orgApacheSlingExtensionsWebconsolesecurityproviderInternalSlingWWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    users: (NSArray<NSString*>*) users
    groups: (NSArray<NSString*>*) groups
    completionHandler: (void (^)(OAIOrgApacheSlingExtensionsWebconsolesecurityproviderInternalSlingWInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param name  (optional)
/// @param _description  (optional)
/// @param enabled  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIOrgApacheSlingFeatureflagsFeatureInfo*
-(NSURLSessionTask*) orgApacheSlingFeatureflagsFeatureWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    name: (NSString*) name
    _description: (NSString*) _description
    enabled: (NSNumber*) enabled
    completionHandler: (void (^)(OAIOrgApacheSlingFeatureflagsFeatureInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param name  (optional)
/// @param _description  (optional)
/// @param enabled  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIOrgApacheSlingFeatureflagsImplConfiguredFeatureInfo*
-(NSURLSessionTask*) orgApacheSlingFeatureflagsImplConfiguredFeatureWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    name: (NSString*) name
    _description: (NSString*) _description
    enabled: (NSNumber*) enabled
    completionHandler: (void (^)(OAIOrgApacheSlingFeatureflagsImplConfiguredFeatureInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param orgApacheSlingHapiToolsResourcetype  (optional)
/// @param orgApacheSlingHapiToolsCollectionresourcetype  (optional)
/// @param orgApacheSlingHapiToolsSearchpaths  (optional)
/// @param orgApacheSlingHapiToolsExternalurl  (optional)
/// @param orgApacheSlingHapiToolsEnabled  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIOrgApacheSlingHapiImplHApiUtilImplInfo*
-(NSURLSessionTask*) orgApacheSlingHapiImplHApiUtilImplWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    orgApacheSlingHapiToolsResourcetype: (NSString*) orgApacheSlingHapiToolsResourcetype
    orgApacheSlingHapiToolsCollectionresourcetype: (NSString*) orgApacheSlingHapiToolsCollectionresourcetype
    orgApacheSlingHapiToolsSearchpaths: (NSArray<NSString*>*) orgApacheSlingHapiToolsSearchpaths
    orgApacheSlingHapiToolsExternalurl: (NSString*) orgApacheSlingHapiToolsExternalurl
    orgApacheSlingHapiToolsEnabled: (NSNumber*) orgApacheSlingHapiToolsEnabled
    completionHandler: (void (^)(OAIOrgApacheSlingHapiImplHApiUtilImplInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param hcName  (optional)
/// @param hcTags  (optional)
/// @param hcMbeanName  (optional)
/// @param filterTags  (optional)
/// @param filterCombineTagsWithOr  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIOrgApacheSlingHcCoreImplCompositeHealthCheckInfo*
-(NSURLSessionTask*) orgApacheSlingHcCoreImplCompositeHealthCheckWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    hcName: (NSString*) hcName
    hcTags: (NSArray<NSString*>*) hcTags
    hcMbeanName: (NSString*) hcMbeanName
    filterTags: (NSArray<NSString*>*) filterTags
    filterCombineTagsWithOr: (NSNumber*) filterCombineTagsWithOr
    completionHandler: (void (^)(OAIOrgApacheSlingHcCoreImplCompositeHealthCheckInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param timeoutInMs  (optional)
/// @param longRunningFutureThresholdForCriticalMs  (optional)
/// @param resultCacheTtlInMs  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIOrgApacheSlingHcCoreImplExecutorHealthCheckExecutorImplInfo*
-(NSURLSessionTask*) orgApacheSlingHcCoreImplExecutorHealthCheckExecutorImplWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    timeoutInMs: (NSNumber*) timeoutInMs
    longRunningFutureThresholdForCriticalMs: (NSNumber*) longRunningFutureThresholdForCriticalMs
    resultCacheTtlInMs: (NSNumber*) resultCacheTtlInMs
    completionHandler: (void (^)(OAIOrgApacheSlingHcCoreImplExecutorHealthCheckExecutorImplInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param hcName  (optional)
/// @param hcTags  (optional)
/// @param hcMbeanName  (optional)
/// @param mbeanName  (optional)
/// @param attributeName  (optional)
/// @param attributeValueConstraint  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIOrgApacheSlingHcCoreImplJmxAttributeHealthCheckInfo*
-(NSURLSessionTask*) orgApacheSlingHcCoreImplJmxAttributeHealthCheckWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    hcName: (NSString*) hcName
    hcTags: (NSArray<NSString*>*) hcTags
    hcMbeanName: (NSString*) hcMbeanName
    mbeanName: (NSString*) mbeanName
    attributeName: (NSString*) attributeName
    attributeValueConstraint: (NSString*) attributeValueConstraint
    completionHandler: (void (^)(OAIOrgApacheSlingHcCoreImplJmxAttributeHealthCheckInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param hcName  (optional)
/// @param hcTags  (optional)
/// @param hcMbeanName  (optional)
/// @param expression  (optional)
/// @param languageExtension  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIOrgApacheSlingHcCoreImplScriptableHealthCheckInfo*
-(NSURLSessionTask*) orgApacheSlingHcCoreImplScriptableHealthCheckWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    hcName: (NSString*) hcName
    hcTags: (NSArray<NSString*>*) hcTags
    hcMbeanName: (NSString*) hcMbeanName
    expression: (NSString*) expression
    languageExtension: (NSString*) languageExtension
    completionHandler: (void (^)(OAIOrgApacheSlingHcCoreImplScriptableHealthCheckInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param servletPath  (optional)
/// @param disabled  (optional)
/// @param corsAccessControlAllowOrigin  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIOrgApacheSlingHcCoreImplServletHealthCheckExecutorServletInfo*
-(NSURLSessionTask*) orgApacheSlingHcCoreImplServletHealthCheckExecutorServletWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    servletPath: (NSString*) servletPath
    disabled: (NSNumber*) disabled
    corsAccessControlAllowOrigin: (NSString*) corsAccessControlAllowOrigin
    completionHandler: (void (^)(OAIOrgApacheSlingHcCoreImplServletHealthCheckExecutorServletInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param totalWidth  (optional)
/// @param colWidthName  (optional)
/// @param colWidthResult  (optional)
/// @param colWidthTiming  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIOrgApacheSlingHcCoreImplServletResultTxtVerboseSerializerInfo*
-(NSURLSessionTask*) orgApacheSlingHcCoreImplServletResultTxtVerboseSerializerWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    totalWidth: (NSNumber*) totalWidth
    colWidthName: (NSNumber*) colWidthName
    colWidthResult: (NSNumber*) colWidthResult
    colWidthTiming: (NSNumber*) colWidthTiming
    completionHandler: (void (^)(OAIOrgApacheSlingHcCoreImplServletResultTxtVerboseSerializerInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param serviceRanking  (optional)
/// @param slingFilterScope  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIOrgApacheSlingI18nImplI18NFilterInfo*
-(NSURLSessionTask*) orgApacheSlingI18nImplI18NFilterWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    serviceRanking: (NSNumber*) serviceRanking
    slingFilterScope: (NSArray<NSString*>*) slingFilterScope
    completionHandler: (void (^)(OAIOrgApacheSlingI18nImplI18NFilterInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param localeDefault  (optional)
/// @param preloadBundles  (optional)
/// @param invalidationDelay  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIOrgApacheSlingI18nImplJcrResourceBundleProviderInfo*
-(NSURLSessionTask*) orgApacheSlingI18nImplJcrResourceBundleProviderWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    localeDefault: (NSString*) localeDefault
    preloadBundles: (NSNumber*) preloadBundles
    invalidationDelay: (NSNumber*) invalidationDelay
    completionHandler: (void (^)(OAIOrgApacheSlingI18nImplJcrResourceBundleProviderInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param handlerSchemes  (optional)
/// @param slingJcrinstallFolderNameRegexp  (optional)
/// @param slingJcrinstallFolderMaxDepth  (optional)
/// @param slingJcrinstallSearchPath  (optional)
/// @param slingJcrinstallNewConfigPath  (optional)
/// @param slingJcrinstallSignalPath  (optional)
/// @param slingJcrinstallEnableWriteback  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIOrgApacheSlingInstallerProviderJcrImplJcrInstallerInfo*
-(NSURLSessionTask*) orgApacheSlingInstallerProviderJcrImplJcrInstallerWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    handlerSchemes: (NSArray<NSString*>*) handlerSchemes
    slingJcrinstallFolderNameRegexp: (NSString*) slingJcrinstallFolderNameRegexp
    slingJcrinstallFolderMaxDepth: (NSNumber*) slingJcrinstallFolderMaxDepth
    slingJcrinstallSearchPath: (NSArray<NSString*>*) slingJcrinstallSearchPath
    slingJcrinstallNewConfigPath: (NSString*) slingJcrinstallNewConfigPath
    slingJcrinstallSignalPath: (NSString*) slingJcrinstallSignalPath
    slingJcrinstallEnableWriteback: (NSNumber*) slingJcrinstallEnableWriteback
    completionHandler: (void (^)(OAIOrgApacheSlingInstallerProviderJcrImplJcrInstallerInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param whitelistBypass  (optional)
/// @param whitelistBundlesRegexp  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIOrgApacheSlingJcrBaseInternalLoginAdminWhitelistInfo*
-(NSURLSessionTask*) orgApacheSlingJcrBaseInternalLoginAdminWhitelistWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    whitelistBypass: (NSNumber*) whitelistBypass
    whitelistBundlesRegexp: (NSString*) whitelistBundlesRegexp
    completionHandler: (void (^)(OAIOrgApacheSlingJcrBaseInternalLoginAdminWhitelistInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param whitelistName  (optional)
/// @param whitelistBundles  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIOrgApacheSlingJcrBaseInternalLoginAdminWhitelistFragmentInfo*
-(NSURLSessionTask*) orgApacheSlingJcrBaseInternalLoginAdminWhitelistFragmentWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    whitelistName: (NSString*) whitelistName
    whitelistBundles: (NSArray<NSString*>*) whitelistBundles
    completionHandler: (void (^)(OAIOrgApacheSlingJcrBaseInternalLoginAdminWhitelistFragmentInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param alias  (optional)
/// @param davCreateAbsoluteUri  (optional)
/// @param davProtectedhandlers  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIOrgApacheSlingJcrDavexImplServletsSlingDavExServletInfo*
-(NSURLSessionTask*) orgApacheSlingJcrDavexImplServletsSlingDavExServletWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    alias: (NSString*) alias
    davCreateAbsoluteUri: (NSNumber*) davCreateAbsoluteUri
    davProtectedhandlers: (NSString*) davProtectedhandlers
    completionHandler: (void (^)(OAIOrgApacheSlingJcrDavexImplServletsSlingDavExServletInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param javaNamingFactoryInitial  (optional)
/// @param javaNamingProviderUrl  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIOrgApacheSlingJcrJackrabbitServerJndiRegistrationSupportInfo*
-(NSURLSessionTask*) orgApacheSlingJcrJackrabbitServerJndiRegistrationSupportWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    javaNamingFactoryInitial: (NSString*) javaNamingFactoryInitial
    javaNamingProviderUrl: (NSString*) javaNamingProviderUrl
    completionHandler: (void (^)(OAIOrgApacheSlingJcrJackrabbitServerJndiRegistrationSupportInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param port  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIOrgApacheSlingJcrJackrabbitServerRmiRegistrationSupportInfo*
-(NSURLSessionTask*) orgApacheSlingJcrJackrabbitServerRmiRegistrationSupportWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    port: (NSNumber*) port
    completionHandler: (void (^)(OAIOrgApacheSlingJcrJackrabbitServerRmiRegistrationSupportInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param references  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIOrgApacheSlingJcrRepoinitImplRepositoryInitializerInfo*
-(NSURLSessionTask*) orgApacheSlingJcrRepoinitImplRepositoryInitializerWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    references: (NSArray<NSString*>*) references
    completionHandler: (void (^)(OAIOrgApacheSlingJcrRepoinitImplRepositoryInitializerInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param references  (optional)
/// @param scripts  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIOrgApacheSlingJcrRepoinitRepositoryInitializerInfo*
-(NSURLSessionTask*) orgApacheSlingJcrRepoinitRepositoryInitializerWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    references: (NSArray<NSString*>*) references
    scripts: (NSArray<NSString*>*) scripts
    completionHandler: (void (^)(OAIOrgApacheSlingJcrRepoinitRepositoryInitializerInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param resourceResolverSearchpath  (optional)
/// @param resourceResolverManglenamespaces  (optional)
/// @param resourceResolverAllowDirect  (optional)
/// @param resourceResolverRequiredProviders  (optional)
/// @param resourceResolverRequiredProvidernames  (optional)
/// @param resourceResolverVirtual  (optional)
/// @param resourceResolverMapping  (optional)
/// @param resourceResolverMapLocation  (optional)
/// @param resourceResolverMapObservation  (optional)
/// @param resourceResolverDefaultVanityRedirectStatus  (optional)
/// @param resourceResolverEnableVanitypath  (optional)
/// @param resourceResolverVanitypathMaxEntries  (optional)
/// @param resourceResolverVanitypathMaxEntriesStartup  (optional)
/// @param resourceResolverVanitypathBloomfilterMaxBytes  (optional)
/// @param resourceResolverOptimizeAliasResolution  (optional)
/// @param resourceResolverVanitypathWhitelist  (optional)
/// @param resourceResolverVanitypathBlacklist  (optional)
/// @param resourceResolverVanityPrecedence  (optional)
/// @param resourceResolverProviderhandlingParanoid  (optional)
/// @param resourceResolverLogClosing  (optional)
/// @param resourceResolverLogUnclosed  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIOrgApacheSlingJcrResourceInternalJcrResourceResolverFactoryImplInfo*
-(NSURLSessionTask*) orgApacheSlingJcrResourceInternalJcrResourceResolverFactoryImplWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    resourceResolverSearchpath: (NSArray<NSString*>*) resourceResolverSearchpath
    resourceResolverManglenamespaces: (NSNumber*) resourceResolverManglenamespaces
    resourceResolverAllowDirect: (NSNumber*) resourceResolverAllowDirect
    resourceResolverRequiredProviders: (NSArray<NSString*>*) resourceResolverRequiredProviders
    resourceResolverRequiredProvidernames: (NSArray<NSString*>*) resourceResolverRequiredProvidernames
    resourceResolverVirtual: (NSArray<NSString*>*) resourceResolverVirtual
    resourceResolverMapping: (NSArray<NSString*>*) resourceResolverMapping
    resourceResolverMapLocation: (NSString*) resourceResolverMapLocation
    resourceResolverMapObservation: (NSArray<NSString*>*) resourceResolverMapObservation
    resourceResolverDefaultVanityRedirectStatus: (NSNumber*) resourceResolverDefaultVanityRedirectStatus
    resourceResolverEnableVanitypath: (NSNumber*) resourceResolverEnableVanitypath
    resourceResolverVanitypathMaxEntries: (NSNumber*) resourceResolverVanitypathMaxEntries
    resourceResolverVanitypathMaxEntriesStartup: (NSNumber*) resourceResolverVanitypathMaxEntriesStartup
    resourceResolverVanitypathBloomfilterMaxBytes: (NSNumber*) resourceResolverVanitypathBloomfilterMaxBytes
    resourceResolverOptimizeAliasResolution: (NSNumber*) resourceResolverOptimizeAliasResolution
    resourceResolverVanitypathWhitelist: (NSArray<NSString*>*) resourceResolverVanitypathWhitelist
    resourceResolverVanitypathBlacklist: (NSArray<NSString*>*) resourceResolverVanitypathBlacklist
    resourceResolverVanityPrecedence: (NSNumber*) resourceResolverVanityPrecedence
    resourceResolverProviderhandlingParanoid: (NSNumber*) resourceResolverProviderhandlingParanoid
    resourceResolverLogClosing: (NSNumber*) resourceResolverLogClosing
    resourceResolverLogUnclosed: (NSNumber*) resourceResolverLogUnclosed
    completionHandler: (void (^)(OAIOrgApacheSlingJcrResourceInternalJcrResourceResolverFactoryImplInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param allowOnlySystemUser  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIOrgApacheSlingJcrResourceInternalJcrSystemUserValidatorInfo*
-(NSURLSessionTask*) orgApacheSlingJcrResourceInternalJcrSystemUserValidatorWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    allowOnlySystemUser: (NSNumber*) allowOnlySystemUser
    completionHandler: (void (^)(OAIOrgApacheSlingJcrResourceInternalJcrSystemUserValidatorInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param path  (optional)
/// @param checkpathPrefix  (optional)
/// @param jcrPath  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIOrgApacheSlingJcrResourcesecurityImplResourceAccessGateFactoryInfo*
-(NSURLSessionTask*) orgApacheSlingJcrResourcesecurityImplResourceAccessGateFactoryWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    path: (NSString*) path
    checkpathPrefix: (NSString*) checkpathPrefix
    jcrPath: (NSString*) jcrPath
    completionHandler: (void (^)(OAIOrgApacheSlingJcrResourcesecurityImplResourceAccessGateFactoryInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param serviceRanking  (optional)
/// @param typeCollections  (optional)
/// @param typeNoncollections  (optional)
/// @param typeContent  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIOrgApacheSlingJcrWebdavImplHandlerDefaultHandlerServiceInfo*
-(NSURLSessionTask*) orgApacheSlingJcrWebdavImplHandlerDefaultHandlerServiceWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    serviceRanking: (NSNumber*) serviceRanking
    typeCollections: (NSString*) typeCollections
    typeNoncollections: (NSString*) typeNoncollections
    typeContent: (NSString*) typeContent
    completionHandler: (void (^)(OAIOrgApacheSlingJcrWebdavImplHandlerDefaultHandlerServiceInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param serviceRanking  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIOrgApacheSlingJcrWebdavImplHandlerDirListingExportHandlerServicInfo*
-(NSURLSessionTask*) orgApacheSlingJcrWebdavImplHandlerDirListingExportHandlerServicWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    serviceRanking: (NSNumber*) serviceRanking
    completionHandler: (void (^)(OAIOrgApacheSlingJcrWebdavImplHandlerDirListingExportHandlerServicInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param davRoot  (optional)
/// @param davCreateAbsoluteUri  (optional)
/// @param davRealm  (optional)
/// @param collectionTypes  (optional)
/// @param filterPrefixes  (optional)
/// @param filterTypes  (optional)
/// @param filterUris  (optional)
/// @param typeCollections  (optional)
/// @param typeNoncollections  (optional)
/// @param typeContent  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIOrgApacheSlingJcrWebdavImplServletsSimpleWebDavServletInfo*
-(NSURLSessionTask*) orgApacheSlingJcrWebdavImplServletsSimpleWebDavServletWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    davRoot: (NSString*) davRoot
    davCreateAbsoluteUri: (NSNumber*) davCreateAbsoluteUri
    davRealm: (NSString*) davRealm
    collectionTypes: (NSArray<NSString*>*) collectionTypes
    filterPrefixes: (NSArray<NSString*>*) filterPrefixes
    filterTypes: (NSString*) filterTypes
    filterUris: (NSString*) filterUris
    typeCollections: (NSString*) typeCollections
    typeNoncollections: (NSString*) typeNoncollections
    typeContent: (NSString*) typeContent
    completionHandler: (void (^)(OAIOrgApacheSlingJcrWebdavImplServletsSimpleWebDavServletInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param providerRoots  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIOrgApacheSlingJmxProviderImplJMXResourceProviderInfo*
-(NSURLSessionTask*) orgApacheSlingJmxProviderImplJMXResourceProviderWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    providerRoots: (NSString*) providerRoots
    completionHandler: (void (^)(OAIOrgApacheSlingJmxProviderImplJMXResourceProviderInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param osgiHttpWhiteboardListener  (optional)
/// @param osgiHttpWhiteboardContextSelect  (optional)
/// @param maxRecursionDepth  (optional)
/// @param cleanupJobPeriod  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIOrgApacheSlingModelsImplModelAdapterFactoryInfo*
-(NSURLSessionTask*) orgApacheSlingModelsImplModelAdapterFactoryWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    osgiHttpWhiteboardListener: (NSString*) osgiHttpWhiteboardListener
    osgiHttpWhiteboardContextSelect: (NSString*) osgiHttpWhiteboardContextSelect
    maxRecursionDepth: (NSNumber*) maxRecursionDepth
    cleanupJobPeriod: (NSNumber*) cleanupJobPeriod
    completionHandler: (void (^)(OAIOrgApacheSlingModelsImplModelAdapterFactoryInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param maxRecursionLevels  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIOrgApacheSlingModelsJacksonexporterImplResourceModuleProviderInfo*
-(NSURLSessionTask*) orgApacheSlingModelsJacksonexporterImplResourceModuleProviderWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    maxRecursionLevels: (NSNumber*) maxRecursionLevels
    completionHandler: (void (^)(OAIOrgApacheSlingModelsJacksonexporterImplResourceModuleProviderInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param felixInventoryPrinterName  (optional)
/// @param felixInventoryPrinterTitle  (optional)
/// @param path  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIOrgApacheSlingResourceInventoryImplResourceInventoryPrinterFactoInfo*
-(NSURLSessionTask*) orgApacheSlingResourceInventoryImplResourceInventoryPrinterFactoWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    felixInventoryPrinterName: (NSString*) felixInventoryPrinterName
    felixInventoryPrinterTitle: (NSString*) felixInventoryPrinterTitle
    path: (NSString*) path
    completionHandler: (void (^)(OAIOrgApacheSlingResourceInventoryImplResourceInventoryPrinterFactoInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param mergeRoot  (optional)
/// @param mergeReadOnly  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIOrgApacheSlingResourcemergerImplMergedResourceProviderFactoryInfo*
-(NSURLSessionTask*) orgApacheSlingResourcemergerImplMergedResourceProviderFactoryWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    mergeRoot: (NSString*) mergeRoot
    mergeReadOnly: (NSNumber*) mergeReadOnly
    completionHandler: (void (^)(OAIOrgApacheSlingResourcemergerImplMergedResourceProviderFactoryInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param mergeRoot  (optional)
/// @param mergeReadOnly  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIOrgApacheSlingResourcemergerPickerOverridingInfo*
-(NSURLSessionTask*) orgApacheSlingResourcemergerPickerOverridingWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    mergeRoot: (NSString*) mergeRoot
    mergeReadOnly: (NSNumber*) mergeReadOnly
    completionHandler: (void (^)(OAIOrgApacheSlingResourcemergerPickerOverridingInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param orgApacheSlingScriptingCacheSize  (optional)
/// @param orgApacheSlingScriptingCacheAdditionalExtensions  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIOrgApacheSlingScriptingCoreImplScriptCacheImplInfo*
-(NSURLSessionTask*) orgApacheSlingScriptingCoreImplScriptCacheImplWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    orgApacheSlingScriptingCacheSize: (NSNumber*) orgApacheSlingScriptingCacheSize
    orgApacheSlingScriptingCacheAdditionalExtensions: (NSArray<NSString*>*) orgApacheSlingScriptingCacheAdditionalExtensions
    completionHandler: (void (^)(OAIOrgApacheSlingScriptingCoreImplScriptCacheImplInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param logStacktraceOnclose  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIOrgApacheSlingScriptingCoreImplScriptingResourceResolverProviderInfo*
-(NSURLSessionTask*) orgApacheSlingScriptingCoreImplScriptingResourceResolverProviderWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    logStacktraceOnclose: (NSNumber*) logStacktraceOnclose
    completionHandler: (void (^)(OAIOrgApacheSlingScriptingCoreImplScriptingResourceResolverProviderInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param javaClassdebuginfo  (optional)
/// @param javaJavaEncoding  (optional)
/// @param javaCompilerSourceVM  (optional)
/// @param javaCompilerTargetVM  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIOrgApacheSlingScriptingJavaImplJavaScriptEngineFactoryInfo*
-(NSURLSessionTask*) orgApacheSlingScriptingJavaImplJavaScriptEngineFactoryWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    javaClassdebuginfo: (NSNumber*) javaClassdebuginfo
    javaJavaEncoding: (NSString*) javaJavaEncoding
    javaCompilerSourceVM: (NSString*) javaCompilerSourceVM
    javaCompilerTargetVM: (NSString*) javaCompilerTargetVM
    completionHandler: (void (^)(OAIOrgApacheSlingScriptingJavaImplJavaScriptEngineFactoryInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param orgApacheSlingScriptingJavascriptRhinoOptLevel  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIOrgApacheSlingScriptingJavascriptInternalRhinoJavaScriptEngineFaInfo*
-(NSURLSessionTask*) orgApacheSlingScriptingJavascriptInternalRhinoJavaScriptEngineFaWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    orgApacheSlingScriptingJavascriptRhinoOptLevel: (NSNumber*) orgApacheSlingScriptingJavascriptRhinoOptLevel
    completionHandler: (void (^)(OAIOrgApacheSlingScriptingJavascriptInternalRhinoJavaScriptEngineFaInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param jasperCompilerTargetVM  (optional)
/// @param jasperCompilerSourceVM  (optional)
/// @param jasperClassdebuginfo  (optional)
/// @param jasperEnablePooling  (optional)
/// @param jasperIeClassId  (optional)
/// @param jasperGenStringAsCharArray  (optional)
/// @param jasperKeepgenerated  (optional)
/// @param jasperMappedfile  (optional)
/// @param jasperTrimSpaces  (optional)
/// @param jasperDisplaySourceFragments  (optional)
/// @param defaultIsSession  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIOrgApacheSlingScriptingJspJspScriptEngineFactoryInfo*
-(NSURLSessionTask*) orgApacheSlingScriptingJspJspScriptEngineFactoryWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    jasperCompilerTargetVM: (NSString*) jasperCompilerTargetVM
    jasperCompilerSourceVM: (NSString*) jasperCompilerSourceVM
    jasperClassdebuginfo: (NSNumber*) jasperClassdebuginfo
    jasperEnablePooling: (NSNumber*) jasperEnablePooling
    jasperIeClassId: (NSString*) jasperIeClassId
    jasperGenStringAsCharArray: (NSNumber*) jasperGenStringAsCharArray
    jasperKeepgenerated: (NSNumber*) jasperKeepgenerated
    jasperMappedfile: (NSNumber*) jasperMappedfile
    jasperTrimSpaces: (NSNumber*) jasperTrimSpaces
    jasperDisplaySourceFragments: (NSNumber*) jasperDisplaySourceFragments
    defaultIsSession: (NSNumber*) defaultIsSession
    completionHandler: (void (^)(OAIOrgApacheSlingScriptingJspJspScriptEngineFactoryInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param orgApacheSlingScriptingSightlyJsBindings  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIOrgApacheSlingScriptingSightlyJsImplJsapiSlyBindingsValuesProvInfo*
-(NSURLSessionTask*) orgApacheSlingScriptingSightlyJsImplJsapiSlyBindingsValuesProvWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    orgApacheSlingScriptingSightlyJsBindings: (NSArray<NSString*>*) orgApacheSlingScriptingSightlyJsBindings
    completionHandler: (void (^)(OAIOrgApacheSlingScriptingSightlyJsImplJsapiSlyBindingsValuesProvInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param slingContentDispositionPaths  (optional)
/// @param slingContentDispositionExcludedPaths  (optional)
/// @param slingContentDispositionAllPaths  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIOrgApacheSlingSecurityImplContentDispositionFilterInfo*
-(NSURLSessionTask*) orgApacheSlingSecurityImplContentDispositionFilterWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    slingContentDispositionPaths: (NSArray<NSString*>*) slingContentDispositionPaths
    slingContentDispositionExcludedPaths: (NSArray<NSString*>*) slingContentDispositionExcludedPaths
    slingContentDispositionAllPaths: (NSNumber*) slingContentDispositionAllPaths
    completionHandler: (void (^)(OAIOrgApacheSlingSecurityImplContentDispositionFilterInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param allowEmpty  (optional)
/// @param allowHosts  (optional)
/// @param allowHostsRegexp  (optional)
/// @param filterMethods  (optional)
/// @param excludeAgentsRegexp  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIOrgApacheSlingSecurityImplReferrerFilterInfo*
-(NSURLSessionTask*) orgApacheSlingSecurityImplReferrerFilterWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    allowEmpty: (NSNumber*) allowEmpty
    allowHosts: (NSArray<NSString*>*) allowHosts
    allowHostsRegexp: (NSArray<NSString*>*) allowHostsRegexp
    filterMethods: (NSArray<NSString*>*) filterMethods
    excludeAgentsRegexp: (NSArray<NSString*>*) excludeAgentsRegexp
    completionHandler: (void (^)(OAIOrgApacheSlingSecurityImplReferrerFilterInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param userMapping  (optional)
/// @param userDefault  (optional)
/// @param userEnableDefaultMapping  (optional)
/// @param requireValidation  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIOrgApacheSlingServiceusermappingImplServiceUserMapperImplInfo*
-(NSURLSessionTask*) orgApacheSlingServiceusermappingImplServiceUserMapperImplWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    userMapping: (NSArray<NSString*>*) userMapping
    userDefault: (NSString*) userDefault
    userEnableDefaultMapping: (NSNumber*) userEnableDefaultMapping
    requireValidation: (NSNumber*) requireValidation
    completionHandler: (void (^)(OAIOrgApacheSlingServiceusermappingImplServiceUserMapperImplInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param serviceRanking  (optional)
/// @param userMapping  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIOrgApacheSlingServiceusermappingImplServiceUserMapperImplAmendedInfo*
-(NSURLSessionTask*) orgApacheSlingServiceusermappingImplServiceUserMapperImplAmendedWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    serviceRanking: (NSNumber*) serviceRanking
    userMapping: (NSArray<NSString*>*) userMapping
    completionHandler: (void (^)(OAIOrgApacheSlingServiceusermappingImplServiceUserMapperImplAmendedInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param aliases  (optional)
/// @param index  (optional)
/// @param indexFiles  (optional)
/// @param enableHtml  (optional)
/// @param enableJson  (optional)
/// @param enableTxt  (optional)
/// @param enableXml  (optional)
/// @param jsonMaximumresults  (optional)
/// @param ecmaSuport  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIOrgApacheSlingServletsGetDefaultGetServletInfo*
-(NSURLSessionTask*) orgApacheSlingServletsGetDefaultGetServletWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    aliases: (NSArray<NSString*>*) aliases
    index: (NSNumber*) index
    indexFiles: (NSArray<NSString*>*) indexFiles
    enableHtml: (NSNumber*) enableHtml
    enableJson: (NSNumber*) enableJson
    enableTxt: (NSNumber*) enableTxt
    enableXml: (NSNumber*) enableXml
    jsonMaximumresults: (NSNumber*) jsonMaximumresults
    ecmaSuport: (NSNumber*) ecmaSuport
    completionHandler: (void (^)(OAIOrgApacheSlingServletsGetDefaultGetServletInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param slingServletSelectors  (optional)
/// @param ecmaSuport  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIOrgApacheSlingServletsGetImplVersionVersionInfoServletInfo*
-(NSURLSessionTask*) orgApacheSlingServletsGetImplVersionVersionInfoServletWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    slingServletSelectors: (NSArray<NSString*>*) slingServletSelectors
    ecmaSuport: (NSNumber*) ecmaSuport
    completionHandler: (void (^)(OAIOrgApacheSlingServletsGetImplVersionVersionInfoServletInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param schedulerExpression  (optional)
/// @param schedulerConcurrent  (optional)
/// @param chunkCleanupAge  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIOrgApacheSlingServletsPostImplHelperChunkCleanUpTaskInfo*
-(NSURLSessionTask*) orgApacheSlingServletsPostImplHelperChunkCleanUpTaskWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    schedulerExpression: (NSString*) schedulerExpression
    schedulerConcurrent: (NSNumber*) schedulerConcurrent
    chunkCleanupAge: (NSNumber*) chunkCleanupAge
    completionHandler: (void (^)(OAIOrgApacheSlingServletsPostImplHelperChunkCleanUpTaskInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param servletPostDateFormats  (optional)
/// @param servletPostNodeNameHints  (optional)
/// @param servletPostNodeNameMaxLength  (optional)
/// @param servletPostCheckinNewVersionableNodes  (optional)
/// @param servletPostAutoCheckout  (optional)
/// @param servletPostAutoCheckin  (optional)
/// @param servletPostIgnorePattern  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIOrgApacheSlingServletsPostImplSlingPostServletInfo*
-(NSURLSessionTask*) orgApacheSlingServletsPostImplSlingPostServletWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    servletPostDateFormats: (NSArray<NSString*>*) servletPostDateFormats
    servletPostNodeNameHints: (NSArray<NSString*>*) servletPostNodeNameHints
    servletPostNodeNameMaxLength: (NSNumber*) servletPostNodeNameMaxLength
    servletPostCheckinNewVersionableNodes: (NSNumber*) servletPostCheckinNewVersionableNodes
    servletPostAutoCheckout: (NSNumber*) servletPostAutoCheckout
    servletPostAutoCheckin: (NSNumber*) servletPostAutoCheckin
    servletPostIgnorePattern: (NSString*) servletPostIgnorePattern
    completionHandler: (void (^)(OAIOrgApacheSlingServletsPostImplSlingPostServletInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param servletresolverServletRoot  (optional)
/// @param servletresolverCacheSize  (optional)
/// @param servletresolverPaths  (optional)
/// @param servletresolverDefaultExtensions  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIOrgApacheSlingServletsResolverSlingServletResolverInfo*
-(NSURLSessionTask*) orgApacheSlingServletsResolverSlingServletResolverWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    servletresolverServletRoot: (NSString*) servletresolverServletRoot
    servletresolverCacheSize: (NSNumber*) servletresolverCacheSize
    servletresolverPaths: (NSArray<NSString*>*) servletresolverPaths
    servletresolverDefaultExtensions: (NSArray<NSString*>*) servletresolverDefaultExtensions
    completionHandler: (void (^)(OAIOrgApacheSlingServletsResolverSlingServletResolverInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param slingName  (optional)
/// @param slingDescription  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIOrgApacheSlingSettingsImplSlingSettingsServiceImplInfo*
-(NSURLSessionTask*) orgApacheSlingSettingsImplSlingSettingsServiceImplWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    slingName: (NSString*) slingName
    slingDescription: (NSString*) slingDescription
    completionHandler: (void (^)(OAIOrgApacheSlingSettingsImplSlingSettingsServiceImplInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param activeByDefault  (optional)
/// @param defaultMessage  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIOrgApacheSlingStartupfilterImplStartupFilterImplInfo*
-(NSURLSessionTask*) orgApacheSlingStartupfilterImplStartupFilterImplWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    activeByDefault: (NSNumber*) activeByDefault
    defaultMessage: (NSString*) defaultMessage
    completionHandler: (void (^)(OAIOrgApacheSlingStartupfilterImplStartupFilterImplInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param tenantRoot  (optional)
/// @param tenantPathMatcher  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIOrgApacheSlingTenantInternalTenantProviderImplInfo*
-(NSURLSessionTask*) orgApacheSlingTenantInternalTenantProviderImplWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    tenantRoot: (NSString*) tenantRoot
    tenantPathMatcher: (NSArray<NSString*>*) tenantPathMatcher
    completionHandler: (void (^)(OAIOrgApacheSlingTenantInternalTenantProviderImplInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param tracerSets  (optional)
/// @param enabled  (optional)
/// @param servletEnabled  (optional)
/// @param recordingCacheSizeInMB  (optional)
/// @param recordingCacheDurationInSecs  (optional)
/// @param recordingCompressionEnabled  (optional)
/// @param gzipResponse  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIOrgApacheSlingTracerInternalLogTracerInfo*
-(NSURLSessionTask*) orgApacheSlingTracerInternalLogTracerWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    tracerSets: (NSArray<NSString*>*) tracerSets
    enabled: (NSNumber*) enabled
    servletEnabled: (NSNumber*) servletEnabled
    recordingCacheSizeInMB: (NSNumber*) recordingCacheSizeInMB
    recordingCacheDurationInSecs: (NSNumber*) recordingCacheDurationInSecs
    recordingCompressionEnabled: (NSNumber*) recordingCompressionEnabled
    gzipResponse: (NSNumber*) gzipResponse
    completionHandler: (void (^)(OAIOrgApacheSlingTracerInternalLogTracerInfo* output, NSError* error)) handler;


/// 
/// 
///
/// @param post  (optional)
/// @param apply  (optional)
/// @param delete  (optional)
/// @param action  (optional)
/// @param location  (optional)
/// @param propertylist  (optional)
/// @param policyPath  (optional)
/// 
///  code:200 message:"Successfully retrieved configuration parameters",
///  code:302 message:"Default response",
///  code:0 message:"Default response"
///
/// @return OAIOrgApacheSlingXssImplXSSFilterImplInfo*
-(NSURLSessionTask*) orgApacheSlingXssImplXSSFilterImplWithPost: (NSNumber*) post
    apply: (NSNumber*) apply
    delete: (NSNumber*) delete
    action: (NSString*) action
    location: (NSString*) location
    propertylist: (NSArray<NSString*>*) propertylist
    policyPath: (NSString*) policyPath
    completionHandler: (void (^)(OAIOrgApacheSlingXssImplXSSFilterImplInfo* output, NSError* error)) handler;



@end
