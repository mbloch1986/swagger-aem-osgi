/**
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIOrgApacheSlingDistributionAgentImplSimpleDistributionAgentFactorProperties.h
 *
 * 
 */

#ifndef OAIOrgApacheSlingDistributionAgentImplSimpleDistributionAgentFactorProperties_H_
#define OAIOrgApacheSlingDistributionAgentImplSimpleDistributionAgentFactorProperties_H_

#include <QJsonObject>


#include "OAIOAIConfigNodePropertyBoolean.h"
#include "OAIOAIConfigNodePropertyDropDown.h"
#include "OAIOAIConfigNodePropertyString.h"

#include "OAIObject.h"

namespace OpenAPI {

class OAIOrgApacheSlingDistributionAgentImplSimpleDistributionAgentFactorProperties: public OAIObject {
public:
    OAIOrgApacheSlingDistributionAgentImplSimpleDistributionAgentFactorProperties();
    OAIOrgApacheSlingDistributionAgentImplSimpleDistributionAgentFactorProperties(QString json);
    ~OAIOrgApacheSlingDistributionAgentImplSimpleDistributionAgentFactorProperties();
    void init();
    void cleanup();

    QString asJson () override;
    QJsonObject asJsonObject() override;
    void fromJsonObject(QJsonObject json) override;
    OAIOrgApacheSlingDistributionAgentImplSimpleDistributionAgentFactorProperties* fromJson(QString jsonString) override;

    OAIConfigNodePropertyString* getName();
    void setName(OAIConfigNodePropertyString* name);

    OAIConfigNodePropertyString* getTitle();
    void setTitle(OAIConfigNodePropertyString* title);

    OAIConfigNodePropertyString* getDetails();
    void setDetails(OAIConfigNodePropertyString* details);

    OAIConfigNodePropertyBoolean* getEnabled();
    void setEnabled(OAIConfigNodePropertyBoolean* enabled);

    OAIConfigNodePropertyString* getServiceName();
    void setServiceName(OAIConfigNodePropertyString* service_name);

    OAIConfigNodePropertyDropDown* getLogLevel();
    void setLogLevel(OAIConfigNodePropertyDropDown* log_level);

    OAIConfigNodePropertyBoolean* getQueueProcessingEnabled();
    void setQueueProcessingEnabled(OAIConfigNodePropertyBoolean* queue_processing_enabled);

    OAIConfigNodePropertyString* getPackageExporterTarget();
    void setPackageExporterTarget(OAIConfigNodePropertyString* package_exporter_target);

    OAIConfigNodePropertyString* getPackageImporterTarget();
    void setPackageImporterTarget(OAIConfigNodePropertyString* package_importer_target);

    OAIConfigNodePropertyString* getRequestAuthorizationStrategyTarget();
    void setRequestAuthorizationStrategyTarget(OAIConfigNodePropertyString* request_authorization_strategy_target);

    OAIConfigNodePropertyString* getTriggersTarget();
    void setTriggersTarget(OAIConfigNodePropertyString* triggers_target);


    virtual bool isSet() override;

private:
    OAIConfigNodePropertyString* name;
    bool m_name_isSet;

    OAIConfigNodePropertyString* title;
    bool m_title_isSet;

    OAIConfigNodePropertyString* details;
    bool m_details_isSet;

    OAIConfigNodePropertyBoolean* enabled;
    bool m_enabled_isSet;

    OAIConfigNodePropertyString* service_name;
    bool m_service_name_isSet;

    OAIConfigNodePropertyDropDown* log_level;
    bool m_log_level_isSet;

    OAIConfigNodePropertyBoolean* queue_processing_enabled;
    bool m_queue_processing_enabled_isSet;

    OAIConfigNodePropertyString* package_exporter_target;
    bool m_package_exporter_target_isSet;

    OAIConfigNodePropertyString* package_importer_target;
    bool m_package_importer_target_isSet;

    OAIConfigNodePropertyString* request_authorization_strategy_target;
    bool m_request_authorization_strategy_target_isSet;

    OAIConfigNodePropertyString* triggers_target;
    bool m_triggers_target_isSet;

};

}

#endif /* OAIOrgApacheSlingDistributionAgentImplSimpleDistributionAgentFactorProperties_H_ */
