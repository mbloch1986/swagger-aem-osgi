/**
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIComDayCqStatisticsImplStatisticsServiceImplProperties.h
 *
 * 
 */

#ifndef OAIComDayCqStatisticsImplStatisticsServiceImplProperties_H
#define OAIComDayCqStatisticsImplStatisticsServiceImplProperties_H

#include <QJsonObject>


#include "OAIConfigNodePropertyBoolean.h"
#include "OAIConfigNodePropertyInteger.h"
#include "OAIConfigNodePropertyString.h"

#include "OAIObject.h"

namespace OpenAPI {

class OAIComDayCqStatisticsImplStatisticsServiceImplProperties: public OAIObject {
public:
    OAIComDayCqStatisticsImplStatisticsServiceImplProperties();
    OAIComDayCqStatisticsImplStatisticsServiceImplProperties(QString json);
    ~OAIComDayCqStatisticsImplStatisticsServiceImplProperties() override;
    void init();

    QString asJson () const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIConfigNodePropertyInteger getSchedulerPeriod() const;
    void setSchedulerPeriod(const OAIConfigNodePropertyInteger &scheduler_period);

    OAIConfigNodePropertyBoolean getSchedulerConcurrent() const;
    void setSchedulerConcurrent(const OAIConfigNodePropertyBoolean &scheduler_concurrent);

    OAIConfigNodePropertyString getPath() const;
    void setPath(const OAIConfigNodePropertyString &path);

    OAIConfigNodePropertyString getWorkspace() const;
    void setWorkspace(const OAIConfigNodePropertyString &workspace);

    OAIConfigNodePropertyString getKeywordsPath() const;
    void setKeywordsPath(const OAIConfigNodePropertyString &keywords_path);

    OAIConfigNodePropertyBoolean getAsyncEntries() const;
    void setAsyncEntries(const OAIConfigNodePropertyBoolean &async_entries);

    virtual bool isSet() const override;

private:
    OAIConfigNodePropertyInteger scheduler_period;
    bool m_scheduler_period_isSet;

    OAIConfigNodePropertyBoolean scheduler_concurrent;
    bool m_scheduler_concurrent_isSet;

    OAIConfigNodePropertyString path;
    bool m_path_isSet;

    OAIConfigNodePropertyString workspace;
    bool m_workspace_isSet;

    OAIConfigNodePropertyString keywords_path;
    bool m_keywords_path_isSet;

    OAIConfigNodePropertyBoolean async_entries;
    bool m_async_entries_isSet;

};

}

#endif // OAIComDayCqStatisticsImplStatisticsServiceImplProperties_H
