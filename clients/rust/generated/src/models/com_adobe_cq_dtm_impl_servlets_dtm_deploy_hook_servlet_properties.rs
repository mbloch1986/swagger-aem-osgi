/* 
 * Adobe Experience Manager OSGI config (AEM) API
 *
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 * Generated by: https://openapi-generator.tech
 */


#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct ComAdobeCqDtmImplServletsDtmDeployHookServletProperties {
  #[serde(rename = "dtm.staging.ip.whitelist")]
  dtm_staging_ip_whitelist: Option<::models::ConfigNodePropertyArray>,
  #[serde(rename = "dtm.production.ip.whitelist")]
  dtm_production_ip_whitelist: Option<::models::ConfigNodePropertyArray>
}

impl ComAdobeCqDtmImplServletsDtmDeployHookServletProperties {
  pub fn new() -> ComAdobeCqDtmImplServletsDtmDeployHookServletProperties {
    ComAdobeCqDtmImplServletsDtmDeployHookServletProperties {
      dtm_staging_ip_whitelist: None,
      dtm_production_ip_whitelist: None
    }
  }

  pub fn set_dtm_staging_ip_whitelist(&mut self, dtm_staging_ip_whitelist: ::models::ConfigNodePropertyArray) {
    self.dtm_staging_ip_whitelist = Some(dtm_staging_ip_whitelist);
  }

  pub fn with_dtm_staging_ip_whitelist(mut self, dtm_staging_ip_whitelist: ::models::ConfigNodePropertyArray) -> ComAdobeCqDtmImplServletsDtmDeployHookServletProperties {
    self.dtm_staging_ip_whitelist = Some(dtm_staging_ip_whitelist);
    self
  }

  pub fn dtm_staging_ip_whitelist(&self) -> Option<&::models::ConfigNodePropertyArray> {
    self.dtm_staging_ip_whitelist.as_ref()
  }

  pub fn reset_dtm_staging_ip_whitelist(&mut self) {
    self.dtm_staging_ip_whitelist = None;
  }

  pub fn set_dtm_production_ip_whitelist(&mut self, dtm_production_ip_whitelist: ::models::ConfigNodePropertyArray) {
    self.dtm_production_ip_whitelist = Some(dtm_production_ip_whitelist);
  }

  pub fn with_dtm_production_ip_whitelist(mut self, dtm_production_ip_whitelist: ::models::ConfigNodePropertyArray) -> ComAdobeCqDtmImplServletsDtmDeployHookServletProperties {
    self.dtm_production_ip_whitelist = Some(dtm_production_ip_whitelist);
    self
  }

  pub fn dtm_production_ip_whitelist(&self) -> Option<&::models::ConfigNodePropertyArray> {
    self.dtm_production_ip_whitelist.as_ref()
  }

  pub fn reset_dtm_production_ip_whitelist(&mut self) {
    self.dtm_production_ip_whitelist = None;
  }

}



