/**
* Adobe Experience Manager OSGI config (AEM) API
* Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
*
* OpenAPI spec version: 1.0.0-pre.0
* Contact: opensource@shinesolutions.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/


#include "ComAdobeGraniteWorkflowCoreJobJobHandlerProperties.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

ComAdobeGraniteWorkflowCoreJobJobHandlerProperties::ComAdobeGraniteWorkflowCoreJobJobHandlerProperties()
{
    m_Job_topicsIsSet = false;
    m_Allow_self_process_terminationIsSet = false;
    
}

ComAdobeGraniteWorkflowCoreJobJobHandlerProperties::~ComAdobeGraniteWorkflowCoreJobJobHandlerProperties()
{
}

void ComAdobeGraniteWorkflowCoreJobJobHandlerProperties::validate()
{
    // TODO: implement validation
}

nlohmann::json ComAdobeGraniteWorkflowCoreJobJobHandlerProperties::toJson() const
{
    nlohmann::json val = nlohmann::json::object();

    if(m_Job_topicsIsSet)
    {
        val["job.topics"] = ModelBase::toJson(m_Job_topics);
    }
    if(m_Allow_self_process_terminationIsSet)
    {
        val["allow.self.process.termination"] = ModelBase::toJson(m_Allow_self_process_termination);
    }
    

    return val;
}

void ComAdobeGraniteWorkflowCoreJobJobHandlerProperties::fromJson(nlohmann::json& val)
{
    if(val.find("job.topics") != val.end())
    {
        if(!val["job.topics"].is_null())
        {
            ConfigNodePropertyArray newItem;
            newItem.fromJson(val["job.topics"]);
            setJobTopics( newItem );
        }
        
    }
    if(val.find("allow.self.process.termination") != val.end())
    {
        if(!val["allow.self.process.termination"].is_null())
        {
            ConfigNodePropertyBoolean newItem;
            newItem.fromJson(val["allow.self.process.termination"]);
            setAllowSelfProcessTermination( newItem );
        }
        
    }
    
}


ConfigNodePropertyArray ComAdobeGraniteWorkflowCoreJobJobHandlerProperties::getJobTopics() const
{
    return m_Job_topics;
}
void ComAdobeGraniteWorkflowCoreJobJobHandlerProperties::setJobTopics(ConfigNodePropertyArray const& value)
{
    m_Job_topics = value;
    m_Job_topicsIsSet = true;
}
bool ComAdobeGraniteWorkflowCoreJobJobHandlerProperties::jobTopicsIsSet() const
{
    return m_Job_topicsIsSet;
}
void ComAdobeGraniteWorkflowCoreJobJobHandlerProperties::unsetJob_topics()
{
    m_Job_topicsIsSet = false;
}
ConfigNodePropertyBoolean ComAdobeGraniteWorkflowCoreJobJobHandlerProperties::getAllowSelfProcessTermination() const
{
    return m_Allow_self_process_termination;
}
void ComAdobeGraniteWorkflowCoreJobJobHandlerProperties::setAllowSelfProcessTermination(ConfigNodePropertyBoolean const& value)
{
    m_Allow_self_process_termination = value;
    m_Allow_self_process_terminationIsSet = true;
}
bool ComAdobeGraniteWorkflowCoreJobJobHandlerProperties::allowSelfProcessTerminationIsSet() const
{
    return m_Allow_self_process_terminationIsSet;
}
void ComAdobeGraniteWorkflowCoreJobJobHandlerProperties::unsetAllow_self_process_termination()
{
    m_Allow_self_process_terminationIsSet = false;
}

}
}
}
}

