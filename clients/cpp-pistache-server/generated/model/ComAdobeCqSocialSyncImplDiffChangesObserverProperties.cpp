/**
* Adobe Experience Manager OSGI config (AEM) API
* Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
*
* OpenAPI spec version: 1.0.0-pre.0
* Contact: opensource@shinesolutions.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/


#include "ComAdobeCqSocialSyncImplDiffChangesObserverProperties.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

ComAdobeCqSocialSyncImplDiffChangesObserverProperties::ComAdobeCqSocialSyncImplDiffChangesObserverProperties()
{
    m_EnabledIsSet = false;
    m_AgentNameIsSet = false;
    m_DiffPathIsSet = false;
    m_PropertyNamesIsSet = false;
    
}

ComAdobeCqSocialSyncImplDiffChangesObserverProperties::~ComAdobeCqSocialSyncImplDiffChangesObserverProperties()
{
}

void ComAdobeCqSocialSyncImplDiffChangesObserverProperties::validate()
{
    // TODO: implement validation
}

nlohmann::json ComAdobeCqSocialSyncImplDiffChangesObserverProperties::toJson() const
{
    nlohmann::json val = nlohmann::json::object();

    if(m_EnabledIsSet)
    {
        val["enabled"] = ModelBase::toJson(m_Enabled);
    }
    if(m_AgentNameIsSet)
    {
        val["agentName"] = ModelBase::toJson(m_AgentName);
    }
    if(m_DiffPathIsSet)
    {
        val["diffPath"] = ModelBase::toJson(m_DiffPath);
    }
    if(m_PropertyNamesIsSet)
    {
        val["propertyNames"] = ModelBase::toJson(m_PropertyNames);
    }
    

    return val;
}

void ComAdobeCqSocialSyncImplDiffChangesObserverProperties::fromJson(nlohmann::json& val)
{
    if(val.find("enabled") != val.end())
    {
        if(!val["enabled"].is_null())
        {
            ConfigNodePropertyBoolean newItem;
            newItem.fromJson(val["enabled"]);
            setEnabled( newItem );
        }
        
    }
    if(val.find("agentName") != val.end())
    {
        if(!val["agentName"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["agentName"]);
            setAgentName( newItem );
        }
        
    }
    if(val.find("diffPath") != val.end())
    {
        if(!val["diffPath"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["diffPath"]);
            setDiffPath( newItem );
        }
        
    }
    if(val.find("propertyNames") != val.end())
    {
        if(!val["propertyNames"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["propertyNames"]);
            setPropertyNames( newItem );
        }
        
    }
    
}


ConfigNodePropertyBoolean ComAdobeCqSocialSyncImplDiffChangesObserverProperties::getEnabled() const
{
    return m_Enabled;
}
void ComAdobeCqSocialSyncImplDiffChangesObserverProperties::setEnabled(ConfigNodePropertyBoolean const& value)
{
    m_Enabled = value;
    m_EnabledIsSet = true;
}
bool ComAdobeCqSocialSyncImplDiffChangesObserverProperties::enabledIsSet() const
{
    return m_EnabledIsSet;
}
void ComAdobeCqSocialSyncImplDiffChangesObserverProperties::unsetEnabled()
{
    m_EnabledIsSet = false;
}
ConfigNodePropertyString ComAdobeCqSocialSyncImplDiffChangesObserverProperties::getAgentName() const
{
    return m_AgentName;
}
void ComAdobeCqSocialSyncImplDiffChangesObserverProperties::setAgentName(ConfigNodePropertyString const& value)
{
    m_AgentName = value;
    m_AgentNameIsSet = true;
}
bool ComAdobeCqSocialSyncImplDiffChangesObserverProperties::agentNameIsSet() const
{
    return m_AgentNameIsSet;
}
void ComAdobeCqSocialSyncImplDiffChangesObserverProperties::unsetAgentName()
{
    m_AgentNameIsSet = false;
}
ConfigNodePropertyString ComAdobeCqSocialSyncImplDiffChangesObserverProperties::getDiffPath() const
{
    return m_DiffPath;
}
void ComAdobeCqSocialSyncImplDiffChangesObserverProperties::setDiffPath(ConfigNodePropertyString const& value)
{
    m_DiffPath = value;
    m_DiffPathIsSet = true;
}
bool ComAdobeCqSocialSyncImplDiffChangesObserverProperties::diffPathIsSet() const
{
    return m_DiffPathIsSet;
}
void ComAdobeCqSocialSyncImplDiffChangesObserverProperties::unsetDiffPath()
{
    m_DiffPathIsSet = false;
}
ConfigNodePropertyString ComAdobeCqSocialSyncImplDiffChangesObserverProperties::getPropertyNames() const
{
    return m_PropertyNames;
}
void ComAdobeCqSocialSyncImplDiffChangesObserverProperties::setPropertyNames(ConfigNodePropertyString const& value)
{
    m_PropertyNames = value;
    m_PropertyNamesIsSet = true;
}
bool ComAdobeCqSocialSyncImplDiffChangesObserverProperties::propertyNamesIsSet() const
{
    return m_PropertyNamesIsSet;
}
void ComAdobeCqSocialSyncImplDiffChangesObserverProperties::unsetPropertyNames()
{
    m_PropertyNamesIsSet = false;
}

}
}
}
}

