//
// ComAdobeCqSocialCommonsEmailreplyImplEmailReplyConfigurationImpProperties.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation


open class ComAdobeCqSocialCommonsEmailreplyImplEmailReplyConfigurationImpProperties: JSONEncodable {

    public var emailName: ConfigNodePropertyString?
    public var emailCreatePostFromReply: ConfigNodePropertyBoolean?
    public var emailAddCommentIdTo: ConfigNodePropertyDropDown?
    public var emailSubjectMaximumLength: ConfigNodePropertyInteger?
    public var emailReplyToAddress: ConfigNodePropertyString?
    public var emailReplyToDelimiter: ConfigNodePropertyString?
    public var emailTrackerIdPrefixInSubject: ConfigNodePropertyString?
    public var emailTrackerIdPrefixInBody: ConfigNodePropertyString?
    public var emailAsHTML: ConfigNodePropertyBoolean?
    public var emailDefaultUserName: ConfigNodePropertyString?
    public var emailTemplatesRootPath: ConfigNodePropertyString?

    public init() {}

    // MARK: JSONEncodable
    open func encodeToJSON() -> Any {
        var nillableDictionary = [String:Any?]()
        nillableDictionary["email.name"] = self.emailName?.encodeToJSON()
        nillableDictionary["email.createPostFromReply"] = self.emailCreatePostFromReply?.encodeToJSON()
        nillableDictionary["email.addCommentIdTo"] = self.emailAddCommentIdTo?.encodeToJSON()
        nillableDictionary["email.subjectMaximumLength"] = self.emailSubjectMaximumLength?.encodeToJSON()
        nillableDictionary["email.replyToAddress"] = self.emailReplyToAddress?.encodeToJSON()
        nillableDictionary["email.replyToDelimiter"] = self.emailReplyToDelimiter?.encodeToJSON()
        nillableDictionary["email.trackerIdPrefixInSubject"] = self.emailTrackerIdPrefixInSubject?.encodeToJSON()
        nillableDictionary["email.trackerIdPrefixInBody"] = self.emailTrackerIdPrefixInBody?.encodeToJSON()
        nillableDictionary["email.asHTML"] = self.emailAsHTML?.encodeToJSON()
        nillableDictionary["email.defaultUserName"] = self.emailDefaultUserName?.encodeToJSON()
        nillableDictionary["email.templates.rootPath"] = self.emailTemplatesRootPath?.encodeToJSON()

        let dictionary: [String:Any] = APIHelper.rejectNil(nillableDictionary) ?? [:]
        return dictionary
    }
}

