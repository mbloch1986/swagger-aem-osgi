/**
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


#include "OAIComDayCqDamHandlerStandardPdfPdfHandlerProperties.h"

#include "OAIHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace OpenAPI {

OAIComDayCqDamHandlerStandardPdfPdfHandlerProperties::OAIComDayCqDamHandlerStandardPdfPdfHandlerProperties(QString json) {
    init();
    this->fromJson(json);
}

OAIComDayCqDamHandlerStandardPdfPdfHandlerProperties::OAIComDayCqDamHandlerStandardPdfPdfHandlerProperties() {
    init();
}

OAIComDayCqDamHandlerStandardPdfPdfHandlerProperties::~OAIComDayCqDamHandlerStandardPdfPdfHandlerProperties() {
    this->cleanup();
}

void
OAIComDayCqDamHandlerStandardPdfPdfHandlerProperties::init() {
    raster_annotation = new OAIConfigNodePropertyBoolean();
    m_raster_annotation_isSet = false;
}

void
OAIComDayCqDamHandlerStandardPdfPdfHandlerProperties::cleanup() {
    if(raster_annotation != nullptr) { 
        delete raster_annotation;
    }
}

OAIComDayCqDamHandlerStandardPdfPdfHandlerProperties*
OAIComDayCqDamHandlerStandardPdfPdfHandlerProperties::fromJson(QString json) {
    QByteArray array (json.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
    return this;
}

void
OAIComDayCqDamHandlerStandardPdfPdfHandlerProperties::fromJsonObject(QJsonObject pJson) {
    ::OpenAPI::setValue(&raster_annotation, pJson["raster.annotation"], "OAIConfigNodePropertyBoolean", "OAIConfigNodePropertyBoolean");
    
}

QString
OAIComDayCqDamHandlerStandardPdfPdfHandlerProperties::asJson ()
{
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject
OAIComDayCqDamHandlerStandardPdfPdfHandlerProperties::asJsonObject() {
    QJsonObject obj;
    if((raster_annotation != nullptr) && (raster_annotation->isSet())){
        toJsonValue(QString("raster.annotation"), raster_annotation, obj, QString("OAIConfigNodePropertyBoolean"));
    }

    return obj;
}

OAIConfigNodePropertyBoolean*
OAIComDayCqDamHandlerStandardPdfPdfHandlerProperties::getRasterAnnotation() {
    return raster_annotation;
}
void
OAIComDayCqDamHandlerStandardPdfPdfHandlerProperties::setRasterAnnotation(OAIConfigNodePropertyBoolean* raster_annotation) {
    this->raster_annotation = raster_annotation;
    this->m_raster_annotation_isSet = true;
}


bool
OAIComDayCqDamHandlerStandardPdfPdfHandlerProperties::isSet(){
    bool isObjectUpdated = false;
    do{
        if(raster_annotation != nullptr && raster_annotation->isSet()){ isObjectUpdated = true; break;}
    }while(false);
    return isObjectUpdated;
}
}

