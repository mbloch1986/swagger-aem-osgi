/**
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 3.2.1-SNAPSHOT.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */



#include "ComAdobeGraniteWorkflowCoreWorkflowSessionFactoryProperties.h"

#include <string>
#include <sstream>
#include <boost/property_tree/ptree.hpp>
#include <boost/property_tree/json_parser.hpp>

using boost::property_tree::ptree;
using boost::property_tree::read_json;
using boost::property_tree::write_json;

namespace org {
namespace openapitools {
namespace server {
namespace model {

ComAdobeGraniteWorkflowCoreWorkflowSessionFactoryProperties::ComAdobeGraniteWorkflowCoreWorkflowSessionFactoryProperties()
{
    
}

ComAdobeGraniteWorkflowCoreWorkflowSessionFactoryProperties::~ComAdobeGraniteWorkflowCoreWorkflowSessionFactoryProperties()
{
}

std::string ComAdobeGraniteWorkflowCoreWorkflowSessionFactoryProperties::toJsonString()
{
	std::stringstream ss;
	ptree pt;
	write_json(ss, pt, false);
	return ss.str();
}

void ComAdobeGraniteWorkflowCoreWorkflowSessionFactoryProperties::fromJsonString(std::string const& jsonString)
{
	std::stringstream ss(jsonString);
	ptree pt;
	read_json(ss,pt);
}

std::shared_ptr<ConfigNodePropertyDropDown> ComAdobeGraniteWorkflowCoreWorkflowSessionFactoryProperties::getGraniteWorkflowinboxSortPropertyName() const
{
    return m_Granite_workflowinbox_sort_propertyName;
}
void ComAdobeGraniteWorkflowCoreWorkflowSessionFactoryProperties::setGraniteWorkflowinboxSortPropertyName(std::shared_ptr<ConfigNodePropertyDropDown> value)
{
    m_Granite_workflowinbox_sort_propertyName = value;
}
std::shared_ptr<ConfigNodePropertyString> ComAdobeGraniteWorkflowCoreWorkflowSessionFactoryProperties::getGraniteWorkflowinboxSortOrder() const
{
    return m_Granite_workflowinbox_sort_order;
}
void ComAdobeGraniteWorkflowCoreWorkflowSessionFactoryProperties::setGraniteWorkflowinboxSortOrder(std::shared_ptr<ConfigNodePropertyString> value)
{
    m_Granite_workflowinbox_sort_order = value;
}
std::shared_ptr<ConfigNodePropertyInteger> ComAdobeGraniteWorkflowCoreWorkflowSessionFactoryProperties::getCqWorkflowJobRetry() const
{
    return m_Cq_workflow_job_retry;
}
void ComAdobeGraniteWorkflowCoreWorkflowSessionFactoryProperties::setCqWorkflowJobRetry(std::shared_ptr<ConfigNodePropertyInteger> value)
{
    m_Cq_workflow_job_retry = value;
}
std::shared_ptr<ConfigNodePropertyArray> ComAdobeGraniteWorkflowCoreWorkflowSessionFactoryProperties::getCqWorkflowSuperuser() const
{
    return m_Cq_workflow_superuser;
}
void ComAdobeGraniteWorkflowCoreWorkflowSessionFactoryProperties::setCqWorkflowSuperuser(std::shared_ptr<ConfigNodePropertyArray> value)
{
    m_Cq_workflow_superuser = value;
}
std::shared_ptr<ConfigNodePropertyInteger> ComAdobeGraniteWorkflowCoreWorkflowSessionFactoryProperties::getGraniteWorkflowInboxQuerySize() const
{
    return m_Granite_workflow_inboxQuerySize;
}
void ComAdobeGraniteWorkflowCoreWorkflowSessionFactoryProperties::setGraniteWorkflowInboxQuerySize(std::shared_ptr<ConfigNodePropertyInteger> value)
{
    m_Granite_workflow_inboxQuerySize = value;
}
std::shared_ptr<ConfigNodePropertyBoolean> ComAdobeGraniteWorkflowCoreWorkflowSessionFactoryProperties::getGraniteWorkflowAdminUserGroupFilter() const
{
    return m_Granite_workflow_adminUserGroupFilter;
}
void ComAdobeGraniteWorkflowCoreWorkflowSessionFactoryProperties::setGraniteWorkflowAdminUserGroupFilter(std::shared_ptr<ConfigNodePropertyBoolean> value)
{
    m_Granite_workflow_adminUserGroupFilter = value;
}
std::shared_ptr<ConfigNodePropertyBoolean> ComAdobeGraniteWorkflowCoreWorkflowSessionFactoryProperties::getGraniteWorkflowEnforceWorkitemAssigneePermissions() const
{
    return m_Granite_workflow_enforceWorkitemAssigneePermissions;
}
void ComAdobeGraniteWorkflowCoreWorkflowSessionFactoryProperties::setGraniteWorkflowEnforceWorkitemAssigneePermissions(std::shared_ptr<ConfigNodePropertyBoolean> value)
{
    m_Granite_workflow_enforceWorkitemAssigneePermissions = value;
}
std::shared_ptr<ConfigNodePropertyBoolean> ComAdobeGraniteWorkflowCoreWorkflowSessionFactoryProperties::getGraniteWorkflowEnforceWorkflowInitiatorPermissions() const
{
    return m_Granite_workflow_enforceWorkflowInitiatorPermissions;
}
void ComAdobeGraniteWorkflowCoreWorkflowSessionFactoryProperties::setGraniteWorkflowEnforceWorkflowInitiatorPermissions(std::shared_ptr<ConfigNodePropertyBoolean> value)
{
    m_Granite_workflow_enforceWorkflowInitiatorPermissions = value;
}
std::shared_ptr<ConfigNodePropertyBoolean> ComAdobeGraniteWorkflowCoreWorkflowSessionFactoryProperties::getGraniteWorkflowInjectTenantIdInJobTopics() const
{
    return m_Granite_workflow_injectTenantIdInJobTopics;
}
void ComAdobeGraniteWorkflowCoreWorkflowSessionFactoryProperties::setGraniteWorkflowInjectTenantIdInJobTopics(std::shared_ptr<ConfigNodePropertyBoolean> value)
{
    m_Granite_workflow_injectTenantIdInJobTopics = value;
}
std::shared_ptr<ConfigNodePropertyInteger> ComAdobeGraniteWorkflowCoreWorkflowSessionFactoryProperties::getGraniteWorkflowMaxPurgeSaveThreshold() const
{
    return m_Granite_workflow_maxPurgeSaveThreshold;
}
void ComAdobeGraniteWorkflowCoreWorkflowSessionFactoryProperties::setGraniteWorkflowMaxPurgeSaveThreshold(std::shared_ptr<ConfigNodePropertyInteger> value)
{
    m_Granite_workflow_maxPurgeSaveThreshold = value;
}
std::shared_ptr<ConfigNodePropertyInteger> ComAdobeGraniteWorkflowCoreWorkflowSessionFactoryProperties::getGraniteWorkflowMaxPurgeQueryCount() const
{
    return m_Granite_workflow_maxPurgeQueryCount;
}
void ComAdobeGraniteWorkflowCoreWorkflowSessionFactoryProperties::setGraniteWorkflowMaxPurgeQueryCount(std::shared_ptr<ConfigNodePropertyInteger> value)
{
    m_Granite_workflow_maxPurgeQueryCount = value;
}

}
}
}
}

