/**
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


#include "OAIComAdobeGraniteAuthSsoImplSsoAuthenticationHandlerProperties.h"

#include "OAIHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace OpenAPI {

OAIComAdobeGraniteAuthSsoImplSsoAuthenticationHandlerProperties::OAIComAdobeGraniteAuthSsoImplSsoAuthenticationHandlerProperties(QString json) {
    this->fromJson(json);
}

OAIComAdobeGraniteAuthSsoImplSsoAuthenticationHandlerProperties::OAIComAdobeGraniteAuthSsoImplSsoAuthenticationHandlerProperties() {
    this->init();
}

OAIComAdobeGraniteAuthSsoImplSsoAuthenticationHandlerProperties::~OAIComAdobeGraniteAuthSsoImplSsoAuthenticationHandlerProperties() {
    
}

void
OAIComAdobeGraniteAuthSsoImplSsoAuthenticationHandlerProperties::init() {
    m_path_isSet = false;
    m_service_ranking_isSet = false;
    m_jaas_control_flag_isSet = false;
    m_jaas_realm_name_isSet = false;
    m_jaas_ranking_isSet = false;
    m_headers_isSet = false;
    m_cookies_isSet = false;
    m_parameters_isSet = false;
    m_usermap_isSet = false;
    m_format_isSet = false;
    m_trusted_credentials_attribute_isSet = false;
}

void
OAIComAdobeGraniteAuthSsoImplSsoAuthenticationHandlerProperties::fromJson(QString jsonString) {
    QByteArray array (jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void
OAIComAdobeGraniteAuthSsoImplSsoAuthenticationHandlerProperties::fromJsonObject(QJsonObject json) {
    ::OpenAPI::fromJsonValue(path, json[QString("path")]);
    
    ::OpenAPI::fromJsonValue(service_ranking, json[QString("service.ranking")]);
    
    ::OpenAPI::fromJsonValue(jaas_control_flag, json[QString("jaas.controlFlag")]);
    
    ::OpenAPI::fromJsonValue(jaas_realm_name, json[QString("jaas.realmName")]);
    
    ::OpenAPI::fromJsonValue(jaas_ranking, json[QString("jaas.ranking")]);
    
    ::OpenAPI::fromJsonValue(headers, json[QString("headers")]);
    
    ::OpenAPI::fromJsonValue(cookies, json[QString("cookies")]);
    
    ::OpenAPI::fromJsonValue(parameters, json[QString("parameters")]);
    
    ::OpenAPI::fromJsonValue(usermap, json[QString("usermap")]);
    
    ::OpenAPI::fromJsonValue(format, json[QString("format")]);
    
    ::OpenAPI::fromJsonValue(trusted_credentials_attribute, json[QString("trustedCredentialsAttribute")]);
    
}

QString
OAIComAdobeGraniteAuthSsoImplSsoAuthenticationHandlerProperties::asJson () const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject
OAIComAdobeGraniteAuthSsoImplSsoAuthenticationHandlerProperties::asJsonObject() const {
    QJsonObject obj;
	if(path.isSet()){
        obj.insert(QString("path"), ::OpenAPI::toJsonValue(path));
    }
	if(service_ranking.isSet()){
        obj.insert(QString("service.ranking"), ::OpenAPI::toJsonValue(service_ranking));
    }
	if(jaas_control_flag.isSet()){
        obj.insert(QString("jaas.controlFlag"), ::OpenAPI::toJsonValue(jaas_control_flag));
    }
	if(jaas_realm_name.isSet()){
        obj.insert(QString("jaas.realmName"), ::OpenAPI::toJsonValue(jaas_realm_name));
    }
	if(jaas_ranking.isSet()){
        obj.insert(QString("jaas.ranking"), ::OpenAPI::toJsonValue(jaas_ranking));
    }
	if(headers.isSet()){
        obj.insert(QString("headers"), ::OpenAPI::toJsonValue(headers));
    }
	if(cookies.isSet()){
        obj.insert(QString("cookies"), ::OpenAPI::toJsonValue(cookies));
    }
	if(parameters.isSet()){
        obj.insert(QString("parameters"), ::OpenAPI::toJsonValue(parameters));
    }
	if(usermap.isSet()){
        obj.insert(QString("usermap"), ::OpenAPI::toJsonValue(usermap));
    }
	if(format.isSet()){
        obj.insert(QString("format"), ::OpenAPI::toJsonValue(format));
    }
	if(trusted_credentials_attribute.isSet()){
        obj.insert(QString("trustedCredentialsAttribute"), ::OpenAPI::toJsonValue(trusted_credentials_attribute));
    }
    return obj;
}

OAIConfigNodePropertyString
OAIComAdobeGraniteAuthSsoImplSsoAuthenticationHandlerProperties::getPath() const {
    return path;
}
void
OAIComAdobeGraniteAuthSsoImplSsoAuthenticationHandlerProperties::setPath(const OAIConfigNodePropertyString &path) {
    this->path = path;
    this->m_path_isSet = true;
}

OAIConfigNodePropertyInteger
OAIComAdobeGraniteAuthSsoImplSsoAuthenticationHandlerProperties::getServiceRanking() const {
    return service_ranking;
}
void
OAIComAdobeGraniteAuthSsoImplSsoAuthenticationHandlerProperties::setServiceRanking(const OAIConfigNodePropertyInteger &service_ranking) {
    this->service_ranking = service_ranking;
    this->m_service_ranking_isSet = true;
}

OAIConfigNodePropertyString
OAIComAdobeGraniteAuthSsoImplSsoAuthenticationHandlerProperties::getJaasControlFlag() const {
    return jaas_control_flag;
}
void
OAIComAdobeGraniteAuthSsoImplSsoAuthenticationHandlerProperties::setJaasControlFlag(const OAIConfigNodePropertyString &jaas_control_flag) {
    this->jaas_control_flag = jaas_control_flag;
    this->m_jaas_control_flag_isSet = true;
}

OAIConfigNodePropertyString
OAIComAdobeGraniteAuthSsoImplSsoAuthenticationHandlerProperties::getJaasRealmName() const {
    return jaas_realm_name;
}
void
OAIComAdobeGraniteAuthSsoImplSsoAuthenticationHandlerProperties::setJaasRealmName(const OAIConfigNodePropertyString &jaas_realm_name) {
    this->jaas_realm_name = jaas_realm_name;
    this->m_jaas_realm_name_isSet = true;
}

OAIConfigNodePropertyInteger
OAIComAdobeGraniteAuthSsoImplSsoAuthenticationHandlerProperties::getJaasRanking() const {
    return jaas_ranking;
}
void
OAIComAdobeGraniteAuthSsoImplSsoAuthenticationHandlerProperties::setJaasRanking(const OAIConfigNodePropertyInteger &jaas_ranking) {
    this->jaas_ranking = jaas_ranking;
    this->m_jaas_ranking_isSet = true;
}

OAIConfigNodePropertyArray
OAIComAdobeGraniteAuthSsoImplSsoAuthenticationHandlerProperties::getHeaders() const {
    return headers;
}
void
OAIComAdobeGraniteAuthSsoImplSsoAuthenticationHandlerProperties::setHeaders(const OAIConfigNodePropertyArray &headers) {
    this->headers = headers;
    this->m_headers_isSet = true;
}

OAIConfigNodePropertyArray
OAIComAdobeGraniteAuthSsoImplSsoAuthenticationHandlerProperties::getCookies() const {
    return cookies;
}
void
OAIComAdobeGraniteAuthSsoImplSsoAuthenticationHandlerProperties::setCookies(const OAIConfigNodePropertyArray &cookies) {
    this->cookies = cookies;
    this->m_cookies_isSet = true;
}

OAIConfigNodePropertyArray
OAIComAdobeGraniteAuthSsoImplSsoAuthenticationHandlerProperties::getParameters() const {
    return parameters;
}
void
OAIComAdobeGraniteAuthSsoImplSsoAuthenticationHandlerProperties::setParameters(const OAIConfigNodePropertyArray &parameters) {
    this->parameters = parameters;
    this->m_parameters_isSet = true;
}

OAIConfigNodePropertyArray
OAIComAdobeGraniteAuthSsoImplSsoAuthenticationHandlerProperties::getUsermap() const {
    return usermap;
}
void
OAIComAdobeGraniteAuthSsoImplSsoAuthenticationHandlerProperties::setUsermap(const OAIConfigNodePropertyArray &usermap) {
    this->usermap = usermap;
    this->m_usermap_isSet = true;
}

OAIConfigNodePropertyString
OAIComAdobeGraniteAuthSsoImplSsoAuthenticationHandlerProperties::getFormat() const {
    return format;
}
void
OAIComAdobeGraniteAuthSsoImplSsoAuthenticationHandlerProperties::setFormat(const OAIConfigNodePropertyString &format) {
    this->format = format;
    this->m_format_isSet = true;
}

OAIConfigNodePropertyString
OAIComAdobeGraniteAuthSsoImplSsoAuthenticationHandlerProperties::getTrustedCredentialsAttribute() const {
    return trusted_credentials_attribute;
}
void
OAIComAdobeGraniteAuthSsoImplSsoAuthenticationHandlerProperties::setTrustedCredentialsAttribute(const OAIConfigNodePropertyString &trusted_credentials_attribute) {
    this->trusted_credentials_attribute = trusted_credentials_attribute;
    this->m_trusted_credentials_attribute_isSet = true;
}


bool
OAIComAdobeGraniteAuthSsoImplSsoAuthenticationHandlerProperties::isSet() const {
    bool isObjectUpdated = false;
    do{ 
        if(path.isSet()){ isObjectUpdated = true; break;}
    
        if(service_ranking.isSet()){ isObjectUpdated = true; break;}
    
        if(jaas_control_flag.isSet()){ isObjectUpdated = true; break;}
    
        if(jaas_realm_name.isSet()){ isObjectUpdated = true; break;}
    
        if(jaas_ranking.isSet()){ isObjectUpdated = true; break;}
    
        if(headers.isSet()){ isObjectUpdated = true; break;}
    
        if(cookies.isSet()){ isObjectUpdated = true; break;}
    
        if(parameters.isSet()){ isObjectUpdated = true; break;}
    
        if(usermap.isSet()){ isObjectUpdated = true; break;}
    
        if(format.isSet()){ isObjectUpdated = true; break;}
    
        if(trusted_credentials_attribute.isSet()){ isObjectUpdated = true; break;}
    }while(false);
    return isObjectUpdated;
}

}

