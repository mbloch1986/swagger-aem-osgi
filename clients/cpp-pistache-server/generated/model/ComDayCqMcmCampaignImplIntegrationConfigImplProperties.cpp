/**
* Adobe Experience Manager OSGI config (AEM) API
* Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
*
* OpenAPI spec version: 1.0.0-pre.0
* Contact: opensource@shinesolutions.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/


#include "ComDayCqMcmCampaignImplIntegrationConfigImplProperties.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

ComDayCqMcmCampaignImplIntegrationConfigImplProperties::ComDayCqMcmCampaignImplIntegrationConfigImplProperties()
{
    m_Aem_mcm_campaign_formConstraintsIsSet = false;
    m_Aem_mcm_campaign_publicUrlIsSet = false;
    m_Aem_mcm_campaign_relaxedSSLIsSet = false;
    
}

ComDayCqMcmCampaignImplIntegrationConfigImplProperties::~ComDayCqMcmCampaignImplIntegrationConfigImplProperties()
{
}

void ComDayCqMcmCampaignImplIntegrationConfigImplProperties::validate()
{
    // TODO: implement validation
}

nlohmann::json ComDayCqMcmCampaignImplIntegrationConfigImplProperties::toJson() const
{
    nlohmann::json val = nlohmann::json::object();

    if(m_Aem_mcm_campaign_formConstraintsIsSet)
    {
        val["aem.mcm.campaign.formConstraints"] = ModelBase::toJson(m_Aem_mcm_campaign_formConstraints);
    }
    if(m_Aem_mcm_campaign_publicUrlIsSet)
    {
        val["aem.mcm.campaign.publicUrl"] = ModelBase::toJson(m_Aem_mcm_campaign_publicUrl);
    }
    if(m_Aem_mcm_campaign_relaxedSSLIsSet)
    {
        val["aem.mcm.campaign.relaxedSSL"] = ModelBase::toJson(m_Aem_mcm_campaign_relaxedSSL);
    }
    

    return val;
}

void ComDayCqMcmCampaignImplIntegrationConfigImplProperties::fromJson(nlohmann::json& val)
{
    if(val.find("aem.mcm.campaign.formConstraints") != val.end())
    {
        if(!val["aem.mcm.campaign.formConstraints"].is_null())
        {
            ConfigNodePropertyArray newItem;
            newItem.fromJson(val["aem.mcm.campaign.formConstraints"]);
            setAemMcmCampaignFormConstraints( newItem );
        }
        
    }
    if(val.find("aem.mcm.campaign.publicUrl") != val.end())
    {
        if(!val["aem.mcm.campaign.publicUrl"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["aem.mcm.campaign.publicUrl"]);
            setAemMcmCampaignPublicUrl( newItem );
        }
        
    }
    if(val.find("aem.mcm.campaign.relaxedSSL") != val.end())
    {
        if(!val["aem.mcm.campaign.relaxedSSL"].is_null())
        {
            ConfigNodePropertyBoolean newItem;
            newItem.fromJson(val["aem.mcm.campaign.relaxedSSL"]);
            setAemMcmCampaignRelaxedSSL( newItem );
        }
        
    }
    
}


ConfigNodePropertyArray ComDayCqMcmCampaignImplIntegrationConfigImplProperties::getAemMcmCampaignFormConstraints() const
{
    return m_Aem_mcm_campaign_formConstraints;
}
void ComDayCqMcmCampaignImplIntegrationConfigImplProperties::setAemMcmCampaignFormConstraints(ConfigNodePropertyArray const& value)
{
    m_Aem_mcm_campaign_formConstraints = value;
    m_Aem_mcm_campaign_formConstraintsIsSet = true;
}
bool ComDayCqMcmCampaignImplIntegrationConfigImplProperties::aemMcmCampaignFormConstraintsIsSet() const
{
    return m_Aem_mcm_campaign_formConstraintsIsSet;
}
void ComDayCqMcmCampaignImplIntegrationConfigImplProperties::unsetAem_mcm_campaign_formConstraints()
{
    m_Aem_mcm_campaign_formConstraintsIsSet = false;
}
ConfigNodePropertyString ComDayCqMcmCampaignImplIntegrationConfigImplProperties::getAemMcmCampaignPublicUrl() const
{
    return m_Aem_mcm_campaign_publicUrl;
}
void ComDayCqMcmCampaignImplIntegrationConfigImplProperties::setAemMcmCampaignPublicUrl(ConfigNodePropertyString const& value)
{
    m_Aem_mcm_campaign_publicUrl = value;
    m_Aem_mcm_campaign_publicUrlIsSet = true;
}
bool ComDayCqMcmCampaignImplIntegrationConfigImplProperties::aemMcmCampaignPublicUrlIsSet() const
{
    return m_Aem_mcm_campaign_publicUrlIsSet;
}
void ComDayCqMcmCampaignImplIntegrationConfigImplProperties::unsetAem_mcm_campaign_publicUrl()
{
    m_Aem_mcm_campaign_publicUrlIsSet = false;
}
ConfigNodePropertyBoolean ComDayCqMcmCampaignImplIntegrationConfigImplProperties::getAemMcmCampaignRelaxedSSL() const
{
    return m_Aem_mcm_campaign_relaxedSSL;
}
void ComDayCqMcmCampaignImplIntegrationConfigImplProperties::setAemMcmCampaignRelaxedSSL(ConfigNodePropertyBoolean const& value)
{
    m_Aem_mcm_campaign_relaxedSSL = value;
    m_Aem_mcm_campaign_relaxedSSLIsSet = true;
}
bool ComDayCqMcmCampaignImplIntegrationConfigImplProperties::aemMcmCampaignRelaxedSSLIsSet() const
{
    return m_Aem_mcm_campaign_relaxedSSLIsSet;
}
void ComDayCqMcmCampaignImplIntegrationConfigImplProperties::unsetAem_mcm_campaign_relaxedSSL()
{
    m_Aem_mcm_campaign_relaxedSSLIsSet = false;
}

}
}
}
}

