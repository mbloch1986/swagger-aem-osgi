/**
* Adobe Experience Manager OSGI config (AEM) API
* Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
*
* OpenAPI spec version: 1.0.0-pre.0
* Contact: opensource@shinesolutions.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
/*
 * ComAdobeGraniteAuthOauthProviderProperties.h
 *
 * 
 */

#ifndef ComAdobeGraniteAuthOauthProviderProperties_H_
#define ComAdobeGraniteAuthOauthProviderProperties_H_


#include "ModelBase.h"

#include "ConfigNodePropertyBoolean.h"
#include "ConfigNodePropertyArray.h"
#include "ConfigNodePropertyString.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
/// 
/// </summary>
class  ComAdobeGraniteAuthOauthProviderProperties
    : public ModelBase
{
public:
    ComAdobeGraniteAuthOauthProviderProperties();
    virtual ~ComAdobeGraniteAuthOauthProviderProperties();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    nlohmann::json toJson() const override;
    void fromJson(nlohmann::json& json) override;

    /////////////////////////////////////////////
    /// ComAdobeGraniteAuthOauthProviderProperties members

    /// <summary>
    /// 
    /// </summary>
    ConfigNodePropertyString getOauthConfigId() const;
    void setOauthConfigId(ConfigNodePropertyString const& value);
    bool oauthConfigIdIsSet() const;
    void unsetOauth_config_id();
    /// <summary>
    /// 
    /// </summary>
    ConfigNodePropertyString getOauthClientId() const;
    void setOauthClientId(ConfigNodePropertyString const& value);
    bool oauthClientIdIsSet() const;
    void unsetOauth_client_id();
    /// <summary>
    /// 
    /// </summary>
    ConfigNodePropertyString getOauthClientSecret() const;
    void setOauthClientSecret(ConfigNodePropertyString const& value);
    bool oauthClientSecretIsSet() const;
    void unsetOauth_client_secret();
    /// <summary>
    /// 
    /// </summary>
    ConfigNodePropertyArray getOauthScope() const;
    void setOauthScope(ConfigNodePropertyArray const& value);
    bool oauthScopeIsSet() const;
    void unsetOauth_scope();
    /// <summary>
    /// 
    /// </summary>
    ConfigNodePropertyString getOauthConfigProviderId() const;
    void setOauthConfigProviderId(ConfigNodePropertyString const& value);
    bool oauthConfigProviderIdIsSet() const;
    void unsetOauth_config_provider_id();
    /// <summary>
    /// 
    /// </summary>
    ConfigNodePropertyBoolean getOauthCreateUsers() const;
    void setOauthCreateUsers(ConfigNodePropertyBoolean const& value);
    bool oauthCreateUsersIsSet() const;
    void unsetOauth_create_users();
    /// <summary>
    /// 
    /// </summary>
    ConfigNodePropertyString getOauthUseridProperty() const;
    void setOauthUseridProperty(ConfigNodePropertyString const& value);
    bool oauthUseridPropertyIsSet() const;
    void unsetOauth_userid_property();
    /// <summary>
    /// 
    /// </summary>
    ConfigNodePropertyBoolean getForceStrictUsernameMatching() const;
    void setForceStrictUsernameMatching(ConfigNodePropertyBoolean const& value);
    bool forceStrictUsernameMatchingIsSet() const;
    void unsetForce_strict_username_matching();
    /// <summary>
    /// 
    /// </summary>
    ConfigNodePropertyBoolean getOauthEncodeUserids() const;
    void setOauthEncodeUserids(ConfigNodePropertyBoolean const& value);
    bool oauthEncodeUseridsIsSet() const;
    void unsetOauth_encode_userids();
    /// <summary>
    /// 
    /// </summary>
    ConfigNodePropertyBoolean getOauthHashUserids() const;
    void setOauthHashUserids(ConfigNodePropertyBoolean const& value);
    bool oauthHashUseridsIsSet() const;
    void unsetOauth_hash_userids();
    /// <summary>
    /// 
    /// </summary>
    ConfigNodePropertyString getOauthCallBackUrl() const;
    void setOauthCallBackUrl(ConfigNodePropertyString const& value);
    bool oauthCallBackUrlIsSet() const;
    void unsetOauth_callBackUrl();
    /// <summary>
    /// 
    /// </summary>
    ConfigNodePropertyBoolean getOauthAccessTokenPersist() const;
    void setOauthAccessTokenPersist(ConfigNodePropertyBoolean const& value);
    bool oauthAccessTokenPersistIsSet() const;
    void unsetOauth_access_token_persist();
    /// <summary>
    /// 
    /// </summary>
    ConfigNodePropertyBoolean getOauthAccessTokenPersistCookie() const;
    void setOauthAccessTokenPersistCookie(ConfigNodePropertyBoolean const& value);
    bool oauthAccessTokenPersistCookieIsSet() const;
    void unsetOauth_access_token_persist_cookie();
    /// <summary>
    /// 
    /// </summary>
    ConfigNodePropertyBoolean getOauthCsrfStateProtection() const;
    void setOauthCsrfStateProtection(ConfigNodePropertyBoolean const& value);
    bool oauthCsrfStateProtectionIsSet() const;
    void unsetOauth_csrf_state_protection();
    /// <summary>
    /// 
    /// </summary>
    ConfigNodePropertyBoolean getOauthRedirectRequestParams() const;
    void setOauthRedirectRequestParams(ConfigNodePropertyBoolean const& value);
    bool oauthRedirectRequestParamsIsSet() const;
    void unsetOauth_redirect_request_params();
    /// <summary>
    /// 
    /// </summary>
    ConfigNodePropertyBoolean getOauthConfigSiblingsAllow() const;
    void setOauthConfigSiblingsAllow(ConfigNodePropertyBoolean const& value);
    bool oauthConfigSiblingsAllowIsSet() const;
    void unsetOauth_config_siblings_allow();

protected:
    ConfigNodePropertyString m_Oauth_config_id;
    bool m_Oauth_config_idIsSet;
    ConfigNodePropertyString m_Oauth_client_id;
    bool m_Oauth_client_idIsSet;
    ConfigNodePropertyString m_Oauth_client_secret;
    bool m_Oauth_client_secretIsSet;
    ConfigNodePropertyArray m_Oauth_scope;
    bool m_Oauth_scopeIsSet;
    ConfigNodePropertyString m_Oauth_config_provider_id;
    bool m_Oauth_config_provider_idIsSet;
    ConfigNodePropertyBoolean m_Oauth_create_users;
    bool m_Oauth_create_usersIsSet;
    ConfigNodePropertyString m_Oauth_userid_property;
    bool m_Oauth_userid_propertyIsSet;
    ConfigNodePropertyBoolean m_Force_strict_username_matching;
    bool m_Force_strict_username_matchingIsSet;
    ConfigNodePropertyBoolean m_Oauth_encode_userids;
    bool m_Oauth_encode_useridsIsSet;
    ConfigNodePropertyBoolean m_Oauth_hash_userids;
    bool m_Oauth_hash_useridsIsSet;
    ConfigNodePropertyString m_Oauth_callBackUrl;
    bool m_Oauth_callBackUrlIsSet;
    ConfigNodePropertyBoolean m_Oauth_access_token_persist;
    bool m_Oauth_access_token_persistIsSet;
    ConfigNodePropertyBoolean m_Oauth_access_token_persist_cookie;
    bool m_Oauth_access_token_persist_cookieIsSet;
    ConfigNodePropertyBoolean m_Oauth_csrf_state_protection;
    bool m_Oauth_csrf_state_protectionIsSet;
    ConfigNodePropertyBoolean m_Oauth_redirect_request_params;
    bool m_Oauth_redirect_request_paramsIsSet;
    ConfigNodePropertyBoolean m_Oauth_config_siblings_allow;
    bool m_Oauth_config_siblings_allowIsSet;
};

}
}
}
}

#endif /* ComAdobeGraniteAuthOauthProviderProperties_H_ */
