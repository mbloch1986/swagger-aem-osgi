/*
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OAS-api/OAS-codegen.git
 * Do not edit the class manually.
 */

/**
 * OASComDayCqWcmFoundationImplHTTPAuth
 */
public class OASComDayCqWcmFoundationImplHTTPAuth implements OAS.MappedProperties {
    /**
     * Get path
     * @return path
     */
    public OASConfigNodePropertyString path { get; set; }

    /**
     * Get authHttpNologin
     * @return authHttpNologin
     */
    public OASConfigNodePropertyBoolean authHttpNologin { get; set; }

    /**
     * Get authHttpRealm
     * @return authHttpRealm
     */
    public OASConfigNodePropertyString authHttpRealm { get; set; }

    /**
     * Get authDefaultLoginpage
     * @return authDefaultLoginpage
     */
    public OASConfigNodePropertyString authDefaultLoginpage { get; set; }

    /**
     * Get authCredForm
     * @return authCredForm
     */
    public OASConfigNodePropertyArray authCredForm { get; set; }

    /**
     * Get authCredUtf8
     * @return authCredUtf8
     */
    public OASConfigNodePropertyArray authCredUtf8 { get; set; }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'auth.http.nologin' => 'authHttpNologin',
        'auth.http.realm' => 'authHttpRealm',
        'auth.default.loginpage' => 'authDefaultLoginpage',
        'auth.cred.form' => 'authCredForm',
        'auth.cred.utf8' => 'authCredUtf8'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    public static OASComDayCqWcmFoundationImplHTTPAuth getExample() {
        OASComDayCqWcmFoundationImplHTTPAuth comDayCqWcmFoundationImplHTTPAuthHandlerProperties = new OASComDayCqWcmFoundationImplHTTPAuth();
          comDayCqWcmFoundationImplHTTPAuthHandlerProperties.path = OASConfigNodePropertyString.getExample();
          comDayCqWcmFoundationImplHTTPAuthHandlerProperties.authHttpNologin = OASConfigNodePropertyBoolean.getExample();
          comDayCqWcmFoundationImplHTTPAuthHandlerProperties.authHttpRealm = OASConfigNodePropertyString.getExample();
          comDayCqWcmFoundationImplHTTPAuthHandlerProperties.authDefaultLoginpage = OASConfigNodePropertyString.getExample();
          comDayCqWcmFoundationImplHTTPAuthHandlerProperties.authCredForm = OASConfigNodePropertyArray.getExample();
          comDayCqWcmFoundationImplHTTPAuthHandlerProperties.authCredUtf8 = OASConfigNodePropertyArray.getExample();
        return comDayCqWcmFoundationImplHTTPAuthHandlerProperties;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof OASComDayCqWcmFoundationImplHTTPAuth) {           
            OASComDayCqWcmFoundationImplHTTPAuth comDayCqWcmFoundationImplHTTPAuthHandlerProperties = (OASComDayCqWcmFoundationImplHTTPAuth) obj;
            return this.path == comDayCqWcmFoundationImplHTTPAuthHandlerProperties.path
                && this.authHttpNologin == comDayCqWcmFoundationImplHTTPAuthHandlerProperties.authHttpNologin
                && this.authHttpRealm == comDayCqWcmFoundationImplHTTPAuthHandlerProperties.authHttpRealm
                && this.authDefaultLoginpage == comDayCqWcmFoundationImplHTTPAuthHandlerProperties.authDefaultLoginpage
                && this.authCredForm == comDayCqWcmFoundationImplHTTPAuthHandlerProperties.authCredForm
                && this.authCredUtf8 == comDayCqWcmFoundationImplHTTPAuthHandlerProperties.authCredUtf8;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (path == null ? 0 : System.hashCode(path));
        hashCode = (17 * hashCode) + (authHttpNologin == null ? 0 : System.hashCode(authHttpNologin));
        hashCode = (17 * hashCode) + (authHttpRealm == null ? 0 : System.hashCode(authHttpRealm));
        hashCode = (17 * hashCode) + (authDefaultLoginpage == null ? 0 : System.hashCode(authDefaultLoginpage));
        hashCode = (17 * hashCode) + (authCredForm == null ? 0 : System.hashCode(authCredForm));
        hashCode = (17 * hashCode) + (authCredUtf8 == null ? 0 : System.hashCode(authCredUtf8));
        return hashCode;
    }
}

