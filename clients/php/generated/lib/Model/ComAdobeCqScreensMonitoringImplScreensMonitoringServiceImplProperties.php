<?php
/**
 * ComAdobeCqScreensMonitoringImplScreensMonitoringServiceImplProperties
 *
 * PHP version 5
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Adobe Experience Manager OSGI config (AEM) API
 *
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 3.2.1-SNAPSHOT
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace OpenAPI\Client\Model;

use \ArrayAccess;
use \OpenAPI\Client\ObjectSerializer;

/**
 * ComAdobeCqScreensMonitoringImplScreensMonitoringServiceImplProperties Class Doc Comment
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class ComAdobeCqScreensMonitoringImplScreensMonitoringServiceImplProperties implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'comAdobeCqScreensMonitoringImplScreensMonitoringServiceImplProperties';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'com_adobe_cq_screens_monitoring_impl_screens_monitoring_service_impl_project_path' => '\OpenAPI\Client\Model\ConfigNodePropertyArray',
        'com_adobe_cq_screens_monitoring_impl_screens_monitoring_service_impl_schedule_frequency' => '\OpenAPI\Client\Model\ConfigNodePropertyString',
        'com_adobe_cq_screens_monitoring_impl_screens_monitoring_service_impl_ping_timeout' => '\OpenAPI\Client\Model\ConfigNodePropertyInteger',
        'com_adobe_cq_screens_monitoring_impl_screens_monitoring_service_impl_recipients' => '\OpenAPI\Client\Model\ConfigNodePropertyString',
        'com_adobe_cq_screens_monitoring_impl_screens_monitoring_service_impl_smtpserver' => '\OpenAPI\Client\Model\ConfigNodePropertyString',
        'com_adobe_cq_screens_monitoring_impl_screens_monitoring_service_impl_smtpport' => '\OpenAPI\Client\Model\ConfigNodePropertyInteger',
        'com_adobe_cq_screens_monitoring_impl_screens_monitoring_service_impl_usetls' => '\OpenAPI\Client\Model\ConfigNodePropertyBoolean',
        'com_adobe_cq_screens_monitoring_impl_screens_monitoring_service_impl_username' => '\OpenAPI\Client\Model\ConfigNodePropertyString',
        'com_adobe_cq_screens_monitoring_impl_screens_monitoring_service_impl_password' => '\OpenAPI\Client\Model\ConfigNodePropertyString'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPIFormats = [
        'com_adobe_cq_screens_monitoring_impl_screens_monitoring_service_impl_project_path' => null,
        'com_adobe_cq_screens_monitoring_impl_screens_monitoring_service_impl_schedule_frequency' => null,
        'com_adobe_cq_screens_monitoring_impl_screens_monitoring_service_impl_ping_timeout' => null,
        'com_adobe_cq_screens_monitoring_impl_screens_monitoring_service_impl_recipients' => null,
        'com_adobe_cq_screens_monitoring_impl_screens_monitoring_service_impl_smtpserver' => null,
        'com_adobe_cq_screens_monitoring_impl_screens_monitoring_service_impl_smtpport' => null,
        'com_adobe_cq_screens_monitoring_impl_screens_monitoring_service_impl_usetls' => null,
        'com_adobe_cq_screens_monitoring_impl_screens_monitoring_service_impl_username' => null,
        'com_adobe_cq_screens_monitoring_impl_screens_monitoring_service_impl_password' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'com_adobe_cq_screens_monitoring_impl_screens_monitoring_service_impl_project_path' => 'com.adobe.cq.screens.monitoring.impl.ScreensMonitoringServiceImpl.projectPath',
        'com_adobe_cq_screens_monitoring_impl_screens_monitoring_service_impl_schedule_frequency' => 'com.adobe.cq.screens.monitoring.impl.ScreensMonitoringServiceImpl.scheduleFrequency',
        'com_adobe_cq_screens_monitoring_impl_screens_monitoring_service_impl_ping_timeout' => 'com.adobe.cq.screens.monitoring.impl.ScreensMonitoringServiceImpl.pingTimeout',
        'com_adobe_cq_screens_monitoring_impl_screens_monitoring_service_impl_recipients' => 'com.adobe.cq.screens.monitoring.impl.ScreensMonitoringServiceImpl.recipients',
        'com_adobe_cq_screens_monitoring_impl_screens_monitoring_service_impl_smtpserver' => 'com.adobe.cq.screens.monitoring.impl.ScreensMonitoringServiceImpl.smtpserver',
        'com_adobe_cq_screens_monitoring_impl_screens_monitoring_service_impl_smtpport' => 'com.adobe.cq.screens.monitoring.impl.ScreensMonitoringServiceImpl.smtpport',
        'com_adobe_cq_screens_monitoring_impl_screens_monitoring_service_impl_usetls' => 'com.adobe.cq.screens.monitoring.impl.ScreensMonitoringServiceImpl.usetls',
        'com_adobe_cq_screens_monitoring_impl_screens_monitoring_service_impl_username' => 'com.adobe.cq.screens.monitoring.impl.ScreensMonitoringServiceImpl.username',
        'com_adobe_cq_screens_monitoring_impl_screens_monitoring_service_impl_password' => 'com.adobe.cq.screens.monitoring.impl.ScreensMonitoringServiceImpl.password'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'com_adobe_cq_screens_monitoring_impl_screens_monitoring_service_impl_project_path' => 'setComAdobeCqScreensMonitoringImplScreensMonitoringServiceImplProjectPath',
        'com_adobe_cq_screens_monitoring_impl_screens_monitoring_service_impl_schedule_frequency' => 'setComAdobeCqScreensMonitoringImplScreensMonitoringServiceImplScheduleFrequency',
        'com_adobe_cq_screens_monitoring_impl_screens_monitoring_service_impl_ping_timeout' => 'setComAdobeCqScreensMonitoringImplScreensMonitoringServiceImplPingTimeout',
        'com_adobe_cq_screens_monitoring_impl_screens_monitoring_service_impl_recipients' => 'setComAdobeCqScreensMonitoringImplScreensMonitoringServiceImplRecipients',
        'com_adobe_cq_screens_monitoring_impl_screens_monitoring_service_impl_smtpserver' => 'setComAdobeCqScreensMonitoringImplScreensMonitoringServiceImplSmtpserver',
        'com_adobe_cq_screens_monitoring_impl_screens_monitoring_service_impl_smtpport' => 'setComAdobeCqScreensMonitoringImplScreensMonitoringServiceImplSmtpport',
        'com_adobe_cq_screens_monitoring_impl_screens_monitoring_service_impl_usetls' => 'setComAdobeCqScreensMonitoringImplScreensMonitoringServiceImplUsetls',
        'com_adobe_cq_screens_monitoring_impl_screens_monitoring_service_impl_username' => 'setComAdobeCqScreensMonitoringImplScreensMonitoringServiceImplUsername',
        'com_adobe_cq_screens_monitoring_impl_screens_monitoring_service_impl_password' => 'setComAdobeCqScreensMonitoringImplScreensMonitoringServiceImplPassword'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'com_adobe_cq_screens_monitoring_impl_screens_monitoring_service_impl_project_path' => 'getComAdobeCqScreensMonitoringImplScreensMonitoringServiceImplProjectPath',
        'com_adobe_cq_screens_monitoring_impl_screens_monitoring_service_impl_schedule_frequency' => 'getComAdobeCqScreensMonitoringImplScreensMonitoringServiceImplScheduleFrequency',
        'com_adobe_cq_screens_monitoring_impl_screens_monitoring_service_impl_ping_timeout' => 'getComAdobeCqScreensMonitoringImplScreensMonitoringServiceImplPingTimeout',
        'com_adobe_cq_screens_monitoring_impl_screens_monitoring_service_impl_recipients' => 'getComAdobeCqScreensMonitoringImplScreensMonitoringServiceImplRecipients',
        'com_adobe_cq_screens_monitoring_impl_screens_monitoring_service_impl_smtpserver' => 'getComAdobeCqScreensMonitoringImplScreensMonitoringServiceImplSmtpserver',
        'com_adobe_cq_screens_monitoring_impl_screens_monitoring_service_impl_smtpport' => 'getComAdobeCqScreensMonitoringImplScreensMonitoringServiceImplSmtpport',
        'com_adobe_cq_screens_monitoring_impl_screens_monitoring_service_impl_usetls' => 'getComAdobeCqScreensMonitoringImplScreensMonitoringServiceImplUsetls',
        'com_adobe_cq_screens_monitoring_impl_screens_monitoring_service_impl_username' => 'getComAdobeCqScreensMonitoringImplScreensMonitoringServiceImplUsername',
        'com_adobe_cq_screens_monitoring_impl_screens_monitoring_service_impl_password' => 'getComAdobeCqScreensMonitoringImplScreensMonitoringServiceImplPassword'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['com_adobe_cq_screens_monitoring_impl_screens_monitoring_service_impl_project_path'] = isset($data['com_adobe_cq_screens_monitoring_impl_screens_monitoring_service_impl_project_path']) ? $data['com_adobe_cq_screens_monitoring_impl_screens_monitoring_service_impl_project_path'] : null;
        $this->container['com_adobe_cq_screens_monitoring_impl_screens_monitoring_service_impl_schedule_frequency'] = isset($data['com_adobe_cq_screens_monitoring_impl_screens_monitoring_service_impl_schedule_frequency']) ? $data['com_adobe_cq_screens_monitoring_impl_screens_monitoring_service_impl_schedule_frequency'] : null;
        $this->container['com_adobe_cq_screens_monitoring_impl_screens_monitoring_service_impl_ping_timeout'] = isset($data['com_adobe_cq_screens_monitoring_impl_screens_monitoring_service_impl_ping_timeout']) ? $data['com_adobe_cq_screens_monitoring_impl_screens_monitoring_service_impl_ping_timeout'] : null;
        $this->container['com_adobe_cq_screens_monitoring_impl_screens_monitoring_service_impl_recipients'] = isset($data['com_adobe_cq_screens_monitoring_impl_screens_monitoring_service_impl_recipients']) ? $data['com_adobe_cq_screens_monitoring_impl_screens_monitoring_service_impl_recipients'] : null;
        $this->container['com_adobe_cq_screens_monitoring_impl_screens_monitoring_service_impl_smtpserver'] = isset($data['com_adobe_cq_screens_monitoring_impl_screens_monitoring_service_impl_smtpserver']) ? $data['com_adobe_cq_screens_monitoring_impl_screens_monitoring_service_impl_smtpserver'] : null;
        $this->container['com_adobe_cq_screens_monitoring_impl_screens_monitoring_service_impl_smtpport'] = isset($data['com_adobe_cq_screens_monitoring_impl_screens_monitoring_service_impl_smtpport']) ? $data['com_adobe_cq_screens_monitoring_impl_screens_monitoring_service_impl_smtpport'] : null;
        $this->container['com_adobe_cq_screens_monitoring_impl_screens_monitoring_service_impl_usetls'] = isset($data['com_adobe_cq_screens_monitoring_impl_screens_monitoring_service_impl_usetls']) ? $data['com_adobe_cq_screens_monitoring_impl_screens_monitoring_service_impl_usetls'] : null;
        $this->container['com_adobe_cq_screens_monitoring_impl_screens_monitoring_service_impl_username'] = isset($data['com_adobe_cq_screens_monitoring_impl_screens_monitoring_service_impl_username']) ? $data['com_adobe_cq_screens_monitoring_impl_screens_monitoring_service_impl_username'] : null;
        $this->container['com_adobe_cq_screens_monitoring_impl_screens_monitoring_service_impl_password'] = isset($data['com_adobe_cq_screens_monitoring_impl_screens_monitoring_service_impl_password']) ? $data['com_adobe_cq_screens_monitoring_impl_screens_monitoring_service_impl_password'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets com_adobe_cq_screens_monitoring_impl_screens_monitoring_service_impl_project_path
     *
     * @return \OpenAPI\Client\Model\ConfigNodePropertyArray|null
     */
    public function getComAdobeCqScreensMonitoringImplScreensMonitoringServiceImplProjectPath()
    {
        return $this->container['com_adobe_cq_screens_monitoring_impl_screens_monitoring_service_impl_project_path'];
    }

    /**
     * Sets com_adobe_cq_screens_monitoring_impl_screens_monitoring_service_impl_project_path
     *
     * @param \OpenAPI\Client\Model\ConfigNodePropertyArray|null $com_adobe_cq_screens_monitoring_impl_screens_monitoring_service_impl_project_path com_adobe_cq_screens_monitoring_impl_screens_monitoring_service_impl_project_path
     *
     * @return $this
     */
    public function setComAdobeCqScreensMonitoringImplScreensMonitoringServiceImplProjectPath($com_adobe_cq_screens_monitoring_impl_screens_monitoring_service_impl_project_path)
    {
        $this->container['com_adobe_cq_screens_monitoring_impl_screens_monitoring_service_impl_project_path'] = $com_adobe_cq_screens_monitoring_impl_screens_monitoring_service_impl_project_path;

        return $this;
    }

    /**
     * Gets com_adobe_cq_screens_monitoring_impl_screens_monitoring_service_impl_schedule_frequency
     *
     * @return \OpenAPI\Client\Model\ConfigNodePropertyString|null
     */
    public function getComAdobeCqScreensMonitoringImplScreensMonitoringServiceImplScheduleFrequency()
    {
        return $this->container['com_adobe_cq_screens_monitoring_impl_screens_monitoring_service_impl_schedule_frequency'];
    }

    /**
     * Sets com_adobe_cq_screens_monitoring_impl_screens_monitoring_service_impl_schedule_frequency
     *
     * @param \OpenAPI\Client\Model\ConfigNodePropertyString|null $com_adobe_cq_screens_monitoring_impl_screens_monitoring_service_impl_schedule_frequency com_adobe_cq_screens_monitoring_impl_screens_monitoring_service_impl_schedule_frequency
     *
     * @return $this
     */
    public function setComAdobeCqScreensMonitoringImplScreensMonitoringServiceImplScheduleFrequency($com_adobe_cq_screens_monitoring_impl_screens_monitoring_service_impl_schedule_frequency)
    {
        $this->container['com_adobe_cq_screens_monitoring_impl_screens_monitoring_service_impl_schedule_frequency'] = $com_adobe_cq_screens_monitoring_impl_screens_monitoring_service_impl_schedule_frequency;

        return $this;
    }

    /**
     * Gets com_adobe_cq_screens_monitoring_impl_screens_monitoring_service_impl_ping_timeout
     *
     * @return \OpenAPI\Client\Model\ConfigNodePropertyInteger|null
     */
    public function getComAdobeCqScreensMonitoringImplScreensMonitoringServiceImplPingTimeout()
    {
        return $this->container['com_adobe_cq_screens_monitoring_impl_screens_monitoring_service_impl_ping_timeout'];
    }

    /**
     * Sets com_adobe_cq_screens_monitoring_impl_screens_monitoring_service_impl_ping_timeout
     *
     * @param \OpenAPI\Client\Model\ConfigNodePropertyInteger|null $com_adobe_cq_screens_monitoring_impl_screens_monitoring_service_impl_ping_timeout com_adobe_cq_screens_monitoring_impl_screens_monitoring_service_impl_ping_timeout
     *
     * @return $this
     */
    public function setComAdobeCqScreensMonitoringImplScreensMonitoringServiceImplPingTimeout($com_adobe_cq_screens_monitoring_impl_screens_monitoring_service_impl_ping_timeout)
    {
        $this->container['com_adobe_cq_screens_monitoring_impl_screens_monitoring_service_impl_ping_timeout'] = $com_adobe_cq_screens_monitoring_impl_screens_monitoring_service_impl_ping_timeout;

        return $this;
    }

    /**
     * Gets com_adobe_cq_screens_monitoring_impl_screens_monitoring_service_impl_recipients
     *
     * @return \OpenAPI\Client\Model\ConfigNodePropertyString|null
     */
    public function getComAdobeCqScreensMonitoringImplScreensMonitoringServiceImplRecipients()
    {
        return $this->container['com_adobe_cq_screens_monitoring_impl_screens_monitoring_service_impl_recipients'];
    }

    /**
     * Sets com_adobe_cq_screens_monitoring_impl_screens_monitoring_service_impl_recipients
     *
     * @param \OpenAPI\Client\Model\ConfigNodePropertyString|null $com_adobe_cq_screens_monitoring_impl_screens_monitoring_service_impl_recipients com_adobe_cq_screens_monitoring_impl_screens_monitoring_service_impl_recipients
     *
     * @return $this
     */
    public function setComAdobeCqScreensMonitoringImplScreensMonitoringServiceImplRecipients($com_adobe_cq_screens_monitoring_impl_screens_monitoring_service_impl_recipients)
    {
        $this->container['com_adobe_cq_screens_monitoring_impl_screens_monitoring_service_impl_recipients'] = $com_adobe_cq_screens_monitoring_impl_screens_monitoring_service_impl_recipients;

        return $this;
    }

    /**
     * Gets com_adobe_cq_screens_monitoring_impl_screens_monitoring_service_impl_smtpserver
     *
     * @return \OpenAPI\Client\Model\ConfigNodePropertyString|null
     */
    public function getComAdobeCqScreensMonitoringImplScreensMonitoringServiceImplSmtpserver()
    {
        return $this->container['com_adobe_cq_screens_monitoring_impl_screens_monitoring_service_impl_smtpserver'];
    }

    /**
     * Sets com_adobe_cq_screens_monitoring_impl_screens_monitoring_service_impl_smtpserver
     *
     * @param \OpenAPI\Client\Model\ConfigNodePropertyString|null $com_adobe_cq_screens_monitoring_impl_screens_monitoring_service_impl_smtpserver com_adobe_cq_screens_monitoring_impl_screens_monitoring_service_impl_smtpserver
     *
     * @return $this
     */
    public function setComAdobeCqScreensMonitoringImplScreensMonitoringServiceImplSmtpserver($com_adobe_cq_screens_monitoring_impl_screens_monitoring_service_impl_smtpserver)
    {
        $this->container['com_adobe_cq_screens_monitoring_impl_screens_monitoring_service_impl_smtpserver'] = $com_adobe_cq_screens_monitoring_impl_screens_monitoring_service_impl_smtpserver;

        return $this;
    }

    /**
     * Gets com_adobe_cq_screens_monitoring_impl_screens_monitoring_service_impl_smtpport
     *
     * @return \OpenAPI\Client\Model\ConfigNodePropertyInteger|null
     */
    public function getComAdobeCqScreensMonitoringImplScreensMonitoringServiceImplSmtpport()
    {
        return $this->container['com_adobe_cq_screens_monitoring_impl_screens_monitoring_service_impl_smtpport'];
    }

    /**
     * Sets com_adobe_cq_screens_monitoring_impl_screens_monitoring_service_impl_smtpport
     *
     * @param \OpenAPI\Client\Model\ConfigNodePropertyInteger|null $com_adobe_cq_screens_monitoring_impl_screens_monitoring_service_impl_smtpport com_adobe_cq_screens_monitoring_impl_screens_monitoring_service_impl_smtpport
     *
     * @return $this
     */
    public function setComAdobeCqScreensMonitoringImplScreensMonitoringServiceImplSmtpport($com_adobe_cq_screens_monitoring_impl_screens_monitoring_service_impl_smtpport)
    {
        $this->container['com_adobe_cq_screens_monitoring_impl_screens_monitoring_service_impl_smtpport'] = $com_adobe_cq_screens_monitoring_impl_screens_monitoring_service_impl_smtpport;

        return $this;
    }

    /**
     * Gets com_adobe_cq_screens_monitoring_impl_screens_monitoring_service_impl_usetls
     *
     * @return \OpenAPI\Client\Model\ConfigNodePropertyBoolean|null
     */
    public function getComAdobeCqScreensMonitoringImplScreensMonitoringServiceImplUsetls()
    {
        return $this->container['com_adobe_cq_screens_monitoring_impl_screens_monitoring_service_impl_usetls'];
    }

    /**
     * Sets com_adobe_cq_screens_monitoring_impl_screens_monitoring_service_impl_usetls
     *
     * @param \OpenAPI\Client\Model\ConfigNodePropertyBoolean|null $com_adobe_cq_screens_monitoring_impl_screens_monitoring_service_impl_usetls com_adobe_cq_screens_monitoring_impl_screens_monitoring_service_impl_usetls
     *
     * @return $this
     */
    public function setComAdobeCqScreensMonitoringImplScreensMonitoringServiceImplUsetls($com_adobe_cq_screens_monitoring_impl_screens_monitoring_service_impl_usetls)
    {
        $this->container['com_adobe_cq_screens_monitoring_impl_screens_monitoring_service_impl_usetls'] = $com_adobe_cq_screens_monitoring_impl_screens_monitoring_service_impl_usetls;

        return $this;
    }

    /**
     * Gets com_adobe_cq_screens_monitoring_impl_screens_monitoring_service_impl_username
     *
     * @return \OpenAPI\Client\Model\ConfigNodePropertyString|null
     */
    public function getComAdobeCqScreensMonitoringImplScreensMonitoringServiceImplUsername()
    {
        return $this->container['com_adobe_cq_screens_monitoring_impl_screens_monitoring_service_impl_username'];
    }

    /**
     * Sets com_adobe_cq_screens_monitoring_impl_screens_monitoring_service_impl_username
     *
     * @param \OpenAPI\Client\Model\ConfigNodePropertyString|null $com_adobe_cq_screens_monitoring_impl_screens_monitoring_service_impl_username com_adobe_cq_screens_monitoring_impl_screens_monitoring_service_impl_username
     *
     * @return $this
     */
    public function setComAdobeCqScreensMonitoringImplScreensMonitoringServiceImplUsername($com_adobe_cq_screens_monitoring_impl_screens_monitoring_service_impl_username)
    {
        $this->container['com_adobe_cq_screens_monitoring_impl_screens_monitoring_service_impl_username'] = $com_adobe_cq_screens_monitoring_impl_screens_monitoring_service_impl_username;

        return $this;
    }

    /**
     * Gets com_adobe_cq_screens_monitoring_impl_screens_monitoring_service_impl_password
     *
     * @return \OpenAPI\Client\Model\ConfigNodePropertyString|null
     */
    public function getComAdobeCqScreensMonitoringImplScreensMonitoringServiceImplPassword()
    {
        return $this->container['com_adobe_cq_screens_monitoring_impl_screens_monitoring_service_impl_password'];
    }

    /**
     * Sets com_adobe_cq_screens_monitoring_impl_screens_monitoring_service_impl_password
     *
     * @param \OpenAPI\Client\Model\ConfigNodePropertyString|null $com_adobe_cq_screens_monitoring_impl_screens_monitoring_service_impl_password com_adobe_cq_screens_monitoring_impl_screens_monitoring_service_impl_password
     *
     * @return $this
     */
    public function setComAdobeCqScreensMonitoringImplScreensMonitoringServiceImplPassword($com_adobe_cq_screens_monitoring_impl_screens_monitoring_service_impl_password)
    {
        $this->container['com_adobe_cq_screens_monitoring_impl_screens_monitoring_service_impl_password'] = $com_adobe_cq_screens_monitoring_impl_screens_monitoring_service_impl_password;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }
}


