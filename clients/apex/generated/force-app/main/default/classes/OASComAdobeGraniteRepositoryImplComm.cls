/*
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OAS-api/OAS-codegen.git
 * Do not edit the class manually.
 */

/**
 * OASComAdobeGraniteRepositoryImplComm
 */
public class OASComAdobeGraniteRepositoryImplComm {
    /**
     * Get enabled
     * @return enabled
     */
    public OASConfigNodePropertyBoolean enabled { get; set; }

    /**
     * Get intervalSeconds
     * @return intervalSeconds
     */
    public OASConfigNodePropertyInteger intervalSeconds { get; set; }

    /**
     * Get commitsPerIntervalThreshold
     * @return commitsPerIntervalThreshold
     */
    public OASConfigNodePropertyInteger commitsPerIntervalThreshold { get; set; }

    /**
     * Get maxLocationLength
     * @return maxLocationLength
     */
    public OASConfigNodePropertyInteger maxLocationLength { get; set; }

    /**
     * Get maxDetailsShown
     * @return maxDetailsShown
     */
    public OASConfigNodePropertyInteger maxDetailsShown { get; set; }

    /**
     * Get minDetailsPercentage
     * @return minDetailsPercentage
     */
    public OASConfigNodePropertyInteger minDetailsPercentage { get; set; }

    /**
     * Get threadMatchers
     * @return threadMatchers
     */
    public OASConfigNodePropertyArray threadMatchers { get; set; }

    /**
     * Get maxGreedyDepth
     * @return maxGreedyDepth
     */
    public OASConfigNodePropertyInteger maxGreedyDepth { get; set; }

    /**
     * Get greedyStackMatchers
     * @return greedyStackMatchers
     */
    public OASConfigNodePropertyString greedyStackMatchers { get; set; }

    /**
     * Get stackFilters
     * @return stackFilters
     */
    public OASConfigNodePropertyArray stackFilters { get; set; }

    /**
     * Get stackMatchers
     * @return stackMatchers
     */
    public OASConfigNodePropertyArray stackMatchers { get; set; }

    /**
     * Get stackCategorizers
     * @return stackCategorizers
     */
    public OASConfigNodePropertyArray stackCategorizers { get; set; }

    /**
     * Get stackShorteners
     * @return stackShorteners
     */
    public OASConfigNodePropertyArray stackShorteners { get; set; }

    public static OASComAdobeGraniteRepositoryImplComm getExample() {
        OASComAdobeGraniteRepositoryImplComm comAdobeGraniteRepositoryImplCommitStatsConfigProperties = new OASComAdobeGraniteRepositoryImplComm();
          comAdobeGraniteRepositoryImplCommitStatsConfigProperties.enabled = OASConfigNodePropertyBoolean.getExample();
          comAdobeGraniteRepositoryImplCommitStatsConfigProperties.intervalSeconds = OASConfigNodePropertyInteger.getExample();
          comAdobeGraniteRepositoryImplCommitStatsConfigProperties.commitsPerIntervalThreshold = OASConfigNodePropertyInteger.getExample();
          comAdobeGraniteRepositoryImplCommitStatsConfigProperties.maxLocationLength = OASConfigNodePropertyInteger.getExample();
          comAdobeGraniteRepositoryImplCommitStatsConfigProperties.maxDetailsShown = OASConfigNodePropertyInteger.getExample();
          comAdobeGraniteRepositoryImplCommitStatsConfigProperties.minDetailsPercentage = OASConfigNodePropertyInteger.getExample();
          comAdobeGraniteRepositoryImplCommitStatsConfigProperties.threadMatchers = OASConfigNodePropertyArray.getExample();
          comAdobeGraniteRepositoryImplCommitStatsConfigProperties.maxGreedyDepth = OASConfigNodePropertyInteger.getExample();
          comAdobeGraniteRepositoryImplCommitStatsConfigProperties.greedyStackMatchers = OASConfigNodePropertyString.getExample();
          comAdobeGraniteRepositoryImplCommitStatsConfigProperties.stackFilters = OASConfigNodePropertyArray.getExample();
          comAdobeGraniteRepositoryImplCommitStatsConfigProperties.stackMatchers = OASConfigNodePropertyArray.getExample();
          comAdobeGraniteRepositoryImplCommitStatsConfigProperties.stackCategorizers = OASConfigNodePropertyArray.getExample();
          comAdobeGraniteRepositoryImplCommitStatsConfigProperties.stackShorteners = OASConfigNodePropertyArray.getExample();
        return comAdobeGraniteRepositoryImplCommitStatsConfigProperties;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof OASComAdobeGraniteRepositoryImplComm) {           
            OASComAdobeGraniteRepositoryImplComm comAdobeGraniteRepositoryImplCommitStatsConfigProperties = (OASComAdobeGraniteRepositoryImplComm) obj;
            return this.enabled == comAdobeGraniteRepositoryImplCommitStatsConfigProperties.enabled
                && this.intervalSeconds == comAdobeGraniteRepositoryImplCommitStatsConfigProperties.intervalSeconds
                && this.commitsPerIntervalThreshold == comAdobeGraniteRepositoryImplCommitStatsConfigProperties.commitsPerIntervalThreshold
                && this.maxLocationLength == comAdobeGraniteRepositoryImplCommitStatsConfigProperties.maxLocationLength
                && this.maxDetailsShown == comAdobeGraniteRepositoryImplCommitStatsConfigProperties.maxDetailsShown
                && this.minDetailsPercentage == comAdobeGraniteRepositoryImplCommitStatsConfigProperties.minDetailsPercentage
                && this.threadMatchers == comAdobeGraniteRepositoryImplCommitStatsConfigProperties.threadMatchers
                && this.maxGreedyDepth == comAdobeGraniteRepositoryImplCommitStatsConfigProperties.maxGreedyDepth
                && this.greedyStackMatchers == comAdobeGraniteRepositoryImplCommitStatsConfigProperties.greedyStackMatchers
                && this.stackFilters == comAdobeGraniteRepositoryImplCommitStatsConfigProperties.stackFilters
                && this.stackMatchers == comAdobeGraniteRepositoryImplCommitStatsConfigProperties.stackMatchers
                && this.stackCategorizers == comAdobeGraniteRepositoryImplCommitStatsConfigProperties.stackCategorizers
                && this.stackShorteners == comAdobeGraniteRepositoryImplCommitStatsConfigProperties.stackShorteners;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (enabled == null ? 0 : System.hashCode(enabled));
        hashCode = (17 * hashCode) + (intervalSeconds == null ? 0 : System.hashCode(intervalSeconds));
        hashCode = (17 * hashCode) + (commitsPerIntervalThreshold == null ? 0 : System.hashCode(commitsPerIntervalThreshold));
        hashCode = (17 * hashCode) + (maxLocationLength == null ? 0 : System.hashCode(maxLocationLength));
        hashCode = (17 * hashCode) + (maxDetailsShown == null ? 0 : System.hashCode(maxDetailsShown));
        hashCode = (17 * hashCode) + (minDetailsPercentage == null ? 0 : System.hashCode(minDetailsPercentage));
        hashCode = (17 * hashCode) + (threadMatchers == null ? 0 : System.hashCode(threadMatchers));
        hashCode = (17 * hashCode) + (maxGreedyDepth == null ? 0 : System.hashCode(maxGreedyDepth));
        hashCode = (17 * hashCode) + (greedyStackMatchers == null ? 0 : System.hashCode(greedyStackMatchers));
        hashCode = (17 * hashCode) + (stackFilters == null ? 0 : System.hashCode(stackFilters));
        hashCode = (17 * hashCode) + (stackMatchers == null ? 0 : System.hashCode(stackMatchers));
        hashCode = (17 * hashCode) + (stackCategorizers == null ? 0 : System.hashCode(stackCategorizers));
        hashCode = (17 * hashCode) + (stackShorteners == null ? 0 : System.hashCode(stackShorteners));
        return hashCode;
    }
}

