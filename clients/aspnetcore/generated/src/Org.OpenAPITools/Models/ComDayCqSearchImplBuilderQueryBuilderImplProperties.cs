/*
 * Adobe Experience Manager OSGI config (AEM) API
 *
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Linq;
using System.Text;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;

namespace Org.OpenAPITools.Models
{ 
    /// <summary>
    /// 
    /// </summary>
    [DataContract]
    public partial class ComDayCqSearchImplBuilderQueryBuilderImplProperties : IEquatable<ComDayCqSearchImplBuilderQueryBuilderImplProperties>
    { 
        /// <summary>
        /// Gets or Sets ExcerptProperties
        /// </summary>
        [DataMember(Name="excerpt.properties")]
        public ConfigNodePropertyArray ExcerptProperties { get; set; }

        /// <summary>
        /// Gets or Sets CacheMaxEntries
        /// </summary>
        [DataMember(Name="cache.max.entries")]
        public ConfigNodePropertyInteger CacheMaxEntries { get; set; }

        /// <summary>
        /// Gets or Sets CacheEntryLifetime
        /// </summary>
        [DataMember(Name="cache.entry.lifetime")]
        public ConfigNodePropertyInteger CacheEntryLifetime { get; set; }

        /// <summary>
        /// Gets or Sets XpathUnion
        /// </summary>
        [DataMember(Name="xpath.union")]
        public ConfigNodePropertyBoolean XpathUnion { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class ComDayCqSearchImplBuilderQueryBuilderImplProperties {\n");
            sb.Append("  ExcerptProperties: ").Append(ExcerptProperties).Append("\n");
            sb.Append("  CacheMaxEntries: ").Append(CacheMaxEntries).Append("\n");
            sb.Append("  CacheEntryLifetime: ").Append(CacheEntryLifetime).Append("\n");
            sb.Append("  XpathUnion: ").Append(XpathUnion).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="obj">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object obj)
        {
            if (obj is null) return false;
            if (ReferenceEquals(this, obj)) return true;
            return obj.GetType() == GetType() && Equals((ComDayCqSearchImplBuilderQueryBuilderImplProperties)obj);
        }

        /// <summary>
        /// Returns true if ComDayCqSearchImplBuilderQueryBuilderImplProperties instances are equal
        /// </summary>
        /// <param name="other">Instance of ComDayCqSearchImplBuilderQueryBuilderImplProperties to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(ComDayCqSearchImplBuilderQueryBuilderImplProperties other)
        {
            if (other is null) return false;
            if (ReferenceEquals(this, other)) return true;

            return 
                (
                    ExcerptProperties == other.ExcerptProperties ||
                    ExcerptProperties != null &&
                    ExcerptProperties.Equals(other.ExcerptProperties)
                ) && 
                (
                    CacheMaxEntries == other.CacheMaxEntries ||
                    CacheMaxEntries != null &&
                    CacheMaxEntries.Equals(other.CacheMaxEntries)
                ) && 
                (
                    CacheEntryLifetime == other.CacheEntryLifetime ||
                    CacheEntryLifetime != null &&
                    CacheEntryLifetime.Equals(other.CacheEntryLifetime)
                ) && 
                (
                    XpathUnion == other.XpathUnion ||
                    XpathUnion != null &&
                    XpathUnion.Equals(other.XpathUnion)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                var hashCode = 41;
                // Suitable nullity checks etc, of course :)
                    if (ExcerptProperties != null)
                    hashCode = hashCode * 59 + ExcerptProperties.GetHashCode();
                    if (CacheMaxEntries != null)
                    hashCode = hashCode * 59 + CacheMaxEntries.GetHashCode();
                    if (CacheEntryLifetime != null)
                    hashCode = hashCode * 59 + CacheEntryLifetime.GetHashCode();
                    if (XpathUnion != null)
                    hashCode = hashCode * 59 + XpathUnion.GetHashCode();
                return hashCode;
            }
        }

        #region Operators
        #pragma warning disable 1591

        public static bool operator ==(ComDayCqSearchImplBuilderQueryBuilderImplProperties left, ComDayCqSearchImplBuilderQueryBuilderImplProperties right)
        {
            return Equals(left, right);
        }

        public static bool operator !=(ComDayCqSearchImplBuilderQueryBuilderImplProperties left, ComDayCqSearchImplBuilderQueryBuilderImplProperties right)
        {
            return !Equals(left, right);
        }

        #pragma warning restore 1591
        #endregion Operators
    }
}
