<?php
/**
 * ComDayCqDamHandlerGibsonFontmanagerImplFontManagerServiceImplProperties
 *
 * PHP version 5
 *
 * @category Class
 * @package  OpenAPI\Server\Model
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * Adobe Experience Manager OSGI config (AEM) API
 *
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 *
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Do not edit the class manually.
 */

namespace OpenAPI\Server\Model;

use Symfony\Component\Validator\Constraints as Assert;
use JMS\Serializer\Annotation\Type;
use JMS\Serializer\Annotation\SerializedName;

/**
 * Class representing the ComDayCqDamHandlerGibsonFontmanagerImplFontManagerServiceImplProperties model.
 *
 * @package OpenAPI\Server\Model
 * @author  OpenAPI Generator team
 */
class ComDayCqDamHandlerGibsonFontmanagerImplFontManagerServiceImplProperties 
{
        /**
     * @var OpenAPI\Server\Model\ConfigNodePropertyString|null
     * @SerializedName("event.filter")
     * @Assert\Type("OpenAPI\Server\Model\ConfigNodePropertyString")
     * @Type("OpenAPI\Server\Model\ConfigNodePropertyString")
     */
    protected $eventFilter;

    /**
     * @var OpenAPI\Server\Model\ConfigNodePropertyArray|null
     * @SerializedName("fontmgr.system.font.dir")
     * @Assert\Type("OpenAPI\Server\Model\ConfigNodePropertyArray")
     * @Type("OpenAPI\Server\Model\ConfigNodePropertyArray")
     */
    protected $fontmgrSystemFontDir;

    /**
     * @var OpenAPI\Server\Model\ConfigNodePropertyString|null
     * @SerializedName("fontmgr.adobe.font.dir")
     * @Assert\Type("OpenAPI\Server\Model\ConfigNodePropertyString")
     * @Type("OpenAPI\Server\Model\ConfigNodePropertyString")
     */
    protected $fontmgrAdobeFontDir;

    /**
     * @var OpenAPI\Server\Model\ConfigNodePropertyString|null
     * @SerializedName("fontmgr.customer.font.dir")
     * @Assert\Type("OpenAPI\Server\Model\ConfigNodePropertyString")
     * @Type("OpenAPI\Server\Model\ConfigNodePropertyString")
     */
    protected $fontmgrCustomerFontDir;

    /**
     * Constructor
     * @param mixed[] $data Associated array of property values initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->eventFilter = isset($data['eventFilter']) ? $data['eventFilter'] : null;
        $this->fontmgrSystemFontDir = isset($data['fontmgrSystemFontDir']) ? $data['fontmgrSystemFontDir'] : null;
        $this->fontmgrAdobeFontDir = isset($data['fontmgrAdobeFontDir']) ? $data['fontmgrAdobeFontDir'] : null;
        $this->fontmgrCustomerFontDir = isset($data['fontmgrCustomerFontDir']) ? $data['fontmgrCustomerFontDir'] : null;
    }

    /**
     * Gets eventFilter.
     *
     * @return OpenAPI\Server\Model\ConfigNodePropertyString|null
     */
    public function getEventFilter()
    {
        return $this->eventFilter;
    }

    /**
     * Sets eventFilter.
     *
     * @param OpenAPI\Server\Model\ConfigNodePropertyString|null $eventFilter
     *
     * @return $this
     */
    public function setEventFilter(ConfigNodePropertyString $eventFilter = null)
    {
        $this->eventFilter = $eventFilter;

        return $this;
    }

    /**
     * Gets fontmgrSystemFontDir.
     *
     * @return OpenAPI\Server\Model\ConfigNodePropertyArray|null
     */
    public function getFontmgrSystemFontDir()
    {
        return $this->fontmgrSystemFontDir;
    }

    /**
     * Sets fontmgrSystemFontDir.
     *
     * @param OpenAPI\Server\Model\ConfigNodePropertyArray|null $fontmgrSystemFontDir
     *
     * @return $this
     */
    public function setFontmgrSystemFontDir(ConfigNodePropertyArray $fontmgrSystemFontDir = null)
    {
        $this->fontmgrSystemFontDir = $fontmgrSystemFontDir;

        return $this;
    }

    /**
     * Gets fontmgrAdobeFontDir.
     *
     * @return OpenAPI\Server\Model\ConfigNodePropertyString|null
     */
    public function getFontmgrAdobeFontDir()
    {
        return $this->fontmgrAdobeFontDir;
    }

    /**
     * Sets fontmgrAdobeFontDir.
     *
     * @param OpenAPI\Server\Model\ConfigNodePropertyString|null $fontmgrAdobeFontDir
     *
     * @return $this
     */
    public function setFontmgrAdobeFontDir(ConfigNodePropertyString $fontmgrAdobeFontDir = null)
    {
        $this->fontmgrAdobeFontDir = $fontmgrAdobeFontDir;

        return $this;
    }

    /**
     * Gets fontmgrCustomerFontDir.
     *
     * @return OpenAPI\Server\Model\ConfigNodePropertyString|null
     */
    public function getFontmgrCustomerFontDir()
    {
        return $this->fontmgrCustomerFontDir;
    }

    /**
     * Sets fontmgrCustomerFontDir.
     *
     * @param OpenAPI\Server\Model\ConfigNodePropertyString|null $fontmgrCustomerFontDir
     *
     * @return $this
     */
    public function setFontmgrCustomerFontDir(ConfigNodePropertyString $fontmgrCustomerFontDir = null)
    {
        $this->fontmgrCustomerFontDir = $fontmgrCustomerFontDir;

        return $this;
    }
}


