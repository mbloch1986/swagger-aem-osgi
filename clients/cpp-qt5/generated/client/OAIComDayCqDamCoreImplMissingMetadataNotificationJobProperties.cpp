/**
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


#include "OAIComDayCqDamCoreImplMissingMetadataNotificationJobProperties.h"

#include "OAIHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace OpenAPI {

OAIComDayCqDamCoreImplMissingMetadataNotificationJobProperties::OAIComDayCqDamCoreImplMissingMetadataNotificationJobProperties(QString json) {
    init();
    this->fromJson(json);
}

OAIComDayCqDamCoreImplMissingMetadataNotificationJobProperties::OAIComDayCqDamCoreImplMissingMetadataNotificationJobProperties() {
    init();
}

OAIComDayCqDamCoreImplMissingMetadataNotificationJobProperties::~OAIComDayCqDamCoreImplMissingMetadataNotificationJobProperties() {
    this->cleanup();
}

void
OAIComDayCqDamCoreImplMissingMetadataNotificationJobProperties::init() {
    cq_dam_missingmetadata_notification_scheduler_istimebased = new OAIConfigNodePropertyBoolean();
    m_cq_dam_missingmetadata_notification_scheduler_istimebased_isSet = false;
    cq_dam_missingmetadata_notification_scheduler_timebased_rule = new OAIConfigNodePropertyString();
    m_cq_dam_missingmetadata_notification_scheduler_timebased_rule_isSet = false;
    cq_dam_missingmetadata_notification_scheduler_period_rule = new OAIConfigNodePropertyInteger();
    m_cq_dam_missingmetadata_notification_scheduler_period_rule_isSet = false;
    cq_dam_missingmetadata_notification_recipient = new OAIConfigNodePropertyString();
    m_cq_dam_missingmetadata_notification_recipient_isSet = false;
}

void
OAIComDayCqDamCoreImplMissingMetadataNotificationJobProperties::cleanup() {
    if(cq_dam_missingmetadata_notification_scheduler_istimebased != nullptr) { 
        delete cq_dam_missingmetadata_notification_scheduler_istimebased;
    }
    if(cq_dam_missingmetadata_notification_scheduler_timebased_rule != nullptr) { 
        delete cq_dam_missingmetadata_notification_scheduler_timebased_rule;
    }
    if(cq_dam_missingmetadata_notification_scheduler_period_rule != nullptr) { 
        delete cq_dam_missingmetadata_notification_scheduler_period_rule;
    }
    if(cq_dam_missingmetadata_notification_recipient != nullptr) { 
        delete cq_dam_missingmetadata_notification_recipient;
    }
}

OAIComDayCqDamCoreImplMissingMetadataNotificationJobProperties*
OAIComDayCqDamCoreImplMissingMetadataNotificationJobProperties::fromJson(QString json) {
    QByteArray array (json.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
    return this;
}

void
OAIComDayCqDamCoreImplMissingMetadataNotificationJobProperties::fromJsonObject(QJsonObject pJson) {
    ::OpenAPI::setValue(&cq_dam_missingmetadata_notification_scheduler_istimebased, pJson["cq.dam.missingmetadata.notification.scheduler.istimebased"], "OAIConfigNodePropertyBoolean", "OAIConfigNodePropertyBoolean");
    
    ::OpenAPI::setValue(&cq_dam_missingmetadata_notification_scheduler_timebased_rule, pJson["cq.dam.missingmetadata.notification.scheduler.timebased.rule"], "OAIConfigNodePropertyString", "OAIConfigNodePropertyString");
    
    ::OpenAPI::setValue(&cq_dam_missingmetadata_notification_scheduler_period_rule, pJson["cq.dam.missingmetadata.notification.scheduler.period.rule"], "OAIConfigNodePropertyInteger", "OAIConfigNodePropertyInteger");
    
    ::OpenAPI::setValue(&cq_dam_missingmetadata_notification_recipient, pJson["cq.dam.missingmetadata.notification.recipient"], "OAIConfigNodePropertyString", "OAIConfigNodePropertyString");
    
}

QString
OAIComDayCqDamCoreImplMissingMetadataNotificationJobProperties::asJson ()
{
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject
OAIComDayCqDamCoreImplMissingMetadataNotificationJobProperties::asJsonObject() {
    QJsonObject obj;
    if((cq_dam_missingmetadata_notification_scheduler_istimebased != nullptr) && (cq_dam_missingmetadata_notification_scheduler_istimebased->isSet())){
        toJsonValue(QString("cq.dam.missingmetadata.notification.scheduler.istimebased"), cq_dam_missingmetadata_notification_scheduler_istimebased, obj, QString("OAIConfigNodePropertyBoolean"));
    }
    if((cq_dam_missingmetadata_notification_scheduler_timebased_rule != nullptr) && (cq_dam_missingmetadata_notification_scheduler_timebased_rule->isSet())){
        toJsonValue(QString("cq.dam.missingmetadata.notification.scheduler.timebased.rule"), cq_dam_missingmetadata_notification_scheduler_timebased_rule, obj, QString("OAIConfigNodePropertyString"));
    }
    if((cq_dam_missingmetadata_notification_scheduler_period_rule != nullptr) && (cq_dam_missingmetadata_notification_scheduler_period_rule->isSet())){
        toJsonValue(QString("cq.dam.missingmetadata.notification.scheduler.period.rule"), cq_dam_missingmetadata_notification_scheduler_period_rule, obj, QString("OAIConfigNodePropertyInteger"));
    }
    if((cq_dam_missingmetadata_notification_recipient != nullptr) && (cq_dam_missingmetadata_notification_recipient->isSet())){
        toJsonValue(QString("cq.dam.missingmetadata.notification.recipient"), cq_dam_missingmetadata_notification_recipient, obj, QString("OAIConfigNodePropertyString"));
    }

    return obj;
}

OAIConfigNodePropertyBoolean*
OAIComDayCqDamCoreImplMissingMetadataNotificationJobProperties::getCqDamMissingmetadataNotificationSchedulerIstimebased() {
    return cq_dam_missingmetadata_notification_scheduler_istimebased;
}
void
OAIComDayCqDamCoreImplMissingMetadataNotificationJobProperties::setCqDamMissingmetadataNotificationSchedulerIstimebased(OAIConfigNodePropertyBoolean* cq_dam_missingmetadata_notification_scheduler_istimebased) {
    this->cq_dam_missingmetadata_notification_scheduler_istimebased = cq_dam_missingmetadata_notification_scheduler_istimebased;
    this->m_cq_dam_missingmetadata_notification_scheduler_istimebased_isSet = true;
}

OAIConfigNodePropertyString*
OAIComDayCqDamCoreImplMissingMetadataNotificationJobProperties::getCqDamMissingmetadataNotificationSchedulerTimebasedRule() {
    return cq_dam_missingmetadata_notification_scheduler_timebased_rule;
}
void
OAIComDayCqDamCoreImplMissingMetadataNotificationJobProperties::setCqDamMissingmetadataNotificationSchedulerTimebasedRule(OAIConfigNodePropertyString* cq_dam_missingmetadata_notification_scheduler_timebased_rule) {
    this->cq_dam_missingmetadata_notification_scheduler_timebased_rule = cq_dam_missingmetadata_notification_scheduler_timebased_rule;
    this->m_cq_dam_missingmetadata_notification_scheduler_timebased_rule_isSet = true;
}

OAIConfigNodePropertyInteger*
OAIComDayCqDamCoreImplMissingMetadataNotificationJobProperties::getCqDamMissingmetadataNotificationSchedulerPeriodRule() {
    return cq_dam_missingmetadata_notification_scheduler_period_rule;
}
void
OAIComDayCqDamCoreImplMissingMetadataNotificationJobProperties::setCqDamMissingmetadataNotificationSchedulerPeriodRule(OAIConfigNodePropertyInteger* cq_dam_missingmetadata_notification_scheduler_period_rule) {
    this->cq_dam_missingmetadata_notification_scheduler_period_rule = cq_dam_missingmetadata_notification_scheduler_period_rule;
    this->m_cq_dam_missingmetadata_notification_scheduler_period_rule_isSet = true;
}

OAIConfigNodePropertyString*
OAIComDayCqDamCoreImplMissingMetadataNotificationJobProperties::getCqDamMissingmetadataNotificationRecipient() {
    return cq_dam_missingmetadata_notification_recipient;
}
void
OAIComDayCqDamCoreImplMissingMetadataNotificationJobProperties::setCqDamMissingmetadataNotificationRecipient(OAIConfigNodePropertyString* cq_dam_missingmetadata_notification_recipient) {
    this->cq_dam_missingmetadata_notification_recipient = cq_dam_missingmetadata_notification_recipient;
    this->m_cq_dam_missingmetadata_notification_recipient_isSet = true;
}


bool
OAIComDayCqDamCoreImplMissingMetadataNotificationJobProperties::isSet(){
    bool isObjectUpdated = false;
    do{
        if(cq_dam_missingmetadata_notification_scheduler_istimebased != nullptr && cq_dam_missingmetadata_notification_scheduler_istimebased->isSet()){ isObjectUpdated = true; break;}
        if(cq_dam_missingmetadata_notification_scheduler_timebased_rule != nullptr && cq_dam_missingmetadata_notification_scheduler_timebased_rule->isSet()){ isObjectUpdated = true; break;}
        if(cq_dam_missingmetadata_notification_scheduler_period_rule != nullptr && cq_dam_missingmetadata_notification_scheduler_period_rule->isSet()){ isObjectUpdated = true; break;}
        if(cq_dam_missingmetadata_notification_recipient != nullptr && cq_dam_missingmetadata_notification_recipient->isSet()){ isObjectUpdated = true; break;}
    }while(false);
    return isObjectUpdated;
}
}

