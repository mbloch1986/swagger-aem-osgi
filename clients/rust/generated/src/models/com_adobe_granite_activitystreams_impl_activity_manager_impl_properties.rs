/* 
 * Adobe Experience Manager OSGI config (AEM) API
 *
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 * Generated by: https://openapi-generator.tech
 */


#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct ComAdobeGraniteActivitystreamsImplActivityManagerImplProperties {
  #[serde(rename = "aggregate.relationships")]
  aggregate_relationships: Option<::models::ConfigNodePropertyArray>,
  #[serde(rename = "aggregate.descend.virtual")]
  aggregate_descend_virtual: Option<::models::ConfigNodePropertyBoolean>
}

impl ComAdobeGraniteActivitystreamsImplActivityManagerImplProperties {
  pub fn new() -> ComAdobeGraniteActivitystreamsImplActivityManagerImplProperties {
    ComAdobeGraniteActivitystreamsImplActivityManagerImplProperties {
      aggregate_relationships: None,
      aggregate_descend_virtual: None
    }
  }

  pub fn set_aggregate_relationships(&mut self, aggregate_relationships: ::models::ConfigNodePropertyArray) {
    self.aggregate_relationships = Some(aggregate_relationships);
  }

  pub fn with_aggregate_relationships(mut self, aggregate_relationships: ::models::ConfigNodePropertyArray) -> ComAdobeGraniteActivitystreamsImplActivityManagerImplProperties {
    self.aggregate_relationships = Some(aggregate_relationships);
    self
  }

  pub fn aggregate_relationships(&self) -> Option<&::models::ConfigNodePropertyArray> {
    self.aggregate_relationships.as_ref()
  }

  pub fn reset_aggregate_relationships(&mut self) {
    self.aggregate_relationships = None;
  }

  pub fn set_aggregate_descend_virtual(&mut self, aggregate_descend_virtual: ::models::ConfigNodePropertyBoolean) {
    self.aggregate_descend_virtual = Some(aggregate_descend_virtual);
  }

  pub fn with_aggregate_descend_virtual(mut self, aggregate_descend_virtual: ::models::ConfigNodePropertyBoolean) -> ComAdobeGraniteActivitystreamsImplActivityManagerImplProperties {
    self.aggregate_descend_virtual = Some(aggregate_descend_virtual);
    self
  }

  pub fn aggregate_descend_virtual(&self) -> Option<&::models::ConfigNodePropertyBoolean> {
    self.aggregate_descend_virtual.as_ref()
  }

  pub fn reset_aggregate_descend_virtual(&mut self) {
    self.aggregate_descend_virtual = None;
  }

}



