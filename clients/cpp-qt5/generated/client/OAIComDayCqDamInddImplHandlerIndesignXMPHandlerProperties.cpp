/**
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


#include "OAIComDayCqDamInddImplHandlerIndesignXMPHandlerProperties.h"

#include "OAIHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace OpenAPI {

OAIComDayCqDamInddImplHandlerIndesignXMPHandlerProperties::OAIComDayCqDamInddImplHandlerIndesignXMPHandlerProperties(QString json) {
    init();
    this->fromJson(json);
}

OAIComDayCqDamInddImplHandlerIndesignXMPHandlerProperties::OAIComDayCqDamInddImplHandlerIndesignXMPHandlerProperties() {
    init();
}

OAIComDayCqDamInddImplHandlerIndesignXMPHandlerProperties::~OAIComDayCqDamInddImplHandlerIndesignXMPHandlerProperties() {
    this->cleanup();
}

void
OAIComDayCqDamInddImplHandlerIndesignXMPHandlerProperties::init() {
    process_label = new OAIConfigNodePropertyString();
    m_process_label_isSet = false;
    extract_pages = new OAIConfigNodePropertyBoolean();
    m_extract_pages_isSet = false;
}

void
OAIComDayCqDamInddImplHandlerIndesignXMPHandlerProperties::cleanup() {
    if(process_label != nullptr) { 
        delete process_label;
    }
    if(extract_pages != nullptr) { 
        delete extract_pages;
    }
}

OAIComDayCqDamInddImplHandlerIndesignXMPHandlerProperties*
OAIComDayCqDamInddImplHandlerIndesignXMPHandlerProperties::fromJson(QString json) {
    QByteArray array (json.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
    return this;
}

void
OAIComDayCqDamInddImplHandlerIndesignXMPHandlerProperties::fromJsonObject(QJsonObject pJson) {
    ::OpenAPI::setValue(&process_label, pJson["process.label"], "OAIConfigNodePropertyString", "OAIConfigNodePropertyString");
    
    ::OpenAPI::setValue(&extract_pages, pJson["extract.pages"], "OAIConfigNodePropertyBoolean", "OAIConfigNodePropertyBoolean");
    
}

QString
OAIComDayCqDamInddImplHandlerIndesignXMPHandlerProperties::asJson ()
{
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject
OAIComDayCqDamInddImplHandlerIndesignXMPHandlerProperties::asJsonObject() {
    QJsonObject obj;
    if((process_label != nullptr) && (process_label->isSet())){
        toJsonValue(QString("process.label"), process_label, obj, QString("OAIConfigNodePropertyString"));
    }
    if((extract_pages != nullptr) && (extract_pages->isSet())){
        toJsonValue(QString("extract.pages"), extract_pages, obj, QString("OAIConfigNodePropertyBoolean"));
    }

    return obj;
}

OAIConfigNodePropertyString*
OAIComDayCqDamInddImplHandlerIndesignXMPHandlerProperties::getProcessLabel() {
    return process_label;
}
void
OAIComDayCqDamInddImplHandlerIndesignXMPHandlerProperties::setProcessLabel(OAIConfigNodePropertyString* process_label) {
    this->process_label = process_label;
    this->m_process_label_isSet = true;
}

OAIConfigNodePropertyBoolean*
OAIComDayCqDamInddImplHandlerIndesignXMPHandlerProperties::getExtractPages() {
    return extract_pages;
}
void
OAIComDayCqDamInddImplHandlerIndesignXMPHandlerProperties::setExtractPages(OAIConfigNodePropertyBoolean* extract_pages) {
    this->extract_pages = extract_pages;
    this->m_extract_pages_isSet = true;
}


bool
OAIComDayCqDamInddImplHandlerIndesignXMPHandlerProperties::isSet(){
    bool isObjectUpdated = false;
    do{
        if(process_label != nullptr && process_label->isSet()){ isObjectUpdated = true; break;}
        if(extract_pages != nullptr && extract_pages->isSet()){ isObjectUpdated = true; break;}
    }while(false);
    return isObjectUpdated;
}
}

