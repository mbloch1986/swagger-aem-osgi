/* 
 * Adobe Experience Manager OSGI config (AEM) API
 *
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 * Generated by: https://openapi-generator.tech
 */


#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct ComAdobeCqSocialActivitystreamsListenerImplRatingEventActivitySProperties {
  #[serde(rename = "ranking")]
  ranking: Option<::models::ConfigNodePropertyInteger>,
  #[serde(rename = "enable")]
  enable: Option<::models::ConfigNodePropertyBoolean>
}

impl ComAdobeCqSocialActivitystreamsListenerImplRatingEventActivitySProperties {
  pub fn new() -> ComAdobeCqSocialActivitystreamsListenerImplRatingEventActivitySProperties {
    ComAdobeCqSocialActivitystreamsListenerImplRatingEventActivitySProperties {
      ranking: None,
      enable: None
    }
  }

  pub fn set_ranking(&mut self, ranking: ::models::ConfigNodePropertyInteger) {
    self.ranking = Some(ranking);
  }

  pub fn with_ranking(mut self, ranking: ::models::ConfigNodePropertyInteger) -> ComAdobeCqSocialActivitystreamsListenerImplRatingEventActivitySProperties {
    self.ranking = Some(ranking);
    self
  }

  pub fn ranking(&self) -> Option<&::models::ConfigNodePropertyInteger> {
    self.ranking.as_ref()
  }

  pub fn reset_ranking(&mut self) {
    self.ranking = None;
  }

  pub fn set_enable(&mut self, enable: ::models::ConfigNodePropertyBoolean) {
    self.enable = Some(enable);
  }

  pub fn with_enable(mut self, enable: ::models::ConfigNodePropertyBoolean) -> ComAdobeCqSocialActivitystreamsListenerImplRatingEventActivitySProperties {
    self.enable = Some(enable);
    self
  }

  pub fn enable(&self) -> Option<&::models::ConfigNodePropertyBoolean> {
    self.enable.as_ref()
  }

  pub fn reset_enable(&mut self) {
    self.enable = None;
  }

}



