package org.openapitools.client.api

import argonaut._
import argonaut.EncodeJson._
import argonaut.DecodeJson._

import org.http4s.{EntityDecoder, EntityEncoder}
import org.http4s.argonaut._
import org.joda.time.DateTime
import ComAdobeFormsCommonServiceImplFormsCommonConfigurationServiceImpProperties._

case class ComAdobeFormsCommonServiceImplFormsCommonConfigurationServiceImpProperties (
  tempStorageConfig: Option[ConfigNodePropertyDropDown])

object ComAdobeFormsCommonServiceImplFormsCommonConfigurationServiceImpProperties {
  import DateTimeCodecs._

  implicit val ComAdobeFormsCommonServiceImplFormsCommonConfigurationServiceImpPropertiesCodecJson: CodecJson[ComAdobeFormsCommonServiceImplFormsCommonConfigurationServiceImpProperties] = CodecJson.derive[ComAdobeFormsCommonServiceImplFormsCommonConfigurationServiceImpProperties]
  implicit val ComAdobeFormsCommonServiceImplFormsCommonConfigurationServiceImpPropertiesDecoder: EntityDecoder[ComAdobeFormsCommonServiceImplFormsCommonConfigurationServiceImpProperties] = jsonOf[ComAdobeFormsCommonServiceImplFormsCommonConfigurationServiceImpProperties]
  implicit val ComAdobeFormsCommonServiceImplFormsCommonConfigurationServiceImpPropertiesEncoder: EntityEncoder[ComAdobeFormsCommonServiceImplFormsCommonConfigurationServiceImpProperties] = jsonEncoderOf[ComAdobeFormsCommonServiceImplFormsCommonConfigurationServiceImpProperties]
}
