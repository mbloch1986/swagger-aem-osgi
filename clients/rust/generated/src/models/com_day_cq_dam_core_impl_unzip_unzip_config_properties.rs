/* 
 * Adobe Experience Manager OSGI config (AEM) API
 *
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 * Generated by: https://openapi-generator.tech
 */


#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct ComDayCqDamCoreImplUnzipUnzipConfigProperties {
  #[serde(rename = "cq.dam.config.unzip.maxuncompressedsize")]
  cq_dam_config_unzip_maxuncompressedsize: Option<::models::ConfigNodePropertyInteger>,
  #[serde(rename = "cq.dam.config.unzip.encoding")]
  cq_dam_config_unzip_encoding: Option<::models::ConfigNodePropertyString>
}

impl ComDayCqDamCoreImplUnzipUnzipConfigProperties {
  pub fn new() -> ComDayCqDamCoreImplUnzipUnzipConfigProperties {
    ComDayCqDamCoreImplUnzipUnzipConfigProperties {
      cq_dam_config_unzip_maxuncompressedsize: None,
      cq_dam_config_unzip_encoding: None
    }
  }

  pub fn set_cq_dam_config_unzip_maxuncompressedsize(&mut self, cq_dam_config_unzip_maxuncompressedsize: ::models::ConfigNodePropertyInteger) {
    self.cq_dam_config_unzip_maxuncompressedsize = Some(cq_dam_config_unzip_maxuncompressedsize);
  }

  pub fn with_cq_dam_config_unzip_maxuncompressedsize(mut self, cq_dam_config_unzip_maxuncompressedsize: ::models::ConfigNodePropertyInteger) -> ComDayCqDamCoreImplUnzipUnzipConfigProperties {
    self.cq_dam_config_unzip_maxuncompressedsize = Some(cq_dam_config_unzip_maxuncompressedsize);
    self
  }

  pub fn cq_dam_config_unzip_maxuncompressedsize(&self) -> Option<&::models::ConfigNodePropertyInteger> {
    self.cq_dam_config_unzip_maxuncompressedsize.as_ref()
  }

  pub fn reset_cq_dam_config_unzip_maxuncompressedsize(&mut self) {
    self.cq_dam_config_unzip_maxuncompressedsize = None;
  }

  pub fn set_cq_dam_config_unzip_encoding(&mut self, cq_dam_config_unzip_encoding: ::models::ConfigNodePropertyString) {
    self.cq_dam_config_unzip_encoding = Some(cq_dam_config_unzip_encoding);
  }

  pub fn with_cq_dam_config_unzip_encoding(mut self, cq_dam_config_unzip_encoding: ::models::ConfigNodePropertyString) -> ComDayCqDamCoreImplUnzipUnzipConfigProperties {
    self.cq_dam_config_unzip_encoding = Some(cq_dam_config_unzip_encoding);
    self
  }

  pub fn cq_dam_config_unzip_encoding(&self) -> Option<&::models::ConfigNodePropertyString> {
    self.cq_dam_config_unzip_encoding.as_ref()
  }

  pub fn reset_cq_dam_config_unzip_encoding(&mut self) {
    self.cq_dam_config_unzip_encoding = None;
  }

}



