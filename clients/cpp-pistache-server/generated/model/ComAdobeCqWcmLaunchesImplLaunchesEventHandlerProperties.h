/**
* Adobe Experience Manager OSGI config (AEM) API
* Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
*
* OpenAPI spec version: 1.0.0-pre.0
* Contact: opensource@shinesolutions.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
/*
 * ComAdobeCqWcmLaunchesImplLaunchesEventHandlerProperties.h
 *
 * 
 */

#ifndef ComAdobeCqWcmLaunchesImplLaunchesEventHandlerProperties_H_
#define ComAdobeCqWcmLaunchesImplLaunchesEventHandlerProperties_H_


#include "ModelBase.h"

#include "ConfigNodePropertyBoolean.h"
#include "ConfigNodePropertyDropDown.h"
#include "ConfigNodePropertyInteger.h"
#include "ConfigNodePropertyString.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
/// 
/// </summary>
class  ComAdobeCqWcmLaunchesImplLaunchesEventHandlerProperties
    : public ModelBase
{
public:
    ComAdobeCqWcmLaunchesImplLaunchesEventHandlerProperties();
    virtual ~ComAdobeCqWcmLaunchesImplLaunchesEventHandlerProperties();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    nlohmann::json toJson() const override;
    void fromJson(nlohmann::json& json) override;

    /////////////////////////////////////////////
    /// ComAdobeCqWcmLaunchesImplLaunchesEventHandlerProperties members

    /// <summary>
    /// 
    /// </summary>
    ConfigNodePropertyString getEventFilter() const;
    void setEventFilter(ConfigNodePropertyString const& value);
    bool eventFilterIsSet() const;
    void unsetEvent_filter();
    /// <summary>
    /// 
    /// </summary>
    ConfigNodePropertyInteger getLaunchesEventhandlerThreadpoolMaxsize() const;
    void setLaunchesEventhandlerThreadpoolMaxsize(ConfigNodePropertyInteger const& value);
    bool launchesEventhandlerThreadpoolMaxsizeIsSet() const;
    void unsetLaunches_eventhandler_threadpool_maxsize();
    /// <summary>
    /// 
    /// </summary>
    ConfigNodePropertyDropDown getLaunchesEventhandlerThreadpoolPriority() const;
    void setLaunchesEventhandlerThreadpoolPriority(ConfigNodePropertyDropDown const& value);
    bool launchesEventhandlerThreadpoolPriorityIsSet() const;
    void unsetLaunches_eventhandler_threadpool_priority();
    /// <summary>
    /// 
    /// </summary>
    ConfigNodePropertyBoolean getLaunchesEventhandlerUpdatelastmodification() const;
    void setLaunchesEventhandlerUpdatelastmodification(ConfigNodePropertyBoolean const& value);
    bool launchesEventhandlerUpdatelastmodificationIsSet() const;
    void unsetLaunches_eventhandler_updatelastmodification();

protected:
    ConfigNodePropertyString m_Event_filter;
    bool m_Event_filterIsSet;
    ConfigNodePropertyInteger m_Launches_eventhandler_threadpool_maxsize;
    bool m_Launches_eventhandler_threadpool_maxsizeIsSet;
    ConfigNodePropertyDropDown m_Launches_eventhandler_threadpool_priority;
    bool m_Launches_eventhandler_threadpool_priorityIsSet;
    ConfigNodePropertyBoolean m_Launches_eventhandler_updatelastmodification;
    bool m_Launches_eventhandler_updatelastmodificationIsSet;
};

}
}
}
}

#endif /* ComAdobeCqWcmLaunchesImplLaunchesEventHandlerProperties_H_ */
