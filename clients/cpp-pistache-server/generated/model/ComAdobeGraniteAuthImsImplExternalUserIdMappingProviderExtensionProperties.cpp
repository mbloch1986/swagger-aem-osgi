/**
* Adobe Experience Manager OSGI config (AEM) API
* Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
*
* OpenAPI spec version: 1.0.0-pre.0
* Contact: opensource@shinesolutions.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/


#include "ComAdobeGraniteAuthImsImplExternalUserIdMappingProviderExtensionProperties.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

ComAdobeGraniteAuthImsImplExternalUserIdMappingProviderExtensionProperties::ComAdobeGraniteAuthImsImplExternalUserIdMappingProviderExtensionProperties()
{
    m_Oauth_provider_idIsSet = false;
    
}

ComAdobeGraniteAuthImsImplExternalUserIdMappingProviderExtensionProperties::~ComAdobeGraniteAuthImsImplExternalUserIdMappingProviderExtensionProperties()
{
}

void ComAdobeGraniteAuthImsImplExternalUserIdMappingProviderExtensionProperties::validate()
{
    // TODO: implement validation
}

nlohmann::json ComAdobeGraniteAuthImsImplExternalUserIdMappingProviderExtensionProperties::toJson() const
{
    nlohmann::json val = nlohmann::json::object();

    if(m_Oauth_provider_idIsSet)
    {
        val["oauth.provider.id"] = ModelBase::toJson(m_Oauth_provider_id);
    }
    

    return val;
}

void ComAdobeGraniteAuthImsImplExternalUserIdMappingProviderExtensionProperties::fromJson(nlohmann::json& val)
{
    if(val.find("oauth.provider.id") != val.end())
    {
        if(!val["oauth.provider.id"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["oauth.provider.id"]);
            setOauthProviderId( newItem );
        }
        
    }
    
}


ConfigNodePropertyString ComAdobeGraniteAuthImsImplExternalUserIdMappingProviderExtensionProperties::getOauthProviderId() const
{
    return m_Oauth_provider_id;
}
void ComAdobeGraniteAuthImsImplExternalUserIdMappingProviderExtensionProperties::setOauthProviderId(ConfigNodePropertyString const& value)
{
    m_Oauth_provider_id = value;
    m_Oauth_provider_idIsSet = true;
}
bool ComAdobeGraniteAuthImsImplExternalUserIdMappingProviderExtensionProperties::oauthProviderIdIsSet() const
{
    return m_Oauth_provider_idIsSet;
}
void ComAdobeGraniteAuthImsImplExternalUserIdMappingProviderExtensionProperties::unsetOauth_provider_id()
{
    m_Oauth_provider_idIsSet = false;
}

}
}
}
}

