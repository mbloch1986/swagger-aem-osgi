/**
* Adobe Experience Manager OSGI config (AEM) API
* Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
*
* OpenAPI spec version: 1.0.0-pre.0
* Contact: opensource@shinesolutions.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/


#include "ComAdobeCqSocialCommonsEmailreplyImplEmailReplyConfigurationImpProperties.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

ComAdobeCqSocialCommonsEmailreplyImplEmailReplyConfigurationImpProperties::ComAdobeCqSocialCommonsEmailreplyImplEmailReplyConfigurationImpProperties()
{
    m_Email_nameIsSet = false;
    m_Email_createPostFromReplyIsSet = false;
    m_Email_addCommentIdToIsSet = false;
    m_Email_subjectMaximumLengthIsSet = false;
    m_Email_replyToAddressIsSet = false;
    m_Email_replyToDelimiterIsSet = false;
    m_Email_trackerIdPrefixInSubjectIsSet = false;
    m_Email_trackerIdPrefixInBodyIsSet = false;
    m_Email_asHTMLIsSet = false;
    m_Email_defaultUserNameIsSet = false;
    m_Email_templates_rootPathIsSet = false;
    
}

ComAdobeCqSocialCommonsEmailreplyImplEmailReplyConfigurationImpProperties::~ComAdobeCqSocialCommonsEmailreplyImplEmailReplyConfigurationImpProperties()
{
}

void ComAdobeCqSocialCommonsEmailreplyImplEmailReplyConfigurationImpProperties::validate()
{
    // TODO: implement validation
}

nlohmann::json ComAdobeCqSocialCommonsEmailreplyImplEmailReplyConfigurationImpProperties::toJson() const
{
    nlohmann::json val = nlohmann::json::object();

    if(m_Email_nameIsSet)
    {
        val["email.name"] = ModelBase::toJson(m_Email_name);
    }
    if(m_Email_createPostFromReplyIsSet)
    {
        val["email.createPostFromReply"] = ModelBase::toJson(m_Email_createPostFromReply);
    }
    if(m_Email_addCommentIdToIsSet)
    {
        val["email.addCommentIdTo"] = ModelBase::toJson(m_Email_addCommentIdTo);
    }
    if(m_Email_subjectMaximumLengthIsSet)
    {
        val["email.subjectMaximumLength"] = ModelBase::toJson(m_Email_subjectMaximumLength);
    }
    if(m_Email_replyToAddressIsSet)
    {
        val["email.replyToAddress"] = ModelBase::toJson(m_Email_replyToAddress);
    }
    if(m_Email_replyToDelimiterIsSet)
    {
        val["email.replyToDelimiter"] = ModelBase::toJson(m_Email_replyToDelimiter);
    }
    if(m_Email_trackerIdPrefixInSubjectIsSet)
    {
        val["email.trackerIdPrefixInSubject"] = ModelBase::toJson(m_Email_trackerIdPrefixInSubject);
    }
    if(m_Email_trackerIdPrefixInBodyIsSet)
    {
        val["email.trackerIdPrefixInBody"] = ModelBase::toJson(m_Email_trackerIdPrefixInBody);
    }
    if(m_Email_asHTMLIsSet)
    {
        val["email.asHTML"] = ModelBase::toJson(m_Email_asHTML);
    }
    if(m_Email_defaultUserNameIsSet)
    {
        val["email.defaultUserName"] = ModelBase::toJson(m_Email_defaultUserName);
    }
    if(m_Email_templates_rootPathIsSet)
    {
        val["email.templates.rootPath"] = ModelBase::toJson(m_Email_templates_rootPath);
    }
    

    return val;
}

void ComAdobeCqSocialCommonsEmailreplyImplEmailReplyConfigurationImpProperties::fromJson(nlohmann::json& val)
{
    if(val.find("email.name") != val.end())
    {
        if(!val["email.name"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["email.name"]);
            setEmailName( newItem );
        }
        
    }
    if(val.find("email.createPostFromReply") != val.end())
    {
        if(!val["email.createPostFromReply"].is_null())
        {
            ConfigNodePropertyBoolean newItem;
            newItem.fromJson(val["email.createPostFromReply"]);
            setEmailCreatePostFromReply( newItem );
        }
        
    }
    if(val.find("email.addCommentIdTo") != val.end())
    {
        if(!val["email.addCommentIdTo"].is_null())
        {
            ConfigNodePropertyDropDown newItem;
            newItem.fromJson(val["email.addCommentIdTo"]);
            setEmailAddCommentIdTo( newItem );
        }
        
    }
    if(val.find("email.subjectMaximumLength") != val.end())
    {
        if(!val["email.subjectMaximumLength"].is_null())
        {
            ConfigNodePropertyInteger newItem;
            newItem.fromJson(val["email.subjectMaximumLength"]);
            setEmailSubjectMaximumLength( newItem );
        }
        
    }
    if(val.find("email.replyToAddress") != val.end())
    {
        if(!val["email.replyToAddress"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["email.replyToAddress"]);
            setEmailReplyToAddress( newItem );
        }
        
    }
    if(val.find("email.replyToDelimiter") != val.end())
    {
        if(!val["email.replyToDelimiter"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["email.replyToDelimiter"]);
            setEmailReplyToDelimiter( newItem );
        }
        
    }
    if(val.find("email.trackerIdPrefixInSubject") != val.end())
    {
        if(!val["email.trackerIdPrefixInSubject"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["email.trackerIdPrefixInSubject"]);
            setEmailTrackerIdPrefixInSubject( newItem );
        }
        
    }
    if(val.find("email.trackerIdPrefixInBody") != val.end())
    {
        if(!val["email.trackerIdPrefixInBody"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["email.trackerIdPrefixInBody"]);
            setEmailTrackerIdPrefixInBody( newItem );
        }
        
    }
    if(val.find("email.asHTML") != val.end())
    {
        if(!val["email.asHTML"].is_null())
        {
            ConfigNodePropertyBoolean newItem;
            newItem.fromJson(val["email.asHTML"]);
            setEmailAsHTML( newItem );
        }
        
    }
    if(val.find("email.defaultUserName") != val.end())
    {
        if(!val["email.defaultUserName"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["email.defaultUserName"]);
            setEmailDefaultUserName( newItem );
        }
        
    }
    if(val.find("email.templates.rootPath") != val.end())
    {
        if(!val["email.templates.rootPath"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["email.templates.rootPath"]);
            setEmailTemplatesRootPath( newItem );
        }
        
    }
    
}


ConfigNodePropertyString ComAdobeCqSocialCommonsEmailreplyImplEmailReplyConfigurationImpProperties::getEmailName() const
{
    return m_Email_name;
}
void ComAdobeCqSocialCommonsEmailreplyImplEmailReplyConfigurationImpProperties::setEmailName(ConfigNodePropertyString const& value)
{
    m_Email_name = value;
    m_Email_nameIsSet = true;
}
bool ComAdobeCqSocialCommonsEmailreplyImplEmailReplyConfigurationImpProperties::emailNameIsSet() const
{
    return m_Email_nameIsSet;
}
void ComAdobeCqSocialCommonsEmailreplyImplEmailReplyConfigurationImpProperties::unsetEmail_name()
{
    m_Email_nameIsSet = false;
}
ConfigNodePropertyBoolean ComAdobeCqSocialCommonsEmailreplyImplEmailReplyConfigurationImpProperties::getEmailCreatePostFromReply() const
{
    return m_Email_createPostFromReply;
}
void ComAdobeCqSocialCommonsEmailreplyImplEmailReplyConfigurationImpProperties::setEmailCreatePostFromReply(ConfigNodePropertyBoolean const& value)
{
    m_Email_createPostFromReply = value;
    m_Email_createPostFromReplyIsSet = true;
}
bool ComAdobeCqSocialCommonsEmailreplyImplEmailReplyConfigurationImpProperties::emailCreatePostFromReplyIsSet() const
{
    return m_Email_createPostFromReplyIsSet;
}
void ComAdobeCqSocialCommonsEmailreplyImplEmailReplyConfigurationImpProperties::unsetEmail_createPostFromReply()
{
    m_Email_createPostFromReplyIsSet = false;
}
ConfigNodePropertyDropDown ComAdobeCqSocialCommonsEmailreplyImplEmailReplyConfigurationImpProperties::getEmailAddCommentIdTo() const
{
    return m_Email_addCommentIdTo;
}
void ComAdobeCqSocialCommonsEmailreplyImplEmailReplyConfigurationImpProperties::setEmailAddCommentIdTo(ConfigNodePropertyDropDown const& value)
{
    m_Email_addCommentIdTo = value;
    m_Email_addCommentIdToIsSet = true;
}
bool ComAdobeCqSocialCommonsEmailreplyImplEmailReplyConfigurationImpProperties::emailAddCommentIdToIsSet() const
{
    return m_Email_addCommentIdToIsSet;
}
void ComAdobeCqSocialCommonsEmailreplyImplEmailReplyConfigurationImpProperties::unsetEmail_addCommentIdTo()
{
    m_Email_addCommentIdToIsSet = false;
}
ConfigNodePropertyInteger ComAdobeCqSocialCommonsEmailreplyImplEmailReplyConfigurationImpProperties::getEmailSubjectMaximumLength() const
{
    return m_Email_subjectMaximumLength;
}
void ComAdobeCqSocialCommonsEmailreplyImplEmailReplyConfigurationImpProperties::setEmailSubjectMaximumLength(ConfigNodePropertyInteger const& value)
{
    m_Email_subjectMaximumLength = value;
    m_Email_subjectMaximumLengthIsSet = true;
}
bool ComAdobeCqSocialCommonsEmailreplyImplEmailReplyConfigurationImpProperties::emailSubjectMaximumLengthIsSet() const
{
    return m_Email_subjectMaximumLengthIsSet;
}
void ComAdobeCqSocialCommonsEmailreplyImplEmailReplyConfigurationImpProperties::unsetEmail_subjectMaximumLength()
{
    m_Email_subjectMaximumLengthIsSet = false;
}
ConfigNodePropertyString ComAdobeCqSocialCommonsEmailreplyImplEmailReplyConfigurationImpProperties::getEmailReplyToAddress() const
{
    return m_Email_replyToAddress;
}
void ComAdobeCqSocialCommonsEmailreplyImplEmailReplyConfigurationImpProperties::setEmailReplyToAddress(ConfigNodePropertyString const& value)
{
    m_Email_replyToAddress = value;
    m_Email_replyToAddressIsSet = true;
}
bool ComAdobeCqSocialCommonsEmailreplyImplEmailReplyConfigurationImpProperties::emailReplyToAddressIsSet() const
{
    return m_Email_replyToAddressIsSet;
}
void ComAdobeCqSocialCommonsEmailreplyImplEmailReplyConfigurationImpProperties::unsetEmail_replyToAddress()
{
    m_Email_replyToAddressIsSet = false;
}
ConfigNodePropertyString ComAdobeCqSocialCommonsEmailreplyImplEmailReplyConfigurationImpProperties::getEmailReplyToDelimiter() const
{
    return m_Email_replyToDelimiter;
}
void ComAdobeCqSocialCommonsEmailreplyImplEmailReplyConfigurationImpProperties::setEmailReplyToDelimiter(ConfigNodePropertyString const& value)
{
    m_Email_replyToDelimiter = value;
    m_Email_replyToDelimiterIsSet = true;
}
bool ComAdobeCqSocialCommonsEmailreplyImplEmailReplyConfigurationImpProperties::emailReplyToDelimiterIsSet() const
{
    return m_Email_replyToDelimiterIsSet;
}
void ComAdobeCqSocialCommonsEmailreplyImplEmailReplyConfigurationImpProperties::unsetEmail_replyToDelimiter()
{
    m_Email_replyToDelimiterIsSet = false;
}
ConfigNodePropertyString ComAdobeCqSocialCommonsEmailreplyImplEmailReplyConfigurationImpProperties::getEmailTrackerIdPrefixInSubject() const
{
    return m_Email_trackerIdPrefixInSubject;
}
void ComAdobeCqSocialCommonsEmailreplyImplEmailReplyConfigurationImpProperties::setEmailTrackerIdPrefixInSubject(ConfigNodePropertyString const& value)
{
    m_Email_trackerIdPrefixInSubject = value;
    m_Email_trackerIdPrefixInSubjectIsSet = true;
}
bool ComAdobeCqSocialCommonsEmailreplyImplEmailReplyConfigurationImpProperties::emailTrackerIdPrefixInSubjectIsSet() const
{
    return m_Email_trackerIdPrefixInSubjectIsSet;
}
void ComAdobeCqSocialCommonsEmailreplyImplEmailReplyConfigurationImpProperties::unsetEmail_trackerIdPrefixInSubject()
{
    m_Email_trackerIdPrefixInSubjectIsSet = false;
}
ConfigNodePropertyString ComAdobeCqSocialCommonsEmailreplyImplEmailReplyConfigurationImpProperties::getEmailTrackerIdPrefixInBody() const
{
    return m_Email_trackerIdPrefixInBody;
}
void ComAdobeCqSocialCommonsEmailreplyImplEmailReplyConfigurationImpProperties::setEmailTrackerIdPrefixInBody(ConfigNodePropertyString const& value)
{
    m_Email_trackerIdPrefixInBody = value;
    m_Email_trackerIdPrefixInBodyIsSet = true;
}
bool ComAdobeCqSocialCommonsEmailreplyImplEmailReplyConfigurationImpProperties::emailTrackerIdPrefixInBodyIsSet() const
{
    return m_Email_trackerIdPrefixInBodyIsSet;
}
void ComAdobeCqSocialCommonsEmailreplyImplEmailReplyConfigurationImpProperties::unsetEmail_trackerIdPrefixInBody()
{
    m_Email_trackerIdPrefixInBodyIsSet = false;
}
ConfigNodePropertyBoolean ComAdobeCqSocialCommonsEmailreplyImplEmailReplyConfigurationImpProperties::getEmailAsHTML() const
{
    return m_Email_asHTML;
}
void ComAdobeCqSocialCommonsEmailreplyImplEmailReplyConfigurationImpProperties::setEmailAsHTML(ConfigNodePropertyBoolean const& value)
{
    m_Email_asHTML = value;
    m_Email_asHTMLIsSet = true;
}
bool ComAdobeCqSocialCommonsEmailreplyImplEmailReplyConfigurationImpProperties::emailAsHTMLIsSet() const
{
    return m_Email_asHTMLIsSet;
}
void ComAdobeCqSocialCommonsEmailreplyImplEmailReplyConfigurationImpProperties::unsetEmail_asHTML()
{
    m_Email_asHTMLIsSet = false;
}
ConfigNodePropertyString ComAdobeCqSocialCommonsEmailreplyImplEmailReplyConfigurationImpProperties::getEmailDefaultUserName() const
{
    return m_Email_defaultUserName;
}
void ComAdobeCqSocialCommonsEmailreplyImplEmailReplyConfigurationImpProperties::setEmailDefaultUserName(ConfigNodePropertyString const& value)
{
    m_Email_defaultUserName = value;
    m_Email_defaultUserNameIsSet = true;
}
bool ComAdobeCqSocialCommonsEmailreplyImplEmailReplyConfigurationImpProperties::emailDefaultUserNameIsSet() const
{
    return m_Email_defaultUserNameIsSet;
}
void ComAdobeCqSocialCommonsEmailreplyImplEmailReplyConfigurationImpProperties::unsetEmail_defaultUserName()
{
    m_Email_defaultUserNameIsSet = false;
}
ConfigNodePropertyString ComAdobeCqSocialCommonsEmailreplyImplEmailReplyConfigurationImpProperties::getEmailTemplatesRootPath() const
{
    return m_Email_templates_rootPath;
}
void ComAdobeCqSocialCommonsEmailreplyImplEmailReplyConfigurationImpProperties::setEmailTemplatesRootPath(ConfigNodePropertyString const& value)
{
    m_Email_templates_rootPath = value;
    m_Email_templates_rootPathIsSet = true;
}
bool ComAdobeCqSocialCommonsEmailreplyImplEmailReplyConfigurationImpProperties::emailTemplatesRootPathIsSet() const
{
    return m_Email_templates_rootPathIsSet;
}
void ComAdobeCqSocialCommonsEmailreplyImplEmailReplyConfigurationImpProperties::unsetEmail_templates_rootPath()
{
    m_Email_templates_rootPathIsSet = false;
}

}
}
}
}

