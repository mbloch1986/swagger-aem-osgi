/**
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


#include "OAIOrgApacheJackrabbitOakSpiSecurityUserActionDefaultAuthorizableProperties.h"

#include "OAIHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace OpenAPI {

OAIOrgApacheJackrabbitOakSpiSecurityUserActionDefaultAuthorizableProperties::OAIOrgApacheJackrabbitOakSpiSecurityUserActionDefaultAuthorizableProperties(QString json) {
    this->fromJson(json);
}

OAIOrgApacheJackrabbitOakSpiSecurityUserActionDefaultAuthorizableProperties::OAIOrgApacheJackrabbitOakSpiSecurityUserActionDefaultAuthorizableProperties() {
    this->init();
}

OAIOrgApacheJackrabbitOakSpiSecurityUserActionDefaultAuthorizableProperties::~OAIOrgApacheJackrabbitOakSpiSecurityUserActionDefaultAuthorizableProperties() {
    
}

void
OAIOrgApacheJackrabbitOakSpiSecurityUserActionDefaultAuthorizableProperties::init() {
    m_enabled_actions_isSet = false;
    m_user_privilege_names_isSet = false;
    m_group_privilege_names_isSet = false;
    m_constraint_isSet = false;
}

void
OAIOrgApacheJackrabbitOakSpiSecurityUserActionDefaultAuthorizableProperties::fromJson(QString jsonString) {
    QByteArray array (jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void
OAIOrgApacheJackrabbitOakSpiSecurityUserActionDefaultAuthorizableProperties::fromJsonObject(QJsonObject json) {
    ::OpenAPI::fromJsonValue(enabled_actions, json[QString("enabledActions")]);
    
    ::OpenAPI::fromJsonValue(user_privilege_names, json[QString("userPrivilegeNames")]);
    
    ::OpenAPI::fromJsonValue(group_privilege_names, json[QString("groupPrivilegeNames")]);
    
    ::OpenAPI::fromJsonValue(constraint, json[QString("constraint")]);
    
}

QString
OAIOrgApacheJackrabbitOakSpiSecurityUserActionDefaultAuthorizableProperties::asJson () const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject
OAIOrgApacheJackrabbitOakSpiSecurityUserActionDefaultAuthorizableProperties::asJsonObject() const {
    QJsonObject obj;
	if(enabled_actions.isSet()){
        obj.insert(QString("enabledActions"), ::OpenAPI::toJsonValue(enabled_actions));
    }
	if(user_privilege_names.isSet()){
        obj.insert(QString("userPrivilegeNames"), ::OpenAPI::toJsonValue(user_privilege_names));
    }
	if(group_privilege_names.isSet()){
        obj.insert(QString("groupPrivilegeNames"), ::OpenAPI::toJsonValue(group_privilege_names));
    }
	if(constraint.isSet()){
        obj.insert(QString("constraint"), ::OpenAPI::toJsonValue(constraint));
    }
    return obj;
}

OAIConfigNodePropertyDropDown
OAIOrgApacheJackrabbitOakSpiSecurityUserActionDefaultAuthorizableProperties::getEnabledActions() const {
    return enabled_actions;
}
void
OAIOrgApacheJackrabbitOakSpiSecurityUserActionDefaultAuthorizableProperties::setEnabledActions(const OAIConfigNodePropertyDropDown &enabled_actions) {
    this->enabled_actions = enabled_actions;
    this->m_enabled_actions_isSet = true;
}

OAIConfigNodePropertyArray
OAIOrgApacheJackrabbitOakSpiSecurityUserActionDefaultAuthorizableProperties::getUserPrivilegeNames() const {
    return user_privilege_names;
}
void
OAIOrgApacheJackrabbitOakSpiSecurityUserActionDefaultAuthorizableProperties::setUserPrivilegeNames(const OAIConfigNodePropertyArray &user_privilege_names) {
    this->user_privilege_names = user_privilege_names;
    this->m_user_privilege_names_isSet = true;
}

OAIConfigNodePropertyArray
OAIOrgApacheJackrabbitOakSpiSecurityUserActionDefaultAuthorizableProperties::getGroupPrivilegeNames() const {
    return group_privilege_names;
}
void
OAIOrgApacheJackrabbitOakSpiSecurityUserActionDefaultAuthorizableProperties::setGroupPrivilegeNames(const OAIConfigNodePropertyArray &group_privilege_names) {
    this->group_privilege_names = group_privilege_names;
    this->m_group_privilege_names_isSet = true;
}

OAIConfigNodePropertyString
OAIOrgApacheJackrabbitOakSpiSecurityUserActionDefaultAuthorizableProperties::getConstraint() const {
    return constraint;
}
void
OAIOrgApacheJackrabbitOakSpiSecurityUserActionDefaultAuthorizableProperties::setConstraint(const OAIConfigNodePropertyString &constraint) {
    this->constraint = constraint;
    this->m_constraint_isSet = true;
}


bool
OAIOrgApacheJackrabbitOakSpiSecurityUserActionDefaultAuthorizableProperties::isSet() const {
    bool isObjectUpdated = false;
    do{ 
        if(enabled_actions.isSet()){ isObjectUpdated = true; break;}
    
        if(user_privilege_names.isSet()){ isObjectUpdated = true; break;}
    
        if(group_privilege_names.isSet()){ isObjectUpdated = true; break;}
    
        if(constraint.isSet()){ isObjectUpdated = true; break;}
    }while(false);
    return isObjectUpdated;
}

}

