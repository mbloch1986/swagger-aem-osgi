/**
* Adobe Experience Manager OSGI config (AEM) API
* Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
*
* OpenAPI spec version: 1.0.0-pre.0
* Contact: opensource@shinesolutions.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/


#include "ComAdobeGraniteDistributionCoreImplDistributionToReplicationEvenProperties.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

ComAdobeGraniteDistributionCoreImplDistributionToReplicationEvenProperties::ComAdobeGraniteDistributionCoreImplDistributionToReplicationEvenProperties()
{
    m_Importer_nameIsSet = false;
    
}

ComAdobeGraniteDistributionCoreImplDistributionToReplicationEvenProperties::~ComAdobeGraniteDistributionCoreImplDistributionToReplicationEvenProperties()
{
}

void ComAdobeGraniteDistributionCoreImplDistributionToReplicationEvenProperties::validate()
{
    // TODO: implement validation
}

nlohmann::json ComAdobeGraniteDistributionCoreImplDistributionToReplicationEvenProperties::toJson() const
{
    nlohmann::json val = nlohmann::json::object();

    if(m_Importer_nameIsSet)
    {
        val["importer.name"] = ModelBase::toJson(m_Importer_name);
    }
    

    return val;
}

void ComAdobeGraniteDistributionCoreImplDistributionToReplicationEvenProperties::fromJson(nlohmann::json& val)
{
    if(val.find("importer.name") != val.end())
    {
        if(!val["importer.name"].is_null())
        {
            ConfigNodePropertyArray newItem;
            newItem.fromJson(val["importer.name"]);
            setImporterName( newItem );
        }
        
    }
    
}


ConfigNodePropertyArray ComAdobeGraniteDistributionCoreImplDistributionToReplicationEvenProperties::getImporterName() const
{
    return m_Importer_name;
}
void ComAdobeGraniteDistributionCoreImplDistributionToReplicationEvenProperties::setImporterName(ConfigNodePropertyArray const& value)
{
    m_Importer_name = value;
    m_Importer_nameIsSet = true;
}
bool ComAdobeGraniteDistributionCoreImplDistributionToReplicationEvenProperties::importerNameIsSet() const
{
    return m_Importer_nameIsSet;
}
void ComAdobeGraniteDistributionCoreImplDistributionToReplicationEvenProperties::unsetImporter_name()
{
    m_Importer_nameIsSet = false;
}

}
}
}
}

