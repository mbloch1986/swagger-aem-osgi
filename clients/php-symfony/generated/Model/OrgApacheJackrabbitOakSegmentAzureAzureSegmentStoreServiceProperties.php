<?php
/**
 * OrgApacheJackrabbitOakSegmentAzureAzureSegmentStoreServiceProperties
 *
 * PHP version 5
 *
 * @category Class
 * @package  OpenAPI\Server\Model
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * Adobe Experience Manager OSGI config (AEM) API
 *
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 *
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Do not edit the class manually.
 */

namespace OpenAPI\Server\Model;

use Symfony\Component\Validator\Constraints as Assert;
use JMS\Serializer\Annotation\Type;
use JMS\Serializer\Annotation\SerializedName;

/**
 * Class representing the OrgApacheJackrabbitOakSegmentAzureAzureSegmentStoreServiceProperties model.
 *
 * @package OpenAPI\Server\Model
 * @author  OpenAPI Generator team
 */
class OrgApacheJackrabbitOakSegmentAzureAzureSegmentStoreServiceProperties 
{
        /**
     * @var OpenAPI\Server\Model\ConfigNodePropertyString|null
     * @SerializedName("accountName")
     * @Assert\Type("OpenAPI\Server\Model\ConfigNodePropertyString")
     * @Type("OpenAPI\Server\Model\ConfigNodePropertyString")
     */
    protected $accountName;

    /**
     * @var OpenAPI\Server\Model\ConfigNodePropertyString|null
     * @SerializedName("containerName")
     * @Assert\Type("OpenAPI\Server\Model\ConfigNodePropertyString")
     * @Type("OpenAPI\Server\Model\ConfigNodePropertyString")
     */
    protected $containerName;

    /**
     * @var OpenAPI\Server\Model\ConfigNodePropertyString|null
     * @SerializedName("accessKey")
     * @Assert\Type("OpenAPI\Server\Model\ConfigNodePropertyString")
     * @Type("OpenAPI\Server\Model\ConfigNodePropertyString")
     */
    protected $accessKey;

    /**
     * @var OpenAPI\Server\Model\ConfigNodePropertyString|null
     * @SerializedName("rootPath")
     * @Assert\Type("OpenAPI\Server\Model\ConfigNodePropertyString")
     * @Type("OpenAPI\Server\Model\ConfigNodePropertyString")
     */
    protected $rootPath;

    /**
     * @var OpenAPI\Server\Model\ConfigNodePropertyString|null
     * @SerializedName("connectionURL")
     * @Assert\Type("OpenAPI\Server\Model\ConfigNodePropertyString")
     * @Type("OpenAPI\Server\Model\ConfigNodePropertyString")
     */
    protected $connectionURL;

    /**
     * Constructor
     * @param mixed[] $data Associated array of property values initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->accountName = isset($data['accountName']) ? $data['accountName'] : null;
        $this->containerName = isset($data['containerName']) ? $data['containerName'] : null;
        $this->accessKey = isset($data['accessKey']) ? $data['accessKey'] : null;
        $this->rootPath = isset($data['rootPath']) ? $data['rootPath'] : null;
        $this->connectionURL = isset($data['connectionURL']) ? $data['connectionURL'] : null;
    }

    /**
     * Gets accountName.
     *
     * @return OpenAPI\Server\Model\ConfigNodePropertyString|null
     */
    public function getAccountName()
    {
        return $this->accountName;
    }

    /**
     * Sets accountName.
     *
     * @param OpenAPI\Server\Model\ConfigNodePropertyString|null $accountName
     *
     * @return $this
     */
    public function setAccountName(ConfigNodePropertyString $accountName = null)
    {
        $this->accountName = $accountName;

        return $this;
    }

    /**
     * Gets containerName.
     *
     * @return OpenAPI\Server\Model\ConfigNodePropertyString|null
     */
    public function getContainerName()
    {
        return $this->containerName;
    }

    /**
     * Sets containerName.
     *
     * @param OpenAPI\Server\Model\ConfigNodePropertyString|null $containerName
     *
     * @return $this
     */
    public function setContainerName(ConfigNodePropertyString $containerName = null)
    {
        $this->containerName = $containerName;

        return $this;
    }

    /**
     * Gets accessKey.
     *
     * @return OpenAPI\Server\Model\ConfigNodePropertyString|null
     */
    public function getAccessKey()
    {
        return $this->accessKey;
    }

    /**
     * Sets accessKey.
     *
     * @param OpenAPI\Server\Model\ConfigNodePropertyString|null $accessKey
     *
     * @return $this
     */
    public function setAccessKey(ConfigNodePropertyString $accessKey = null)
    {
        $this->accessKey = $accessKey;

        return $this;
    }

    /**
     * Gets rootPath.
     *
     * @return OpenAPI\Server\Model\ConfigNodePropertyString|null
     */
    public function getRootPath()
    {
        return $this->rootPath;
    }

    /**
     * Sets rootPath.
     *
     * @param OpenAPI\Server\Model\ConfigNodePropertyString|null $rootPath
     *
     * @return $this
     */
    public function setRootPath(ConfigNodePropertyString $rootPath = null)
    {
        $this->rootPath = $rootPath;

        return $this;
    }

    /**
     * Gets connectionURL.
     *
     * @return OpenAPI\Server\Model\ConfigNodePropertyString|null
     */
    public function getConnectionURL()
    {
        return $this->connectionURL;
    }

    /**
     * Sets connectionURL.
     *
     * @param OpenAPI\Server\Model\ConfigNodePropertyString|null $connectionURL
     *
     * @return $this
     */
    public function setConnectionURL(ConfigNodePropertyString $connectionURL = null)
    {
        $this->connectionURL = $connectionURL;

        return $this;
    }
}


