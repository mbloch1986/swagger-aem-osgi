//
// ComAdobeGraniteAuthOauthProviderProperties.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation


open class ComAdobeGraniteAuthOauthProviderProperties: JSONEncodable {

    public var oauthConfigId: ConfigNodePropertyString?
    public var oauthClientId: ConfigNodePropertyString?
    public var oauthClientSecret: ConfigNodePropertyString?
    public var oauthScope: ConfigNodePropertyArray?
    public var oauthConfigProviderId: ConfigNodePropertyString?
    public var oauthCreateUsers: ConfigNodePropertyBoolean?
    public var oauthUseridProperty: ConfigNodePropertyString?
    public var forceStrictUsernameMatching: ConfigNodePropertyBoolean?
    public var oauthEncodeUserids: ConfigNodePropertyBoolean?
    public var oauthHashUserids: ConfigNodePropertyBoolean?
    public var oauthCallBackUrl: ConfigNodePropertyString?
    public var oauthAccessTokenPersist: ConfigNodePropertyBoolean?
    public var oauthAccessTokenPersistCookie: ConfigNodePropertyBoolean?
    public var oauthCsrfStateProtection: ConfigNodePropertyBoolean?
    public var oauthRedirectRequestParams: ConfigNodePropertyBoolean?
    public var oauthConfigSiblingsAllow: ConfigNodePropertyBoolean?

    public init() {}

    // MARK: JSONEncodable
    open func encodeToJSON() -> Any {
        var nillableDictionary = [String:Any?]()
        nillableDictionary["oauth.config.id"] = self.oauthConfigId?.encodeToJSON()
        nillableDictionary["oauth.client.id"] = self.oauthClientId?.encodeToJSON()
        nillableDictionary["oauth.client.secret"] = self.oauthClientSecret?.encodeToJSON()
        nillableDictionary["oauth.scope"] = self.oauthScope?.encodeToJSON()
        nillableDictionary["oauth.config.provider.id"] = self.oauthConfigProviderId?.encodeToJSON()
        nillableDictionary["oauth.create.users"] = self.oauthCreateUsers?.encodeToJSON()
        nillableDictionary["oauth.userid.property"] = self.oauthUseridProperty?.encodeToJSON()
        nillableDictionary["force.strict.username.matching"] = self.forceStrictUsernameMatching?.encodeToJSON()
        nillableDictionary["oauth.encode.userids"] = self.oauthEncodeUserids?.encodeToJSON()
        nillableDictionary["oauth.hash.userids"] = self.oauthHashUserids?.encodeToJSON()
        nillableDictionary["oauth.callBackUrl"] = self.oauthCallBackUrl?.encodeToJSON()
        nillableDictionary["oauth.access.token.persist"] = self.oauthAccessTokenPersist?.encodeToJSON()
        nillableDictionary["oauth.access.token.persist.cookie"] = self.oauthAccessTokenPersistCookie?.encodeToJSON()
        nillableDictionary["oauth.csrf.state.protection"] = self.oauthCsrfStateProtection?.encodeToJSON()
        nillableDictionary["oauth.redirect.request.params"] = self.oauthRedirectRequestParams?.encodeToJSON()
        nillableDictionary["oauth.config.siblings.allow"] = self.oauthConfigSiblingsAllow?.encodeToJSON()

        let dictionary: [String:Any] = APIHelper.rejectNil(nillableDictionary) ?? [:]
        return dictionary
    }
}

