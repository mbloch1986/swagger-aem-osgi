/* 
 * Adobe Experience Manager OSGI config (AEM) API
 *
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 * Generated by: https://openapi-generator.tech
 */


#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct ComAdobeGraniteOptoutImplOptOutServiceImplProperties {
  #[serde(rename = "optout.cookies")]
  optout_cookies: Option<::models::ConfigNodePropertyArray>,
  #[serde(rename = "optout.headers")]
  optout_headers: Option<::models::ConfigNodePropertyArray>,
  #[serde(rename = "optout.whitelist.cookies")]
  optout_whitelist_cookies: Option<::models::ConfigNodePropertyArray>
}

impl ComAdobeGraniteOptoutImplOptOutServiceImplProperties {
  pub fn new() -> ComAdobeGraniteOptoutImplOptOutServiceImplProperties {
    ComAdobeGraniteOptoutImplOptOutServiceImplProperties {
      optout_cookies: None,
      optout_headers: None,
      optout_whitelist_cookies: None
    }
  }

  pub fn set_optout_cookies(&mut self, optout_cookies: ::models::ConfigNodePropertyArray) {
    self.optout_cookies = Some(optout_cookies);
  }

  pub fn with_optout_cookies(mut self, optout_cookies: ::models::ConfigNodePropertyArray) -> ComAdobeGraniteOptoutImplOptOutServiceImplProperties {
    self.optout_cookies = Some(optout_cookies);
    self
  }

  pub fn optout_cookies(&self) -> Option<&::models::ConfigNodePropertyArray> {
    self.optout_cookies.as_ref()
  }

  pub fn reset_optout_cookies(&mut self) {
    self.optout_cookies = None;
  }

  pub fn set_optout_headers(&mut self, optout_headers: ::models::ConfigNodePropertyArray) {
    self.optout_headers = Some(optout_headers);
  }

  pub fn with_optout_headers(mut self, optout_headers: ::models::ConfigNodePropertyArray) -> ComAdobeGraniteOptoutImplOptOutServiceImplProperties {
    self.optout_headers = Some(optout_headers);
    self
  }

  pub fn optout_headers(&self) -> Option<&::models::ConfigNodePropertyArray> {
    self.optout_headers.as_ref()
  }

  pub fn reset_optout_headers(&mut self) {
    self.optout_headers = None;
  }

  pub fn set_optout_whitelist_cookies(&mut self, optout_whitelist_cookies: ::models::ConfigNodePropertyArray) {
    self.optout_whitelist_cookies = Some(optout_whitelist_cookies);
  }

  pub fn with_optout_whitelist_cookies(mut self, optout_whitelist_cookies: ::models::ConfigNodePropertyArray) -> ComAdobeGraniteOptoutImplOptOutServiceImplProperties {
    self.optout_whitelist_cookies = Some(optout_whitelist_cookies);
    self
  }

  pub fn optout_whitelist_cookies(&self) -> Option<&::models::ConfigNodePropertyArray> {
    self.optout_whitelist_cookies.as_ref()
  }

  pub fn reset_optout_whitelist_cookies(&mut self) {
    self.optout_whitelist_cookies = None;
  }

}



