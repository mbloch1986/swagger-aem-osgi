package org.openapitools.client.api

import argonaut._
import argonaut.EncodeJson._
import argonaut.DecodeJson._

import org.http4s.{EntityDecoder, EntityEncoder}
import org.http4s.argonaut._
import org.joda.time.DateTime
import ComAdobeGraniteRequestsLoggingImplHcRequestsStatusHealthCheckImProperties._

case class ComAdobeGraniteRequestsLoggingImplHcRequestsStatusHealthCheckImProperties (
  hcTags: Option[ConfigNodePropertyArray])

object ComAdobeGraniteRequestsLoggingImplHcRequestsStatusHealthCheckImProperties {
  import DateTimeCodecs._

  implicit val ComAdobeGraniteRequestsLoggingImplHcRequestsStatusHealthCheckImPropertiesCodecJson: CodecJson[ComAdobeGraniteRequestsLoggingImplHcRequestsStatusHealthCheckImProperties] = CodecJson.derive[ComAdobeGraniteRequestsLoggingImplHcRequestsStatusHealthCheckImProperties]
  implicit val ComAdobeGraniteRequestsLoggingImplHcRequestsStatusHealthCheckImPropertiesDecoder: EntityDecoder[ComAdobeGraniteRequestsLoggingImplHcRequestsStatusHealthCheckImProperties] = jsonOf[ComAdobeGraniteRequestsLoggingImplHcRequestsStatusHealthCheckImProperties]
  implicit val ComAdobeGraniteRequestsLoggingImplHcRequestsStatusHealthCheckImPropertiesEncoder: EntityEncoder[ComAdobeGraniteRequestsLoggingImplHcRequestsStatusHealthCheckImProperties] = jsonEncoderOf[ComAdobeGraniteRequestsLoggingImplHcRequestsStatusHealthCheckImProperties]
}
