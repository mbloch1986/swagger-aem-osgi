/**
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


#include "OAIComAdobeCqHistoryImplHistoryRequestFilterProperties.h"

#include "OAIHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace OpenAPI {

OAIComAdobeCqHistoryImplHistoryRequestFilterProperties::OAIComAdobeCqHistoryImplHistoryRequestFilterProperties(QString json) {
    init();
    this->fromJson(json);
}

OAIComAdobeCqHistoryImplHistoryRequestFilterProperties::OAIComAdobeCqHistoryImplHistoryRequestFilterProperties() {
    init();
}

OAIComAdobeCqHistoryImplHistoryRequestFilterProperties::~OAIComAdobeCqHistoryImplHistoryRequestFilterProperties() {
    this->cleanup();
}

void
OAIComAdobeCqHistoryImplHistoryRequestFilterProperties::init() {
    history_request_filter_excluded_selectors = new OAIConfigNodePropertyArray();
    m_history_request_filter_excluded_selectors_isSet = false;
    history_request_filter_excluded_extensions = new OAIConfigNodePropertyArray();
    m_history_request_filter_excluded_extensions_isSet = false;
}

void
OAIComAdobeCqHistoryImplHistoryRequestFilterProperties::cleanup() {
    if(history_request_filter_excluded_selectors != nullptr) { 
        delete history_request_filter_excluded_selectors;
    }
    if(history_request_filter_excluded_extensions != nullptr) { 
        delete history_request_filter_excluded_extensions;
    }
}

OAIComAdobeCqHistoryImplHistoryRequestFilterProperties*
OAIComAdobeCqHistoryImplHistoryRequestFilterProperties::fromJson(QString json) {
    QByteArray array (json.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
    return this;
}

void
OAIComAdobeCqHistoryImplHistoryRequestFilterProperties::fromJsonObject(QJsonObject pJson) {
    ::OpenAPI::setValue(&history_request_filter_excluded_selectors, pJson["history.requestFilter.excludedSelectors"], "OAIConfigNodePropertyArray", "OAIConfigNodePropertyArray");
    
    ::OpenAPI::setValue(&history_request_filter_excluded_extensions, pJson["history.requestFilter.excludedExtensions"], "OAIConfigNodePropertyArray", "OAIConfigNodePropertyArray");
    
}

QString
OAIComAdobeCqHistoryImplHistoryRequestFilterProperties::asJson ()
{
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject
OAIComAdobeCqHistoryImplHistoryRequestFilterProperties::asJsonObject() {
    QJsonObject obj;
    if((history_request_filter_excluded_selectors != nullptr) && (history_request_filter_excluded_selectors->isSet())){
        toJsonValue(QString("history.requestFilter.excludedSelectors"), history_request_filter_excluded_selectors, obj, QString("OAIConfigNodePropertyArray"));
    }
    if((history_request_filter_excluded_extensions != nullptr) && (history_request_filter_excluded_extensions->isSet())){
        toJsonValue(QString("history.requestFilter.excludedExtensions"), history_request_filter_excluded_extensions, obj, QString("OAIConfigNodePropertyArray"));
    }

    return obj;
}

OAIConfigNodePropertyArray*
OAIComAdobeCqHistoryImplHistoryRequestFilterProperties::getHistoryRequestFilterExcludedSelectors() {
    return history_request_filter_excluded_selectors;
}
void
OAIComAdobeCqHistoryImplHistoryRequestFilterProperties::setHistoryRequestFilterExcludedSelectors(OAIConfigNodePropertyArray* history_request_filter_excluded_selectors) {
    this->history_request_filter_excluded_selectors = history_request_filter_excluded_selectors;
    this->m_history_request_filter_excluded_selectors_isSet = true;
}

OAIConfigNodePropertyArray*
OAIComAdobeCqHistoryImplHistoryRequestFilterProperties::getHistoryRequestFilterExcludedExtensions() {
    return history_request_filter_excluded_extensions;
}
void
OAIComAdobeCqHistoryImplHistoryRequestFilterProperties::setHistoryRequestFilterExcludedExtensions(OAIConfigNodePropertyArray* history_request_filter_excluded_extensions) {
    this->history_request_filter_excluded_extensions = history_request_filter_excluded_extensions;
    this->m_history_request_filter_excluded_extensions_isSet = true;
}


bool
OAIComAdobeCqHistoryImplHistoryRequestFilterProperties::isSet(){
    bool isObjectUpdated = false;
    do{
        if(history_request_filter_excluded_selectors != nullptr && history_request_filter_excluded_selectors->isSet()){ isObjectUpdated = true; break;}
        if(history_request_filter_excluded_extensions != nullptr && history_request_filter_excluded_extensions->isSet()){ isObjectUpdated = true; break;}
    }while(false);
    return isObjectUpdated;
}
}

