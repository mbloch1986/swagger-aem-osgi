<?php
/**
 * ComAdobeCqProjectsImplServletProjectImageServletProperties
 *
 * PHP version 5
 *
 * @category Class
 * @package  OpenAPI\Server\Model
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * Adobe Experience Manager OSGI config (AEM) API
 *
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 *
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Do not edit the class manually.
 */

namespace OpenAPI\Server\Model;

use Symfony\Component\Validator\Constraints as Assert;
use JMS\Serializer\Annotation\Type;
use JMS\Serializer\Annotation\SerializedName;

/**
 * Class representing the ComAdobeCqProjectsImplServletProjectImageServletProperties model.
 *
 * @package OpenAPI\Server\Model
 * @author  OpenAPI Generator team
 */
class ComAdobeCqProjectsImplServletProjectImageServletProperties 
{
        /**
     * @var OpenAPI\Server\Model\ConfigNodePropertyString|null
     * @SerializedName("image.quality")
     * @Assert\Type("OpenAPI\Server\Model\ConfigNodePropertyString")
     * @Type("OpenAPI\Server\Model\ConfigNodePropertyString")
     */
    protected $imageQuality;

    /**
     * @var OpenAPI\Server\Model\ConfigNodePropertyString|null
     * @SerializedName("image.supported.resolutions")
     * @Assert\Type("OpenAPI\Server\Model\ConfigNodePropertyString")
     * @Type("OpenAPI\Server\Model\ConfigNodePropertyString")
     */
    protected $imageSupportedResolutions;

    /**
     * Constructor
     * @param mixed[] $data Associated array of property values initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->imageQuality = isset($data['imageQuality']) ? $data['imageQuality'] : null;
        $this->imageSupportedResolutions = isset($data['imageSupportedResolutions']) ? $data['imageSupportedResolutions'] : null;
    }

    /**
     * Gets imageQuality.
     *
     * @return OpenAPI\Server\Model\ConfigNodePropertyString|null
     */
    public function getImageQuality()
    {
        return $this->imageQuality;
    }

    /**
     * Sets imageQuality.
     *
     * @param OpenAPI\Server\Model\ConfigNodePropertyString|null $imageQuality
     *
     * @return $this
     */
    public function setImageQuality(ConfigNodePropertyString $imageQuality = null)
    {
        $this->imageQuality = $imageQuality;

        return $this;
    }

    /**
     * Gets imageSupportedResolutions.
     *
     * @return OpenAPI\Server\Model\ConfigNodePropertyString|null
     */
    public function getImageSupportedResolutions()
    {
        return $this->imageSupportedResolutions;
    }

    /**
     * Sets imageSupportedResolutions.
     *
     * @param OpenAPI\Server\Model\ConfigNodePropertyString|null $imageSupportedResolutions
     *
     * @return $this
     */
    public function setImageSupportedResolutions(ConfigNodePropertyString $imageSupportedResolutions = null)
    {
        $this->imageSupportedResolutions = $imageSupportedResolutions;

        return $this;
    }
}


