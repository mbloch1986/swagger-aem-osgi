/**
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


#include "OAIComDayCqWcmCoreImplWCMDebugFilterProperties.h"

#include "OAIHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace OpenAPI {

OAIComDayCqWcmCoreImplWCMDebugFilterProperties::OAIComDayCqWcmCoreImplWCMDebugFilterProperties(QString json) {
    init();
    this->fromJson(json);
}

OAIComDayCqWcmCoreImplWCMDebugFilterProperties::OAIComDayCqWcmCoreImplWCMDebugFilterProperties() {
    init();
}

OAIComDayCqWcmCoreImplWCMDebugFilterProperties::~OAIComDayCqWcmCoreImplWCMDebugFilterProperties() {
    this->cleanup();
}

void
OAIComDayCqWcmCoreImplWCMDebugFilterProperties::init() {
    wcmdbgfilter_enabled = new OAIConfigNodePropertyBoolean();
    m_wcmdbgfilter_enabled_isSet = false;
    wcmdbgfilter_jsp_debug = new OAIConfigNodePropertyBoolean();
    m_wcmdbgfilter_jsp_debug_isSet = false;
}

void
OAIComDayCqWcmCoreImplWCMDebugFilterProperties::cleanup() {
    if(wcmdbgfilter_enabled != nullptr) { 
        delete wcmdbgfilter_enabled;
    }
    if(wcmdbgfilter_jsp_debug != nullptr) { 
        delete wcmdbgfilter_jsp_debug;
    }
}

OAIComDayCqWcmCoreImplWCMDebugFilterProperties*
OAIComDayCqWcmCoreImplWCMDebugFilterProperties::fromJson(QString json) {
    QByteArray array (json.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
    return this;
}

void
OAIComDayCqWcmCoreImplWCMDebugFilterProperties::fromJsonObject(QJsonObject pJson) {
    ::OpenAPI::setValue(&wcmdbgfilter_enabled, pJson["wcmdbgfilter.enabled"], "OAIConfigNodePropertyBoolean", "OAIConfigNodePropertyBoolean");
    
    ::OpenAPI::setValue(&wcmdbgfilter_jsp_debug, pJson["wcmdbgfilter.jspDebug"], "OAIConfigNodePropertyBoolean", "OAIConfigNodePropertyBoolean");
    
}

QString
OAIComDayCqWcmCoreImplWCMDebugFilterProperties::asJson ()
{
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject
OAIComDayCqWcmCoreImplWCMDebugFilterProperties::asJsonObject() {
    QJsonObject obj;
    if((wcmdbgfilter_enabled != nullptr) && (wcmdbgfilter_enabled->isSet())){
        toJsonValue(QString("wcmdbgfilter.enabled"), wcmdbgfilter_enabled, obj, QString("OAIConfigNodePropertyBoolean"));
    }
    if((wcmdbgfilter_jsp_debug != nullptr) && (wcmdbgfilter_jsp_debug->isSet())){
        toJsonValue(QString("wcmdbgfilter.jspDebug"), wcmdbgfilter_jsp_debug, obj, QString("OAIConfigNodePropertyBoolean"));
    }

    return obj;
}

OAIConfigNodePropertyBoolean*
OAIComDayCqWcmCoreImplWCMDebugFilterProperties::getWcmdbgfilterEnabled() {
    return wcmdbgfilter_enabled;
}
void
OAIComDayCqWcmCoreImplWCMDebugFilterProperties::setWcmdbgfilterEnabled(OAIConfigNodePropertyBoolean* wcmdbgfilter_enabled) {
    this->wcmdbgfilter_enabled = wcmdbgfilter_enabled;
    this->m_wcmdbgfilter_enabled_isSet = true;
}

OAIConfigNodePropertyBoolean*
OAIComDayCqWcmCoreImplWCMDebugFilterProperties::getWcmdbgfilterJspDebug() {
    return wcmdbgfilter_jsp_debug;
}
void
OAIComDayCqWcmCoreImplWCMDebugFilterProperties::setWcmdbgfilterJspDebug(OAIConfigNodePropertyBoolean* wcmdbgfilter_jsp_debug) {
    this->wcmdbgfilter_jsp_debug = wcmdbgfilter_jsp_debug;
    this->m_wcmdbgfilter_jsp_debug_isSet = true;
}


bool
OAIComDayCqWcmCoreImplWCMDebugFilterProperties::isSet(){
    bool isObjectUpdated = false;
    do{
        if(wcmdbgfilter_enabled != nullptr && wcmdbgfilter_enabled->isSet()){ isObjectUpdated = true; break;}
        if(wcmdbgfilter_jsp_debug != nullptr && wcmdbgfilter_jsp_debug->isSet()){ isObjectUpdated = true; break;}
    }while(false);
    return isObjectUpdated;
}
}

