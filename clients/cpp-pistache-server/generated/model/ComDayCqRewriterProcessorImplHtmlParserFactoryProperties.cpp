/**
* Adobe Experience Manager OSGI config (AEM) API
* Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
*
* OpenAPI spec version: 1.0.0-pre.0
* Contact: opensource@shinesolutions.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/


#include "ComDayCqRewriterProcessorImplHtmlParserFactoryProperties.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

ComDayCqRewriterProcessorImplHtmlParserFactoryProperties::ComDayCqRewriterProcessorImplHtmlParserFactoryProperties()
{
    m_Htmlparser_processTagsIsSet = false;
    m_Htmlparser_preserveCamelCaseIsSet = false;
    
}

ComDayCqRewriterProcessorImplHtmlParserFactoryProperties::~ComDayCqRewriterProcessorImplHtmlParserFactoryProperties()
{
}

void ComDayCqRewriterProcessorImplHtmlParserFactoryProperties::validate()
{
    // TODO: implement validation
}

nlohmann::json ComDayCqRewriterProcessorImplHtmlParserFactoryProperties::toJson() const
{
    nlohmann::json val = nlohmann::json::object();

    if(m_Htmlparser_processTagsIsSet)
    {
        val["htmlparser.processTags"] = ModelBase::toJson(m_Htmlparser_processTags);
    }
    if(m_Htmlparser_preserveCamelCaseIsSet)
    {
        val["htmlparser.preserveCamelCase"] = ModelBase::toJson(m_Htmlparser_preserveCamelCase);
    }
    

    return val;
}

void ComDayCqRewriterProcessorImplHtmlParserFactoryProperties::fromJson(nlohmann::json& val)
{
    if(val.find("htmlparser.processTags") != val.end())
    {
        if(!val["htmlparser.processTags"].is_null())
        {
            ConfigNodePropertyArray newItem;
            newItem.fromJson(val["htmlparser.processTags"]);
            setHtmlparserProcessTags( newItem );
        }
        
    }
    if(val.find("htmlparser.preserveCamelCase") != val.end())
    {
        if(!val["htmlparser.preserveCamelCase"].is_null())
        {
            ConfigNodePropertyBoolean newItem;
            newItem.fromJson(val["htmlparser.preserveCamelCase"]);
            setHtmlparserPreserveCamelCase( newItem );
        }
        
    }
    
}


ConfigNodePropertyArray ComDayCqRewriterProcessorImplHtmlParserFactoryProperties::getHtmlparserProcessTags() const
{
    return m_Htmlparser_processTags;
}
void ComDayCqRewriterProcessorImplHtmlParserFactoryProperties::setHtmlparserProcessTags(ConfigNodePropertyArray const& value)
{
    m_Htmlparser_processTags = value;
    m_Htmlparser_processTagsIsSet = true;
}
bool ComDayCqRewriterProcessorImplHtmlParserFactoryProperties::htmlparserProcessTagsIsSet() const
{
    return m_Htmlparser_processTagsIsSet;
}
void ComDayCqRewriterProcessorImplHtmlParserFactoryProperties::unsetHtmlparser_processTags()
{
    m_Htmlparser_processTagsIsSet = false;
}
ConfigNodePropertyBoolean ComDayCqRewriterProcessorImplHtmlParserFactoryProperties::getHtmlparserPreserveCamelCase() const
{
    return m_Htmlparser_preserveCamelCase;
}
void ComDayCqRewriterProcessorImplHtmlParserFactoryProperties::setHtmlparserPreserveCamelCase(ConfigNodePropertyBoolean const& value)
{
    m_Htmlparser_preserveCamelCase = value;
    m_Htmlparser_preserveCamelCaseIsSet = true;
}
bool ComDayCqRewriterProcessorImplHtmlParserFactoryProperties::htmlparserPreserveCamelCaseIsSet() const
{
    return m_Htmlparser_preserveCamelCaseIsSet;
}
void ComDayCqRewriterProcessorImplHtmlParserFactoryProperties::unsetHtmlparser_preserveCamelCase()
{
    m_Htmlparser_preserveCamelCaseIsSet = false;
}

}
}
}
}

