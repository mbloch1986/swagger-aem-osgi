# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server.models.config_node_property_boolean import ConfigNodePropertyBoolean  # noqa: F401,E501
from openapi_server.models.config_node_property_string import ConfigNodePropertyString  # noqa: F401,E501
from openapi_server import util


class ComDayCqDamCoreImplJmxAssetUpdateMonitorImplProperties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, jmx_objectname: ConfigNodePropertyString=None, active: ConfigNodePropertyBoolean=None):  # noqa: E501
        """ComDayCqDamCoreImplJmxAssetUpdateMonitorImplProperties - a model defined in OpenAPI

        :param jmx_objectname: The jmx_objectname of this ComDayCqDamCoreImplJmxAssetUpdateMonitorImplProperties.  # noqa: E501
        :type jmx_objectname: ConfigNodePropertyString
        :param active: The active of this ComDayCqDamCoreImplJmxAssetUpdateMonitorImplProperties.  # noqa: E501
        :type active: ConfigNodePropertyBoolean
        """
        self.openapi_types = {
            'jmx_objectname': ConfigNodePropertyString,
            'active': ConfigNodePropertyBoolean
        }

        self.attribute_map = {
            'jmx_objectname': 'jmx.objectname',
            'active': 'active'
        }

        self._jmx_objectname = jmx_objectname
        self._active = active

    @classmethod
    def from_dict(cls, dikt) -> 'ComDayCqDamCoreImplJmxAssetUpdateMonitorImplProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The comDayCqDamCoreImplJmxAssetUpdateMonitorImplProperties of this ComDayCqDamCoreImplJmxAssetUpdateMonitorImplProperties.  # noqa: E501
        :rtype: ComDayCqDamCoreImplJmxAssetUpdateMonitorImplProperties
        """
        return util.deserialize_model(dikt, cls)

    @property
    def jmx_objectname(self) -> ConfigNodePropertyString:
        """Gets the jmx_objectname of this ComDayCqDamCoreImplJmxAssetUpdateMonitorImplProperties.


        :return: The jmx_objectname of this ComDayCqDamCoreImplJmxAssetUpdateMonitorImplProperties.
        :rtype: ConfigNodePropertyString
        """
        return self._jmx_objectname

    @jmx_objectname.setter
    def jmx_objectname(self, jmx_objectname: ConfigNodePropertyString):
        """Sets the jmx_objectname of this ComDayCqDamCoreImplJmxAssetUpdateMonitorImplProperties.


        :param jmx_objectname: The jmx_objectname of this ComDayCqDamCoreImplJmxAssetUpdateMonitorImplProperties.
        :type jmx_objectname: ConfigNodePropertyString
        """

        self._jmx_objectname = jmx_objectname

    @property
    def active(self) -> ConfigNodePropertyBoolean:
        """Gets the active of this ComDayCqDamCoreImplJmxAssetUpdateMonitorImplProperties.


        :return: The active of this ComDayCqDamCoreImplJmxAssetUpdateMonitorImplProperties.
        :rtype: ConfigNodePropertyBoolean
        """
        return self._active

    @active.setter
    def active(self, active: ConfigNodePropertyBoolean):
        """Sets the active of this ComDayCqDamCoreImplJmxAssetUpdateMonitorImplProperties.


        :param active: The active of this ComDayCqDamCoreImplJmxAssetUpdateMonitorImplProperties.
        :type active: ConfigNodePropertyBoolean
        """

        self._active = active
