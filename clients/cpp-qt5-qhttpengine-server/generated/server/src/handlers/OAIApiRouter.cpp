/**
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include <QJsonArray>
#include <QJsonDocument>
#include <QJsonObject>
#include <QVariantMap>
#include <QRegularExpression>

#include "OAIApiRouter.h"
#include "OAIConfigmgrApiRequest.h"


namespace OpenAPI {

inline QHttpEngine::Socket::Method toQHttpEngineMethod(QString method){

    if( method == QString("OPTIONS"))
        return QHttpEngine::Socket::Method::OPTIONS;
    if( method == QString("GET"))
        return QHttpEngine::Socket::Method::GET;
    if( method == QString("HEAD"))
        return QHttpEngine::Socket::Method::HEAD;
    if( method == QString("POST"))
        return QHttpEngine::Socket::Method::POST;
    if( method == QString("PUT"))
        return QHttpEngine::Socket::Method::PUT;
    if( method == QString("DELETE"))
        return QHttpEngine::Socket::Method::DELETE;
    if( method == QString("TRACE"))
        return QHttpEngine::Socket::Method::TRACE;
    if( method == QString("CONNECT"))
        return QHttpEngine::Socket::Method::CONNECT;

     return static_cast<QHttpEngine::Socket::Method>(-1);
}

ApiRouter::ApiRouter() {    
    OAIConfigmgrApiApiHandler = new OAIConfigmgrApiHandler();
     
}

ApiRouter::~ApiRouter(){
    qDebug() << "~ApiRouter()";    
    delete OAIConfigmgrApiApiHandler;
         
}

void ApiRouter::setUpRoutes() {
    
    Routes.insert("//system/console/configMgr/Adaptive Form and Interactive Communication Web Channel Configuration",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->adaptiveFormAndInteractiveCommunicationWebChannelConfigurationRequest();
        }
    });
    Routes.insert("//system/console/configMgr/Adaptive Form and Interactive Communication Web Channel Theme Configuration",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->adaptiveFormAndInteractiveCommunicationWebChannelThemeConfigurRequest();
        }
    });
    Routes.insert("//system/console/configMgr/Analytics Component Query Cache Service",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->analyticsComponentQueryCacheServiceRequest();
        }
    });
    Routes.insert("//system/console/configMgr/Apache Sling Health Check Result HTML Serializer",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->apacheSlingHealthCheckResultHTMLSerializerRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.aem.formsndocuments.config.AEMFormsManagerConfiguration",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeAemFormsndocumentsConfigAEMFormsManagerConfigurationRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.aem.transaction.core.impl.TransactionRecorder",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeAemTransactionCoreImplTransactionRecorderRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.aem.upgrade.prechecks.hc.impl.DeprecateIndexesHC",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeAemUpgradePrechecksHcImplDeprecateIndexesHCRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.aem.upgrade.prechecks.hc.impl.ReplicationAgentsDisabledHC",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeAemUpgradePrechecksHcImplReplicationAgentsDisabledHCRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.aem.upgrade.prechecks.mbean.impl.PreUpgradeTasksMBeanImpl",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeAemUpgradePrechecksMbeanImplPreUpgradeTasksMBeanImplRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.aem.upgrade.prechecks.tasks.impl.ConsistencyCheckTaskImpl",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeAemUpgradePrechecksTasksImplConsistencyCheckTaskImplRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.cq.account.api.AccountManagementService",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeCqAccountApiAccountManagementServiceRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.cq.account.impl.AccountManagementServlet",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeCqAccountImplAccountManagementServletRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.cq.address.impl.location.LocationListServlet",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeCqAddressImplLocationLocationListServletRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.cq.audit.purge.Dam",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeCqAuditPurgeDamRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.cq.audit.purge.Pages",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeCqAuditPurgePagesRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.cq.audit.purge.Replication",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeCqAuditPurgeReplicationRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.cq.cdn.rewriter.impl.AWSCloudFrontRewriter",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeCqCdnRewriterImplAWSCloudFrontRewriterRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.cq.cdn.rewriter.impl.CDNConfigServiceImpl",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeCqCdnRewriterImplCDNConfigServiceImplRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.cq.cdn.rewriter.impl.CDNRewriter",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeCqCdnRewriterImplCDNRewriterRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.cq.cloudconfig.core.impl.ConfigurationReplicationEventHandler",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeCqCloudconfigCoreImplConfigurationReplicationEventHandleRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.cq.commerce.impl.asset.DynamicImageHandler",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeCqCommerceImplAssetDynamicImageHandlerRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.cq.commerce.impl.asset.ProductAssetHandlerProviderImpl",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeCqCommerceImplAssetProductAssetHandlerProviderImplRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.cq.commerce.impl.asset.StaticImageHandler",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeCqCommerceImplAssetStaticImageHandlerRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.cq.commerce.impl.asset.VideoHandler",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeCqCommerceImplAssetVideoHandlerRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.cq.commerce.impl.promotion.PromotionManagerImpl",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeCqCommerceImplPromotionPromotionManagerImplRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.cq.commerce.pim.impl.cataloggenerator.CatalogGeneratorImpl",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeCqCommercePimImplCataloggeneratorCatalogGeneratorImplRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.cq.commerce.pim.impl.PageEventListener",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeCqCommercePimImplPageEventListenerRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.cq.commerce.pim.impl.productfeed.ProductFeedServiceImpl",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeCqCommercePimImplProductfeedProductFeedServiceImplRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.cq.contentinsight.impl.ReportingServicesSettingsProvider",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeCqContentinsightImplReportingServicesSettingsProviderRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.cq.contentinsight.impl.servlets.BrightEdgeProxyServlet",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeCqContentinsightImplServletsBrightEdgeProxyServletRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.cq.contentinsight.impl.servlets.ReportingServicesProxyServlet",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeCqContentinsightImplServletsReportingServicesProxyServleRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.cq.dam.cfm.impl.component.ComponentConfigImpl",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeCqDamCfmImplComponentComponentConfigImplRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.cq.dam.cfm.impl.conf.FeatureConfigImpl",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeCqDamCfmImplConfFeatureConfigImplRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.cq.dam.cfm.impl.content.rewriter.AssetProcessor",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeCqDamCfmImplContentRewriterAssetProcessorRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.cq.dam.cfm.impl.content.rewriter.ParRangeFilter",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeCqDamCfmImplContentRewriterParRangeFilterRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.cq.dam.cfm.impl.content.rewriter.PayloadFilter",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeCqDamCfmImplContentRewriterPayloadFilterRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.cq.dam.dm.process.image.PTiffManagerImpl",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeCqDamDmProcessImagePTiffManagerImplRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.cq.dam.ips.impl.replication.trigger.ReplicateOnModifyWorker",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeCqDamIpsImplReplicationTriggerReplicateOnModifyWorkerRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.cq.dam.mac.sync.helper.impl.MACSyncClientImpl",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeCqDamMacSyncHelperImplMACSyncClientImplRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.cq.dam.mac.sync.impl.DAMSyncServiceImpl",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeCqDamMacSyncImplDAMSyncServiceImplRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.cq.dam.processor.nui.impl.NuiAssetProcessor",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeCqDamProcessorNuiImplNuiAssetProcessorRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.cq.dam.s7imaging.impl.is.ImageServerComponent",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeCqDamS7imagingImplIsImageServerComponentRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.cq.dam.s7imaging.impl.ps.PlatformServerServlet",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeCqDamS7imagingImplPsPlatformServerServletRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.cq.dam.webdav.impl.io.AssetIOHandler",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeCqDamWebdavImplIoAssetIOHandlerRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.cq.dam.webdav.impl.io.DamWebdavVersionLinkingJob",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeCqDamWebdavImplIoDamWebdavVersionLinkingJobRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.cq.dam.webdav.impl.io.SpecialFilesHandler",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeCqDamWebdavImplIoSpecialFilesHandlerRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.cq.deserfw.impl.DeserializationFirewallImpl",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeCqDeserfwImplDeserializationFirewallImplRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.cq.dtm.impl.service.DTMWebServiceImpl",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeCqDtmImplServiceDTMWebServiceImplRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.cq.dtm.impl.servlets.DTMDeployHookServlet",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeCqDtmImplServletsDTMDeployHookServletRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.cq.dtm.reactor.impl.service.WebServiceImpl",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeCqDtmReactorImplServiceWebServiceImplRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.cq.experiencelog.impl.ExperienceLogConfigServlet",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeCqExperiencelogImplExperienceLogConfigServletRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.cq.hc.ContentPackagesHealthCheck",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeCqHcContentPackagesHealthCheckRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.cq.history.impl.HistoryRequestFilter",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeCqHistoryImplHistoryRequestFilterRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.cq.history.impl.HistoryServiceImpl",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeCqHistoryImplHistoryServiceImplRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.cq.inbox.impl.typeprovider.ItemTypeProvider",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeCqInboxImplTypeproviderItemTypeProviderRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.cq.projects.impl.servlet.ProjectImageServlet",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeCqProjectsImplServletProjectImageServletRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.cq.projects.purge.Scheduler",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeCqProjectsPurgeSchedulerRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.cq.scheduled.exporter.impl.ScheduledExporterImpl",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeCqScheduledExporterImplScheduledExporterImplRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.cq.screens.analytics.impl.ScreensAnalyticsServiceImpl",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeCqScreensAnalyticsImplScreensAnalyticsServiceImplRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.cq.screens.device.impl.DeviceService",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeCqScreensDeviceImplDeviceServiceRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.cq.screens.device.registration.impl.RegistrationServiceImpl",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeCqScreensDeviceRegistrationImplRegistrationServiceImplRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.cq.screens.impl.handler.ChannelsUpdateHandler",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeCqScreensImplHandlerChannelsUpdateHandlerRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.cq.screens.impl.jobs.DistributedDevicesStatiUpdateJob",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeCqScreensImplJobsDistributedDevicesStatiUpdateJobRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.cq.screens.impl.remote.impl.DistributedHttpClientImpl",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeCqScreensImplRemoteImplDistributedHttpClientImplRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.cq.screens.impl.ScreensChannelPostProcessor",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeCqScreensImplScreensChannelPostProcessorRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.cq.screens.monitoring.impl.ScreensMonitoringServiceImpl",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeCqScreensMonitoringImplScreensMonitoringServiceImplRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.cq.screens.mq.activemq.impl.ArtemisJMSProvider",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeCqScreensMqActivemqImplArtemisJMSProviderRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.cq.screens.offlinecontent.impl.BulkOfflineUpdateServiceImpl",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeCqScreensOfflinecontentImplBulkOfflineUpdateServiceImplRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.cq.screens.offlinecontent.impl.OfflineContentServiceImpl",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeCqScreensOfflinecontentImplOfflineContentServiceImplRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.cq.screens.segmentation.impl.SegmentationFeatureFlag",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeCqScreensSegmentationImplSegmentationFeatureFlagRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.cq.security.hc.bundles.impl.HtmlLibraryManagerConfigHealthCheck",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeCqSecurityHcBundlesImplHtmlLibraryManagerConfigHealthChRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.cq.security.hc.bundles.impl.WcmFilterHealthCheck",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeCqSecurityHcBundlesImplWcmFilterHealthCheckRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.cq.security.hc.dispatcher.impl.DispatcherAccessHealthCheck",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeCqSecurityHcDispatcherImplDispatcherAccessHealthCheckRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.cq.security.hc.packages.impl.ExampleContentHealthCheck",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeCqSecurityHcPackagesImplExampleContentHealthCheckRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.cq.security.hc.webserver.impl.ClickjackingHealthCheck",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeCqSecurityHcWebserverImplClickjackingHealthCheckRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.cq.social.accountverification.impl.AccountManagementConfigImpl",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeCqSocialAccountverificationImplAccountManagementConfigImRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.cq.social.activitystreams.client.impl.SocialActivityComponentFactoryImpl",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeCqSocialActivitystreamsClientImplSocialActivityComponenRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.cq.social.activitystreams.client.impl.SocialActivityStreamComponentFactory",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeCqSocialActivitystreamsClientImplSocialActivityStreamCoRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.cq.social.activitystreams.listener.impl.EventListenerHandler",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeCqSocialActivitystreamsListenerImplEventListenerHandlerRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.cq.social.activitystreams.listener.impl.ModerationEventExtension",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeCqSocialActivitystreamsListenerImplModerationEventExtenRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.cq.social.activitystreams.listener.impl.RatingEventActivitySuppressor",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeCqSocialActivitystreamsListenerImplRatingEventActivitySRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.cq.social.activitystreams.listener.impl.ResourceActivityStreamProviderFactory",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeCqSocialActivitystreamsListenerImplResourceActivityStreRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.cq.social.calendar.client.endpoints.impl.CalendarOperationsImpl",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeCqSocialCalendarClientEndpointsImplCalendarOperationsIRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.cq.social.calendar.client.operationextensions.EventAttachment",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeCqSocialCalendarClientOperationextensionsEventAttachmenRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.cq.social.calendar.servlets.TimeZoneServlet",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeCqSocialCalendarServletsTimeZoneServletRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.cq.social.commons.comments.endpoints.impl.CommentDeleteEventActivitySuppressor",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeCqSocialCommonsCommentsEndpointsImplCommentDeleteEventRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.cq.social.commons.comments.endpoints.impl.CommentOperationService",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeCqSocialCommonsCommentsEndpointsImplCommentOperationSeRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.cq.social.commons.comments.endpoints.impl.TranslationOperationService",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeCqSocialCommonsCommentsEndpointsImplTranslationOperatiRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.cq.social.commons.comments.listing.impl.SearchCommentSocialComponentListProvider",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeCqSocialCommonsCommentsListingImplSearchCommentSocialCRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.cq.social.commons.comments.scheduler.impl.SearchScheduledPosts",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeCqSocialCommonsCommentsSchedulerImplSearchScheduledPosRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.cq.social.commons.cors.CORSAuthenticationFilter",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeCqSocialCommonsCorsCORSAuthenticationFilterRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.cq.social.commons.emailreply.impl.AndroidEmailClientProvider",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeCqSocialCommonsEmailreplyImplAndroidEmailClientProviderRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.cq.social.commons.emailreply.impl.CommentEmailBuilderImpl",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeCqSocialCommonsEmailreplyImplCommentEmailBuilderImplRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.cq.social.commons.emailreply.impl.CommentEmailEventListener",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeCqSocialCommonsEmailreplyImplCommentEmailEventListenerRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.cq.social.commons.emailreply.impl.CustomEmailClientProvider",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeCqSocialCommonsEmailreplyImplCustomEmailClientProviderRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.cq.social.commons.emailreply.impl.EmailQuotedTextPatternsImpl",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeCqSocialCommonsEmailreplyImplEmailQuotedTextPatternsImpRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.cq.social.commons.emailreply.impl.EmailReplyConfigurationImpl",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeCqSocialCommonsEmailreplyImplEmailReplyConfigurationImpRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.cq.social.commons.emailreply.impl.EmailReplyImporter",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeCqSocialCommonsEmailreplyImplEmailReplyImporterRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.cq.social.commons.emailreply.impl.GmailEmailClientProvider",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeCqSocialCommonsEmailreplyImplGmailEmailClientProviderRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.cq.social.commons.emailreply.impl.IOSEmailClientProvider",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeCqSocialCommonsEmailreplyImplIOSEmailClientProviderRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.cq.social.commons.emailreply.impl.MacmailEmailClientProvider",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeCqSocialCommonsEmailreplyImplMacmailEmailClientProviderRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.cq.social.commons.emailreply.impl.OutLookEmailClientProvider",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeCqSocialCommonsEmailreplyImplOutLookEmailClientProviderRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.cq.social.commons.emailreply.impl.UnknownEmailClientProvider",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeCqSocialCommonsEmailreplyImplUnknownEmailClientProviderRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.cq.social.commons.emailreply.impl.YahooEmailClientProvider",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeCqSocialCommonsEmailreplyImplYahooEmailClientProviderRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.cq.social.commons.maintainance.impl.DeleteTempUGCImageUploads",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeCqSocialCommonsMaintainanceImplDeleteTempUGCImageUploadRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.cq.social.commons.ugclimiter.impl.UGCLimiterServiceImpl",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeCqSocialCommonsUgclimiterImplUGCLimiterServiceImplRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.cq.social.commons.ugclimitsconfig.impl.CommunityUserUGCLimitsConfigImpl",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeCqSocialCommonsUgclimitsconfigImplCommunityUserUGCLimitRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.cq.social.connect.oauth.impl.FacebookProviderImpl",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeCqSocialConnectOauthImplFacebookProviderImplRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.cq.social.connect.oauth.impl.SocialOAuthAuthenticationHandler",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeCqSocialConnectOauthImplSocialOAuthAuthenticationHandleRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.cq.social.connect.oauth.impl.SocialOAuthUserProfileMapper",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeCqSocialConnectOauthImplSocialOAuthUserProfileMapperRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.cq.social.connect.oauth.impl.TwitterProviderImpl",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeCqSocialConnectOauthImplTwitterProviderImplRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.cq.social.content.fragments.services.impl.CommunitiesFragmentCreationServiceImpl",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeCqSocialContentFragmentsServicesImplCommunitiesFragmenRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.cq.social.datastore.as.impl.ASResourceProviderFactory",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeCqSocialDatastoreAsImplASResourceProviderFactoryRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.cq.social.datastore.op.impl.SocialMSResourceProviderFactory",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeCqSocialDatastoreOpImplSocialMSResourceProviderFactoryRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.cq.social.datastore.rdb.impl.SocialRDBResourceProviderFactory",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeCqSocialDatastoreRdbImplSocialRDBResourceProviderFactorRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.cq.social.enablement.adaptors.EnablementLearningPathAdaptorFactory",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeCqSocialEnablementAdaptorsEnablementLearningPathAdaptorFRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.cq.social.enablement.adaptors.EnablementResourceAdaptorFactory",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeCqSocialEnablementAdaptorsEnablementResourceAdaptorFactoRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.cq.social.enablement.learningpath.endpoints.impl.EnablementLearningPathModelOperationService",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeCqSocialEnablementLearningpathEndpointsImplEnablementLRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.cq.social.enablement.resource.endpoints.impl.EnablementResourceModelOperationService",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeCqSocialEnablementResourceEndpointsImplEnablementResouRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.cq.social.enablement.services.impl.AuthorMarkerImpl",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeCqSocialEnablementServicesImplAuthorMarkerImplRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.cq.social.filelibrary.client.endpoints.FilelibraryDownloadGetServlet",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeCqSocialFilelibraryClientEndpointsFilelibraryDownloadGeRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.cq.social.filelibrary.client.endpoints.impl.FileLibraryOperationsService",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeCqSocialFilelibraryClientEndpointsImplFileLibraryOperaRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.cq.social.forum.client.endpoints.impl.ForumOperationsService",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeCqSocialForumClientEndpointsImplForumOperationsServiceRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.cq.social.forum.dispatcher.impl.FlushOperations",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeCqSocialForumDispatcherImplFlushOperationsRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.cq.social.group.client.impl.CommunityGroupCollectionComponentFactory",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeCqSocialGroupClientImplCommunityGroupCollectionComponenRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.cq.social.group.impl.GroupServiceImpl",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeCqSocialGroupImplGroupServiceImplRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.cq.social.handlebars.GuavaTemplateCacheImpl",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeCqSocialHandlebarsGuavaTemplateCacheImplRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.cq.social.ideation.client.endpoints.impl.IdeationOperationsService",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeCqSocialIdeationClientEndpointsImplIdeationOperationsSRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.cq.social.journal.client.endpoints.impl.JournalOperationsService",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeCqSocialJournalClientEndpointsImplJournalOperationsSerRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.cq.social.members.endpoints.impl.CommunityMemberGroupProfileOperationService",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeCqSocialMembersEndpointsImplCommunityMemberGroupProfileRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.cq.social.members.endpoints.impl.CommunityMemberUserProfileOperationService",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeCqSocialMembersEndpointsImplCommunityMemberUserProfileORequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.cq.social.members.impl.CommunityMemberGroupProfileComponentFactory",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeCqSocialMembersImplCommunityMemberGroupProfileComponentFRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.cq.social.messaging.client.endpoints.impl.MessagingOperationsServiceImpl",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeCqSocialMessagingClientEndpointsImplMessagingOperationRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.cq.social.moderation.dashboard.api.FilterGroupSocialComponentFactory",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeCqSocialModerationDashboardApiFilterGroupSocialComponenRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.cq.social.moderation.dashboard.api.ModerationDashboardSocialComponentFactory",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeCqSocialModerationDashboardApiModerationDashboardSocialRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.cq.social.moderation.dashboard.api.UserDetailsSocialComponentFactory",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeCqSocialModerationDashboardApiUserDetailsSocialComponenRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.cq.social.moderation.dashboard.internal.impl.FilterGroupSocialComponentFactoryV2",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeCqSocialModerationDashboardInternalImplFilterGroupSociRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.cq.social.notifications.impl.MentionsRouter",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeCqSocialNotificationsImplMentionsRouterRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.cq.social.notifications.impl.NotificationManagerImpl",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeCqSocialNotificationsImplNotificationManagerImplRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.cq.social.notifications.impl.NotificationsRouter",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeCqSocialNotificationsImplNotificationsRouterRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.cq.social.qna.client.endpoints.impl.QnaForumOperationsService",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeCqSocialQnaClientEndpointsImplQnaForumOperationsServicRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.cq.social.reporting.analytics.services.impl.AnalyticsReportImporterServiceImpl",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeCqSocialReportingAnalyticsServicesImplAnalyticsReportIRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.cq.social.reporting.analytics.services.impl.AnalyticsReportManagementServiceImpl",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeCqSocialReportingAnalyticsServicesImplAnalyticsReportMRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.cq.social.reporting.analytics.services.impl.SiteTrendReportSocialComponentFactory",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeCqSocialReportingAnalyticsServicesImplSiteTrendReportSRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.cq.social.review.client.endpoints.impl.ReviewOperationsService",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeCqSocialReviewClientEndpointsImplReviewOperationsServiRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.cq.social.scf.core.operations.impl.SocialOperationsServlet",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeCqSocialScfCoreOperationsImplSocialOperationsServletRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.cq.social.scf.endpoints.impl.DefaultSocialGetServlet",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeCqSocialScfEndpointsImplDefaultSocialGetServletRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.cq.social.scoring.impl.ScoringEventListener",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeCqSocialScoringImplScoringEventListenerRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.cq.social.serviceusers.internal.impl.ServiceUserWrapperImpl",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeCqSocialServiceusersInternalImplServiceUserWrapperImplRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.cq.social.site.endpoints.impl.SiteOperationService",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeCqSocialSiteEndpointsImplSiteOperationServiceRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.cq.social.site.impl.AnalyticsComponentConfigurationServiceImpl",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeCqSocialSiteImplAnalyticsComponentConfigurationServiceImRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.cq.social.site.impl.SiteConfiguratorImpl",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeCqSocialSiteImplSiteConfiguratorImplRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.cq.social.srp.impl.SocialSolrConnector",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeCqSocialSrpImplSocialSolrConnectorRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.cq.social.sync.impl.DiffChangesObserver",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeCqSocialSyncImplDiffChangesObserverRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.cq.social.sync.impl.GroupSyncListenerImpl",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeCqSocialSyncImplGroupSyncListenerImplRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.cq.social.sync.impl.PublisherSyncServiceImpl",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeCqSocialSyncImplPublisherSyncServiceImplRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.cq.social.sync.impl.UserSyncListenerImpl",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeCqSocialSyncImplUserSyncListenerImplRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.cq.social.translation.impl.TranslationServiceConfigManager",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeCqSocialTranslationImplTranslationServiceConfigManagerRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.cq.social.translation.impl.UGCLanguageDetector",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeCqSocialTranslationImplUGCLanguageDetectorRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.cq.social.ugcbase.dispatcher.impl.FlushServiceImpl",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeCqSocialUgcbaseDispatcherImplFlushServiceImplRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.cq.social.ugcbase.impl.AysncReverseReplicatorImpl",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeCqSocialUgcbaseImplAysncReverseReplicatorImplRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.cq.social.ugcbase.impl.PublisherConfigurationImpl",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeCqSocialUgcbaseImplPublisherConfigurationImplRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.cq.social.ugcbase.impl.SocialUtilsImpl",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeCqSocialUgcbaseImplSocialUtilsImplRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.cq.social.ugcbase.moderation.impl.AutoModerationImpl",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeCqSocialUgcbaseModerationImplAutoModerationImplRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.cq.social.ugcbase.moderation.impl.SentimentProcess",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeCqSocialUgcbaseModerationImplSentimentProcessRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.cq.social.ugcbase.security.impl.DefaultAttachmentTypeBlacklistService",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeCqSocialUgcbaseSecurityImplDefaultAttachmentTypeBlackliRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.cq.social.ugcbase.security.impl.SaferSlingPostValidatorImpl",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeCqSocialUgcbaseSecurityImplSaferSlingPostValidatorImplRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.cq.social.user.endpoints.impl.UsersGroupFromPublishServlet",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeCqSocialUserEndpointsImplUsersGroupFromPublishServletRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.cq.social.user.impl.transport.HttpToPublisher",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeCqSocialUserImplTransportHttpToPublisherRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.cq.ui.wcm.commons.internal.servlets.rte.RTEFilterServletFactory.amended",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeCqUiWcmCommonsInternalServletsRteRTEFilterServletFactRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.cq.upgrades.cleanup.impl.UpgradeContentCleanup",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeCqUpgradesCleanupImplUpgradeContentCleanupRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.cq.upgrades.cleanup.impl.UpgradeInstallFolderCleanup",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeCqUpgradesCleanupImplUpgradeInstallFolderCleanupRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.cq.wcm.jobs.async.impl.AsyncDeleteConfigProviderService",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeCqWcmJobsAsyncImplAsyncDeleteConfigProviderServiceRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.cq.wcm.jobs.async.impl.AsyncJobCleanUpTask",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeCqWcmJobsAsyncImplAsyncJobCleanUpTaskRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.cq.wcm.jobs.async.impl.AsyncMoveConfigProviderService",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeCqWcmJobsAsyncImplAsyncMoveConfigProviderServiceRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.cq.wcm.jobs.async.impl.AsyncPageMoveConfigProviderService",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeCqWcmJobsAsyncImplAsyncPageMoveConfigProviderServiceRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.cq.wcm.launches.impl.LaunchesEventHandler",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeCqWcmLaunchesImplLaunchesEventHandlerRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.cq.wcm.mobile.qrcode.servlet.QRCodeImageGenerator",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeCqWcmMobileQrcodeServletQRCodeImageGeneratorRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.cq.wcm.style.internal.ComponentStyleInfoCacheImpl",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeCqWcmStyleInternalComponentStyleInfoCacheImplRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.cq.wcm.translation.impl.TranslationPlatformConfigurationImpl",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeCqWcmTranslationImplTranslationPlatformConfigurationImplRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.fd.fp.config.FormsPortalDraftsandSubmissionConfigService",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeFdFpConfigFormsPortalDraftsandSubmissionConfigServiceRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.fd.fp.config.FormsPortalSchedulerService",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeFdFpConfigFormsPortalSchedulerServiceRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.forms.common.service.impl.DefaultDataProvider",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeFormsCommonServiceImplDefaultDataProviderRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.forms.common.service.impl.FormsCommonConfigurationServiceImpl",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeFormsCommonServiceImplFormsCommonConfigurationServiceImpRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.forms.common.servlet.TempCleanUpTask",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeFormsCommonServletTempCleanUpTaskRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.granite.acp.platform.PlatformServlet",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeGraniteAcpPlatformPlatformServletRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.granite.activitystreams.impl.ActivityManagerImpl",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeGraniteActivitystreamsImplActivityManagerImplRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.granite.analyzer.base.SystemStatusServlet",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeGraniteAnalyzerBaseSystemStatusServletRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.granite.analyzer.scripts.compile.AllScriptsCompilerServlet",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeGraniteAnalyzerScriptsCompileAllScriptsCompilerServletRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.granite.apicontroller.FilterResolverHookFactory",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeGraniteApicontrollerFilterResolverHookFactoryRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.granite.auth.cert.impl.ClientCertAuthHandler",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeGraniteAuthCertImplClientCertAuthHandlerRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.granite.auth.ims",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeGraniteAuthImsRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.granite.auth.ims.impl.ExternalUserIdMappingProviderExtension",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeGraniteAuthImsImplExternalUserIdMappingProviderExtensionRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.granite.auth.ims.impl.IMSAccessTokenRequestCustomizerImpl",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeGraniteAuthImsImplIMSAccessTokenRequestCustomizerImplRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.granite.auth.ims.impl.IMSInstanceCredentialsValidator",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeGraniteAuthImsImplIMSInstanceCredentialsValidatorRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.granite.auth.ims.impl.IMSProviderImpl",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeGraniteAuthImsImplIMSProviderImplRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.granite.auth.ims.impl.ImsConfigProviderImpl",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeGraniteAuthImsImplImsConfigProviderImplRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.granite.auth.oauth.accesstoken.provider",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeGraniteAuthOauthAccesstokenProviderRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.granite.auth.oauth.impl.BearerAuthenticationHandler",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeGraniteAuthOauthImplBearerAuthenticationHandlerRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.granite.auth.oauth.impl.DefaultTokenValidatorImpl",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeGraniteAuthOauthImplDefaultTokenValidatorImplRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.granite.auth.oauth.impl.FacebookProviderImpl",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeGraniteAuthOauthImplFacebookProviderImplRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.granite.auth.oauth.impl.GithubProviderImpl",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeGraniteAuthOauthImplGithubProviderImplRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.granite.auth.oauth.impl.GraniteProvider",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeGraniteAuthOauthImplGraniteProviderRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.granite.auth.oauth.impl.helper.ProviderConfigManager",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeGraniteAuthOauthImplHelperProviderConfigManagerRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.granite.auth.oauth.impl.helper.ProviderConfigManagerInternal",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeGraniteAuthOauthImplHelperProviderConfigManagerInternalRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.granite.auth.oauth.impl.OAuthAuthenticationHandler",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeGraniteAuthOauthImplOAuthAuthenticationHandlerRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.granite.auth.oauth.impl.TwitterProviderImpl",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeGraniteAuthOauthImplTwitterProviderImplRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.granite.auth.oauth.provider",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeGraniteAuthOauthProviderRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.granite.auth.requirement.impl.DefaultRequirementHandler",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeGraniteAuthRequirementImplDefaultRequirementHandlerRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.granite.auth.saml.SamlAuthenticationHandler",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeGraniteAuthSamlSamlAuthenticationHandlerRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.granite.auth.sso.impl.SsoAuthenticationHandler",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeGraniteAuthSsoImplSsoAuthenticationHandlerRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.granite.bundles.hc.impl.CodeCacheHealthCheck",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeGraniteBundlesHcImplCodeCacheHealthCheckRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.granite.bundles.hc.impl.CrxdeSupportBundleHealthCheck",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeGraniteBundlesHcImplCrxdeSupportBundleHealthCheckRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.granite.bundles.hc.impl.DavExBundleHealthCheck",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeGraniteBundlesHcImplDavExBundleHealthCheckRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.granite.bundles.hc.impl.InactiveBundlesHealthCheck",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeGraniteBundlesHcImplInactiveBundlesHealthCheckRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.granite.bundles.hc.impl.JobsHealthCheck",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeGraniteBundlesHcImplJobsHealthCheckRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.granite.bundles.hc.impl.SlingGetServletHealthCheck",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeGraniteBundlesHcImplSlingGetServletHealthCheckRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.granite.bundles.hc.impl.SlingJavaScriptHandlerHealthCheck",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeGraniteBundlesHcImplSlingJavaScriptHandlerHealthCheckRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.granite.bundles.hc.impl.SlingJspScriptHandlerHealthCheck",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeGraniteBundlesHcImplSlingJspScriptHandlerHealthCheckRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.granite.bundles.hc.impl.SlingReferrerFilterHealthCheck",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeGraniteBundlesHcImplSlingReferrerFilterHealthCheckRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.granite.bundles.hc.impl.WebDavBundleHealthCheck",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeGraniteBundlesHcImplWebDavBundleHealthCheckRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.granite.comments.internal.CommentReplicationContentFilterFactory",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeGraniteCommentsInternalCommentReplicationContentFilterFacRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.granite.compatrouter.impl.CompatSwitchingServiceImpl",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeGraniteCompatrouterImplCompatSwitchingServiceImplRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.granite.compatrouter.impl.RoutingConfig",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeGraniteCompatrouterImplRoutingConfigRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.granite.compatrouter.impl.SwitchMappingConfig",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeGraniteCompatrouterImplSwitchMappingConfigRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.granite.conf.impl.RuntimeAwareConfigurationResourceResolvingStrategy",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeGraniteConfImplRuntimeAwareConfigurationResourceResolvingRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.granite.contexthub.impl.ContextHubImpl",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeGraniteContexthubImplContextHubImplRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.granite.cors.impl.CORSPolicyImpl",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeGraniteCorsImplCORSPolicyImplRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.granite.csrf.impl.CSRFFilter",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeGraniteCsrfImplCSRFFilterRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.granite.csrf.impl.CSRFServlet",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeGraniteCsrfImplCSRFServletRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.granite.distribution.core.impl.CryptoDistributionTransportSecretProvider",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeGraniteDistributionCoreImplCryptoDistributionTransportSeRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.granite.distribution.core.impl.diff.DiffChangesObserver",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeGraniteDistributionCoreImplDiffDiffChangesObserverRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.granite.distribution.core.impl.diff.DiffEventListener",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeGraniteDistributionCoreImplDiffDiffEventListenerRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.granite.distribution.core.impl.DistributionToReplicationEventTransformer",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeGraniteDistributionCoreImplDistributionToReplicationEvenRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.granite.distribution.core.impl.replication.adapters.ReplicationAgentProvider",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeGraniteDistributionCoreImplReplicationAdaptersReplicatRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.granite.distribution.core.impl.replication.DistributionTransportHandler",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeGraniteDistributionCoreImplReplicationDistributionTransRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.granite.distribution.core.impl.transport.AccessTokenDistributionTransportSecretProvider",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeGraniteDistributionCoreImplTransportAccessTokenDistribuRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.granite.frags.impl.CheckHttpHeaderFlag",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeGraniteFragsImplCheckHttpHeaderFlagRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.granite.frags.impl.RandomFeature",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeGraniteFragsImplRandomFeatureRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.granite.httpcache.file.FileCacheStore",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeGraniteHttpcacheFileFileCacheStoreRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.granite.httpcache.impl.OuterCacheFilter",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeGraniteHttpcacheImplOuterCacheFilterRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.granite.i18n.impl.bundle.PseudoTranslations",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeGraniteI18nImplBundlePseudoTranslationsRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.granite.i18n.impl.PreferencesLocaleResolverService",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeGraniteI18nImplPreferencesLocaleResolverServiceRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.granite.infocollector.InfoCollector",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeGraniteInfocollectorInfoCollectorRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.granite.jetty.ssl.internal.GraniteSslConnectorFactory",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeGraniteJettySslInternalGraniteSslConnectorFactoryRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.granite.license.impl.LicenseCheckFilter",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeGraniteLicenseImplLicenseCheckFilterRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.granite.logging.impl.LogAnalyserImpl",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeGraniteLoggingImplLogAnalyserImplRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.granite.logging.impl.LogErrorHealthCheck",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeGraniteLoggingImplLogErrorHealthCheckRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.granite.maintenance.crx.impl.DataStoreGarbageCollectionTask",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeGraniteMaintenanceCrxImplDataStoreGarbageCollectionTaskRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.granite.maintenance.crx.impl.LuceneBinariesCleanupTask",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeGraniteMaintenanceCrxImplLuceneBinariesCleanupTaskRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.granite.maintenance.crx.impl.RevisionCleanupTask",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeGraniteMaintenanceCrxImplRevisionCleanupTaskRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.granite.monitoring.impl.ScriptConfigImpl",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeGraniteMonitoringImplScriptConfigImplRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.granite.oauth.server.auth.impl.OAuth2ServerAuthenticationHandler",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeGraniteOauthServerAuthImplOAuth2ServerAuthenticationHanRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.granite.oauth.server.impl.AccessTokenCleanupTask",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeGraniteOauthServerImplAccessTokenCleanupTaskRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.granite.oauth.server.impl.OAuth2ClientRevocationServlet",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeGraniteOauthServerImplOAuth2ClientRevocationServletRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.granite.oauth.server.impl.OAuth2RevocationEndpointServlet",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeGraniteOauthServerImplOAuth2RevocationEndpointServletRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.granite.oauth.server.impl.OAuth2TokenEndpointServlet",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeGraniteOauthServerImplOAuth2TokenEndpointServletRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.granite.oauth.server.impl.OAuth2TokenRevocationServlet",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeGraniteOauthServerImplOAuth2TokenRevocationServletRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.granite.offloading.impl.OffloadingConfigurator",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeGraniteOffloadingImplOffloadingConfiguratorRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.granite.offloading.impl.OffloadingJobCloner",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeGraniteOffloadingImplOffloadingJobClonerRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.granite.offloading.impl.OffloadingJobOffloader",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeGraniteOffloadingImplOffloadingJobOffloaderRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.granite.offloading.impl.transporter.OffloadingAgentManager",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeGraniteOffloadingImplTransporterOffloadingAgentManagerRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.granite.offloading.impl.transporter.OffloadingDefaultTransporter",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeGraniteOffloadingImplTransporterOffloadingDefaultTranspoRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.granite.omnisearch.impl.core.OmniSearchServiceImpl",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeGraniteOmnisearchImplCoreOmniSearchServiceImplRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.granite.optout.impl.OptOutServiceImpl",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeGraniteOptoutImplOptOutServiceImplRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.granite.queries.impl.hc.AsyncIndexHealthCheck",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeGraniteQueriesImplHcAsyncIndexHealthCheckRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.granite.queries.impl.hc.LargeIndexHealthCheck",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeGraniteQueriesImplHcLargeIndexHealthCheckRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.granite.queries.impl.hc.QueriesStatusHealthCheck",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeGraniteQueriesImplHcQueriesStatusHealthCheckRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.granite.queries.impl.hc.QueryHealthCheckMetrics",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeGraniteQueriesImplHcQueryHealthCheckMetricsRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.granite.queries.impl.hc.QueryLimitsHealthCheck",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeGraniteQueriesImplHcQueryLimitsHealthCheckRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.granite.replication.hc.impl.ReplicationQueueHealthCheck",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeGraniteReplicationHcImplReplicationQueueHealthCheckRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.granite.replication.hc.impl.ReplicationTransportUsersHealthCheck",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeGraniteReplicationHcImplReplicationTransportUsersHealthCRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.granite.repository.hc.impl.AuthorizableNodeNameHealthCheck",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeGraniteRepositoryHcImplAuthorizableNodeNameHealthCheckRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.granite.repository.hc.impl.content.sling.SlingContentHealthCheck",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeGraniteRepositoryHcImplContentSlingSlingContentHealthCRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.granite.repository.hc.impl.ContinuousRGCHealthCheck",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeGraniteRepositoryHcImplContinuousRGCHealthCheckRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.granite.repository.hc.impl.DefaultAccessUserProfileHealthCheck",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeGraniteRepositoryHcImplDefaultAccessUserProfileHealthCheRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.granite.repository.hc.impl.DefaultLoginsHealthCheck",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeGraniteRepositoryHcImplDefaultLoginsHealthCheckRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.granite.repository.hc.impl.DiskSpaceHealthCheck",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeGraniteRepositoryHcImplDiskSpaceHealthCheckRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.granite.repository.hc.impl.ObservationQueueLengthHealthCheck",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeGraniteRepositoryHcImplObservationQueueLengthHealthCheckRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.granite.repository.impl.CommitStatsConfig",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeGraniteRepositoryImplCommitStatsConfigRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.granite.repository.ServiceUserConfiguration",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeGraniteRepositoryServiceUserConfigurationRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.granite.requests.logging.impl.hc.RequestsStatusHealthCheckImpl",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeGraniteRequestsLoggingImplHcRequestsStatusHealthCheckImRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.granite.resourcestatus.impl.CompositeStatusType",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeGraniteResourcestatusImplCompositeStatusTypeRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.granite.resourcestatus.impl.StatusResourceProviderImpl",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeGraniteResourcestatusImplStatusResourceProviderImplRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.granite.rest.assets.impl.AssetContentDispositionFilter",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeGraniteRestAssetsImplAssetContentDispositionFilterRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.granite.rest.impl.ApiEndpointResourceProviderFactoryImpl",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeGraniteRestImplApiEndpointResourceProviderFactoryImplRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.granite.rest.impl.servlet.DefaultGETServlet",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeGraniteRestImplServletDefaultGETServletRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.granite.security.user.ui.internal.servlets.SSLConfigurationServlet",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeGraniteSecurityUserUiInternalServletsSSLConfigurationSRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.granite.security.user.UserPropertiesService",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeGraniteSecurityUserUserPropertiesServiceRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.granite.socialgraph.impl.SocialGraphFactoryImpl",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeGraniteSocialgraphImplSocialGraphFactoryImplRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.granite.system.monitoring.impl.SystemStatsMBeanImpl",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeGraniteSystemMonitoringImplSystemStatsMBeanImplRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.granite.taskmanagement.impl.jcr.TaskAdapterFactory",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeGraniteTaskmanagementImplJcrTaskAdapterFactoryRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.granite.taskmanagement.impl.jcr.TaskArchiveService",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeGraniteTaskmanagementImplJcrTaskArchiveServiceRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.granite.taskmanagement.impl.purge.TaskPurgeMaintenanceTask",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeGraniteTaskmanagementImplPurgeTaskPurgeMaintenanceTaskRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.granite.taskmanagement.impl.service.TaskManagerAdapterFactory",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeGraniteTaskmanagementImplServiceTaskManagerAdapterFactorRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.granite.threaddump.ThreadDumpCollector",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeGraniteThreaddumpThreadDumpCollectorRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.granite.translation.connector.msft.core.impl.MicrosoftTranslationServiceFactoryImpl",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeGraniteTranslationConnectorMsftCoreImplMicrosoftTranslRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.granite.translation.core.impl.TranslationManagerImpl",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeGraniteTranslationCoreImplTranslationManagerImplRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.granite.ui.clientlibs.impl.HtmlLibraryManagerImpl",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeGraniteUiClientlibsImplHtmlLibraryManagerImplRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.granite.workflow.console.frags.WorkflowWithdrawFeature",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeGraniteWorkflowConsoleFragsWorkflowWithdrawFeatureRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.granite.workflow.console.publish.WorkflowPublishEventService",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeGraniteWorkflowConsolePublishWorkflowPublishEventServiceRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.granite.workflow.core.jcr.WorkflowBucketManager",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeGraniteWorkflowCoreJcrWorkflowBucketManagerRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.granite.workflow.core.job.ExternalProcessJobHandler",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeGraniteWorkflowCoreJobExternalProcessJobHandlerRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.granite.workflow.core.job.JobHandler",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeGraniteWorkflowCoreJobJobHandlerRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.granite.workflow.core.offloading.WorkflowOffloadingJobConsumer",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeGraniteWorkflowCoreOffloadingWorkflowOffloadingJobConsumRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.granite.workflow.core.PayloadMapCache",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeGraniteWorkflowCorePayloadMapCacheRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.granite.workflow.core.payloadmap.PayloadMoveListener",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeGraniteWorkflowCorePayloadmapPayloadMoveListenerRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.granite.workflow.core.WorkflowConfig",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeGraniteWorkflowCoreWorkflowConfigRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.granite.workflow.core.WorkflowSessionFactory",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeGraniteWorkflowCoreWorkflowSessionFactoryRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.granite.workflow.purge.Scheduler",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeGraniteWorkflowPurgeSchedulerRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.octopus.ncomm.bootstrap",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeOctopusNcommBootstrapRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.social.integrations.livefyre.user.pingforpull.impl.PingPullServlet",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeSocialIntegrationsLivefyreUserPingforpullImplPingPullSRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.adobe.xmp.worker.files.ncomm.XMPFilesNComm",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comAdobeXmpWorkerFilesNcommXMPFilesNCommRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.day.commons.datasource.jdbcpool.JdbcPoolService",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comDayCommonsDatasourceJdbcpoolJdbcPoolServiceRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.day.commons.httpclient",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comDayCommonsHttpclientRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.day.cq.analytics.impl.StorePropertiesChangeListener",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comDayCqAnalyticsImplStorePropertiesChangeListenerRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.day.cq.analytics.sitecatalyst.impl.exporter.ClassificationsExporter",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comDayCqAnalyticsSitecatalystImplExporterClassificationsExporteRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.day.cq.analytics.sitecatalyst.impl.importer.ReportImporter",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comDayCqAnalyticsSitecatalystImplImporterReportImporterRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.day.cq.analytics.sitecatalyst.impl.SitecatalystAdapterFactory",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comDayCqAnalyticsSitecatalystImplSitecatalystAdapterFactoryRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.day.cq.analytics.sitecatalyst.impl.SitecatalystHttpClientImpl",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comDayCqAnalyticsSitecatalystImplSitecatalystHttpClientImplRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.day.cq.analytics.testandtarget.impl.AccountOptionsUpdater",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comDayCqAnalyticsTestandtargetImplAccountOptionsUpdaterRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.day.cq.analytics.testandtarget.impl.DeleteAuthorActivityListener",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comDayCqAnalyticsTestandtargetImplDeleteAuthorActivityListenerRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.day.cq.analytics.testandtarget.impl.PushAuthorCampaignPageListener",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comDayCqAnalyticsTestandtargetImplPushAuthorCampaignPageListenerRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.day.cq.analytics.testandtarget.impl.SegmentImporter",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comDayCqAnalyticsTestandtargetImplSegmentImporterRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.day.cq.analytics.testandtarget.impl.service.WebServiceImpl",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comDayCqAnalyticsTestandtargetImplServiceWebServiceImplRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.day.cq.analytics.testandtarget.impl.servlets.AdminServerServlet",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comDayCqAnalyticsTestandtargetImplServletsAdminServerServletRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.day.cq.analytics.testandtarget.impl.TestandtargetHttpClientImpl",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comDayCqAnalyticsTestandtargetImplTestandtargetHttpClientImplRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.day.cq.auth.impl.cug.CugSupportImpl",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comDayCqAuthImplCugCugSupportImplRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.day.cq.auth.impl.LoginSelectorHandler",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comDayCqAuthImplLoginSelectorHandlerRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.day.cq.commons.impl.ExternalizerImpl",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comDayCqCommonsImplExternalizerImplRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.day.cq.commons.servlets.RootMappingServlet",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comDayCqCommonsServletsRootMappingServletRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.day.cq.compat.codeupgrade.impl.CodeUpgradeExecutionConditionChecker",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comDayCqCompatCodeupgradeImplCodeUpgradeExecutionConditionCheckeRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.day.cq.compat.codeupgrade.impl.UpgradeTaskIgnoreList",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comDayCqCompatCodeupgradeImplUpgradeTaskIgnoreListRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.day.cq.compat.codeupgrade.impl.VersionRangeTaskIgnorelist",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comDayCqCompatCodeupgradeImplVersionRangeTaskIgnorelistRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.day.cq.contentsync.impl.ContentSyncManagerImpl",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comDayCqContentsyncImplContentSyncManagerImplRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.day.cq.dam.commons.handler.StandardImageHandler",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comDayCqDamCommonsHandlerStandardImageHandlerRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.day.cq.dam.commons.metadata.XmpFilterBlackWhite",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comDayCqDamCommonsMetadataXmpFilterBlackWhiteRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.day.cq.dam.commons.util.impl.AssetCacheImpl",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comDayCqDamCommonsUtilImplAssetCacheImplRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.day.cq.dam.core.impl.annotation.pdf.AnnotationPdfConfig",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comDayCqDamCoreImplAnnotationPdfAnnotationPdfConfigRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.day.cq.dam.core.impl.AssetMoveListener",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comDayCqDamCoreImplAssetMoveListenerRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.day.cq.dam.core.impl.assethome.AssetHomePageConfiguration",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comDayCqDamCoreImplAssethomeAssetHomePageConfigurationRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.day.cq.dam.core.impl.assetlinkshare.AdhocAssetShareProxyServlet",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comDayCqDamCoreImplAssetlinkshareAdhocAssetShareProxyServletRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.day.cq.dam.core.impl.cache.CQBufferedImageCache",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comDayCqDamCoreImplCacheCQBufferedImageCacheRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.day.cq.dam.core.impl.DamChangeEventListener",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comDayCqDamCoreImplDamChangeEventListenerRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.day.cq.dam.core.impl.DamEventPurgeService",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comDayCqDamCoreImplDamEventPurgeServiceRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.day.cq.dam.core.impl.DamEventRecorderImpl",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comDayCqDamCoreImplDamEventRecorderImplRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.day.cq.dam.core.impl.event.DamEventAuditListener",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comDayCqDamCoreImplEventDamEventAuditListenerRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.day.cq.dam.core.impl.ExpiryNotificationJobImpl",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comDayCqDamCoreImplExpiryNotificationJobImplRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.day.cq.dam.core.impl.foldermetadataschema.FolderMetadataSchemaFeatureFlag",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comDayCqDamCoreImplFoldermetadataschemaFolderMetadataSchemaFeatRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.day.cq.dam.core.impl.gfx.CommonsGfxRenderer",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comDayCqDamCoreImplGfxCommonsGfxRendererRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.day.cq.dam.core.impl.handler.EPSFormatHandler",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comDayCqDamCoreImplHandlerEPSFormatHandlerRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.day.cq.dam.core.impl.handler.IndesignFormatHandler",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comDayCqDamCoreImplHandlerIndesignFormatHandlerRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.day.cq.dam.core.impl.handler.JpegHandler",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comDayCqDamCoreImplHandlerJpegHandlerRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.day.cq.dam.core.impl.handler.xmp.NCommXMPHandler",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comDayCqDamCoreImplHandlerXmpNCommXMPHandlerRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.day.cq.dam.core.impl.jmx.AssetIndexUpdateMonitor",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comDayCqDamCoreImplJmxAssetIndexUpdateMonitorRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.day.cq.dam.core.impl.jmx.AssetMigrationMBeanImpl",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comDayCqDamCoreImplJmxAssetMigrationMBeanImplRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.day.cq.dam.core.impl.jmx.AssetUpdateMonitorImpl",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comDayCqDamCoreImplJmxAssetUpdateMonitorImplRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.day.cq.dam.core.impl.jobs.metadataexport.AsyncMetadataExportConfigProviderService",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comDayCqDamCoreImplJobsMetadataexportAsyncMetadataExportConfigRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.day.cq.dam.core.impl.jobs.metadataimport.AsyncMetadataImportConfigProviderService",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comDayCqDamCoreImplJobsMetadataimportAsyncMetadataImportConfigRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.day.cq.dam.core.impl.lightbox.LightboxServlet",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comDayCqDamCoreImplLightboxLightboxServletRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.day.cq.dam.core.impl.metadata.editor.SelectComponentHandler",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comDayCqDamCoreImplMetadataEditorSelectComponentHandlerRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.day.cq.dam.core.impl.mimeType.AssetUploadRestrictionHelper",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comDayCqDamCoreImplMimeTypeAssetUploadRestrictionHelperRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.day.cq.dam.core.impl.mimeType.DamMimeTypeServiceImpl",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comDayCqDamCoreImplMimeTypeDamMimeTypeServiceImplRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.day.cq.dam.core.impl.MissingMetadataNotificationJob",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comDayCqDamCoreImplMissingMetadataNotificationJobRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.day.cq.dam.core.impl.process.SendTransientWorkflowCompletedEmailProcess",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comDayCqDamCoreImplProcessSendTransientWorkflowCompletedEmailPrRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.day.cq.dam.core.impl.process.TextExtractionProcess",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comDayCqDamCoreImplProcessTextExtractionProcessRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.day.cq.dam.core.impl.RenditionMakerImpl",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comDayCqDamCoreImplRenditionMakerImplRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.day.cq.dam.core.impl.reports.ReportExportService",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comDayCqDamCoreImplReportsReportExportServiceRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.day.cq.dam.core.impl.reports.ReportPurgeService",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comDayCqDamCoreImplReportsReportPurgeServiceRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.day.cq.dam.core.impl.servlet.AssetDownloadServlet",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comDayCqDamCoreImplServletAssetDownloadServletRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.day.cq.dam.core.impl.servlet.AssetStatusServlet",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comDayCqDamCoreImplServletAssetStatusServletRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.day.cq.dam.core.impl.servlet.AssetXMPSearchServlet",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comDayCqDamCoreImplServletAssetXMPSearchServletRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.day.cq.dam.core.impl.servlet.BatchMetadataServlet",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comDayCqDamCoreImplServletBatchMetadataServletRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.day.cq.dam.core.impl.servlet.BinaryProviderServlet",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comDayCqDamCoreImplServletBinaryProviderServletRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.day.cq.dam.core.impl.servlet.CollectionServlet",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comDayCqDamCoreImplServletCollectionServletRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.day.cq.dam.core.impl.servlet.CollectionsServlet",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comDayCqDamCoreImplServletCollectionsServletRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.day.cq.dam.core.impl.servlet.CompanionServlet",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comDayCqDamCoreImplServletCompanionServletRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.day.cq.dam.core.impl.servlet.CreateAssetServlet",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comDayCqDamCoreImplServletCreateAssetServletRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.day.cq.dam.core.impl.servlet.DamContentDispositionFilter",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comDayCqDamCoreImplServletDamContentDispositionFilterRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.day.cq.dam.core.impl.servlet.GuidLookupFilter",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comDayCqDamCoreImplServletGuidLookupFilterRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.day.cq.dam.core.impl.servlet.HealthCheckServlet",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comDayCqDamCoreImplServletHealthCheckServletRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.day.cq.dam.core.impl.servlet.MetadataGetServlet",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comDayCqDamCoreImplServletMetadataGetServletRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.day.cq.dam.core.impl.servlet.MultipleLicenseAcceptServlet",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comDayCqDamCoreImplServletMultipleLicenseAcceptServletRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.day.cq.dam.core.impl.servlet.ResourceCollectionServlet",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comDayCqDamCoreImplServletResourceCollectionServletRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.day.cq.dam.core.impl.ui.preview.FolderPreviewUpdaterImpl",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comDayCqDamCoreImplUiPreviewFolderPreviewUpdaterImplRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.day.cq.dam.core.impl.unzip.UnzipConfig",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comDayCqDamCoreImplUnzipUnzipConfigRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.day.cq.dam.core.process.ExifToolExtractMetadataProcess",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comDayCqDamCoreProcessExifToolExtractMetadataProcessRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.day.cq.dam.core.process.ExtractMetadataProcess",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comDayCqDamCoreProcessExtractMetadataProcessRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.day.cq.dam.core.process.MetadataProcessorProcess",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comDayCqDamCoreProcessMetadataProcessorProcessRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.day.cq.dam.handler.ffmpeg.LocatorImpl",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comDayCqDamHandlerFfmpegLocatorImplRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.day.cq.dam.handler.gibson.fontmanager.impl.FontManagerServiceImpl",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comDayCqDamHandlerGibsonFontmanagerImplFontManagerServiceImplRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.day.cq.dam.handler.standard.pdf.PdfHandler",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comDayCqDamHandlerStandardPdfPdfHandlerRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.day.cq.dam.handler.standard.ps.PostScriptHandler",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comDayCqDamHandlerStandardPsPostScriptHandlerRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.day.cq.dam.handler.standard.psd.PsdHandler",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comDayCqDamHandlerStandardPsdPsdHandlerRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.day.cq.dam.ids.impl.IDSJobProcessor",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comDayCqDamIdsImplIDSJobProcessorRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.day.cq.dam.ids.impl.IDSPoolManagerImpl",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comDayCqDamIdsImplIDSPoolManagerImplRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.day.cq.dam.indd.impl.handler.IndesignXMPHandler",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comDayCqDamInddImplHandlerIndesignXMPHandlerRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.day.cq.dam.indd.impl.servlet.SnippetCreationServlet",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comDayCqDamInddImplServletSnippetCreationServletRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.day.cq.dam.indd.process.INDDMediaExtractProcess",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comDayCqDamInddProcessINDDMediaExtractProcessRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.day.cq.dam.performance.internal.AssetPerformanceDataHandlerImpl",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comDayCqDamPerformanceInternalAssetPerformanceDataHandlerImplRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.day.cq.dam.performance.internal.AssetPerformanceReportSyncJob",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comDayCqDamPerformanceInternalAssetPerformanceReportSyncJobRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.day.cq.dam.pim.impl.sourcing.upload.process.ProductAssetsUploadProcess",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comDayCqDamPimImplSourcingUploadProcessProductAssetsUploadProRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.day.cq.dam.s7dam.common.analytics.impl.S7damDynamicMediaConfigEventListener",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comDayCqDamS7damCommonAnalyticsImplS7damDynamicMediaConfigEvenRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.day.cq.dam.s7dam.common.analytics.impl.SiteCatalystReportRunner",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comDayCqDamS7damCommonAnalyticsImplSiteCatalystReportRunnerRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.day.cq.dam.s7dam.common.post.servlets.SetCreateHandler",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comDayCqDamS7damCommonPostServletsSetCreateHandlerRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.day.cq.dam.s7dam.common.post.servlets.SetModifyHandler",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comDayCqDamS7damCommonPostServletsSetModifyHandlerRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.day.cq.dam.s7dam.common.process.VideoThumbnailDownloadProcess",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comDayCqDamS7damCommonProcessVideoThumbnailDownloadProcessRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.day.cq.dam.s7dam.common.S7damDamChangeEventListener",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comDayCqDamS7damCommonS7damDamChangeEventListenerRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.day.cq.dam.s7dam.common.servlets.S7damProductInfoServlet",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comDayCqDamS7damCommonServletsS7damProductInfoServletRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.day.cq.dam.s7dam.common.video.impl.VideoProxyClientServiceImpl",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comDayCqDamS7damCommonVideoImplVideoProxyClientServiceImplRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.day.cq.dam.scene7.impl.Scene7APIClientImpl",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comDayCqDamScene7ImplScene7APIClientImplRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.day.cq.dam.scene7.impl.Scene7AssetMimeTypeServiceImpl",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comDayCqDamScene7ImplScene7AssetMimeTypeServiceImplRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.day.cq.dam.scene7.impl.Scene7ConfigurationEventListener",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comDayCqDamScene7ImplScene7ConfigurationEventListenerRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.day.cq.dam.scene7.impl.Scene7DamChangeEventListener",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comDayCqDamScene7ImplScene7DamChangeEventListenerRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.day.cq.dam.scene7.impl.Scene7FlashTemplatesServiceImpl",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comDayCqDamScene7ImplScene7FlashTemplatesServiceImplRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.day.cq.dam.scene7.impl.Scene7UploadServiceImpl",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comDayCqDamScene7ImplScene7UploadServiceImplRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.day.cq.dam.stock.integration.impl.cache.StockCacheConfigurationServiceImpl",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comDayCqDamStockIntegrationImplCacheStockCacheConfigurationSerRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.day.cq.dam.stock.integration.impl.configuration.StockConfigurationImpl",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comDayCqDamStockIntegrationImplConfigurationStockConfigurationRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.day.cq.dam.video.impl.servlet.VideoTestServlet",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comDayCqDamVideoImplServletVideoTestServletRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.day.cq.extwidget.servlets.ImageSpriteServlet",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comDayCqExtwidgetServletsImageSpriteServletRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.day.cq.image.internal.font.FontHelper",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comDayCqImageInternalFontFontHelperRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.day.cq.jcrclustersupport.ClusterStartLevelController",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comDayCqJcrclustersupportClusterStartLevelControllerRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.day.cq.mailer.DefaultMailService",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comDayCqMailerDefaultMailServiceRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.day.cq.mailer.impl.CqMailingService",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comDayCqMailerImplCqMailingServiceRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.day.cq.mailer.impl.email.CqEmailTemplateFactory",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comDayCqMailerImplEmailCqEmailTemplateFactoryRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.day.cq.mailer.impl.email.CqRetrieverTemplateFactory",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comDayCqMailerImplEmailCqRetrieverTemplateFactoryRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.day.cq.mcm.campaign.impl.IntegrationConfigImpl",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comDayCqMcmCampaignImplIntegrationConfigImplRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.day.cq.mcm.campaign.importer.PersonalizedTextHandlerFactory",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comDayCqMcmCampaignImporterPersonalizedTextHandlerFactoryRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.day.cq.mcm.core.newsletter.NewsletterEmailServiceImpl",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comDayCqMcmCoreNewsletterNewsletterEmailServiceImplRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.day.cq.mcm.impl.MCMConfiguration",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comDayCqMcmImplMCMConfigurationRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.day.cq.mcm.landingpage.parser.taghandlers.cta.ClickThroughComponentTagHandlerFactory",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comDayCqMcmLandingpageParserTaghandlersCtaClickThroughComponenRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.day.cq.mcm.landingpage.parser.taghandlers.cta.GraphicalClickThroughComponentTagHandlerFactory",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comDayCqMcmLandingpageParserTaghandlersCtaGraphicalClickThrougRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.day.cq.mcm.landingpage.parser.taghandlers.cta.LeadFormCTAComponentTagHandlerFactory",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comDayCqMcmLandingpageParserTaghandlersCtaLeadFormCTAComponentRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.day.cq.mcm.landingpage.parser.taghandlers.mbox.MBoxExperienceTagHandlerFactory",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comDayCqMcmLandingpageParserTaghandlersMboxMBoxExperienceTagHaRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.day.cq.mcm.landingpage.parser.taghandlers.mbox.TargetComponentTagHandlerFactory",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comDayCqMcmLandingpageParserTaghandlersMboxTargetComponentTagHRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.day.cq.notification.impl.NotificationServiceImpl",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comDayCqNotificationImplNotificationServiceImplRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.day.cq.personalization.impl.servlets.TargetingConfigurationServlet",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comDayCqPersonalizationImplServletsTargetingConfigurationServletRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.day.cq.polling.importer.impl.ManagedPollConfigImpl",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comDayCqPollingImporterImplManagedPollConfigImplRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.day.cq.polling.importer.impl.ManagedPollingImporterImpl",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comDayCqPollingImporterImplManagedPollingImporterImplRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.day.cq.polling.importer.impl.PollingImporterImpl",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comDayCqPollingImporterImplPollingImporterImplRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.day.cq.replication.audit.ReplicationEventListener",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comDayCqReplicationAuditReplicationEventListenerRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.day.cq.replication.content.StaticContentBuilder",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comDayCqReplicationContentStaticContentBuilderRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.day.cq.replication.impl.AgentManagerImpl",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comDayCqReplicationImplAgentManagerImplRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.day.cq.replication.impl.content.durbo.BinaryLessContentBuilder",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comDayCqReplicationImplContentDurboBinaryLessContentBuilderRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.day.cq.replication.impl.content.durbo.DurboImportConfigurationProviderService",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comDayCqReplicationImplContentDurboDurboImportConfigurationProvRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.day.cq.replication.impl.ReplicationContentFactoryProviderImpl",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comDayCqReplicationImplReplicationContentFactoryProviderImplRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.day.cq.replication.impl.ReplicationReceiverImpl",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comDayCqReplicationImplReplicationReceiverImplRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.day.cq.replication.impl.ReplicatorImpl",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comDayCqReplicationImplReplicatorImplRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.day.cq.replication.impl.ReverseReplicator",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comDayCqReplicationImplReverseReplicatorRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.day.cq.replication.impl.transport.BinaryLessTransportHandler",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comDayCqReplicationImplTransportBinaryLessTransportHandlerRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.day.cq.replication.impl.transport.Http",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comDayCqReplicationImplTransportHttpRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.day.cq.reporting.impl.cache.CacheImpl",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comDayCqReportingImplCacheCacheImplRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.day.cq.reporting.impl.ConfigServiceImpl",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comDayCqReportingImplConfigServiceImplRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.day.cq.reporting.impl.RLogAnalyzer",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comDayCqReportingImplRLogAnalyzerRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.day.cq.rewriter.linkchecker.impl.LinkCheckerImpl",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comDayCqRewriterLinkcheckerImplLinkCheckerImplRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.day.cq.rewriter.linkchecker.impl.LinkCheckerTask",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comDayCqRewriterLinkcheckerImplLinkCheckerTaskRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.day.cq.rewriter.linkchecker.impl.LinkCheckerTransformerFactory",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comDayCqRewriterLinkcheckerImplLinkCheckerTransformerFactoryRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.day.cq.rewriter.linkchecker.impl.LinkInfoStorageImpl",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comDayCqRewriterLinkcheckerImplLinkInfoStorageImplRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.day.cq.rewriter.processor.impl.HtmlParserFactory",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comDayCqRewriterProcessorImplHtmlParserFactoryRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.day.cq.search.impl.builder.QueryBuilderImpl",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comDayCqSearchImplBuilderQueryBuilderImplRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.day.cq.search.suggest.impl.SuggestionIndexManagerImpl",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comDayCqSearchSuggestImplSuggestionIndexManagerImplRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.day.cq.searchpromote.impl.PublishSearchPromoteConfigHandler",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comDayCqSearchpromoteImplPublishSearchPromoteConfigHandlerRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.day.cq.searchpromote.impl.SearchPromoteServiceImpl",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comDayCqSearchpromoteImplSearchPromoteServiceImplRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.day.cq.security.ACLSetup",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comDayCqSecurityACLSetupRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.day.cq.statistics.impl.StatisticsServiceImpl",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comDayCqStatisticsImplStatisticsServiceImplRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.day.cq.tagging.impl.JcrTagManagerFactoryImpl",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comDayCqTaggingImplJcrTagManagerFactoryImplRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.day.cq.tagging.impl.search.TagPredicateEvaluator",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comDayCqTaggingImplSearchTagPredicateEvaluatorRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.day.cq.tagging.impl.TagGarbageCollector",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comDayCqTaggingImplTagGarbageCollectorRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.day.cq.wcm.contentsync.impl.handler.PagesUpdateHandler",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comDayCqWcmContentsyncImplHandlerPagesUpdateHandlerRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.day.cq.wcm.contentsync.impl.rewriter.PathRewriterTransformerFactory",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comDayCqWcmContentsyncImplRewriterPathRewriterTransformerFactorRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.day.cq.wcm.core.impl.AuthoringUIModeServiceImpl",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comDayCqWcmCoreImplAuthoringUIModeServiceImplRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.day.cq.wcm.core.impl.commands.WCMCommandServlet",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comDayCqWcmCoreImplCommandsWCMCommandServletRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.day.cq.wcm.core.impl.devicedetection.DeviceIdentificationModeImpl",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comDayCqWcmCoreImplDevicedetectionDeviceIdentificationModeImplRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.day.cq.wcm.core.impl.event.PageEventAuditListener",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comDayCqWcmCoreImplEventPageEventAuditListenerRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.day.cq.wcm.core.impl.event.PagePostProcessor",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comDayCqWcmCoreImplEventPagePostProcessorRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.day.cq.wcm.core.impl.event.RepositoryChangeEventListener",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comDayCqWcmCoreImplEventRepositoryChangeEventListenerRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.day.cq.wcm.core.impl.event.TemplatePostProcessor",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comDayCqWcmCoreImplEventTemplatePostProcessorRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.day.cq.wcm.core.impl.LanguageManagerImpl",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comDayCqWcmCoreImplLanguageManagerImplRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.day.cq.wcm.core.impl.LinkCheckerConfigurationFactoryImpl",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comDayCqWcmCoreImplLinkCheckerConfigurationFactoryImplRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.day.cq.wcm.core.impl.page.PageInfoAggregatorImpl",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comDayCqWcmCoreImplPagePageInfoAggregatorImplRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.day.cq.wcm.core.impl.page.PageManagerFactoryImpl",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comDayCqWcmCoreImplPagePageManagerFactoryImplRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.day.cq.wcm.core.impl.references.content.ContentReferenceConfig",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comDayCqWcmCoreImplReferencesContentContentReferenceConfigRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.day.cq.wcm.core.impl.servlets.contentfinder.AssetViewHandler",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comDayCqWcmCoreImplServletsContentfinderAssetViewHandlerRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.day.cq.wcm.core.impl.servlets.contentfinder.connector.ConnectorViewHandler",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comDayCqWcmCoreImplServletsContentfinderConnectorConnectorVieRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.day.cq.wcm.core.impl.servlets.contentfinder.PageViewHandler",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comDayCqWcmCoreImplServletsContentfinderPageViewHandlerRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.day.cq.wcm.core.impl.servlets.FindReplaceServlet",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comDayCqWcmCoreImplServletsFindReplaceServletRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.day.cq.wcm.core.impl.servlets.ReferenceSearchServlet",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comDayCqWcmCoreImplServletsReferenceSearchServletRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.day.cq.wcm.core.impl.servlets.ThumbnailServlet",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comDayCqWcmCoreImplServletsThumbnailServletRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.day.cq.wcm.core.impl.utils.DefaultPageNameValidator",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comDayCqWcmCoreImplUtilsDefaultPageNameValidatorRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.day.cq.wcm.core.impl.variants.PageVariantsProviderImpl",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comDayCqWcmCoreImplVariantsPageVariantsProviderImplRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.day.cq.wcm.core.impl.VersionManagerImpl",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comDayCqWcmCoreImplVersionManagerImplRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.day.cq.wcm.core.impl.VersionPurgeTask",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comDayCqWcmCoreImplVersionPurgeTaskRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.day.cq.wcm.core.impl.WCMDebugFilter",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comDayCqWcmCoreImplWCMDebugFilterRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.day.cq.wcm.core.impl.WCMDeveloperModeFilter",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comDayCqWcmCoreImplWCMDeveloperModeFilterRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.day.cq.wcm.core.impl.warp.TimeWarpFilter",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comDayCqWcmCoreImplWarpTimeWarpFilterRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.day.cq.wcm.core.mvt.MVTStatisticsImpl",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comDayCqWcmCoreMvtMVTStatisticsImplRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.day.cq.wcm.core.stats.PageViewStatisticsImpl",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comDayCqWcmCoreStatsPageViewStatisticsImplRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.day.cq.wcm.core.WCMRequestFilter",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comDayCqWcmCoreWCMRequestFilterRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.day.cq.wcm.designimporter.DesignPackageImporter",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comDayCqWcmDesignimporterDesignPackageImporterRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.day.cq.wcm.designimporter.impl.CanvasBuilderImpl",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comDayCqWcmDesignimporterImplCanvasBuilderImplRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.day.cq.wcm.designimporter.impl.CanvasPageDeleteHandler",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comDayCqWcmDesignimporterImplCanvasPageDeleteHandlerRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.day.cq.wcm.designimporter.impl.EntryPreprocessorImpl",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comDayCqWcmDesignimporterImplEntryPreprocessorImplRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.day.cq.wcm.designimporter.impl.MobileCanvasBuilderImpl",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comDayCqWcmDesignimporterImplMobileCanvasBuilderImplRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.day.cq.wcm.designimporter.parser.taghandlers.factory.CanvasComponentTagHandlerFactory",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comDayCqWcmDesignimporterParserTaghandlersFactoryCanvasComponeRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.day.cq.wcm.designimporter.parser.taghandlers.factory.DefaultComponentTagHandlerFactory",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comDayCqWcmDesignimporterParserTaghandlersFactoryDefaultComponRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.day.cq.wcm.designimporter.parser.taghandlers.factory.DefaultTagHandlerFactory",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comDayCqWcmDesignimporterParserTaghandlersFactoryDefaultTagHanRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.day.cq.wcm.designimporter.parser.taghandlers.factory.HeadTagHandlerFactory",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comDayCqWcmDesignimporterParserTaghandlersFactoryHeadTagHandleRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.day.cq.wcm.designimporter.parser.taghandlers.factory.IFrameTagHandlerFactory",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comDayCqWcmDesignimporterParserTaghandlersFactoryIFrameTagHandRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.day.cq.wcm.designimporter.parser.taghandlers.factory.ImageComponentTagHandlerFactory",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comDayCqWcmDesignimporterParserTaghandlersFactoryImageComponenRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.day.cq.wcm.designimporter.parser.taghandlers.factory.ImgTagHandlerFactory",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comDayCqWcmDesignimporterParserTaghandlersFactoryImgTagHandlerRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.day.cq.wcm.designimporter.parser.taghandlers.factory.InlineScriptTagHandlerFactory",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comDayCqWcmDesignimporterParserTaghandlersFactoryInlineScriptTRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.day.cq.wcm.designimporter.parser.taghandlers.factory.LinkTagHandlerFactory",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comDayCqWcmDesignimporterParserTaghandlersFactoryLinkTagHandleRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.day.cq.wcm.designimporter.parser.taghandlers.factory.MetaTagHandlerFactory",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comDayCqWcmDesignimporterParserTaghandlersFactoryMetaTagHandleRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.day.cq.wcm.designimporter.parser.taghandlers.factory.NonScriptTagHandlerFactory",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comDayCqWcmDesignimporterParserTaghandlersFactoryNonScriptTagHRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.day.cq.wcm.designimporter.parser.taghandlers.factory.ParsysComponentTagHandlerFactory",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comDayCqWcmDesignimporterParserTaghandlersFactoryParsysComponeRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.day.cq.wcm.designimporter.parser.taghandlers.factory.ScriptTagHandlerFactory",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comDayCqWcmDesignimporterParserTaghandlersFactoryScriptTagHandRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.day.cq.wcm.designimporter.parser.taghandlers.factory.StyleTagHandlerFactory",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comDayCqWcmDesignimporterParserTaghandlersFactoryStyleTagHandlRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.day.cq.wcm.designimporter.parser.taghandlers.factory.TextComponentTagHandlerFactory",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comDayCqWcmDesignimporterParserTaghandlersFactoryTextComponentRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.day.cq.wcm.designimporter.parser.taghandlers.factory.TitleComponentTagHandlerFactory",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comDayCqWcmDesignimporterParserTaghandlersFactoryTitleComponenRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.day.cq.wcm.designimporter.parser.taghandlers.factory.TitleTagHandlerFactory",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comDayCqWcmDesignimporterParserTaghandlersFactoryTitleTagHandlRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.day.cq.wcm.foundation.forms.impl.FormChooserServlet",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comDayCqWcmFoundationFormsImplFormChooserServletRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.day.cq.wcm.foundation.forms.impl.FormParagraphPostProcessor",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comDayCqWcmFoundationFormsImplFormParagraphPostProcessorRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.day.cq.wcm.foundation.forms.impl.FormsHandlingServlet",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comDayCqWcmFoundationFormsImplFormsHandlingServletRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.day.cq.wcm.foundation.forms.impl.MailServlet",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comDayCqWcmFoundationFormsImplMailServletRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.day.cq.wcm.foundation.impl.AdaptiveImageComponentServlet",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comDayCqWcmFoundationImplAdaptiveImageComponentServletRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.day.cq.wcm.foundation.impl.HTTPAuthHandler",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comDayCqWcmFoundationImplHTTPAuthHandlerRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.day.cq.wcm.foundation.impl.PageImpressionsTracker",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comDayCqWcmFoundationImplPageImpressionsTrackerRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.day.cq.wcm.foundation.impl.PageRedirectServlet",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comDayCqWcmFoundationImplPageRedirectServletRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.day.cq.wcm.foundation.security.impl.DefaultAttachmentTypeBlacklistService",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comDayCqWcmFoundationSecurityImplDefaultAttachmentTypeBlacklistRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.day.cq.wcm.foundation.security.impl.SaferSlingPostValidatorImpl",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comDayCqWcmFoundationSecurityImplSaferSlingPostValidatorImplRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.day.cq.wcm.mobile.core.impl.device.DeviceInfoTransformerFactory",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comDayCqWcmMobileCoreImplDeviceDeviceInfoTransformerFactoryRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.day.cq.wcm.mobile.core.impl.redirect.RedirectFilter",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comDayCqWcmMobileCoreImplRedirectRedirectFilterRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.day.cq.wcm.msm.impl.actions.ContentCopyActionFactory",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comDayCqWcmMsmImplActionsContentCopyActionFactoryRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.day.cq.wcm.msm.impl.actions.ContentDeleteActionFactory",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comDayCqWcmMsmImplActionsContentDeleteActionFactoryRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.day.cq.wcm.msm.impl.actions.ContentUpdateActionFactory",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comDayCqWcmMsmImplActionsContentUpdateActionFactoryRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.day.cq.wcm.msm.impl.actions.OrderChildrenActionFactory",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comDayCqWcmMsmImplActionsOrderChildrenActionFactoryRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.day.cq.wcm.msm.impl.actions.PageMoveActionFactory",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comDayCqWcmMsmImplActionsPageMoveActionFactoryRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.day.cq.wcm.msm.impl.actions.ReferencesUpdateActionFactory",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comDayCqWcmMsmImplActionsReferencesUpdateActionFactoryRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.day.cq.wcm.msm.impl.actions.VersionCopyActionFactory",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comDayCqWcmMsmImplActionsVersionCopyActionFactoryRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.day.cq.wcm.msm.impl.LiveRelationshipManagerImpl",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comDayCqWcmMsmImplLiveRelationshipManagerImplRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.day.cq.wcm.msm.impl.RolloutManagerImpl",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comDayCqWcmMsmImplRolloutManagerImplRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.day.cq.wcm.msm.impl.servlets.AuditLogServlet",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comDayCqWcmMsmImplServletsAuditLogServletRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.day.cq.wcm.notification.email.impl.EmailChannel",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comDayCqWcmNotificationEmailImplEmailChannelRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.day.cq.wcm.notification.impl.NotificationManagerImpl",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comDayCqWcmNotificationImplNotificationManagerImplRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.day.cq.wcm.scripting.impl.BVPManager",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comDayCqWcmScriptingImplBVPManagerRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.day.cq.wcm.undo.UndoConfig",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comDayCqWcmUndoUndoConfigRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.day.cq.wcm.webservicesupport.impl.ReplicationEventListener",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comDayCqWcmWebservicesupportImplReplicationEventListenerRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.day.cq.wcm.workflow.impl.WcmWorkflowServiceImpl",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comDayCqWcmWorkflowImplWcmWorkflowServiceImplRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.day.cq.wcm.workflow.impl.WorkflowPackageInfoProvider",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comDayCqWcmWorkflowImplWorkflowPackageInfoProviderRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.day.cq.widget.impl.HtmlLibraryManagerImpl",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comDayCqWidgetImplHtmlLibraryManagerImplRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.day.cq.widget.impl.WidgetExtensionProviderImpl",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comDayCqWidgetImplWidgetExtensionProviderImplRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.day.cq.workflow.impl.email.EMailNotificationService",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comDayCqWorkflowImplEmailEMailNotificationServiceRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.day.cq.workflow.impl.email.TaskEMailNotificationService",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comDayCqWorkflowImplEmailTaskEMailNotificationServiceRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.day.crx.security.token.impl.impl.TokenAuthenticationHandler",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comDayCrxSecurityTokenImplImplTokenAuthenticationHandlerRequest();
        }
    });
    Routes.insert("//system/console/configMgr/com.day.crx.security.token.impl.TokenCleanupTask",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->comDayCrxSecurityTokenImplTokenCleanupTaskRequest();
        }
    });
    Routes.insert("//system/console/configMgr/Guide Localization Service",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->guideLocalizationServiceRequest();
        }
    });
    Routes.insert("//system/console/configMgr/MessagingUserComponentFactory",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->messagingUserComponentFactoryRequest();
        }
    });
    Routes.insert("//system/console/configMgr/org.apache.aries.jmx.framework.StateConfig",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->orgApacheAriesJmxFrameworkStateConfigRequest();
        }
    });
    Routes.insert("//system/console/configMgr/org.apache.felix.eventadmin.impl.EventAdmin",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->orgApacheFelixEventadminImplEventAdminRequest();
        }
    });
    Routes.insert("//system/console/configMgr/org.apache.felix.http",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->orgApacheFelixHttpRequest();
        }
    });
    Routes.insert("//system/console/configMgr/org.apache.felix.http.sslfilter.SslFilter",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->orgApacheFelixHttpSslfilterSslFilterRequest();
        }
    });
    Routes.insert("//system/console/configMgr/org.apache.felix.jaas.Configuration.factory",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->orgApacheFelixJaasConfigurationFactoryRequest();
        }
    });
    Routes.insert("//system/console/configMgr/org.apache.felix.jaas.ConfigurationSpi",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->orgApacheFelixJaasConfigurationSpiRequest();
        }
    });
    Routes.insert("//system/console/configMgr/org.apache.felix.scr.ScrService",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->orgApacheFelixScrScrServiceRequest();
        }
    });
    Routes.insert("//system/console/configMgr/org.apache.felix.systemready.impl.ComponentsCheck",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->orgApacheFelixSystemreadyImplComponentsCheckRequest();
        }
    });
    Routes.insert("//system/console/configMgr/org.apache.felix.systemready.impl.FrameworkStartCheck",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->orgApacheFelixSystemreadyImplFrameworkStartCheckRequest();
        }
    });
    Routes.insert("//system/console/configMgr/org.apache.felix.systemready.impl.ServicesCheck",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->orgApacheFelixSystemreadyImplServicesCheckRequest();
        }
    });
    Routes.insert("//system/console/configMgr/org.apache.felix.systemready.impl.servlet.SystemAliveServlet",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->orgApacheFelixSystemreadyImplServletSystemAliveServletRequest();
        }
    });
    Routes.insert("//system/console/configMgr/org.apache.felix.systemready.impl.servlet.SystemReadyServlet",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->orgApacheFelixSystemreadyImplServletSystemReadyServletRequest();
        }
    });
    Routes.insert("//system/console/configMgr/org.apache.felix.systemready.SystemReadyMonitor",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->orgApacheFelixSystemreadySystemReadyMonitorRequest();
        }
    });
    Routes.insert("//system/console/configMgr/org.apache.felix.webconsole.internal.servlet.OsgiManager",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->orgApacheFelixWebconsoleInternalServletOsgiManagerRequest();
        }
    });
    Routes.insert("//system/console/configMgr/org.apache.felix.webconsole.plugins.event.internal.PluginServlet",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->orgApacheFelixWebconsolePluginsEventInternalPluginServletRequest();
        }
    });
    Routes.insert("//system/console/configMgr/org.apache.felix.webconsole.plugins.memoryusage.internal.MemoryUsageConfigurator",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->orgApacheFelixWebconsolePluginsMemoryusageInternalMemoryUsageCoRequest();
        }
    });
    Routes.insert("//system/console/configMgr/org.apache.http.proxyconfigurator",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->orgApacheHttpProxyconfiguratorRequest();
        }
    });
    Routes.insert("//system/console/configMgr/org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreTextProviderService",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->orgApacheJackrabbitOakPluginsBlobDatastoreDataStoreTextProviderRequest();
        }
    });
    Routes.insert("//system/console/configMgr/org.apache.jackrabbit.oak.plugins.blob.datastore.FileDataStore",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->orgApacheJackrabbitOakPluginsBlobDatastoreFileDataStoreRequest();
        }
    });
    Routes.insert("//system/console/configMgr/org.apache.jackrabbit.oak.plugins.document.DocumentNodeStoreService",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->orgApacheJackrabbitOakPluginsDocumentDocumentNodeStoreServiceRequest();
        }
    });
    Routes.insert("//system/console/configMgr/org.apache.jackrabbit.oak.plugins.document.DocumentNodeStoreServicePreset",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->orgApacheJackrabbitOakPluginsDocumentDocumentNodeStoreServicePreRequest();
        }
    });
    Routes.insert("//system/console/configMgr/org.apache.jackrabbit.oak.plugins.document.secondary.SecondaryStoreCacheService",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->orgApacheJackrabbitOakPluginsDocumentSecondarySecondaryStoreCacRequest();
        }
    });
    Routes.insert("//system/console/configMgr/org.apache.jackrabbit.oak.plugins.index.AsyncIndexerService",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->orgApacheJackrabbitOakPluginsIndexAsyncIndexerServiceRequest();
        }
    });
    Routes.insert("//system/console/configMgr/org.apache.jackrabbit.oak.plugins.index.lucene.LuceneIndexProviderService",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->orgApacheJackrabbitOakPluginsIndexLuceneLuceneIndexProviderServRequest();
        }
    });
    Routes.insert("//system/console/configMgr/org.apache.jackrabbit.oak.plugins.index.solr.osgi.EmbeddedSolrServerConfigurationProvider",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->orgApacheJackrabbitOakPluginsIndexSolrOsgiEmbeddedSolrServerCoRequest();
        }
    });
    Routes.insert("//system/console/configMgr/org.apache.jackrabbit.oak.plugins.index.solr.osgi.NodeStateSolrServersObserverService",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->orgApacheJackrabbitOakPluginsIndexSolrOsgiNodeStateSolrServersRequest();
        }
    });
    Routes.insert("//system/console/configMgr/org.apache.jackrabbit.oak.plugins.index.solr.osgi.OakSolrConfigurationProviderService",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->orgApacheJackrabbitOakPluginsIndexSolrOsgiOakSolrConfigurationRequest();
        }
    });
    Routes.insert("//system/console/configMgr/org.apache.jackrabbit.oak.plugins.index.solr.osgi.RemoteSolrServerConfigurationProvider",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->orgApacheJackrabbitOakPluginsIndexSolrOsgiRemoteSolrServerConfRequest();
        }
    });
    Routes.insert("//system/console/configMgr/org.apache.jackrabbit.oak.plugins.index.solr.osgi.SolrQueryIndexProviderService",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->orgApacheJackrabbitOakPluginsIndexSolrOsgiSolrQueryIndexProvidRequest();
        }
    });
    Routes.insert("//system/console/configMgr/org.apache.jackrabbit.oak.plugins.index.solr.osgi.SolrServerProviderService",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->orgApacheJackrabbitOakPluginsIndexSolrOsgiSolrServerProviderSeRequest();
        }
    });
    Routes.insert("//system/console/configMgr/org.apache.jackrabbit.oak.plugins.metric.StatisticsProviderFactory",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->orgApacheJackrabbitOakPluginsMetricStatisticsProviderFactoryRequest();
        }
    });
    Routes.insert("//system/console/configMgr/org.apache.jackrabbit.oak.plugins.observation.ChangeCollectorProvider",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->orgApacheJackrabbitOakPluginsObservationChangeCollectorProviderRequest();
        }
    });
    Routes.insert("//system/console/configMgr/org.apache.jackrabbit.oak.query.QueryEngineSettingsService",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->orgApacheJackrabbitOakQueryQueryEngineSettingsServiceRequest();
        }
    });
    Routes.insert("//system/console/configMgr/org.apache.jackrabbit.oak.security.authentication.AuthenticationConfigurationImpl",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->orgApacheJackrabbitOakSecurityAuthenticationAuthenticationConfigRequest();
        }
    });
    Routes.insert("//system/console/configMgr/org.apache.jackrabbit.oak.security.authentication.ldap.impl.LdapIdentityProvider",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->orgApacheJackrabbitOakSecurityAuthenticationLdapImplLdapIdentiRequest();
        }
    });
    Routes.insert("//system/console/configMgr/org.apache.jackrabbit.oak.security.authentication.token.TokenConfigurationImpl",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->orgApacheJackrabbitOakSecurityAuthenticationTokenTokenConfiguraRequest();
        }
    });
    Routes.insert("//system/console/configMgr/org.apache.jackrabbit.oak.security.authorization.AuthorizationConfigurationImpl",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->orgApacheJackrabbitOakSecurityAuthorizationAuthorizationConfigurRequest();
        }
    });
    Routes.insert("//system/console/configMgr/org.apache.jackrabbit.oak.security.internal.SecurityProviderRegistration",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->orgApacheJackrabbitOakSecurityInternalSecurityProviderRegistratiRequest();
        }
    });
    Routes.insert("//system/console/configMgr/org.apache.jackrabbit.oak.security.user.RandomAuthorizableNodeName",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->orgApacheJackrabbitOakSecurityUserRandomAuthorizableNodeNameRequest();
        }
    });
    Routes.insert("//system/console/configMgr/org.apache.jackrabbit.oak.security.user.UserConfigurationImpl",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->orgApacheJackrabbitOakSecurityUserUserConfigurationImplRequest();
        }
    });
    Routes.insert("//system/console/configMgr/org.apache.jackrabbit.oak.segment.azure.AzureSegmentStoreService",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->orgApacheJackrabbitOakSegmentAzureAzureSegmentStoreServiceRequest();
        }
    });
    Routes.insert("//system/console/configMgr/org.apache.jackrabbit.oak.segment.SegmentNodeStoreFactory",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->orgApacheJackrabbitOakSegmentSegmentNodeStoreFactoryRequest();
        }
    });
    Routes.insert("//system/console/configMgr/org.apache.jackrabbit.oak.segment.SegmentNodeStoreMonitorService",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->orgApacheJackrabbitOakSegmentSegmentNodeStoreMonitorServiceRequest();
        }
    });
    Routes.insert("//system/console/configMgr/org.apache.jackrabbit.oak.segment.SegmentNodeStoreService",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->orgApacheJackrabbitOakSegmentSegmentNodeStoreServiceRequest();
        }
    });
    Routes.insert("//system/console/configMgr/org.apache.jackrabbit.oak.segment.standby.store.StandbyStoreService",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->orgApacheJackrabbitOakSegmentStandbyStoreStandbyStoreServiceRequest();
        }
    });
    Routes.insert("//system/console/configMgr/org.apache.jackrabbit.oak.spi.security.authentication.external.impl.DefaultSyncHandler",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->orgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplDeRequest();
        }
    });
    Routes.insert("//system/console/configMgr/org.apache.jackrabbit.oak.spi.security.authentication.external.impl.ExternalLoginModuleFactory",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->orgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplExRequest();
        }
    });
    Routes.insert("//system/console/configMgr/org.apache.jackrabbit.oak.spi.security.authentication.external.impl.principal.ExternalPrincipalConfiguration",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->orgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplPrRequest();
        }
    });
    Routes.insert("//system/console/configMgr/org.apache.jackrabbit.oak.spi.security.authorization.cug.impl.CugConfiguration",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->orgApacheJackrabbitOakSpiSecurityAuthorizationCugImplCugConfiRequest();
        }
    });
    Routes.insert("//system/console/configMgr/org.apache.jackrabbit.oak.spi.security.authorization.cug.impl.CugExcludeImpl",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->orgApacheJackrabbitOakSpiSecurityAuthorizationCugImplCugExcluRequest();
        }
    });
    Routes.insert("//system/console/configMgr/org.apache.jackrabbit.oak.spi.security.user.action.DefaultAuthorizableActionProvider",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->orgApacheJackrabbitOakSpiSecurityUserActionDefaultAuthorizableRequest();
        }
    });
    Routes.insert("//system/console/configMgr/org.apache.jackrabbit.vault.packaging.impl.PackagingImpl",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->orgApacheJackrabbitVaultPackagingImplPackagingImplRequest();
        }
    });
    Routes.insert("//system/console/configMgr/org.apache.jackrabbit.vault.packaging.registry.impl.FSPackageRegistry",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->orgApacheJackrabbitVaultPackagingRegistryImplFSPackageRegistryRequest();
        }
    });
    Routes.insert("//system/console/configMgr/org.apache.sling.auth.core.impl.LogoutServlet",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->orgApacheSlingAuthCoreImplLogoutServletRequest();
        }
    });
    Routes.insert("//system/console/configMgr/org.apache.sling.caconfig.impl.ConfigurationBindingsValueProvider",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->orgApacheSlingCaconfigImplConfigurationBindingsValueProviderRequest();
        }
    });
    Routes.insert("//system/console/configMgr/org.apache.sling.caconfig.impl.ConfigurationResolverImpl",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->orgApacheSlingCaconfigImplConfigurationResolverImplRequest();
        }
    });
    Routes.insert("//system/console/configMgr/org.apache.sling.caconfig.impl.def.DefaultConfigurationInheritanceStrategy",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->orgApacheSlingCaconfigImplDefDefaultConfigurationInheritanceStraRequest();
        }
    });
    Routes.insert("//system/console/configMgr/org.apache.sling.caconfig.impl.def.DefaultConfigurationPersistenceStrategy",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->orgApacheSlingCaconfigImplDefDefaultConfigurationPersistenceStraRequest();
        }
    });
    Routes.insert("//system/console/configMgr/org.apache.sling.caconfig.impl.override.OsgiConfigurationOverrideProvider",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->orgApacheSlingCaconfigImplOverrideOsgiConfigurationOverrideProviRequest();
        }
    });
    Routes.insert("//system/console/configMgr/org.apache.sling.caconfig.impl.override.SystemPropertyConfigurationOverrideProvider",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->orgApacheSlingCaconfigImplOverrideSystemPropertyConfigurationOveRequest();
        }
    });
    Routes.insert("//system/console/configMgr/org.apache.sling.caconfig.management.impl.ConfigurationManagementSettingsImpl",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->orgApacheSlingCaconfigManagementImplConfigurationManagementSettiRequest();
        }
    });
    Routes.insert("//system/console/configMgr/org.apache.sling.caconfig.resource.impl.def.DefaultConfigurationResourceResolvingStrategy",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->orgApacheSlingCaconfigResourceImplDefDefaultConfigurationResourRequest();
        }
    });
    Routes.insert("//system/console/configMgr/org.apache.sling.caconfig.resource.impl.def.DefaultContextPathStrategy",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->orgApacheSlingCaconfigResourceImplDefDefaultContextPathStrategyRequest();
        }
    });
    Routes.insert("//system/console/configMgr/org.apache.sling.commons.html.internal.TagsoupHtmlParser",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->orgApacheSlingCommonsHtmlInternalTagsoupHtmlParserRequest();
        }
    });
    Routes.insert("//system/console/configMgr/org.apache.sling.commons.log.LogManager",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->orgApacheSlingCommonsLogLogManagerRequest();
        }
    });
    Routes.insert("//system/console/configMgr/org.apache.sling.commons.log.LogManager.factory.config",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->orgApacheSlingCommonsLogLogManagerFactoryConfigRequest();
        }
    });
    Routes.insert("//system/console/configMgr/org.apache.sling.commons.log.LogManager.factory.writer",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->orgApacheSlingCommonsLogLogManagerFactoryWriterRequest();
        }
    });
    Routes.insert("//system/console/configMgr/org.apache.sling.commons.metrics.internal.LogReporter",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->orgApacheSlingCommonsMetricsInternalLogReporterRequest();
        }
    });
    Routes.insert("//system/console/configMgr/org.apache.sling.commons.metrics.rrd4j.impl.CodahaleMetricsReporter",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->orgApacheSlingCommonsMetricsRrd4jImplCodahaleMetricsReporterRequest();
        }
    });
    Routes.insert("//system/console/configMgr/org.apache.sling.commons.mime.internal.MimeTypeServiceImpl",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->orgApacheSlingCommonsMimeInternalMimeTypeServiceImplRequest();
        }
    });
    Routes.insert("//system/console/configMgr/org.apache.sling.commons.scheduler.impl.QuartzScheduler",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->orgApacheSlingCommonsSchedulerImplQuartzSchedulerRequest();
        }
    });
    Routes.insert("//system/console/configMgr/org.apache.sling.commons.scheduler.impl.SchedulerHealthCheck",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->orgApacheSlingCommonsSchedulerImplSchedulerHealthCheckRequest();
        }
    });
    Routes.insert("//system/console/configMgr/org.apache.sling.commons.threads.impl.DefaultThreadPool.factory",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->orgApacheSlingCommonsThreadsImplDefaultThreadPoolFactoryRequest();
        }
    });
    Routes.insert("//system/console/configMgr/org.apache.sling.datasource.DataSourceFactory",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->orgApacheSlingDatasourceDataSourceFactoryRequest();
        }
    });
    Routes.insert("//system/console/configMgr/org.apache.sling.datasource.JNDIDataSourceFactory",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->orgApacheSlingDatasourceJNDIDataSourceFactoryRequest();
        }
    });
    Routes.insert("//system/console/configMgr/org.apache.sling.discovery.oak.Config",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->orgApacheSlingDiscoveryOakConfigRequest();
        }
    });
    Routes.insert("//system/console/configMgr/org.apache.sling.discovery.oak.SynchronizedClocksHealthCheck",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->orgApacheSlingDiscoveryOakSynchronizedClocksHealthCheckRequest();
        }
    });
    Routes.insert("//system/console/configMgr/org.apache.sling.distribution.agent.impl.ForwardDistributionAgentFactory",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->orgApacheSlingDistributionAgentImplForwardDistributionAgentFactoRequest();
        }
    });
    Routes.insert("//system/console/configMgr/org.apache.sling.distribution.agent.impl.PrivilegeDistributionRequestAuthorizationStrategyFactory",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->orgApacheSlingDistributionAgentImplPrivilegeDistributionRequestARequest();
        }
    });
    Routes.insert("//system/console/configMgr/org.apache.sling.distribution.agent.impl.QueueDistributionAgentFactory",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->orgApacheSlingDistributionAgentImplQueueDistributionAgentFactoryRequest();
        }
    });
    Routes.insert("//system/console/configMgr/org.apache.sling.distribution.agent.impl.ReverseDistributionAgentFactory",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->orgApacheSlingDistributionAgentImplReverseDistributionAgentFactoRequest();
        }
    });
    Routes.insert("//system/console/configMgr/org.apache.sling.distribution.agent.impl.SimpleDistributionAgentFactory",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->orgApacheSlingDistributionAgentImplSimpleDistributionAgentFactorRequest();
        }
    });
    Routes.insert("//system/console/configMgr/org.apache.sling.distribution.agent.impl.SyncDistributionAgentFactory",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->orgApacheSlingDistributionAgentImplSyncDistributionAgentFactoryRequest();
        }
    });
    Routes.insert("//system/console/configMgr/org.apache.sling.distribution.monitor.DistributionQueueHealthCheck",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->orgApacheSlingDistributionMonitorDistributionQueueHealthCheckRequest();
        }
    });
    Routes.insert("//system/console/configMgr/org.apache.sling.distribution.packaging.impl.exporter.AgentDistributionPackageExporterFactory",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->orgApacheSlingDistributionPackagingImplExporterAgentDistributioRequest();
        }
    });
    Routes.insert("//system/console/configMgr/org.apache.sling.distribution.packaging.impl.exporter.LocalDistributionPackageExporterFactory",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->orgApacheSlingDistributionPackagingImplExporterLocalDistributioRequest();
        }
    });
    Routes.insert("//system/console/configMgr/org.apache.sling.distribution.packaging.impl.exporter.RemoteDistributionPackageExporterFactory",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->orgApacheSlingDistributionPackagingImplExporterRemoteDistributiRequest();
        }
    });
    Routes.insert("//system/console/configMgr/org.apache.sling.distribution.packaging.impl.importer.LocalDistributionPackageImporterFactory",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->orgApacheSlingDistributionPackagingImplImporterLocalDistributioRequest();
        }
    });
    Routes.insert("//system/console/configMgr/org.apache.sling.distribution.packaging.impl.importer.RemoteDistributionPackageImporterFactory",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->orgApacheSlingDistributionPackagingImplImporterRemoteDistributiRequest();
        }
    });
    Routes.insert("//system/console/configMgr/org.apache.sling.distribution.packaging.impl.importer.RepositoryDistributionPackageImporterFactory",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->orgApacheSlingDistributionPackagingImplImporterRepositoryDistriRequest();
        }
    });
    Routes.insert("//system/console/configMgr/org.apache.sling.distribution.resources.impl.DistributionConfigurationResourceProviderFactory",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->orgApacheSlingDistributionResourcesImplDistributionConfigurationRequest();
        }
    });
    Routes.insert("//system/console/configMgr/org.apache.sling.distribution.resources.impl.DistributionServiceResourceProviderFactory",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->orgApacheSlingDistributionResourcesImplDistributionServiceResourRequest();
        }
    });
    Routes.insert("//system/console/configMgr/org.apache.sling.distribution.serialization.impl.DistributionPackageBuilderFactory",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->orgApacheSlingDistributionSerializationImplDistributionPackageBuRequest();
        }
    });
    Routes.insert("//system/console/configMgr/org.apache.sling.distribution.serialization.impl.vlt.VaultDistributionPackageBuilderFactory",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->orgApacheSlingDistributionSerializationImplVltVaultDistributionRequest();
        }
    });
    Routes.insert("//system/console/configMgr/org.apache.sling.distribution.transport.impl.UserCredentialsDistributionTransportSecretProvider",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->orgApacheSlingDistributionTransportImplUserCredentialsDistributiRequest();
        }
    });
    Routes.insert("//system/console/configMgr/org.apache.sling.distribution.trigger.impl.DistributionEventDistributeDistributionTriggerFactory",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->orgApacheSlingDistributionTriggerImplDistributionEventDistributeRequest();
        }
    });
    Routes.insert("//system/console/configMgr/org.apache.sling.distribution.trigger.impl.JcrEventDistributionTriggerFactory",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->orgApacheSlingDistributionTriggerImplJcrEventDistributionTriggerRequest();
        }
    });
    Routes.insert("//system/console/configMgr/org.apache.sling.distribution.trigger.impl.PersistedJcrEventDistributionTriggerFactory",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->orgApacheSlingDistributionTriggerImplPersistedJcrEventDistributiRequest();
        }
    });
    Routes.insert("//system/console/configMgr/org.apache.sling.distribution.trigger.impl.RemoteEventDistributionTriggerFactory",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->orgApacheSlingDistributionTriggerImplRemoteEventDistributionTrigRequest();
        }
    });
    Routes.insert("//system/console/configMgr/org.apache.sling.distribution.trigger.impl.ResourceEventDistributionTriggerFactory",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->orgApacheSlingDistributionTriggerImplResourceEventDistributionTrRequest();
        }
    });
    Routes.insert("//system/console/configMgr/org.apache.sling.distribution.trigger.impl.ScheduledDistributionTriggerFactory",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->orgApacheSlingDistributionTriggerImplScheduledDistributionTriggeRequest();
        }
    });
    Routes.insert("//system/console/configMgr/org.apache.sling.engine.impl.auth.SlingAuthenticator",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->orgApacheSlingEngineImplAuthSlingAuthenticatorRequest();
        }
    });
    Routes.insert("//system/console/configMgr/org.apache.sling.engine.impl.debug.RequestProgressTrackerLogFilter",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->orgApacheSlingEngineImplDebugRequestProgressTrackerLogFilterRequest();
        }
    });
    Routes.insert("//system/console/configMgr/org.apache.sling.engine.impl.log.RequestLogger",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->orgApacheSlingEngineImplLogRequestLoggerRequest();
        }
    });
    Routes.insert("//system/console/configMgr/org.apache.sling.engine.impl.log.RequestLoggerService",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->orgApacheSlingEngineImplLogRequestLoggerServiceRequest();
        }
    });
    Routes.insert("//system/console/configMgr/org.apache.sling.engine.impl.SlingMainServlet",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->orgApacheSlingEngineImplSlingMainServletRequest();
        }
    });
    Routes.insert("//system/console/configMgr/org.apache.sling.engine.parameters",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->orgApacheSlingEngineParametersRequest();
        }
    });
    Routes.insert("//system/console/configMgr/org.apache.sling.event.impl.EventingThreadPool",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->orgApacheSlingEventImplEventingThreadPoolRequest();
        }
    });
    Routes.insert("//system/console/configMgr/org.apache.sling.event.impl.jobs.DefaultJobManager",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->orgApacheSlingEventImplJobsDefaultJobManagerRequest();
        }
    });
    Routes.insert("//system/console/configMgr/org.apache.sling.event.impl.jobs.jcr.PersistenceHandler",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->orgApacheSlingEventImplJobsJcrPersistenceHandlerRequest();
        }
    });
    Routes.insert("//system/console/configMgr/org.apache.sling.event.impl.jobs.JobConsumerManager",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->orgApacheSlingEventImplJobsJobConsumerManagerRequest();
        }
    });
    Routes.insert("//system/console/configMgr/org.apache.sling.event.jobs.QueueConfiguration",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->orgApacheSlingEventJobsQueueConfigurationRequest();
        }
    });
    Routes.insert("//system/console/configMgr/org.apache.sling.extensions.webconsolesecurityprovider.internal.SlingWebConsoleSecurityProvider",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->orgApacheSlingExtensionsWebconsolesecurityproviderInternalSlingWRequest();
        }
    });
    Routes.insert("//system/console/configMgr/org.apache.sling.featureflags.Feature",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->orgApacheSlingFeatureflagsFeatureRequest();
        }
    });
    Routes.insert("//system/console/configMgr/org.apache.sling.featureflags.impl.ConfiguredFeature",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->orgApacheSlingFeatureflagsImplConfiguredFeatureRequest();
        }
    });
    Routes.insert("//system/console/configMgr/org.apache.sling.hapi.impl.HApiUtilImpl",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->orgApacheSlingHapiImplHApiUtilImplRequest();
        }
    });
    Routes.insert("//system/console/configMgr/org.apache.sling.hc.core.impl.CompositeHealthCheck",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->orgApacheSlingHcCoreImplCompositeHealthCheckRequest();
        }
    });
    Routes.insert("//system/console/configMgr/org.apache.sling.hc.core.impl.executor.HealthCheckExecutorImpl",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->orgApacheSlingHcCoreImplExecutorHealthCheckExecutorImplRequest();
        }
    });
    Routes.insert("//system/console/configMgr/org.apache.sling.hc.core.impl.JmxAttributeHealthCheck",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->orgApacheSlingHcCoreImplJmxAttributeHealthCheckRequest();
        }
    });
    Routes.insert("//system/console/configMgr/org.apache.sling.hc.core.impl.ScriptableHealthCheck",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->orgApacheSlingHcCoreImplScriptableHealthCheckRequest();
        }
    });
    Routes.insert("//system/console/configMgr/org.apache.sling.hc.core.impl.servlet.HealthCheckExecutorServlet",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->orgApacheSlingHcCoreImplServletHealthCheckExecutorServletRequest();
        }
    });
    Routes.insert("//system/console/configMgr/org.apache.sling.hc.core.impl.servlet.ResultTxtVerboseSerializer",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->orgApacheSlingHcCoreImplServletResultTxtVerboseSerializerRequest();
        }
    });
    Routes.insert("//system/console/configMgr/org.apache.sling.i18n.impl.I18NFilter",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->orgApacheSlingI18nImplI18NFilterRequest();
        }
    });
    Routes.insert("//system/console/configMgr/org.apache.sling.i18n.impl.JcrResourceBundleProvider",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->orgApacheSlingI18nImplJcrResourceBundleProviderRequest();
        }
    });
    Routes.insert("//system/console/configMgr/org.apache.sling.installer.provider.jcr.impl.JcrInstaller",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->orgApacheSlingInstallerProviderJcrImplJcrInstallerRequest();
        }
    });
    Routes.insert("//system/console/configMgr/org.apache.sling.jcr.base.internal.LoginAdminWhitelist",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->orgApacheSlingJcrBaseInternalLoginAdminWhitelistRequest();
        }
    });
    Routes.insert("//system/console/configMgr/org.apache.sling.jcr.base.internal.LoginAdminWhitelist.fragment",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->orgApacheSlingJcrBaseInternalLoginAdminWhitelistFragmentRequest();
        }
    });
    Routes.insert("//system/console/configMgr/org.apache.sling.jcr.davex.impl.servlets.SlingDavExServlet",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->orgApacheSlingJcrDavexImplServletsSlingDavExServletRequest();
        }
    });
    Routes.insert("//system/console/configMgr/org.apache.sling.jcr.jackrabbit.server.JndiRegistrationSupport",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->orgApacheSlingJcrJackrabbitServerJndiRegistrationSupportRequest();
        }
    });
    Routes.insert("//system/console/configMgr/org.apache.sling.jcr.jackrabbit.server.RmiRegistrationSupport",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->orgApacheSlingJcrJackrabbitServerRmiRegistrationSupportRequest();
        }
    });
    Routes.insert("//system/console/configMgr/org.apache.sling.jcr.repoinit.impl.RepositoryInitializer",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->orgApacheSlingJcrRepoinitImplRepositoryInitializerRequest();
        }
    });
    Routes.insert("//system/console/configMgr/org.apache.sling.jcr.repoinit.RepositoryInitializer",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->orgApacheSlingJcrRepoinitRepositoryInitializerRequest();
        }
    });
    Routes.insert("//system/console/configMgr/org.apache.sling.jcr.resource.internal.JcrResourceResolverFactoryImpl",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->orgApacheSlingJcrResourceInternalJcrResourceResolverFactoryImplRequest();
        }
    });
    Routes.insert("//system/console/configMgr/org.apache.sling.jcr.resource.internal.JcrSystemUserValidator",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->orgApacheSlingJcrResourceInternalJcrSystemUserValidatorRequest();
        }
    });
    Routes.insert("//system/console/configMgr/org.apache.sling.jcr.resourcesecurity.impl.ResourceAccessGateFactory",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->orgApacheSlingJcrResourcesecurityImplResourceAccessGateFactoryRequest();
        }
    });
    Routes.insert("//system/console/configMgr/org.apache.sling.jcr.webdav.impl.handler.DefaultHandlerService",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->orgApacheSlingJcrWebdavImplHandlerDefaultHandlerServiceRequest();
        }
    });
    Routes.insert("//system/console/configMgr/org.apache.sling.jcr.webdav.impl.handler.DirListingExportHandlerService",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->orgApacheSlingJcrWebdavImplHandlerDirListingExportHandlerServicRequest();
        }
    });
    Routes.insert("//system/console/configMgr/org.apache.sling.jcr.webdav.impl.servlets.SimpleWebDavServlet",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->orgApacheSlingJcrWebdavImplServletsSimpleWebDavServletRequest();
        }
    });
    Routes.insert("//system/console/configMgr/org.apache.sling.jmx.provider.impl.JMXResourceProvider",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->orgApacheSlingJmxProviderImplJMXResourceProviderRequest();
        }
    });
    Routes.insert("//system/console/configMgr/org.apache.sling.models.impl.ModelAdapterFactory",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->orgApacheSlingModelsImplModelAdapterFactoryRequest();
        }
    });
    Routes.insert("//system/console/configMgr/org.apache.sling.models.jacksonexporter.impl.ResourceModuleProvider",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->orgApacheSlingModelsJacksonexporterImplResourceModuleProviderRequest();
        }
    });
    Routes.insert("//system/console/configMgr/org.apache.sling.resource.inventory.impl.ResourceInventoryPrinterFactory",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->orgApacheSlingResourceInventoryImplResourceInventoryPrinterFactoRequest();
        }
    });
    Routes.insert("//system/console/configMgr/org.apache.sling.resourcemerger.impl.MergedResourceProviderFactory",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->orgApacheSlingResourcemergerImplMergedResourceProviderFactoryRequest();
        }
    });
    Routes.insert("//system/console/configMgr/org.apache.sling.resourcemerger.picker.overriding",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->orgApacheSlingResourcemergerPickerOverridingRequest();
        }
    });
    Routes.insert("//system/console/configMgr/org.apache.sling.scripting.core.impl.ScriptCacheImpl",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->orgApacheSlingScriptingCoreImplScriptCacheImplRequest();
        }
    });
    Routes.insert("//system/console/configMgr/org.apache.sling.scripting.core.impl.ScriptingResourceResolverProviderImpl",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->orgApacheSlingScriptingCoreImplScriptingResourceResolverProviderRequest();
        }
    });
    Routes.insert("//system/console/configMgr/org.apache.sling.scripting.java.impl.JavaScriptEngineFactory",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->orgApacheSlingScriptingJavaImplJavaScriptEngineFactoryRequest();
        }
    });
    Routes.insert("//system/console/configMgr/org.apache.sling.scripting.javascript.internal.RhinoJavaScriptEngineFactory",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->orgApacheSlingScriptingJavascriptInternalRhinoJavaScriptEngineFaRequest();
        }
    });
    Routes.insert("//system/console/configMgr/org.apache.sling.scripting.jsp.JspScriptEngineFactory",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->orgApacheSlingScriptingJspJspScriptEngineFactoryRequest();
        }
    });
    Routes.insert("//system/console/configMgr/org.apache.sling.scripting.sightly.js.impl.jsapi.SlyBindingsValuesProvider",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->orgApacheSlingScriptingSightlyJsImplJsapiSlyBindingsValuesProvRequest();
        }
    });
    Routes.insert("//system/console/configMgr/org.apache.sling.security.impl.ContentDispositionFilter",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->orgApacheSlingSecurityImplContentDispositionFilterRequest();
        }
    });
    Routes.insert("//system/console/configMgr/org.apache.sling.security.impl.ReferrerFilter",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->orgApacheSlingSecurityImplReferrerFilterRequest();
        }
    });
    Routes.insert("//system/console/configMgr/org.apache.sling.serviceusermapping.impl.ServiceUserMapperImpl",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->orgApacheSlingServiceusermappingImplServiceUserMapperImplRequest();
        }
    });
    Routes.insert("//system/console/configMgr/org.apache.sling.serviceusermapping.impl.ServiceUserMapperImpl.amended",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->orgApacheSlingServiceusermappingImplServiceUserMapperImplAmendedRequest();
        }
    });
    Routes.insert("//system/console/configMgr/org.apache.sling.servlets.get.DefaultGetServlet",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->orgApacheSlingServletsGetDefaultGetServletRequest();
        }
    });
    Routes.insert("//system/console/configMgr/org.apache.sling.servlets.get.impl.version.VersionInfoServlet",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->orgApacheSlingServletsGetImplVersionVersionInfoServletRequest();
        }
    });
    Routes.insert("//system/console/configMgr/org.apache.sling.servlets.post.impl.helper.ChunkCleanUpTask",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->orgApacheSlingServletsPostImplHelperChunkCleanUpTaskRequest();
        }
    });
    Routes.insert("//system/console/configMgr/org.apache.sling.servlets.post.impl.SlingPostServlet",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->orgApacheSlingServletsPostImplSlingPostServletRequest();
        }
    });
    Routes.insert("//system/console/configMgr/org.apache.sling.servlets.resolver.SlingServletResolver",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->orgApacheSlingServletsResolverSlingServletResolverRequest();
        }
    });
    Routes.insert("//system/console/configMgr/org.apache.sling.settings.impl.SlingSettingsServiceImpl",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->orgApacheSlingSettingsImplSlingSettingsServiceImplRequest();
        }
    });
    Routes.insert("//system/console/configMgr/org.apache.sling.startupfilter.impl.StartupFilterImpl",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->orgApacheSlingStartupfilterImplStartupFilterImplRequest();
        }
    });
    Routes.insert("//system/console/configMgr/org.apache.sling.tenant.internal.TenantProviderImpl",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->orgApacheSlingTenantInternalTenantProviderImplRequest();
        }
    });
    Routes.insert("//system/console/configMgr/org.apache.sling.tracer.internal.LogTracer",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->orgApacheSlingTracerInternalLogTracerRequest();
        }
    });
    Routes.insert("//system/console/configMgr/org.apache.sling.xss.impl.XSSFilterImpl",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIConfigmgrApiRequest(socket, OAIConfigmgrApiApiHandler);
            reqObj->orgApacheSlingXssImplXSSFilterImplRequest();
        }
    }); 
}

void ApiRouter::processRequest(QHttpEngine::Socket *socket){
    if (Routes.contains(socket->path())) {
        for(auto endpoints : Routes.values(socket->path())) {
            endpoints.operator()(socket);
        }
    } else
    {  
    }
    socket->setStatusCode(QHttpEngine::Socket::NotFound);
    if(socket->isOpen()){
        socket->writeHeaders();
        socket->close();
    }
    return;
}
}
