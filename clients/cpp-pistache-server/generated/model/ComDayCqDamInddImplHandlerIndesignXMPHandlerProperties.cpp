/**
* Adobe Experience Manager OSGI config (AEM) API
* Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
*
* OpenAPI spec version: 1.0.0-pre.0
* Contact: opensource@shinesolutions.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/


#include "ComDayCqDamInddImplHandlerIndesignXMPHandlerProperties.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

ComDayCqDamInddImplHandlerIndesignXMPHandlerProperties::ComDayCqDamInddImplHandlerIndesignXMPHandlerProperties()
{
    m_Process_labelIsSet = false;
    m_Extract_pagesIsSet = false;
    
}

ComDayCqDamInddImplHandlerIndesignXMPHandlerProperties::~ComDayCqDamInddImplHandlerIndesignXMPHandlerProperties()
{
}

void ComDayCqDamInddImplHandlerIndesignXMPHandlerProperties::validate()
{
    // TODO: implement validation
}

nlohmann::json ComDayCqDamInddImplHandlerIndesignXMPHandlerProperties::toJson() const
{
    nlohmann::json val = nlohmann::json::object();

    if(m_Process_labelIsSet)
    {
        val["process.label"] = ModelBase::toJson(m_Process_label);
    }
    if(m_Extract_pagesIsSet)
    {
        val["extract.pages"] = ModelBase::toJson(m_Extract_pages);
    }
    

    return val;
}

void ComDayCqDamInddImplHandlerIndesignXMPHandlerProperties::fromJson(nlohmann::json& val)
{
    if(val.find("process.label") != val.end())
    {
        if(!val["process.label"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["process.label"]);
            setProcessLabel( newItem );
        }
        
    }
    if(val.find("extract.pages") != val.end())
    {
        if(!val["extract.pages"].is_null())
        {
            ConfigNodePropertyBoolean newItem;
            newItem.fromJson(val["extract.pages"]);
            setExtractPages( newItem );
        }
        
    }
    
}


ConfigNodePropertyString ComDayCqDamInddImplHandlerIndesignXMPHandlerProperties::getProcessLabel() const
{
    return m_Process_label;
}
void ComDayCqDamInddImplHandlerIndesignXMPHandlerProperties::setProcessLabel(ConfigNodePropertyString const& value)
{
    m_Process_label = value;
    m_Process_labelIsSet = true;
}
bool ComDayCqDamInddImplHandlerIndesignXMPHandlerProperties::processLabelIsSet() const
{
    return m_Process_labelIsSet;
}
void ComDayCqDamInddImplHandlerIndesignXMPHandlerProperties::unsetProcess_label()
{
    m_Process_labelIsSet = false;
}
ConfigNodePropertyBoolean ComDayCqDamInddImplHandlerIndesignXMPHandlerProperties::getExtractPages() const
{
    return m_Extract_pages;
}
void ComDayCqDamInddImplHandlerIndesignXMPHandlerProperties::setExtractPages(ConfigNodePropertyBoolean const& value)
{
    m_Extract_pages = value;
    m_Extract_pagesIsSet = true;
}
bool ComDayCqDamInddImplHandlerIndesignXMPHandlerProperties::extractPagesIsSet() const
{
    return m_Extract_pagesIsSet;
}
void ComDayCqDamInddImplHandlerIndesignXMPHandlerProperties::unsetExtract_pages()
{
    m_Extract_pagesIsSet = false;
}

}
}
}
}

