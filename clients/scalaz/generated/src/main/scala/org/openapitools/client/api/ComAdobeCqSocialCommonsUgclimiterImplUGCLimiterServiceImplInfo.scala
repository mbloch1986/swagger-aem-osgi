package org.openapitools.client.api

import argonaut._
import argonaut.EncodeJson._
import argonaut.DecodeJson._

import org.http4s.{EntityDecoder, EntityEncoder}
import org.http4s.argonaut._
import org.joda.time.DateTime
import ComAdobeCqSocialCommonsUgclimiterImplUGCLimiterServiceImplInfo._

case class ComAdobeCqSocialCommonsUgclimiterImplUGCLimiterServiceImplInfo (
  pid: Option[String],
title: Option[String],
description: Option[String],
properties: Option[ComAdobeCqSocialCommonsUgclimiterImplUGCLimiterServiceImplProperties])

object ComAdobeCqSocialCommonsUgclimiterImplUGCLimiterServiceImplInfo {
  import DateTimeCodecs._

  implicit val ComAdobeCqSocialCommonsUgclimiterImplUGCLimiterServiceImplInfoCodecJson: CodecJson[ComAdobeCqSocialCommonsUgclimiterImplUGCLimiterServiceImplInfo] = CodecJson.derive[ComAdobeCqSocialCommonsUgclimiterImplUGCLimiterServiceImplInfo]
  implicit val ComAdobeCqSocialCommonsUgclimiterImplUGCLimiterServiceImplInfoDecoder: EntityDecoder[ComAdobeCqSocialCommonsUgclimiterImplUGCLimiterServiceImplInfo] = jsonOf[ComAdobeCqSocialCommonsUgclimiterImplUGCLimiterServiceImplInfo]
  implicit val ComAdobeCqSocialCommonsUgclimiterImplUGCLimiterServiceImplInfoEncoder: EntityEncoder[ComAdobeCqSocialCommonsUgclimiterImplUGCLimiterServiceImplInfo] = jsonEncoderOf[ComAdobeCqSocialCommonsUgclimiterImplUGCLimiterServiceImplInfo]
}
