/**
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIComAdobeGraniteJettySslInternalGraniteSslConnectorFactoryProperties.h
 *
 * 
 */

#ifndef OAIComAdobeGraniteJettySslInternalGraniteSslConnectorFactoryProperties_H
#define OAIComAdobeGraniteJettySslInternalGraniteSslConnectorFactoryProperties_H

#include <QJsonObject>


#include "OAIConfigNodePropertyArray.h"
#include "OAIConfigNodePropertyDropDown.h"
#include "OAIConfigNodePropertyInteger.h"
#include "OAIConfigNodePropertyString.h"

#include "OAIObject.h"

namespace OpenAPI {

class OAIComAdobeGraniteJettySslInternalGraniteSslConnectorFactoryProperties: public OAIObject {
public:
    OAIComAdobeGraniteJettySslInternalGraniteSslConnectorFactoryProperties();
    OAIComAdobeGraniteJettySslInternalGraniteSslConnectorFactoryProperties(QString json);
    ~OAIComAdobeGraniteJettySslInternalGraniteSslConnectorFactoryProperties() override;
    void init();

    QString asJson () const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIConfigNodePropertyInteger getComAdobeGraniteJettySslPort() const;
    void setComAdobeGraniteJettySslPort(const OAIConfigNodePropertyInteger &com_adobe_granite_jetty_ssl_port);

    OAIConfigNodePropertyString getComAdobeGraniteJettySslKeystoreUser() const;
    void setComAdobeGraniteJettySslKeystoreUser(const OAIConfigNodePropertyString &com_adobe_granite_jetty_ssl_keystore_user);

    OAIConfigNodePropertyString getComAdobeGraniteJettySslKeystorePassword() const;
    void setComAdobeGraniteJettySslKeystorePassword(const OAIConfigNodePropertyString &com_adobe_granite_jetty_ssl_keystore_password);

    OAIConfigNodePropertyArray getComAdobeGraniteJettySslCiphersuitesExcluded() const;
    void setComAdobeGraniteJettySslCiphersuitesExcluded(const OAIConfigNodePropertyArray &com_adobe_granite_jetty_ssl_ciphersuites_excluded);

    OAIConfigNodePropertyArray getComAdobeGraniteJettySslCiphersuitesIncluded() const;
    void setComAdobeGraniteJettySslCiphersuitesIncluded(const OAIConfigNodePropertyArray &com_adobe_granite_jetty_ssl_ciphersuites_included);

    OAIConfigNodePropertyDropDown getComAdobeGraniteJettySslClientCertificate() const;
    void setComAdobeGraniteJettySslClientCertificate(const OAIConfigNodePropertyDropDown &com_adobe_granite_jetty_ssl_client_certificate);

    virtual bool isSet() const override;

private:
    OAIConfigNodePropertyInteger com_adobe_granite_jetty_ssl_port;
    bool m_com_adobe_granite_jetty_ssl_port_isSet;

    OAIConfigNodePropertyString com_adobe_granite_jetty_ssl_keystore_user;
    bool m_com_adobe_granite_jetty_ssl_keystore_user_isSet;

    OAIConfigNodePropertyString com_adobe_granite_jetty_ssl_keystore_password;
    bool m_com_adobe_granite_jetty_ssl_keystore_password_isSet;

    OAIConfigNodePropertyArray com_adobe_granite_jetty_ssl_ciphersuites_excluded;
    bool m_com_adobe_granite_jetty_ssl_ciphersuites_excluded_isSet;

    OAIConfigNodePropertyArray com_adobe_granite_jetty_ssl_ciphersuites_included;
    bool m_com_adobe_granite_jetty_ssl_ciphersuites_included_isSet;

    OAIConfigNodePropertyDropDown com_adobe_granite_jetty_ssl_client_certificate;
    bool m_com_adobe_granite_jetty_ssl_client_certificate_isSet;

};

}

#endif // OAIComAdobeGraniteJettySslInternalGraniteSslConnectorFactoryProperties_H
