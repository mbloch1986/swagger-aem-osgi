note
 description:"[
		Adobe Experience Manager OSGI config (AEM) API
 		Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
  		OpenAPI spec version: 1.0.0-pre.0
 	    Contact: opensource@shinesolutions.com

  	NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

 		 Do not edit the class manually.
 	]"
	date: "$Date$"
	revision: "$Revision$"
	EIS:"Eiffel openapi generator", "src=https://openapi-generator.tech", "protocol=uri"
class COM_DAY_CQ_JCRCLUSTERSUPPORT_CLUSTER_START_LEVEL_CONTROLLER_PROPERTIES 

inherit

  ANY
      redefine
          out 
      end


feature --Access

    cluster_level_enable: detachable CONFIG_NODE_PROPERTY_BOOLEAN 
      
    cluster_master_level: detachable CONFIG_NODE_PROPERTY_INTEGER 
      
    cluster_slave_level: detachable CONFIG_NODE_PROPERTY_INTEGER 
      

feature -- Change Element  
 
    set_cluster_level_enable (a_name: like cluster_level_enable)
        -- Set 'cluster_level_enable' with 'a_name'.
      do
        cluster_level_enable := a_name
      ensure
        cluster_level_enable_set: cluster_level_enable = a_name		
      end

    set_cluster_master_level (a_name: like cluster_master_level)
        -- Set 'cluster_master_level' with 'a_name'.
      do
        cluster_master_level := a_name
      ensure
        cluster_master_level_set: cluster_master_level = a_name		
      end

    set_cluster_slave_level (a_name: like cluster_slave_level)
        -- Set 'cluster_slave_level' with 'a_name'.
      do
        cluster_slave_level := a_name
      ensure
        cluster_slave_level_set: cluster_slave_level = a_name		
      end


 feature -- Status Report

    out: STRING
          -- <Precursor>
      do
        create Result.make_empty
        Result.append("%Nclass COM_DAY_CQ_JCRCLUSTERSUPPORT_CLUSTER_START_LEVEL_CONTROLLER_PROPERTIES%N")
        if attached cluster_level_enable as l_cluster_level_enable then
          Result.append ("%Ncluster_level_enable:")
          Result.append (l_cluster_level_enable.out)
          Result.append ("%N")    
        end  
        if attached cluster_master_level as l_cluster_master_level then
          Result.append ("%Ncluster_master_level:")
          Result.append (l_cluster_master_level.out)
          Result.append ("%N")    
        end  
        if attached cluster_slave_level as l_cluster_slave_level then
          Result.append ("%Ncluster_slave_level:")
          Result.append (l_cluster_slave_level.out)
          Result.append ("%N")    
        end  
      end
end


