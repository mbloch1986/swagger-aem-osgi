/**
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIComDayCqPollingImporterImplManagedPollConfigImplProperties.h
 *
 * 
 */

#ifndef OAIComDayCqPollingImporterImplManagedPollConfigImplProperties_H_
#define OAIComDayCqPollingImporterImplManagedPollConfigImplProperties_H_

#include <QJsonObject>


#include "OAIOAIConfigNodePropertyBoolean.h"
#include "OAIOAIConfigNodePropertyInteger.h"
#include "OAIOAIConfigNodePropertyString.h"

#include "OAIObject.h"

namespace OpenAPI {

class OAIComDayCqPollingImporterImplManagedPollConfigImplProperties: public OAIObject {
public:
    OAIComDayCqPollingImporterImplManagedPollConfigImplProperties();
    OAIComDayCqPollingImporterImplManagedPollConfigImplProperties(QString json);
    ~OAIComDayCqPollingImporterImplManagedPollConfigImplProperties();
    void init();
    void cleanup();

    QString asJson () override;
    QJsonObject asJsonObject() override;
    void fromJsonObject(QJsonObject json) override;
    OAIComDayCqPollingImporterImplManagedPollConfigImplProperties* fromJson(QString jsonString) override;

    OAIConfigNodePropertyString* getId();
    void setId(OAIConfigNodePropertyString* id);

    OAIConfigNodePropertyBoolean* getEnabled();
    void setEnabled(OAIConfigNodePropertyBoolean* enabled);

    OAIConfigNodePropertyBoolean* getReference();
    void setReference(OAIConfigNodePropertyBoolean* reference);

    OAIConfigNodePropertyInteger* getInterval();
    void setInterval(OAIConfigNodePropertyInteger* interval);

    OAIConfigNodePropertyString* getExpression();
    void setExpression(OAIConfigNodePropertyString* expression);

    OAIConfigNodePropertyString* getSource();
    void setSource(OAIConfigNodePropertyString* source);

    OAIConfigNodePropertyString* getTarget();
    void setTarget(OAIConfigNodePropertyString* target);

    OAIConfigNodePropertyString* getLogin();
    void setLogin(OAIConfigNodePropertyString* login);

    OAIConfigNodePropertyString* getPassword();
    void setPassword(OAIConfigNodePropertyString* password);


    virtual bool isSet() override;

private:
    OAIConfigNodePropertyString* id;
    bool m_id_isSet;

    OAIConfigNodePropertyBoolean* enabled;
    bool m_enabled_isSet;

    OAIConfigNodePropertyBoolean* reference;
    bool m_reference_isSet;

    OAIConfigNodePropertyInteger* interval;
    bool m_interval_isSet;

    OAIConfigNodePropertyString* expression;
    bool m_expression_isSet;

    OAIConfigNodePropertyString* source;
    bool m_source_isSet;

    OAIConfigNodePropertyString* target;
    bool m_target_isSet;

    OAIConfigNodePropertyString* login;
    bool m_login_isSet;

    OAIConfigNodePropertyString* password;
    bool m_password_isSet;

};

}

#endif /* OAIComDayCqPollingImporterImplManagedPollConfigImplProperties_H_ */
