# NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
# https://openapi-generator.tech
# Do not edit the class manually.

defmodule AdobeExperienceManagerOSGIConfig(AEM)API.Model.OrgApacheJackrabbitOakSecurityAuthenticationLdapImplLdapIdentiProperties do
  @moduledoc """
  
  """

  @derive [Poison.Encoder]
  defstruct [
    :"provider.name",
    :"host.name",
    :"host.port",
    :"host.ssl",
    :"host.tls",
    :"host.noCertCheck",
    :"bind.dn",
    :"bind.password",
    :"searchTimeout",
    :"adminPool.maxActive",
    :"adminPool.lookupOnValidate",
    :"userPool.maxActive",
    :"userPool.lookupOnValidate",
    :"user.baseDN",
    :"user.objectclass",
    :"user.idAttribute",
    :"user.extraFilter",
    :"user.makeDnPath",
    :"group.baseDN",
    :"group.objectclass",
    :"group.nameAttribute",
    :"group.extraFilter",
    :"group.makeDnPath",
    :"group.memberAttribute",
    :"useUidForExtId",
    :"customattributes"
  ]

  @type t :: %__MODULE__{
    :"provider.name" => ConfigNodePropertyString,
    :"host.name" => ConfigNodePropertyString,
    :"host.port" => ConfigNodePropertyInteger,
    :"host.ssl" => ConfigNodePropertyBoolean,
    :"host.tls" => ConfigNodePropertyBoolean,
    :"host.noCertCheck" => ConfigNodePropertyBoolean,
    :"bind.dn" => ConfigNodePropertyString,
    :"bind.password" => ConfigNodePropertyString,
    :"searchTimeout" => ConfigNodePropertyString,
    :"adminPool.maxActive" => ConfigNodePropertyInteger,
    :"adminPool.lookupOnValidate" => ConfigNodePropertyBoolean,
    :"userPool.maxActive" => ConfigNodePropertyInteger,
    :"userPool.lookupOnValidate" => ConfigNodePropertyBoolean,
    :"user.baseDN" => ConfigNodePropertyString,
    :"user.objectclass" => ConfigNodePropertyArray,
    :"user.idAttribute" => ConfigNodePropertyString,
    :"user.extraFilter" => ConfigNodePropertyString,
    :"user.makeDnPath" => ConfigNodePropertyBoolean,
    :"group.baseDN" => ConfigNodePropertyString,
    :"group.objectclass" => ConfigNodePropertyArray,
    :"group.nameAttribute" => ConfigNodePropertyString,
    :"group.extraFilter" => ConfigNodePropertyString,
    :"group.makeDnPath" => ConfigNodePropertyBoolean,
    :"group.memberAttribute" => ConfigNodePropertyString,
    :"useUidForExtId" => ConfigNodePropertyBoolean,
    :"customattributes" => ConfigNodePropertyArray
  }
end

defimpl Poison.Decoder, for: AdobeExperienceManagerOSGIConfig(AEM)API.Model.OrgApacheJackrabbitOakSecurityAuthenticationLdapImplLdapIdentiProperties do
  import AdobeExperienceManagerOSGIConfig(AEM)API.Deserializer
  def decode(value, options) do
    value
    |> deserialize(:"provider.name", :struct, AdobeExperienceManagerOSGIConfig(AEM)API.Model.ConfigNodePropertyString, options)
    |> deserialize(:"host.name", :struct, AdobeExperienceManagerOSGIConfig(AEM)API.Model.ConfigNodePropertyString, options)
    |> deserialize(:"host.port", :struct, AdobeExperienceManagerOSGIConfig(AEM)API.Model.ConfigNodePropertyInteger, options)
    |> deserialize(:"host.ssl", :struct, AdobeExperienceManagerOSGIConfig(AEM)API.Model.ConfigNodePropertyBoolean, options)
    |> deserialize(:"host.tls", :struct, AdobeExperienceManagerOSGIConfig(AEM)API.Model.ConfigNodePropertyBoolean, options)
    |> deserialize(:"host.noCertCheck", :struct, AdobeExperienceManagerOSGIConfig(AEM)API.Model.ConfigNodePropertyBoolean, options)
    |> deserialize(:"bind.dn", :struct, AdobeExperienceManagerOSGIConfig(AEM)API.Model.ConfigNodePropertyString, options)
    |> deserialize(:"bind.password", :struct, AdobeExperienceManagerOSGIConfig(AEM)API.Model.ConfigNodePropertyString, options)
    |> deserialize(:"searchTimeout", :struct, AdobeExperienceManagerOSGIConfig(AEM)API.Model.ConfigNodePropertyString, options)
    |> deserialize(:"adminPool.maxActive", :struct, AdobeExperienceManagerOSGIConfig(AEM)API.Model.ConfigNodePropertyInteger, options)
    |> deserialize(:"adminPool.lookupOnValidate", :struct, AdobeExperienceManagerOSGIConfig(AEM)API.Model.ConfigNodePropertyBoolean, options)
    |> deserialize(:"userPool.maxActive", :struct, AdobeExperienceManagerOSGIConfig(AEM)API.Model.ConfigNodePropertyInteger, options)
    |> deserialize(:"userPool.lookupOnValidate", :struct, AdobeExperienceManagerOSGIConfig(AEM)API.Model.ConfigNodePropertyBoolean, options)
    |> deserialize(:"user.baseDN", :struct, AdobeExperienceManagerOSGIConfig(AEM)API.Model.ConfigNodePropertyString, options)
    |> deserialize(:"user.objectclass", :struct, AdobeExperienceManagerOSGIConfig(AEM)API.Model.ConfigNodePropertyArray, options)
    |> deserialize(:"user.idAttribute", :struct, AdobeExperienceManagerOSGIConfig(AEM)API.Model.ConfigNodePropertyString, options)
    |> deserialize(:"user.extraFilter", :struct, AdobeExperienceManagerOSGIConfig(AEM)API.Model.ConfigNodePropertyString, options)
    |> deserialize(:"user.makeDnPath", :struct, AdobeExperienceManagerOSGIConfig(AEM)API.Model.ConfigNodePropertyBoolean, options)
    |> deserialize(:"group.baseDN", :struct, AdobeExperienceManagerOSGIConfig(AEM)API.Model.ConfigNodePropertyString, options)
    |> deserialize(:"group.objectclass", :struct, AdobeExperienceManagerOSGIConfig(AEM)API.Model.ConfigNodePropertyArray, options)
    |> deserialize(:"group.nameAttribute", :struct, AdobeExperienceManagerOSGIConfig(AEM)API.Model.ConfigNodePropertyString, options)
    |> deserialize(:"group.extraFilter", :struct, AdobeExperienceManagerOSGIConfig(AEM)API.Model.ConfigNodePropertyString, options)
    |> deserialize(:"group.makeDnPath", :struct, AdobeExperienceManagerOSGIConfig(AEM)API.Model.ConfigNodePropertyBoolean, options)
    |> deserialize(:"group.memberAttribute", :struct, AdobeExperienceManagerOSGIConfig(AEM)API.Model.ConfigNodePropertyString, options)
    |> deserialize(:"useUidForExtId", :struct, AdobeExperienceManagerOSGIConfig(AEM)API.Model.ConfigNodePropertyBoolean, options)
    |> deserialize(:"customattributes", :struct, AdobeExperienceManagerOSGIConfig(AEM)API.Model.ConfigNodePropertyArray, options)
  end
end

