note
 description:"[
		Adobe Experience Manager OSGI config (AEM) API
 		Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
  		OpenAPI spec version: 1.0.0-pre.0
 	    Contact: opensource@shinesolutions.com

  	NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

 		 Do not edit the class manually.
 	]"
	date: "$Date$"
	revision: "$Revision$"
	EIS:"Eiffel openapi generator", "src=https://openapi-generator.tech", "protocol=uri"
class ORG_APACHE_JACKRABBIT_OAK_SEGMENT_STANDBY_STORE_STANDBY_STORE_SERVICE_PROPERTIES 

inherit

  ANY
      redefine
          out 
      end


feature --Access

    org_apache_sling_installer_configuration_persist: detachable CONFIG_NODE_PROPERTY_BOOLEAN 
      
    mode: detachable CONFIG_NODE_PROPERTY_DROP_DOWN 
      
    port: detachable CONFIG_NODE_PROPERTY_INTEGER 
      
    primary_host: detachable CONFIG_NODE_PROPERTY_STRING 
      
    interval: detachable CONFIG_NODE_PROPERTY_INTEGER 
      
    primary_allowed_client_ip_ranges: detachable CONFIG_NODE_PROPERTY_ARRAY 
      
    secure: detachable CONFIG_NODE_PROPERTY_BOOLEAN 
      
    standby_readtimeout: detachable CONFIG_NODE_PROPERTY_INTEGER 
      
    standby_autoclean: detachable CONFIG_NODE_PROPERTY_BOOLEAN 
      

feature -- Change Element  
 
    set_org_apache_sling_installer_configuration_persist (a_name: like org_apache_sling_installer_configuration_persist)
        -- Set 'org_apache_sling_installer_configuration_persist' with 'a_name'.
      do
        org_apache_sling_installer_configuration_persist := a_name
      ensure
        org_apache_sling_installer_configuration_persist_set: org_apache_sling_installer_configuration_persist = a_name		
      end

    set_mode (a_name: like mode)
        -- Set 'mode' with 'a_name'.
      do
        mode := a_name
      ensure
        mode_set: mode = a_name		
      end

    set_port (a_name: like port)
        -- Set 'port' with 'a_name'.
      do
        port := a_name
      ensure
        port_set: port = a_name		
      end

    set_primary_host (a_name: like primary_host)
        -- Set 'primary_host' with 'a_name'.
      do
        primary_host := a_name
      ensure
        primary_host_set: primary_host = a_name		
      end

    set_interval (a_name: like interval)
        -- Set 'interval' with 'a_name'.
      do
        interval := a_name
      ensure
        interval_set: interval = a_name		
      end

    set_primary_allowed_client_ip_ranges (a_name: like primary_allowed_client_ip_ranges)
        -- Set 'primary_allowed_client_ip_ranges' with 'a_name'.
      do
        primary_allowed_client_ip_ranges := a_name
      ensure
        primary_allowed_client_ip_ranges_set: primary_allowed_client_ip_ranges = a_name		
      end

    set_secure (a_name: like secure)
        -- Set 'secure' with 'a_name'.
      do
        secure := a_name
      ensure
        secure_set: secure = a_name		
      end

    set_standby_readtimeout (a_name: like standby_readtimeout)
        -- Set 'standby_readtimeout' with 'a_name'.
      do
        standby_readtimeout := a_name
      ensure
        standby_readtimeout_set: standby_readtimeout = a_name		
      end

    set_standby_autoclean (a_name: like standby_autoclean)
        -- Set 'standby_autoclean' with 'a_name'.
      do
        standby_autoclean := a_name
      ensure
        standby_autoclean_set: standby_autoclean = a_name		
      end


 feature -- Status Report

    out: STRING
          -- <Precursor>
      do
        create Result.make_empty
        Result.append("%Nclass ORG_APACHE_JACKRABBIT_OAK_SEGMENT_STANDBY_STORE_STANDBY_STORE_SERVICE_PROPERTIES%N")
        if attached org_apache_sling_installer_configuration_persist as l_org_apache_sling_installer_configuration_persist then
          Result.append ("%Norg_apache_sling_installer_configuration_persist:")
          Result.append (l_org_apache_sling_installer_configuration_persist.out)
          Result.append ("%N")    
        end  
        if attached mode as l_mode then
          Result.append ("%Nmode:")
          Result.append (l_mode.out)
          Result.append ("%N")    
        end  
        if attached port as l_port then
          Result.append ("%Nport:")
          Result.append (l_port.out)
          Result.append ("%N")    
        end  
        if attached primary_host as l_primary_host then
          Result.append ("%Nprimary_host:")
          Result.append (l_primary_host.out)
          Result.append ("%N")    
        end  
        if attached interval as l_interval then
          Result.append ("%Ninterval:")
          Result.append (l_interval.out)
          Result.append ("%N")    
        end  
        if attached primary_allowed_client_ip_ranges as l_primary_allowed_client_ip_ranges then
          Result.append ("%Nprimary_allowed_client_ip_ranges:")
          Result.append (l_primary_allowed_client_ip_ranges.out)
          Result.append ("%N")    
        end  
        if attached secure as l_secure then
          Result.append ("%Nsecure:")
          Result.append (l_secure.out)
          Result.append ("%N")    
        end  
        if attached standby_readtimeout as l_standby_readtimeout then
          Result.append ("%Nstandby_readtimeout:")
          Result.append (l_standby_readtimeout.out)
          Result.append ("%N")    
        end  
        if attached standby_autoclean as l_standby_autoclean then
          Result.append ("%Nstandby_autoclean:")
          Result.append (l_standby_autoclean.out)
          Result.append ("%N")    
        end  
      end
end


