# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server.models.config_node_property_array import ConfigNodePropertyArray  # noqa: F401,E501
from openapi_server.models.config_node_property_string import ConfigNodePropertyString  # noqa: F401,E501
from openapi_server import util


class ComAdobeCqUpgradesCleanupImplUpgradeContentCleanupProperties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, delete_path_regexps: ConfigNodePropertyArray=None, delete_sql2_query: ConfigNodePropertyString=None):  # noqa: E501
        """ComAdobeCqUpgradesCleanupImplUpgradeContentCleanupProperties - a model defined in OpenAPI

        :param delete_path_regexps: The delete_path_regexps of this ComAdobeCqUpgradesCleanupImplUpgradeContentCleanupProperties.  # noqa: E501
        :type delete_path_regexps: ConfigNodePropertyArray
        :param delete_sql2_query: The delete_sql2_query of this ComAdobeCqUpgradesCleanupImplUpgradeContentCleanupProperties.  # noqa: E501
        :type delete_sql2_query: ConfigNodePropertyString
        """
        self.openapi_types = {
            'delete_path_regexps': ConfigNodePropertyArray,
            'delete_sql2_query': ConfigNodePropertyString
        }

        self.attribute_map = {
            'delete_path_regexps': 'delete.path.regexps',
            'delete_sql2_query': 'delete.sql2.query'
        }

        self._delete_path_regexps = delete_path_regexps
        self._delete_sql2_query = delete_sql2_query

    @classmethod
    def from_dict(cls, dikt) -> 'ComAdobeCqUpgradesCleanupImplUpgradeContentCleanupProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The comAdobeCqUpgradesCleanupImplUpgradeContentCleanupProperties of this ComAdobeCqUpgradesCleanupImplUpgradeContentCleanupProperties.  # noqa: E501
        :rtype: ComAdobeCqUpgradesCleanupImplUpgradeContentCleanupProperties
        """
        return util.deserialize_model(dikt, cls)

    @property
    def delete_path_regexps(self) -> ConfigNodePropertyArray:
        """Gets the delete_path_regexps of this ComAdobeCqUpgradesCleanupImplUpgradeContentCleanupProperties.


        :return: The delete_path_regexps of this ComAdobeCqUpgradesCleanupImplUpgradeContentCleanupProperties.
        :rtype: ConfigNodePropertyArray
        """
        return self._delete_path_regexps

    @delete_path_regexps.setter
    def delete_path_regexps(self, delete_path_regexps: ConfigNodePropertyArray):
        """Sets the delete_path_regexps of this ComAdobeCqUpgradesCleanupImplUpgradeContentCleanupProperties.


        :param delete_path_regexps: The delete_path_regexps of this ComAdobeCqUpgradesCleanupImplUpgradeContentCleanupProperties.
        :type delete_path_regexps: ConfigNodePropertyArray
        """

        self._delete_path_regexps = delete_path_regexps

    @property
    def delete_sql2_query(self) -> ConfigNodePropertyString:
        """Gets the delete_sql2_query of this ComAdobeCqUpgradesCleanupImplUpgradeContentCleanupProperties.


        :return: The delete_sql2_query of this ComAdobeCqUpgradesCleanupImplUpgradeContentCleanupProperties.
        :rtype: ConfigNodePropertyString
        """
        return self._delete_sql2_query

    @delete_sql2_query.setter
    def delete_sql2_query(self, delete_sql2_query: ConfigNodePropertyString):
        """Sets the delete_sql2_query of this ComAdobeCqUpgradesCleanupImplUpgradeContentCleanupProperties.


        :param delete_sql2_query: The delete_sql2_query of this ComAdobeCqUpgradesCleanupImplUpgradeContentCleanupProperties.
        :type delete_sql2_query: ConfigNodePropertyString
        """

        self._delete_sql2_query = delete_sql2_query
