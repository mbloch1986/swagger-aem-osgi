/*
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OAS-api/OAS-codegen.git
 * Do not edit the class manually.
 */

/**
 * OASOrgApacheSlingJcrWebdavImplServle
 */
public class OASOrgApacheSlingJcrWebdavImplServle implements OAS.MappedProperties {
    /**
     * Get davRoot
     * @return davRoot
     */
    public OASConfigNodePropertyString davRoot { get; set; }

    /**
     * Get davCreateAbsoluteUri
     * @return davCreateAbsoluteUri
     */
    public OASConfigNodePropertyBoolean davCreateAbsoluteUri { get; set; }

    /**
     * Get davRealm
     * @return davRealm
     */
    public OASConfigNodePropertyString davRealm { get; set; }

    /**
     * Get collectionTypes
     * @return collectionTypes
     */
    public OASConfigNodePropertyArray collectionTypes { get; set; }

    /**
     * Get filterPrefixes
     * @return filterPrefixes
     */
    public OASConfigNodePropertyArray filterPrefixes { get; set; }

    /**
     * Get filterTypes
     * @return filterTypes
     */
    public OASConfigNodePropertyString filterTypes { get; set; }

    /**
     * Get filterUris
     * @return filterUris
     */
    public OASConfigNodePropertyString filterUris { get; set; }

    /**
     * Get typeCollections
     * @return typeCollections
     */
    public OASConfigNodePropertyString typeCollections { get; set; }

    /**
     * Get typeNoncollections
     * @return typeNoncollections
     */
    public OASConfigNodePropertyString typeNoncollections { get; set; }

    /**
     * Get typeContent
     * @return typeContent
     */
    public OASConfigNodePropertyString typeContent { get; set; }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'dav.root' => 'davRoot',
        'dav.create-absolute-uri' => 'davCreateAbsoluteUri',
        'dav.realm' => 'davRealm',
        'collection.types' => 'collectionTypes',
        'filter.prefixes' => 'filterPrefixes',
        'filter.types' => 'filterTypes',
        'filter.uris' => 'filterUris',
        'type.collections' => 'typeCollections',
        'type.noncollections' => 'typeNoncollections',
        'type.content' => 'typeContent'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    public static OASOrgApacheSlingJcrWebdavImplServle getExample() {
        OASOrgApacheSlingJcrWebdavImplServle orgApacheSlingJcrWebdavImplServletsSimpleWebDavServletProperties = new OASOrgApacheSlingJcrWebdavImplServle();
          orgApacheSlingJcrWebdavImplServletsSimpleWebDavServletProperties.davRoot = OASConfigNodePropertyString.getExample();
          orgApacheSlingJcrWebdavImplServletsSimpleWebDavServletProperties.davCreateAbsoluteUri = OASConfigNodePropertyBoolean.getExample();
          orgApacheSlingJcrWebdavImplServletsSimpleWebDavServletProperties.davRealm = OASConfigNodePropertyString.getExample();
          orgApacheSlingJcrWebdavImplServletsSimpleWebDavServletProperties.collectionTypes = OASConfigNodePropertyArray.getExample();
          orgApacheSlingJcrWebdavImplServletsSimpleWebDavServletProperties.filterPrefixes = OASConfigNodePropertyArray.getExample();
          orgApacheSlingJcrWebdavImplServletsSimpleWebDavServletProperties.filterTypes = OASConfigNodePropertyString.getExample();
          orgApacheSlingJcrWebdavImplServletsSimpleWebDavServletProperties.filterUris = OASConfigNodePropertyString.getExample();
          orgApacheSlingJcrWebdavImplServletsSimpleWebDavServletProperties.typeCollections = OASConfigNodePropertyString.getExample();
          orgApacheSlingJcrWebdavImplServletsSimpleWebDavServletProperties.typeNoncollections = OASConfigNodePropertyString.getExample();
          orgApacheSlingJcrWebdavImplServletsSimpleWebDavServletProperties.typeContent = OASConfigNodePropertyString.getExample();
        return orgApacheSlingJcrWebdavImplServletsSimpleWebDavServletProperties;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof OASOrgApacheSlingJcrWebdavImplServle) {           
            OASOrgApacheSlingJcrWebdavImplServle orgApacheSlingJcrWebdavImplServletsSimpleWebDavServletProperties = (OASOrgApacheSlingJcrWebdavImplServle) obj;
            return this.davRoot == orgApacheSlingJcrWebdavImplServletsSimpleWebDavServletProperties.davRoot
                && this.davCreateAbsoluteUri == orgApacheSlingJcrWebdavImplServletsSimpleWebDavServletProperties.davCreateAbsoluteUri
                && this.davRealm == orgApacheSlingJcrWebdavImplServletsSimpleWebDavServletProperties.davRealm
                && this.collectionTypes == orgApacheSlingJcrWebdavImplServletsSimpleWebDavServletProperties.collectionTypes
                && this.filterPrefixes == orgApacheSlingJcrWebdavImplServletsSimpleWebDavServletProperties.filterPrefixes
                && this.filterTypes == orgApacheSlingJcrWebdavImplServletsSimpleWebDavServletProperties.filterTypes
                && this.filterUris == orgApacheSlingJcrWebdavImplServletsSimpleWebDavServletProperties.filterUris
                && this.typeCollections == orgApacheSlingJcrWebdavImplServletsSimpleWebDavServletProperties.typeCollections
                && this.typeNoncollections == orgApacheSlingJcrWebdavImplServletsSimpleWebDavServletProperties.typeNoncollections
                && this.typeContent == orgApacheSlingJcrWebdavImplServletsSimpleWebDavServletProperties.typeContent;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (davRoot == null ? 0 : System.hashCode(davRoot));
        hashCode = (17 * hashCode) + (davCreateAbsoluteUri == null ? 0 : System.hashCode(davCreateAbsoluteUri));
        hashCode = (17 * hashCode) + (davRealm == null ? 0 : System.hashCode(davRealm));
        hashCode = (17 * hashCode) + (collectionTypes == null ? 0 : System.hashCode(collectionTypes));
        hashCode = (17 * hashCode) + (filterPrefixes == null ? 0 : System.hashCode(filterPrefixes));
        hashCode = (17 * hashCode) + (filterTypes == null ? 0 : System.hashCode(filterTypes));
        hashCode = (17 * hashCode) + (filterUris == null ? 0 : System.hashCode(filterUris));
        hashCode = (17 * hashCode) + (typeCollections == null ? 0 : System.hashCode(typeCollections));
        hashCode = (17 * hashCode) + (typeNoncollections == null ? 0 : System.hashCode(typeNoncollections));
        hashCode = (17 * hashCode) + (typeContent == null ? 0 : System.hashCode(typeContent));
        return hashCode;
    }
}

