/**
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIComDayCqWcmCoreImplVersionPurgeTaskProperties.h
 *
 * 
 */

#ifndef OAIComDayCqWcmCoreImplVersionPurgeTaskProperties_H
#define OAIComDayCqWcmCoreImplVersionPurgeTaskProperties_H

#include <QJsonObject>


#include "OAIConfigNodePropertyArray.h"
#include "OAIConfigNodePropertyBoolean.h"
#include "OAIConfigNodePropertyInteger.h"

#include "OAIObject.h"

namespace OpenAPI {

class OAIComDayCqWcmCoreImplVersionPurgeTaskProperties: public OAIObject {
public:
    OAIComDayCqWcmCoreImplVersionPurgeTaskProperties();
    OAIComDayCqWcmCoreImplVersionPurgeTaskProperties(QString json);
    ~OAIComDayCqWcmCoreImplVersionPurgeTaskProperties() override;
    void init();

    QString asJson () const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIConfigNodePropertyArray getVersionpurgePaths() const;
    void setVersionpurgePaths(const OAIConfigNodePropertyArray &versionpurge_paths);

    OAIConfigNodePropertyBoolean getVersionpurgeRecursive() const;
    void setVersionpurgeRecursive(const OAIConfigNodePropertyBoolean &versionpurge_recursive);

    OAIConfigNodePropertyInteger getVersionpurgeMaxVersions() const;
    void setVersionpurgeMaxVersions(const OAIConfigNodePropertyInteger &versionpurge_max_versions);

    OAIConfigNodePropertyInteger getVersionpurgeMinVersions() const;
    void setVersionpurgeMinVersions(const OAIConfigNodePropertyInteger &versionpurge_min_versions);

    OAIConfigNodePropertyInteger getVersionpurgeMaxAgeDays() const;
    void setVersionpurgeMaxAgeDays(const OAIConfigNodePropertyInteger &versionpurge_max_age_days);

    virtual bool isSet() const override;

private:
    OAIConfigNodePropertyArray versionpurge_paths;
    bool m_versionpurge_paths_isSet;

    OAIConfigNodePropertyBoolean versionpurge_recursive;
    bool m_versionpurge_recursive_isSet;

    OAIConfigNodePropertyInteger versionpurge_max_versions;
    bool m_versionpurge_max_versions_isSet;

    OAIConfigNodePropertyInteger versionpurge_min_versions;
    bool m_versionpurge_min_versions_isSet;

    OAIConfigNodePropertyInteger versionpurge_max_age_days;
    bool m_versionpurge_max_age_days_isSet;

};

}

#endif // OAIComDayCqWcmCoreImplVersionPurgeTaskProperties_H
