/**
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


#include "OAIComDayCqWcmUndoUndoConfigProperties.h"

#include "OAIHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace OpenAPI {

OAIComDayCqWcmUndoUndoConfigProperties::OAIComDayCqWcmUndoUndoConfigProperties(QString json) {
    init();
    this->fromJson(json);
}

OAIComDayCqWcmUndoUndoConfigProperties::OAIComDayCqWcmUndoUndoConfigProperties() {
    init();
}

OAIComDayCqWcmUndoUndoConfigProperties::~OAIComDayCqWcmUndoUndoConfigProperties() {
    this->cleanup();
}

void
OAIComDayCqWcmUndoUndoConfigProperties::init() {
    cq_wcm_undo_enabled = new OAIConfigNodePropertyBoolean();
    m_cq_wcm_undo_enabled_isSet = false;
    cq_wcm_undo_path = new OAIConfigNodePropertyString();
    m_cq_wcm_undo_path_isSet = false;
    cq_wcm_undo_validity = new OAIConfigNodePropertyInteger();
    m_cq_wcm_undo_validity_isSet = false;
    cq_wcm_undo_steps = new OAIConfigNodePropertyInteger();
    m_cq_wcm_undo_steps_isSet = false;
    cq_wcm_undo_persistence = new OAIConfigNodePropertyString();
    m_cq_wcm_undo_persistence_isSet = false;
    cq_wcm_undo_persistence_mode = new OAIConfigNodePropertyBoolean();
    m_cq_wcm_undo_persistence_mode_isSet = false;
    cq_wcm_undo_markermode = new OAIConfigNodePropertyString();
    m_cq_wcm_undo_markermode_isSet = false;
    cq_wcm_undo_whitelist = new OAIConfigNodePropertyArray();
    m_cq_wcm_undo_whitelist_isSet = false;
    cq_wcm_undo_blacklist = new OAIConfigNodePropertyArray();
    m_cq_wcm_undo_blacklist_isSet = false;
}

void
OAIComDayCqWcmUndoUndoConfigProperties::cleanup() {
    if(cq_wcm_undo_enabled != nullptr) { 
        delete cq_wcm_undo_enabled;
    }
    if(cq_wcm_undo_path != nullptr) { 
        delete cq_wcm_undo_path;
    }
    if(cq_wcm_undo_validity != nullptr) { 
        delete cq_wcm_undo_validity;
    }
    if(cq_wcm_undo_steps != nullptr) { 
        delete cq_wcm_undo_steps;
    }
    if(cq_wcm_undo_persistence != nullptr) { 
        delete cq_wcm_undo_persistence;
    }
    if(cq_wcm_undo_persistence_mode != nullptr) { 
        delete cq_wcm_undo_persistence_mode;
    }
    if(cq_wcm_undo_markermode != nullptr) { 
        delete cq_wcm_undo_markermode;
    }
    if(cq_wcm_undo_whitelist != nullptr) { 
        delete cq_wcm_undo_whitelist;
    }
    if(cq_wcm_undo_blacklist != nullptr) { 
        delete cq_wcm_undo_blacklist;
    }
}

OAIComDayCqWcmUndoUndoConfigProperties*
OAIComDayCqWcmUndoUndoConfigProperties::fromJson(QString json) {
    QByteArray array (json.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
    return this;
}

void
OAIComDayCqWcmUndoUndoConfigProperties::fromJsonObject(QJsonObject pJson) {
    ::OpenAPI::setValue(&cq_wcm_undo_enabled, pJson["cq.wcm.undo.enabled"], "OAIConfigNodePropertyBoolean", "OAIConfigNodePropertyBoolean");
    
    ::OpenAPI::setValue(&cq_wcm_undo_path, pJson["cq.wcm.undo.path"], "OAIConfigNodePropertyString", "OAIConfigNodePropertyString");
    
    ::OpenAPI::setValue(&cq_wcm_undo_validity, pJson["cq.wcm.undo.validity"], "OAIConfigNodePropertyInteger", "OAIConfigNodePropertyInteger");
    
    ::OpenAPI::setValue(&cq_wcm_undo_steps, pJson["cq.wcm.undo.steps"], "OAIConfigNodePropertyInteger", "OAIConfigNodePropertyInteger");
    
    ::OpenAPI::setValue(&cq_wcm_undo_persistence, pJson["cq.wcm.undo.persistence"], "OAIConfigNodePropertyString", "OAIConfigNodePropertyString");
    
    ::OpenAPI::setValue(&cq_wcm_undo_persistence_mode, pJson["cq.wcm.undo.persistence.mode"], "OAIConfigNodePropertyBoolean", "OAIConfigNodePropertyBoolean");
    
    ::OpenAPI::setValue(&cq_wcm_undo_markermode, pJson["cq.wcm.undo.markermode"], "OAIConfigNodePropertyString", "OAIConfigNodePropertyString");
    
    ::OpenAPI::setValue(&cq_wcm_undo_whitelist, pJson["cq.wcm.undo.whitelist"], "OAIConfigNodePropertyArray", "OAIConfigNodePropertyArray");
    
    ::OpenAPI::setValue(&cq_wcm_undo_blacklist, pJson["cq.wcm.undo.blacklist"], "OAIConfigNodePropertyArray", "OAIConfigNodePropertyArray");
    
}

QString
OAIComDayCqWcmUndoUndoConfigProperties::asJson ()
{
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject
OAIComDayCqWcmUndoUndoConfigProperties::asJsonObject() {
    QJsonObject obj;
    if((cq_wcm_undo_enabled != nullptr) && (cq_wcm_undo_enabled->isSet())){
        toJsonValue(QString("cq.wcm.undo.enabled"), cq_wcm_undo_enabled, obj, QString("OAIConfigNodePropertyBoolean"));
    }
    if((cq_wcm_undo_path != nullptr) && (cq_wcm_undo_path->isSet())){
        toJsonValue(QString("cq.wcm.undo.path"), cq_wcm_undo_path, obj, QString("OAIConfigNodePropertyString"));
    }
    if((cq_wcm_undo_validity != nullptr) && (cq_wcm_undo_validity->isSet())){
        toJsonValue(QString("cq.wcm.undo.validity"), cq_wcm_undo_validity, obj, QString("OAIConfigNodePropertyInteger"));
    }
    if((cq_wcm_undo_steps != nullptr) && (cq_wcm_undo_steps->isSet())){
        toJsonValue(QString("cq.wcm.undo.steps"), cq_wcm_undo_steps, obj, QString("OAIConfigNodePropertyInteger"));
    }
    if((cq_wcm_undo_persistence != nullptr) && (cq_wcm_undo_persistence->isSet())){
        toJsonValue(QString("cq.wcm.undo.persistence"), cq_wcm_undo_persistence, obj, QString("OAIConfigNodePropertyString"));
    }
    if((cq_wcm_undo_persistence_mode != nullptr) && (cq_wcm_undo_persistence_mode->isSet())){
        toJsonValue(QString("cq.wcm.undo.persistence.mode"), cq_wcm_undo_persistence_mode, obj, QString("OAIConfigNodePropertyBoolean"));
    }
    if((cq_wcm_undo_markermode != nullptr) && (cq_wcm_undo_markermode->isSet())){
        toJsonValue(QString("cq.wcm.undo.markermode"), cq_wcm_undo_markermode, obj, QString("OAIConfigNodePropertyString"));
    }
    if((cq_wcm_undo_whitelist != nullptr) && (cq_wcm_undo_whitelist->isSet())){
        toJsonValue(QString("cq.wcm.undo.whitelist"), cq_wcm_undo_whitelist, obj, QString("OAIConfigNodePropertyArray"));
    }
    if((cq_wcm_undo_blacklist != nullptr) && (cq_wcm_undo_blacklist->isSet())){
        toJsonValue(QString("cq.wcm.undo.blacklist"), cq_wcm_undo_blacklist, obj, QString("OAIConfigNodePropertyArray"));
    }

    return obj;
}

OAIConfigNodePropertyBoolean*
OAIComDayCqWcmUndoUndoConfigProperties::getCqWcmUndoEnabled() {
    return cq_wcm_undo_enabled;
}
void
OAIComDayCqWcmUndoUndoConfigProperties::setCqWcmUndoEnabled(OAIConfigNodePropertyBoolean* cq_wcm_undo_enabled) {
    this->cq_wcm_undo_enabled = cq_wcm_undo_enabled;
    this->m_cq_wcm_undo_enabled_isSet = true;
}

OAIConfigNodePropertyString*
OAIComDayCqWcmUndoUndoConfigProperties::getCqWcmUndoPath() {
    return cq_wcm_undo_path;
}
void
OAIComDayCqWcmUndoUndoConfigProperties::setCqWcmUndoPath(OAIConfigNodePropertyString* cq_wcm_undo_path) {
    this->cq_wcm_undo_path = cq_wcm_undo_path;
    this->m_cq_wcm_undo_path_isSet = true;
}

OAIConfigNodePropertyInteger*
OAIComDayCqWcmUndoUndoConfigProperties::getCqWcmUndoValidity() {
    return cq_wcm_undo_validity;
}
void
OAIComDayCqWcmUndoUndoConfigProperties::setCqWcmUndoValidity(OAIConfigNodePropertyInteger* cq_wcm_undo_validity) {
    this->cq_wcm_undo_validity = cq_wcm_undo_validity;
    this->m_cq_wcm_undo_validity_isSet = true;
}

OAIConfigNodePropertyInteger*
OAIComDayCqWcmUndoUndoConfigProperties::getCqWcmUndoSteps() {
    return cq_wcm_undo_steps;
}
void
OAIComDayCqWcmUndoUndoConfigProperties::setCqWcmUndoSteps(OAIConfigNodePropertyInteger* cq_wcm_undo_steps) {
    this->cq_wcm_undo_steps = cq_wcm_undo_steps;
    this->m_cq_wcm_undo_steps_isSet = true;
}

OAIConfigNodePropertyString*
OAIComDayCqWcmUndoUndoConfigProperties::getCqWcmUndoPersistence() {
    return cq_wcm_undo_persistence;
}
void
OAIComDayCqWcmUndoUndoConfigProperties::setCqWcmUndoPersistence(OAIConfigNodePropertyString* cq_wcm_undo_persistence) {
    this->cq_wcm_undo_persistence = cq_wcm_undo_persistence;
    this->m_cq_wcm_undo_persistence_isSet = true;
}

OAIConfigNodePropertyBoolean*
OAIComDayCqWcmUndoUndoConfigProperties::getCqWcmUndoPersistenceMode() {
    return cq_wcm_undo_persistence_mode;
}
void
OAIComDayCqWcmUndoUndoConfigProperties::setCqWcmUndoPersistenceMode(OAIConfigNodePropertyBoolean* cq_wcm_undo_persistence_mode) {
    this->cq_wcm_undo_persistence_mode = cq_wcm_undo_persistence_mode;
    this->m_cq_wcm_undo_persistence_mode_isSet = true;
}

OAIConfigNodePropertyString*
OAIComDayCqWcmUndoUndoConfigProperties::getCqWcmUndoMarkermode() {
    return cq_wcm_undo_markermode;
}
void
OAIComDayCqWcmUndoUndoConfigProperties::setCqWcmUndoMarkermode(OAIConfigNodePropertyString* cq_wcm_undo_markermode) {
    this->cq_wcm_undo_markermode = cq_wcm_undo_markermode;
    this->m_cq_wcm_undo_markermode_isSet = true;
}

OAIConfigNodePropertyArray*
OAIComDayCqWcmUndoUndoConfigProperties::getCqWcmUndoWhitelist() {
    return cq_wcm_undo_whitelist;
}
void
OAIComDayCqWcmUndoUndoConfigProperties::setCqWcmUndoWhitelist(OAIConfigNodePropertyArray* cq_wcm_undo_whitelist) {
    this->cq_wcm_undo_whitelist = cq_wcm_undo_whitelist;
    this->m_cq_wcm_undo_whitelist_isSet = true;
}

OAIConfigNodePropertyArray*
OAIComDayCqWcmUndoUndoConfigProperties::getCqWcmUndoBlacklist() {
    return cq_wcm_undo_blacklist;
}
void
OAIComDayCqWcmUndoUndoConfigProperties::setCqWcmUndoBlacklist(OAIConfigNodePropertyArray* cq_wcm_undo_blacklist) {
    this->cq_wcm_undo_blacklist = cq_wcm_undo_blacklist;
    this->m_cq_wcm_undo_blacklist_isSet = true;
}


bool
OAIComDayCqWcmUndoUndoConfigProperties::isSet(){
    bool isObjectUpdated = false;
    do{
        if(cq_wcm_undo_enabled != nullptr && cq_wcm_undo_enabled->isSet()){ isObjectUpdated = true; break;}
        if(cq_wcm_undo_path != nullptr && cq_wcm_undo_path->isSet()){ isObjectUpdated = true; break;}
        if(cq_wcm_undo_validity != nullptr && cq_wcm_undo_validity->isSet()){ isObjectUpdated = true; break;}
        if(cq_wcm_undo_steps != nullptr && cq_wcm_undo_steps->isSet()){ isObjectUpdated = true; break;}
        if(cq_wcm_undo_persistence != nullptr && cq_wcm_undo_persistence->isSet()){ isObjectUpdated = true; break;}
        if(cq_wcm_undo_persistence_mode != nullptr && cq_wcm_undo_persistence_mode->isSet()){ isObjectUpdated = true; break;}
        if(cq_wcm_undo_markermode != nullptr && cq_wcm_undo_markermode->isSet()){ isObjectUpdated = true; break;}
        if(cq_wcm_undo_whitelist != nullptr && cq_wcm_undo_whitelist->isSet()){ isObjectUpdated = true; break;}
        if(cq_wcm_undo_blacklist != nullptr && cq_wcm_undo_blacklist->isSet()){ isObjectUpdated = true; break;}
    }while(false);
    return isObjectUpdated;
}
}

