/**
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 3.2.1-SNAPSHOT.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */



#include "ComDayCqWcmMsmImplActionsReferencesUpdateActionFactoryProperties.h"

namespace org {
namespace openapitools {
namespace client {
namespace model {

ComDayCqWcmMsmImplActionsReferencesUpdateActionFactoryProperties::ComDayCqWcmMsmImplActionsReferencesUpdateActionFactoryProperties()
{
    m_Cq_wcm_msm_action_excludednodetypesIsSet = false;
    m_Cq_wcm_msm_action_excludedparagraphitemsIsSet = false;
    m_Cq_wcm_msm_action_excludedpropsIsSet = false;
    m_Cq_wcm_msm_impl_action_referencesupdate_prop_updateNestedIsSet = false;
}

ComDayCqWcmMsmImplActionsReferencesUpdateActionFactoryProperties::~ComDayCqWcmMsmImplActionsReferencesUpdateActionFactoryProperties()
{
}

void ComDayCqWcmMsmImplActionsReferencesUpdateActionFactoryProperties::validate()
{
    // TODO: implement validation
}

web::json::value ComDayCqWcmMsmImplActionsReferencesUpdateActionFactoryProperties::toJson() const
{
    web::json::value val = web::json::value::object();

    if(m_Cq_wcm_msm_action_excludednodetypesIsSet)
    {
        val[utility::conversions::to_string_t("cq.wcm.msm.action.excludednodetypes")] = ModelBase::toJson(m_Cq_wcm_msm_action_excludednodetypes);
    }
    if(m_Cq_wcm_msm_action_excludedparagraphitemsIsSet)
    {
        val[utility::conversions::to_string_t("cq.wcm.msm.action.excludedparagraphitems")] = ModelBase::toJson(m_Cq_wcm_msm_action_excludedparagraphitems);
    }
    if(m_Cq_wcm_msm_action_excludedpropsIsSet)
    {
        val[utility::conversions::to_string_t("cq.wcm.msm.action.excludedprops")] = ModelBase::toJson(m_Cq_wcm_msm_action_excludedprops);
    }
    if(m_Cq_wcm_msm_impl_action_referencesupdate_prop_updateNestedIsSet)
    {
        val[utility::conversions::to_string_t("cq.wcm.msm.impl.action.referencesupdate.prop_updateNested")] = ModelBase::toJson(m_Cq_wcm_msm_impl_action_referencesupdate_prop_updateNested);
    }

    return val;
}

void ComDayCqWcmMsmImplActionsReferencesUpdateActionFactoryProperties::fromJson(web::json::value& val)
{
    if(val.has_field(utility::conversions::to_string_t("cq.wcm.msm.action.excludednodetypes")))
    {
        if(!val[utility::conversions::to_string_t("cq.wcm.msm.action.excludednodetypes")].is_null())
        {
            std::shared_ptr<ConfigNodePropertyArray> newItem(new ConfigNodePropertyArray());
            newItem->fromJson(val[utility::conversions::to_string_t("cq.wcm.msm.action.excludednodetypes")]);
            setCqWcmMsmActionExcludednodetypes( newItem );
        }
    }
    if(val.has_field(utility::conversions::to_string_t("cq.wcm.msm.action.excludedparagraphitems")))
    {
        if(!val[utility::conversions::to_string_t("cq.wcm.msm.action.excludedparagraphitems")].is_null())
        {
            std::shared_ptr<ConfigNodePropertyArray> newItem(new ConfigNodePropertyArray());
            newItem->fromJson(val[utility::conversions::to_string_t("cq.wcm.msm.action.excludedparagraphitems")]);
            setCqWcmMsmActionExcludedparagraphitems( newItem );
        }
    }
    if(val.has_field(utility::conversions::to_string_t("cq.wcm.msm.action.excludedprops")))
    {
        if(!val[utility::conversions::to_string_t("cq.wcm.msm.action.excludedprops")].is_null())
        {
            std::shared_ptr<ConfigNodePropertyArray> newItem(new ConfigNodePropertyArray());
            newItem->fromJson(val[utility::conversions::to_string_t("cq.wcm.msm.action.excludedprops")]);
            setCqWcmMsmActionExcludedprops( newItem );
        }
    }
    if(val.has_field(utility::conversions::to_string_t("cq.wcm.msm.impl.action.referencesupdate.prop_updateNested")))
    {
        if(!val[utility::conversions::to_string_t("cq.wcm.msm.impl.action.referencesupdate.prop_updateNested")].is_null())
        {
            std::shared_ptr<ConfigNodePropertyBoolean> newItem(new ConfigNodePropertyBoolean());
            newItem->fromJson(val[utility::conversions::to_string_t("cq.wcm.msm.impl.action.referencesupdate.prop_updateNested")]);
            setCqWcmMsmImplActionReferencesupdatePropUpdateNested( newItem );
        }
    }
}

void ComDayCqWcmMsmImplActionsReferencesUpdateActionFactoryProperties::toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& prefix) const
{
    utility::string_t namePrefix = prefix;
    if(namePrefix.size() > 0 && namePrefix.substr(namePrefix.size() - 1) != utility::conversions::to_string_t("."))
    {
        namePrefix += utility::conversions::to_string_t(".");
    }

    if(m_Cq_wcm_msm_action_excludednodetypesIsSet)
    {
        if (m_Cq_wcm_msm_action_excludednodetypes.get())
        {
            m_Cq_wcm_msm_action_excludednodetypes->toMultipart(multipart, utility::conversions::to_string_t("cq.wcm.msm.action.excludednodetypes."));
        }
    }
    if(m_Cq_wcm_msm_action_excludedparagraphitemsIsSet)
    {
        if (m_Cq_wcm_msm_action_excludedparagraphitems.get())
        {
            m_Cq_wcm_msm_action_excludedparagraphitems->toMultipart(multipart, utility::conversions::to_string_t("cq.wcm.msm.action.excludedparagraphitems."));
        }
    }
    if(m_Cq_wcm_msm_action_excludedpropsIsSet)
    {
        if (m_Cq_wcm_msm_action_excludedprops.get())
        {
            m_Cq_wcm_msm_action_excludedprops->toMultipart(multipart, utility::conversions::to_string_t("cq.wcm.msm.action.excludedprops."));
        }
    }
    if(m_Cq_wcm_msm_impl_action_referencesupdate_prop_updateNestedIsSet)
    {
        if (m_Cq_wcm_msm_impl_action_referencesupdate_prop_updateNested.get())
        {
            m_Cq_wcm_msm_impl_action_referencesupdate_prop_updateNested->toMultipart(multipart, utility::conversions::to_string_t("cq.wcm.msm.impl.action.referencesupdate.prop_updateNested."));
        }
    }
}

void ComDayCqWcmMsmImplActionsReferencesUpdateActionFactoryProperties::fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& prefix)
{
    utility::string_t namePrefix = prefix;
    if(namePrefix.size() > 0 && namePrefix.substr(namePrefix.size() - 1) != utility::conversions::to_string_t("."))
    {
        namePrefix += utility::conversions::to_string_t(".");
    }

    if(multipart->hasContent(utility::conversions::to_string_t("cq.wcm.msm.action.excludednodetypes")))
    {
        if(multipart->hasContent(utility::conversions::to_string_t("cq.wcm.msm.action.excludednodetypes")))
        {
            std::shared_ptr<ConfigNodePropertyArray> newItem(new ConfigNodePropertyArray());
            newItem->fromMultiPart(multipart, utility::conversions::to_string_t("cq.wcm.msm.action.excludednodetypes."));
            setCqWcmMsmActionExcludednodetypes( newItem );
        }
    }
    if(multipart->hasContent(utility::conversions::to_string_t("cq.wcm.msm.action.excludedparagraphitems")))
    {
        if(multipart->hasContent(utility::conversions::to_string_t("cq.wcm.msm.action.excludedparagraphitems")))
        {
            std::shared_ptr<ConfigNodePropertyArray> newItem(new ConfigNodePropertyArray());
            newItem->fromMultiPart(multipart, utility::conversions::to_string_t("cq.wcm.msm.action.excludedparagraphitems."));
            setCqWcmMsmActionExcludedparagraphitems( newItem );
        }
    }
    if(multipart->hasContent(utility::conversions::to_string_t("cq.wcm.msm.action.excludedprops")))
    {
        if(multipart->hasContent(utility::conversions::to_string_t("cq.wcm.msm.action.excludedprops")))
        {
            std::shared_ptr<ConfigNodePropertyArray> newItem(new ConfigNodePropertyArray());
            newItem->fromMultiPart(multipart, utility::conversions::to_string_t("cq.wcm.msm.action.excludedprops."));
            setCqWcmMsmActionExcludedprops( newItem );
        }
    }
    if(multipart->hasContent(utility::conversions::to_string_t("cq.wcm.msm.impl.action.referencesupdate.prop_updateNested")))
    {
        if(multipart->hasContent(utility::conversions::to_string_t("cq.wcm.msm.impl.action.referencesupdate.prop_updateNested")))
        {
            std::shared_ptr<ConfigNodePropertyBoolean> newItem(new ConfigNodePropertyBoolean());
            newItem->fromMultiPart(multipart, utility::conversions::to_string_t("cq.wcm.msm.impl.action.referencesupdate.prop_updateNested."));
            setCqWcmMsmImplActionReferencesupdatePropUpdateNested( newItem );
        }
    }
}

std::shared_ptr<ConfigNodePropertyArray> ComDayCqWcmMsmImplActionsReferencesUpdateActionFactoryProperties::getCqWcmMsmActionExcludednodetypes() const
{
    return m_Cq_wcm_msm_action_excludednodetypes;
}


void ComDayCqWcmMsmImplActionsReferencesUpdateActionFactoryProperties::setCqWcmMsmActionExcludednodetypes(std::shared_ptr<ConfigNodePropertyArray> value)
{
    m_Cq_wcm_msm_action_excludednodetypes = value;
    m_Cq_wcm_msm_action_excludednodetypesIsSet = true;
}
bool ComDayCqWcmMsmImplActionsReferencesUpdateActionFactoryProperties::cqWcmMsmActionExcludednodetypesIsSet() const
{
    return m_Cq_wcm_msm_action_excludednodetypesIsSet;
}

void ComDayCqWcmMsmImplActionsReferencesUpdateActionFactoryProperties::unsetCq_wcm_msm_action_excludednodetypes()
{
    m_Cq_wcm_msm_action_excludednodetypesIsSet = false;
}

std::shared_ptr<ConfigNodePropertyArray> ComDayCqWcmMsmImplActionsReferencesUpdateActionFactoryProperties::getCqWcmMsmActionExcludedparagraphitems() const
{
    return m_Cq_wcm_msm_action_excludedparagraphitems;
}


void ComDayCqWcmMsmImplActionsReferencesUpdateActionFactoryProperties::setCqWcmMsmActionExcludedparagraphitems(std::shared_ptr<ConfigNodePropertyArray> value)
{
    m_Cq_wcm_msm_action_excludedparagraphitems = value;
    m_Cq_wcm_msm_action_excludedparagraphitemsIsSet = true;
}
bool ComDayCqWcmMsmImplActionsReferencesUpdateActionFactoryProperties::cqWcmMsmActionExcludedparagraphitemsIsSet() const
{
    return m_Cq_wcm_msm_action_excludedparagraphitemsIsSet;
}

void ComDayCqWcmMsmImplActionsReferencesUpdateActionFactoryProperties::unsetCq_wcm_msm_action_excludedparagraphitems()
{
    m_Cq_wcm_msm_action_excludedparagraphitemsIsSet = false;
}

std::shared_ptr<ConfigNodePropertyArray> ComDayCqWcmMsmImplActionsReferencesUpdateActionFactoryProperties::getCqWcmMsmActionExcludedprops() const
{
    return m_Cq_wcm_msm_action_excludedprops;
}


void ComDayCqWcmMsmImplActionsReferencesUpdateActionFactoryProperties::setCqWcmMsmActionExcludedprops(std::shared_ptr<ConfigNodePropertyArray> value)
{
    m_Cq_wcm_msm_action_excludedprops = value;
    m_Cq_wcm_msm_action_excludedpropsIsSet = true;
}
bool ComDayCqWcmMsmImplActionsReferencesUpdateActionFactoryProperties::cqWcmMsmActionExcludedpropsIsSet() const
{
    return m_Cq_wcm_msm_action_excludedpropsIsSet;
}

void ComDayCqWcmMsmImplActionsReferencesUpdateActionFactoryProperties::unsetCq_wcm_msm_action_excludedprops()
{
    m_Cq_wcm_msm_action_excludedpropsIsSet = false;
}

std::shared_ptr<ConfigNodePropertyBoolean> ComDayCqWcmMsmImplActionsReferencesUpdateActionFactoryProperties::getCqWcmMsmImplActionReferencesupdatePropUpdateNested() const
{
    return m_Cq_wcm_msm_impl_action_referencesupdate_prop_updateNested;
}


void ComDayCqWcmMsmImplActionsReferencesUpdateActionFactoryProperties::setCqWcmMsmImplActionReferencesupdatePropUpdateNested(std::shared_ptr<ConfigNodePropertyBoolean> value)
{
    m_Cq_wcm_msm_impl_action_referencesupdate_prop_updateNested = value;
    m_Cq_wcm_msm_impl_action_referencesupdate_prop_updateNestedIsSet = true;
}
bool ComDayCqWcmMsmImplActionsReferencesUpdateActionFactoryProperties::cqWcmMsmImplActionReferencesupdatePropUpdateNestedIsSet() const
{
    return m_Cq_wcm_msm_impl_action_referencesupdate_prop_updateNestedIsSet;
}

void ComDayCqWcmMsmImplActionsReferencesUpdateActionFactoryProperties::unsetCq_wcm_msm_impl_action_referencesupdate_prop_updateNested()
{
    m_Cq_wcm_msm_impl_action_referencesupdate_prop_updateNestedIsSet = false;
}

}
}
}
}

