/**
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.client.model;

import org.openapitools.client.model.ConfigNodePropertyArray;
import org.openapitools.client.model.ConfigNodePropertyBoolean;
import org.openapitools.client.model.ConfigNodePropertyDropDown;
import org.openapitools.client.model.ConfigNodePropertyInteger;
import org.openapitools.client.model.ConfigNodePropertyString;
import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

@ApiModel(description = "")
public class OrgApacheSlingDatasourceDataSourceFactoryProperties {
  
  @SerializedName("datasource.name")
  private ConfigNodePropertyString datasourceName = null;
  @SerializedName("datasource.svc.prop.name")
  private ConfigNodePropertyString datasourceSvcPropName = null;
  @SerializedName("driverClassName")
  private ConfigNodePropertyString driverClassName = null;
  @SerializedName("url")
  private ConfigNodePropertyString url = null;
  @SerializedName("username")
  private ConfigNodePropertyString username = null;
  @SerializedName("password")
  private ConfigNodePropertyString password = null;
  @SerializedName("defaultAutoCommit")
  private ConfigNodePropertyDropDown defaultAutoCommit = null;
  @SerializedName("defaultReadOnly")
  private ConfigNodePropertyDropDown defaultReadOnly = null;
  @SerializedName("defaultTransactionIsolation")
  private ConfigNodePropertyDropDown defaultTransactionIsolation = null;
  @SerializedName("defaultCatalog")
  private ConfigNodePropertyString defaultCatalog = null;
  @SerializedName("maxActive")
  private ConfigNodePropertyInteger maxActive = null;
  @SerializedName("maxIdle")
  private ConfigNodePropertyInteger maxIdle = null;
  @SerializedName("minIdle")
  private ConfigNodePropertyInteger minIdle = null;
  @SerializedName("initialSize")
  private ConfigNodePropertyInteger initialSize = null;
  @SerializedName("maxWait")
  private ConfigNodePropertyInteger maxWait = null;
  @SerializedName("maxAge")
  private ConfigNodePropertyInteger maxAge = null;
  @SerializedName("testOnBorrow")
  private ConfigNodePropertyBoolean testOnBorrow = null;
  @SerializedName("testOnReturn")
  private ConfigNodePropertyBoolean testOnReturn = null;
  @SerializedName("testWhileIdle")
  private ConfigNodePropertyBoolean testWhileIdle = null;
  @SerializedName("validationQuery")
  private ConfigNodePropertyString validationQuery = null;
  @SerializedName("validationQueryTimeout")
  private ConfigNodePropertyInteger validationQueryTimeout = null;
  @SerializedName("timeBetweenEvictionRunsMillis")
  private ConfigNodePropertyInteger timeBetweenEvictionRunsMillis = null;
  @SerializedName("minEvictableIdleTimeMillis")
  private ConfigNodePropertyInteger minEvictableIdleTimeMillis = null;
  @SerializedName("connectionProperties")
  private ConfigNodePropertyString connectionProperties = null;
  @SerializedName("initSQL")
  private ConfigNodePropertyString initSQL = null;
  @SerializedName("jdbcInterceptors")
  private ConfigNodePropertyString jdbcInterceptors = null;
  @SerializedName("validationInterval")
  private ConfigNodePropertyInteger validationInterval = null;
  @SerializedName("logValidationErrors")
  private ConfigNodePropertyBoolean logValidationErrors = null;
  @SerializedName("datasource.svc.properties")
  private ConfigNodePropertyArray datasourceSvcProperties = null;

  /**
   **/
  @ApiModelProperty(value = "")
  public ConfigNodePropertyString getDatasourceName() {
    return datasourceName;
  }
  public void setDatasourceName(ConfigNodePropertyString datasourceName) {
    this.datasourceName = datasourceName;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public ConfigNodePropertyString getDatasourceSvcPropName() {
    return datasourceSvcPropName;
  }
  public void setDatasourceSvcPropName(ConfigNodePropertyString datasourceSvcPropName) {
    this.datasourceSvcPropName = datasourceSvcPropName;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public ConfigNodePropertyString getDriverClassName() {
    return driverClassName;
  }
  public void setDriverClassName(ConfigNodePropertyString driverClassName) {
    this.driverClassName = driverClassName;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public ConfigNodePropertyString getUrl() {
    return url;
  }
  public void setUrl(ConfigNodePropertyString url) {
    this.url = url;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public ConfigNodePropertyString getUsername() {
    return username;
  }
  public void setUsername(ConfigNodePropertyString username) {
    this.username = username;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public ConfigNodePropertyString getPassword() {
    return password;
  }
  public void setPassword(ConfigNodePropertyString password) {
    this.password = password;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public ConfigNodePropertyDropDown getDefaultAutoCommit() {
    return defaultAutoCommit;
  }
  public void setDefaultAutoCommit(ConfigNodePropertyDropDown defaultAutoCommit) {
    this.defaultAutoCommit = defaultAutoCommit;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public ConfigNodePropertyDropDown getDefaultReadOnly() {
    return defaultReadOnly;
  }
  public void setDefaultReadOnly(ConfigNodePropertyDropDown defaultReadOnly) {
    this.defaultReadOnly = defaultReadOnly;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public ConfigNodePropertyDropDown getDefaultTransactionIsolation() {
    return defaultTransactionIsolation;
  }
  public void setDefaultTransactionIsolation(ConfigNodePropertyDropDown defaultTransactionIsolation) {
    this.defaultTransactionIsolation = defaultTransactionIsolation;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public ConfigNodePropertyString getDefaultCatalog() {
    return defaultCatalog;
  }
  public void setDefaultCatalog(ConfigNodePropertyString defaultCatalog) {
    this.defaultCatalog = defaultCatalog;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public ConfigNodePropertyInteger getMaxActive() {
    return maxActive;
  }
  public void setMaxActive(ConfigNodePropertyInteger maxActive) {
    this.maxActive = maxActive;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public ConfigNodePropertyInteger getMaxIdle() {
    return maxIdle;
  }
  public void setMaxIdle(ConfigNodePropertyInteger maxIdle) {
    this.maxIdle = maxIdle;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public ConfigNodePropertyInteger getMinIdle() {
    return minIdle;
  }
  public void setMinIdle(ConfigNodePropertyInteger minIdle) {
    this.minIdle = minIdle;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public ConfigNodePropertyInteger getInitialSize() {
    return initialSize;
  }
  public void setInitialSize(ConfigNodePropertyInteger initialSize) {
    this.initialSize = initialSize;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public ConfigNodePropertyInteger getMaxWait() {
    return maxWait;
  }
  public void setMaxWait(ConfigNodePropertyInteger maxWait) {
    this.maxWait = maxWait;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public ConfigNodePropertyInteger getMaxAge() {
    return maxAge;
  }
  public void setMaxAge(ConfigNodePropertyInteger maxAge) {
    this.maxAge = maxAge;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public ConfigNodePropertyBoolean getTestOnBorrow() {
    return testOnBorrow;
  }
  public void setTestOnBorrow(ConfigNodePropertyBoolean testOnBorrow) {
    this.testOnBorrow = testOnBorrow;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public ConfigNodePropertyBoolean getTestOnReturn() {
    return testOnReturn;
  }
  public void setTestOnReturn(ConfigNodePropertyBoolean testOnReturn) {
    this.testOnReturn = testOnReturn;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public ConfigNodePropertyBoolean getTestWhileIdle() {
    return testWhileIdle;
  }
  public void setTestWhileIdle(ConfigNodePropertyBoolean testWhileIdle) {
    this.testWhileIdle = testWhileIdle;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public ConfigNodePropertyString getValidationQuery() {
    return validationQuery;
  }
  public void setValidationQuery(ConfigNodePropertyString validationQuery) {
    this.validationQuery = validationQuery;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public ConfigNodePropertyInteger getValidationQueryTimeout() {
    return validationQueryTimeout;
  }
  public void setValidationQueryTimeout(ConfigNodePropertyInteger validationQueryTimeout) {
    this.validationQueryTimeout = validationQueryTimeout;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public ConfigNodePropertyInteger getTimeBetweenEvictionRunsMillis() {
    return timeBetweenEvictionRunsMillis;
  }
  public void setTimeBetweenEvictionRunsMillis(ConfigNodePropertyInteger timeBetweenEvictionRunsMillis) {
    this.timeBetweenEvictionRunsMillis = timeBetweenEvictionRunsMillis;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public ConfigNodePropertyInteger getMinEvictableIdleTimeMillis() {
    return minEvictableIdleTimeMillis;
  }
  public void setMinEvictableIdleTimeMillis(ConfigNodePropertyInteger minEvictableIdleTimeMillis) {
    this.minEvictableIdleTimeMillis = minEvictableIdleTimeMillis;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public ConfigNodePropertyString getConnectionProperties() {
    return connectionProperties;
  }
  public void setConnectionProperties(ConfigNodePropertyString connectionProperties) {
    this.connectionProperties = connectionProperties;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public ConfigNodePropertyString getInitSQL() {
    return initSQL;
  }
  public void setInitSQL(ConfigNodePropertyString initSQL) {
    this.initSQL = initSQL;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public ConfigNodePropertyString getJdbcInterceptors() {
    return jdbcInterceptors;
  }
  public void setJdbcInterceptors(ConfigNodePropertyString jdbcInterceptors) {
    this.jdbcInterceptors = jdbcInterceptors;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public ConfigNodePropertyInteger getValidationInterval() {
    return validationInterval;
  }
  public void setValidationInterval(ConfigNodePropertyInteger validationInterval) {
    this.validationInterval = validationInterval;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public ConfigNodePropertyBoolean getLogValidationErrors() {
    return logValidationErrors;
  }
  public void setLogValidationErrors(ConfigNodePropertyBoolean logValidationErrors) {
    this.logValidationErrors = logValidationErrors;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public ConfigNodePropertyArray getDatasourceSvcProperties() {
    return datasourceSvcProperties;
  }
  public void setDatasourceSvcProperties(ConfigNodePropertyArray datasourceSvcProperties) {
    this.datasourceSvcProperties = datasourceSvcProperties;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    OrgApacheSlingDatasourceDataSourceFactoryProperties orgApacheSlingDatasourceDataSourceFactoryProperties = (OrgApacheSlingDatasourceDataSourceFactoryProperties) o;
    return (this.datasourceName == null ? orgApacheSlingDatasourceDataSourceFactoryProperties.datasourceName == null : this.datasourceName.equals(orgApacheSlingDatasourceDataSourceFactoryProperties.datasourceName)) &&
        (this.datasourceSvcPropName == null ? orgApacheSlingDatasourceDataSourceFactoryProperties.datasourceSvcPropName == null : this.datasourceSvcPropName.equals(orgApacheSlingDatasourceDataSourceFactoryProperties.datasourceSvcPropName)) &&
        (this.driverClassName == null ? orgApacheSlingDatasourceDataSourceFactoryProperties.driverClassName == null : this.driverClassName.equals(orgApacheSlingDatasourceDataSourceFactoryProperties.driverClassName)) &&
        (this.url == null ? orgApacheSlingDatasourceDataSourceFactoryProperties.url == null : this.url.equals(orgApacheSlingDatasourceDataSourceFactoryProperties.url)) &&
        (this.username == null ? orgApacheSlingDatasourceDataSourceFactoryProperties.username == null : this.username.equals(orgApacheSlingDatasourceDataSourceFactoryProperties.username)) &&
        (this.password == null ? orgApacheSlingDatasourceDataSourceFactoryProperties.password == null : this.password.equals(orgApacheSlingDatasourceDataSourceFactoryProperties.password)) &&
        (this.defaultAutoCommit == null ? orgApacheSlingDatasourceDataSourceFactoryProperties.defaultAutoCommit == null : this.defaultAutoCommit.equals(orgApacheSlingDatasourceDataSourceFactoryProperties.defaultAutoCommit)) &&
        (this.defaultReadOnly == null ? orgApacheSlingDatasourceDataSourceFactoryProperties.defaultReadOnly == null : this.defaultReadOnly.equals(orgApacheSlingDatasourceDataSourceFactoryProperties.defaultReadOnly)) &&
        (this.defaultTransactionIsolation == null ? orgApacheSlingDatasourceDataSourceFactoryProperties.defaultTransactionIsolation == null : this.defaultTransactionIsolation.equals(orgApacheSlingDatasourceDataSourceFactoryProperties.defaultTransactionIsolation)) &&
        (this.defaultCatalog == null ? orgApacheSlingDatasourceDataSourceFactoryProperties.defaultCatalog == null : this.defaultCatalog.equals(orgApacheSlingDatasourceDataSourceFactoryProperties.defaultCatalog)) &&
        (this.maxActive == null ? orgApacheSlingDatasourceDataSourceFactoryProperties.maxActive == null : this.maxActive.equals(orgApacheSlingDatasourceDataSourceFactoryProperties.maxActive)) &&
        (this.maxIdle == null ? orgApacheSlingDatasourceDataSourceFactoryProperties.maxIdle == null : this.maxIdle.equals(orgApacheSlingDatasourceDataSourceFactoryProperties.maxIdle)) &&
        (this.minIdle == null ? orgApacheSlingDatasourceDataSourceFactoryProperties.minIdle == null : this.minIdle.equals(orgApacheSlingDatasourceDataSourceFactoryProperties.minIdle)) &&
        (this.initialSize == null ? orgApacheSlingDatasourceDataSourceFactoryProperties.initialSize == null : this.initialSize.equals(orgApacheSlingDatasourceDataSourceFactoryProperties.initialSize)) &&
        (this.maxWait == null ? orgApacheSlingDatasourceDataSourceFactoryProperties.maxWait == null : this.maxWait.equals(orgApacheSlingDatasourceDataSourceFactoryProperties.maxWait)) &&
        (this.maxAge == null ? orgApacheSlingDatasourceDataSourceFactoryProperties.maxAge == null : this.maxAge.equals(orgApacheSlingDatasourceDataSourceFactoryProperties.maxAge)) &&
        (this.testOnBorrow == null ? orgApacheSlingDatasourceDataSourceFactoryProperties.testOnBorrow == null : this.testOnBorrow.equals(orgApacheSlingDatasourceDataSourceFactoryProperties.testOnBorrow)) &&
        (this.testOnReturn == null ? orgApacheSlingDatasourceDataSourceFactoryProperties.testOnReturn == null : this.testOnReturn.equals(orgApacheSlingDatasourceDataSourceFactoryProperties.testOnReturn)) &&
        (this.testWhileIdle == null ? orgApacheSlingDatasourceDataSourceFactoryProperties.testWhileIdle == null : this.testWhileIdle.equals(orgApacheSlingDatasourceDataSourceFactoryProperties.testWhileIdle)) &&
        (this.validationQuery == null ? orgApacheSlingDatasourceDataSourceFactoryProperties.validationQuery == null : this.validationQuery.equals(orgApacheSlingDatasourceDataSourceFactoryProperties.validationQuery)) &&
        (this.validationQueryTimeout == null ? orgApacheSlingDatasourceDataSourceFactoryProperties.validationQueryTimeout == null : this.validationQueryTimeout.equals(orgApacheSlingDatasourceDataSourceFactoryProperties.validationQueryTimeout)) &&
        (this.timeBetweenEvictionRunsMillis == null ? orgApacheSlingDatasourceDataSourceFactoryProperties.timeBetweenEvictionRunsMillis == null : this.timeBetweenEvictionRunsMillis.equals(orgApacheSlingDatasourceDataSourceFactoryProperties.timeBetweenEvictionRunsMillis)) &&
        (this.minEvictableIdleTimeMillis == null ? orgApacheSlingDatasourceDataSourceFactoryProperties.minEvictableIdleTimeMillis == null : this.minEvictableIdleTimeMillis.equals(orgApacheSlingDatasourceDataSourceFactoryProperties.minEvictableIdleTimeMillis)) &&
        (this.connectionProperties == null ? orgApacheSlingDatasourceDataSourceFactoryProperties.connectionProperties == null : this.connectionProperties.equals(orgApacheSlingDatasourceDataSourceFactoryProperties.connectionProperties)) &&
        (this.initSQL == null ? orgApacheSlingDatasourceDataSourceFactoryProperties.initSQL == null : this.initSQL.equals(orgApacheSlingDatasourceDataSourceFactoryProperties.initSQL)) &&
        (this.jdbcInterceptors == null ? orgApacheSlingDatasourceDataSourceFactoryProperties.jdbcInterceptors == null : this.jdbcInterceptors.equals(orgApacheSlingDatasourceDataSourceFactoryProperties.jdbcInterceptors)) &&
        (this.validationInterval == null ? orgApacheSlingDatasourceDataSourceFactoryProperties.validationInterval == null : this.validationInterval.equals(orgApacheSlingDatasourceDataSourceFactoryProperties.validationInterval)) &&
        (this.logValidationErrors == null ? orgApacheSlingDatasourceDataSourceFactoryProperties.logValidationErrors == null : this.logValidationErrors.equals(orgApacheSlingDatasourceDataSourceFactoryProperties.logValidationErrors)) &&
        (this.datasourceSvcProperties == null ? orgApacheSlingDatasourceDataSourceFactoryProperties.datasourceSvcProperties == null : this.datasourceSvcProperties.equals(orgApacheSlingDatasourceDataSourceFactoryProperties.datasourceSvcProperties));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.datasourceName == null ? 0: this.datasourceName.hashCode());
    result = 31 * result + (this.datasourceSvcPropName == null ? 0: this.datasourceSvcPropName.hashCode());
    result = 31 * result + (this.driverClassName == null ? 0: this.driverClassName.hashCode());
    result = 31 * result + (this.url == null ? 0: this.url.hashCode());
    result = 31 * result + (this.username == null ? 0: this.username.hashCode());
    result = 31 * result + (this.password == null ? 0: this.password.hashCode());
    result = 31 * result + (this.defaultAutoCommit == null ? 0: this.defaultAutoCommit.hashCode());
    result = 31 * result + (this.defaultReadOnly == null ? 0: this.defaultReadOnly.hashCode());
    result = 31 * result + (this.defaultTransactionIsolation == null ? 0: this.defaultTransactionIsolation.hashCode());
    result = 31 * result + (this.defaultCatalog == null ? 0: this.defaultCatalog.hashCode());
    result = 31 * result + (this.maxActive == null ? 0: this.maxActive.hashCode());
    result = 31 * result + (this.maxIdle == null ? 0: this.maxIdle.hashCode());
    result = 31 * result + (this.minIdle == null ? 0: this.minIdle.hashCode());
    result = 31 * result + (this.initialSize == null ? 0: this.initialSize.hashCode());
    result = 31 * result + (this.maxWait == null ? 0: this.maxWait.hashCode());
    result = 31 * result + (this.maxAge == null ? 0: this.maxAge.hashCode());
    result = 31 * result + (this.testOnBorrow == null ? 0: this.testOnBorrow.hashCode());
    result = 31 * result + (this.testOnReturn == null ? 0: this.testOnReturn.hashCode());
    result = 31 * result + (this.testWhileIdle == null ? 0: this.testWhileIdle.hashCode());
    result = 31 * result + (this.validationQuery == null ? 0: this.validationQuery.hashCode());
    result = 31 * result + (this.validationQueryTimeout == null ? 0: this.validationQueryTimeout.hashCode());
    result = 31 * result + (this.timeBetweenEvictionRunsMillis == null ? 0: this.timeBetweenEvictionRunsMillis.hashCode());
    result = 31 * result + (this.minEvictableIdleTimeMillis == null ? 0: this.minEvictableIdleTimeMillis.hashCode());
    result = 31 * result + (this.connectionProperties == null ? 0: this.connectionProperties.hashCode());
    result = 31 * result + (this.initSQL == null ? 0: this.initSQL.hashCode());
    result = 31 * result + (this.jdbcInterceptors == null ? 0: this.jdbcInterceptors.hashCode());
    result = 31 * result + (this.validationInterval == null ? 0: this.validationInterval.hashCode());
    result = 31 * result + (this.logValidationErrors == null ? 0: this.logValidationErrors.hashCode());
    result = 31 * result + (this.datasourceSvcProperties == null ? 0: this.datasourceSvcProperties.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class OrgApacheSlingDatasourceDataSourceFactoryProperties {\n");
    
    sb.append("  datasourceName: ").append(datasourceName).append("\n");
    sb.append("  datasourceSvcPropName: ").append(datasourceSvcPropName).append("\n");
    sb.append("  driverClassName: ").append(driverClassName).append("\n");
    sb.append("  url: ").append(url).append("\n");
    sb.append("  username: ").append(username).append("\n");
    sb.append("  password: ").append(password).append("\n");
    sb.append("  defaultAutoCommit: ").append(defaultAutoCommit).append("\n");
    sb.append("  defaultReadOnly: ").append(defaultReadOnly).append("\n");
    sb.append("  defaultTransactionIsolation: ").append(defaultTransactionIsolation).append("\n");
    sb.append("  defaultCatalog: ").append(defaultCatalog).append("\n");
    sb.append("  maxActive: ").append(maxActive).append("\n");
    sb.append("  maxIdle: ").append(maxIdle).append("\n");
    sb.append("  minIdle: ").append(minIdle).append("\n");
    sb.append("  initialSize: ").append(initialSize).append("\n");
    sb.append("  maxWait: ").append(maxWait).append("\n");
    sb.append("  maxAge: ").append(maxAge).append("\n");
    sb.append("  testOnBorrow: ").append(testOnBorrow).append("\n");
    sb.append("  testOnReturn: ").append(testOnReturn).append("\n");
    sb.append("  testWhileIdle: ").append(testWhileIdle).append("\n");
    sb.append("  validationQuery: ").append(validationQuery).append("\n");
    sb.append("  validationQueryTimeout: ").append(validationQueryTimeout).append("\n");
    sb.append("  timeBetweenEvictionRunsMillis: ").append(timeBetweenEvictionRunsMillis).append("\n");
    sb.append("  minEvictableIdleTimeMillis: ").append(minEvictableIdleTimeMillis).append("\n");
    sb.append("  connectionProperties: ").append(connectionProperties).append("\n");
    sb.append("  initSQL: ").append(initSQL).append("\n");
    sb.append("  jdbcInterceptors: ").append(jdbcInterceptors).append("\n");
    sb.append("  validationInterval: ").append(validationInterval).append("\n");
    sb.append("  logValidationErrors: ").append(logValidationErrors).append("\n");
    sb.append("  datasourceSvcProperties: ").append(datasourceSvcProperties).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
