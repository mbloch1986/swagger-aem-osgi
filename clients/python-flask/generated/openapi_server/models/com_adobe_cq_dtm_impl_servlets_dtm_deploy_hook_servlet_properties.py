# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server.models.config_node_property_array import ConfigNodePropertyArray  # noqa: F401,E501
from openapi_server import util


class ComAdobeCqDtmImplServletsDTMDeployHookServletProperties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, dtm_staging_ip_whitelist: ConfigNodePropertyArray=None, dtm_production_ip_whitelist: ConfigNodePropertyArray=None):  # noqa: E501
        """ComAdobeCqDtmImplServletsDTMDeployHookServletProperties - a model defined in OpenAPI

        :param dtm_staging_ip_whitelist: The dtm_staging_ip_whitelist of this ComAdobeCqDtmImplServletsDTMDeployHookServletProperties.  # noqa: E501
        :type dtm_staging_ip_whitelist: ConfigNodePropertyArray
        :param dtm_production_ip_whitelist: The dtm_production_ip_whitelist of this ComAdobeCqDtmImplServletsDTMDeployHookServletProperties.  # noqa: E501
        :type dtm_production_ip_whitelist: ConfigNodePropertyArray
        """
        self.openapi_types = {
            'dtm_staging_ip_whitelist': ConfigNodePropertyArray,
            'dtm_production_ip_whitelist': ConfigNodePropertyArray
        }

        self.attribute_map = {
            'dtm_staging_ip_whitelist': 'dtm.staging.ip.whitelist',
            'dtm_production_ip_whitelist': 'dtm.production.ip.whitelist'
        }

        self._dtm_staging_ip_whitelist = dtm_staging_ip_whitelist
        self._dtm_production_ip_whitelist = dtm_production_ip_whitelist

    @classmethod
    def from_dict(cls, dikt) -> 'ComAdobeCqDtmImplServletsDTMDeployHookServletProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The comAdobeCqDtmImplServletsDTMDeployHookServletProperties of this ComAdobeCqDtmImplServletsDTMDeployHookServletProperties.  # noqa: E501
        :rtype: ComAdobeCqDtmImplServletsDTMDeployHookServletProperties
        """
        return util.deserialize_model(dikt, cls)

    @property
    def dtm_staging_ip_whitelist(self) -> ConfigNodePropertyArray:
        """Gets the dtm_staging_ip_whitelist of this ComAdobeCqDtmImplServletsDTMDeployHookServletProperties.


        :return: The dtm_staging_ip_whitelist of this ComAdobeCqDtmImplServletsDTMDeployHookServletProperties.
        :rtype: ConfigNodePropertyArray
        """
        return self._dtm_staging_ip_whitelist

    @dtm_staging_ip_whitelist.setter
    def dtm_staging_ip_whitelist(self, dtm_staging_ip_whitelist: ConfigNodePropertyArray):
        """Sets the dtm_staging_ip_whitelist of this ComAdobeCqDtmImplServletsDTMDeployHookServletProperties.


        :param dtm_staging_ip_whitelist: The dtm_staging_ip_whitelist of this ComAdobeCqDtmImplServletsDTMDeployHookServletProperties.
        :type dtm_staging_ip_whitelist: ConfigNodePropertyArray
        """

        self._dtm_staging_ip_whitelist = dtm_staging_ip_whitelist

    @property
    def dtm_production_ip_whitelist(self) -> ConfigNodePropertyArray:
        """Gets the dtm_production_ip_whitelist of this ComAdobeCqDtmImplServletsDTMDeployHookServletProperties.


        :return: The dtm_production_ip_whitelist of this ComAdobeCqDtmImplServletsDTMDeployHookServletProperties.
        :rtype: ConfigNodePropertyArray
        """
        return self._dtm_production_ip_whitelist

    @dtm_production_ip_whitelist.setter
    def dtm_production_ip_whitelist(self, dtm_production_ip_whitelist: ConfigNodePropertyArray):
        """Sets the dtm_production_ip_whitelist of this ComAdobeCqDtmImplServletsDTMDeployHookServletProperties.


        :param dtm_production_ip_whitelist: The dtm_production_ip_whitelist of this ComAdobeCqDtmImplServletsDTMDeployHookServletProperties.
        :type dtm_production_ip_whitelist: ConfigNodePropertyArray
        """

        self._dtm_production_ip_whitelist = dtm_production_ip_whitelist
