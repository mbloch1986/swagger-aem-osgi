/**
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


#include "OAIComDayCqAnalyticsSitecatalystImplExporterClassificationsExporteProperties.h"

#include "OAIHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace OpenAPI {

OAIComDayCqAnalyticsSitecatalystImplExporterClassificationsExporteProperties::OAIComDayCqAnalyticsSitecatalystImplExporterClassificationsExporteProperties(QString json) {
    init();
    this->fromJson(json);
}

OAIComDayCqAnalyticsSitecatalystImplExporterClassificationsExporteProperties::OAIComDayCqAnalyticsSitecatalystImplExporterClassificationsExporteProperties() {
    init();
}

OAIComDayCqAnalyticsSitecatalystImplExporterClassificationsExporteProperties::~OAIComDayCqAnalyticsSitecatalystImplExporterClassificationsExporteProperties() {
    this->cleanup();
}

void
OAIComDayCqAnalyticsSitecatalystImplExporterClassificationsExporteProperties::init() {
    allowed_paths = new OAIConfigNodePropertyArray();
    m_allowed_paths_isSet = false;
    cq_analytics_saint_exporter_pagesize = new OAIConfigNodePropertyInteger();
    m_cq_analytics_saint_exporter_pagesize_isSet = false;
}

void
OAIComDayCqAnalyticsSitecatalystImplExporterClassificationsExporteProperties::cleanup() {
    if(allowed_paths != nullptr) { 
        delete allowed_paths;
    }
    if(cq_analytics_saint_exporter_pagesize != nullptr) { 
        delete cq_analytics_saint_exporter_pagesize;
    }
}

OAIComDayCqAnalyticsSitecatalystImplExporterClassificationsExporteProperties*
OAIComDayCqAnalyticsSitecatalystImplExporterClassificationsExporteProperties::fromJson(QString json) {
    QByteArray array (json.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
    return this;
}

void
OAIComDayCqAnalyticsSitecatalystImplExporterClassificationsExporteProperties::fromJsonObject(QJsonObject pJson) {
    ::OpenAPI::setValue(&allowed_paths, pJson["allowed.paths"], "OAIConfigNodePropertyArray", "OAIConfigNodePropertyArray");
    
    ::OpenAPI::setValue(&cq_analytics_saint_exporter_pagesize, pJson["cq.analytics.saint.exporter.pagesize"], "OAIConfigNodePropertyInteger", "OAIConfigNodePropertyInteger");
    
}

QString
OAIComDayCqAnalyticsSitecatalystImplExporterClassificationsExporteProperties::asJson ()
{
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject
OAIComDayCqAnalyticsSitecatalystImplExporterClassificationsExporteProperties::asJsonObject() {
    QJsonObject obj;
    if((allowed_paths != nullptr) && (allowed_paths->isSet())){
        toJsonValue(QString("allowed.paths"), allowed_paths, obj, QString("OAIConfigNodePropertyArray"));
    }
    if((cq_analytics_saint_exporter_pagesize != nullptr) && (cq_analytics_saint_exporter_pagesize->isSet())){
        toJsonValue(QString("cq.analytics.saint.exporter.pagesize"), cq_analytics_saint_exporter_pagesize, obj, QString("OAIConfigNodePropertyInteger"));
    }

    return obj;
}

OAIConfigNodePropertyArray*
OAIComDayCqAnalyticsSitecatalystImplExporterClassificationsExporteProperties::getAllowedPaths() {
    return allowed_paths;
}
void
OAIComDayCqAnalyticsSitecatalystImplExporterClassificationsExporteProperties::setAllowedPaths(OAIConfigNodePropertyArray* allowed_paths) {
    this->allowed_paths = allowed_paths;
    this->m_allowed_paths_isSet = true;
}

OAIConfigNodePropertyInteger*
OAIComDayCqAnalyticsSitecatalystImplExporterClassificationsExporteProperties::getCqAnalyticsSaintExporterPagesize() {
    return cq_analytics_saint_exporter_pagesize;
}
void
OAIComDayCqAnalyticsSitecatalystImplExporterClassificationsExporteProperties::setCqAnalyticsSaintExporterPagesize(OAIConfigNodePropertyInteger* cq_analytics_saint_exporter_pagesize) {
    this->cq_analytics_saint_exporter_pagesize = cq_analytics_saint_exporter_pagesize;
    this->m_cq_analytics_saint_exporter_pagesize_isSet = true;
}


bool
OAIComDayCqAnalyticsSitecatalystImplExporterClassificationsExporteProperties::isSet(){
    bool isObjectUpdated = false;
    do{
        if(allowed_paths != nullptr && allowed_paths->isSet()){ isObjectUpdated = true; break;}
        if(cq_analytics_saint_exporter_pagesize != nullptr && cq_analytics_saint_exporter_pagesize->isSet()){ isObjectUpdated = true; break;}
    }while(false);
    return isObjectUpdated;
}
}

