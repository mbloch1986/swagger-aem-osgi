note
 description:"[
		Adobe Experience Manager OSGI config (AEM) API
 		Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
  		OpenAPI spec version: 1.0.0-pre.0
 	    Contact: opensource@shinesolutions.com

  	NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

 		 Do not edit the class manually.
 	]"
	date: "$Date$"
	revision: "$Revision$"
	EIS:"Eiffel openapi generator", "src=https://openapi-generator.tech", "protocol=uri"
class COM_DAY_CQ_WCM_CORE_IMPL_VERSION_PURGE_TASK_PROPERTIES 

inherit

  ANY
      redefine
          out 
      end


feature --Access

    versionpurge_paths: detachable CONFIG_NODE_PROPERTY_ARRAY 
      
    versionpurge_recursive: detachable CONFIG_NODE_PROPERTY_BOOLEAN 
      
    versionpurge_max_versions: detachable CONFIG_NODE_PROPERTY_INTEGER 
      
    versionpurge_min_versions: detachable CONFIG_NODE_PROPERTY_INTEGER 
      
    versionpurge_max_age_days: detachable CONFIG_NODE_PROPERTY_INTEGER 
      

feature -- Change Element  
 
    set_versionpurge_paths (a_name: like versionpurge_paths)
        -- Set 'versionpurge_paths' with 'a_name'.
      do
        versionpurge_paths := a_name
      ensure
        versionpurge_paths_set: versionpurge_paths = a_name		
      end

    set_versionpurge_recursive (a_name: like versionpurge_recursive)
        -- Set 'versionpurge_recursive' with 'a_name'.
      do
        versionpurge_recursive := a_name
      ensure
        versionpurge_recursive_set: versionpurge_recursive = a_name		
      end

    set_versionpurge_max_versions (a_name: like versionpurge_max_versions)
        -- Set 'versionpurge_max_versions' with 'a_name'.
      do
        versionpurge_max_versions := a_name
      ensure
        versionpurge_max_versions_set: versionpurge_max_versions = a_name		
      end

    set_versionpurge_min_versions (a_name: like versionpurge_min_versions)
        -- Set 'versionpurge_min_versions' with 'a_name'.
      do
        versionpurge_min_versions := a_name
      ensure
        versionpurge_min_versions_set: versionpurge_min_versions = a_name		
      end

    set_versionpurge_max_age_days (a_name: like versionpurge_max_age_days)
        -- Set 'versionpurge_max_age_days' with 'a_name'.
      do
        versionpurge_max_age_days := a_name
      ensure
        versionpurge_max_age_days_set: versionpurge_max_age_days = a_name		
      end


 feature -- Status Report

    out: STRING
          -- <Precursor>
      do
        create Result.make_empty
        Result.append("%Nclass COM_DAY_CQ_WCM_CORE_IMPL_VERSION_PURGE_TASK_PROPERTIES%N")
        if attached versionpurge_paths as l_versionpurge_paths then
          Result.append ("%Nversionpurge_paths:")
          Result.append (l_versionpurge_paths.out)
          Result.append ("%N")    
        end  
        if attached versionpurge_recursive as l_versionpurge_recursive then
          Result.append ("%Nversionpurge_recursive:")
          Result.append (l_versionpurge_recursive.out)
          Result.append ("%N")    
        end  
        if attached versionpurge_max_versions as l_versionpurge_max_versions then
          Result.append ("%Nversionpurge_max_versions:")
          Result.append (l_versionpurge_max_versions.out)
          Result.append ("%N")    
        end  
        if attached versionpurge_min_versions as l_versionpurge_min_versions then
          Result.append ("%Nversionpurge_min_versions:")
          Result.append (l_versionpurge_min_versions.out)
          Result.append ("%N")    
        end  
        if attached versionpurge_max_age_days as l_versionpurge_max_age_days then
          Result.append ("%Nversionpurge_max_age_days:")
          Result.append (l_versionpurge_max_age_days.out)
          Result.append ("%N")    
        end  
      end
end


