/**
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIComDayCqDamCoreImplExpiryNotificationJobImplProperties.h
 *
 * 
 */

#ifndef OAIComDayCqDamCoreImplExpiryNotificationJobImplProperties_H
#define OAIComDayCqDamCoreImplExpiryNotificationJobImplProperties_H

#include <QJsonObject>


#include "OAIConfigNodePropertyBoolean.h"
#include "OAIConfigNodePropertyInteger.h"
#include "OAIConfigNodePropertyString.h"

#include "OAIObject.h"

namespace OpenAPI {

class OAIComDayCqDamCoreImplExpiryNotificationJobImplProperties: public OAIObject {
public:
    OAIComDayCqDamCoreImplExpiryNotificationJobImplProperties();
    OAIComDayCqDamCoreImplExpiryNotificationJobImplProperties(QString json);
    ~OAIComDayCqDamCoreImplExpiryNotificationJobImplProperties() override;
    void init();

    QString asJson () const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIConfigNodePropertyBoolean getCqDamExpiryNotificationSchedulerIstimebased() const;
    void setCqDamExpiryNotificationSchedulerIstimebased(const OAIConfigNodePropertyBoolean &cq_dam_expiry_notification_scheduler_istimebased);

    OAIConfigNodePropertyString getCqDamExpiryNotificationSchedulerTimebasedRule() const;
    void setCqDamExpiryNotificationSchedulerTimebasedRule(const OAIConfigNodePropertyString &cq_dam_expiry_notification_scheduler_timebased_rule);

    OAIConfigNodePropertyInteger getCqDamExpiryNotificationSchedulerPeriodRule() const;
    void setCqDamExpiryNotificationSchedulerPeriodRule(const OAIConfigNodePropertyInteger &cq_dam_expiry_notification_scheduler_period_rule);

    OAIConfigNodePropertyBoolean getSendEmail() const;
    void setSendEmail(const OAIConfigNodePropertyBoolean &send_email);

    OAIConfigNodePropertyInteger getAssetExpiredLimit() const;
    void setAssetExpiredLimit(const OAIConfigNodePropertyInteger &asset_expired_limit);

    OAIConfigNodePropertyInteger getPriorNotificationSeconds() const;
    void setPriorNotificationSeconds(const OAIConfigNodePropertyInteger &prior_notification_seconds);

    OAIConfigNodePropertyString getCqDamExpiryNotificationUrlProtocol() const;
    void setCqDamExpiryNotificationUrlProtocol(const OAIConfigNodePropertyString &cq_dam_expiry_notification_url_protocol);

    virtual bool isSet() const override;

private:
    OAIConfigNodePropertyBoolean cq_dam_expiry_notification_scheduler_istimebased;
    bool m_cq_dam_expiry_notification_scheduler_istimebased_isSet;

    OAIConfigNodePropertyString cq_dam_expiry_notification_scheduler_timebased_rule;
    bool m_cq_dam_expiry_notification_scheduler_timebased_rule_isSet;

    OAIConfigNodePropertyInteger cq_dam_expiry_notification_scheduler_period_rule;
    bool m_cq_dam_expiry_notification_scheduler_period_rule_isSet;

    OAIConfigNodePropertyBoolean send_email;
    bool m_send_email_isSet;

    OAIConfigNodePropertyInteger asset_expired_limit;
    bool m_asset_expired_limit_isSet;

    OAIConfigNodePropertyInteger prior_notification_seconds;
    bool m_prior_notification_seconds_isSet;

    OAIConfigNodePropertyString cq_dam_expiry_notification_url_protocol;
    bool m_cq_dam_expiry_notification_url_protocol_isSet;

};

}

#endif // OAIComDayCqDamCoreImplExpiryNotificationJobImplProperties_H
