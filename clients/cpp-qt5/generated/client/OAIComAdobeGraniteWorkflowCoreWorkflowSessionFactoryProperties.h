/**
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIComAdobeGraniteWorkflowCoreWorkflowSessionFactoryProperties.h
 *
 * 
 */

#ifndef OAIComAdobeGraniteWorkflowCoreWorkflowSessionFactoryProperties_H_
#define OAIComAdobeGraniteWorkflowCoreWorkflowSessionFactoryProperties_H_

#include <QJsonObject>


#include "OAIOAIConfigNodePropertyArray.h"
#include "OAIOAIConfigNodePropertyBoolean.h"
#include "OAIOAIConfigNodePropertyDropDown.h"
#include "OAIOAIConfigNodePropertyInteger.h"
#include "OAIOAIConfigNodePropertyString.h"

#include "OAIObject.h"

namespace OpenAPI {

class OAIComAdobeGraniteWorkflowCoreWorkflowSessionFactoryProperties: public OAIObject {
public:
    OAIComAdobeGraniteWorkflowCoreWorkflowSessionFactoryProperties();
    OAIComAdobeGraniteWorkflowCoreWorkflowSessionFactoryProperties(QString json);
    ~OAIComAdobeGraniteWorkflowCoreWorkflowSessionFactoryProperties();
    void init();
    void cleanup();

    QString asJson () override;
    QJsonObject asJsonObject() override;
    void fromJsonObject(QJsonObject json) override;
    OAIComAdobeGraniteWorkflowCoreWorkflowSessionFactoryProperties* fromJson(QString jsonString) override;

    OAIConfigNodePropertyDropDown* getGraniteWorkflowinboxSortPropertyName();
    void setGraniteWorkflowinboxSortPropertyName(OAIConfigNodePropertyDropDown* granite_workflowinbox_sort_property_name);

    OAIConfigNodePropertyString* getGraniteWorkflowinboxSortOrder();
    void setGraniteWorkflowinboxSortOrder(OAIConfigNodePropertyString* granite_workflowinbox_sort_order);

    OAIConfigNodePropertyInteger* getCqWorkflowJobRetry();
    void setCqWorkflowJobRetry(OAIConfigNodePropertyInteger* cq_workflow_job_retry);

    OAIConfigNodePropertyArray* getCqWorkflowSuperuser();
    void setCqWorkflowSuperuser(OAIConfigNodePropertyArray* cq_workflow_superuser);

    OAIConfigNodePropertyInteger* getGraniteWorkflowInboxQuerySize();
    void setGraniteWorkflowInboxQuerySize(OAIConfigNodePropertyInteger* granite_workflow_inbox_query_size);

    OAIConfigNodePropertyBoolean* getGraniteWorkflowAdminUserGroupFilter();
    void setGraniteWorkflowAdminUserGroupFilter(OAIConfigNodePropertyBoolean* granite_workflow_admin_user_group_filter);

    OAIConfigNodePropertyBoolean* getGraniteWorkflowEnforceWorkitemAssigneePermissions();
    void setGraniteWorkflowEnforceWorkitemAssigneePermissions(OAIConfigNodePropertyBoolean* granite_workflow_enforce_workitem_assignee_permissions);

    OAIConfigNodePropertyBoolean* getGraniteWorkflowEnforceWorkflowInitiatorPermissions();
    void setGraniteWorkflowEnforceWorkflowInitiatorPermissions(OAIConfigNodePropertyBoolean* granite_workflow_enforce_workflow_initiator_permissions);

    OAIConfigNodePropertyBoolean* getGraniteWorkflowInjectTenantIdInJobTopics();
    void setGraniteWorkflowInjectTenantIdInJobTopics(OAIConfigNodePropertyBoolean* granite_workflow_inject_tenant_id_in_job_topics);

    OAIConfigNodePropertyInteger* getGraniteWorkflowMaxPurgeSaveThreshold();
    void setGraniteWorkflowMaxPurgeSaveThreshold(OAIConfigNodePropertyInteger* granite_workflow_max_purge_save_threshold);

    OAIConfigNodePropertyInteger* getGraniteWorkflowMaxPurgeQueryCount();
    void setGraniteWorkflowMaxPurgeQueryCount(OAIConfigNodePropertyInteger* granite_workflow_max_purge_query_count);


    virtual bool isSet() override;

private:
    OAIConfigNodePropertyDropDown* granite_workflowinbox_sort_property_name;
    bool m_granite_workflowinbox_sort_property_name_isSet;

    OAIConfigNodePropertyString* granite_workflowinbox_sort_order;
    bool m_granite_workflowinbox_sort_order_isSet;

    OAIConfigNodePropertyInteger* cq_workflow_job_retry;
    bool m_cq_workflow_job_retry_isSet;

    OAIConfigNodePropertyArray* cq_workflow_superuser;
    bool m_cq_workflow_superuser_isSet;

    OAIConfigNodePropertyInteger* granite_workflow_inbox_query_size;
    bool m_granite_workflow_inbox_query_size_isSet;

    OAIConfigNodePropertyBoolean* granite_workflow_admin_user_group_filter;
    bool m_granite_workflow_admin_user_group_filter_isSet;

    OAIConfigNodePropertyBoolean* granite_workflow_enforce_workitem_assignee_permissions;
    bool m_granite_workflow_enforce_workitem_assignee_permissions_isSet;

    OAIConfigNodePropertyBoolean* granite_workflow_enforce_workflow_initiator_permissions;
    bool m_granite_workflow_enforce_workflow_initiator_permissions_isSet;

    OAIConfigNodePropertyBoolean* granite_workflow_inject_tenant_id_in_job_topics;
    bool m_granite_workflow_inject_tenant_id_in_job_topics_isSet;

    OAIConfigNodePropertyInteger* granite_workflow_max_purge_save_threshold;
    bool m_granite_workflow_max_purge_save_threshold_isSet;

    OAIConfigNodePropertyInteger* granite_workflow_max_purge_query_count;
    bool m_granite_workflow_max_purge_query_count_isSet;

};

}

#endif /* OAIComAdobeGraniteWorkflowCoreWorkflowSessionFactoryProperties_H_ */
