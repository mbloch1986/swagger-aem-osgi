/**
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.NodeSwaggerAemOsgi);
  }
}(this, function(expect, NodeSwaggerAemOsgi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new NodeSwaggerAemOsgi.ComDayCqRewriterLinkcheckerImplLinkCheckerImplProperties();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('ComDayCqRewriterLinkcheckerImplLinkCheckerImplProperties', function() {
    it('should create an instance of ComDayCqRewriterLinkcheckerImplLinkCheckerImplProperties', function() {
      // uncomment below and update the code to test ComDayCqRewriterLinkcheckerImplLinkCheckerImplProperties
      //var instane = new NodeSwaggerAemOsgi.ComDayCqRewriterLinkcheckerImplLinkCheckerImplProperties();
      //expect(instance).to.be.a(NodeSwaggerAemOsgi.ComDayCqRewriterLinkcheckerImplLinkCheckerImplProperties);
    });

    it('should have the property schedulerPeriod (base name: "scheduler.period")', function() {
      // uncomment below and update the code to test the property schedulerPeriod
      //var instane = new NodeSwaggerAemOsgi.ComDayCqRewriterLinkcheckerImplLinkCheckerImplProperties();
      //expect(instance).to.be();
    });

    it('should have the property schedulerConcurrent (base name: "scheduler.concurrent")', function() {
      // uncomment below and update the code to test the property schedulerConcurrent
      //var instane = new NodeSwaggerAemOsgi.ComDayCqRewriterLinkcheckerImplLinkCheckerImplProperties();
      //expect(instance).to.be();
    });

    it('should have the property serviceBadLinkToleranceInterval (base name: "service.bad_link_tolerance_interval")', function() {
      // uncomment below and update the code to test the property serviceBadLinkToleranceInterval
      //var instane = new NodeSwaggerAemOsgi.ComDayCqRewriterLinkcheckerImplLinkCheckerImplProperties();
      //expect(instance).to.be();
    });

    it('should have the property serviceCheckOverridePatterns (base name: "service.check_override_patterns")', function() {
      // uncomment below and update the code to test the property serviceCheckOverridePatterns
      //var instane = new NodeSwaggerAemOsgi.ComDayCqRewriterLinkcheckerImplLinkCheckerImplProperties();
      //expect(instance).to.be();
    });

    it('should have the property serviceCacheBrokenInternalLinks (base name: "service.cache_broken_internal_links")', function() {
      // uncomment below and update the code to test the property serviceCacheBrokenInternalLinks
      //var instane = new NodeSwaggerAemOsgi.ComDayCqRewriterLinkcheckerImplLinkCheckerImplProperties();
      //expect(instance).to.be();
    });

    it('should have the property serviceSpecialLinkPrefix (base name: "service.special_link_prefix")', function() {
      // uncomment below and update the code to test the property serviceSpecialLinkPrefix
      //var instane = new NodeSwaggerAemOsgi.ComDayCqRewriterLinkcheckerImplLinkCheckerImplProperties();
      //expect(instance).to.be();
    });

    it('should have the property serviceSpecialLinkPatterns (base name: "service.special_link_patterns")', function() {
      // uncomment below and update the code to test the property serviceSpecialLinkPatterns
      //var instane = new NodeSwaggerAemOsgi.ComDayCqRewriterLinkcheckerImplLinkCheckerImplProperties();
      //expect(instance).to.be();
    });

  });

}));
