/**
* Adobe Experience Manager OSGI config (AEM) API
* Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
*
* OpenAPI spec version: 1.0.0-pre.0
* Contact: opensource@shinesolutions.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/


#include "ComDayCqWcmMsmImplServletsAuditLogServletProperties.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

ComDayCqWcmMsmImplServletsAuditLogServletProperties::ComDayCqWcmMsmImplServletsAuditLogServletProperties()
{
    m_Auditlogservlet_default_events_countIsSet = false;
    m_Auditlogservlet_default_pathIsSet = false;
    
}

ComDayCqWcmMsmImplServletsAuditLogServletProperties::~ComDayCqWcmMsmImplServletsAuditLogServletProperties()
{
}

void ComDayCqWcmMsmImplServletsAuditLogServletProperties::validate()
{
    // TODO: implement validation
}

nlohmann::json ComDayCqWcmMsmImplServletsAuditLogServletProperties::toJson() const
{
    nlohmann::json val = nlohmann::json::object();

    if(m_Auditlogservlet_default_events_countIsSet)
    {
        val["auditlogservlet.default.events.count"] = ModelBase::toJson(m_Auditlogservlet_default_events_count);
    }
    if(m_Auditlogservlet_default_pathIsSet)
    {
        val["auditlogservlet.default.path"] = ModelBase::toJson(m_Auditlogservlet_default_path);
    }
    

    return val;
}

void ComDayCqWcmMsmImplServletsAuditLogServletProperties::fromJson(nlohmann::json& val)
{
    if(val.find("auditlogservlet.default.events.count") != val.end())
    {
        if(!val["auditlogservlet.default.events.count"].is_null())
        {
            ConfigNodePropertyInteger newItem;
            newItem.fromJson(val["auditlogservlet.default.events.count"]);
            setAuditlogservletDefaultEventsCount( newItem );
        }
        
    }
    if(val.find("auditlogservlet.default.path") != val.end())
    {
        if(!val["auditlogservlet.default.path"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["auditlogservlet.default.path"]);
            setAuditlogservletDefaultPath( newItem );
        }
        
    }
    
}


ConfigNodePropertyInteger ComDayCqWcmMsmImplServletsAuditLogServletProperties::getAuditlogservletDefaultEventsCount() const
{
    return m_Auditlogservlet_default_events_count;
}
void ComDayCqWcmMsmImplServletsAuditLogServletProperties::setAuditlogservletDefaultEventsCount(ConfigNodePropertyInteger const& value)
{
    m_Auditlogservlet_default_events_count = value;
    m_Auditlogservlet_default_events_countIsSet = true;
}
bool ComDayCqWcmMsmImplServletsAuditLogServletProperties::auditlogservletDefaultEventsCountIsSet() const
{
    return m_Auditlogservlet_default_events_countIsSet;
}
void ComDayCqWcmMsmImplServletsAuditLogServletProperties::unsetAuditlogservlet_default_events_count()
{
    m_Auditlogservlet_default_events_countIsSet = false;
}
ConfigNodePropertyString ComDayCqWcmMsmImplServletsAuditLogServletProperties::getAuditlogservletDefaultPath() const
{
    return m_Auditlogservlet_default_path;
}
void ComDayCqWcmMsmImplServletsAuditLogServletProperties::setAuditlogservletDefaultPath(ConfigNodePropertyString const& value)
{
    m_Auditlogservlet_default_path = value;
    m_Auditlogservlet_default_pathIsSet = true;
}
bool ComDayCqWcmMsmImplServletsAuditLogServletProperties::auditlogservletDefaultPathIsSet() const
{
    return m_Auditlogservlet_default_pathIsSet;
}
void ComDayCqWcmMsmImplServletsAuditLogServletProperties::unsetAuditlogservlet_default_path()
{
    m_Auditlogservlet_default_pathIsSet = false;
}

}
}
}
}

