/**
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.client.model;

import org.openapitools.client.model.ConfigNodePropertyArray;
import org.openapitools.client.model.ConfigNodePropertyBoolean;
import org.openapitools.client.model.ConfigNodePropertyInteger;
import org.openapitools.client.model.ConfigNodePropertyString;
import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

@ApiModel(description = "")
public class ComAdobeGraniteUiClientlibsImplHtmlLibraryManagerImplProperties {
  
  @SerializedName("htmllibmanager.timing")
  private ConfigNodePropertyBoolean htmllibmanagerTiming = null;
  @SerializedName("htmllibmanager.debug.init.js")
  private ConfigNodePropertyString htmllibmanagerDebugInitJs = null;
  @SerializedName("htmllibmanager.minify")
  private ConfigNodePropertyBoolean htmllibmanagerMinify = null;
  @SerializedName("htmllibmanager.debug")
  private ConfigNodePropertyBoolean htmllibmanagerDebug = null;
  @SerializedName("htmllibmanager.gzip")
  private ConfigNodePropertyBoolean htmllibmanagerGzip = null;
  @SerializedName("htmllibmanager.maxDataUriSize")
  private ConfigNodePropertyInteger htmllibmanagerMaxDataUriSize = null;
  @SerializedName("htmllibmanager.maxage")
  private ConfigNodePropertyInteger htmllibmanagerMaxage = null;
  @SerializedName("htmllibmanager.forceCQUrlInfo")
  private ConfigNodePropertyBoolean htmllibmanagerForceCQUrlInfo = null;
  @SerializedName("htmllibmanager.defaultthemename")
  private ConfigNodePropertyString htmllibmanagerDefaultthemename = null;
  @SerializedName("htmllibmanager.defaultuserthemename")
  private ConfigNodePropertyString htmllibmanagerDefaultuserthemename = null;
  @SerializedName("htmllibmanager.clientmanager")
  private ConfigNodePropertyString htmllibmanagerClientmanager = null;
  @SerializedName("htmllibmanager.path.list")
  private ConfigNodePropertyArray htmllibmanagerPathList = null;
  @SerializedName("htmllibmanager.excluded.path.list")
  private ConfigNodePropertyArray htmllibmanagerExcludedPathList = null;
  @SerializedName("htmllibmanager.processor.js")
  private ConfigNodePropertyArray htmllibmanagerProcessorJs = null;
  @SerializedName("htmllibmanager.processor.css")
  private ConfigNodePropertyArray htmllibmanagerProcessorCss = null;
  @SerializedName("htmllibmanager.longcache.patterns")
  private ConfigNodePropertyArray htmllibmanagerLongcachePatterns = null;
  @SerializedName("htmllibmanager.longcache.format")
  private ConfigNodePropertyString htmllibmanagerLongcacheFormat = null;
  @SerializedName("htmllibmanager.useFileSystemOutputCache")
  private ConfigNodePropertyBoolean htmllibmanagerUseFileSystemOutputCache = null;
  @SerializedName("htmllibmanager.fileSystemOutputCacheLocation")
  private ConfigNodePropertyString htmllibmanagerFileSystemOutputCacheLocation = null;
  @SerializedName("htmllibmanager.disable.replacement")
  private ConfigNodePropertyArray htmllibmanagerDisableReplacement = null;

  /**
   **/
  @ApiModelProperty(value = "")
  public ConfigNodePropertyBoolean getHtmllibmanagerTiming() {
    return htmllibmanagerTiming;
  }
  public void setHtmllibmanagerTiming(ConfigNodePropertyBoolean htmllibmanagerTiming) {
    this.htmllibmanagerTiming = htmllibmanagerTiming;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public ConfigNodePropertyString getHtmllibmanagerDebugInitJs() {
    return htmllibmanagerDebugInitJs;
  }
  public void setHtmllibmanagerDebugInitJs(ConfigNodePropertyString htmllibmanagerDebugInitJs) {
    this.htmllibmanagerDebugInitJs = htmllibmanagerDebugInitJs;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public ConfigNodePropertyBoolean getHtmllibmanagerMinify() {
    return htmllibmanagerMinify;
  }
  public void setHtmllibmanagerMinify(ConfigNodePropertyBoolean htmllibmanagerMinify) {
    this.htmllibmanagerMinify = htmllibmanagerMinify;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public ConfigNodePropertyBoolean getHtmllibmanagerDebug() {
    return htmllibmanagerDebug;
  }
  public void setHtmllibmanagerDebug(ConfigNodePropertyBoolean htmllibmanagerDebug) {
    this.htmllibmanagerDebug = htmllibmanagerDebug;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public ConfigNodePropertyBoolean getHtmllibmanagerGzip() {
    return htmllibmanagerGzip;
  }
  public void setHtmllibmanagerGzip(ConfigNodePropertyBoolean htmllibmanagerGzip) {
    this.htmllibmanagerGzip = htmllibmanagerGzip;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public ConfigNodePropertyInteger getHtmllibmanagerMaxDataUriSize() {
    return htmllibmanagerMaxDataUriSize;
  }
  public void setHtmllibmanagerMaxDataUriSize(ConfigNodePropertyInteger htmllibmanagerMaxDataUriSize) {
    this.htmllibmanagerMaxDataUriSize = htmllibmanagerMaxDataUriSize;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public ConfigNodePropertyInteger getHtmllibmanagerMaxage() {
    return htmllibmanagerMaxage;
  }
  public void setHtmllibmanagerMaxage(ConfigNodePropertyInteger htmllibmanagerMaxage) {
    this.htmllibmanagerMaxage = htmllibmanagerMaxage;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public ConfigNodePropertyBoolean getHtmllibmanagerForceCQUrlInfo() {
    return htmllibmanagerForceCQUrlInfo;
  }
  public void setHtmllibmanagerForceCQUrlInfo(ConfigNodePropertyBoolean htmllibmanagerForceCQUrlInfo) {
    this.htmllibmanagerForceCQUrlInfo = htmllibmanagerForceCQUrlInfo;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public ConfigNodePropertyString getHtmllibmanagerDefaultthemename() {
    return htmllibmanagerDefaultthemename;
  }
  public void setHtmllibmanagerDefaultthemename(ConfigNodePropertyString htmllibmanagerDefaultthemename) {
    this.htmllibmanagerDefaultthemename = htmllibmanagerDefaultthemename;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public ConfigNodePropertyString getHtmllibmanagerDefaultuserthemename() {
    return htmllibmanagerDefaultuserthemename;
  }
  public void setHtmllibmanagerDefaultuserthemename(ConfigNodePropertyString htmllibmanagerDefaultuserthemename) {
    this.htmllibmanagerDefaultuserthemename = htmllibmanagerDefaultuserthemename;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public ConfigNodePropertyString getHtmllibmanagerClientmanager() {
    return htmllibmanagerClientmanager;
  }
  public void setHtmllibmanagerClientmanager(ConfigNodePropertyString htmllibmanagerClientmanager) {
    this.htmllibmanagerClientmanager = htmllibmanagerClientmanager;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public ConfigNodePropertyArray getHtmllibmanagerPathList() {
    return htmllibmanagerPathList;
  }
  public void setHtmllibmanagerPathList(ConfigNodePropertyArray htmllibmanagerPathList) {
    this.htmllibmanagerPathList = htmllibmanagerPathList;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public ConfigNodePropertyArray getHtmllibmanagerExcludedPathList() {
    return htmllibmanagerExcludedPathList;
  }
  public void setHtmllibmanagerExcludedPathList(ConfigNodePropertyArray htmllibmanagerExcludedPathList) {
    this.htmllibmanagerExcludedPathList = htmllibmanagerExcludedPathList;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public ConfigNodePropertyArray getHtmllibmanagerProcessorJs() {
    return htmllibmanagerProcessorJs;
  }
  public void setHtmllibmanagerProcessorJs(ConfigNodePropertyArray htmllibmanagerProcessorJs) {
    this.htmllibmanagerProcessorJs = htmllibmanagerProcessorJs;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public ConfigNodePropertyArray getHtmllibmanagerProcessorCss() {
    return htmllibmanagerProcessorCss;
  }
  public void setHtmllibmanagerProcessorCss(ConfigNodePropertyArray htmllibmanagerProcessorCss) {
    this.htmllibmanagerProcessorCss = htmllibmanagerProcessorCss;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public ConfigNodePropertyArray getHtmllibmanagerLongcachePatterns() {
    return htmllibmanagerLongcachePatterns;
  }
  public void setHtmllibmanagerLongcachePatterns(ConfigNodePropertyArray htmllibmanagerLongcachePatterns) {
    this.htmllibmanagerLongcachePatterns = htmllibmanagerLongcachePatterns;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public ConfigNodePropertyString getHtmllibmanagerLongcacheFormat() {
    return htmllibmanagerLongcacheFormat;
  }
  public void setHtmllibmanagerLongcacheFormat(ConfigNodePropertyString htmllibmanagerLongcacheFormat) {
    this.htmllibmanagerLongcacheFormat = htmllibmanagerLongcacheFormat;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public ConfigNodePropertyBoolean getHtmllibmanagerUseFileSystemOutputCache() {
    return htmllibmanagerUseFileSystemOutputCache;
  }
  public void setHtmllibmanagerUseFileSystemOutputCache(ConfigNodePropertyBoolean htmllibmanagerUseFileSystemOutputCache) {
    this.htmllibmanagerUseFileSystemOutputCache = htmllibmanagerUseFileSystemOutputCache;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public ConfigNodePropertyString getHtmllibmanagerFileSystemOutputCacheLocation() {
    return htmllibmanagerFileSystemOutputCacheLocation;
  }
  public void setHtmllibmanagerFileSystemOutputCacheLocation(ConfigNodePropertyString htmllibmanagerFileSystemOutputCacheLocation) {
    this.htmllibmanagerFileSystemOutputCacheLocation = htmllibmanagerFileSystemOutputCacheLocation;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public ConfigNodePropertyArray getHtmllibmanagerDisableReplacement() {
    return htmllibmanagerDisableReplacement;
  }
  public void setHtmllibmanagerDisableReplacement(ConfigNodePropertyArray htmllibmanagerDisableReplacement) {
    this.htmllibmanagerDisableReplacement = htmllibmanagerDisableReplacement;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ComAdobeGraniteUiClientlibsImplHtmlLibraryManagerImplProperties comAdobeGraniteUiClientlibsImplHtmlLibraryManagerImplProperties = (ComAdobeGraniteUiClientlibsImplHtmlLibraryManagerImplProperties) o;
    return (this.htmllibmanagerTiming == null ? comAdobeGraniteUiClientlibsImplHtmlLibraryManagerImplProperties.htmllibmanagerTiming == null : this.htmllibmanagerTiming.equals(comAdobeGraniteUiClientlibsImplHtmlLibraryManagerImplProperties.htmllibmanagerTiming)) &&
        (this.htmllibmanagerDebugInitJs == null ? comAdobeGraniteUiClientlibsImplHtmlLibraryManagerImplProperties.htmllibmanagerDebugInitJs == null : this.htmllibmanagerDebugInitJs.equals(comAdobeGraniteUiClientlibsImplHtmlLibraryManagerImplProperties.htmllibmanagerDebugInitJs)) &&
        (this.htmllibmanagerMinify == null ? comAdobeGraniteUiClientlibsImplHtmlLibraryManagerImplProperties.htmllibmanagerMinify == null : this.htmllibmanagerMinify.equals(comAdobeGraniteUiClientlibsImplHtmlLibraryManagerImplProperties.htmllibmanagerMinify)) &&
        (this.htmllibmanagerDebug == null ? comAdobeGraniteUiClientlibsImplHtmlLibraryManagerImplProperties.htmllibmanagerDebug == null : this.htmllibmanagerDebug.equals(comAdobeGraniteUiClientlibsImplHtmlLibraryManagerImplProperties.htmllibmanagerDebug)) &&
        (this.htmllibmanagerGzip == null ? comAdobeGraniteUiClientlibsImplHtmlLibraryManagerImplProperties.htmllibmanagerGzip == null : this.htmllibmanagerGzip.equals(comAdobeGraniteUiClientlibsImplHtmlLibraryManagerImplProperties.htmllibmanagerGzip)) &&
        (this.htmllibmanagerMaxDataUriSize == null ? comAdobeGraniteUiClientlibsImplHtmlLibraryManagerImplProperties.htmllibmanagerMaxDataUriSize == null : this.htmllibmanagerMaxDataUriSize.equals(comAdobeGraniteUiClientlibsImplHtmlLibraryManagerImplProperties.htmllibmanagerMaxDataUriSize)) &&
        (this.htmllibmanagerMaxage == null ? comAdobeGraniteUiClientlibsImplHtmlLibraryManagerImplProperties.htmllibmanagerMaxage == null : this.htmllibmanagerMaxage.equals(comAdobeGraniteUiClientlibsImplHtmlLibraryManagerImplProperties.htmllibmanagerMaxage)) &&
        (this.htmllibmanagerForceCQUrlInfo == null ? comAdobeGraniteUiClientlibsImplHtmlLibraryManagerImplProperties.htmllibmanagerForceCQUrlInfo == null : this.htmllibmanagerForceCQUrlInfo.equals(comAdobeGraniteUiClientlibsImplHtmlLibraryManagerImplProperties.htmllibmanagerForceCQUrlInfo)) &&
        (this.htmllibmanagerDefaultthemename == null ? comAdobeGraniteUiClientlibsImplHtmlLibraryManagerImplProperties.htmllibmanagerDefaultthemename == null : this.htmllibmanagerDefaultthemename.equals(comAdobeGraniteUiClientlibsImplHtmlLibraryManagerImplProperties.htmllibmanagerDefaultthemename)) &&
        (this.htmllibmanagerDefaultuserthemename == null ? comAdobeGraniteUiClientlibsImplHtmlLibraryManagerImplProperties.htmllibmanagerDefaultuserthemename == null : this.htmllibmanagerDefaultuserthemename.equals(comAdobeGraniteUiClientlibsImplHtmlLibraryManagerImplProperties.htmllibmanagerDefaultuserthemename)) &&
        (this.htmllibmanagerClientmanager == null ? comAdobeGraniteUiClientlibsImplHtmlLibraryManagerImplProperties.htmllibmanagerClientmanager == null : this.htmllibmanagerClientmanager.equals(comAdobeGraniteUiClientlibsImplHtmlLibraryManagerImplProperties.htmllibmanagerClientmanager)) &&
        (this.htmllibmanagerPathList == null ? comAdobeGraniteUiClientlibsImplHtmlLibraryManagerImplProperties.htmllibmanagerPathList == null : this.htmllibmanagerPathList.equals(comAdobeGraniteUiClientlibsImplHtmlLibraryManagerImplProperties.htmllibmanagerPathList)) &&
        (this.htmllibmanagerExcludedPathList == null ? comAdobeGraniteUiClientlibsImplHtmlLibraryManagerImplProperties.htmllibmanagerExcludedPathList == null : this.htmllibmanagerExcludedPathList.equals(comAdobeGraniteUiClientlibsImplHtmlLibraryManagerImplProperties.htmllibmanagerExcludedPathList)) &&
        (this.htmllibmanagerProcessorJs == null ? comAdobeGraniteUiClientlibsImplHtmlLibraryManagerImplProperties.htmllibmanagerProcessorJs == null : this.htmllibmanagerProcessorJs.equals(comAdobeGraniteUiClientlibsImplHtmlLibraryManagerImplProperties.htmllibmanagerProcessorJs)) &&
        (this.htmllibmanagerProcessorCss == null ? comAdobeGraniteUiClientlibsImplHtmlLibraryManagerImplProperties.htmllibmanagerProcessorCss == null : this.htmllibmanagerProcessorCss.equals(comAdobeGraniteUiClientlibsImplHtmlLibraryManagerImplProperties.htmllibmanagerProcessorCss)) &&
        (this.htmllibmanagerLongcachePatterns == null ? comAdobeGraniteUiClientlibsImplHtmlLibraryManagerImplProperties.htmllibmanagerLongcachePatterns == null : this.htmllibmanagerLongcachePatterns.equals(comAdobeGraniteUiClientlibsImplHtmlLibraryManagerImplProperties.htmllibmanagerLongcachePatterns)) &&
        (this.htmllibmanagerLongcacheFormat == null ? comAdobeGraniteUiClientlibsImplHtmlLibraryManagerImplProperties.htmllibmanagerLongcacheFormat == null : this.htmllibmanagerLongcacheFormat.equals(comAdobeGraniteUiClientlibsImplHtmlLibraryManagerImplProperties.htmllibmanagerLongcacheFormat)) &&
        (this.htmllibmanagerUseFileSystemOutputCache == null ? comAdobeGraniteUiClientlibsImplHtmlLibraryManagerImplProperties.htmllibmanagerUseFileSystemOutputCache == null : this.htmllibmanagerUseFileSystemOutputCache.equals(comAdobeGraniteUiClientlibsImplHtmlLibraryManagerImplProperties.htmllibmanagerUseFileSystemOutputCache)) &&
        (this.htmllibmanagerFileSystemOutputCacheLocation == null ? comAdobeGraniteUiClientlibsImplHtmlLibraryManagerImplProperties.htmllibmanagerFileSystemOutputCacheLocation == null : this.htmllibmanagerFileSystemOutputCacheLocation.equals(comAdobeGraniteUiClientlibsImplHtmlLibraryManagerImplProperties.htmllibmanagerFileSystemOutputCacheLocation)) &&
        (this.htmllibmanagerDisableReplacement == null ? comAdobeGraniteUiClientlibsImplHtmlLibraryManagerImplProperties.htmllibmanagerDisableReplacement == null : this.htmllibmanagerDisableReplacement.equals(comAdobeGraniteUiClientlibsImplHtmlLibraryManagerImplProperties.htmllibmanagerDisableReplacement));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.htmllibmanagerTiming == null ? 0: this.htmllibmanagerTiming.hashCode());
    result = 31 * result + (this.htmllibmanagerDebugInitJs == null ? 0: this.htmllibmanagerDebugInitJs.hashCode());
    result = 31 * result + (this.htmllibmanagerMinify == null ? 0: this.htmllibmanagerMinify.hashCode());
    result = 31 * result + (this.htmllibmanagerDebug == null ? 0: this.htmllibmanagerDebug.hashCode());
    result = 31 * result + (this.htmllibmanagerGzip == null ? 0: this.htmllibmanagerGzip.hashCode());
    result = 31 * result + (this.htmllibmanagerMaxDataUriSize == null ? 0: this.htmllibmanagerMaxDataUriSize.hashCode());
    result = 31 * result + (this.htmllibmanagerMaxage == null ? 0: this.htmllibmanagerMaxage.hashCode());
    result = 31 * result + (this.htmllibmanagerForceCQUrlInfo == null ? 0: this.htmllibmanagerForceCQUrlInfo.hashCode());
    result = 31 * result + (this.htmllibmanagerDefaultthemename == null ? 0: this.htmllibmanagerDefaultthemename.hashCode());
    result = 31 * result + (this.htmllibmanagerDefaultuserthemename == null ? 0: this.htmllibmanagerDefaultuserthemename.hashCode());
    result = 31 * result + (this.htmllibmanagerClientmanager == null ? 0: this.htmllibmanagerClientmanager.hashCode());
    result = 31 * result + (this.htmllibmanagerPathList == null ? 0: this.htmllibmanagerPathList.hashCode());
    result = 31 * result + (this.htmllibmanagerExcludedPathList == null ? 0: this.htmllibmanagerExcludedPathList.hashCode());
    result = 31 * result + (this.htmllibmanagerProcessorJs == null ? 0: this.htmllibmanagerProcessorJs.hashCode());
    result = 31 * result + (this.htmllibmanagerProcessorCss == null ? 0: this.htmllibmanagerProcessorCss.hashCode());
    result = 31 * result + (this.htmllibmanagerLongcachePatterns == null ? 0: this.htmllibmanagerLongcachePatterns.hashCode());
    result = 31 * result + (this.htmllibmanagerLongcacheFormat == null ? 0: this.htmllibmanagerLongcacheFormat.hashCode());
    result = 31 * result + (this.htmllibmanagerUseFileSystemOutputCache == null ? 0: this.htmllibmanagerUseFileSystemOutputCache.hashCode());
    result = 31 * result + (this.htmllibmanagerFileSystemOutputCacheLocation == null ? 0: this.htmllibmanagerFileSystemOutputCacheLocation.hashCode());
    result = 31 * result + (this.htmllibmanagerDisableReplacement == null ? 0: this.htmllibmanagerDisableReplacement.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class ComAdobeGraniteUiClientlibsImplHtmlLibraryManagerImplProperties {\n");
    
    sb.append("  htmllibmanagerTiming: ").append(htmllibmanagerTiming).append("\n");
    sb.append("  htmllibmanagerDebugInitJs: ").append(htmllibmanagerDebugInitJs).append("\n");
    sb.append("  htmllibmanagerMinify: ").append(htmllibmanagerMinify).append("\n");
    sb.append("  htmllibmanagerDebug: ").append(htmllibmanagerDebug).append("\n");
    sb.append("  htmllibmanagerGzip: ").append(htmllibmanagerGzip).append("\n");
    sb.append("  htmllibmanagerMaxDataUriSize: ").append(htmllibmanagerMaxDataUriSize).append("\n");
    sb.append("  htmllibmanagerMaxage: ").append(htmllibmanagerMaxage).append("\n");
    sb.append("  htmllibmanagerForceCQUrlInfo: ").append(htmllibmanagerForceCQUrlInfo).append("\n");
    sb.append("  htmllibmanagerDefaultthemename: ").append(htmllibmanagerDefaultthemename).append("\n");
    sb.append("  htmllibmanagerDefaultuserthemename: ").append(htmllibmanagerDefaultuserthemename).append("\n");
    sb.append("  htmllibmanagerClientmanager: ").append(htmllibmanagerClientmanager).append("\n");
    sb.append("  htmllibmanagerPathList: ").append(htmllibmanagerPathList).append("\n");
    sb.append("  htmllibmanagerExcludedPathList: ").append(htmllibmanagerExcludedPathList).append("\n");
    sb.append("  htmllibmanagerProcessorJs: ").append(htmllibmanagerProcessorJs).append("\n");
    sb.append("  htmllibmanagerProcessorCss: ").append(htmllibmanagerProcessorCss).append("\n");
    sb.append("  htmllibmanagerLongcachePatterns: ").append(htmllibmanagerLongcachePatterns).append("\n");
    sb.append("  htmllibmanagerLongcacheFormat: ").append(htmllibmanagerLongcacheFormat).append("\n");
    sb.append("  htmllibmanagerUseFileSystemOutputCache: ").append(htmllibmanagerUseFileSystemOutputCache).append("\n");
    sb.append("  htmllibmanagerFileSystemOutputCacheLocation: ").append(htmllibmanagerFileSystemOutputCacheLocation).append("\n");
    sb.append("  htmllibmanagerDisableReplacement: ").append(htmllibmanagerDisableReplacement).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
