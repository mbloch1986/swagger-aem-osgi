# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server.models.config_node_property_boolean import ConfigNodePropertyBoolean  # noqa: F401,E501
from openapi_server.models.config_node_property_string import ConfigNodePropertyString  # noqa: F401,E501
from openapi_server import util


class OrgApacheSlingHcCoreImplServletHealthCheckExecutorServletProperties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, servlet_path: ConfigNodePropertyString=None, disabled: ConfigNodePropertyBoolean=None, cors_access_control_allow_origin: ConfigNodePropertyString=None):  # noqa: E501
        """OrgApacheSlingHcCoreImplServletHealthCheckExecutorServletProperties - a model defined in OpenAPI

        :param servlet_path: The servlet_path of this OrgApacheSlingHcCoreImplServletHealthCheckExecutorServletProperties.  # noqa: E501
        :type servlet_path: ConfigNodePropertyString
        :param disabled: The disabled of this OrgApacheSlingHcCoreImplServletHealthCheckExecutorServletProperties.  # noqa: E501
        :type disabled: ConfigNodePropertyBoolean
        :param cors_access_control_allow_origin: The cors_access_control_allow_origin of this OrgApacheSlingHcCoreImplServletHealthCheckExecutorServletProperties.  # noqa: E501
        :type cors_access_control_allow_origin: ConfigNodePropertyString
        """
        self.openapi_types = {
            'servlet_path': ConfigNodePropertyString,
            'disabled': ConfigNodePropertyBoolean,
            'cors_access_control_allow_origin': ConfigNodePropertyString
        }

        self.attribute_map = {
            'servlet_path': 'servletPath',
            'disabled': 'disabled',
            'cors_access_control_allow_origin': 'cors.accessControlAllowOrigin'
        }

        self._servlet_path = servlet_path
        self._disabled = disabled
        self._cors_access_control_allow_origin = cors_access_control_allow_origin

    @classmethod
    def from_dict(cls, dikt) -> 'OrgApacheSlingHcCoreImplServletHealthCheckExecutorServletProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The orgApacheSlingHcCoreImplServletHealthCheckExecutorServletProperties of this OrgApacheSlingHcCoreImplServletHealthCheckExecutorServletProperties.  # noqa: E501
        :rtype: OrgApacheSlingHcCoreImplServletHealthCheckExecutorServletProperties
        """
        return util.deserialize_model(dikt, cls)

    @property
    def servlet_path(self) -> ConfigNodePropertyString:
        """Gets the servlet_path of this OrgApacheSlingHcCoreImplServletHealthCheckExecutorServletProperties.


        :return: The servlet_path of this OrgApacheSlingHcCoreImplServletHealthCheckExecutorServletProperties.
        :rtype: ConfigNodePropertyString
        """
        return self._servlet_path

    @servlet_path.setter
    def servlet_path(self, servlet_path: ConfigNodePropertyString):
        """Sets the servlet_path of this OrgApacheSlingHcCoreImplServletHealthCheckExecutorServletProperties.


        :param servlet_path: The servlet_path of this OrgApacheSlingHcCoreImplServletHealthCheckExecutorServletProperties.
        :type servlet_path: ConfigNodePropertyString
        """

        self._servlet_path = servlet_path

    @property
    def disabled(self) -> ConfigNodePropertyBoolean:
        """Gets the disabled of this OrgApacheSlingHcCoreImplServletHealthCheckExecutorServletProperties.


        :return: The disabled of this OrgApacheSlingHcCoreImplServletHealthCheckExecutorServletProperties.
        :rtype: ConfigNodePropertyBoolean
        """
        return self._disabled

    @disabled.setter
    def disabled(self, disabled: ConfigNodePropertyBoolean):
        """Sets the disabled of this OrgApacheSlingHcCoreImplServletHealthCheckExecutorServletProperties.


        :param disabled: The disabled of this OrgApacheSlingHcCoreImplServletHealthCheckExecutorServletProperties.
        :type disabled: ConfigNodePropertyBoolean
        """

        self._disabled = disabled

    @property
    def cors_access_control_allow_origin(self) -> ConfigNodePropertyString:
        """Gets the cors_access_control_allow_origin of this OrgApacheSlingHcCoreImplServletHealthCheckExecutorServletProperties.


        :return: The cors_access_control_allow_origin of this OrgApacheSlingHcCoreImplServletHealthCheckExecutorServletProperties.
        :rtype: ConfigNodePropertyString
        """
        return self._cors_access_control_allow_origin

    @cors_access_control_allow_origin.setter
    def cors_access_control_allow_origin(self, cors_access_control_allow_origin: ConfigNodePropertyString):
        """Sets the cors_access_control_allow_origin of this OrgApacheSlingHcCoreImplServletHealthCheckExecutorServletProperties.


        :param cors_access_control_allow_origin: The cors_access_control_allow_origin of this OrgApacheSlingHcCoreImplServletHealthCheckExecutorServletProperties.
        :type cors_access_control_allow_origin: ConfigNodePropertyString
        """

        self._cors_access_control_allow_origin = cors_access_control_allow_origin
