/**
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIComAdobeCqScreensAnalyticsImplScreensAnalyticsServiceImplProperties.h
 *
 * 
 */

#ifndef OAIComAdobeCqScreensAnalyticsImplScreensAnalyticsServiceImplProperties_H_
#define OAIComAdobeCqScreensAnalyticsImplScreensAnalyticsServiceImplProperties_H_

#include <QJsonObject>


#include "OAIOAIConfigNodePropertyDropDown.h"
#include "OAIOAIConfigNodePropertyInteger.h"
#include "OAIOAIConfigNodePropertyString.h"

#include "OAIObject.h"

namespace OpenAPI {

class OAIComAdobeCqScreensAnalyticsImplScreensAnalyticsServiceImplProperties: public OAIObject {
public:
    OAIComAdobeCqScreensAnalyticsImplScreensAnalyticsServiceImplProperties();
    OAIComAdobeCqScreensAnalyticsImplScreensAnalyticsServiceImplProperties(QString json);
    ~OAIComAdobeCqScreensAnalyticsImplScreensAnalyticsServiceImplProperties();
    void init();
    void cleanup();

    QString asJson () override;
    QJsonObject asJsonObject() override;
    void fromJsonObject(QJsonObject json) override;
    OAIComAdobeCqScreensAnalyticsImplScreensAnalyticsServiceImplProperties* fromJson(QString jsonString) override;

    OAIConfigNodePropertyString* getComAdobeCqScreensAnalyticsImplUrl();
    void setComAdobeCqScreensAnalyticsImplUrl(OAIConfigNodePropertyString* com_adobe_cq_screens_analytics_impl_url);

    OAIConfigNodePropertyString* getComAdobeCqScreensAnalyticsImplApikey();
    void setComAdobeCqScreensAnalyticsImplApikey(OAIConfigNodePropertyString* com_adobe_cq_screens_analytics_impl_apikey);

    OAIConfigNodePropertyString* getComAdobeCqScreensAnalyticsImplProject();
    void setComAdobeCqScreensAnalyticsImplProject(OAIConfigNodePropertyString* com_adobe_cq_screens_analytics_impl_project);

    OAIConfigNodePropertyDropDown* getComAdobeCqScreensAnalyticsImplEnvironment();
    void setComAdobeCqScreensAnalyticsImplEnvironment(OAIConfigNodePropertyDropDown* com_adobe_cq_screens_analytics_impl_environment);

    OAIConfigNodePropertyInteger* getComAdobeCqScreensAnalyticsImplSendFrequency();
    void setComAdobeCqScreensAnalyticsImplSendFrequency(OAIConfigNodePropertyInteger* com_adobe_cq_screens_analytics_impl_send_frequency);


    virtual bool isSet() override;

private:
    OAIConfigNodePropertyString* com_adobe_cq_screens_analytics_impl_url;
    bool m_com_adobe_cq_screens_analytics_impl_url_isSet;

    OAIConfigNodePropertyString* com_adobe_cq_screens_analytics_impl_apikey;
    bool m_com_adobe_cq_screens_analytics_impl_apikey_isSet;

    OAIConfigNodePropertyString* com_adobe_cq_screens_analytics_impl_project;
    bool m_com_adobe_cq_screens_analytics_impl_project_isSet;

    OAIConfigNodePropertyDropDown* com_adobe_cq_screens_analytics_impl_environment;
    bool m_com_adobe_cq_screens_analytics_impl_environment_isSet;

    OAIConfigNodePropertyInteger* com_adobe_cq_screens_analytics_impl_send_frequency;
    bool m_com_adobe_cq_screens_analytics_impl_send_frequency_isSet;

};

}

#endif /* OAIComAdobeCqScreensAnalyticsImplScreensAnalyticsServiceImplProperties_H_ */
