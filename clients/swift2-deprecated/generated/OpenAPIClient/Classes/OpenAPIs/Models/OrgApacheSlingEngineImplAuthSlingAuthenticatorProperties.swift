//
// OrgApacheSlingEngineImplAuthSlingAuthenticatorProperties.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation


public class OrgApacheSlingEngineImplAuthSlingAuthenticatorProperties: JSONEncodable {
    public var osgiHttpWhiteboardContextSelect: ConfigNodePropertyString?
    public var osgiHttpWhiteboardListener: ConfigNodePropertyString?
    public var authSudoCookie: ConfigNodePropertyString?
    public var authSudoParameter: ConfigNodePropertyString?
    public var authAnnonymous: ConfigNodePropertyBoolean?
    public var slingAuthRequirements: ConfigNodePropertyArray?
    public var slingAuthAnonymousUser: ConfigNodePropertyString?
    public var slingAuthAnonymousPassword: ConfigNodePropertyString?
    public var authHttp: ConfigNodePropertyDropDown?
    public var authHttpRealm: ConfigNodePropertyString?
    public var authUriSuffix: ConfigNodePropertyArray?

    public init() {}

    // MARK: JSONEncodable
    func encodeToJSON() -> AnyObject {
        var nillableDictionary = [String:AnyObject?]()
        nillableDictionary["osgi.http.whiteboard.context.select"] = self.osgiHttpWhiteboardContextSelect?.encodeToJSON()
        nillableDictionary["osgi.http.whiteboard.listener"] = self.osgiHttpWhiteboardListener?.encodeToJSON()
        nillableDictionary["auth.sudo.cookie"] = self.authSudoCookie?.encodeToJSON()
        nillableDictionary["auth.sudo.parameter"] = self.authSudoParameter?.encodeToJSON()
        nillableDictionary["auth.annonymous"] = self.authAnnonymous?.encodeToJSON()
        nillableDictionary["sling.auth.requirements"] = self.slingAuthRequirements?.encodeToJSON()
        nillableDictionary["sling.auth.anonymous.user"] = self.slingAuthAnonymousUser?.encodeToJSON()
        nillableDictionary["sling.auth.anonymous.password"] = self.slingAuthAnonymousPassword?.encodeToJSON()
        nillableDictionary["auth.http"] = self.authHttp?.encodeToJSON()
        nillableDictionary["auth.http.realm"] = self.authHttpRealm?.encodeToJSON()
        nillableDictionary["auth.uri.suffix"] = self.authUriSuffix?.encodeToJSON()
        let dictionary: [String:AnyObject] = APIHelper.rejectNil(nillableDictionary) ?? [:]
        return dictionary
    }
}
