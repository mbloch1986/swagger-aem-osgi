/**
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


#include "OAIOrgApacheFelixSystemreadyImplServicesCheckProperties.h"

#include "OAIHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace OpenAPI {

OAIOrgApacheFelixSystemreadyImplServicesCheckProperties::OAIOrgApacheFelixSystemreadyImplServicesCheckProperties(QString json) {
    init();
    this->fromJson(json);
}

OAIOrgApacheFelixSystemreadyImplServicesCheckProperties::OAIOrgApacheFelixSystemreadyImplServicesCheckProperties() {
    init();
}

OAIOrgApacheFelixSystemreadyImplServicesCheckProperties::~OAIOrgApacheFelixSystemreadyImplServicesCheckProperties() {
    this->cleanup();
}

void
OAIOrgApacheFelixSystemreadyImplServicesCheckProperties::init() {
    services_list = new OAIConfigNodePropertyArray();
    m_services_list_isSet = false;
    type = new OAIConfigNodePropertyDropDown();
    m_type_isSet = false;
}

void
OAIOrgApacheFelixSystemreadyImplServicesCheckProperties::cleanup() {
    if(services_list != nullptr) { 
        delete services_list;
    }
    if(type != nullptr) { 
        delete type;
    }
}

OAIOrgApacheFelixSystemreadyImplServicesCheckProperties*
OAIOrgApacheFelixSystemreadyImplServicesCheckProperties::fromJson(QString json) {
    QByteArray array (json.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
    return this;
}

void
OAIOrgApacheFelixSystemreadyImplServicesCheckProperties::fromJsonObject(QJsonObject pJson) {
    ::OpenAPI::setValue(&services_list, pJson["services.list"], "OAIConfigNodePropertyArray", "OAIConfigNodePropertyArray");
    
    ::OpenAPI::setValue(&type, pJson["type"], "OAIConfigNodePropertyDropDown", "OAIConfigNodePropertyDropDown");
    
}

QString
OAIOrgApacheFelixSystemreadyImplServicesCheckProperties::asJson ()
{
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject
OAIOrgApacheFelixSystemreadyImplServicesCheckProperties::asJsonObject() {
    QJsonObject obj;
    if((services_list != nullptr) && (services_list->isSet())){
        toJsonValue(QString("services.list"), services_list, obj, QString("OAIConfigNodePropertyArray"));
    }
    if((type != nullptr) && (type->isSet())){
        toJsonValue(QString("type"), type, obj, QString("OAIConfigNodePropertyDropDown"));
    }

    return obj;
}

OAIConfigNodePropertyArray*
OAIOrgApacheFelixSystemreadyImplServicesCheckProperties::getServicesList() {
    return services_list;
}
void
OAIOrgApacheFelixSystemreadyImplServicesCheckProperties::setServicesList(OAIConfigNodePropertyArray* services_list) {
    this->services_list = services_list;
    this->m_services_list_isSet = true;
}

OAIConfigNodePropertyDropDown*
OAIOrgApacheFelixSystemreadyImplServicesCheckProperties::getType() {
    return type;
}
void
OAIOrgApacheFelixSystemreadyImplServicesCheckProperties::setType(OAIConfigNodePropertyDropDown* type) {
    this->type = type;
    this->m_type_isSet = true;
}


bool
OAIOrgApacheFelixSystemreadyImplServicesCheckProperties::isSet(){
    bool isObjectUpdated = false;
    do{
        if(services_list != nullptr && services_list->isSet()){ isObjectUpdated = true; break;}
        if(type != nullptr && type->isSet()){ isObjectUpdated = true; break;}
    }while(false);
    return isObjectUpdated;
}
}

