/**
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 3.2.1-SNAPSHOT.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OrgApacheFelixScrScrServiceProperties.h
 *
 * 
 */

#ifndef OrgApacheFelixScrScrServiceProperties_H_
#define OrgApacheFelixScrScrServiceProperties_H_



#include "ConfigNodePropertyBoolean.h"
#include "ConfigNodePropertyDropDown.h"
#include "ConfigNodePropertyInteger.h"
#include <memory>

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
/// 
/// </summary>
class  OrgApacheFelixScrScrServiceProperties
{
public:
    OrgApacheFelixScrScrServiceProperties();
    virtual ~OrgApacheFelixScrScrServiceProperties();
    
    std::string toJsonString();
    void fromJsonString(std::string const& jsonString);

    /////////////////////////////////////////////
    /// OrgApacheFelixScrScrServiceProperties members
    
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyDropDown> getDsLoglevel() const;
    void setDsLoglevel(std::shared_ptr<ConfigNodePropertyDropDown> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyBoolean> getDsFactoryEnabled() const;
    void setDsFactoryEnabled(std::shared_ptr<ConfigNodePropertyBoolean> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyBoolean> getDsDelayedKeepInstances() const;
    void setDsDelayedKeepInstances(std::shared_ptr<ConfigNodePropertyBoolean> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyInteger> getDsLockTimeoutMilliseconds() const;
    void setDsLockTimeoutMilliseconds(std::shared_ptr<ConfigNodePropertyInteger> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyInteger> getDsStopTimeoutMilliseconds() const;
    void setDsStopTimeoutMilliseconds(std::shared_ptr<ConfigNodePropertyInteger> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyBoolean> getDsGlobalExtender() const;
    void setDsGlobalExtender(std::shared_ptr<ConfigNodePropertyBoolean> value);

protected:
    std::shared_ptr<ConfigNodePropertyDropDown> m_Ds_loglevel;
    std::shared_ptr<ConfigNodePropertyBoolean> m_Ds_factory_enabled;
    std::shared_ptr<ConfigNodePropertyBoolean> m_Ds_delayed_keepInstances;
    std::shared_ptr<ConfigNodePropertyInteger> m_Ds_lock_timeout_milliseconds;
    std::shared_ptr<ConfigNodePropertyInteger> m_Ds_stop_timeout_milliseconds;
    std::shared_ptr<ConfigNodePropertyBoolean> m_Ds_global_extender;
};

}
}
}
}

#endif /* OrgApacheFelixScrScrServiceProperties_H_ */
