/**
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


#include "OAIComDayCqDamCoreImplProcessSendTransientWorkflowCompletedEmailPrProperties.h"

#include "OAIHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace OpenAPI {

OAIComDayCqDamCoreImplProcessSendTransientWorkflowCompletedEmailPrProperties::OAIComDayCqDamCoreImplProcessSendTransientWorkflowCompletedEmailPrProperties(QString json) {
    this->fromJson(json);
}

OAIComDayCqDamCoreImplProcessSendTransientWorkflowCompletedEmailPrProperties::OAIComDayCqDamCoreImplProcessSendTransientWorkflowCompletedEmailPrProperties() {
    this->init();
}

OAIComDayCqDamCoreImplProcessSendTransientWorkflowCompletedEmailPrProperties::~OAIComDayCqDamCoreImplProcessSendTransientWorkflowCompletedEmailPrProperties() {
    
}

void
OAIComDayCqDamCoreImplProcessSendTransientWorkflowCompletedEmailPrProperties::init() {
    m_process_label_isSet = false;
    m_notify_on_complete_isSet = false;
}

void
OAIComDayCqDamCoreImplProcessSendTransientWorkflowCompletedEmailPrProperties::fromJson(QString jsonString) {
    QByteArray array (jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void
OAIComDayCqDamCoreImplProcessSendTransientWorkflowCompletedEmailPrProperties::fromJsonObject(QJsonObject json) {
    ::OpenAPI::fromJsonValue(process_label, json[QString("process.label")]);
    
    ::OpenAPI::fromJsonValue(notify_on_complete, json[QString("Notify on Complete")]);
    
}

QString
OAIComDayCqDamCoreImplProcessSendTransientWorkflowCompletedEmailPrProperties::asJson () const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject
OAIComDayCqDamCoreImplProcessSendTransientWorkflowCompletedEmailPrProperties::asJsonObject() const {
    QJsonObject obj;
	if(process_label.isSet()){
        obj.insert(QString("process.label"), ::OpenAPI::toJsonValue(process_label));
    }
	if(notify_on_complete.isSet()){
        obj.insert(QString("Notify on Complete"), ::OpenAPI::toJsonValue(notify_on_complete));
    }
    return obj;
}

OAIConfigNodePropertyString
OAIComDayCqDamCoreImplProcessSendTransientWorkflowCompletedEmailPrProperties::getProcessLabel() const {
    return process_label;
}
void
OAIComDayCqDamCoreImplProcessSendTransientWorkflowCompletedEmailPrProperties::setProcessLabel(const OAIConfigNodePropertyString &process_label) {
    this->process_label = process_label;
    this->m_process_label_isSet = true;
}

OAIConfigNodePropertyBoolean
OAIComDayCqDamCoreImplProcessSendTransientWorkflowCompletedEmailPrProperties::getNotifyOnComplete() const {
    return notify_on_complete;
}
void
OAIComDayCqDamCoreImplProcessSendTransientWorkflowCompletedEmailPrProperties::setNotifyOnComplete(const OAIConfigNodePropertyBoolean &notify_on_complete) {
    this->notify_on_complete = notify_on_complete;
    this->m_notify_on_complete_isSet = true;
}


bool
OAIComDayCqDamCoreImplProcessSendTransientWorkflowCompletedEmailPrProperties::isSet() const {
    bool isObjectUpdated = false;
    do{ 
        if(process_label.isSet()){ isObjectUpdated = true; break;}
    
        if(notify_on_complete.isSet()){ isObjectUpdated = true; break;}
    }while(false);
    return isObjectUpdated;
}

}

