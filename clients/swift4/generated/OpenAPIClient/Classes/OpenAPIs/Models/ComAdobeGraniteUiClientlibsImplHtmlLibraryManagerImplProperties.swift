//
// ComAdobeGraniteUiClientlibsImplHtmlLibraryManagerImplProperties.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation



public struct ComAdobeGraniteUiClientlibsImplHtmlLibraryManagerImplProperties: Codable {

    public var htmllibmanagerTiming: ConfigNodePropertyBoolean?
    public var htmllibmanagerDebugInitJs: ConfigNodePropertyString?
    public var htmllibmanagerMinify: ConfigNodePropertyBoolean?
    public var htmllibmanagerDebug: ConfigNodePropertyBoolean?
    public var htmllibmanagerGzip: ConfigNodePropertyBoolean?
    public var htmllibmanagerMaxDataUriSize: ConfigNodePropertyInteger?
    public var htmllibmanagerMaxage: ConfigNodePropertyInteger?
    public var htmllibmanagerForceCQUrlInfo: ConfigNodePropertyBoolean?
    public var htmllibmanagerDefaultthemename: ConfigNodePropertyString?
    public var htmllibmanagerDefaultuserthemename: ConfigNodePropertyString?
    public var htmllibmanagerClientmanager: ConfigNodePropertyString?
    public var htmllibmanagerPathList: ConfigNodePropertyArray?
    public var htmllibmanagerExcludedPathList: ConfigNodePropertyArray?
    public var htmllibmanagerProcessorJs: ConfigNodePropertyArray?
    public var htmllibmanagerProcessorCss: ConfigNodePropertyArray?
    public var htmllibmanagerLongcachePatterns: ConfigNodePropertyArray?
    public var htmllibmanagerLongcacheFormat: ConfigNodePropertyString?
    public var htmllibmanagerUseFileSystemOutputCache: ConfigNodePropertyBoolean?
    public var htmllibmanagerFileSystemOutputCacheLocation: ConfigNodePropertyString?
    public var htmllibmanagerDisableReplacement: ConfigNodePropertyArray?

    public init(htmllibmanagerTiming: ConfigNodePropertyBoolean?, htmllibmanagerDebugInitJs: ConfigNodePropertyString?, htmllibmanagerMinify: ConfigNodePropertyBoolean?, htmllibmanagerDebug: ConfigNodePropertyBoolean?, htmllibmanagerGzip: ConfigNodePropertyBoolean?, htmllibmanagerMaxDataUriSize: ConfigNodePropertyInteger?, htmllibmanagerMaxage: ConfigNodePropertyInteger?, htmllibmanagerForceCQUrlInfo: ConfigNodePropertyBoolean?, htmllibmanagerDefaultthemename: ConfigNodePropertyString?, htmllibmanagerDefaultuserthemename: ConfigNodePropertyString?, htmllibmanagerClientmanager: ConfigNodePropertyString?, htmllibmanagerPathList: ConfigNodePropertyArray?, htmllibmanagerExcludedPathList: ConfigNodePropertyArray?, htmllibmanagerProcessorJs: ConfigNodePropertyArray?, htmllibmanagerProcessorCss: ConfigNodePropertyArray?, htmllibmanagerLongcachePatterns: ConfigNodePropertyArray?, htmllibmanagerLongcacheFormat: ConfigNodePropertyString?, htmllibmanagerUseFileSystemOutputCache: ConfigNodePropertyBoolean?, htmllibmanagerFileSystemOutputCacheLocation: ConfigNodePropertyString?, htmllibmanagerDisableReplacement: ConfigNodePropertyArray?) {
        self.htmllibmanagerTiming = htmllibmanagerTiming
        self.htmllibmanagerDebugInitJs = htmllibmanagerDebugInitJs
        self.htmllibmanagerMinify = htmllibmanagerMinify
        self.htmllibmanagerDebug = htmllibmanagerDebug
        self.htmllibmanagerGzip = htmllibmanagerGzip
        self.htmllibmanagerMaxDataUriSize = htmllibmanagerMaxDataUriSize
        self.htmllibmanagerMaxage = htmllibmanagerMaxage
        self.htmllibmanagerForceCQUrlInfo = htmllibmanagerForceCQUrlInfo
        self.htmllibmanagerDefaultthemename = htmllibmanagerDefaultthemename
        self.htmllibmanagerDefaultuserthemename = htmllibmanagerDefaultuserthemename
        self.htmllibmanagerClientmanager = htmllibmanagerClientmanager
        self.htmllibmanagerPathList = htmllibmanagerPathList
        self.htmllibmanagerExcludedPathList = htmllibmanagerExcludedPathList
        self.htmllibmanagerProcessorJs = htmllibmanagerProcessorJs
        self.htmllibmanagerProcessorCss = htmllibmanagerProcessorCss
        self.htmllibmanagerLongcachePatterns = htmllibmanagerLongcachePatterns
        self.htmllibmanagerLongcacheFormat = htmllibmanagerLongcacheFormat
        self.htmllibmanagerUseFileSystemOutputCache = htmllibmanagerUseFileSystemOutputCache
        self.htmllibmanagerFileSystemOutputCacheLocation = htmllibmanagerFileSystemOutputCacheLocation
        self.htmllibmanagerDisableReplacement = htmllibmanagerDisableReplacement
    }

    public enum CodingKeys: String, CodingKey { 
        case htmllibmanagerTiming = "htmllibmanager.timing"
        case htmllibmanagerDebugInitJs = "htmllibmanager.debug.init.js"
        case htmllibmanagerMinify = "htmllibmanager.minify"
        case htmllibmanagerDebug = "htmllibmanager.debug"
        case htmllibmanagerGzip = "htmllibmanager.gzip"
        case htmllibmanagerMaxDataUriSize = "htmllibmanager.maxDataUriSize"
        case htmllibmanagerMaxage = "htmllibmanager.maxage"
        case htmllibmanagerForceCQUrlInfo = "htmllibmanager.forceCQUrlInfo"
        case htmllibmanagerDefaultthemename = "htmllibmanager.defaultthemename"
        case htmllibmanagerDefaultuserthemename = "htmllibmanager.defaultuserthemename"
        case htmllibmanagerClientmanager = "htmllibmanager.clientmanager"
        case htmllibmanagerPathList = "htmllibmanager.path.list"
        case htmllibmanagerExcludedPathList = "htmllibmanager.excluded.path.list"
        case htmllibmanagerProcessorJs = "htmllibmanager.processor.js"
        case htmllibmanagerProcessorCss = "htmllibmanager.processor.css"
        case htmllibmanagerLongcachePatterns = "htmllibmanager.longcache.patterns"
        case htmllibmanagerLongcacheFormat = "htmllibmanager.longcache.format"
        case htmllibmanagerUseFileSystemOutputCache = "htmllibmanager.useFileSystemOutputCache"
        case htmllibmanagerFileSystemOutputCacheLocation = "htmllibmanager.fileSystemOutputCacheLocation"
        case htmllibmanagerDisableReplacement = "htmllibmanager.disable.replacement"
    }


}

