/**
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIAdaptiveFormAndInteractiveCommunicationWebChannelConfigurationProperties.h
 *
 * 
 */

#ifndef OAIAdaptiveFormAndInteractiveCommunicationWebChannelConfigurationProperties_H_
#define OAIAdaptiveFormAndInteractiveCommunicationWebChannelConfigurationProperties_H_

#include <QJsonObject>


#include "OAIOAIConfigNodePropertyBoolean.h"
#include "OAIOAIConfigNodePropertyDropDown.h"
#include "OAIOAIConfigNodePropertyInteger.h"

#include "OAIObject.h"

namespace OpenAPI {

class OAIAdaptiveFormAndInteractiveCommunicationWebChannelConfigurationProperties: public OAIObject {
public:
    OAIAdaptiveFormAndInteractiveCommunicationWebChannelConfigurationProperties();
    OAIAdaptiveFormAndInteractiveCommunicationWebChannelConfigurationProperties(QString json);
    ~OAIAdaptiveFormAndInteractiveCommunicationWebChannelConfigurationProperties();
    void init();
    void cleanup();

    QString asJson () override;
    QJsonObject asJsonObject() override;
    void fromJsonObject(QJsonObject json) override;
    OAIAdaptiveFormAndInteractiveCommunicationWebChannelConfigurationProperties* fromJson(QString jsonString) override;

    OAIConfigNodePropertyBoolean* getShowPlaceholder();
    void setShowPlaceholder(OAIConfigNodePropertyBoolean* show_placeholder);

    OAIConfigNodePropertyInteger* getMaximumCacheEntries();
    void setMaximumCacheEntries(OAIConfigNodePropertyInteger* maximum_cache_entries);

    OAIConfigNodePropertyDropDown* getAfScriptingCompatversion();
    void setAfScriptingCompatversion(OAIConfigNodePropertyDropDown* af_scripting_compatversion);

    OAIConfigNodePropertyBoolean* getMakeFileNameUnique();
    void setMakeFileNameUnique(OAIConfigNodePropertyBoolean* make_file_name_unique);

    OAIConfigNodePropertyBoolean* getGeneratingCompliantData();
    void setGeneratingCompliantData(OAIConfigNodePropertyBoolean* generating_compliant_data);


    virtual bool isSet() override;

private:
    OAIConfigNodePropertyBoolean* show_placeholder;
    bool m_show_placeholder_isSet;

    OAIConfigNodePropertyInteger* maximum_cache_entries;
    bool m_maximum_cache_entries_isSet;

    OAIConfigNodePropertyDropDown* af_scripting_compatversion;
    bool m_af_scripting_compatversion_isSet;

    OAIConfigNodePropertyBoolean* make_file_name_unique;
    bool m_make_file_name_unique_isSet;

    OAIConfigNodePropertyBoolean* generating_compliant_data;
    bool m_generating_compliant_data_isSet;

};

}

#endif /* OAIAdaptiveFormAndInteractiveCommunicationWebChannelConfigurationProperties_H_ */
