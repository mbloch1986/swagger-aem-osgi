package org.openapitools.client.api

import argonaut._
import argonaut.EncodeJson._
import argonaut.DecodeJson._

import org.http4s.{EntityDecoder, EntityEncoder}
import org.http4s.argonaut._
import org.joda.time.DateTime
import ComAdobeCqSocialDatastoreAsImplASResourceProviderFactoryInfo._

case class ComAdobeCqSocialDatastoreAsImplASResourceProviderFactoryInfo (
  pid: Option[String],
title: Option[String],
description: Option[String],
properties: Option[ComAdobeCqSocialDatastoreAsImplASResourceProviderFactoryProperties])

object ComAdobeCqSocialDatastoreAsImplASResourceProviderFactoryInfo {
  import DateTimeCodecs._

  implicit val ComAdobeCqSocialDatastoreAsImplASResourceProviderFactoryInfoCodecJson: CodecJson[ComAdobeCqSocialDatastoreAsImplASResourceProviderFactoryInfo] = CodecJson.derive[ComAdobeCqSocialDatastoreAsImplASResourceProviderFactoryInfo]
  implicit val ComAdobeCqSocialDatastoreAsImplASResourceProviderFactoryInfoDecoder: EntityDecoder[ComAdobeCqSocialDatastoreAsImplASResourceProviderFactoryInfo] = jsonOf[ComAdobeCqSocialDatastoreAsImplASResourceProviderFactoryInfo]
  implicit val ComAdobeCqSocialDatastoreAsImplASResourceProviderFactoryInfoEncoder: EntityEncoder[ComAdobeCqSocialDatastoreAsImplASResourceProviderFactoryInfo] = jsonEncoderOf[ComAdobeCqSocialDatastoreAsImplASResourceProviderFactoryInfo]
}
