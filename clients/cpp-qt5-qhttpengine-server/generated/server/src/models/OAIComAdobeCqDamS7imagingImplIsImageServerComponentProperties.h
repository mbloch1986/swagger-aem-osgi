/**
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIComAdobeCqDamS7imagingImplIsImageServerComponentProperties.h
 *
 * 
 */

#ifndef OAIComAdobeCqDamS7imagingImplIsImageServerComponentProperties_H
#define OAIComAdobeCqDamS7imagingImplIsImageServerComponentProperties_H

#include <QJsonObject>


#include "OAIConfigNodePropertyBoolean.h"
#include "OAIConfigNodePropertyInteger.h"
#include "OAIConfigNodePropertyString.h"

#include "OAIObject.h"

namespace OpenAPI {

class OAIComAdobeCqDamS7imagingImplIsImageServerComponentProperties: public OAIObject {
public:
    OAIComAdobeCqDamS7imagingImplIsImageServerComponentProperties();
    OAIComAdobeCqDamS7imagingImplIsImageServerComponentProperties(QString json);
    ~OAIComAdobeCqDamS7imagingImplIsImageServerComponentProperties() override;
    void init();

    QString asJson () const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIConfigNodePropertyString getTcpPort() const;
    void setTcpPort(const OAIConfigNodePropertyString &tcp_port);

    OAIConfigNodePropertyBoolean getAllowRemoteAccess() const;
    void setAllowRemoteAccess(const OAIConfigNodePropertyBoolean &allow_remote_access);

    OAIConfigNodePropertyString getMaxRenderRgnPixels() const;
    void setMaxRenderRgnPixels(const OAIConfigNodePropertyString &max_render_rgn_pixels);

    OAIConfigNodePropertyString getMaxMessageSize() const;
    void setMaxMessageSize(const OAIConfigNodePropertyString &max_message_size);

    OAIConfigNodePropertyInteger getRandomAccessUrlTimeout() const;
    void setRandomAccessUrlTimeout(const OAIConfigNodePropertyInteger &random_access_url_timeout);

    OAIConfigNodePropertyInteger getWorkerThreads() const;
    void setWorkerThreads(const OAIConfigNodePropertyInteger &worker_threads);

    virtual bool isSet() const override;

private:
    OAIConfigNodePropertyString tcp_port;
    bool m_tcp_port_isSet;

    OAIConfigNodePropertyBoolean allow_remote_access;
    bool m_allow_remote_access_isSet;

    OAIConfigNodePropertyString max_render_rgn_pixels;
    bool m_max_render_rgn_pixels_isSet;

    OAIConfigNodePropertyString max_message_size;
    bool m_max_message_size_isSet;

    OAIConfigNodePropertyInteger random_access_url_timeout;
    bool m_random_access_url_timeout_isSet;

    OAIConfigNodePropertyInteger worker_threads;
    bool m_worker_threads_isSet;

};

}

#endif // OAIComAdobeCqDamS7imagingImplIsImageServerComponentProperties_H
