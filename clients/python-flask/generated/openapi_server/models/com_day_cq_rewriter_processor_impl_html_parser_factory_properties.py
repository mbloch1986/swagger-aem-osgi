# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server.models.config_node_property_array import ConfigNodePropertyArray  # noqa: F401,E501
from openapi_server.models.config_node_property_boolean import ConfigNodePropertyBoolean  # noqa: F401,E501
from openapi_server import util


class ComDayCqRewriterProcessorImplHtmlParserFactoryProperties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, htmlparser_process_tags: ConfigNodePropertyArray=None, htmlparser_preserve_camel_case: ConfigNodePropertyBoolean=None):  # noqa: E501
        """ComDayCqRewriterProcessorImplHtmlParserFactoryProperties - a model defined in OpenAPI

        :param htmlparser_process_tags: The htmlparser_process_tags of this ComDayCqRewriterProcessorImplHtmlParserFactoryProperties.  # noqa: E501
        :type htmlparser_process_tags: ConfigNodePropertyArray
        :param htmlparser_preserve_camel_case: The htmlparser_preserve_camel_case of this ComDayCqRewriterProcessorImplHtmlParserFactoryProperties.  # noqa: E501
        :type htmlparser_preserve_camel_case: ConfigNodePropertyBoolean
        """
        self.openapi_types = {
            'htmlparser_process_tags': ConfigNodePropertyArray,
            'htmlparser_preserve_camel_case': ConfigNodePropertyBoolean
        }

        self.attribute_map = {
            'htmlparser_process_tags': 'htmlparser.processTags',
            'htmlparser_preserve_camel_case': 'htmlparser.preserveCamelCase'
        }

        self._htmlparser_process_tags = htmlparser_process_tags
        self._htmlparser_preserve_camel_case = htmlparser_preserve_camel_case

    @classmethod
    def from_dict(cls, dikt) -> 'ComDayCqRewriterProcessorImplHtmlParserFactoryProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The comDayCqRewriterProcessorImplHtmlParserFactoryProperties of this ComDayCqRewriterProcessorImplHtmlParserFactoryProperties.  # noqa: E501
        :rtype: ComDayCqRewriterProcessorImplHtmlParserFactoryProperties
        """
        return util.deserialize_model(dikt, cls)

    @property
    def htmlparser_process_tags(self) -> ConfigNodePropertyArray:
        """Gets the htmlparser_process_tags of this ComDayCqRewriterProcessorImplHtmlParserFactoryProperties.


        :return: The htmlparser_process_tags of this ComDayCqRewriterProcessorImplHtmlParserFactoryProperties.
        :rtype: ConfigNodePropertyArray
        """
        return self._htmlparser_process_tags

    @htmlparser_process_tags.setter
    def htmlparser_process_tags(self, htmlparser_process_tags: ConfigNodePropertyArray):
        """Sets the htmlparser_process_tags of this ComDayCqRewriterProcessorImplHtmlParserFactoryProperties.


        :param htmlparser_process_tags: The htmlparser_process_tags of this ComDayCqRewriterProcessorImplHtmlParserFactoryProperties.
        :type htmlparser_process_tags: ConfigNodePropertyArray
        """

        self._htmlparser_process_tags = htmlparser_process_tags

    @property
    def htmlparser_preserve_camel_case(self) -> ConfigNodePropertyBoolean:
        """Gets the htmlparser_preserve_camel_case of this ComDayCqRewriterProcessorImplHtmlParserFactoryProperties.


        :return: The htmlparser_preserve_camel_case of this ComDayCqRewriterProcessorImplHtmlParserFactoryProperties.
        :rtype: ConfigNodePropertyBoolean
        """
        return self._htmlparser_preserve_camel_case

    @htmlparser_preserve_camel_case.setter
    def htmlparser_preserve_camel_case(self, htmlparser_preserve_camel_case: ConfigNodePropertyBoolean):
        """Sets the htmlparser_preserve_camel_case of this ComDayCqRewriterProcessorImplHtmlParserFactoryProperties.


        :param htmlparser_preserve_camel_case: The htmlparser_preserve_camel_case of this ComDayCqRewriterProcessorImplHtmlParserFactoryProperties.
        :type htmlparser_preserve_camel_case: ConfigNodePropertyBoolean
        """

        self._htmlparser_preserve_camel_case = htmlparser_preserve_camel_case
