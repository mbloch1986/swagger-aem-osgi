/**
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIComDayCqAnalyticsTestandtargetImplTestandtargetHttpClientImplProperties.h
 *
 * 
 */

#ifndef OAIComDayCqAnalyticsTestandtargetImplTestandtargetHttpClientImplProperties_H_
#define OAIComDayCqAnalyticsTestandtargetImplTestandtargetHttpClientImplProperties_H_

#include <QJsonObject>


#include "OAIOAIConfigNodePropertyInteger.h"
#include "OAIOAIConfigNodePropertyString.h"

#include "OAIObject.h"

namespace OpenAPI {

class OAIComDayCqAnalyticsTestandtargetImplTestandtargetHttpClientImplProperties: public OAIObject {
public:
    OAIComDayCqAnalyticsTestandtargetImplTestandtargetHttpClientImplProperties();
    OAIComDayCqAnalyticsTestandtargetImplTestandtargetHttpClientImplProperties(QString json);
    ~OAIComDayCqAnalyticsTestandtargetImplTestandtargetHttpClientImplProperties();
    void init();
    void cleanup();

    QString asJson () override;
    QJsonObject asJsonObject() override;
    void fromJsonObject(QJsonObject json) override;
    OAIComDayCqAnalyticsTestandtargetImplTestandtargetHttpClientImplProperties* fromJson(QString jsonString) override;

    OAIConfigNodePropertyString* getCqAnalyticsTestandtargetApiUrl();
    void setCqAnalyticsTestandtargetApiUrl(OAIConfigNodePropertyString* cq_analytics_testandtarget_api_url);

    OAIConfigNodePropertyInteger* getCqAnalyticsTestandtargetTimeout();
    void setCqAnalyticsTestandtargetTimeout(OAIConfigNodePropertyInteger* cq_analytics_testandtarget_timeout);

    OAIConfigNodePropertyInteger* getCqAnalyticsTestandtargetSockettimeout();
    void setCqAnalyticsTestandtargetSockettimeout(OAIConfigNodePropertyInteger* cq_analytics_testandtarget_sockettimeout);

    OAIConfigNodePropertyString* getCqAnalyticsTestandtargetRecommendationsUrlReplace();
    void setCqAnalyticsTestandtargetRecommendationsUrlReplace(OAIConfigNodePropertyString* cq_analytics_testandtarget_recommendations_url_replace);

    OAIConfigNodePropertyString* getCqAnalyticsTestandtargetRecommendationsUrlReplacewith();
    void setCqAnalyticsTestandtargetRecommendationsUrlReplacewith(OAIConfigNodePropertyString* cq_analytics_testandtarget_recommendations_url_replacewith);


    virtual bool isSet() override;

private:
    OAIConfigNodePropertyString* cq_analytics_testandtarget_api_url;
    bool m_cq_analytics_testandtarget_api_url_isSet;

    OAIConfigNodePropertyInteger* cq_analytics_testandtarget_timeout;
    bool m_cq_analytics_testandtarget_timeout_isSet;

    OAIConfigNodePropertyInteger* cq_analytics_testandtarget_sockettimeout;
    bool m_cq_analytics_testandtarget_sockettimeout_isSet;

    OAIConfigNodePropertyString* cq_analytics_testandtarget_recommendations_url_replace;
    bool m_cq_analytics_testandtarget_recommendations_url_replace_isSet;

    OAIConfigNodePropertyString* cq_analytics_testandtarget_recommendations_url_replacewith;
    bool m_cq_analytics_testandtarget_recommendations_url_replacewith_isSet;

};

}

#endif /* OAIComDayCqAnalyticsTestandtargetImplTestandtargetHttpClientImplProperties_H_ */
