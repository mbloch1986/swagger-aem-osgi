package org.openapitools.client.api

import argonaut._
import argonaut.EncodeJson._
import argonaut.DecodeJson._

import org.http4s.{EntityDecoder, EntityEncoder}
import org.http4s.argonaut._
import org.joda.time.DateTime
import ComAdobeCqDamCfmImplContentRewriterParRangeFilterProperties._

case class ComAdobeCqDamCfmImplContentRewriterParRangeFilterProperties (
  pipelineType: Option[ConfigNodePropertyString])

object ComAdobeCqDamCfmImplContentRewriterParRangeFilterProperties {
  import DateTimeCodecs._

  implicit val ComAdobeCqDamCfmImplContentRewriterParRangeFilterPropertiesCodecJson: CodecJson[ComAdobeCqDamCfmImplContentRewriterParRangeFilterProperties] = CodecJson.derive[ComAdobeCqDamCfmImplContentRewriterParRangeFilterProperties]
  implicit val ComAdobeCqDamCfmImplContentRewriterParRangeFilterPropertiesDecoder: EntityDecoder[ComAdobeCqDamCfmImplContentRewriterParRangeFilterProperties] = jsonOf[ComAdobeCqDamCfmImplContentRewriterParRangeFilterProperties]
  implicit val ComAdobeCqDamCfmImplContentRewriterParRangeFilterPropertiesEncoder: EntityEncoder[ComAdobeCqDamCfmImplContentRewriterParRangeFilterProperties] = jsonEncoderOf[ComAdobeCqDamCfmImplContentRewriterParRangeFilterProperties]
}
