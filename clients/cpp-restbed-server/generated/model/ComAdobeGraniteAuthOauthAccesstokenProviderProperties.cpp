/**
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 3.2.1-SNAPSHOT.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */



#include "ComAdobeGraniteAuthOauthAccesstokenProviderProperties.h"

#include <string>
#include <sstream>
#include <boost/property_tree/ptree.hpp>
#include <boost/property_tree/json_parser.hpp>

using boost::property_tree::ptree;
using boost::property_tree::read_json;
using boost::property_tree::write_json;

namespace org {
namespace openapitools {
namespace server {
namespace model {

ComAdobeGraniteAuthOauthAccesstokenProviderProperties::ComAdobeGraniteAuthOauthAccesstokenProviderProperties()
{
    
}

ComAdobeGraniteAuthOauthAccesstokenProviderProperties::~ComAdobeGraniteAuthOauthAccesstokenProviderProperties()
{
}

std::string ComAdobeGraniteAuthOauthAccesstokenProviderProperties::toJsonString()
{
	std::stringstream ss;
	ptree pt;
	write_json(ss, pt, false);
	return ss.str();
}

void ComAdobeGraniteAuthOauthAccesstokenProviderProperties::fromJsonString(std::string const& jsonString)
{
	std::stringstream ss(jsonString);
	ptree pt;
	read_json(ss,pt);
}

std::shared_ptr<ConfigNodePropertyString> ComAdobeGraniteAuthOauthAccesstokenProviderProperties::getName() const
{
    return m_Name;
}
void ComAdobeGraniteAuthOauthAccesstokenProviderProperties::setName(std::shared_ptr<ConfigNodePropertyString> value)
{
    m_Name = value;
}
std::shared_ptr<ConfigNodePropertyString> ComAdobeGraniteAuthOauthAccesstokenProviderProperties::getAuthTokenProviderTitle() const
{
    return m_Auth_token_provider_title;
}
void ComAdobeGraniteAuthOauthAccesstokenProviderProperties::setAuthTokenProviderTitle(std::shared_ptr<ConfigNodePropertyString> value)
{
    m_Auth_token_provider_title = value;
}
std::shared_ptr<ConfigNodePropertyArray> ComAdobeGraniteAuthOauthAccesstokenProviderProperties::getAuthTokenProviderDefaultClaims() const
{
    return m_Auth_token_provider_default_claims;
}
void ComAdobeGraniteAuthOauthAccesstokenProviderProperties::setAuthTokenProviderDefaultClaims(std::shared_ptr<ConfigNodePropertyArray> value)
{
    m_Auth_token_provider_default_claims = value;
}
std::shared_ptr<ConfigNodePropertyString> ComAdobeGraniteAuthOauthAccesstokenProviderProperties::getAuthTokenProviderEndpoint() const
{
    return m_Auth_token_provider_endpoint;
}
void ComAdobeGraniteAuthOauthAccesstokenProviderProperties::setAuthTokenProviderEndpoint(std::shared_ptr<ConfigNodePropertyString> value)
{
    m_Auth_token_provider_endpoint = value;
}
std::shared_ptr<ConfigNodePropertyString> ComAdobeGraniteAuthOauthAccesstokenProviderProperties::getAuthAccessTokenRequest() const
{
    return m_Auth_access_token_request;
}
void ComAdobeGraniteAuthOauthAccesstokenProviderProperties::setAuthAccessTokenRequest(std::shared_ptr<ConfigNodePropertyString> value)
{
    m_Auth_access_token_request = value;
}
std::shared_ptr<ConfigNodePropertyString> ComAdobeGraniteAuthOauthAccesstokenProviderProperties::getAuthTokenProviderKeypairAlias() const
{
    return m_Auth_token_provider_keypair_alias;
}
void ComAdobeGraniteAuthOauthAccesstokenProviderProperties::setAuthTokenProviderKeypairAlias(std::shared_ptr<ConfigNodePropertyString> value)
{
    m_Auth_token_provider_keypair_alias = value;
}
std::shared_ptr<ConfigNodePropertyInteger> ComAdobeGraniteAuthOauthAccesstokenProviderProperties::getAuthTokenProviderConnTimeout() const
{
    return m_Auth_token_provider_conn_timeout;
}
void ComAdobeGraniteAuthOauthAccesstokenProviderProperties::setAuthTokenProviderConnTimeout(std::shared_ptr<ConfigNodePropertyInteger> value)
{
    m_Auth_token_provider_conn_timeout = value;
}
std::shared_ptr<ConfigNodePropertyInteger> ComAdobeGraniteAuthOauthAccesstokenProviderProperties::getAuthTokenProviderSoTimeout() const
{
    return m_Auth_token_provider_so_timeout;
}
void ComAdobeGraniteAuthOauthAccesstokenProviderProperties::setAuthTokenProviderSoTimeout(std::shared_ptr<ConfigNodePropertyInteger> value)
{
    m_Auth_token_provider_so_timeout = value;
}
std::shared_ptr<ConfigNodePropertyString> ComAdobeGraniteAuthOauthAccesstokenProviderProperties::getAuthTokenProviderClientId() const
{
    return m_Auth_token_provider_client_id;
}
void ComAdobeGraniteAuthOauthAccesstokenProviderProperties::setAuthTokenProviderClientId(std::shared_ptr<ConfigNodePropertyString> value)
{
    m_Auth_token_provider_client_id = value;
}
std::shared_ptr<ConfigNodePropertyString> ComAdobeGraniteAuthOauthAccesstokenProviderProperties::getAuthTokenProviderScope() const
{
    return m_Auth_token_provider_scope;
}
void ComAdobeGraniteAuthOauthAccesstokenProviderProperties::setAuthTokenProviderScope(std::shared_ptr<ConfigNodePropertyString> value)
{
    m_Auth_token_provider_scope = value;
}
std::shared_ptr<ConfigNodePropertyBoolean> ComAdobeGraniteAuthOauthAccesstokenProviderProperties::getAuthTokenProviderReuseAccessToken() const
{
    return m_Auth_token_provider_reuse_access_token;
}
void ComAdobeGraniteAuthOauthAccesstokenProviderProperties::setAuthTokenProviderReuseAccessToken(std::shared_ptr<ConfigNodePropertyBoolean> value)
{
    m_Auth_token_provider_reuse_access_token = value;
}
std::shared_ptr<ConfigNodePropertyBoolean> ComAdobeGraniteAuthOauthAccesstokenProviderProperties::getAuthTokenProviderRelaxedSsl() const
{
    return m_Auth_token_provider_relaxed_ssl;
}
void ComAdobeGraniteAuthOauthAccesstokenProviderProperties::setAuthTokenProviderRelaxedSsl(std::shared_ptr<ConfigNodePropertyBoolean> value)
{
    m_Auth_token_provider_relaxed_ssl = value;
}
std::shared_ptr<ConfigNodePropertyString> ComAdobeGraniteAuthOauthAccesstokenProviderProperties::getTokenRequestCustomizerType() const
{
    return m_Token_request_customizer_type;
}
void ComAdobeGraniteAuthOauthAccesstokenProviderProperties::setTokenRequestCustomizerType(std::shared_ptr<ConfigNodePropertyString> value)
{
    m_Token_request_customizer_type = value;
}
std::shared_ptr<ConfigNodePropertyString> ComAdobeGraniteAuthOauthAccesstokenProviderProperties::getAuthTokenValidatorType() const
{
    return m_Auth_token_validator_type;
}
void ComAdobeGraniteAuthOauthAccesstokenProviderProperties::setAuthTokenValidatorType(std::shared_ptr<ConfigNodePropertyString> value)
{
    m_Auth_token_validator_type = value;
}

}
}
}
}

