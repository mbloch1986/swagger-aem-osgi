/* 
 * Adobe Experience Manager OSGI config (AEM) API
 *
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Org.OpenAPITools.Client.OpenAPIDateConverter;

namespace Org.OpenAPITools.Model
{
    /// <summary>
    /// ComAdobeCqSocialUserImplTransportHttpToPublisherProperties
    /// </summary>
    [DataContract]
    public partial class ComAdobeCqSocialUserImplTransportHttpToPublisherProperties :  IEquatable<ComAdobeCqSocialUserImplTransportHttpToPublisherProperties>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ComAdobeCqSocialUserImplTransportHttpToPublisherProperties" /> class.
        /// </summary>
        /// <param name="enable">enable.</param>
        /// <param name="agentConfiguration">agentConfiguration.</param>
        /// <param name="contextPath">contextPath.</param>
        /// <param name="disabledCipherSuites">disabledCipherSuites.</param>
        /// <param name="enabledCipherSuites">enabledCipherSuites.</param>
        public ComAdobeCqSocialUserImplTransportHttpToPublisherProperties(ConfigNodePropertyBoolean enable = default(ConfigNodePropertyBoolean), ConfigNodePropertyArray agentConfiguration = default(ConfigNodePropertyArray), ConfigNodePropertyString contextPath = default(ConfigNodePropertyString), ConfigNodePropertyArray disabledCipherSuites = default(ConfigNodePropertyArray), ConfigNodePropertyArray enabledCipherSuites = default(ConfigNodePropertyArray))
        {
            this.Enable = enable;
            this.AgentConfiguration = agentConfiguration;
            this.ContextPath = contextPath;
            this.DisabledCipherSuites = disabledCipherSuites;
            this.EnabledCipherSuites = enabledCipherSuites;
        }
        
        /// <summary>
        /// Gets or Sets Enable
        /// </summary>
        [DataMember(Name="enable", EmitDefaultValue=false)]
        public ConfigNodePropertyBoolean Enable { get; set; }

        /// <summary>
        /// Gets or Sets AgentConfiguration
        /// </summary>
        [DataMember(Name="agent.configuration", EmitDefaultValue=false)]
        public ConfigNodePropertyArray AgentConfiguration { get; set; }

        /// <summary>
        /// Gets or Sets ContextPath
        /// </summary>
        [DataMember(Name="context.path", EmitDefaultValue=false)]
        public ConfigNodePropertyString ContextPath { get; set; }

        /// <summary>
        /// Gets or Sets DisabledCipherSuites
        /// </summary>
        [DataMember(Name="disabled.cipher.suites", EmitDefaultValue=false)]
        public ConfigNodePropertyArray DisabledCipherSuites { get; set; }

        /// <summary>
        /// Gets or Sets EnabledCipherSuites
        /// </summary>
        [DataMember(Name="enabled.cipher.suites", EmitDefaultValue=false)]
        public ConfigNodePropertyArray EnabledCipherSuites { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class ComAdobeCqSocialUserImplTransportHttpToPublisherProperties {\n");
            sb.Append("  Enable: ").Append(Enable).Append("\n");
            sb.Append("  AgentConfiguration: ").Append(AgentConfiguration).Append("\n");
            sb.Append("  ContextPath: ").Append(ContextPath).Append("\n");
            sb.Append("  DisabledCipherSuites: ").Append(DisabledCipherSuites).Append("\n");
            sb.Append("  EnabledCipherSuites: ").Append(EnabledCipherSuites).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as ComAdobeCqSocialUserImplTransportHttpToPublisherProperties);
        }

        /// <summary>
        /// Returns true if ComAdobeCqSocialUserImplTransportHttpToPublisherProperties instances are equal
        /// </summary>
        /// <param name="input">Instance of ComAdobeCqSocialUserImplTransportHttpToPublisherProperties to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(ComAdobeCqSocialUserImplTransportHttpToPublisherProperties input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.Enable == input.Enable ||
                    (this.Enable != null &&
                    this.Enable.Equals(input.Enable))
                ) && 
                (
                    this.AgentConfiguration == input.AgentConfiguration ||
                    (this.AgentConfiguration != null &&
                    this.AgentConfiguration.Equals(input.AgentConfiguration))
                ) && 
                (
                    this.ContextPath == input.ContextPath ||
                    (this.ContextPath != null &&
                    this.ContextPath.Equals(input.ContextPath))
                ) && 
                (
                    this.DisabledCipherSuites == input.DisabledCipherSuites ||
                    (this.DisabledCipherSuites != null &&
                    this.DisabledCipherSuites.Equals(input.DisabledCipherSuites))
                ) && 
                (
                    this.EnabledCipherSuites == input.EnabledCipherSuites ||
                    (this.EnabledCipherSuites != null &&
                    this.EnabledCipherSuites.Equals(input.EnabledCipherSuites))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Enable != null)
                    hashCode = hashCode * 59 + this.Enable.GetHashCode();
                if (this.AgentConfiguration != null)
                    hashCode = hashCode * 59 + this.AgentConfiguration.GetHashCode();
                if (this.ContextPath != null)
                    hashCode = hashCode * 59 + this.ContextPath.GetHashCode();
                if (this.DisabledCipherSuites != null)
                    hashCode = hashCode * 59 + this.DisabledCipherSuites.GetHashCode();
                if (this.EnabledCipherSuites != null)
                    hashCode = hashCode * 59 + this.EnabledCipherSuites.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
