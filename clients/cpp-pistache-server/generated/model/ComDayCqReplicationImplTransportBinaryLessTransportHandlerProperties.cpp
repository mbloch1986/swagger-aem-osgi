/**
* Adobe Experience Manager OSGI config (AEM) API
* Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
*
* OpenAPI spec version: 1.0.0-pre.0
* Contact: opensource@shinesolutions.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/


#include "ComDayCqReplicationImplTransportBinaryLessTransportHandlerProperties.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

ComDayCqReplicationImplTransportBinaryLessTransportHandlerProperties::ComDayCqReplicationImplTransportBinaryLessTransportHandlerProperties()
{
    m_Disabled_cipher_suitesIsSet = false;
    m_Enabled_cipher_suitesIsSet = false;
    
}

ComDayCqReplicationImplTransportBinaryLessTransportHandlerProperties::~ComDayCqReplicationImplTransportBinaryLessTransportHandlerProperties()
{
}

void ComDayCqReplicationImplTransportBinaryLessTransportHandlerProperties::validate()
{
    // TODO: implement validation
}

nlohmann::json ComDayCqReplicationImplTransportBinaryLessTransportHandlerProperties::toJson() const
{
    nlohmann::json val = nlohmann::json::object();

    if(m_Disabled_cipher_suitesIsSet)
    {
        val["disabled.cipher.suites"] = ModelBase::toJson(m_Disabled_cipher_suites);
    }
    if(m_Enabled_cipher_suitesIsSet)
    {
        val["enabled.cipher.suites"] = ModelBase::toJson(m_Enabled_cipher_suites);
    }
    

    return val;
}

void ComDayCqReplicationImplTransportBinaryLessTransportHandlerProperties::fromJson(nlohmann::json& val)
{
    if(val.find("disabled.cipher.suites") != val.end())
    {
        if(!val["disabled.cipher.suites"].is_null())
        {
            ConfigNodePropertyArray newItem;
            newItem.fromJson(val["disabled.cipher.suites"]);
            setDisabledCipherSuites( newItem );
        }
        
    }
    if(val.find("enabled.cipher.suites") != val.end())
    {
        if(!val["enabled.cipher.suites"].is_null())
        {
            ConfigNodePropertyArray newItem;
            newItem.fromJson(val["enabled.cipher.suites"]);
            setEnabledCipherSuites( newItem );
        }
        
    }
    
}


ConfigNodePropertyArray ComDayCqReplicationImplTransportBinaryLessTransportHandlerProperties::getDisabledCipherSuites() const
{
    return m_Disabled_cipher_suites;
}
void ComDayCqReplicationImplTransportBinaryLessTransportHandlerProperties::setDisabledCipherSuites(ConfigNodePropertyArray const& value)
{
    m_Disabled_cipher_suites = value;
    m_Disabled_cipher_suitesIsSet = true;
}
bool ComDayCqReplicationImplTransportBinaryLessTransportHandlerProperties::disabledCipherSuitesIsSet() const
{
    return m_Disabled_cipher_suitesIsSet;
}
void ComDayCqReplicationImplTransportBinaryLessTransportHandlerProperties::unsetDisabled_cipher_suites()
{
    m_Disabled_cipher_suitesIsSet = false;
}
ConfigNodePropertyArray ComDayCqReplicationImplTransportBinaryLessTransportHandlerProperties::getEnabledCipherSuites() const
{
    return m_Enabled_cipher_suites;
}
void ComDayCqReplicationImplTransportBinaryLessTransportHandlerProperties::setEnabledCipherSuites(ConfigNodePropertyArray const& value)
{
    m_Enabled_cipher_suites = value;
    m_Enabled_cipher_suitesIsSet = true;
}
bool ComDayCqReplicationImplTransportBinaryLessTransportHandlerProperties::enabledCipherSuitesIsSet() const
{
    return m_Enabled_cipher_suitesIsSet;
}
void ComDayCqReplicationImplTransportBinaryLessTransportHandlerProperties::unsetEnabled_cipher_suites()
{
    m_Enabled_cipher_suitesIsSet = false;
}

}
}
}
}

