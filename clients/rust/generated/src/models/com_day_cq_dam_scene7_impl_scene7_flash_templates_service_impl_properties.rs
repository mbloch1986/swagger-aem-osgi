/* 
 * Adobe Experience Manager OSGI config (AEM) API
 *
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 * Generated by: https://openapi-generator.tech
 */


#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct ComDayCqDamScene7ImplScene7FlashTemplatesServiceImplProperties {
  #[serde(rename = "scene7FlashTemplates.rti")]
  scene7_flash_templates_rti: Option<::models::ConfigNodePropertyString>,
  #[serde(rename = "scene7FlashTemplates.rsi")]
  scene7_flash_templates_rsi: Option<::models::ConfigNodePropertyString>,
  #[serde(rename = "scene7FlashTemplates.rb")]
  scene7_flash_templates_rb: Option<::models::ConfigNodePropertyString>,
  #[serde(rename = "scene7FlashTemplates.rurl")]
  scene7_flash_templates_rurl: Option<::models::ConfigNodePropertyString>,
  #[serde(rename = "scene7FlashTemplate.urlFormatParameter")]
  scene7_flash_template_url_format_parameter: Option<::models::ConfigNodePropertyString>
}

impl ComDayCqDamScene7ImplScene7FlashTemplatesServiceImplProperties {
  pub fn new() -> ComDayCqDamScene7ImplScene7FlashTemplatesServiceImplProperties {
    ComDayCqDamScene7ImplScene7FlashTemplatesServiceImplProperties {
      scene7_flash_templates_rti: None,
      scene7_flash_templates_rsi: None,
      scene7_flash_templates_rb: None,
      scene7_flash_templates_rurl: None,
      scene7_flash_template_url_format_parameter: None
    }
  }

  pub fn set_scene7_flash_templates_rti(&mut self, scene7_flash_templates_rti: ::models::ConfigNodePropertyString) {
    self.scene7_flash_templates_rti = Some(scene7_flash_templates_rti);
  }

  pub fn with_scene7_flash_templates_rti(mut self, scene7_flash_templates_rti: ::models::ConfigNodePropertyString) -> ComDayCqDamScene7ImplScene7FlashTemplatesServiceImplProperties {
    self.scene7_flash_templates_rti = Some(scene7_flash_templates_rti);
    self
  }

  pub fn scene7_flash_templates_rti(&self) -> Option<&::models::ConfigNodePropertyString> {
    self.scene7_flash_templates_rti.as_ref()
  }

  pub fn reset_scene7_flash_templates_rti(&mut self) {
    self.scene7_flash_templates_rti = None;
  }

  pub fn set_scene7_flash_templates_rsi(&mut self, scene7_flash_templates_rsi: ::models::ConfigNodePropertyString) {
    self.scene7_flash_templates_rsi = Some(scene7_flash_templates_rsi);
  }

  pub fn with_scene7_flash_templates_rsi(mut self, scene7_flash_templates_rsi: ::models::ConfigNodePropertyString) -> ComDayCqDamScene7ImplScene7FlashTemplatesServiceImplProperties {
    self.scene7_flash_templates_rsi = Some(scene7_flash_templates_rsi);
    self
  }

  pub fn scene7_flash_templates_rsi(&self) -> Option<&::models::ConfigNodePropertyString> {
    self.scene7_flash_templates_rsi.as_ref()
  }

  pub fn reset_scene7_flash_templates_rsi(&mut self) {
    self.scene7_flash_templates_rsi = None;
  }

  pub fn set_scene7_flash_templates_rb(&mut self, scene7_flash_templates_rb: ::models::ConfigNodePropertyString) {
    self.scene7_flash_templates_rb = Some(scene7_flash_templates_rb);
  }

  pub fn with_scene7_flash_templates_rb(mut self, scene7_flash_templates_rb: ::models::ConfigNodePropertyString) -> ComDayCqDamScene7ImplScene7FlashTemplatesServiceImplProperties {
    self.scene7_flash_templates_rb = Some(scene7_flash_templates_rb);
    self
  }

  pub fn scene7_flash_templates_rb(&self) -> Option<&::models::ConfigNodePropertyString> {
    self.scene7_flash_templates_rb.as_ref()
  }

  pub fn reset_scene7_flash_templates_rb(&mut self) {
    self.scene7_flash_templates_rb = None;
  }

  pub fn set_scene7_flash_templates_rurl(&mut self, scene7_flash_templates_rurl: ::models::ConfigNodePropertyString) {
    self.scene7_flash_templates_rurl = Some(scene7_flash_templates_rurl);
  }

  pub fn with_scene7_flash_templates_rurl(mut self, scene7_flash_templates_rurl: ::models::ConfigNodePropertyString) -> ComDayCqDamScene7ImplScene7FlashTemplatesServiceImplProperties {
    self.scene7_flash_templates_rurl = Some(scene7_flash_templates_rurl);
    self
  }

  pub fn scene7_flash_templates_rurl(&self) -> Option<&::models::ConfigNodePropertyString> {
    self.scene7_flash_templates_rurl.as_ref()
  }

  pub fn reset_scene7_flash_templates_rurl(&mut self) {
    self.scene7_flash_templates_rurl = None;
  }

  pub fn set_scene7_flash_template_url_format_parameter(&mut self, scene7_flash_template_url_format_parameter: ::models::ConfigNodePropertyString) {
    self.scene7_flash_template_url_format_parameter = Some(scene7_flash_template_url_format_parameter);
  }

  pub fn with_scene7_flash_template_url_format_parameter(mut self, scene7_flash_template_url_format_parameter: ::models::ConfigNodePropertyString) -> ComDayCqDamScene7ImplScene7FlashTemplatesServiceImplProperties {
    self.scene7_flash_template_url_format_parameter = Some(scene7_flash_template_url_format_parameter);
    self
  }

  pub fn scene7_flash_template_url_format_parameter(&self) -> Option<&::models::ConfigNodePropertyString> {
    self.scene7_flash_template_url_format_parameter.as_ref()
  }

  pub fn reset_scene7_flash_template_url_format_parameter(&mut self) {
    self.scene7_flash_template_url_format_parameter = None;
  }

}



