note
 description:"[
		Adobe Experience Manager OSGI config (AEM) API
 		Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
  		OpenAPI spec version: 1.0.0-pre.0
 	    Contact: opensource@shinesolutions.com

  	NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

 		 Do not edit the class manually.
 	]"
	date: "$Date$"
	revision: "$Revision$"
	EIS:"Eiffel openapi generator", "src=https://openapi-generator.tech", "protocol=uri"
class COM_DAY_CQ_WCM_CORE_IMPL_LINK_CHECKER_CONFIGURATION_FACTORY_IMPL_PROPERTIES 

inherit

  ANY
      redefine
          out 
      end


feature --Access

    link_expired_prefix: detachable CONFIG_NODE_PROPERTY_STRING 
      
    link_expired_remove: detachable CONFIG_NODE_PROPERTY_BOOLEAN 
      
    link_expired_suffix: detachable CONFIG_NODE_PROPERTY_STRING 
      
    link_invalid_prefix: detachable CONFIG_NODE_PROPERTY_STRING 
      
    link_invalid_remove: detachable CONFIG_NODE_PROPERTY_BOOLEAN 
      
    link_invalid_suffix: detachable CONFIG_NODE_PROPERTY_STRING 
      
    link_predated_prefix: detachable CONFIG_NODE_PROPERTY_STRING 
      
    link_predated_remove: detachable CONFIG_NODE_PROPERTY_BOOLEAN 
      
    link_predated_suffix: detachable CONFIG_NODE_PROPERTY_STRING 
      
    link_wcmmodes: detachable CONFIG_NODE_PROPERTY_ARRAY 
      

feature -- Change Element  
 
    set_link_expired_prefix (a_name: like link_expired_prefix)
        -- Set 'link_expired_prefix' with 'a_name'.
      do
        link_expired_prefix := a_name
      ensure
        link_expired_prefix_set: link_expired_prefix = a_name		
      end

    set_link_expired_remove (a_name: like link_expired_remove)
        -- Set 'link_expired_remove' with 'a_name'.
      do
        link_expired_remove := a_name
      ensure
        link_expired_remove_set: link_expired_remove = a_name		
      end

    set_link_expired_suffix (a_name: like link_expired_suffix)
        -- Set 'link_expired_suffix' with 'a_name'.
      do
        link_expired_suffix := a_name
      ensure
        link_expired_suffix_set: link_expired_suffix = a_name		
      end

    set_link_invalid_prefix (a_name: like link_invalid_prefix)
        -- Set 'link_invalid_prefix' with 'a_name'.
      do
        link_invalid_prefix := a_name
      ensure
        link_invalid_prefix_set: link_invalid_prefix = a_name		
      end

    set_link_invalid_remove (a_name: like link_invalid_remove)
        -- Set 'link_invalid_remove' with 'a_name'.
      do
        link_invalid_remove := a_name
      ensure
        link_invalid_remove_set: link_invalid_remove = a_name		
      end

    set_link_invalid_suffix (a_name: like link_invalid_suffix)
        -- Set 'link_invalid_suffix' with 'a_name'.
      do
        link_invalid_suffix := a_name
      ensure
        link_invalid_suffix_set: link_invalid_suffix = a_name		
      end

    set_link_predated_prefix (a_name: like link_predated_prefix)
        -- Set 'link_predated_prefix' with 'a_name'.
      do
        link_predated_prefix := a_name
      ensure
        link_predated_prefix_set: link_predated_prefix = a_name		
      end

    set_link_predated_remove (a_name: like link_predated_remove)
        -- Set 'link_predated_remove' with 'a_name'.
      do
        link_predated_remove := a_name
      ensure
        link_predated_remove_set: link_predated_remove = a_name		
      end

    set_link_predated_suffix (a_name: like link_predated_suffix)
        -- Set 'link_predated_suffix' with 'a_name'.
      do
        link_predated_suffix := a_name
      ensure
        link_predated_suffix_set: link_predated_suffix = a_name		
      end

    set_link_wcmmodes (a_name: like link_wcmmodes)
        -- Set 'link_wcmmodes' with 'a_name'.
      do
        link_wcmmodes := a_name
      ensure
        link_wcmmodes_set: link_wcmmodes = a_name		
      end


 feature -- Status Report

    out: STRING
          -- <Precursor>
      do
        create Result.make_empty
        Result.append("%Nclass COM_DAY_CQ_WCM_CORE_IMPL_LINK_CHECKER_CONFIGURATION_FACTORY_IMPL_PROPERTIES%N")
        if attached link_expired_prefix as l_link_expired_prefix then
          Result.append ("%Nlink_expired_prefix:")
          Result.append (l_link_expired_prefix.out)
          Result.append ("%N")    
        end  
        if attached link_expired_remove as l_link_expired_remove then
          Result.append ("%Nlink_expired_remove:")
          Result.append (l_link_expired_remove.out)
          Result.append ("%N")    
        end  
        if attached link_expired_suffix as l_link_expired_suffix then
          Result.append ("%Nlink_expired_suffix:")
          Result.append (l_link_expired_suffix.out)
          Result.append ("%N")    
        end  
        if attached link_invalid_prefix as l_link_invalid_prefix then
          Result.append ("%Nlink_invalid_prefix:")
          Result.append (l_link_invalid_prefix.out)
          Result.append ("%N")    
        end  
        if attached link_invalid_remove as l_link_invalid_remove then
          Result.append ("%Nlink_invalid_remove:")
          Result.append (l_link_invalid_remove.out)
          Result.append ("%N")    
        end  
        if attached link_invalid_suffix as l_link_invalid_suffix then
          Result.append ("%Nlink_invalid_suffix:")
          Result.append (l_link_invalid_suffix.out)
          Result.append ("%N")    
        end  
        if attached link_predated_prefix as l_link_predated_prefix then
          Result.append ("%Nlink_predated_prefix:")
          Result.append (l_link_predated_prefix.out)
          Result.append ("%N")    
        end  
        if attached link_predated_remove as l_link_predated_remove then
          Result.append ("%Nlink_predated_remove:")
          Result.append (l_link_predated_remove.out)
          Result.append ("%N")    
        end  
        if attached link_predated_suffix as l_link_predated_suffix then
          Result.append ("%Nlink_predated_suffix:")
          Result.append (l_link_predated_suffix.out)
          Result.append ("%N")    
        end  
        if attached link_wcmmodes as l_link_wcmmodes then
          Result.append ("%Nlink_wcmmodes:")
          Result.append (l_link_wcmmodes.out)
          Result.append ("%N")    
        end  
      end
end


