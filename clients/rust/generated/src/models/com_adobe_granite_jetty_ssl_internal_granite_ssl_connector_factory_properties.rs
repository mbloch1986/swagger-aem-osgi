/* 
 * Adobe Experience Manager OSGI config (AEM) API
 *
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 * Generated by: https://openapi-generator.tech
 */


#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct ComAdobeGraniteJettySslInternalGraniteSslConnectorFactoryProperties {
  #[serde(rename = "com.adobe.granite.jetty.ssl.port")]
  com_adobe_granite_jetty_ssl_port: Option<::models::ConfigNodePropertyInteger>,
  #[serde(rename = "com.adobe.granite.jetty.ssl.keystore.user")]
  com_adobe_granite_jetty_ssl_keystore_user: Option<::models::ConfigNodePropertyString>,
  #[serde(rename = "com.adobe.granite.jetty.ssl.keystore.password")]
  com_adobe_granite_jetty_ssl_keystore_password: Option<::models::ConfigNodePropertyString>,
  #[serde(rename = "com.adobe.granite.jetty.ssl.ciphersuites.excluded")]
  com_adobe_granite_jetty_ssl_ciphersuites_excluded: Option<::models::ConfigNodePropertyArray>,
  #[serde(rename = "com.adobe.granite.jetty.ssl.ciphersuites.included")]
  com_adobe_granite_jetty_ssl_ciphersuites_included: Option<::models::ConfigNodePropertyArray>,
  #[serde(rename = "com.adobe.granite.jetty.ssl.client.certificate")]
  com_adobe_granite_jetty_ssl_client_certificate: Option<::models::ConfigNodePropertyDropDown>
}

impl ComAdobeGraniteJettySslInternalGraniteSslConnectorFactoryProperties {
  pub fn new() -> ComAdobeGraniteJettySslInternalGraniteSslConnectorFactoryProperties {
    ComAdobeGraniteJettySslInternalGraniteSslConnectorFactoryProperties {
      com_adobe_granite_jetty_ssl_port: None,
      com_adobe_granite_jetty_ssl_keystore_user: None,
      com_adobe_granite_jetty_ssl_keystore_password: None,
      com_adobe_granite_jetty_ssl_ciphersuites_excluded: None,
      com_adobe_granite_jetty_ssl_ciphersuites_included: None,
      com_adobe_granite_jetty_ssl_client_certificate: None
    }
  }

  pub fn set_com_adobe_granite_jetty_ssl_port(&mut self, com_adobe_granite_jetty_ssl_port: ::models::ConfigNodePropertyInteger) {
    self.com_adobe_granite_jetty_ssl_port = Some(com_adobe_granite_jetty_ssl_port);
  }

  pub fn with_com_adobe_granite_jetty_ssl_port(mut self, com_adobe_granite_jetty_ssl_port: ::models::ConfigNodePropertyInteger) -> ComAdobeGraniteJettySslInternalGraniteSslConnectorFactoryProperties {
    self.com_adobe_granite_jetty_ssl_port = Some(com_adobe_granite_jetty_ssl_port);
    self
  }

  pub fn com_adobe_granite_jetty_ssl_port(&self) -> Option<&::models::ConfigNodePropertyInteger> {
    self.com_adobe_granite_jetty_ssl_port.as_ref()
  }

  pub fn reset_com_adobe_granite_jetty_ssl_port(&mut self) {
    self.com_adobe_granite_jetty_ssl_port = None;
  }

  pub fn set_com_adobe_granite_jetty_ssl_keystore_user(&mut self, com_adobe_granite_jetty_ssl_keystore_user: ::models::ConfigNodePropertyString) {
    self.com_adobe_granite_jetty_ssl_keystore_user = Some(com_adobe_granite_jetty_ssl_keystore_user);
  }

  pub fn with_com_adobe_granite_jetty_ssl_keystore_user(mut self, com_adobe_granite_jetty_ssl_keystore_user: ::models::ConfigNodePropertyString) -> ComAdobeGraniteJettySslInternalGraniteSslConnectorFactoryProperties {
    self.com_adobe_granite_jetty_ssl_keystore_user = Some(com_adobe_granite_jetty_ssl_keystore_user);
    self
  }

  pub fn com_adobe_granite_jetty_ssl_keystore_user(&self) -> Option<&::models::ConfigNodePropertyString> {
    self.com_adobe_granite_jetty_ssl_keystore_user.as_ref()
  }

  pub fn reset_com_adobe_granite_jetty_ssl_keystore_user(&mut self) {
    self.com_adobe_granite_jetty_ssl_keystore_user = None;
  }

  pub fn set_com_adobe_granite_jetty_ssl_keystore_password(&mut self, com_adobe_granite_jetty_ssl_keystore_password: ::models::ConfigNodePropertyString) {
    self.com_adobe_granite_jetty_ssl_keystore_password = Some(com_adobe_granite_jetty_ssl_keystore_password);
  }

  pub fn with_com_adobe_granite_jetty_ssl_keystore_password(mut self, com_adobe_granite_jetty_ssl_keystore_password: ::models::ConfigNodePropertyString) -> ComAdobeGraniteJettySslInternalGraniteSslConnectorFactoryProperties {
    self.com_adobe_granite_jetty_ssl_keystore_password = Some(com_adobe_granite_jetty_ssl_keystore_password);
    self
  }

  pub fn com_adobe_granite_jetty_ssl_keystore_password(&self) -> Option<&::models::ConfigNodePropertyString> {
    self.com_adobe_granite_jetty_ssl_keystore_password.as_ref()
  }

  pub fn reset_com_adobe_granite_jetty_ssl_keystore_password(&mut self) {
    self.com_adobe_granite_jetty_ssl_keystore_password = None;
  }

  pub fn set_com_adobe_granite_jetty_ssl_ciphersuites_excluded(&mut self, com_adobe_granite_jetty_ssl_ciphersuites_excluded: ::models::ConfigNodePropertyArray) {
    self.com_adobe_granite_jetty_ssl_ciphersuites_excluded = Some(com_adobe_granite_jetty_ssl_ciphersuites_excluded);
  }

  pub fn with_com_adobe_granite_jetty_ssl_ciphersuites_excluded(mut self, com_adobe_granite_jetty_ssl_ciphersuites_excluded: ::models::ConfigNodePropertyArray) -> ComAdobeGraniteJettySslInternalGraniteSslConnectorFactoryProperties {
    self.com_adobe_granite_jetty_ssl_ciphersuites_excluded = Some(com_adobe_granite_jetty_ssl_ciphersuites_excluded);
    self
  }

  pub fn com_adobe_granite_jetty_ssl_ciphersuites_excluded(&self) -> Option<&::models::ConfigNodePropertyArray> {
    self.com_adobe_granite_jetty_ssl_ciphersuites_excluded.as_ref()
  }

  pub fn reset_com_adobe_granite_jetty_ssl_ciphersuites_excluded(&mut self) {
    self.com_adobe_granite_jetty_ssl_ciphersuites_excluded = None;
  }

  pub fn set_com_adobe_granite_jetty_ssl_ciphersuites_included(&mut self, com_adobe_granite_jetty_ssl_ciphersuites_included: ::models::ConfigNodePropertyArray) {
    self.com_adobe_granite_jetty_ssl_ciphersuites_included = Some(com_adobe_granite_jetty_ssl_ciphersuites_included);
  }

  pub fn with_com_adobe_granite_jetty_ssl_ciphersuites_included(mut self, com_adobe_granite_jetty_ssl_ciphersuites_included: ::models::ConfigNodePropertyArray) -> ComAdobeGraniteJettySslInternalGraniteSslConnectorFactoryProperties {
    self.com_adobe_granite_jetty_ssl_ciphersuites_included = Some(com_adobe_granite_jetty_ssl_ciphersuites_included);
    self
  }

  pub fn com_adobe_granite_jetty_ssl_ciphersuites_included(&self) -> Option<&::models::ConfigNodePropertyArray> {
    self.com_adobe_granite_jetty_ssl_ciphersuites_included.as_ref()
  }

  pub fn reset_com_adobe_granite_jetty_ssl_ciphersuites_included(&mut self) {
    self.com_adobe_granite_jetty_ssl_ciphersuites_included = None;
  }

  pub fn set_com_adobe_granite_jetty_ssl_client_certificate(&mut self, com_adobe_granite_jetty_ssl_client_certificate: ::models::ConfigNodePropertyDropDown) {
    self.com_adobe_granite_jetty_ssl_client_certificate = Some(com_adobe_granite_jetty_ssl_client_certificate);
  }

  pub fn with_com_adobe_granite_jetty_ssl_client_certificate(mut self, com_adobe_granite_jetty_ssl_client_certificate: ::models::ConfigNodePropertyDropDown) -> ComAdobeGraniteJettySslInternalGraniteSslConnectorFactoryProperties {
    self.com_adobe_granite_jetty_ssl_client_certificate = Some(com_adobe_granite_jetty_ssl_client_certificate);
    self
  }

  pub fn com_adobe_granite_jetty_ssl_client_certificate(&self) -> Option<&::models::ConfigNodePropertyDropDown> {
    self.com_adobe_granite_jetty_ssl_client_certificate.as_ref()
  }

  pub fn reset_com_adobe_granite_jetty_ssl_client_certificate(&mut self) {
    self.com_adobe_granite_jetty_ssl_client_certificate = None;
  }

}



