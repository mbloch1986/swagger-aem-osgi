/**
* Adobe Experience Manager OSGI config (AEM) API
* Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
*
* OpenAPI spec version: 1.0.0-pre.0
* Contact: opensource@shinesolutions.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/


#include "ComDayCqWcmCoreImplReferencesContentContentReferenceConfigProperties.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

ComDayCqWcmCoreImplReferencesContentContentReferenceConfigProperties::ComDayCqWcmCoreImplReferencesContentContentReferenceConfigProperties()
{
    m_ContentReferenceConfig_resourceTypesIsSet = false;
    
}

ComDayCqWcmCoreImplReferencesContentContentReferenceConfigProperties::~ComDayCqWcmCoreImplReferencesContentContentReferenceConfigProperties()
{
}

void ComDayCqWcmCoreImplReferencesContentContentReferenceConfigProperties::validate()
{
    // TODO: implement validation
}

nlohmann::json ComDayCqWcmCoreImplReferencesContentContentReferenceConfigProperties::toJson() const
{
    nlohmann::json val = nlohmann::json::object();

    if(m_ContentReferenceConfig_resourceTypesIsSet)
    {
        val["contentReferenceConfig.resourceTypes"] = ModelBase::toJson(m_ContentReferenceConfig_resourceTypes);
    }
    

    return val;
}

void ComDayCqWcmCoreImplReferencesContentContentReferenceConfigProperties::fromJson(nlohmann::json& val)
{
    if(val.find("contentReferenceConfig.resourceTypes") != val.end())
    {
        if(!val["contentReferenceConfig.resourceTypes"].is_null())
        {
            ConfigNodePropertyArray newItem;
            newItem.fromJson(val["contentReferenceConfig.resourceTypes"]);
            setContentReferenceConfigResourceTypes( newItem );
        }
        
    }
    
}


ConfigNodePropertyArray ComDayCqWcmCoreImplReferencesContentContentReferenceConfigProperties::getContentReferenceConfigResourceTypes() const
{
    return m_ContentReferenceConfig_resourceTypes;
}
void ComDayCqWcmCoreImplReferencesContentContentReferenceConfigProperties::setContentReferenceConfigResourceTypes(ConfigNodePropertyArray const& value)
{
    m_ContentReferenceConfig_resourceTypes = value;
    m_ContentReferenceConfig_resourceTypesIsSet = true;
}
bool ComDayCqWcmCoreImplReferencesContentContentReferenceConfigProperties::contentReferenceConfigResourceTypesIsSet() const
{
    return m_ContentReferenceConfig_resourceTypesIsSet;
}
void ComDayCqWcmCoreImplReferencesContentContentReferenceConfigProperties::unsetContentReferenceConfig_resourceTypes()
{
    m_ContentReferenceConfig_resourceTypesIsSet = false;
}

}
}
}
}

