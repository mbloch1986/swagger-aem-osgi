/**
* Adobe Experience Manager OSGI config (AEM) API
* Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
*
* OpenAPI spec version: 1.0.0-pre.0
* Contact: opensource@shinesolutions.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/


#include "ComAdobeCqInboxImplTypeproviderItemTypeProviderProperties.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

ComAdobeCqInboxImplTypeproviderItemTypeProviderProperties::ComAdobeCqInboxImplTypeproviderItemTypeProviderProperties()
{
    m_Inbox_impl_typeprovider_registrypathsIsSet = false;
    m_Inbox_impl_typeprovider_legacypathsIsSet = false;
    m_Inbox_impl_typeprovider_defaulturl_failureitemIsSet = false;
    m_Inbox_impl_typeprovider_defaulturl_workitemIsSet = false;
    m_Inbox_impl_typeprovider_defaulturl_taskIsSet = false;
    
}

ComAdobeCqInboxImplTypeproviderItemTypeProviderProperties::~ComAdobeCqInboxImplTypeproviderItemTypeProviderProperties()
{
}

void ComAdobeCqInboxImplTypeproviderItemTypeProviderProperties::validate()
{
    // TODO: implement validation
}

nlohmann::json ComAdobeCqInboxImplTypeproviderItemTypeProviderProperties::toJson() const
{
    nlohmann::json val = nlohmann::json::object();

    if(m_Inbox_impl_typeprovider_registrypathsIsSet)
    {
        val["inbox.impl.typeprovider.registrypaths"] = ModelBase::toJson(m_Inbox_impl_typeprovider_registrypaths);
    }
    if(m_Inbox_impl_typeprovider_legacypathsIsSet)
    {
        val["inbox.impl.typeprovider.legacypaths"] = ModelBase::toJson(m_Inbox_impl_typeprovider_legacypaths);
    }
    if(m_Inbox_impl_typeprovider_defaulturl_failureitemIsSet)
    {
        val["inbox.impl.typeprovider.defaulturl.failureitem"] = ModelBase::toJson(m_Inbox_impl_typeprovider_defaulturl_failureitem);
    }
    if(m_Inbox_impl_typeprovider_defaulturl_workitemIsSet)
    {
        val["inbox.impl.typeprovider.defaulturl.workitem"] = ModelBase::toJson(m_Inbox_impl_typeprovider_defaulturl_workitem);
    }
    if(m_Inbox_impl_typeprovider_defaulturl_taskIsSet)
    {
        val["inbox.impl.typeprovider.defaulturl.task"] = ModelBase::toJson(m_Inbox_impl_typeprovider_defaulturl_task);
    }
    

    return val;
}

void ComAdobeCqInboxImplTypeproviderItemTypeProviderProperties::fromJson(nlohmann::json& val)
{
    if(val.find("inbox.impl.typeprovider.registrypaths") != val.end())
    {
        if(!val["inbox.impl.typeprovider.registrypaths"].is_null())
        {
            ConfigNodePropertyArray newItem;
            newItem.fromJson(val["inbox.impl.typeprovider.registrypaths"]);
            setInboxImplTypeproviderRegistrypaths( newItem );
        }
        
    }
    if(val.find("inbox.impl.typeprovider.legacypaths") != val.end())
    {
        if(!val["inbox.impl.typeprovider.legacypaths"].is_null())
        {
            ConfigNodePropertyArray newItem;
            newItem.fromJson(val["inbox.impl.typeprovider.legacypaths"]);
            setInboxImplTypeproviderLegacypaths( newItem );
        }
        
    }
    if(val.find("inbox.impl.typeprovider.defaulturl.failureitem") != val.end())
    {
        if(!val["inbox.impl.typeprovider.defaulturl.failureitem"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["inbox.impl.typeprovider.defaulturl.failureitem"]);
            setInboxImplTypeproviderDefaulturlFailureitem( newItem );
        }
        
    }
    if(val.find("inbox.impl.typeprovider.defaulturl.workitem") != val.end())
    {
        if(!val["inbox.impl.typeprovider.defaulturl.workitem"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["inbox.impl.typeprovider.defaulturl.workitem"]);
            setInboxImplTypeproviderDefaulturlWorkitem( newItem );
        }
        
    }
    if(val.find("inbox.impl.typeprovider.defaulturl.task") != val.end())
    {
        if(!val["inbox.impl.typeprovider.defaulturl.task"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["inbox.impl.typeprovider.defaulturl.task"]);
            setInboxImplTypeproviderDefaulturlTask( newItem );
        }
        
    }
    
}


ConfigNodePropertyArray ComAdobeCqInboxImplTypeproviderItemTypeProviderProperties::getInboxImplTypeproviderRegistrypaths() const
{
    return m_Inbox_impl_typeprovider_registrypaths;
}
void ComAdobeCqInboxImplTypeproviderItemTypeProviderProperties::setInboxImplTypeproviderRegistrypaths(ConfigNodePropertyArray const& value)
{
    m_Inbox_impl_typeprovider_registrypaths = value;
    m_Inbox_impl_typeprovider_registrypathsIsSet = true;
}
bool ComAdobeCqInboxImplTypeproviderItemTypeProviderProperties::inboxImplTypeproviderRegistrypathsIsSet() const
{
    return m_Inbox_impl_typeprovider_registrypathsIsSet;
}
void ComAdobeCqInboxImplTypeproviderItemTypeProviderProperties::unsetInbox_impl_typeprovider_registrypaths()
{
    m_Inbox_impl_typeprovider_registrypathsIsSet = false;
}
ConfigNodePropertyArray ComAdobeCqInboxImplTypeproviderItemTypeProviderProperties::getInboxImplTypeproviderLegacypaths() const
{
    return m_Inbox_impl_typeprovider_legacypaths;
}
void ComAdobeCqInboxImplTypeproviderItemTypeProviderProperties::setInboxImplTypeproviderLegacypaths(ConfigNodePropertyArray const& value)
{
    m_Inbox_impl_typeprovider_legacypaths = value;
    m_Inbox_impl_typeprovider_legacypathsIsSet = true;
}
bool ComAdobeCqInboxImplTypeproviderItemTypeProviderProperties::inboxImplTypeproviderLegacypathsIsSet() const
{
    return m_Inbox_impl_typeprovider_legacypathsIsSet;
}
void ComAdobeCqInboxImplTypeproviderItemTypeProviderProperties::unsetInbox_impl_typeprovider_legacypaths()
{
    m_Inbox_impl_typeprovider_legacypathsIsSet = false;
}
ConfigNodePropertyString ComAdobeCqInboxImplTypeproviderItemTypeProviderProperties::getInboxImplTypeproviderDefaulturlFailureitem() const
{
    return m_Inbox_impl_typeprovider_defaulturl_failureitem;
}
void ComAdobeCqInboxImplTypeproviderItemTypeProviderProperties::setInboxImplTypeproviderDefaulturlFailureitem(ConfigNodePropertyString const& value)
{
    m_Inbox_impl_typeprovider_defaulturl_failureitem = value;
    m_Inbox_impl_typeprovider_defaulturl_failureitemIsSet = true;
}
bool ComAdobeCqInboxImplTypeproviderItemTypeProviderProperties::inboxImplTypeproviderDefaulturlFailureitemIsSet() const
{
    return m_Inbox_impl_typeprovider_defaulturl_failureitemIsSet;
}
void ComAdobeCqInboxImplTypeproviderItemTypeProviderProperties::unsetInbox_impl_typeprovider_defaulturl_failureitem()
{
    m_Inbox_impl_typeprovider_defaulturl_failureitemIsSet = false;
}
ConfigNodePropertyString ComAdobeCqInboxImplTypeproviderItemTypeProviderProperties::getInboxImplTypeproviderDefaulturlWorkitem() const
{
    return m_Inbox_impl_typeprovider_defaulturl_workitem;
}
void ComAdobeCqInboxImplTypeproviderItemTypeProviderProperties::setInboxImplTypeproviderDefaulturlWorkitem(ConfigNodePropertyString const& value)
{
    m_Inbox_impl_typeprovider_defaulturl_workitem = value;
    m_Inbox_impl_typeprovider_defaulturl_workitemIsSet = true;
}
bool ComAdobeCqInboxImplTypeproviderItemTypeProviderProperties::inboxImplTypeproviderDefaulturlWorkitemIsSet() const
{
    return m_Inbox_impl_typeprovider_defaulturl_workitemIsSet;
}
void ComAdobeCqInboxImplTypeproviderItemTypeProviderProperties::unsetInbox_impl_typeprovider_defaulturl_workitem()
{
    m_Inbox_impl_typeprovider_defaulturl_workitemIsSet = false;
}
ConfigNodePropertyString ComAdobeCqInboxImplTypeproviderItemTypeProviderProperties::getInboxImplTypeproviderDefaulturlTask() const
{
    return m_Inbox_impl_typeprovider_defaulturl_task;
}
void ComAdobeCqInboxImplTypeproviderItemTypeProviderProperties::setInboxImplTypeproviderDefaulturlTask(ConfigNodePropertyString const& value)
{
    m_Inbox_impl_typeprovider_defaulturl_task = value;
    m_Inbox_impl_typeprovider_defaulturl_taskIsSet = true;
}
bool ComAdobeCqInboxImplTypeproviderItemTypeProviderProperties::inboxImplTypeproviderDefaulturlTaskIsSet() const
{
    return m_Inbox_impl_typeprovider_defaulturl_taskIsSet;
}
void ComAdobeCqInboxImplTypeproviderItemTypeProviderProperties::unsetInbox_impl_typeprovider_defaulturl_task()
{
    m_Inbox_impl_typeprovider_defaulturl_taskIsSet = false;
}

}
}
}
}

