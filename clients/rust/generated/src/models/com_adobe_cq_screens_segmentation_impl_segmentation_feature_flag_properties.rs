/* 
 * Adobe Experience Manager OSGI config (AEM) API
 *
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 * Generated by: https://openapi-generator.tech
 */


#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct ComAdobeCqScreensSegmentationImplSegmentationFeatureFlagProperties {
  #[serde(rename = "enableDataTriggeredContent")]
  enable_data_triggered_content: Option<::models::ConfigNodePropertyBoolean>
}

impl ComAdobeCqScreensSegmentationImplSegmentationFeatureFlagProperties {
  pub fn new() -> ComAdobeCqScreensSegmentationImplSegmentationFeatureFlagProperties {
    ComAdobeCqScreensSegmentationImplSegmentationFeatureFlagProperties {
      enable_data_triggered_content: None
    }
  }

  pub fn set_enable_data_triggered_content(&mut self, enable_data_triggered_content: ::models::ConfigNodePropertyBoolean) {
    self.enable_data_triggered_content = Some(enable_data_triggered_content);
  }

  pub fn with_enable_data_triggered_content(mut self, enable_data_triggered_content: ::models::ConfigNodePropertyBoolean) -> ComAdobeCqScreensSegmentationImplSegmentationFeatureFlagProperties {
    self.enable_data_triggered_content = Some(enable_data_triggered_content);
    self
  }

  pub fn enable_data_triggered_content(&self) -> Option<&::models::ConfigNodePropertyBoolean> {
    self.enable_data_triggered_content.as_ref()
  }

  pub fn reset_enable_data_triggered_content(&mut self) {
    self.enable_data_triggered_content = None;
  }

}



