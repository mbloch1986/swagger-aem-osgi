/**
* Adobe Experience Manager OSGI config (AEM) API
* Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
*
* OpenAPI spec version: 1.0.0-pre.0
* Contact: opensource@shinesolutions.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
/*
 * ComDayCqDamCoreImplDamEventRecorderImplProperties.h
 *
 * 
 */

#ifndef ComDayCqDamCoreImplDamEventRecorderImplProperties_H_
#define ComDayCqDamCoreImplDamEventRecorderImplProperties_H_


#include "ModelBase.h"

#include "ConfigNodePropertyBoolean.h"
#include "ConfigNodePropertyDropDown.h"
#include "ConfigNodePropertyInteger.h"
#include "ConfigNodePropertyArray.h"
#include "ConfigNodePropertyString.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
/// 
/// </summary>
class  ComDayCqDamCoreImplDamEventRecorderImplProperties
    : public ModelBase
{
public:
    ComDayCqDamCoreImplDamEventRecorderImplProperties();
    virtual ~ComDayCqDamCoreImplDamEventRecorderImplProperties();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    nlohmann::json toJson() const override;
    void fromJson(nlohmann::json& json) override;

    /////////////////////////////////////////////
    /// ComDayCqDamCoreImplDamEventRecorderImplProperties members

    /// <summary>
    /// 
    /// </summary>
    ConfigNodePropertyString getEventFilter() const;
    void setEventFilter(ConfigNodePropertyString const& value);
    bool eventFilterIsSet() const;
    void unsetEvent_filter();
    /// <summary>
    /// 
    /// </summary>
    ConfigNodePropertyInteger getEventQueueLength() const;
    void setEventQueueLength(ConfigNodePropertyInteger const& value);
    bool eventQueueLengthIsSet() const;
    void unsetEvent_queue_length();
    /// <summary>
    /// 
    /// </summary>
    ConfigNodePropertyBoolean getEventrecorderEnabled() const;
    void setEventrecorderEnabled(ConfigNodePropertyBoolean const& value);
    bool eventrecorderEnabledIsSet() const;
    void unsetEventrecorder_enabled();
    /// <summary>
    /// 
    /// </summary>
    ConfigNodePropertyArray getEventrecorderBlacklist() const;
    void setEventrecorderBlacklist(ConfigNodePropertyArray const& value);
    bool eventrecorderBlacklistIsSet() const;
    void unsetEventrecorder_blacklist();
    /// <summary>
    /// 
    /// </summary>
    ConfigNodePropertyDropDown getEventrecorderEventtypes() const;
    void setEventrecorderEventtypes(ConfigNodePropertyDropDown const& value);
    bool eventrecorderEventtypesIsSet() const;
    void unsetEventrecorder_eventtypes();

protected:
    ConfigNodePropertyString m_Event_filter;
    bool m_Event_filterIsSet;
    ConfigNodePropertyInteger m_Event_queue_length;
    bool m_Event_queue_lengthIsSet;
    ConfigNodePropertyBoolean m_Eventrecorder_enabled;
    bool m_Eventrecorder_enabledIsSet;
    ConfigNodePropertyArray m_Eventrecorder_blacklist;
    bool m_Eventrecorder_blacklistIsSet;
    ConfigNodePropertyDropDown m_Eventrecorder_eventtypes;
    bool m_Eventrecorder_eventtypesIsSet;
};

}
}
}
}

#endif /* ComDayCqDamCoreImplDamEventRecorderImplProperties_H_ */
