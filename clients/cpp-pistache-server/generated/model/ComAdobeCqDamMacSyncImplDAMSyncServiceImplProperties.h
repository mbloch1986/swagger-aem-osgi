/**
* Adobe Experience Manager OSGI config (AEM) API
* Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
*
* OpenAPI spec version: 1.0.0-pre.0
* Contact: opensource@shinesolutions.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
/*
 * ComAdobeCqDamMacSyncImplDAMSyncServiceImplProperties.h
 *
 * 
 */

#ifndef ComAdobeCqDamMacSyncImplDAMSyncServiceImplProperties_H_
#define ComAdobeCqDamMacSyncImplDAMSyncServiceImplProperties_H_


#include "ModelBase.h"

#include "ConfigNodePropertyBoolean.h"
#include "ConfigNodePropertyDropDown.h"
#include "ConfigNodePropertyInteger.h"
#include "ConfigNodePropertyArray.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
/// 
/// </summary>
class  ComAdobeCqDamMacSyncImplDAMSyncServiceImplProperties
    : public ModelBase
{
public:
    ComAdobeCqDamMacSyncImplDAMSyncServiceImplProperties();
    virtual ~ComAdobeCqDamMacSyncImplDAMSyncServiceImplProperties();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    nlohmann::json toJson() const override;
    void fromJson(nlohmann::json& json) override;

    /////////////////////////////////////////////
    /// ComAdobeCqDamMacSyncImplDAMSyncServiceImplProperties members

    /// <summary>
    /// 
    /// </summary>
    ConfigNodePropertyArray getComAdobeCqDamMacSyncDamsyncserviceRegisteredPaths() const;
    void setComAdobeCqDamMacSyncDamsyncserviceRegisteredPaths(ConfigNodePropertyArray const& value);
    bool comAdobeCqDamMacSyncDamsyncserviceRegisteredPathsIsSet() const;
    void unsetCom_adobe_cq_dam_mac_sync_damsyncservice_registered_paths();
    /// <summary>
    /// 
    /// </summary>
    ConfigNodePropertyBoolean getComAdobeCqDamMacSyncDamsyncserviceSyncRenditions() const;
    void setComAdobeCqDamMacSyncDamsyncserviceSyncRenditions(ConfigNodePropertyBoolean const& value);
    bool comAdobeCqDamMacSyncDamsyncserviceSyncRenditionsIsSet() const;
    void unsetCom_adobe_cq_dam_mac_sync_damsyncservice_sync_renditions();
    /// <summary>
    /// 
    /// </summary>
    ConfigNodePropertyInteger getComAdobeCqDamMacSyncDamsyncserviceReplicateThreadWaitMs() const;
    void setComAdobeCqDamMacSyncDamsyncserviceReplicateThreadWaitMs(ConfigNodePropertyInteger const& value);
    bool comAdobeCqDamMacSyncDamsyncserviceReplicateThreadWaitMsIsSet() const;
    void unsetCom_adobe_cq_dam_mac_sync_damsyncservice_replicate_thread_wait_ms();
    /// <summary>
    /// 
    /// </summary>
    ConfigNodePropertyDropDown getComAdobeCqDamMacSyncDamsyncservicePlatform() const;
    void setComAdobeCqDamMacSyncDamsyncservicePlatform(ConfigNodePropertyDropDown const& value);
    bool comAdobeCqDamMacSyncDamsyncservicePlatformIsSet() const;
    void unsetCom_adobe_cq_dam_mac_sync_damsyncservice_platform();

protected:
    ConfigNodePropertyArray m_Com_adobe_cq_dam_mac_sync_damsyncservice_registered_paths;
    bool m_Com_adobe_cq_dam_mac_sync_damsyncservice_registered_pathsIsSet;
    ConfigNodePropertyBoolean m_Com_adobe_cq_dam_mac_sync_damsyncservice_sync_renditions;
    bool m_Com_adobe_cq_dam_mac_sync_damsyncservice_sync_renditionsIsSet;
    ConfigNodePropertyInteger m_Com_adobe_cq_dam_mac_sync_damsyncservice_replicate_thread_wait_ms;
    bool m_Com_adobe_cq_dam_mac_sync_damsyncservice_replicate_thread_wait_msIsSet;
    ConfigNodePropertyDropDown m_Com_adobe_cq_dam_mac_sync_damsyncservice_platform;
    bool m_Com_adobe_cq_dam_mac_sync_damsyncservice_platformIsSet;
};

}
}
}
}

#endif /* ComAdobeCqDamMacSyncImplDAMSyncServiceImplProperties_H_ */
