package org.openapitools.client.api

import argonaut._
import argonaut.EncodeJson._
import argonaut.DecodeJson._

import org.http4s.{EntityDecoder, EntityEncoder}
import org.http4s.argonaut._
import org.joda.time.DateTime
import ComAdobeGraniteDistributionCoreImplTransportAccessTokenDistribuInfo._

case class ComAdobeGraniteDistributionCoreImplTransportAccessTokenDistribuInfo (
  pid: Option[String],
title: Option[String],
description: Option[String],
properties: Option[ComAdobeGraniteDistributionCoreImplTransportAccessTokenDistribuProperties])

object ComAdobeGraniteDistributionCoreImplTransportAccessTokenDistribuInfo {
  import DateTimeCodecs._

  implicit val ComAdobeGraniteDistributionCoreImplTransportAccessTokenDistribuInfoCodecJson: CodecJson[ComAdobeGraniteDistributionCoreImplTransportAccessTokenDistribuInfo] = CodecJson.derive[ComAdobeGraniteDistributionCoreImplTransportAccessTokenDistribuInfo]
  implicit val ComAdobeGraniteDistributionCoreImplTransportAccessTokenDistribuInfoDecoder: EntityDecoder[ComAdobeGraniteDistributionCoreImplTransportAccessTokenDistribuInfo] = jsonOf[ComAdobeGraniteDistributionCoreImplTransportAccessTokenDistribuInfo]
  implicit val ComAdobeGraniteDistributionCoreImplTransportAccessTokenDistribuInfoEncoder: EntityEncoder[ComAdobeGraniteDistributionCoreImplTransportAccessTokenDistribuInfo] = jsonEncoderOf[ComAdobeGraniteDistributionCoreImplTransportAccessTokenDistribuInfo]
}
