/* 
 * Adobe Experience Manager OSGI config (AEM) API
 *
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Org.OpenAPITools.Client.OpenAPIDateConverter;

namespace Org.OpenAPITools.Model
{
    /// <summary>
    /// OrgApacheSlingModelsImplModelAdapterFactoryProperties
    /// </summary>
    [DataContract]
    public partial class OrgApacheSlingModelsImplModelAdapterFactoryProperties :  IEquatable<OrgApacheSlingModelsImplModelAdapterFactoryProperties>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="OrgApacheSlingModelsImplModelAdapterFactoryProperties" /> class.
        /// </summary>
        /// <param name="osgiHttpWhiteboardListener">osgiHttpWhiteboardListener.</param>
        /// <param name="osgiHttpWhiteboardContextSelect">osgiHttpWhiteboardContextSelect.</param>
        /// <param name="maxRecursionDepth">maxRecursionDepth.</param>
        /// <param name="cleanupJobPeriod">cleanupJobPeriod.</param>
        public OrgApacheSlingModelsImplModelAdapterFactoryProperties(ConfigNodePropertyString osgiHttpWhiteboardListener = default(ConfigNodePropertyString), ConfigNodePropertyString osgiHttpWhiteboardContextSelect = default(ConfigNodePropertyString), ConfigNodePropertyInteger maxRecursionDepth = default(ConfigNodePropertyInteger), ConfigNodePropertyInteger cleanupJobPeriod = default(ConfigNodePropertyInteger))
        {
            this.OsgiHttpWhiteboardListener = osgiHttpWhiteboardListener;
            this.OsgiHttpWhiteboardContextSelect = osgiHttpWhiteboardContextSelect;
            this.MaxRecursionDepth = maxRecursionDepth;
            this.CleanupJobPeriod = cleanupJobPeriod;
        }
        
        /// <summary>
        /// Gets or Sets OsgiHttpWhiteboardListener
        /// </summary>
        [DataMember(Name="osgi.http.whiteboard.listener", EmitDefaultValue=false)]
        public ConfigNodePropertyString OsgiHttpWhiteboardListener { get; set; }

        /// <summary>
        /// Gets or Sets OsgiHttpWhiteboardContextSelect
        /// </summary>
        [DataMember(Name="osgi.http.whiteboard.context.select", EmitDefaultValue=false)]
        public ConfigNodePropertyString OsgiHttpWhiteboardContextSelect { get; set; }

        /// <summary>
        /// Gets or Sets MaxRecursionDepth
        /// </summary>
        [DataMember(Name="max.recursion.depth", EmitDefaultValue=false)]
        public ConfigNodePropertyInteger MaxRecursionDepth { get; set; }

        /// <summary>
        /// Gets or Sets CleanupJobPeriod
        /// </summary>
        [DataMember(Name="cleanup.job.period", EmitDefaultValue=false)]
        public ConfigNodePropertyInteger CleanupJobPeriod { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class OrgApacheSlingModelsImplModelAdapterFactoryProperties {\n");
            sb.Append("  OsgiHttpWhiteboardListener: ").Append(OsgiHttpWhiteboardListener).Append("\n");
            sb.Append("  OsgiHttpWhiteboardContextSelect: ").Append(OsgiHttpWhiteboardContextSelect).Append("\n");
            sb.Append("  MaxRecursionDepth: ").Append(MaxRecursionDepth).Append("\n");
            sb.Append("  CleanupJobPeriod: ").Append(CleanupJobPeriod).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as OrgApacheSlingModelsImplModelAdapterFactoryProperties);
        }

        /// <summary>
        /// Returns true if OrgApacheSlingModelsImplModelAdapterFactoryProperties instances are equal
        /// </summary>
        /// <param name="input">Instance of OrgApacheSlingModelsImplModelAdapterFactoryProperties to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(OrgApacheSlingModelsImplModelAdapterFactoryProperties input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.OsgiHttpWhiteboardListener == input.OsgiHttpWhiteboardListener ||
                    (this.OsgiHttpWhiteboardListener != null &&
                    this.OsgiHttpWhiteboardListener.Equals(input.OsgiHttpWhiteboardListener))
                ) && 
                (
                    this.OsgiHttpWhiteboardContextSelect == input.OsgiHttpWhiteboardContextSelect ||
                    (this.OsgiHttpWhiteboardContextSelect != null &&
                    this.OsgiHttpWhiteboardContextSelect.Equals(input.OsgiHttpWhiteboardContextSelect))
                ) && 
                (
                    this.MaxRecursionDepth == input.MaxRecursionDepth ||
                    (this.MaxRecursionDepth != null &&
                    this.MaxRecursionDepth.Equals(input.MaxRecursionDepth))
                ) && 
                (
                    this.CleanupJobPeriod == input.CleanupJobPeriod ||
                    (this.CleanupJobPeriod != null &&
                    this.CleanupJobPeriod.Equals(input.CleanupJobPeriod))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.OsgiHttpWhiteboardListener != null)
                    hashCode = hashCode * 59 + this.OsgiHttpWhiteboardListener.GetHashCode();
                if (this.OsgiHttpWhiteboardContextSelect != null)
                    hashCode = hashCode * 59 + this.OsgiHttpWhiteboardContextSelect.GetHashCode();
                if (this.MaxRecursionDepth != null)
                    hashCode = hashCode * 59 + this.MaxRecursionDepth.GetHashCode();
                if (this.CleanupJobPeriod != null)
                    hashCode = hashCode * 59 + this.CleanupJobPeriod.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
