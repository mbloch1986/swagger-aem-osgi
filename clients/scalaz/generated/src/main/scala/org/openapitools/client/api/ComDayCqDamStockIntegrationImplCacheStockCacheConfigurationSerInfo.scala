package org.openapitools.client.api

import argonaut._
import argonaut.EncodeJson._
import argonaut.DecodeJson._

import org.http4s.{EntityDecoder, EntityEncoder}
import org.http4s.argonaut._
import org.joda.time.DateTime
import ComDayCqDamStockIntegrationImplCacheStockCacheConfigurationSerInfo._

case class ComDayCqDamStockIntegrationImplCacheStockCacheConfigurationSerInfo (
  pid: Option[String],
title: Option[String],
description: Option[String],
properties: Option[ComDayCqDamStockIntegrationImplCacheStockCacheConfigurationSerProperties])

object ComDayCqDamStockIntegrationImplCacheStockCacheConfigurationSerInfo {
  import DateTimeCodecs._

  implicit val ComDayCqDamStockIntegrationImplCacheStockCacheConfigurationSerInfoCodecJson: CodecJson[ComDayCqDamStockIntegrationImplCacheStockCacheConfigurationSerInfo] = CodecJson.derive[ComDayCqDamStockIntegrationImplCacheStockCacheConfigurationSerInfo]
  implicit val ComDayCqDamStockIntegrationImplCacheStockCacheConfigurationSerInfoDecoder: EntityDecoder[ComDayCqDamStockIntegrationImplCacheStockCacheConfigurationSerInfo] = jsonOf[ComDayCqDamStockIntegrationImplCacheStockCacheConfigurationSerInfo]
  implicit val ComDayCqDamStockIntegrationImplCacheStockCacheConfigurationSerInfoEncoder: EntityEncoder[ComDayCqDamStockIntegrationImplCacheStockCacheConfigurationSerInfo] = jsonEncoderOf[ComDayCqDamStockIntegrationImplCacheStockCacheConfigurationSerInfo]
}
