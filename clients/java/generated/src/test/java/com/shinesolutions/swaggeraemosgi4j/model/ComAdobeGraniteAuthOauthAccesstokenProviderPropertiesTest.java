/*
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.shinesolutions.swaggeraemosgi4j.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.shinesolutions.swaggeraemosgi4j.model.ConfigNodePropertyArray;
import com.shinesolutions.swaggeraemosgi4j.model.ConfigNodePropertyBoolean;
import com.shinesolutions.swaggeraemosgi4j.model.ConfigNodePropertyInteger;
import com.shinesolutions.swaggeraemosgi4j.model.ConfigNodePropertyString;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import org.junit.Assert;
import org.junit.Ignore;
import org.junit.Test;


/**
 * Model tests for ComAdobeGraniteAuthOauthAccesstokenProviderProperties
 */
public class ComAdobeGraniteAuthOauthAccesstokenProviderPropertiesTest {
    private final ComAdobeGraniteAuthOauthAccesstokenProviderProperties model = new ComAdobeGraniteAuthOauthAccesstokenProviderProperties();

    /**
     * Model tests for ComAdobeGraniteAuthOauthAccesstokenProviderProperties
     */
    @Test
    public void testComAdobeGraniteAuthOauthAccesstokenProviderProperties() {
        // TODO: test ComAdobeGraniteAuthOauthAccesstokenProviderProperties
    }

    /**
     * Test the property 'name'
     */
    @Test
    public void nameTest() {
        // TODO: test name
    }

    /**
     * Test the property 'authTokenProviderTitle'
     */
    @Test
    public void authTokenProviderTitleTest() {
        // TODO: test authTokenProviderTitle
    }

    /**
     * Test the property 'authTokenProviderDefaultClaims'
     */
    @Test
    public void authTokenProviderDefaultClaimsTest() {
        // TODO: test authTokenProviderDefaultClaims
    }

    /**
     * Test the property 'authTokenProviderEndpoint'
     */
    @Test
    public void authTokenProviderEndpointTest() {
        // TODO: test authTokenProviderEndpoint
    }

    /**
     * Test the property 'authAccessTokenRequest'
     */
    @Test
    public void authAccessTokenRequestTest() {
        // TODO: test authAccessTokenRequest
    }

    /**
     * Test the property 'authTokenProviderKeypairAlias'
     */
    @Test
    public void authTokenProviderKeypairAliasTest() {
        // TODO: test authTokenProviderKeypairAlias
    }

    /**
     * Test the property 'authTokenProviderConnTimeout'
     */
    @Test
    public void authTokenProviderConnTimeoutTest() {
        // TODO: test authTokenProviderConnTimeout
    }

    /**
     * Test the property 'authTokenProviderSoTimeout'
     */
    @Test
    public void authTokenProviderSoTimeoutTest() {
        // TODO: test authTokenProviderSoTimeout
    }

    /**
     * Test the property 'authTokenProviderClientId'
     */
    @Test
    public void authTokenProviderClientIdTest() {
        // TODO: test authTokenProviderClientId
    }

    /**
     * Test the property 'authTokenProviderScope'
     */
    @Test
    public void authTokenProviderScopeTest() {
        // TODO: test authTokenProviderScope
    }

    /**
     * Test the property 'authTokenProviderReuseAccessToken'
     */
    @Test
    public void authTokenProviderReuseAccessTokenTest() {
        // TODO: test authTokenProviderReuseAccessToken
    }

    /**
     * Test the property 'authTokenProviderRelaxedSsl'
     */
    @Test
    public void authTokenProviderRelaxedSslTest() {
        // TODO: test authTokenProviderRelaxedSsl
    }

    /**
     * Test the property 'tokenRequestCustomizerType'
     */
    @Test
    public void tokenRequestCustomizerTypeTest() {
        // TODO: test tokenRequestCustomizerType
    }

    /**
     * Test the property 'authTokenValidatorType'
     */
    @Test
    public void authTokenValidatorTypeTest() {
        // TODO: test authTokenValidatorType
    }

}
