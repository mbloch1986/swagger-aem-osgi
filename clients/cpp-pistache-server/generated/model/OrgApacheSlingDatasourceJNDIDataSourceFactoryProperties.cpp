/**
* Adobe Experience Manager OSGI config (AEM) API
* Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
*
* OpenAPI spec version: 1.0.0-pre.0
* Contact: opensource@shinesolutions.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/


#include "OrgApacheSlingDatasourceJNDIDataSourceFactoryProperties.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

OrgApacheSlingDatasourceJNDIDataSourceFactoryProperties::OrgApacheSlingDatasourceJNDIDataSourceFactoryProperties()
{
    m_Datasource_nameIsSet = false;
    m_Datasource_svc_prop_nameIsSet = false;
    m_Datasource_jndi_nameIsSet = false;
    m_Jndi_propertiesIsSet = false;
    
}

OrgApacheSlingDatasourceJNDIDataSourceFactoryProperties::~OrgApacheSlingDatasourceJNDIDataSourceFactoryProperties()
{
}

void OrgApacheSlingDatasourceJNDIDataSourceFactoryProperties::validate()
{
    // TODO: implement validation
}

nlohmann::json OrgApacheSlingDatasourceJNDIDataSourceFactoryProperties::toJson() const
{
    nlohmann::json val = nlohmann::json::object();

    if(m_Datasource_nameIsSet)
    {
        val["datasource.name"] = ModelBase::toJson(m_Datasource_name);
    }
    if(m_Datasource_svc_prop_nameIsSet)
    {
        val["datasource.svc.prop.name"] = ModelBase::toJson(m_Datasource_svc_prop_name);
    }
    if(m_Datasource_jndi_nameIsSet)
    {
        val["datasource.jndi.name"] = ModelBase::toJson(m_Datasource_jndi_name);
    }
    if(m_Jndi_propertiesIsSet)
    {
        val["jndi.properties"] = ModelBase::toJson(m_Jndi_properties);
    }
    

    return val;
}

void OrgApacheSlingDatasourceJNDIDataSourceFactoryProperties::fromJson(nlohmann::json& val)
{
    if(val.find("datasource.name") != val.end())
    {
        if(!val["datasource.name"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["datasource.name"]);
            setDatasourceName( newItem );
        }
        
    }
    if(val.find("datasource.svc.prop.name") != val.end())
    {
        if(!val["datasource.svc.prop.name"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["datasource.svc.prop.name"]);
            setDatasourceSvcPropName( newItem );
        }
        
    }
    if(val.find("datasource.jndi.name") != val.end())
    {
        if(!val["datasource.jndi.name"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["datasource.jndi.name"]);
            setDatasourceJndiName( newItem );
        }
        
    }
    if(val.find("jndi.properties") != val.end())
    {
        if(!val["jndi.properties"].is_null())
        {
            ConfigNodePropertyArray newItem;
            newItem.fromJson(val["jndi.properties"]);
            setJndiProperties( newItem );
        }
        
    }
    
}


ConfigNodePropertyString OrgApacheSlingDatasourceJNDIDataSourceFactoryProperties::getDatasourceName() const
{
    return m_Datasource_name;
}
void OrgApacheSlingDatasourceJNDIDataSourceFactoryProperties::setDatasourceName(ConfigNodePropertyString const& value)
{
    m_Datasource_name = value;
    m_Datasource_nameIsSet = true;
}
bool OrgApacheSlingDatasourceJNDIDataSourceFactoryProperties::datasourceNameIsSet() const
{
    return m_Datasource_nameIsSet;
}
void OrgApacheSlingDatasourceJNDIDataSourceFactoryProperties::unsetDatasource_name()
{
    m_Datasource_nameIsSet = false;
}
ConfigNodePropertyString OrgApacheSlingDatasourceJNDIDataSourceFactoryProperties::getDatasourceSvcPropName() const
{
    return m_Datasource_svc_prop_name;
}
void OrgApacheSlingDatasourceJNDIDataSourceFactoryProperties::setDatasourceSvcPropName(ConfigNodePropertyString const& value)
{
    m_Datasource_svc_prop_name = value;
    m_Datasource_svc_prop_nameIsSet = true;
}
bool OrgApacheSlingDatasourceJNDIDataSourceFactoryProperties::datasourceSvcPropNameIsSet() const
{
    return m_Datasource_svc_prop_nameIsSet;
}
void OrgApacheSlingDatasourceJNDIDataSourceFactoryProperties::unsetDatasource_svc_prop_name()
{
    m_Datasource_svc_prop_nameIsSet = false;
}
ConfigNodePropertyString OrgApacheSlingDatasourceJNDIDataSourceFactoryProperties::getDatasourceJndiName() const
{
    return m_Datasource_jndi_name;
}
void OrgApacheSlingDatasourceJNDIDataSourceFactoryProperties::setDatasourceJndiName(ConfigNodePropertyString const& value)
{
    m_Datasource_jndi_name = value;
    m_Datasource_jndi_nameIsSet = true;
}
bool OrgApacheSlingDatasourceJNDIDataSourceFactoryProperties::datasourceJndiNameIsSet() const
{
    return m_Datasource_jndi_nameIsSet;
}
void OrgApacheSlingDatasourceJNDIDataSourceFactoryProperties::unsetDatasource_jndi_name()
{
    m_Datasource_jndi_nameIsSet = false;
}
ConfigNodePropertyArray OrgApacheSlingDatasourceJNDIDataSourceFactoryProperties::getJndiProperties() const
{
    return m_Jndi_properties;
}
void OrgApacheSlingDatasourceJNDIDataSourceFactoryProperties::setJndiProperties(ConfigNodePropertyArray const& value)
{
    m_Jndi_properties = value;
    m_Jndi_propertiesIsSet = true;
}
bool OrgApacheSlingDatasourceJNDIDataSourceFactoryProperties::jndiPropertiesIsSet() const
{
    return m_Jndi_propertiesIsSet;
}
void OrgApacheSlingDatasourceJNDIDataSourceFactoryProperties::unsetJndi_properties()
{
    m_Jndi_propertiesIsSet = false;
}

}
}
}
}

