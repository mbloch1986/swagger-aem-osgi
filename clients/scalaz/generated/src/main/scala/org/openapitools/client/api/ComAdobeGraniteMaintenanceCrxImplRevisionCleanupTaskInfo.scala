package org.openapitools.client.api

import argonaut._
import argonaut.EncodeJson._
import argonaut.DecodeJson._

import org.http4s.{EntityDecoder, EntityEncoder}
import org.http4s.argonaut._
import org.joda.time.DateTime
import ComAdobeGraniteMaintenanceCrxImplRevisionCleanupTaskInfo._

case class ComAdobeGraniteMaintenanceCrxImplRevisionCleanupTaskInfo (
  pid: Option[String],
title: Option[String],
description: Option[String],
properties: Option[ComAdobeGraniteMaintenanceCrxImplRevisionCleanupTaskProperties])

object ComAdobeGraniteMaintenanceCrxImplRevisionCleanupTaskInfo {
  import DateTimeCodecs._

  implicit val ComAdobeGraniteMaintenanceCrxImplRevisionCleanupTaskInfoCodecJson: CodecJson[ComAdobeGraniteMaintenanceCrxImplRevisionCleanupTaskInfo] = CodecJson.derive[ComAdobeGraniteMaintenanceCrxImplRevisionCleanupTaskInfo]
  implicit val ComAdobeGraniteMaintenanceCrxImplRevisionCleanupTaskInfoDecoder: EntityDecoder[ComAdobeGraniteMaintenanceCrxImplRevisionCleanupTaskInfo] = jsonOf[ComAdobeGraniteMaintenanceCrxImplRevisionCleanupTaskInfo]
  implicit val ComAdobeGraniteMaintenanceCrxImplRevisionCleanupTaskInfoEncoder: EntityEncoder[ComAdobeGraniteMaintenanceCrxImplRevisionCleanupTaskInfo] = jsonEncoderOf[ComAdobeGraniteMaintenanceCrxImplRevisionCleanupTaskInfo]
}
