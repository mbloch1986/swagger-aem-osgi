/**
* Adobe Experience Manager OSGI config (AEM) API
* Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
*
* OpenAPI spec version: 1.0.0-pre.0
* Contact: opensource@shinesolutions.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/


#include "ComAdobeGraniteLoggingImplLogAnalyserImplProperties.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

ComAdobeGraniteLoggingImplLogAnalyserImplProperties::ComAdobeGraniteLoggingImplLogAnalyserImplProperties()
{
    m_Messages_queue_sizeIsSet = false;
    m_Logger_configIsSet = false;
    m_Messages_sizeIsSet = false;
    
}

ComAdobeGraniteLoggingImplLogAnalyserImplProperties::~ComAdobeGraniteLoggingImplLogAnalyserImplProperties()
{
}

void ComAdobeGraniteLoggingImplLogAnalyserImplProperties::validate()
{
    // TODO: implement validation
}

nlohmann::json ComAdobeGraniteLoggingImplLogAnalyserImplProperties::toJson() const
{
    nlohmann::json val = nlohmann::json::object();

    if(m_Messages_queue_sizeIsSet)
    {
        val["messages.queue.size"] = ModelBase::toJson(m_Messages_queue_size);
    }
    if(m_Logger_configIsSet)
    {
        val["logger.config"] = ModelBase::toJson(m_Logger_config);
    }
    if(m_Messages_sizeIsSet)
    {
        val["messages.size"] = ModelBase::toJson(m_Messages_size);
    }
    

    return val;
}

void ComAdobeGraniteLoggingImplLogAnalyserImplProperties::fromJson(nlohmann::json& val)
{
    if(val.find("messages.queue.size") != val.end())
    {
        if(!val["messages.queue.size"].is_null())
        {
            ConfigNodePropertyInteger newItem;
            newItem.fromJson(val["messages.queue.size"]);
            setMessagesQueueSize( newItem );
        }
        
    }
    if(val.find("logger.config") != val.end())
    {
        if(!val["logger.config"].is_null())
        {
            ConfigNodePropertyArray newItem;
            newItem.fromJson(val["logger.config"]);
            setLoggerConfig( newItem );
        }
        
    }
    if(val.find("messages.size") != val.end())
    {
        if(!val["messages.size"].is_null())
        {
            ConfigNodePropertyInteger newItem;
            newItem.fromJson(val["messages.size"]);
            setMessagesSize( newItem );
        }
        
    }
    
}


ConfigNodePropertyInteger ComAdobeGraniteLoggingImplLogAnalyserImplProperties::getMessagesQueueSize() const
{
    return m_Messages_queue_size;
}
void ComAdobeGraniteLoggingImplLogAnalyserImplProperties::setMessagesQueueSize(ConfigNodePropertyInteger const& value)
{
    m_Messages_queue_size = value;
    m_Messages_queue_sizeIsSet = true;
}
bool ComAdobeGraniteLoggingImplLogAnalyserImplProperties::messagesQueueSizeIsSet() const
{
    return m_Messages_queue_sizeIsSet;
}
void ComAdobeGraniteLoggingImplLogAnalyserImplProperties::unsetMessages_queue_size()
{
    m_Messages_queue_sizeIsSet = false;
}
ConfigNodePropertyArray ComAdobeGraniteLoggingImplLogAnalyserImplProperties::getLoggerConfig() const
{
    return m_Logger_config;
}
void ComAdobeGraniteLoggingImplLogAnalyserImplProperties::setLoggerConfig(ConfigNodePropertyArray const& value)
{
    m_Logger_config = value;
    m_Logger_configIsSet = true;
}
bool ComAdobeGraniteLoggingImplLogAnalyserImplProperties::loggerConfigIsSet() const
{
    return m_Logger_configIsSet;
}
void ComAdobeGraniteLoggingImplLogAnalyserImplProperties::unsetLogger_config()
{
    m_Logger_configIsSet = false;
}
ConfigNodePropertyInteger ComAdobeGraniteLoggingImplLogAnalyserImplProperties::getMessagesSize() const
{
    return m_Messages_size;
}
void ComAdobeGraniteLoggingImplLogAnalyserImplProperties::setMessagesSize(ConfigNodePropertyInteger const& value)
{
    m_Messages_size = value;
    m_Messages_sizeIsSet = true;
}
bool ComAdobeGraniteLoggingImplLogAnalyserImplProperties::messagesSizeIsSet() const
{
    return m_Messages_sizeIsSet;
}
void ComAdobeGraniteLoggingImplLogAnalyserImplProperties::unsetMessages_size()
{
    m_Messages_sizeIsSet = false;
}

}
}
}
}

