/* 
 * Adobe Experience Manager OSGI config (AEM) API
 *
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 * Generated by: https://openapi-generator.tech
 */


#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct ComDayCqDamInddProcessInddMediaExtractProcessProperties {
  #[serde(rename = "process.label")]
  process_label: Option<::models::ConfigNodePropertyString>,
  #[serde(rename = "cq.dam.indd.pages.regex")]
  cq_dam_indd_pages_regex: Option<::models::ConfigNodePropertyString>,
  #[serde(rename = "ids.job.decoupled")]
  ids_job_decoupled: Option<::models::ConfigNodePropertyBoolean>,
  #[serde(rename = "ids.job.workflow.model")]
  ids_job_workflow_model: Option<::models::ConfigNodePropertyString>
}

impl ComDayCqDamInddProcessInddMediaExtractProcessProperties {
  pub fn new() -> ComDayCqDamInddProcessInddMediaExtractProcessProperties {
    ComDayCqDamInddProcessInddMediaExtractProcessProperties {
      process_label: None,
      cq_dam_indd_pages_regex: None,
      ids_job_decoupled: None,
      ids_job_workflow_model: None
    }
  }

  pub fn set_process_label(&mut self, process_label: ::models::ConfigNodePropertyString) {
    self.process_label = Some(process_label);
  }

  pub fn with_process_label(mut self, process_label: ::models::ConfigNodePropertyString) -> ComDayCqDamInddProcessInddMediaExtractProcessProperties {
    self.process_label = Some(process_label);
    self
  }

  pub fn process_label(&self) -> Option<&::models::ConfigNodePropertyString> {
    self.process_label.as_ref()
  }

  pub fn reset_process_label(&mut self) {
    self.process_label = None;
  }

  pub fn set_cq_dam_indd_pages_regex(&mut self, cq_dam_indd_pages_regex: ::models::ConfigNodePropertyString) {
    self.cq_dam_indd_pages_regex = Some(cq_dam_indd_pages_regex);
  }

  pub fn with_cq_dam_indd_pages_regex(mut self, cq_dam_indd_pages_regex: ::models::ConfigNodePropertyString) -> ComDayCqDamInddProcessInddMediaExtractProcessProperties {
    self.cq_dam_indd_pages_regex = Some(cq_dam_indd_pages_regex);
    self
  }

  pub fn cq_dam_indd_pages_regex(&self) -> Option<&::models::ConfigNodePropertyString> {
    self.cq_dam_indd_pages_regex.as_ref()
  }

  pub fn reset_cq_dam_indd_pages_regex(&mut self) {
    self.cq_dam_indd_pages_regex = None;
  }

  pub fn set_ids_job_decoupled(&mut self, ids_job_decoupled: ::models::ConfigNodePropertyBoolean) {
    self.ids_job_decoupled = Some(ids_job_decoupled);
  }

  pub fn with_ids_job_decoupled(mut self, ids_job_decoupled: ::models::ConfigNodePropertyBoolean) -> ComDayCqDamInddProcessInddMediaExtractProcessProperties {
    self.ids_job_decoupled = Some(ids_job_decoupled);
    self
  }

  pub fn ids_job_decoupled(&self) -> Option<&::models::ConfigNodePropertyBoolean> {
    self.ids_job_decoupled.as_ref()
  }

  pub fn reset_ids_job_decoupled(&mut self) {
    self.ids_job_decoupled = None;
  }

  pub fn set_ids_job_workflow_model(&mut self, ids_job_workflow_model: ::models::ConfigNodePropertyString) {
    self.ids_job_workflow_model = Some(ids_job_workflow_model);
  }

  pub fn with_ids_job_workflow_model(mut self, ids_job_workflow_model: ::models::ConfigNodePropertyString) -> ComDayCqDamInddProcessInddMediaExtractProcessProperties {
    self.ids_job_workflow_model = Some(ids_job_workflow_model);
    self
  }

  pub fn ids_job_workflow_model(&self) -> Option<&::models::ConfigNodePropertyString> {
    self.ids_job_workflow_model.as_ref()
  }

  pub fn reset_ids_job_workflow_model(&mut self) {
    self.ids_job_workflow_model = None;
  }

}



