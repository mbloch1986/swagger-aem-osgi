<?php
/**
 * OrgApacheSlingEngineImplSlingMainServletProperties
 *
 * PHP version 5
 *
 * @category Class
 * @package  OpenAPI\Server\Model
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * Adobe Experience Manager OSGI config (AEM) API
 *
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 *
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Do not edit the class manually.
 */

namespace OpenAPI\Server\Model;

use Symfony\Component\Validator\Constraints as Assert;
use JMS\Serializer\Annotation\Type;
use JMS\Serializer\Annotation\SerializedName;

/**
 * Class representing the OrgApacheSlingEngineImplSlingMainServletProperties model.
 *
 * @package OpenAPI\Server\Model
 * @author  OpenAPI Generator team
 */
class OrgApacheSlingEngineImplSlingMainServletProperties 
{
        /**
     * @var OpenAPI\Server\Model\ConfigNodePropertyInteger|null
     * @SerializedName("sling.max.calls")
     * @Assert\Type("OpenAPI\Server\Model\ConfigNodePropertyInteger")
     * @Type("OpenAPI\Server\Model\ConfigNodePropertyInteger")
     */
    protected $slingMaxCalls;

    /**
     * @var OpenAPI\Server\Model\ConfigNodePropertyInteger|null
     * @SerializedName("sling.max.inclusions")
     * @Assert\Type("OpenAPI\Server\Model\ConfigNodePropertyInteger")
     * @Type("OpenAPI\Server\Model\ConfigNodePropertyInteger")
     */
    protected $slingMaxInclusions;

    /**
     * @var OpenAPI\Server\Model\ConfigNodePropertyBoolean|null
     * @SerializedName("sling.trace.allow")
     * @Assert\Type("OpenAPI\Server\Model\ConfigNodePropertyBoolean")
     * @Type("OpenAPI\Server\Model\ConfigNodePropertyBoolean")
     */
    protected $slingTraceAllow;

    /**
     * @var OpenAPI\Server\Model\ConfigNodePropertyInteger|null
     * @SerializedName("sling.max.record.requests")
     * @Assert\Type("OpenAPI\Server\Model\ConfigNodePropertyInteger")
     * @Type("OpenAPI\Server\Model\ConfigNodePropertyInteger")
     */
    protected $slingMaxRecordRequests;

    /**
     * @var OpenAPI\Server\Model\ConfigNodePropertyArray|null
     * @SerializedName("sling.store.pattern.requests")
     * @Assert\Type("OpenAPI\Server\Model\ConfigNodePropertyArray")
     * @Type("OpenAPI\Server\Model\ConfigNodePropertyArray")
     */
    protected $slingStorePatternRequests;

    /**
     * @var OpenAPI\Server\Model\ConfigNodePropertyString|null
     * @SerializedName("sling.serverinfo")
     * @Assert\Type("OpenAPI\Server\Model\ConfigNodePropertyString")
     * @Type("OpenAPI\Server\Model\ConfigNodePropertyString")
     */
    protected $slingServerinfo;

    /**
     * @var OpenAPI\Server\Model\ConfigNodePropertyArray|null
     * @SerializedName("sling.additional.response.headers")
     * @Assert\Type("OpenAPI\Server\Model\ConfigNodePropertyArray")
     * @Type("OpenAPI\Server\Model\ConfigNodePropertyArray")
     */
    protected $slingAdditionalResponseHeaders;

    /**
     * Constructor
     * @param mixed[] $data Associated array of property values initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->slingMaxCalls = isset($data['slingMaxCalls']) ? $data['slingMaxCalls'] : null;
        $this->slingMaxInclusions = isset($data['slingMaxInclusions']) ? $data['slingMaxInclusions'] : null;
        $this->slingTraceAllow = isset($data['slingTraceAllow']) ? $data['slingTraceAllow'] : null;
        $this->slingMaxRecordRequests = isset($data['slingMaxRecordRequests']) ? $data['slingMaxRecordRequests'] : null;
        $this->slingStorePatternRequests = isset($data['slingStorePatternRequests']) ? $data['slingStorePatternRequests'] : null;
        $this->slingServerinfo = isset($data['slingServerinfo']) ? $data['slingServerinfo'] : null;
        $this->slingAdditionalResponseHeaders = isset($data['slingAdditionalResponseHeaders']) ? $data['slingAdditionalResponseHeaders'] : null;
    }

    /**
     * Gets slingMaxCalls.
     *
     * @return OpenAPI\Server\Model\ConfigNodePropertyInteger|null
     */
    public function getSlingMaxCalls()
    {
        return $this->slingMaxCalls;
    }

    /**
     * Sets slingMaxCalls.
     *
     * @param OpenAPI\Server\Model\ConfigNodePropertyInteger|null $slingMaxCalls
     *
     * @return $this
     */
    public function setSlingMaxCalls(ConfigNodePropertyInteger $slingMaxCalls = null)
    {
        $this->slingMaxCalls = $slingMaxCalls;

        return $this;
    }

    /**
     * Gets slingMaxInclusions.
     *
     * @return OpenAPI\Server\Model\ConfigNodePropertyInteger|null
     */
    public function getSlingMaxInclusions()
    {
        return $this->slingMaxInclusions;
    }

    /**
     * Sets slingMaxInclusions.
     *
     * @param OpenAPI\Server\Model\ConfigNodePropertyInteger|null $slingMaxInclusions
     *
     * @return $this
     */
    public function setSlingMaxInclusions(ConfigNodePropertyInteger $slingMaxInclusions = null)
    {
        $this->slingMaxInclusions = $slingMaxInclusions;

        return $this;
    }

    /**
     * Gets slingTraceAllow.
     *
     * @return OpenAPI\Server\Model\ConfigNodePropertyBoolean|null
     */
    public function getSlingTraceAllow()
    {
        return $this->slingTraceAllow;
    }

    /**
     * Sets slingTraceAllow.
     *
     * @param OpenAPI\Server\Model\ConfigNodePropertyBoolean|null $slingTraceAllow
     *
     * @return $this
     */
    public function setSlingTraceAllow(ConfigNodePropertyBoolean $slingTraceAllow = null)
    {
        $this->slingTraceAllow = $slingTraceAllow;

        return $this;
    }

    /**
     * Gets slingMaxRecordRequests.
     *
     * @return OpenAPI\Server\Model\ConfigNodePropertyInteger|null
     */
    public function getSlingMaxRecordRequests()
    {
        return $this->slingMaxRecordRequests;
    }

    /**
     * Sets slingMaxRecordRequests.
     *
     * @param OpenAPI\Server\Model\ConfigNodePropertyInteger|null $slingMaxRecordRequests
     *
     * @return $this
     */
    public function setSlingMaxRecordRequests(ConfigNodePropertyInteger $slingMaxRecordRequests = null)
    {
        $this->slingMaxRecordRequests = $slingMaxRecordRequests;

        return $this;
    }

    /**
     * Gets slingStorePatternRequests.
     *
     * @return OpenAPI\Server\Model\ConfigNodePropertyArray|null
     */
    public function getSlingStorePatternRequests()
    {
        return $this->slingStorePatternRequests;
    }

    /**
     * Sets slingStorePatternRequests.
     *
     * @param OpenAPI\Server\Model\ConfigNodePropertyArray|null $slingStorePatternRequests
     *
     * @return $this
     */
    public function setSlingStorePatternRequests(ConfigNodePropertyArray $slingStorePatternRequests = null)
    {
        $this->slingStorePatternRequests = $slingStorePatternRequests;

        return $this;
    }

    /**
     * Gets slingServerinfo.
     *
     * @return OpenAPI\Server\Model\ConfigNodePropertyString|null
     */
    public function getSlingServerinfo()
    {
        return $this->slingServerinfo;
    }

    /**
     * Sets slingServerinfo.
     *
     * @param OpenAPI\Server\Model\ConfigNodePropertyString|null $slingServerinfo
     *
     * @return $this
     */
    public function setSlingServerinfo(ConfigNodePropertyString $slingServerinfo = null)
    {
        $this->slingServerinfo = $slingServerinfo;

        return $this;
    }

    /**
     * Gets slingAdditionalResponseHeaders.
     *
     * @return OpenAPI\Server\Model\ConfigNodePropertyArray|null
     */
    public function getSlingAdditionalResponseHeaders()
    {
        return $this->slingAdditionalResponseHeaders;
    }

    /**
     * Sets slingAdditionalResponseHeaders.
     *
     * @param OpenAPI\Server\Model\ConfigNodePropertyArray|null $slingAdditionalResponseHeaders
     *
     * @return $this
     */
    public function setSlingAdditionalResponseHeaders(ConfigNodePropertyArray $slingAdditionalResponseHeaders = null)
    {
        $this->slingAdditionalResponseHeaders = $slingAdditionalResponseHeaders;

        return $this;
    }
}


