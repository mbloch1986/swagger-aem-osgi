/* 
 * Adobe Experience Manager OSGI config (AEM) API
 *
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 * Generated by: https://openapi-generator.tech
 */


#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct ComAdobeGraniteCompatrouterImplCompatSwitchingServiceImplProperties {
  #[serde(rename = "compatgroups")]
  compatgroups: Option<::models::ConfigNodePropertyArray>,
  #[serde(rename = "enabled")]
  enabled: Option<::models::ConfigNodePropertyBoolean>
}

impl ComAdobeGraniteCompatrouterImplCompatSwitchingServiceImplProperties {
  pub fn new() -> ComAdobeGraniteCompatrouterImplCompatSwitchingServiceImplProperties {
    ComAdobeGraniteCompatrouterImplCompatSwitchingServiceImplProperties {
      compatgroups: None,
      enabled: None
    }
  }

  pub fn set_compatgroups(&mut self, compatgroups: ::models::ConfigNodePropertyArray) {
    self.compatgroups = Some(compatgroups);
  }

  pub fn with_compatgroups(mut self, compatgroups: ::models::ConfigNodePropertyArray) -> ComAdobeGraniteCompatrouterImplCompatSwitchingServiceImplProperties {
    self.compatgroups = Some(compatgroups);
    self
  }

  pub fn compatgroups(&self) -> Option<&::models::ConfigNodePropertyArray> {
    self.compatgroups.as_ref()
  }

  pub fn reset_compatgroups(&mut self) {
    self.compatgroups = None;
  }

  pub fn set_enabled(&mut self, enabled: ::models::ConfigNodePropertyBoolean) {
    self.enabled = Some(enabled);
  }

  pub fn with_enabled(mut self, enabled: ::models::ConfigNodePropertyBoolean) -> ComAdobeGraniteCompatrouterImplCompatSwitchingServiceImplProperties {
    self.enabled = Some(enabled);
    self
  }

  pub fn enabled(&self) -> Option<&::models::ConfigNodePropertyBoolean> {
    self.enabled.as_ref()
  }

  pub fn reset_enabled(&mut self) {
    self.enabled = None;
  }

}



