/**
* Adobe Experience Manager OSGI config (AEM) API
* Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
*
* OpenAPI spec version: 1.0.0-pre.0
* Contact: opensource@shinesolutions.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
/*
 * ConfigmgrApi.h
 *
 * 
 */

#ifndef ConfigmgrApi_H_
#define ConfigmgrApi_H_


#include <pistache/endpoint.h>
#include <pistache/http.h>
#include <pistache/router.h>
#include <pistache/http_headers.h>

#include <pistache/optional.h>

#include "AdaptiveFormAndInteractiveCommunicationWebChannelConfigurationInfo.h"
#include "AdaptiveFormAndInteractiveCommunicationWebChannelThemeConfigurInfo.h"
#include "AnalyticsComponentQueryCacheServiceInfo.h"
#include "ApacheSlingHealthCheckResultHTMLSerializerInfo.h"
#include "ComAdobeAemFormsndocumentsConfigAEMFormsManagerConfigurationInfo.h"
#include "ComAdobeAemTransactionCoreImplTransactionRecorderInfo.h"
#include "ComAdobeAemUpgradePrechecksHcImplDeprecateIndexesHCInfo.h"
#include "ComAdobeAemUpgradePrechecksHcImplReplicationAgentsDisabledHCInfo.h"
#include "ComAdobeAemUpgradePrechecksMbeanImplPreUpgradeTasksMBeanImplInfo.h"
#include "ComAdobeAemUpgradePrechecksTasksImplConsistencyCheckTaskImplInfo.h"
#include "ComAdobeCqAccountApiAccountManagementServiceInfo.h"
#include "ComAdobeCqAccountImplAccountManagementServletInfo.h"
#include "ComAdobeCqAddressImplLocationLocationListServletInfo.h"
#include "ComAdobeCqAuditPurgeDamInfo.h"
#include "ComAdobeCqAuditPurgePagesInfo.h"
#include "ComAdobeCqAuditPurgeReplicationInfo.h"
#include "ComAdobeCqCdnRewriterImplAWSCloudFrontRewriterInfo.h"
#include "ComAdobeCqCdnRewriterImplCDNConfigServiceImplInfo.h"
#include "ComAdobeCqCdnRewriterImplCDNRewriterInfo.h"
#include "ComAdobeCqCloudconfigCoreImplConfigurationReplicationEventHandleInfo.h"
#include "ComAdobeCqCommerceImplAssetDynamicImageHandlerInfo.h"
#include "ComAdobeCqCommerceImplAssetProductAssetHandlerProviderImplInfo.h"
#include "ComAdobeCqCommerceImplAssetStaticImageHandlerInfo.h"
#include "ComAdobeCqCommerceImplAssetVideoHandlerInfo.h"
#include "ComAdobeCqCommerceImplPromotionPromotionManagerImplInfo.h"
#include "ComAdobeCqCommercePimImplCataloggeneratorCatalogGeneratorImplInfo.h"
#include "ComAdobeCqCommercePimImplPageEventListenerInfo.h"
#include "ComAdobeCqCommercePimImplProductfeedProductFeedServiceImplInfo.h"
#include "ComAdobeCqContentinsightImplReportingServicesSettingsProviderInfo.h"
#include "ComAdobeCqContentinsightImplServletsBrightEdgeProxyServletInfo.h"
#include "ComAdobeCqContentinsightImplServletsReportingServicesProxyServleInfo.h"
#include "ComAdobeCqDamCfmImplComponentComponentConfigImplInfo.h"
#include "ComAdobeCqDamCfmImplConfFeatureConfigImplInfo.h"
#include "ComAdobeCqDamCfmImplContentRewriterAssetProcessorInfo.h"
#include "ComAdobeCqDamCfmImplContentRewriterParRangeFilterInfo.h"
#include "ComAdobeCqDamCfmImplContentRewriterPayloadFilterInfo.h"
#include "ComAdobeCqDamDmProcessImagePTiffManagerImplInfo.h"
#include "ComAdobeCqDamIpsImplReplicationTriggerReplicateOnModifyWorkerInfo.h"
#include "ComAdobeCqDamMacSyncHelperImplMACSyncClientImplInfo.h"
#include "ComAdobeCqDamMacSyncImplDAMSyncServiceImplInfo.h"
#include "ComAdobeCqDamProcessorNuiImplNuiAssetProcessorInfo.h"
#include "ComAdobeCqDamS7imagingImplIsImageServerComponentInfo.h"
#include "ComAdobeCqDamS7imagingImplPsPlatformServerServletInfo.h"
#include "ComAdobeCqDamWebdavImplIoAssetIOHandlerInfo.h"
#include "ComAdobeCqDamWebdavImplIoDamWebdavVersionLinkingJobInfo.h"
#include "ComAdobeCqDamWebdavImplIoSpecialFilesHandlerInfo.h"
#include "ComAdobeCqDeserfwImplDeserializationFirewallImplInfo.h"
#include "ComAdobeCqDtmImplServiceDTMWebServiceImplInfo.h"
#include "ComAdobeCqDtmImplServletsDTMDeployHookServletInfo.h"
#include "ComAdobeCqDtmReactorImplServiceWebServiceImplInfo.h"
#include "ComAdobeCqExperiencelogImplExperienceLogConfigServletInfo.h"
#include "ComAdobeCqHcContentPackagesHealthCheckInfo.h"
#include "ComAdobeCqHistoryImplHistoryRequestFilterInfo.h"
#include "ComAdobeCqHistoryImplHistoryServiceImplInfo.h"
#include "ComAdobeCqInboxImplTypeproviderItemTypeProviderInfo.h"
#include "ComAdobeCqProjectsImplServletProjectImageServletInfo.h"
#include "ComAdobeCqProjectsPurgeSchedulerInfo.h"
#include "ComAdobeCqScheduledExporterImplScheduledExporterImplInfo.h"
#include "ComAdobeCqScreensAnalyticsImplScreensAnalyticsServiceImplInfo.h"
#include "ComAdobeCqScreensDeviceImplDeviceServiceInfo.h"
#include "ComAdobeCqScreensDeviceRegistrationImplRegistrationServiceImplInfo.h"
#include "ComAdobeCqScreensImplHandlerChannelsUpdateHandlerInfo.h"
#include "ComAdobeCqScreensImplJobsDistributedDevicesStatiUpdateJobInfo.h"
#include "ComAdobeCqScreensImplRemoteImplDistributedHttpClientImplInfo.h"
#include "ComAdobeCqScreensImplScreensChannelPostProcessorInfo.h"
#include "ComAdobeCqScreensMonitoringImplScreensMonitoringServiceImplInfo.h"
#include "ComAdobeCqScreensMqActivemqImplArtemisJMSProviderInfo.h"
#include "ComAdobeCqScreensOfflinecontentImplBulkOfflineUpdateServiceImplInfo.h"
#include "ComAdobeCqScreensOfflinecontentImplOfflineContentServiceImplInfo.h"
#include "ComAdobeCqScreensSegmentationImplSegmentationFeatureFlagInfo.h"
#include "ComAdobeCqSecurityHcBundlesImplHtmlLibraryManagerConfigHealthChInfo.h"
#include "ComAdobeCqSecurityHcBundlesImplWcmFilterHealthCheckInfo.h"
#include "ComAdobeCqSecurityHcDispatcherImplDispatcherAccessHealthCheckInfo.h"
#include "ComAdobeCqSecurityHcPackagesImplExampleContentHealthCheckInfo.h"
#include "ComAdobeCqSecurityHcWebserverImplClickjackingHealthCheckInfo.h"
#include "ComAdobeCqSocialAccountverificationImplAccountManagementConfigImInfo.h"
#include "ComAdobeCqSocialActivitystreamsClientImplSocialActivityComponenInfo.h"
#include "ComAdobeCqSocialActivitystreamsClientImplSocialActivityStreamCoInfo.h"
#include "ComAdobeCqSocialActivitystreamsListenerImplEventListenerHandlerInfo.h"
#include "ComAdobeCqSocialActivitystreamsListenerImplModerationEventExtenInfo.h"
#include "ComAdobeCqSocialActivitystreamsListenerImplRatingEventActivitySInfo.h"
#include "ComAdobeCqSocialActivitystreamsListenerImplResourceActivityStreInfo.h"
#include "ComAdobeCqSocialCalendarClientEndpointsImplCalendarOperationsIInfo.h"
#include "ComAdobeCqSocialCalendarClientOperationextensionsEventAttachmenInfo.h"
#include "ComAdobeCqSocialCalendarServletsTimeZoneServletInfo.h"
#include "ComAdobeCqSocialCommonsCommentsEndpointsImplCommentDeleteEventInfo.h"
#include "ComAdobeCqSocialCommonsCommentsEndpointsImplCommentOperationSeInfo.h"
#include "ComAdobeCqSocialCommonsCommentsEndpointsImplTranslationOperatiInfo.h"
#include "ComAdobeCqSocialCommonsCommentsListingImplSearchCommentSocialCInfo.h"
#include "ComAdobeCqSocialCommonsCommentsSchedulerImplSearchScheduledPosInfo.h"
#include "ComAdobeCqSocialCommonsCorsCORSAuthenticationFilterInfo.h"
#include "ComAdobeCqSocialCommonsEmailreplyImplAndroidEmailClientProviderInfo.h"
#include "ComAdobeCqSocialCommonsEmailreplyImplCommentEmailBuilderImplInfo.h"
#include "ComAdobeCqSocialCommonsEmailreplyImplCommentEmailEventListenerInfo.h"
#include "ComAdobeCqSocialCommonsEmailreplyImplCustomEmailClientProviderInfo.h"
#include "ComAdobeCqSocialCommonsEmailreplyImplEmailQuotedTextPatternsImpInfo.h"
#include "ComAdobeCqSocialCommonsEmailreplyImplEmailReplyConfigurationImpInfo.h"
#include "ComAdobeCqSocialCommonsEmailreplyImplEmailReplyImporterInfo.h"
#include "ComAdobeCqSocialCommonsEmailreplyImplGmailEmailClientProviderInfo.h"
#include "ComAdobeCqSocialCommonsEmailreplyImplIOSEmailClientProviderInfo.h"
#include "ComAdobeCqSocialCommonsEmailreplyImplMacmailEmailClientProviderInfo.h"
#include "ComAdobeCqSocialCommonsEmailreplyImplOutLookEmailClientProviderInfo.h"
#include "ComAdobeCqSocialCommonsEmailreplyImplUnknownEmailClientProviderInfo.h"
#include "ComAdobeCqSocialCommonsEmailreplyImplYahooEmailClientProviderInfo.h"
#include "ComAdobeCqSocialCommonsMaintainanceImplDeleteTempUGCImageUploadInfo.h"
#include "ComAdobeCqSocialCommonsUgclimiterImplUGCLimiterServiceImplInfo.h"
#include "ComAdobeCqSocialCommonsUgclimitsconfigImplCommunityUserUGCLimitInfo.h"
#include "ComAdobeCqSocialConnectOauthImplFacebookProviderImplInfo.h"
#include "ComAdobeCqSocialConnectOauthImplSocialOAuthAuthenticationHandleInfo.h"
#include "ComAdobeCqSocialConnectOauthImplSocialOAuthUserProfileMapperInfo.h"
#include "ComAdobeCqSocialConnectOauthImplTwitterProviderImplInfo.h"
#include "ComAdobeCqSocialContentFragmentsServicesImplCommunitiesFragmenInfo.h"
#include "ComAdobeCqSocialDatastoreAsImplASResourceProviderFactoryInfo.h"
#include "ComAdobeCqSocialDatastoreOpImplSocialMSResourceProviderFactoryInfo.h"
#include "ComAdobeCqSocialDatastoreRdbImplSocialRDBResourceProviderFactorInfo.h"
#include "ComAdobeCqSocialEnablementAdaptorsEnablementLearningPathAdaptorFInfo.h"
#include "ComAdobeCqSocialEnablementAdaptorsEnablementResourceAdaptorFactoInfo.h"
#include "ComAdobeCqSocialEnablementLearningpathEndpointsImplEnablementLInfo.h"
#include "ComAdobeCqSocialEnablementResourceEndpointsImplEnablementResouInfo.h"
#include "ComAdobeCqSocialEnablementServicesImplAuthorMarkerImplInfo.h"
#include "ComAdobeCqSocialFilelibraryClientEndpointsFilelibraryDownloadGeInfo.h"
#include "ComAdobeCqSocialFilelibraryClientEndpointsImplFileLibraryOperaInfo.h"
#include "ComAdobeCqSocialForumClientEndpointsImplForumOperationsServiceInfo.h"
#include "ComAdobeCqSocialForumDispatcherImplFlushOperationsInfo.h"
#include "ComAdobeCqSocialGroupClientImplCommunityGroupCollectionComponenInfo.h"
#include "ComAdobeCqSocialGroupImplGroupServiceImplInfo.h"
#include "ComAdobeCqSocialHandlebarsGuavaTemplateCacheImplInfo.h"
#include "ComAdobeCqSocialIdeationClientEndpointsImplIdeationOperationsSInfo.h"
#include "ComAdobeCqSocialJournalClientEndpointsImplJournalOperationsSerInfo.h"
#include "ComAdobeCqSocialMembersEndpointsImplCommunityMemberGroupProfileInfo.h"
#include "ComAdobeCqSocialMembersEndpointsImplCommunityMemberUserProfileOInfo.h"
#include "ComAdobeCqSocialMembersImplCommunityMemberGroupProfileComponentFInfo.h"
#include "ComAdobeCqSocialMessagingClientEndpointsImplMessagingOperationInfo.h"
#include "ComAdobeCqSocialModerationDashboardApiFilterGroupSocialComponenInfo.h"
#include "ComAdobeCqSocialModerationDashboardApiModerationDashboardSocialInfo.h"
#include "ComAdobeCqSocialModerationDashboardApiUserDetailsSocialComponenInfo.h"
#include "ComAdobeCqSocialModerationDashboardInternalImplFilterGroupSociInfo.h"
#include "ComAdobeCqSocialNotificationsImplMentionsRouterInfo.h"
#include "ComAdobeCqSocialNotificationsImplNotificationManagerImplInfo.h"
#include "ComAdobeCqSocialNotificationsImplNotificationsRouterInfo.h"
#include "ComAdobeCqSocialQnaClientEndpointsImplQnaForumOperationsServicInfo.h"
#include "ComAdobeCqSocialReportingAnalyticsServicesImplAnalyticsReportIInfo.h"
#include "ComAdobeCqSocialReportingAnalyticsServicesImplAnalyticsReportMInfo.h"
#include "ComAdobeCqSocialReportingAnalyticsServicesImplSiteTrendReportSInfo.h"
#include "ComAdobeCqSocialReviewClientEndpointsImplReviewOperationsServiInfo.h"
#include "ComAdobeCqSocialScfCoreOperationsImplSocialOperationsServletInfo.h"
#include "ComAdobeCqSocialScfEndpointsImplDefaultSocialGetServletInfo.h"
#include "ComAdobeCqSocialScoringImplScoringEventListenerInfo.h"
#include "ComAdobeCqSocialServiceusersInternalImplServiceUserWrapperImplInfo.h"
#include "ComAdobeCqSocialSiteEndpointsImplSiteOperationServiceInfo.h"
#include "ComAdobeCqSocialSiteImplAnalyticsComponentConfigurationServiceImInfo.h"
#include "ComAdobeCqSocialSiteImplSiteConfiguratorImplInfo.h"
#include "ComAdobeCqSocialSrpImplSocialSolrConnectorInfo.h"
#include "ComAdobeCqSocialSyncImplDiffChangesObserverInfo.h"
#include "ComAdobeCqSocialSyncImplGroupSyncListenerImplInfo.h"
#include "ComAdobeCqSocialSyncImplPublisherSyncServiceImplInfo.h"
#include "ComAdobeCqSocialSyncImplUserSyncListenerImplInfo.h"
#include "ComAdobeCqSocialTranslationImplTranslationServiceConfigManagerInfo.h"
#include "ComAdobeCqSocialTranslationImplUGCLanguageDetectorInfo.h"
#include "ComAdobeCqSocialUgcbaseDispatcherImplFlushServiceImplInfo.h"
#include "ComAdobeCqSocialUgcbaseImplAysncReverseReplicatorImplInfo.h"
#include "ComAdobeCqSocialUgcbaseImplPublisherConfigurationImplInfo.h"
#include "ComAdobeCqSocialUgcbaseImplSocialUtilsImplInfo.h"
#include "ComAdobeCqSocialUgcbaseModerationImplAutoModerationImplInfo.h"
#include "ComAdobeCqSocialUgcbaseModerationImplSentimentProcessInfo.h"
#include "ComAdobeCqSocialUgcbaseSecurityImplDefaultAttachmentTypeBlackliInfo.h"
#include "ComAdobeCqSocialUgcbaseSecurityImplSaferSlingPostValidatorImplInfo.h"
#include "ComAdobeCqSocialUserEndpointsImplUsersGroupFromPublishServletInfo.h"
#include "ComAdobeCqSocialUserImplTransportHttpToPublisherInfo.h"
#include "ComAdobeCqUiWcmCommonsInternalServletsRteRTEFilterServletFactInfo.h"
#include "ComAdobeCqUpgradesCleanupImplUpgradeContentCleanupInfo.h"
#include "ComAdobeCqUpgradesCleanupImplUpgradeInstallFolderCleanupInfo.h"
#include "ComAdobeCqWcmJobsAsyncImplAsyncDeleteConfigProviderServiceInfo.h"
#include "ComAdobeCqWcmJobsAsyncImplAsyncJobCleanUpTaskInfo.h"
#include "ComAdobeCqWcmJobsAsyncImplAsyncMoveConfigProviderServiceInfo.h"
#include "ComAdobeCqWcmJobsAsyncImplAsyncPageMoveConfigProviderServiceInfo.h"
#include "ComAdobeCqWcmLaunchesImplLaunchesEventHandlerInfo.h"
#include "ComAdobeCqWcmMobileQrcodeServletQRCodeImageGeneratorInfo.h"
#include "ComAdobeCqWcmStyleInternalComponentStyleInfoCacheImplInfo.h"
#include "ComAdobeCqWcmTranslationImplTranslationPlatformConfigurationImplInfo.h"
#include "ComAdobeFdFpConfigFormsPortalDraftsandSubmissionConfigServiceInfo.h"
#include "ComAdobeFdFpConfigFormsPortalSchedulerServiceInfo.h"
#include "ComAdobeFormsCommonServiceImplDefaultDataProviderInfo.h"
#include "ComAdobeFormsCommonServiceImplFormsCommonConfigurationServiceImpInfo.h"
#include "ComAdobeFormsCommonServletTempCleanUpTaskInfo.h"
#include "ComAdobeGraniteAcpPlatformPlatformServletInfo.h"
#include "ComAdobeGraniteActivitystreamsImplActivityManagerImplInfo.h"
#include "ComAdobeGraniteAnalyzerBaseSystemStatusServletInfo.h"
#include "ComAdobeGraniteAnalyzerScriptsCompileAllScriptsCompilerServletInfo.h"
#include "ComAdobeGraniteApicontrollerFilterResolverHookFactoryInfo.h"
#include "ComAdobeGraniteAuthCertImplClientCertAuthHandlerInfo.h"
#include "ComAdobeGraniteAuthImsImplExternalUserIdMappingProviderExtensionInfo.h"
#include "ComAdobeGraniteAuthImsImplIMSAccessTokenRequestCustomizerImplInfo.h"
#include "ComAdobeGraniteAuthImsImplIMSInstanceCredentialsValidatorInfo.h"
#include "ComAdobeGraniteAuthImsImplIMSProviderImplInfo.h"
#include "ComAdobeGraniteAuthImsImplImsConfigProviderImplInfo.h"
#include "ComAdobeGraniteAuthImsInfo.h"
#include "ComAdobeGraniteAuthOauthAccesstokenProviderInfo.h"
#include "ComAdobeGraniteAuthOauthImplBearerAuthenticationHandlerInfo.h"
#include "ComAdobeGraniteAuthOauthImplDefaultTokenValidatorImplInfo.h"
#include "ComAdobeGraniteAuthOauthImplFacebookProviderImplInfo.h"
#include "ComAdobeGraniteAuthOauthImplGithubProviderImplInfo.h"
#include "ComAdobeGraniteAuthOauthImplGraniteProviderInfo.h"
#include "ComAdobeGraniteAuthOauthImplHelperProviderConfigManagerInfo.h"
#include "ComAdobeGraniteAuthOauthImplHelperProviderConfigManagerInternalInfo.h"
#include "ComAdobeGraniteAuthOauthImplOAuthAuthenticationHandlerInfo.h"
#include "ComAdobeGraniteAuthOauthImplTwitterProviderImplInfo.h"
#include "ComAdobeGraniteAuthOauthProviderInfo.h"
#include "ComAdobeGraniteAuthRequirementImplDefaultRequirementHandlerInfo.h"
#include "ComAdobeGraniteAuthSamlSamlAuthenticationHandlerInfo.h"
#include "ComAdobeGraniteAuthSsoImplSsoAuthenticationHandlerInfo.h"
#include "ComAdobeGraniteBundlesHcImplCodeCacheHealthCheckInfo.h"
#include "ComAdobeGraniteBundlesHcImplCrxdeSupportBundleHealthCheckInfo.h"
#include "ComAdobeGraniteBundlesHcImplDavExBundleHealthCheckInfo.h"
#include "ComAdobeGraniteBundlesHcImplInactiveBundlesHealthCheckInfo.h"
#include "ComAdobeGraniteBundlesHcImplJobsHealthCheckInfo.h"
#include "ComAdobeGraniteBundlesHcImplSlingGetServletHealthCheckInfo.h"
#include "ComAdobeGraniteBundlesHcImplSlingJavaScriptHandlerHealthCheckInfo.h"
#include "ComAdobeGraniteBundlesHcImplSlingJspScriptHandlerHealthCheckInfo.h"
#include "ComAdobeGraniteBundlesHcImplSlingReferrerFilterHealthCheckInfo.h"
#include "ComAdobeGraniteBundlesHcImplWebDavBundleHealthCheckInfo.h"
#include "ComAdobeGraniteCommentsInternalCommentReplicationContentFilterFacInfo.h"
#include "ComAdobeGraniteCompatrouterImplCompatSwitchingServiceImplInfo.h"
#include "ComAdobeGraniteCompatrouterImplRoutingConfigInfo.h"
#include "ComAdobeGraniteCompatrouterImplSwitchMappingConfigInfo.h"
#include "ComAdobeGraniteConfImplRuntimeAwareConfigurationResourceResolvingInfo.h"
#include "ComAdobeGraniteContexthubImplContextHubImplInfo.h"
#include "ComAdobeGraniteCorsImplCORSPolicyImplInfo.h"
#include "ComAdobeGraniteCsrfImplCSRFFilterInfo.h"
#include "ComAdobeGraniteCsrfImplCSRFServletInfo.h"
#include "ComAdobeGraniteDistributionCoreImplCryptoDistributionTransportSeInfo.h"
#include "ComAdobeGraniteDistributionCoreImplDiffDiffChangesObserverInfo.h"
#include "ComAdobeGraniteDistributionCoreImplDiffDiffEventListenerInfo.h"
#include "ComAdobeGraniteDistributionCoreImplDistributionToReplicationEvenInfo.h"
#include "ComAdobeGraniteDistributionCoreImplReplicationAdaptersReplicatInfo.h"
#include "ComAdobeGraniteDistributionCoreImplReplicationDistributionTransInfo.h"
#include "ComAdobeGraniteDistributionCoreImplTransportAccessTokenDistribuInfo.h"
#include "ComAdobeGraniteFragsImplCheckHttpHeaderFlagInfo.h"
#include "ComAdobeGraniteFragsImplRandomFeatureInfo.h"
#include "ComAdobeGraniteHttpcacheFileFileCacheStoreInfo.h"
#include "ComAdobeGraniteHttpcacheImplOuterCacheFilterInfo.h"
#include "ComAdobeGraniteI18nImplBundlePseudoTranslationsInfo.h"
#include "ComAdobeGraniteI18nImplPreferencesLocaleResolverServiceInfo.h"
#include "ComAdobeGraniteInfocollectorInfoCollectorInfo.h"
#include "ComAdobeGraniteJettySslInternalGraniteSslConnectorFactoryInfo.h"
#include "ComAdobeGraniteLicenseImplLicenseCheckFilterInfo.h"
#include "ComAdobeGraniteLoggingImplLogAnalyserImplInfo.h"
#include "ComAdobeGraniteLoggingImplLogErrorHealthCheckInfo.h"
#include "ComAdobeGraniteMaintenanceCrxImplDataStoreGarbageCollectionTaskInfo.h"
#include "ComAdobeGraniteMaintenanceCrxImplLuceneBinariesCleanupTaskInfo.h"
#include "ComAdobeGraniteMaintenanceCrxImplRevisionCleanupTaskInfo.h"
#include "ComAdobeGraniteMonitoringImplScriptConfigImplInfo.h"
#include "ComAdobeGraniteOauthServerAuthImplOAuth2ServerAuthenticationHanInfo.h"
#include "ComAdobeGraniteOauthServerImplAccessTokenCleanupTaskInfo.h"
#include "ComAdobeGraniteOauthServerImplOAuth2ClientRevocationServletInfo.h"
#include "ComAdobeGraniteOauthServerImplOAuth2RevocationEndpointServletInfo.h"
#include "ComAdobeGraniteOauthServerImplOAuth2TokenEndpointServletInfo.h"
#include "ComAdobeGraniteOauthServerImplOAuth2TokenRevocationServletInfo.h"
#include "ComAdobeGraniteOffloadingImplOffloadingConfiguratorInfo.h"
#include "ComAdobeGraniteOffloadingImplOffloadingJobClonerInfo.h"
#include "ComAdobeGraniteOffloadingImplOffloadingJobOffloaderInfo.h"
#include "ComAdobeGraniteOffloadingImplTransporterOffloadingAgentManagerInfo.h"
#include "ComAdobeGraniteOffloadingImplTransporterOffloadingDefaultTranspoInfo.h"
#include "ComAdobeGraniteOmnisearchImplCoreOmniSearchServiceImplInfo.h"
#include "ComAdobeGraniteOptoutImplOptOutServiceImplInfo.h"
#include "ComAdobeGraniteQueriesImplHcAsyncIndexHealthCheckInfo.h"
#include "ComAdobeGraniteQueriesImplHcLargeIndexHealthCheckInfo.h"
#include "ComAdobeGraniteQueriesImplHcQueriesStatusHealthCheckInfo.h"
#include "ComAdobeGraniteQueriesImplHcQueryHealthCheckMetricsInfo.h"
#include "ComAdobeGraniteQueriesImplHcQueryLimitsHealthCheckInfo.h"
#include "ComAdobeGraniteReplicationHcImplReplicationQueueHealthCheckInfo.h"
#include "ComAdobeGraniteReplicationHcImplReplicationTransportUsersHealthCInfo.h"
#include "ComAdobeGraniteRepositoryHcImplAuthorizableNodeNameHealthCheckInfo.h"
#include "ComAdobeGraniteRepositoryHcImplContentSlingSlingContentHealthCInfo.h"
#include "ComAdobeGraniteRepositoryHcImplContinuousRGCHealthCheckInfo.h"
#include "ComAdobeGraniteRepositoryHcImplDefaultAccessUserProfileHealthCheInfo.h"
#include "ComAdobeGraniteRepositoryHcImplDefaultLoginsHealthCheckInfo.h"
#include "ComAdobeGraniteRepositoryHcImplDiskSpaceHealthCheckInfo.h"
#include "ComAdobeGraniteRepositoryHcImplObservationQueueLengthHealthCheckInfo.h"
#include "ComAdobeGraniteRepositoryImplCommitStatsConfigInfo.h"
#include "ComAdobeGraniteRepositoryServiceUserConfigurationInfo.h"
#include "ComAdobeGraniteRequestsLoggingImplHcRequestsStatusHealthCheckImInfo.h"
#include "ComAdobeGraniteResourcestatusImplCompositeStatusTypeInfo.h"
#include "ComAdobeGraniteResourcestatusImplStatusResourceProviderImplInfo.h"
#include "ComAdobeGraniteRestAssetsImplAssetContentDispositionFilterInfo.h"
#include "ComAdobeGraniteRestImplApiEndpointResourceProviderFactoryImplInfo.h"
#include "ComAdobeGraniteRestImplServletDefaultGETServletInfo.h"
#include "ComAdobeGraniteSecurityUserUiInternalServletsSSLConfigurationSInfo.h"
#include "ComAdobeGraniteSecurityUserUserPropertiesServiceInfo.h"
#include "ComAdobeGraniteSocialgraphImplSocialGraphFactoryImplInfo.h"
#include "ComAdobeGraniteSystemMonitoringImplSystemStatsMBeanImplInfo.h"
#include "ComAdobeGraniteTaskmanagementImplJcrTaskAdapterFactoryInfo.h"
#include "ComAdobeGraniteTaskmanagementImplJcrTaskArchiveServiceInfo.h"
#include "ComAdobeGraniteTaskmanagementImplPurgeTaskPurgeMaintenanceTaskInfo.h"
#include "ComAdobeGraniteTaskmanagementImplServiceTaskManagerAdapterFactorInfo.h"
#include "ComAdobeGraniteThreaddumpThreadDumpCollectorInfo.h"
#include "ComAdobeGraniteTranslationConnectorMsftCoreImplMicrosoftTranslInfo.h"
#include "ComAdobeGraniteTranslationCoreImplTranslationManagerImplInfo.h"
#include "ComAdobeGraniteUiClientlibsImplHtmlLibraryManagerImplInfo.h"
#include "ComAdobeGraniteWorkflowConsoleFragsWorkflowWithdrawFeatureInfo.h"
#include "ComAdobeGraniteWorkflowConsolePublishWorkflowPublishEventServiceInfo.h"
#include "ComAdobeGraniteWorkflowCoreJcrWorkflowBucketManagerInfo.h"
#include "ComAdobeGraniteWorkflowCoreJobExternalProcessJobHandlerInfo.h"
#include "ComAdobeGraniteWorkflowCoreJobJobHandlerInfo.h"
#include "ComAdobeGraniteWorkflowCoreOffloadingWorkflowOffloadingJobConsumInfo.h"
#include "ComAdobeGraniteWorkflowCorePayloadMapCacheInfo.h"
#include "ComAdobeGraniteWorkflowCorePayloadmapPayloadMoveListenerInfo.h"
#include "ComAdobeGraniteWorkflowCoreWorkflowConfigInfo.h"
#include "ComAdobeGraniteWorkflowCoreWorkflowSessionFactoryInfo.h"
#include "ComAdobeGraniteWorkflowPurgeSchedulerInfo.h"
#include "ComAdobeOctopusNcommBootstrapInfo.h"
#include "ComAdobeSocialIntegrationsLivefyreUserPingforpullImplPingPullSInfo.h"
#include "ComAdobeXmpWorkerFilesNcommXMPFilesNCommInfo.h"
#include "ComDayCommonsDatasourceJdbcpoolJdbcPoolServiceInfo.h"
#include "ComDayCommonsHttpclientInfo.h"
#include "ComDayCqAnalyticsImplStorePropertiesChangeListenerInfo.h"
#include "ComDayCqAnalyticsSitecatalystImplExporterClassificationsExporteInfo.h"
#include "ComDayCqAnalyticsSitecatalystImplImporterReportImporterInfo.h"
#include "ComDayCqAnalyticsSitecatalystImplSitecatalystAdapterFactoryInfo.h"
#include "ComDayCqAnalyticsSitecatalystImplSitecatalystHttpClientImplInfo.h"
#include "ComDayCqAnalyticsTestandtargetImplAccountOptionsUpdaterInfo.h"
#include "ComDayCqAnalyticsTestandtargetImplDeleteAuthorActivityListenerInfo.h"
#include "ComDayCqAnalyticsTestandtargetImplPushAuthorCampaignPageListenerInfo.h"
#include "ComDayCqAnalyticsTestandtargetImplSegmentImporterInfo.h"
#include "ComDayCqAnalyticsTestandtargetImplServiceWebServiceImplInfo.h"
#include "ComDayCqAnalyticsTestandtargetImplServletsAdminServerServletInfo.h"
#include "ComDayCqAnalyticsTestandtargetImplTestandtargetHttpClientImplInfo.h"
#include "ComDayCqAuthImplCugCugSupportImplInfo.h"
#include "ComDayCqAuthImplLoginSelectorHandlerInfo.h"
#include "ComDayCqCommonsImplExternalizerImplInfo.h"
#include "ComDayCqCommonsServletsRootMappingServletInfo.h"
#include "ComDayCqCompatCodeupgradeImplCodeUpgradeExecutionConditionCheckeInfo.h"
#include "ComDayCqCompatCodeupgradeImplUpgradeTaskIgnoreListInfo.h"
#include "ComDayCqCompatCodeupgradeImplVersionRangeTaskIgnorelistInfo.h"
#include "ComDayCqContentsyncImplContentSyncManagerImplInfo.h"
#include "ComDayCqDamCommonsHandlerStandardImageHandlerInfo.h"
#include "ComDayCqDamCommonsMetadataXmpFilterBlackWhiteInfo.h"
#include "ComDayCqDamCommonsUtilImplAssetCacheImplInfo.h"
#include "ComDayCqDamCoreImplAnnotationPdfAnnotationPdfConfigInfo.h"
#include "ComDayCqDamCoreImplAssetMoveListenerInfo.h"
#include "ComDayCqDamCoreImplAssethomeAssetHomePageConfigurationInfo.h"
#include "ComDayCqDamCoreImplAssetlinkshareAdhocAssetShareProxyServletInfo.h"
#include "ComDayCqDamCoreImplCacheCQBufferedImageCacheInfo.h"
#include "ComDayCqDamCoreImplDamChangeEventListenerInfo.h"
#include "ComDayCqDamCoreImplDamEventPurgeServiceInfo.h"
#include "ComDayCqDamCoreImplDamEventRecorderImplInfo.h"
#include "ComDayCqDamCoreImplEventDamEventAuditListenerInfo.h"
#include "ComDayCqDamCoreImplExpiryNotificationJobImplInfo.h"
#include "ComDayCqDamCoreImplFoldermetadataschemaFolderMetadataSchemaFeatInfo.h"
#include "ComDayCqDamCoreImplGfxCommonsGfxRendererInfo.h"
#include "ComDayCqDamCoreImplHandlerEPSFormatHandlerInfo.h"
#include "ComDayCqDamCoreImplHandlerIndesignFormatHandlerInfo.h"
#include "ComDayCqDamCoreImplHandlerJpegHandlerInfo.h"
#include "ComDayCqDamCoreImplHandlerXmpNCommXMPHandlerInfo.h"
#include "ComDayCqDamCoreImplJmxAssetIndexUpdateMonitorInfo.h"
#include "ComDayCqDamCoreImplJmxAssetMigrationMBeanImplInfo.h"
#include "ComDayCqDamCoreImplJmxAssetUpdateMonitorImplInfo.h"
#include "ComDayCqDamCoreImplJobsMetadataexportAsyncMetadataExportConfigInfo.h"
#include "ComDayCqDamCoreImplJobsMetadataimportAsyncMetadataImportConfigInfo.h"
#include "ComDayCqDamCoreImplLightboxLightboxServletInfo.h"
#include "ComDayCqDamCoreImplMetadataEditorSelectComponentHandlerInfo.h"
#include "ComDayCqDamCoreImplMimeTypeAssetUploadRestrictionHelperInfo.h"
#include "ComDayCqDamCoreImplMimeTypeDamMimeTypeServiceImplInfo.h"
#include "ComDayCqDamCoreImplMissingMetadataNotificationJobInfo.h"
#include "ComDayCqDamCoreImplProcessSendTransientWorkflowCompletedEmailPrInfo.h"
#include "ComDayCqDamCoreImplProcessTextExtractionProcessInfo.h"
#include "ComDayCqDamCoreImplRenditionMakerImplInfo.h"
#include "ComDayCqDamCoreImplReportsReportExportServiceInfo.h"
#include "ComDayCqDamCoreImplReportsReportPurgeServiceInfo.h"
#include "ComDayCqDamCoreImplServletAssetDownloadServletInfo.h"
#include "ComDayCqDamCoreImplServletAssetStatusServletInfo.h"
#include "ComDayCqDamCoreImplServletAssetXMPSearchServletInfo.h"
#include "ComDayCqDamCoreImplServletBatchMetadataServletInfo.h"
#include "ComDayCqDamCoreImplServletBinaryProviderServletInfo.h"
#include "ComDayCqDamCoreImplServletCollectionServletInfo.h"
#include "ComDayCqDamCoreImplServletCollectionsServletInfo.h"
#include "ComDayCqDamCoreImplServletCompanionServletInfo.h"
#include "ComDayCqDamCoreImplServletCreateAssetServletInfo.h"
#include "ComDayCqDamCoreImplServletDamContentDispositionFilterInfo.h"
#include "ComDayCqDamCoreImplServletGuidLookupFilterInfo.h"
#include "ComDayCqDamCoreImplServletHealthCheckServletInfo.h"
#include "ComDayCqDamCoreImplServletMetadataGetServletInfo.h"
#include "ComDayCqDamCoreImplServletMultipleLicenseAcceptServletInfo.h"
#include "ComDayCqDamCoreImplServletResourceCollectionServletInfo.h"
#include "ComDayCqDamCoreImplUiPreviewFolderPreviewUpdaterImplInfo.h"
#include "ComDayCqDamCoreImplUnzipUnzipConfigInfo.h"
#include "ComDayCqDamCoreProcessExifToolExtractMetadataProcessInfo.h"
#include "ComDayCqDamCoreProcessExtractMetadataProcessInfo.h"
#include "ComDayCqDamCoreProcessMetadataProcessorProcessInfo.h"
#include "ComDayCqDamHandlerFfmpegLocatorImplInfo.h"
#include "ComDayCqDamHandlerGibsonFontmanagerImplFontManagerServiceImplInfo.h"
#include "ComDayCqDamHandlerStandardPdfPdfHandlerInfo.h"
#include "ComDayCqDamHandlerStandardPsPostScriptHandlerInfo.h"
#include "ComDayCqDamHandlerStandardPsdPsdHandlerInfo.h"
#include "ComDayCqDamIdsImplIDSJobProcessorInfo.h"
#include "ComDayCqDamIdsImplIDSPoolManagerImplInfo.h"
#include "ComDayCqDamInddImplHandlerIndesignXMPHandlerInfo.h"
#include "ComDayCqDamInddImplServletSnippetCreationServletInfo.h"
#include "ComDayCqDamInddProcessINDDMediaExtractProcessInfo.h"
#include "ComDayCqDamPerformanceInternalAssetPerformanceDataHandlerImplInfo.h"
#include "ComDayCqDamPerformanceInternalAssetPerformanceReportSyncJobInfo.h"
#include "ComDayCqDamPimImplSourcingUploadProcessProductAssetsUploadProInfo.h"
#include "ComDayCqDamS7damCommonAnalyticsImplS7damDynamicMediaConfigEvenInfo.h"
#include "ComDayCqDamS7damCommonAnalyticsImplSiteCatalystReportRunnerInfo.h"
#include "ComDayCqDamS7damCommonPostServletsSetCreateHandlerInfo.h"
#include "ComDayCqDamS7damCommonPostServletsSetModifyHandlerInfo.h"
#include "ComDayCqDamS7damCommonProcessVideoThumbnailDownloadProcessInfo.h"
#include "ComDayCqDamS7damCommonS7damDamChangeEventListenerInfo.h"
#include "ComDayCqDamS7damCommonServletsS7damProductInfoServletInfo.h"
#include "ComDayCqDamS7damCommonVideoImplVideoProxyClientServiceImplInfo.h"
#include "ComDayCqDamScene7ImplScene7APIClientImplInfo.h"
#include "ComDayCqDamScene7ImplScene7AssetMimeTypeServiceImplInfo.h"
#include "ComDayCqDamScene7ImplScene7ConfigurationEventListenerInfo.h"
#include "ComDayCqDamScene7ImplScene7DamChangeEventListenerInfo.h"
#include "ComDayCqDamScene7ImplScene7FlashTemplatesServiceImplInfo.h"
#include "ComDayCqDamScene7ImplScene7UploadServiceImplInfo.h"
#include "ComDayCqDamStockIntegrationImplCacheStockCacheConfigurationSerInfo.h"
#include "ComDayCqDamStockIntegrationImplConfigurationStockConfigurationInfo.h"
#include "ComDayCqDamVideoImplServletVideoTestServletInfo.h"
#include "ComDayCqExtwidgetServletsImageSpriteServletInfo.h"
#include "ComDayCqImageInternalFontFontHelperInfo.h"
#include "ComDayCqJcrclustersupportClusterStartLevelControllerInfo.h"
#include "ComDayCqMailerDefaultMailServiceInfo.h"
#include "ComDayCqMailerImplCqMailingServiceInfo.h"
#include "ComDayCqMailerImplEmailCqEmailTemplateFactoryInfo.h"
#include "ComDayCqMailerImplEmailCqRetrieverTemplateFactoryInfo.h"
#include "ComDayCqMcmCampaignImplIntegrationConfigImplInfo.h"
#include "ComDayCqMcmCampaignImporterPersonalizedTextHandlerFactoryInfo.h"
#include "ComDayCqMcmCoreNewsletterNewsletterEmailServiceImplInfo.h"
#include "ComDayCqMcmImplMCMConfigurationInfo.h"
#include "ComDayCqMcmLandingpageParserTaghandlersCtaClickThroughComponenInfo.h"
#include "ComDayCqMcmLandingpageParserTaghandlersCtaGraphicalClickThrougInfo.h"
#include "ComDayCqMcmLandingpageParserTaghandlersCtaLeadFormCTAComponentInfo.h"
#include "ComDayCqMcmLandingpageParserTaghandlersMboxMBoxExperienceTagHaInfo.h"
#include "ComDayCqMcmLandingpageParserTaghandlersMboxTargetComponentTagHInfo.h"
#include "ComDayCqNotificationImplNotificationServiceImplInfo.h"
#include "ComDayCqPersonalizationImplServletsTargetingConfigurationServletInfo.h"
#include "ComDayCqPollingImporterImplManagedPollConfigImplInfo.h"
#include "ComDayCqPollingImporterImplManagedPollingImporterImplInfo.h"
#include "ComDayCqPollingImporterImplPollingImporterImplInfo.h"
#include "ComDayCqReplicationAuditReplicationEventListenerInfo.h"
#include "ComDayCqReplicationContentStaticContentBuilderInfo.h"
#include "ComDayCqReplicationImplAgentManagerImplInfo.h"
#include "ComDayCqReplicationImplContentDurboBinaryLessContentBuilderInfo.h"
#include "ComDayCqReplicationImplContentDurboDurboImportConfigurationProvInfo.h"
#include "ComDayCqReplicationImplReplicationContentFactoryProviderImplInfo.h"
#include "ComDayCqReplicationImplReplicationReceiverImplInfo.h"
#include "ComDayCqReplicationImplReplicatorImplInfo.h"
#include "ComDayCqReplicationImplReverseReplicatorInfo.h"
#include "ComDayCqReplicationImplTransportBinaryLessTransportHandlerInfo.h"
#include "ComDayCqReplicationImplTransportHttpInfo.h"
#include "ComDayCqReportingImplCacheCacheImplInfo.h"
#include "ComDayCqReportingImplConfigServiceImplInfo.h"
#include "ComDayCqReportingImplRLogAnalyzerInfo.h"
#include "ComDayCqRewriterLinkcheckerImplLinkCheckerImplInfo.h"
#include "ComDayCqRewriterLinkcheckerImplLinkCheckerTaskInfo.h"
#include "ComDayCqRewriterLinkcheckerImplLinkCheckerTransformerFactoryInfo.h"
#include "ComDayCqRewriterLinkcheckerImplLinkInfoStorageImplInfo.h"
#include "ComDayCqRewriterProcessorImplHtmlParserFactoryInfo.h"
#include "ComDayCqSearchImplBuilderQueryBuilderImplInfo.h"
#include "ComDayCqSearchSuggestImplSuggestionIndexManagerImplInfo.h"
#include "ComDayCqSearchpromoteImplPublishSearchPromoteConfigHandlerInfo.h"
#include "ComDayCqSearchpromoteImplSearchPromoteServiceImplInfo.h"
#include "ComDayCqSecurityACLSetupInfo.h"
#include "ComDayCqStatisticsImplStatisticsServiceImplInfo.h"
#include "ComDayCqTaggingImplJcrTagManagerFactoryImplInfo.h"
#include "ComDayCqTaggingImplSearchTagPredicateEvaluatorInfo.h"
#include "ComDayCqTaggingImplTagGarbageCollectorInfo.h"
#include "ComDayCqWcmContentsyncImplHandlerPagesUpdateHandlerInfo.h"
#include "ComDayCqWcmContentsyncImplRewriterPathRewriterTransformerFactorInfo.h"
#include "ComDayCqWcmCoreImplAuthoringUIModeServiceImplInfo.h"
#include "ComDayCqWcmCoreImplCommandsWCMCommandServletInfo.h"
#include "ComDayCqWcmCoreImplDevicedetectionDeviceIdentificationModeImplInfo.h"
#include "ComDayCqWcmCoreImplEventPageEventAuditListenerInfo.h"
#include "ComDayCqWcmCoreImplEventPagePostProcessorInfo.h"
#include "ComDayCqWcmCoreImplEventRepositoryChangeEventListenerInfo.h"
#include "ComDayCqWcmCoreImplEventTemplatePostProcessorInfo.h"
#include "ComDayCqWcmCoreImplLanguageManagerImplInfo.h"
#include "ComDayCqWcmCoreImplLinkCheckerConfigurationFactoryImplInfo.h"
#include "ComDayCqWcmCoreImplPagePageInfoAggregatorImplInfo.h"
#include "ComDayCqWcmCoreImplPagePageManagerFactoryImplInfo.h"
#include "ComDayCqWcmCoreImplReferencesContentContentReferenceConfigInfo.h"
#include "ComDayCqWcmCoreImplServletsContentfinderAssetViewHandlerInfo.h"
#include "ComDayCqWcmCoreImplServletsContentfinderConnectorConnectorVieInfo.h"
#include "ComDayCqWcmCoreImplServletsContentfinderPageViewHandlerInfo.h"
#include "ComDayCqWcmCoreImplServletsFindReplaceServletInfo.h"
#include "ComDayCqWcmCoreImplServletsReferenceSearchServletInfo.h"
#include "ComDayCqWcmCoreImplServletsThumbnailServletInfo.h"
#include "ComDayCqWcmCoreImplUtilsDefaultPageNameValidatorInfo.h"
#include "ComDayCqWcmCoreImplVariantsPageVariantsProviderImplInfo.h"
#include "ComDayCqWcmCoreImplVersionManagerImplInfo.h"
#include "ComDayCqWcmCoreImplVersionPurgeTaskInfo.h"
#include "ComDayCqWcmCoreImplWCMDebugFilterInfo.h"
#include "ComDayCqWcmCoreImplWCMDeveloperModeFilterInfo.h"
#include "ComDayCqWcmCoreImplWarpTimeWarpFilterInfo.h"
#include "ComDayCqWcmCoreMvtMVTStatisticsImplInfo.h"
#include "ComDayCqWcmCoreStatsPageViewStatisticsImplInfo.h"
#include "ComDayCqWcmCoreWCMRequestFilterInfo.h"
#include "ComDayCqWcmDesignimporterDesignPackageImporterInfo.h"
#include "ComDayCqWcmDesignimporterImplCanvasBuilderImplInfo.h"
#include "ComDayCqWcmDesignimporterImplCanvasPageDeleteHandlerInfo.h"
#include "ComDayCqWcmDesignimporterImplEntryPreprocessorImplInfo.h"
#include "ComDayCqWcmDesignimporterImplMobileCanvasBuilderImplInfo.h"
#include "ComDayCqWcmDesignimporterParserTaghandlersFactoryCanvasComponeInfo.h"
#include "ComDayCqWcmDesignimporterParserTaghandlersFactoryDefaultComponInfo.h"
#include "ComDayCqWcmDesignimporterParserTaghandlersFactoryDefaultTagHanInfo.h"
#include "ComDayCqWcmDesignimporterParserTaghandlersFactoryHeadTagHandleInfo.h"
#include "ComDayCqWcmDesignimporterParserTaghandlersFactoryIFrameTagHandInfo.h"
#include "ComDayCqWcmDesignimporterParserTaghandlersFactoryImageComponenInfo.h"
#include "ComDayCqWcmDesignimporterParserTaghandlersFactoryImgTagHandlerInfo.h"
#include "ComDayCqWcmDesignimporterParserTaghandlersFactoryInlineScriptTInfo.h"
#include "ComDayCqWcmDesignimporterParserTaghandlersFactoryLinkTagHandleInfo.h"
#include "ComDayCqWcmDesignimporterParserTaghandlersFactoryMetaTagHandleInfo.h"
#include "ComDayCqWcmDesignimporterParserTaghandlersFactoryNonScriptTagHInfo.h"
#include "ComDayCqWcmDesignimporterParserTaghandlersFactoryParsysComponeInfo.h"
#include "ComDayCqWcmDesignimporterParserTaghandlersFactoryScriptTagHandInfo.h"
#include "ComDayCqWcmDesignimporterParserTaghandlersFactoryStyleTagHandlInfo.h"
#include "ComDayCqWcmDesignimporterParserTaghandlersFactoryTextComponentInfo.h"
#include "ComDayCqWcmDesignimporterParserTaghandlersFactoryTitleComponenInfo.h"
#include "ComDayCqWcmDesignimporterParserTaghandlersFactoryTitleTagHandlInfo.h"
#include "ComDayCqWcmFoundationFormsImplFormChooserServletInfo.h"
#include "ComDayCqWcmFoundationFormsImplFormParagraphPostProcessorInfo.h"
#include "ComDayCqWcmFoundationFormsImplFormsHandlingServletInfo.h"
#include "ComDayCqWcmFoundationFormsImplMailServletInfo.h"
#include "ComDayCqWcmFoundationImplAdaptiveImageComponentServletInfo.h"
#include "ComDayCqWcmFoundationImplHTTPAuthHandlerInfo.h"
#include "ComDayCqWcmFoundationImplPageImpressionsTrackerInfo.h"
#include "ComDayCqWcmFoundationImplPageRedirectServletInfo.h"
#include "ComDayCqWcmFoundationSecurityImplDefaultAttachmentTypeBlacklistInfo.h"
#include "ComDayCqWcmFoundationSecurityImplSaferSlingPostValidatorImplInfo.h"
#include "ComDayCqWcmMobileCoreImplDeviceDeviceInfoTransformerFactoryInfo.h"
#include "ComDayCqWcmMobileCoreImplRedirectRedirectFilterInfo.h"
#include "ComDayCqWcmMsmImplActionsContentCopyActionFactoryInfo.h"
#include "ComDayCqWcmMsmImplActionsContentDeleteActionFactoryInfo.h"
#include "ComDayCqWcmMsmImplActionsContentUpdateActionFactoryInfo.h"
#include "ComDayCqWcmMsmImplActionsOrderChildrenActionFactoryInfo.h"
#include "ComDayCqWcmMsmImplActionsPageMoveActionFactoryInfo.h"
#include "ComDayCqWcmMsmImplActionsReferencesUpdateActionFactoryInfo.h"
#include "ComDayCqWcmMsmImplActionsVersionCopyActionFactoryInfo.h"
#include "ComDayCqWcmMsmImplLiveRelationshipManagerImplInfo.h"
#include "ComDayCqWcmMsmImplRolloutManagerImplInfo.h"
#include "ComDayCqWcmMsmImplServletsAuditLogServletInfo.h"
#include "ComDayCqWcmNotificationEmailImplEmailChannelInfo.h"
#include "ComDayCqWcmNotificationImplNotificationManagerImplInfo.h"
#include "ComDayCqWcmScriptingImplBVPManagerInfo.h"
#include "ComDayCqWcmUndoUndoConfigInfo.h"
#include "ComDayCqWcmWebservicesupportImplReplicationEventListenerInfo.h"
#include "ComDayCqWcmWorkflowImplWcmWorkflowServiceImplInfo.h"
#include "ComDayCqWcmWorkflowImplWorkflowPackageInfoProviderInfo.h"
#include "ComDayCqWidgetImplHtmlLibraryManagerImplInfo.h"
#include "ComDayCqWidgetImplWidgetExtensionProviderImplInfo.h"
#include "ComDayCqWorkflowImplEmailEMailNotificationServiceInfo.h"
#include "ComDayCqWorkflowImplEmailTaskEMailNotificationServiceInfo.h"
#include "ComDayCrxSecurityTokenImplImplTokenAuthenticationHandlerInfo.h"
#include "ComDayCrxSecurityTokenImplTokenCleanupTaskInfo.h"
#include "GuideLocalizationServiceInfo.h"
#include "MessagingUserComponentFactoryInfo.h"
#include "OrgApacheAriesJmxFrameworkStateConfigInfo.h"
#include "OrgApacheFelixEventadminImplEventAdminInfo.h"
#include "OrgApacheFelixHttpInfo.h"
#include "OrgApacheFelixHttpSslfilterSslFilterInfo.h"
#include "OrgApacheFelixJaasConfigurationFactoryInfo.h"
#include "OrgApacheFelixJaasConfigurationSpiInfo.h"
#include "OrgApacheFelixScrScrServiceInfo.h"
#include "OrgApacheFelixSystemreadyImplComponentsCheckInfo.h"
#include "OrgApacheFelixSystemreadyImplFrameworkStartCheckInfo.h"
#include "OrgApacheFelixSystemreadyImplServicesCheckInfo.h"
#include "OrgApacheFelixSystemreadyImplServletSystemAliveServletInfo.h"
#include "OrgApacheFelixSystemreadyImplServletSystemReadyServletInfo.h"
#include "OrgApacheFelixSystemreadySystemReadyMonitorInfo.h"
#include "OrgApacheFelixWebconsoleInternalServletOsgiManagerInfo.h"
#include "OrgApacheFelixWebconsolePluginsEventInternalPluginServletInfo.h"
#include "OrgApacheFelixWebconsolePluginsMemoryusageInternalMemoryUsageCoInfo.h"
#include "OrgApacheHttpProxyconfiguratorInfo.h"
#include "OrgApacheJackrabbitOakPluginsBlobDatastoreDataStoreTextProviderInfo.h"
#include "OrgApacheJackrabbitOakPluginsBlobDatastoreFileDataStoreInfo.h"
#include "OrgApacheJackrabbitOakPluginsDocumentDocumentNodeStoreServiceInfo.h"
#include "OrgApacheJackrabbitOakPluginsDocumentDocumentNodeStoreServicePreInfo.h"
#include "OrgApacheJackrabbitOakPluginsDocumentSecondarySecondaryStoreCacInfo.h"
#include "OrgApacheJackrabbitOakPluginsIndexAsyncIndexerServiceInfo.h"
#include "OrgApacheJackrabbitOakPluginsIndexLuceneLuceneIndexProviderServInfo.h"
#include "OrgApacheJackrabbitOakPluginsIndexSolrOsgiEmbeddedSolrServerCoInfo.h"
#include "OrgApacheJackrabbitOakPluginsIndexSolrOsgiNodeStateSolrServersInfo.h"
#include "OrgApacheJackrabbitOakPluginsIndexSolrOsgiOakSolrConfigurationInfo.h"
#include "OrgApacheJackrabbitOakPluginsIndexSolrOsgiRemoteSolrServerConfInfo.h"
#include "OrgApacheJackrabbitOakPluginsIndexSolrOsgiSolrQueryIndexProvidInfo.h"
#include "OrgApacheJackrabbitOakPluginsIndexSolrOsgiSolrServerProviderSeInfo.h"
#include "OrgApacheJackrabbitOakPluginsMetricStatisticsProviderFactoryInfo.h"
#include "OrgApacheJackrabbitOakPluginsObservationChangeCollectorProviderInfo.h"
#include "OrgApacheJackrabbitOakQueryQueryEngineSettingsServiceInfo.h"
#include "OrgApacheJackrabbitOakSecurityAuthenticationAuthenticationConfigInfo.h"
#include "OrgApacheJackrabbitOakSecurityAuthenticationLdapImplLdapIdentiInfo.h"
#include "OrgApacheJackrabbitOakSecurityAuthenticationTokenTokenConfiguraInfo.h"
#include "OrgApacheJackrabbitOakSecurityAuthorizationAuthorizationConfigurInfo.h"
#include "OrgApacheJackrabbitOakSecurityInternalSecurityProviderRegistratiInfo.h"
#include "OrgApacheJackrabbitOakSecurityUserRandomAuthorizableNodeNameInfo.h"
#include "OrgApacheJackrabbitOakSecurityUserUserConfigurationImplInfo.h"
#include "OrgApacheJackrabbitOakSegmentAzureAzureSegmentStoreServiceInfo.h"
#include "OrgApacheJackrabbitOakSegmentSegmentNodeStoreFactoryInfo.h"
#include "OrgApacheJackrabbitOakSegmentSegmentNodeStoreMonitorServiceInfo.h"
#include "OrgApacheJackrabbitOakSegmentSegmentNodeStoreServiceInfo.h"
#include "OrgApacheJackrabbitOakSegmentStandbyStoreStandbyStoreServiceInfo.h"
#include "OrgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplDeInfo.h"
#include "OrgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplExInfo.h"
#include "OrgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplPrInfo.h"
#include "OrgApacheJackrabbitOakSpiSecurityAuthorizationCugImplCugConfiInfo.h"
#include "OrgApacheJackrabbitOakSpiSecurityAuthorizationCugImplCugExcluInfo.h"
#include "OrgApacheJackrabbitOakSpiSecurityUserActionDefaultAuthorizableInfo.h"
#include "OrgApacheJackrabbitVaultPackagingImplPackagingImplInfo.h"
#include "OrgApacheJackrabbitVaultPackagingRegistryImplFSPackageRegistryInfo.h"
#include "OrgApacheSlingAuthCoreImplLogoutServletInfo.h"
#include "OrgApacheSlingCaconfigImplConfigurationBindingsValueProviderInfo.h"
#include "OrgApacheSlingCaconfigImplConfigurationResolverImplInfo.h"
#include "OrgApacheSlingCaconfigImplDefDefaultConfigurationInheritanceStraInfo.h"
#include "OrgApacheSlingCaconfigImplDefDefaultConfigurationPersistenceStraInfo.h"
#include "OrgApacheSlingCaconfigImplOverrideOsgiConfigurationOverrideProviInfo.h"
#include "OrgApacheSlingCaconfigImplOverrideSystemPropertyConfigurationOveInfo.h"
#include "OrgApacheSlingCaconfigManagementImplConfigurationManagementSettiInfo.h"
#include "OrgApacheSlingCaconfigResourceImplDefDefaultConfigurationResourInfo.h"
#include "OrgApacheSlingCaconfigResourceImplDefDefaultContextPathStrategyInfo.h"
#include "OrgApacheSlingCommonsHtmlInternalTagsoupHtmlParserInfo.h"
#include "OrgApacheSlingCommonsLogLogManagerFactoryConfigInfo.h"
#include "OrgApacheSlingCommonsLogLogManagerFactoryWriterInfo.h"
#include "OrgApacheSlingCommonsLogLogManagerInfo.h"
#include "OrgApacheSlingCommonsMetricsInternalLogReporterInfo.h"
#include "OrgApacheSlingCommonsMetricsRrd4jImplCodahaleMetricsReporterInfo.h"
#include "OrgApacheSlingCommonsMimeInternalMimeTypeServiceImplInfo.h"
#include "OrgApacheSlingCommonsSchedulerImplQuartzSchedulerInfo.h"
#include "OrgApacheSlingCommonsSchedulerImplSchedulerHealthCheckInfo.h"
#include "OrgApacheSlingCommonsThreadsImplDefaultThreadPoolFactoryInfo.h"
#include "OrgApacheSlingDatasourceDataSourceFactoryInfo.h"
#include "OrgApacheSlingDatasourceJNDIDataSourceFactoryInfo.h"
#include "OrgApacheSlingDiscoveryOakConfigInfo.h"
#include "OrgApacheSlingDiscoveryOakSynchronizedClocksHealthCheckInfo.h"
#include "OrgApacheSlingDistributionAgentImplForwardDistributionAgentFactoInfo.h"
#include "OrgApacheSlingDistributionAgentImplPrivilegeDistributionRequestAInfo.h"
#include "OrgApacheSlingDistributionAgentImplQueueDistributionAgentFactoryInfo.h"
#include "OrgApacheSlingDistributionAgentImplReverseDistributionAgentFactoInfo.h"
#include "OrgApacheSlingDistributionAgentImplSimpleDistributionAgentFactorInfo.h"
#include "OrgApacheSlingDistributionAgentImplSyncDistributionAgentFactoryInfo.h"
#include "OrgApacheSlingDistributionMonitorDistributionQueueHealthCheckInfo.h"
#include "OrgApacheSlingDistributionPackagingImplExporterAgentDistributioInfo.h"
#include "OrgApacheSlingDistributionPackagingImplExporterLocalDistributioInfo.h"
#include "OrgApacheSlingDistributionPackagingImplExporterRemoteDistributiInfo.h"
#include "OrgApacheSlingDistributionPackagingImplImporterLocalDistributioInfo.h"
#include "OrgApacheSlingDistributionPackagingImplImporterRemoteDistributiInfo.h"
#include "OrgApacheSlingDistributionPackagingImplImporterRepositoryDistriInfo.h"
#include "OrgApacheSlingDistributionResourcesImplDistributionConfigurationInfo.h"
#include "OrgApacheSlingDistributionResourcesImplDistributionServiceResourInfo.h"
#include "OrgApacheSlingDistributionSerializationImplDistributionPackageBuInfo.h"
#include "OrgApacheSlingDistributionSerializationImplVltVaultDistributionInfo.h"
#include "OrgApacheSlingDistributionTransportImplUserCredentialsDistributiInfo.h"
#include "OrgApacheSlingDistributionTriggerImplDistributionEventDistributeInfo.h"
#include "OrgApacheSlingDistributionTriggerImplJcrEventDistributionTriggerInfo.h"
#include "OrgApacheSlingDistributionTriggerImplPersistedJcrEventDistributiInfo.h"
#include "OrgApacheSlingDistributionTriggerImplRemoteEventDistributionTrigInfo.h"
#include "OrgApacheSlingDistributionTriggerImplResourceEventDistributionTrInfo.h"
#include "OrgApacheSlingDistributionTriggerImplScheduledDistributionTriggeInfo.h"
#include "OrgApacheSlingEngineImplAuthSlingAuthenticatorInfo.h"
#include "OrgApacheSlingEngineImplDebugRequestProgressTrackerLogFilterInfo.h"
#include "OrgApacheSlingEngineImplLogRequestLoggerInfo.h"
#include "OrgApacheSlingEngineImplLogRequestLoggerServiceInfo.h"
#include "OrgApacheSlingEngineImplSlingMainServletInfo.h"
#include "OrgApacheSlingEngineParametersInfo.h"
#include "OrgApacheSlingEventImplEventingThreadPoolInfo.h"
#include "OrgApacheSlingEventImplJobsDefaultJobManagerInfo.h"
#include "OrgApacheSlingEventImplJobsJcrPersistenceHandlerInfo.h"
#include "OrgApacheSlingEventImplJobsJobConsumerManagerInfo.h"
#include "OrgApacheSlingEventJobsQueueConfigurationInfo.h"
#include "OrgApacheSlingExtensionsWebconsolesecurityproviderInternalSlingWInfo.h"
#include "OrgApacheSlingFeatureflagsFeatureInfo.h"
#include "OrgApacheSlingFeatureflagsImplConfiguredFeatureInfo.h"
#include "OrgApacheSlingHapiImplHApiUtilImplInfo.h"
#include "OrgApacheSlingHcCoreImplCompositeHealthCheckInfo.h"
#include "OrgApacheSlingHcCoreImplExecutorHealthCheckExecutorImplInfo.h"
#include "OrgApacheSlingHcCoreImplJmxAttributeHealthCheckInfo.h"
#include "OrgApacheSlingHcCoreImplScriptableHealthCheckInfo.h"
#include "OrgApacheSlingHcCoreImplServletHealthCheckExecutorServletInfo.h"
#include "OrgApacheSlingHcCoreImplServletResultTxtVerboseSerializerInfo.h"
#include "OrgApacheSlingI18nImplI18NFilterInfo.h"
#include "OrgApacheSlingI18nImplJcrResourceBundleProviderInfo.h"
#include "OrgApacheSlingInstallerProviderJcrImplJcrInstallerInfo.h"
#include "OrgApacheSlingJcrBaseInternalLoginAdminWhitelistFragmentInfo.h"
#include "OrgApacheSlingJcrBaseInternalLoginAdminWhitelistInfo.h"
#include "OrgApacheSlingJcrDavexImplServletsSlingDavExServletInfo.h"
#include "OrgApacheSlingJcrJackrabbitServerJndiRegistrationSupportInfo.h"
#include "OrgApacheSlingJcrJackrabbitServerRmiRegistrationSupportInfo.h"
#include "OrgApacheSlingJcrRepoinitImplRepositoryInitializerInfo.h"
#include "OrgApacheSlingJcrRepoinitRepositoryInitializerInfo.h"
#include "OrgApacheSlingJcrResourceInternalJcrResourceResolverFactoryImplInfo.h"
#include "OrgApacheSlingJcrResourceInternalJcrSystemUserValidatorInfo.h"
#include "OrgApacheSlingJcrResourcesecurityImplResourceAccessGateFactoryInfo.h"
#include "OrgApacheSlingJcrWebdavImplHandlerDefaultHandlerServiceInfo.h"
#include "OrgApacheSlingJcrWebdavImplHandlerDirListingExportHandlerServicInfo.h"
#include "OrgApacheSlingJcrWebdavImplServletsSimpleWebDavServletInfo.h"
#include "OrgApacheSlingJmxProviderImplJMXResourceProviderInfo.h"
#include "OrgApacheSlingModelsImplModelAdapterFactoryInfo.h"
#include "OrgApacheSlingModelsJacksonexporterImplResourceModuleProviderInfo.h"
#include "OrgApacheSlingResourceInventoryImplResourceInventoryPrinterFactoInfo.h"
#include "OrgApacheSlingResourcemergerImplMergedResourceProviderFactoryInfo.h"
#include "OrgApacheSlingResourcemergerPickerOverridingInfo.h"
#include "OrgApacheSlingScriptingCoreImplScriptCacheImplInfo.h"
#include "OrgApacheSlingScriptingCoreImplScriptingResourceResolverProviderInfo.h"
#include "OrgApacheSlingScriptingJavaImplJavaScriptEngineFactoryInfo.h"
#include "OrgApacheSlingScriptingJavascriptInternalRhinoJavaScriptEngineFaInfo.h"
#include "OrgApacheSlingScriptingJspJspScriptEngineFactoryInfo.h"
#include "OrgApacheSlingScriptingSightlyJsImplJsapiSlyBindingsValuesProvInfo.h"
#include "OrgApacheSlingSecurityImplContentDispositionFilterInfo.h"
#include "OrgApacheSlingSecurityImplReferrerFilterInfo.h"
#include "OrgApacheSlingServiceusermappingImplServiceUserMapperImplAmendedInfo.h"
#include "OrgApacheSlingServiceusermappingImplServiceUserMapperImplInfo.h"
#include "OrgApacheSlingServletsGetDefaultGetServletInfo.h"
#include "OrgApacheSlingServletsGetImplVersionVersionInfoServletInfo.h"
#include "OrgApacheSlingServletsPostImplHelperChunkCleanUpTaskInfo.h"
#include "OrgApacheSlingServletsPostImplSlingPostServletInfo.h"
#include "OrgApacheSlingServletsResolverSlingServletResolverInfo.h"
#include "OrgApacheSlingSettingsImplSlingSettingsServiceImplInfo.h"
#include "OrgApacheSlingStartupfilterImplStartupFilterImplInfo.h"
#include "OrgApacheSlingTenantInternalTenantProviderImplInfo.h"
#include "OrgApacheSlingTracerInternalLogTracerInfo.h"
#include "OrgApacheSlingXssImplXSSFilterImplInfo.h"
#include <string>

namespace org {
namespace openapitools {
namespace server {
namespace api {

using namespace org::openapitools::server::model;

class  ConfigmgrApi {
public:
    ConfigmgrApi(Pistache::Address addr);
    virtual ~ConfigmgrApi() {};
    void init(size_t thr);
    void start();
    void shutdown();

    const std::string base = "/";

private:
    void setupRoutes();

    void adaptive_form_and_interactive_communication_web_channel_configuration_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void adaptive_form_and_interactive_communication_web_channel_theme_configur_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void analytics_component_query_cache_service_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void apache_sling_health_check_result_html_serializer_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_aem_formsndocuments_config_aem_forms_manager_configuration_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_aem_transaction_core_impl_transaction_recorder_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_aem_upgrade_prechecks_hc_impl_deprecate_indexes_hc_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_aem_upgrade_prechecks_hc_impl_replication_agents_disabled_hc_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_aem_upgrade_prechecks_mbean_impl_pre_upgrade_tasks_m_bean_impl_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_aem_upgrade_prechecks_tasks_impl_consistency_check_task_impl_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_cq_account_api_account_management_service_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_cq_account_impl_account_management_servlet_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_cq_address_impl_location_location_list_servlet_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_cq_audit_purge_dam_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_cq_audit_purge_pages_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_cq_audit_purge_replication_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_cq_cdn_rewriter_impl_aws_cloud_front_rewriter_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_cq_cdn_rewriter_impl_cdn_config_service_impl_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_cq_cdn_rewriter_impl_cdn_rewriter_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_cq_cloudconfig_core_impl_configuration_replication_event_handle_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_cq_commerce_impl_asset_dynamic_image_handler_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_cq_commerce_impl_asset_product_asset_handler_provider_impl_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_cq_commerce_impl_asset_static_image_handler_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_cq_commerce_impl_asset_video_handler_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_cq_commerce_impl_promotion_promotion_manager_impl_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_cq_commerce_pim_impl_cataloggenerator_catalog_generator_impl_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_cq_commerce_pim_impl_page_event_listener_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_cq_commerce_pim_impl_productfeed_product_feed_service_impl_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_cq_contentinsight_impl_reporting_services_settings_provider_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_cq_contentinsight_impl_servlets_bright_edge_proxy_servlet_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_cq_contentinsight_impl_servlets_reporting_services_proxy_servle_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_cq_dam_cfm_impl_component_component_config_impl_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_cq_dam_cfm_impl_conf_feature_config_impl_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_cq_dam_cfm_impl_content_rewriter_asset_processor_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_cq_dam_cfm_impl_content_rewriter_par_range_filter_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_cq_dam_cfm_impl_content_rewriter_payload_filter_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_cq_dam_dm_process_image_p_tiff_manager_impl_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_cq_dam_ips_impl_replication_trigger_replicate_on_modify_worker_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_cq_dam_mac_sync_helper_impl_mac_sync_client_impl_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_cq_dam_mac_sync_impl_dam_sync_service_impl_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_cq_dam_processor_nui_impl_nui_asset_processor_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_cq_dam_s7imaging_impl_is_image_server_component_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_cq_dam_s7imaging_impl_ps_platform_server_servlet_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_cq_dam_webdav_impl_io_asset_io_handler_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_cq_dam_webdav_impl_io_dam_webdav_version_linking_job_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_cq_dam_webdav_impl_io_special_files_handler_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_cq_deserfw_impl_deserialization_firewall_impl_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_cq_dtm_impl_service_dtm_web_service_impl_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_cq_dtm_impl_servlets_dtm_deploy_hook_servlet_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_cq_dtm_reactor_impl_service_web_service_impl_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_cq_experiencelog_impl_experience_log_config_servlet_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_cq_hc_content_packages_health_check_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_cq_history_impl_history_request_filter_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_cq_history_impl_history_service_impl_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_cq_inbox_impl_typeprovider_item_type_provider_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_cq_projects_impl_servlet_project_image_servlet_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_cq_projects_purge_scheduler_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_cq_scheduled_exporter_impl_scheduled_exporter_impl_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_cq_screens_analytics_impl_screens_analytics_service_impl_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_cq_screens_device_impl_device_service_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_cq_screens_device_registration_impl_registration_service_impl_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_cq_screens_impl_handler_channels_update_handler_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_cq_screens_impl_jobs_distributed_devices_stati_update_job_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_cq_screens_impl_remote_impl_distributed_http_client_impl_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_cq_screens_impl_screens_channel_post_processor_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_cq_screens_monitoring_impl_screens_monitoring_service_impl_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_cq_screens_mq_activemq_impl_artemis_jms_provider_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_cq_screens_offlinecontent_impl_bulk_offline_update_service_impl_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_cq_screens_offlinecontent_impl_offline_content_service_impl_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_cq_screens_segmentation_impl_segmentation_feature_flag_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_cq_security_hc_bundles_impl_html_library_manager_config_health_ch_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_cq_security_hc_bundles_impl_wcm_filter_health_check_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_cq_security_hc_dispatcher_impl_dispatcher_access_health_check_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_cq_security_hc_packages_impl_example_content_health_check_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_cq_security_hc_webserver_impl_clickjacking_health_check_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_cq_social_accountverification_impl_account_management_config_im_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_cq_social_activitystreams_client_impl_social_activity_componen_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_cq_social_activitystreams_client_impl_social_activity_stream_co_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_cq_social_activitystreams_listener_impl_event_listener_handler_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_cq_social_activitystreams_listener_impl_moderation_event_exten_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_cq_social_activitystreams_listener_impl_rating_event_activity_s_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_cq_social_activitystreams_listener_impl_resource_activity_stre_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_cq_social_calendar_client_endpoints_impl_calendar_operations_i_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_cq_social_calendar_client_operationextensions_event_attachmen_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_cq_social_calendar_servlets_time_zone_servlet_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_cq_social_commons_comments_endpoints_impl_comment_delete_event_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_cq_social_commons_comments_endpoints_impl_comment_operation_se_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_cq_social_commons_comments_endpoints_impl_translation_operati_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_cq_social_commons_comments_listing_impl_search_comment_social_c_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_cq_social_commons_comments_scheduler_impl_search_scheduled_pos_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_cq_social_commons_cors_cors_authentication_filter_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_cq_social_commons_emailreply_impl_android_email_client_provider_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_cq_social_commons_emailreply_impl_comment_email_builder_impl_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_cq_social_commons_emailreply_impl_comment_email_event_listener_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_cq_social_commons_emailreply_impl_custom_email_client_provider_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_cq_social_commons_emailreply_impl_email_quoted_text_patterns_imp_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_cq_social_commons_emailreply_impl_email_reply_configuration_imp_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_cq_social_commons_emailreply_impl_email_reply_importer_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_cq_social_commons_emailreply_impl_gmail_email_client_provider_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_cq_social_commons_emailreply_impl_ios_email_client_provider_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_cq_social_commons_emailreply_impl_macmail_email_client_provider_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_cq_social_commons_emailreply_impl_out_look_email_client_provider_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_cq_social_commons_emailreply_impl_unknown_email_client_provider_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_cq_social_commons_emailreply_impl_yahoo_email_client_provider_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_cq_social_commons_maintainance_impl_delete_temp_ugc_image_upload_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_cq_social_commons_ugclimiter_impl_ugc_limiter_service_impl_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_cq_social_commons_ugclimitsconfig_impl_community_user_ugc_limit_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_cq_social_connect_oauth_impl_facebook_provider_impl_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_cq_social_connect_oauth_impl_social_o_auth_authentication_handle_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_cq_social_connect_oauth_impl_social_o_auth_user_profile_mapper_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_cq_social_connect_oauth_impl_twitter_provider_impl_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_cq_social_content_fragments_services_impl_communities_fragmen_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_cq_social_datastore_as_impl_as_resource_provider_factory_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_cq_social_datastore_op_impl_social_ms_resource_provider_factory_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_cq_social_datastore_rdb_impl_social_rdb_resource_provider_factor_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_cq_social_enablement_adaptors_enablement_learning_path_adaptor_f_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_cq_social_enablement_adaptors_enablement_resource_adaptor_facto_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_cq_social_enablement_learningpath_endpoints_impl_enablement_l_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_cq_social_enablement_resource_endpoints_impl_enablement_resou_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_cq_social_enablement_services_impl_author_marker_impl_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_cq_social_filelibrary_client_endpoints_filelibrary_download_ge_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_cq_social_filelibrary_client_endpoints_impl_file_library_opera_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_cq_social_forum_client_endpoints_impl_forum_operations_service_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_cq_social_forum_dispatcher_impl_flush_operations_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_cq_social_group_client_impl_community_group_collection_componen_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_cq_social_group_impl_group_service_impl_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_cq_social_handlebars_guava_template_cache_impl_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_cq_social_ideation_client_endpoints_impl_ideation_operations_s_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_cq_social_journal_client_endpoints_impl_journal_operations_ser_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_cq_social_members_endpoints_impl_community_member_group_profile_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_cq_social_members_endpoints_impl_community_member_user_profile_o_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_cq_social_members_impl_community_member_group_profile_component_f_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_cq_social_messaging_client_endpoints_impl_messaging_operation_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_cq_social_moderation_dashboard_api_filter_group_social_componen_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_cq_social_moderation_dashboard_api_moderation_dashboard_social_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_cq_social_moderation_dashboard_api_user_details_social_componen_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_cq_social_moderation_dashboard_internal_impl_filter_group_soci_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_cq_social_notifications_impl_mentions_router_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_cq_social_notifications_impl_notification_manager_impl_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_cq_social_notifications_impl_notifications_router_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_cq_social_qna_client_endpoints_impl_qna_forum_operations_servic_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_cq_social_reporting_analytics_services_impl_analytics_report_i_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_cq_social_reporting_analytics_services_impl_analytics_report_m_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_cq_social_reporting_analytics_services_impl_site_trend_report_s_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_cq_social_review_client_endpoints_impl_review_operations_servi_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_cq_social_scf_core_operations_impl_social_operations_servlet_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_cq_social_scf_endpoints_impl_default_social_get_servlet_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_cq_social_scoring_impl_scoring_event_listener_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_cq_social_serviceusers_internal_impl_service_user_wrapper_impl_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_cq_social_site_endpoints_impl_site_operation_service_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_cq_social_site_impl_analytics_component_configuration_service_im_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_cq_social_site_impl_site_configurator_impl_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_cq_social_srp_impl_social_solr_connector_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_cq_social_sync_impl_diff_changes_observer_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_cq_social_sync_impl_group_sync_listener_impl_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_cq_social_sync_impl_publisher_sync_service_impl_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_cq_social_sync_impl_user_sync_listener_impl_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_cq_social_translation_impl_translation_service_config_manager_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_cq_social_translation_impl_ugc_language_detector_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_cq_social_ugcbase_dispatcher_impl_flush_service_impl_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_cq_social_ugcbase_impl_aysnc_reverse_replicator_impl_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_cq_social_ugcbase_impl_publisher_configuration_impl_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_cq_social_ugcbase_impl_social_utils_impl_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_cq_social_ugcbase_moderation_impl_auto_moderation_impl_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_cq_social_ugcbase_moderation_impl_sentiment_process_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_cq_social_ugcbase_security_impl_default_attachment_type_blackli_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_cq_social_ugcbase_security_impl_safer_sling_post_validator_impl_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_cq_social_user_endpoints_impl_users_group_from_publish_servlet_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_cq_social_user_impl_transport_http_to_publisher_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_cq_ui_wcm_commons_internal_servlets_rte_rte_filter_servlet_fact_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_cq_upgrades_cleanup_impl_upgrade_content_cleanup_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_cq_upgrades_cleanup_impl_upgrade_install_folder_cleanup_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_cq_wcm_jobs_async_impl_async_delete_config_provider_service_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_cq_wcm_jobs_async_impl_async_job_clean_up_task_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_cq_wcm_jobs_async_impl_async_move_config_provider_service_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_cq_wcm_jobs_async_impl_async_page_move_config_provider_service_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_cq_wcm_launches_impl_launches_event_handler_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_cq_wcm_mobile_qrcode_servlet_qr_code_image_generator_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_cq_wcm_style_internal_component_style_info_cache_impl_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_cq_wcm_translation_impl_translation_platform_configuration_impl_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_fd_fp_config_forms_portal_draftsand_submission_config_service_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_fd_fp_config_forms_portal_scheduler_service_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_forms_common_service_impl_default_data_provider_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_forms_common_service_impl_forms_common_configuration_service_imp_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_forms_common_servlet_temp_clean_up_task_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_granite_acp_platform_platform_servlet_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_granite_activitystreams_impl_activity_manager_impl_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_granite_analyzer_base_system_status_servlet_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_granite_analyzer_scripts_compile_all_scripts_compiler_servlet_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_granite_apicontroller_filter_resolver_hook_factory_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_granite_auth_cert_impl_client_cert_auth_handler_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_granite_auth_ims_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_granite_auth_ims_impl_external_user_id_mapping_provider_extension_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_granite_auth_ims_impl_ims_access_token_request_customizer_impl_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_granite_auth_ims_impl_ims_instance_credentials_validator_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_granite_auth_ims_impl_ims_provider_impl_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_granite_auth_ims_impl_ims_config_provider_impl_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_granite_auth_oauth_accesstoken_provider_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_granite_auth_oauth_impl_bearer_authentication_handler_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_granite_auth_oauth_impl_default_token_validator_impl_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_granite_auth_oauth_impl_facebook_provider_impl_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_granite_auth_oauth_impl_github_provider_impl_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_granite_auth_oauth_impl_granite_provider_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_granite_auth_oauth_impl_helper_provider_config_manager_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_granite_auth_oauth_impl_helper_provider_config_manager_internal_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_granite_auth_oauth_impl_o_auth_authentication_handler_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_granite_auth_oauth_impl_twitter_provider_impl_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_granite_auth_oauth_provider_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_granite_auth_requirement_impl_default_requirement_handler_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_granite_auth_saml_saml_authentication_handler_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_granite_auth_sso_impl_sso_authentication_handler_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_granite_bundles_hc_impl_code_cache_health_check_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_granite_bundles_hc_impl_crxde_support_bundle_health_check_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_granite_bundles_hc_impl_dav_ex_bundle_health_check_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_granite_bundles_hc_impl_inactive_bundles_health_check_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_granite_bundles_hc_impl_jobs_health_check_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_granite_bundles_hc_impl_sling_get_servlet_health_check_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_granite_bundles_hc_impl_sling_java_script_handler_health_check_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_granite_bundles_hc_impl_sling_jsp_script_handler_health_check_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_granite_bundles_hc_impl_sling_referrer_filter_health_check_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_granite_bundles_hc_impl_web_dav_bundle_health_check_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_granite_comments_internal_comment_replication_content_filter_fac_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_granite_compatrouter_impl_compat_switching_service_impl_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_granite_compatrouter_impl_routing_config_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_granite_compatrouter_impl_switch_mapping_config_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_granite_conf_impl_runtime_aware_configuration_resource_resolving_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_granite_contexthub_impl_context_hub_impl_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_granite_cors_impl_cors_policy_impl_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_granite_csrf_impl_csrf_filter_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_granite_csrf_impl_csrf_servlet_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_granite_distribution_core_impl_crypto_distribution_transport_se_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_granite_distribution_core_impl_diff_diff_changes_observer_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_granite_distribution_core_impl_diff_diff_event_listener_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_granite_distribution_core_impl_distribution_to_replication_even_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_granite_distribution_core_impl_replication_adapters_replicat_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_granite_distribution_core_impl_replication_distribution_trans_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_granite_distribution_core_impl_transport_access_token_distribu_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_granite_frags_impl_check_http_header_flag_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_granite_frags_impl_random_feature_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_granite_httpcache_file_file_cache_store_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_granite_httpcache_impl_outer_cache_filter_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_granite_i18n_impl_bundle_pseudo_translations_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_granite_i18n_impl_preferences_locale_resolver_service_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_granite_infocollector_info_collector_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_granite_jetty_ssl_internal_granite_ssl_connector_factory_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_granite_license_impl_license_check_filter_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_granite_logging_impl_log_analyser_impl_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_granite_logging_impl_log_error_health_check_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_granite_maintenance_crx_impl_data_store_garbage_collection_task_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_granite_maintenance_crx_impl_lucene_binaries_cleanup_task_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_granite_maintenance_crx_impl_revision_cleanup_task_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_granite_monitoring_impl_script_config_impl_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_granite_oauth_server_auth_impl_o_auth2_server_authentication_han_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_granite_oauth_server_impl_access_token_cleanup_task_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_granite_oauth_server_impl_o_auth2_client_revocation_servlet_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_granite_oauth_server_impl_o_auth2_revocation_endpoint_servlet_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_granite_oauth_server_impl_o_auth2_token_endpoint_servlet_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_granite_oauth_server_impl_o_auth2_token_revocation_servlet_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_granite_offloading_impl_offloading_configurator_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_granite_offloading_impl_offloading_job_cloner_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_granite_offloading_impl_offloading_job_offloader_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_granite_offloading_impl_transporter_offloading_agent_manager_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_granite_offloading_impl_transporter_offloading_default_transpo_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_granite_omnisearch_impl_core_omni_search_service_impl_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_granite_optout_impl_opt_out_service_impl_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_granite_queries_impl_hc_async_index_health_check_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_granite_queries_impl_hc_large_index_health_check_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_granite_queries_impl_hc_queries_status_health_check_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_granite_queries_impl_hc_query_health_check_metrics_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_granite_queries_impl_hc_query_limits_health_check_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_granite_replication_hc_impl_replication_queue_health_check_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_granite_replication_hc_impl_replication_transport_users_health_c_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_granite_repository_hc_impl_authorizable_node_name_health_check_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_granite_repository_hc_impl_content_sling_sling_content_health_c_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_granite_repository_hc_impl_continuous_rgc_health_check_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_granite_repository_hc_impl_default_access_user_profile_health_che_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_granite_repository_hc_impl_default_logins_health_check_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_granite_repository_hc_impl_disk_space_health_check_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_granite_repository_hc_impl_observation_queue_length_health_check_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_granite_repository_impl_commit_stats_config_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_granite_repository_service_user_configuration_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_granite_requests_logging_impl_hc_requests_status_health_check_im_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_granite_resourcestatus_impl_composite_status_type_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_granite_resourcestatus_impl_status_resource_provider_impl_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_granite_rest_assets_impl_asset_content_disposition_filter_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_granite_rest_impl_api_endpoint_resource_provider_factory_impl_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_granite_rest_impl_servlet_default_get_servlet_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_granite_security_user_ui_internal_servlets_ssl_configuration_s_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_granite_security_user_user_properties_service_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_granite_socialgraph_impl_social_graph_factory_impl_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_granite_system_monitoring_impl_system_stats_m_bean_impl_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_granite_taskmanagement_impl_jcr_task_adapter_factory_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_granite_taskmanagement_impl_jcr_task_archive_service_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_granite_taskmanagement_impl_purge_task_purge_maintenance_task_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_granite_taskmanagement_impl_service_task_manager_adapter_factor_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_granite_threaddump_thread_dump_collector_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_granite_translation_connector_msft_core_impl_microsoft_transl_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_granite_translation_core_impl_translation_manager_impl_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_granite_ui_clientlibs_impl_html_library_manager_impl_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_granite_workflow_console_frags_workflow_withdraw_feature_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_granite_workflow_console_publish_workflow_publish_event_service_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_granite_workflow_core_jcr_workflow_bucket_manager_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_granite_workflow_core_job_external_process_job_handler_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_granite_workflow_core_job_job_handler_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_granite_workflow_core_offloading_workflow_offloading_job_consum_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_granite_workflow_core_payload_map_cache_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_granite_workflow_core_payloadmap_payload_move_listener_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_granite_workflow_core_workflow_config_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_granite_workflow_core_workflow_session_factory_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_granite_workflow_purge_scheduler_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_octopus_ncomm_bootstrap_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_social_integrations_livefyre_user_pingforpull_impl_ping_pull_s_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_adobe_xmp_worker_files_ncomm_xmp_files_n_comm_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_day_commons_datasource_jdbcpool_jdbc_pool_service_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_day_commons_httpclient_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_day_cq_analytics_impl_store_properties_change_listener_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_day_cq_analytics_sitecatalyst_impl_exporter_classifications_exporte_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_day_cq_analytics_sitecatalyst_impl_importer_report_importer_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_day_cq_analytics_sitecatalyst_impl_sitecatalyst_adapter_factory_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_day_cq_analytics_sitecatalyst_impl_sitecatalyst_http_client_impl_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_day_cq_analytics_testandtarget_impl_account_options_updater_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_day_cq_analytics_testandtarget_impl_delete_author_activity_listener_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_day_cq_analytics_testandtarget_impl_push_author_campaign_page_listener_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_day_cq_analytics_testandtarget_impl_segment_importer_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_day_cq_analytics_testandtarget_impl_service_web_service_impl_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_day_cq_analytics_testandtarget_impl_servlets_admin_server_servlet_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_day_cq_analytics_testandtarget_impl_testandtarget_http_client_impl_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_day_cq_auth_impl_cug_cug_support_impl_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_day_cq_auth_impl_login_selector_handler_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_day_cq_commons_impl_externalizer_impl_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_day_cq_commons_servlets_root_mapping_servlet_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_day_cq_compat_codeupgrade_impl_code_upgrade_execution_condition_checke_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_day_cq_compat_codeupgrade_impl_upgrade_task_ignore_list_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_day_cq_compat_codeupgrade_impl_version_range_task_ignorelist_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_day_cq_contentsync_impl_content_sync_manager_impl_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_day_cq_dam_commons_handler_standard_image_handler_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_day_cq_dam_commons_metadata_xmp_filter_black_white_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_day_cq_dam_commons_util_impl_asset_cache_impl_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_day_cq_dam_core_impl_annotation_pdf_annotation_pdf_config_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_day_cq_dam_core_impl_asset_move_listener_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_day_cq_dam_core_impl_assethome_asset_home_page_configuration_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_day_cq_dam_core_impl_assetlinkshare_adhoc_asset_share_proxy_servlet_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_day_cq_dam_core_impl_cache_cq_buffered_image_cache_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_day_cq_dam_core_impl_dam_change_event_listener_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_day_cq_dam_core_impl_dam_event_purge_service_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_day_cq_dam_core_impl_dam_event_recorder_impl_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_day_cq_dam_core_impl_event_dam_event_audit_listener_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_day_cq_dam_core_impl_expiry_notification_job_impl_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_day_cq_dam_core_impl_foldermetadataschema_folder_metadata_schema_feat_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_day_cq_dam_core_impl_gfx_commons_gfx_renderer_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_day_cq_dam_core_impl_handler_eps_format_handler_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_day_cq_dam_core_impl_handler_indesign_format_handler_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_day_cq_dam_core_impl_handler_jpeg_handler_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_day_cq_dam_core_impl_handler_xmp_n_comm_xmp_handler_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_day_cq_dam_core_impl_jmx_asset_index_update_monitor_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_day_cq_dam_core_impl_jmx_asset_migration_m_bean_impl_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_day_cq_dam_core_impl_jmx_asset_update_monitor_impl_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_day_cq_dam_core_impl_jobs_metadataexport_async_metadata_export_config_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_day_cq_dam_core_impl_jobs_metadataimport_async_metadata_import_config_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_day_cq_dam_core_impl_lightbox_lightbox_servlet_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_day_cq_dam_core_impl_metadata_editor_select_component_handler_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_day_cq_dam_core_impl_mime_type_asset_upload_restriction_helper_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_day_cq_dam_core_impl_mime_type_dam_mime_type_service_impl_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_day_cq_dam_core_impl_missing_metadata_notification_job_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_day_cq_dam_core_impl_process_send_transient_workflow_completed_email_pr_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_day_cq_dam_core_impl_process_text_extraction_process_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_day_cq_dam_core_impl_rendition_maker_impl_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_day_cq_dam_core_impl_reports_report_export_service_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_day_cq_dam_core_impl_reports_report_purge_service_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_day_cq_dam_core_impl_servlet_asset_download_servlet_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_day_cq_dam_core_impl_servlet_asset_status_servlet_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_day_cq_dam_core_impl_servlet_asset_xmp_search_servlet_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_day_cq_dam_core_impl_servlet_batch_metadata_servlet_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_day_cq_dam_core_impl_servlet_binary_provider_servlet_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_day_cq_dam_core_impl_servlet_collection_servlet_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_day_cq_dam_core_impl_servlet_collections_servlet_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_day_cq_dam_core_impl_servlet_companion_servlet_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_day_cq_dam_core_impl_servlet_create_asset_servlet_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_day_cq_dam_core_impl_servlet_dam_content_disposition_filter_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_day_cq_dam_core_impl_servlet_guid_lookup_filter_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_day_cq_dam_core_impl_servlet_health_check_servlet_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_day_cq_dam_core_impl_servlet_metadata_get_servlet_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_day_cq_dam_core_impl_servlet_multiple_license_accept_servlet_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_day_cq_dam_core_impl_servlet_resource_collection_servlet_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_day_cq_dam_core_impl_ui_preview_folder_preview_updater_impl_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_day_cq_dam_core_impl_unzip_unzip_config_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_day_cq_dam_core_process_exif_tool_extract_metadata_process_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_day_cq_dam_core_process_extract_metadata_process_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_day_cq_dam_core_process_metadata_processor_process_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_day_cq_dam_handler_ffmpeg_locator_impl_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_day_cq_dam_handler_gibson_fontmanager_impl_font_manager_service_impl_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_day_cq_dam_handler_standard_pdf_pdf_handler_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_day_cq_dam_handler_standard_ps_post_script_handler_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_day_cq_dam_handler_standard_psd_psd_handler_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_day_cq_dam_ids_impl_ids_job_processor_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_day_cq_dam_ids_impl_ids_pool_manager_impl_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_day_cq_dam_indd_impl_handler_indesign_xmp_handler_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_day_cq_dam_indd_impl_servlet_snippet_creation_servlet_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_day_cq_dam_indd_process_indd_media_extract_process_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_day_cq_dam_performance_internal_asset_performance_data_handler_impl_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_day_cq_dam_performance_internal_asset_performance_report_sync_job_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_day_cq_dam_pim_impl_sourcing_upload_process_product_assets_upload_pro_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_day_cq_dam_s7dam_common_analytics_impl_s7dam_dynamic_media_config_even_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_day_cq_dam_s7dam_common_analytics_impl_site_catalyst_report_runner_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_day_cq_dam_s7dam_common_post_servlets_set_create_handler_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_day_cq_dam_s7dam_common_post_servlets_set_modify_handler_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_day_cq_dam_s7dam_common_process_video_thumbnail_download_process_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_day_cq_dam_s7dam_common_s7dam_dam_change_event_listener_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_day_cq_dam_s7dam_common_servlets_s7dam_product_info_servlet_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_day_cq_dam_s7dam_common_video_impl_video_proxy_client_service_impl_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_day_cq_dam_scene7_impl_scene7_api_client_impl_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_day_cq_dam_scene7_impl_scene7_asset_mime_type_service_impl_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_day_cq_dam_scene7_impl_scene7_configuration_event_listener_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_day_cq_dam_scene7_impl_scene7_dam_change_event_listener_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_day_cq_dam_scene7_impl_scene7_flash_templates_service_impl_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_day_cq_dam_scene7_impl_scene7_upload_service_impl_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_day_cq_dam_stock_integration_impl_cache_stock_cache_configuration_ser_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_day_cq_dam_stock_integration_impl_configuration_stock_configuration_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_day_cq_dam_video_impl_servlet_video_test_servlet_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_day_cq_extwidget_servlets_image_sprite_servlet_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_day_cq_image_internal_font_font_helper_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_day_cq_jcrclustersupport_cluster_start_level_controller_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_day_cq_mailer_default_mail_service_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_day_cq_mailer_impl_cq_mailing_service_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_day_cq_mailer_impl_email_cq_email_template_factory_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_day_cq_mailer_impl_email_cq_retriever_template_factory_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_day_cq_mcm_campaign_impl_integration_config_impl_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_day_cq_mcm_campaign_importer_personalized_text_handler_factory_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_day_cq_mcm_core_newsletter_newsletter_email_service_impl_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_day_cq_mcm_impl_mcm_configuration_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_day_cq_mcm_landingpage_parser_taghandlers_cta_click_through_componen_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_day_cq_mcm_landingpage_parser_taghandlers_cta_graphical_click_throug_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_day_cq_mcm_landingpage_parser_taghandlers_cta_lead_form_cta_component_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_day_cq_mcm_landingpage_parser_taghandlers_mbox_m_box_experience_tag_ha_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_day_cq_mcm_landingpage_parser_taghandlers_mbox_target_component_tag_h_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_day_cq_notification_impl_notification_service_impl_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_day_cq_personalization_impl_servlets_targeting_configuration_servlet_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_day_cq_polling_importer_impl_managed_poll_config_impl_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_day_cq_polling_importer_impl_managed_polling_importer_impl_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_day_cq_polling_importer_impl_polling_importer_impl_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_day_cq_replication_audit_replication_event_listener_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_day_cq_replication_content_static_content_builder_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_day_cq_replication_impl_agent_manager_impl_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_day_cq_replication_impl_content_durbo_binary_less_content_builder_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_day_cq_replication_impl_content_durbo_durbo_import_configuration_prov_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_day_cq_replication_impl_replication_content_factory_provider_impl_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_day_cq_replication_impl_replication_receiver_impl_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_day_cq_replication_impl_replicator_impl_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_day_cq_replication_impl_reverse_replicator_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_day_cq_replication_impl_transport_binary_less_transport_handler_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_day_cq_replication_impl_transport_http_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_day_cq_reporting_impl_cache_cache_impl_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_day_cq_reporting_impl_config_service_impl_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_day_cq_reporting_impl_r_log_analyzer_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_day_cq_rewriter_linkchecker_impl_link_checker_impl_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_day_cq_rewriter_linkchecker_impl_link_checker_task_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_day_cq_rewriter_linkchecker_impl_link_checker_transformer_factory_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_day_cq_rewriter_linkchecker_impl_link_info_storage_impl_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_day_cq_rewriter_processor_impl_html_parser_factory_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_day_cq_search_impl_builder_query_builder_impl_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_day_cq_search_suggest_impl_suggestion_index_manager_impl_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_day_cq_searchpromote_impl_publish_search_promote_config_handler_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_day_cq_searchpromote_impl_search_promote_service_impl_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_day_cq_security_acl_setup_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_day_cq_statistics_impl_statistics_service_impl_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_day_cq_tagging_impl_jcr_tag_manager_factory_impl_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_day_cq_tagging_impl_search_tag_predicate_evaluator_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_day_cq_tagging_impl_tag_garbage_collector_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_day_cq_wcm_contentsync_impl_handler_pages_update_handler_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_day_cq_wcm_contentsync_impl_rewriter_path_rewriter_transformer_factor_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_day_cq_wcm_core_impl_authoring_ui_mode_service_impl_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_day_cq_wcm_core_impl_commands_wcm_command_servlet_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_day_cq_wcm_core_impl_devicedetection_device_identification_mode_impl_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_day_cq_wcm_core_impl_event_page_event_audit_listener_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_day_cq_wcm_core_impl_event_page_post_processor_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_day_cq_wcm_core_impl_event_repository_change_event_listener_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_day_cq_wcm_core_impl_event_template_post_processor_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_day_cq_wcm_core_impl_language_manager_impl_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_day_cq_wcm_core_impl_link_checker_configuration_factory_impl_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_day_cq_wcm_core_impl_page_page_info_aggregator_impl_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_day_cq_wcm_core_impl_page_page_manager_factory_impl_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_day_cq_wcm_core_impl_references_content_content_reference_config_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_day_cq_wcm_core_impl_servlets_contentfinder_asset_view_handler_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_day_cq_wcm_core_impl_servlets_contentfinder_connector_connector_vie_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_day_cq_wcm_core_impl_servlets_contentfinder_page_view_handler_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_day_cq_wcm_core_impl_servlets_find_replace_servlet_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_day_cq_wcm_core_impl_servlets_reference_search_servlet_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_day_cq_wcm_core_impl_servlets_thumbnail_servlet_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_day_cq_wcm_core_impl_utils_default_page_name_validator_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_day_cq_wcm_core_impl_variants_page_variants_provider_impl_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_day_cq_wcm_core_impl_version_manager_impl_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_day_cq_wcm_core_impl_version_purge_task_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_day_cq_wcm_core_impl_wcm_debug_filter_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_day_cq_wcm_core_impl_wcm_developer_mode_filter_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_day_cq_wcm_core_impl_warp_time_warp_filter_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_day_cq_wcm_core_mvt_mvt_statistics_impl_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_day_cq_wcm_core_stats_page_view_statistics_impl_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_day_cq_wcm_core_wcm_request_filter_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_day_cq_wcm_designimporter_design_package_importer_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_day_cq_wcm_designimporter_impl_canvas_builder_impl_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_day_cq_wcm_designimporter_impl_canvas_page_delete_handler_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_day_cq_wcm_designimporter_impl_entry_preprocessor_impl_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_day_cq_wcm_designimporter_impl_mobile_canvas_builder_impl_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_day_cq_wcm_designimporter_parser_taghandlers_factory_canvas_compone_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_day_cq_wcm_designimporter_parser_taghandlers_factory_default_compon_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_day_cq_wcm_designimporter_parser_taghandlers_factory_default_tag_han_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_day_cq_wcm_designimporter_parser_taghandlers_factory_head_tag_handle_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_day_cq_wcm_designimporter_parser_taghandlers_factory_i_frame_tag_hand_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_day_cq_wcm_designimporter_parser_taghandlers_factory_image_componen_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_day_cq_wcm_designimporter_parser_taghandlers_factory_img_tag_handler_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_day_cq_wcm_designimporter_parser_taghandlers_factory_inline_script_t_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_day_cq_wcm_designimporter_parser_taghandlers_factory_link_tag_handle_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_day_cq_wcm_designimporter_parser_taghandlers_factory_meta_tag_handle_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_day_cq_wcm_designimporter_parser_taghandlers_factory_non_script_tag_h_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_day_cq_wcm_designimporter_parser_taghandlers_factory_parsys_compone_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_day_cq_wcm_designimporter_parser_taghandlers_factory_script_tag_hand_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_day_cq_wcm_designimporter_parser_taghandlers_factory_style_tag_handl_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_day_cq_wcm_designimporter_parser_taghandlers_factory_text_component_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_day_cq_wcm_designimporter_parser_taghandlers_factory_title_componen_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_day_cq_wcm_designimporter_parser_taghandlers_factory_title_tag_handl_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_day_cq_wcm_foundation_forms_impl_form_chooser_servlet_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_day_cq_wcm_foundation_forms_impl_form_paragraph_post_processor_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_day_cq_wcm_foundation_forms_impl_forms_handling_servlet_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_day_cq_wcm_foundation_forms_impl_mail_servlet_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_day_cq_wcm_foundation_impl_adaptive_image_component_servlet_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_day_cq_wcm_foundation_impl_http_auth_handler_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_day_cq_wcm_foundation_impl_page_impressions_tracker_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_day_cq_wcm_foundation_impl_page_redirect_servlet_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_day_cq_wcm_foundation_security_impl_default_attachment_type_blacklist_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_day_cq_wcm_foundation_security_impl_safer_sling_post_validator_impl_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_day_cq_wcm_mobile_core_impl_device_device_info_transformer_factory_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_day_cq_wcm_mobile_core_impl_redirect_redirect_filter_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_day_cq_wcm_msm_impl_actions_content_copy_action_factory_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_day_cq_wcm_msm_impl_actions_content_delete_action_factory_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_day_cq_wcm_msm_impl_actions_content_update_action_factory_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_day_cq_wcm_msm_impl_actions_order_children_action_factory_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_day_cq_wcm_msm_impl_actions_page_move_action_factory_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_day_cq_wcm_msm_impl_actions_references_update_action_factory_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_day_cq_wcm_msm_impl_actions_version_copy_action_factory_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_day_cq_wcm_msm_impl_live_relationship_manager_impl_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_day_cq_wcm_msm_impl_rollout_manager_impl_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_day_cq_wcm_msm_impl_servlets_audit_log_servlet_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_day_cq_wcm_notification_email_impl_email_channel_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_day_cq_wcm_notification_impl_notification_manager_impl_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_day_cq_wcm_scripting_impl_bvp_manager_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_day_cq_wcm_undo_undo_config_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_day_cq_wcm_webservicesupport_impl_replication_event_listener_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_day_cq_wcm_workflow_impl_wcm_workflow_service_impl_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_day_cq_wcm_workflow_impl_workflow_package_info_provider_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_day_cq_widget_impl_html_library_manager_impl_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_day_cq_widget_impl_widget_extension_provider_impl_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_day_cq_workflow_impl_email_e_mail_notification_service_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_day_cq_workflow_impl_email_task_e_mail_notification_service_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_day_crx_security_token_impl_impl_token_authentication_handler_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void com_day_crx_security_token_impl_token_cleanup_task_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void guide_localization_service_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void messaging_user_component_factory_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void org_apache_aries_jmx_framework_state_config_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void org_apache_felix_eventadmin_impl_event_admin_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void org_apache_felix_http_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void org_apache_felix_http_sslfilter_ssl_filter_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void org_apache_felix_jaas_configuration_factory_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void org_apache_felix_jaas_configuration_spi_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void org_apache_felix_scr_scr_service_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void org_apache_felix_systemready_impl_components_check_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void org_apache_felix_systemready_impl_framework_start_check_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void org_apache_felix_systemready_impl_services_check_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void org_apache_felix_systemready_impl_servlet_system_alive_servlet_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void org_apache_felix_systemready_impl_servlet_system_ready_servlet_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void org_apache_felix_systemready_system_ready_monitor_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void org_apache_felix_webconsole_internal_servlet_osgi_manager_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void org_apache_felix_webconsole_plugins_event_internal_plugin_servlet_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void org_apache_felix_webconsole_plugins_memoryusage_internal_memory_usage_co_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void org_apache_http_proxyconfigurator_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void org_apache_jackrabbit_oak_plugins_blob_datastore_data_store_text_provider_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void org_apache_jackrabbit_oak_plugins_blob_datastore_file_data_store_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void org_apache_jackrabbit_oak_plugins_document_document_node_store_service_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void org_apache_jackrabbit_oak_plugins_document_document_node_store_service_pre_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void org_apache_jackrabbit_oak_plugins_document_secondary_secondary_store_cac_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void org_apache_jackrabbit_oak_plugins_index_async_indexer_service_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void org_apache_jackrabbit_oak_plugins_index_lucene_lucene_index_provider_serv_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void org_apache_jackrabbit_oak_plugins_index_solr_osgi_embedded_solr_server_co_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void org_apache_jackrabbit_oak_plugins_index_solr_osgi_node_state_solr_servers_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void org_apache_jackrabbit_oak_plugins_index_solr_osgi_oak_solr_configuration_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void org_apache_jackrabbit_oak_plugins_index_solr_osgi_remote_solr_server_conf_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void org_apache_jackrabbit_oak_plugins_index_solr_osgi_solr_query_index_provid_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void org_apache_jackrabbit_oak_plugins_index_solr_osgi_solr_server_provider_se_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void org_apache_jackrabbit_oak_plugins_metric_statistics_provider_factory_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void org_apache_jackrabbit_oak_plugins_observation_change_collector_provider_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void org_apache_jackrabbit_oak_query_query_engine_settings_service_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void org_apache_jackrabbit_oak_security_authentication_authentication_config_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void org_apache_jackrabbit_oak_security_authentication_ldap_impl_ldap_identi_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void org_apache_jackrabbit_oak_security_authentication_token_token_configura_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void org_apache_jackrabbit_oak_security_authorization_authorization_configur_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void org_apache_jackrabbit_oak_security_internal_security_provider_registrati_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void org_apache_jackrabbit_oak_security_user_random_authorizable_node_name_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void org_apache_jackrabbit_oak_security_user_user_configuration_impl_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void org_apache_jackrabbit_oak_segment_azure_azure_segment_store_service_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void org_apache_jackrabbit_oak_segment_segment_node_store_factory_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void org_apache_jackrabbit_oak_segment_segment_node_store_monitor_service_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void org_apache_jackrabbit_oak_segment_segment_node_store_service_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void org_apache_jackrabbit_oak_segment_standby_store_standby_store_service_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void org_apache_jackrabbit_oak_spi_security_authentication_external_impl_de_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void org_apache_jackrabbit_oak_spi_security_authentication_external_impl_ex_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void org_apache_jackrabbit_oak_spi_security_authentication_external_impl_pr_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void org_apache_jackrabbit_oak_spi_security_authorization_cug_impl_cug_confi_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void org_apache_jackrabbit_oak_spi_security_authorization_cug_impl_cug_exclu_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void org_apache_jackrabbit_oak_spi_security_user_action_default_authorizable_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void org_apache_jackrabbit_vault_packaging_impl_packaging_impl_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void org_apache_jackrabbit_vault_packaging_registry_impl_fs_package_registry_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void org_apache_sling_auth_core_impl_logout_servlet_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void org_apache_sling_caconfig_impl_configuration_bindings_value_provider_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void org_apache_sling_caconfig_impl_configuration_resolver_impl_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void org_apache_sling_caconfig_impl_def_default_configuration_inheritance_stra_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void org_apache_sling_caconfig_impl_def_default_configuration_persistence_stra_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void org_apache_sling_caconfig_impl_override_osgi_configuration_override_provi_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void org_apache_sling_caconfig_impl_override_system_property_configuration_ove_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void org_apache_sling_caconfig_management_impl_configuration_management_setti_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void org_apache_sling_caconfig_resource_impl_def_default_configuration_resour_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void org_apache_sling_caconfig_resource_impl_def_default_context_path_strategy_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void org_apache_sling_commons_html_internal_tagsoup_html_parser_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void org_apache_sling_commons_log_log_manager_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void org_apache_sling_commons_log_log_manager_factory_config_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void org_apache_sling_commons_log_log_manager_factory_writer_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void org_apache_sling_commons_metrics_internal_log_reporter_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void org_apache_sling_commons_metrics_rrd4j_impl_codahale_metrics_reporter_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void org_apache_sling_commons_mime_internal_mime_type_service_impl_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void org_apache_sling_commons_scheduler_impl_quartz_scheduler_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void org_apache_sling_commons_scheduler_impl_scheduler_health_check_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void org_apache_sling_commons_threads_impl_default_thread_pool_factory_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void org_apache_sling_datasource_data_source_factory_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void org_apache_sling_datasource_jndi_data_source_factory_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void org_apache_sling_discovery_oak_config_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void org_apache_sling_discovery_oak_synchronized_clocks_health_check_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void org_apache_sling_distribution_agent_impl_forward_distribution_agent_facto_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void org_apache_sling_distribution_agent_impl_privilege_distribution_request_a_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void org_apache_sling_distribution_agent_impl_queue_distribution_agent_factory_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void org_apache_sling_distribution_agent_impl_reverse_distribution_agent_facto_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void org_apache_sling_distribution_agent_impl_simple_distribution_agent_factor_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void org_apache_sling_distribution_agent_impl_sync_distribution_agent_factory_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void org_apache_sling_distribution_monitor_distribution_queue_health_check_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void org_apache_sling_distribution_packaging_impl_exporter_agent_distributio_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void org_apache_sling_distribution_packaging_impl_exporter_local_distributio_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void org_apache_sling_distribution_packaging_impl_exporter_remote_distributi_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void org_apache_sling_distribution_packaging_impl_importer_local_distributio_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void org_apache_sling_distribution_packaging_impl_importer_remote_distributi_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void org_apache_sling_distribution_packaging_impl_importer_repository_distri_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void org_apache_sling_distribution_resources_impl_distribution_configuration_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void org_apache_sling_distribution_resources_impl_distribution_service_resour_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void org_apache_sling_distribution_serialization_impl_distribution_package_bu_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void org_apache_sling_distribution_serialization_impl_vlt_vault_distribution_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void org_apache_sling_distribution_transport_impl_user_credentials_distributi_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void org_apache_sling_distribution_trigger_impl_distribution_event_distribute_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void org_apache_sling_distribution_trigger_impl_jcr_event_distribution_trigger_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void org_apache_sling_distribution_trigger_impl_persisted_jcr_event_distributi_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void org_apache_sling_distribution_trigger_impl_remote_event_distribution_trig_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void org_apache_sling_distribution_trigger_impl_resource_event_distribution_tr_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void org_apache_sling_distribution_trigger_impl_scheduled_distribution_trigge_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void org_apache_sling_engine_impl_auth_sling_authenticator_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void org_apache_sling_engine_impl_debug_request_progress_tracker_log_filter_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void org_apache_sling_engine_impl_log_request_logger_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void org_apache_sling_engine_impl_log_request_logger_service_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void org_apache_sling_engine_impl_sling_main_servlet_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void org_apache_sling_engine_parameters_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void org_apache_sling_event_impl_eventing_thread_pool_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void org_apache_sling_event_impl_jobs_default_job_manager_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void org_apache_sling_event_impl_jobs_jcr_persistence_handler_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void org_apache_sling_event_impl_jobs_job_consumer_manager_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void org_apache_sling_event_jobs_queue_configuration_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void org_apache_sling_extensions_webconsolesecurityprovider_internal_sling_w_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void org_apache_sling_featureflags_feature_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void org_apache_sling_featureflags_impl_configured_feature_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void org_apache_sling_hapi_impl_h_api_util_impl_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void org_apache_sling_hc_core_impl_composite_health_check_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void org_apache_sling_hc_core_impl_executor_health_check_executor_impl_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void org_apache_sling_hc_core_impl_jmx_attribute_health_check_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void org_apache_sling_hc_core_impl_scriptable_health_check_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void org_apache_sling_hc_core_impl_servlet_health_check_executor_servlet_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void org_apache_sling_hc_core_impl_servlet_result_txt_verbose_serializer_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void org_apache_sling_i18n_impl_i18_n_filter_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void org_apache_sling_i18n_impl_jcr_resource_bundle_provider_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void org_apache_sling_installer_provider_jcr_impl_jcr_installer_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void org_apache_sling_jcr_base_internal_login_admin_whitelist_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void org_apache_sling_jcr_base_internal_login_admin_whitelist_fragment_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void org_apache_sling_jcr_davex_impl_servlets_sling_dav_ex_servlet_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void org_apache_sling_jcr_jackrabbit_server_jndi_registration_support_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void org_apache_sling_jcr_jackrabbit_server_rmi_registration_support_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void org_apache_sling_jcr_repoinit_impl_repository_initializer_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void org_apache_sling_jcr_repoinit_repository_initializer_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void org_apache_sling_jcr_resource_internal_jcr_resource_resolver_factory_impl_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void org_apache_sling_jcr_resource_internal_jcr_system_user_validator_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void org_apache_sling_jcr_resourcesecurity_impl_resource_access_gate_factory_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void org_apache_sling_jcr_webdav_impl_handler_default_handler_service_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void org_apache_sling_jcr_webdav_impl_handler_dir_listing_export_handler_servic_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void org_apache_sling_jcr_webdav_impl_servlets_simple_web_dav_servlet_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void org_apache_sling_jmx_provider_impl_jmx_resource_provider_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void org_apache_sling_models_impl_model_adapter_factory_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void org_apache_sling_models_jacksonexporter_impl_resource_module_provider_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void org_apache_sling_resource_inventory_impl_resource_inventory_printer_facto_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void org_apache_sling_resourcemerger_impl_merged_resource_provider_factory_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void org_apache_sling_resourcemerger_picker_overriding_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void org_apache_sling_scripting_core_impl_script_cache_impl_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void org_apache_sling_scripting_core_impl_scripting_resource_resolver_provider_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void org_apache_sling_scripting_java_impl_java_script_engine_factory_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void org_apache_sling_scripting_javascript_internal_rhino_java_script_engine_fa_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void org_apache_sling_scripting_jsp_jsp_script_engine_factory_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void org_apache_sling_scripting_sightly_js_impl_jsapi_sly_bindings_values_prov_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void org_apache_sling_security_impl_content_disposition_filter_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void org_apache_sling_security_impl_referrer_filter_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void org_apache_sling_serviceusermapping_impl_service_user_mapper_impl_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void org_apache_sling_serviceusermapping_impl_service_user_mapper_impl_amended_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void org_apache_sling_servlets_get_default_get_servlet_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void org_apache_sling_servlets_get_impl_version_version_info_servlet_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void org_apache_sling_servlets_post_impl_helper_chunk_clean_up_task_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void org_apache_sling_servlets_post_impl_sling_post_servlet_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void org_apache_sling_servlets_resolver_sling_servlet_resolver_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void org_apache_sling_settings_impl_sling_settings_service_impl_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void org_apache_sling_startupfilter_impl_startup_filter_impl_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void org_apache_sling_tenant_internal_tenant_provider_impl_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void org_apache_sling_tracer_internal_log_tracer_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void org_apache_sling_xss_impl_xss_filter_impl_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void configmgr_api_default_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);

    Pistache::Http::Endpoint httpEndpoint;
    Pistache::Rest::Router router;


    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="showPlaceholder"> (optional)</param>
    /// <param name="maximumCacheEntries"> (optional)</param>
    /// <param name="afPeriodscriptingPeriodcompatversion"> (optional)</param>
    /// <param name="makeFileNameUnique"> (optional)</param>
    /// <param name="generatingCompliantData"> (optional)</param>
    virtual void adaptive_form_and_interactive_communication_web_channel_configuration(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<bool> &showPlaceholder, const Pistache::Optional<int32_t> &maximumCacheEntries, const Pistache::Optional<std::string> &afPeriodscriptingPeriodcompatversion, const Pistache::Optional<bool> &makeFileNameUnique, const Pistache::Optional<bool> &generatingCompliantData, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="fontList"> (optional)</param>
    virtual void adaptive_form_and_interactive_communication_web_channel_theme_configur(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &fontList, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="cqPeriodanalyticsPeriodcomponentPeriodqueryPeriodcachePeriodsize"> (optional)</param>
    virtual void analytics_component_query_cache_service(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<int32_t> &cqPeriodanalyticsPeriodcomponentPeriodqueryPeriodcachePeriodsize, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="styleString"> (optional)</param>
    virtual void apache_sling_health_check_result_html_serializer(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &styleString, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="formsManagerConfigPeriodincludeOOTBTemplates"> (optional)</param>
    /// <param name="formsManagerConfigPeriodincludeDeprecatedTemplates"> (optional)</param>
    virtual void com_adobe_aem_formsndocuments_config_aem_forms_manager_configuration(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<bool> &formsManagerConfigPeriodincludeOOTBTemplates, const Pistache::Optional<bool> &formsManagerConfigPeriodincludeDeprecatedTemplates, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="isTransactionRecordingEnabled"> (optional)</param>
    virtual void com_adobe_aem_transaction_core_impl_transaction_recorder(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<bool> &isTransactionRecordingEnabled, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="hcPeriodname"> (optional)</param>
    /// <param name="hcPeriodtags"> (optional)</param>
    /// <param name="hcPeriodmbeanPeriodname"> (optional)</param>
    virtual void com_adobe_aem_upgrade_prechecks_hc_impl_deprecate_indexes_hc(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &hcPeriodname, const Pistache::Optional<std::string> &hcPeriodtags, const Pistache::Optional<std::string> &hcPeriodmbeanPeriodname, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="hcPeriodname"> (optional)</param>
    /// <param name="hcPeriodtags"> (optional)</param>
    /// <param name="hcPeriodmbeanPeriodname"> (optional)</param>
    virtual void com_adobe_aem_upgrade_prechecks_hc_impl_replication_agents_disabled_hc(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &hcPeriodname, const Pistache::Optional<std::string> &hcPeriodtags, const Pistache::Optional<std::string> &hcPeriodmbeanPeriodname, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="preUpgradePeriodmaintenancePeriodtasks"> (optional)</param>
    /// <param name="preUpgradePeriodhcPeriodtags"> (optional)</param>
    virtual void com_adobe_aem_upgrade_prechecks_mbean_impl_pre_upgrade_tasks_m_bean_impl(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &preUpgradePeriodmaintenancePeriodtasks, const Pistache::Optional<std::string> &preUpgradePeriodhcPeriodtags, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="rootPeriodpath"> (optional)</param>
    /// <param name="fixPeriodinconsistencies"> (optional)</param>
    virtual void com_adobe_aem_upgrade_prechecks_tasks_impl_consistency_check_task_impl(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &rootPeriodpath, const Pistache::Optional<bool> &fixPeriodinconsistencies, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="cqPeriodaccountmanagerPeriodtokenPeriodvalidityPeriodperiod"> (optional)</param>
    /// <param name="cqPeriodaccountmanagerPeriodconfigPeriodrequestnewaccountPeriodmail"> (optional)</param>
    /// <param name="cqPeriodaccountmanagerPeriodconfigPeriodrequestnewpwdPeriodmail"> (optional)</param>
    virtual void com_adobe_cq_account_api_account_management_service(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<int32_t> &cqPeriodaccountmanagerPeriodtokenPeriodvalidityPeriodperiod, const Pistache::Optional<std::string> &cqPeriodaccountmanagerPeriodconfigPeriodrequestnewaccountPeriodmail, const Pistache::Optional<std::string> &cqPeriodaccountmanagerPeriodconfigPeriodrequestnewpwdPeriodmail, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="cqPeriodaccountmanagerPeriodconfigPeriodinformnewaccountPeriodmail"> (optional)</param>
    /// <param name="cqPeriodaccountmanagerPeriodconfigPeriodinformnewpwdPeriodmail"> (optional)</param>
    virtual void com_adobe_cq_account_impl_account_management_servlet(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &cqPeriodaccountmanagerPeriodconfigPeriodinformnewaccountPeriodmail, const Pistache::Optional<std::string> &cqPeriodaccountmanagerPeriodconfigPeriodinformnewpwdPeriodmail, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="cqPeriodaddressPeriodlocationPerioddefaultPeriodmaxResults"> (optional)</param>
    virtual void com_adobe_cq_address_impl_location_location_list_servlet(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<int32_t> &cqPeriodaddressPeriodlocationPerioddefaultPeriodmaxResults, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="auditlogPeriodrulePeriodname"> (optional)</param>
    /// <param name="auditlogPeriodrulePeriodcontentpath"> (optional)</param>
    /// <param name="auditlogPeriodrulePeriodminimumage"> (optional)</param>
    /// <param name="auditlogPeriodrulePeriodtypes"> (optional)</param>
    virtual void com_adobe_cq_audit_purge_dam(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &auditlogPeriodrulePeriodname, const Pistache::Optional<std::string> &auditlogPeriodrulePeriodcontentpath, const Pistache::Optional<int32_t> &auditlogPeriodrulePeriodminimumage, const Pistache::Optional<std::string> &auditlogPeriodrulePeriodtypes, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="auditlogPeriodrulePeriodname"> (optional)</param>
    /// <param name="auditlogPeriodrulePeriodcontentpath"> (optional)</param>
    /// <param name="auditlogPeriodrulePeriodminimumage"> (optional)</param>
    /// <param name="auditlogPeriodrulePeriodtypes"> (optional)</param>
    virtual void com_adobe_cq_audit_purge_pages(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &auditlogPeriodrulePeriodname, const Pistache::Optional<std::string> &auditlogPeriodrulePeriodcontentpath, const Pistache::Optional<int32_t> &auditlogPeriodrulePeriodminimumage, const Pistache::Optional<std::string> &auditlogPeriodrulePeriodtypes, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="auditlogPeriodrulePeriodname"> (optional)</param>
    /// <param name="auditlogPeriodrulePeriodcontentpath"> (optional)</param>
    /// <param name="auditlogPeriodrulePeriodminimumage"> (optional)</param>
    /// <param name="auditlogPeriodrulePeriodtypes"> (optional)</param>
    virtual void com_adobe_cq_audit_purge_replication(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &auditlogPeriodrulePeriodname, const Pistache::Optional<std::string> &auditlogPeriodrulePeriodcontentpath, const Pistache::Optional<int32_t> &auditlogPeriodrulePeriodminimumage, const Pistache::Optional<std::string> &auditlogPeriodrulePeriodtypes, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="servicePeriodranking"> (optional)</param>
    /// <param name="keypairPeriodid"> (optional)</param>
    /// <param name="keypairPeriodalias"> (optional)</param>
    /// <param name="cdnrewriterPeriodattributes"> (optional)</param>
    /// <param name="cdnPeriodrewriterPerioddistributionPerioddomain"> (optional)</param>
    virtual void com_adobe_cq_cdn_rewriter_impl_aws_cloud_front_rewriter(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<int32_t> &servicePeriodranking, const Pistache::Optional<std::string> &keypairPeriodid, const Pistache::Optional<std::string> &keypairPeriodalias, const Pistache::Optional<std::string> &cdnrewriterPeriodattributes, const Pistache::Optional<std::string> &cdnPeriodrewriterPerioddistributionPerioddomain, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="cdnPeriodconfigPerioddistributionPerioddomain"> (optional)</param>
    /// <param name="cdnPeriodconfigPeriodenablePeriodrewriting"> (optional)</param>
    /// <param name="cdnPeriodconfigPeriodpathPeriodprefixes"> (optional)</param>
    /// <param name="cdnPeriodconfigPeriodcdnttl"> (optional)</param>
    /// <param name="cdnPeriodconfigPeriodapplicationPeriodprotocol"> (optional)</param>
    virtual void com_adobe_cq_cdn_rewriter_impl_cdn_config_service_impl(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &cdnPeriodconfigPerioddistributionPerioddomain, const Pistache::Optional<bool> &cdnPeriodconfigPeriodenablePeriodrewriting, const Pistache::Optional<std::string> &cdnPeriodconfigPeriodpathPeriodprefixes, const Pistache::Optional<int32_t> &cdnPeriodconfigPeriodcdnttl, const Pistache::Optional<std::string> &cdnPeriodconfigPeriodapplicationPeriodprotocol, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="servicePeriodranking"> (optional)</param>
    /// <param name="cdnrewriterPeriodattributes"> (optional)</param>
    /// <param name="cdnPeriodrewriterPerioddistributionPerioddomain"> (optional)</param>
    virtual void com_adobe_cq_cdn_rewriter_impl_cdn_rewriter(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<int32_t> &servicePeriodranking, const Pistache::Optional<std::string> &cdnrewriterPeriodattributes, const Pistache::Optional<std::string> &cdnPeriodrewriterPerioddistributionPerioddomain, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="flushPeriodagents"> (optional)</param>
    virtual void com_adobe_cq_cloudconfig_core_impl_configuration_replication_event_handle(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &flushPeriodagents, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="cqPeriodcommercePeriodassetPeriodhandlerPeriodactive"> (optional)</param>
    /// <param name="cqPeriodcommercePeriodassetPeriodhandlerPeriodname"> (optional)</param>
    virtual void com_adobe_cq_commerce_impl_asset_dynamic_image_handler(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<bool> &cqPeriodcommercePeriodassetPeriodhandlerPeriodactive, const Pistache::Optional<std::string> &cqPeriodcommercePeriodassetPeriodhandlerPeriodname, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="cqPeriodcommercePeriodassetPeriodhandlerPeriodfallback"> (optional)</param>
    virtual void com_adobe_cq_commerce_impl_asset_product_asset_handler_provider_impl(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &cqPeriodcommercePeriodassetPeriodhandlerPeriodfallback, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="cqPeriodcommercePeriodassetPeriodhandlerPeriodactive"> (optional)</param>
    /// <param name="cqPeriodcommercePeriodassetPeriodhandlerPeriodname"> (optional)</param>
    virtual void com_adobe_cq_commerce_impl_asset_static_image_handler(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<bool> &cqPeriodcommercePeriodassetPeriodhandlerPeriodactive, const Pistache::Optional<std::string> &cqPeriodcommercePeriodassetPeriodhandlerPeriodname, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="cqPeriodcommercePeriodassetPeriodhandlerPeriodactive"> (optional)</param>
    /// <param name="cqPeriodcommercePeriodassetPeriodhandlerPeriodname"> (optional)</param>
    virtual void com_adobe_cq_commerce_impl_asset_video_handler(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<bool> &cqPeriodcommercePeriodassetPeriodhandlerPeriodactive, const Pistache::Optional<std::string> &cqPeriodcommercePeriodassetPeriodhandlerPeriodname, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="cqPeriodcommercePeriodpromotionPeriodroot"> (optional)</param>
    virtual void com_adobe_cq_commerce_impl_promotion_promotion_manager_impl(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &cqPeriodcommercePeriodpromotionPeriodroot, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="cqPeriodcommercePeriodcataloggeneratorPeriodbucketsize"> (optional)</param>
    /// <param name="cqPeriodcommercePeriodcataloggeneratorPeriodbucketname"> (optional)</param>
    /// <param name="cqPeriodcommercePeriodcataloggeneratorPeriodexcludedtemplateproperties"> (optional)</param>
    virtual void com_adobe_cq_commerce_pim_impl_cataloggenerator_catalog_generator_impl(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<int32_t> &cqPeriodcommercePeriodcataloggeneratorPeriodbucketsize, const Pistache::Optional<std::string> &cqPeriodcommercePeriodcataloggeneratorPeriodbucketname, const Pistache::Optional<std::string> &cqPeriodcommercePeriodcataloggeneratorPeriodexcludedtemplateproperties, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="cqPeriodcommercePeriodpageeventlistenerPeriodenabled"> (optional)</param>
    virtual void com_adobe_cq_commerce_pim_impl_page_event_listener(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<bool> &cqPeriodcommercePeriodpageeventlistenerPeriodenabled, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="feed_generator_algorithm"> (optional)</param>
    virtual void com_adobe_cq_commerce_pim_impl_productfeed_product_feed_service_impl(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &feed_generator_algorithm, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="reportingservicesPeriodurl"> (optional)</param>
    virtual void com_adobe_cq_contentinsight_impl_reporting_services_settings_provider(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &reportingservicesPeriodurl, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="brightedgePeriodurl"> (optional)</param>
    virtual void com_adobe_cq_contentinsight_impl_servlets_bright_edge_proxy_servlet(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &brightedgePeriodurl, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="reportingservicesPeriodproxyPeriodwhitelist"> (optional)</param>
    virtual void com_adobe_cq_contentinsight_impl_servlets_reporting_services_proxy_servle(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &reportingservicesPeriodproxyPeriodwhitelist, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="damPeriodcfmPeriodcomponentPeriodresourceType"> (optional)</param>
    /// <param name="damPeriodcfmPeriodcomponentPeriodfileReferenceProp"> (optional)</param>
    /// <param name="damPeriodcfmPeriodcomponentPeriodelementsProp"> (optional)</param>
    /// <param name="damPeriodcfmPeriodcomponentPeriodvariationProp"> (optional)</param>
    virtual void com_adobe_cq_dam_cfm_impl_component_component_config_impl(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &damPeriodcfmPeriodcomponentPeriodresourceType, const Pistache::Optional<std::string> &damPeriodcfmPeriodcomponentPeriodfileReferenceProp, const Pistache::Optional<std::string> &damPeriodcfmPeriodcomponentPeriodelementsProp, const Pistache::Optional<std::string> &damPeriodcfmPeriodcomponentPeriodvariationProp, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="damPeriodcfmPeriodresourceTypes"> (optional)</param>
    /// <param name="damPeriodcfmPeriodreferenceProperties"> (optional)</param>
    virtual void com_adobe_cq_dam_cfm_impl_conf_feature_config_impl(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &damPeriodcfmPeriodresourceTypes, const Pistache::Optional<std::string> &damPeriodcfmPeriodreferenceProperties, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="pipelinePeriodtype"> (optional)</param>
    virtual void com_adobe_cq_dam_cfm_impl_content_rewriter_asset_processor(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &pipelinePeriodtype, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="pipelinePeriodtype"> (optional)</param>
    virtual void com_adobe_cq_dam_cfm_impl_content_rewriter_par_range_filter(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &pipelinePeriodtype, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="pipelinePeriodtype"> (optional)</param>
    virtual void com_adobe_cq_dam_cfm_impl_content_rewriter_payload_filter(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &pipelinePeriodtype, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="maxMemory"> (optional)</param>
    virtual void com_adobe_cq_dam_dm_process_image_p_tiff_manager_impl(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<int32_t> &maxMemory, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="dmreplicateonmodifyPeriodenabled"> (optional)</param>
    /// <param name="dmreplicateonmodifyPeriodforcesyncdeletes"> (optional)</param>
    virtual void com_adobe_cq_dam_ips_impl_replication_trigger_replicate_on_modify_worker(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<bool> &dmreplicateonmodifyPeriodenabled, const Pistache::Optional<bool> &dmreplicateonmodifyPeriodforcesyncdeletes, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="comPeriodadobePerioddamPeriodmacPeriodsyncPeriodclientPeriodsoPeriodtimeout"> (optional)</param>
    virtual void com_adobe_cq_dam_mac_sync_helper_impl_mac_sync_client_impl(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<int32_t> &comPeriodadobePerioddamPeriodmacPeriodsyncPeriodclientPeriodsoPeriodtimeout, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="comPeriodadobePeriodcqPerioddamPeriodmacPeriodsyncPerioddamsyncservicePeriodregisteredPaths"> (optional)</param>
    /// <param name="comPeriodadobePeriodcqPerioddamPeriodmacPeriodsyncPerioddamsyncservicePeriodsyncPeriodrenditions"> (optional)</param>
    /// <param name="comPeriodadobePeriodcqPerioddamPeriodmacPeriodsyncPerioddamsyncservicePeriodreplicatePeriodthreadPeriodwaitPeriodms"> (optional)</param>
    /// <param name="comPeriodadobePeriodcqPerioddamPeriodmacPeriodsyncPerioddamsyncservicePeriodplatform"> (optional)</param>
    virtual void com_adobe_cq_dam_mac_sync_impl_dam_sync_service_impl(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &comPeriodadobePeriodcqPerioddamPeriodmacPeriodsyncPerioddamsyncservicePeriodregisteredPaths, const Pistache::Optional<bool> &comPeriodadobePeriodcqPerioddamPeriodmacPeriodsyncPerioddamsyncservicePeriodsyncPeriodrenditions, const Pistache::Optional<int32_t> &comPeriodadobePeriodcqPerioddamPeriodmacPeriodsyncPerioddamsyncservicePeriodreplicatePeriodthreadPeriodwaitPeriodms, const Pistache::Optional<std::string> &comPeriodadobePeriodcqPerioddamPeriodmacPeriodsyncPerioddamsyncservicePeriodplatform, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="nuiEnabled"> (optional)</param>
    /// <param name="nuiServiceUrl"> (optional)</param>
    /// <param name="nuiApiKey"> (optional)</param>
    virtual void com_adobe_cq_dam_processor_nui_impl_nui_asset_processor(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<bool> &nuiEnabled, const Pistache::Optional<std::string> &nuiServiceUrl, const Pistache::Optional<std::string> &nuiApiKey, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="tcpPort"> (optional)</param>
    /// <param name="allowRemoteAccess"> (optional)</param>
    /// <param name="maxRenderRgnPixels"> (optional)</param>
    /// <param name="maxMessageSize"> (optional)</param>
    /// <param name="randomAccessUrlTimeout"> (optional)</param>
    /// <param name="workerThreads"> (optional)</param>
    virtual void com_adobe_cq_dam_s7imaging_impl_is_image_server_component(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &tcpPort, const Pistache::Optional<bool> &allowRemoteAccess, const Pistache::Optional<std::string> &maxRenderRgnPixels, const Pistache::Optional<std::string> &maxMessageSize, const Pistache::Optional<int32_t> &randomAccessUrlTimeout, const Pistache::Optional<int32_t> &workerThreads, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="cachePeriodenable"> (optional)</param>
    /// <param name="cachePeriodrootPaths"> (optional)</param>
    /// <param name="cachePeriodmaxSize"> (optional)</param>
    /// <param name="cachePeriodmaxEntries"> (optional)</param>
    virtual void com_adobe_cq_dam_s7imaging_impl_ps_platform_server_servlet(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<bool> &cachePeriodenable, const Pistache::Optional<std::string> &cachePeriodrootPaths, const Pistache::Optional<int32_t> &cachePeriodmaxSize, const Pistache::Optional<int32_t> &cachePeriodmaxEntries, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="servicePeriodranking"> (optional)</param>
    /// <param name="pathPrefix"> (optional)</param>
    /// <param name="createVersion"> (optional)</param>
    virtual void com_adobe_cq_dam_webdav_impl_io_asset_io_handler(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<int32_t> &servicePeriodranking, const Pistache::Optional<std::string> &pathPrefix, const Pistache::Optional<bool> &createVersion, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="cqPerioddamPeriodwebdavPeriodversionPeriodlinkingPeriodenable"> (optional)</param>
    /// <param name="cqPerioddamPeriodwebdavPeriodversionPeriodlinkingPeriodschedulerPeriodperiod"> (optional)</param>
    /// <param name="cqPerioddamPeriodwebdavPeriodversionPeriodlinkingPeriodstagingPeriodtimeout"> (optional)</param>
    virtual void com_adobe_cq_dam_webdav_impl_io_dam_webdav_version_linking_job(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<bool> &cqPerioddamPeriodwebdavPeriodversionPeriodlinkingPeriodenable, const Pistache::Optional<int32_t> &cqPerioddamPeriodwebdavPeriodversionPeriodlinkingPeriodschedulerPeriodperiod, const Pistache::Optional<int32_t> &cqPerioddamPeriodwebdavPeriodversionPeriodlinkingPeriodstagingPeriodtimeout, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="comPerioddayPeriodcqPerioddamPeriodcorePeriodimplPeriodioPeriodSpecialFilesHandlerPeriodfilepatters"> (optional)</param>
    virtual void com_adobe_cq_dam_webdav_impl_io_special_files_handler(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &comPerioddayPeriodcqPerioddamPeriodcorePeriodimplPeriodioPeriodSpecialFilesHandlerPeriodfilepatters, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="firewallPerioddeserializationPeriodwhitelist"> (optional)</param>
    /// <param name="firewallPerioddeserializationPeriodblacklist"> (optional)</param>
    /// <param name="firewallPerioddeserializationPerioddiagnostics"> (optional)</param>
    virtual void com_adobe_cq_deserfw_impl_deserialization_firewall_impl(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &firewallPerioddeserializationPeriodwhitelist, const Pistache::Optional<std::string> &firewallPerioddeserializationPeriodblacklist, const Pistache::Optional<std::string> &firewallPerioddeserializationPerioddiagnostics, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="connectionPeriodtimeout"> (optional)</param>
    /// <param name="socketPeriodtimeout"> (optional)</param>
    virtual void com_adobe_cq_dtm_impl_service_dtm_web_service_impl(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<int32_t> &connectionPeriodtimeout, const Pistache::Optional<int32_t> &socketPeriodtimeout, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="dtmPeriodstagingPeriodipPeriodwhitelist"> (optional)</param>
    /// <param name="dtmPeriodproductionPeriodipPeriodwhitelist"> (optional)</param>
    virtual void com_adobe_cq_dtm_impl_servlets_dtm_deploy_hook_servlet(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &dtmPeriodstagingPeriodipPeriodwhitelist, const Pistache::Optional<std::string> &dtmPeriodproductionPeriodipPeriodwhitelist, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="endpointUri"> (optional)</param>
    /// <param name="connectionTimeout"> (optional)</param>
    /// <param name="socketTimeout"> (optional)</param>
    virtual void com_adobe_cq_dtm_reactor_impl_service_web_service_impl(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &endpointUri, const Pistache::Optional<int32_t> &connectionTimeout, const Pistache::Optional<int32_t> &socketTimeout, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="enabled"> (optional)</param>
    /// <param name="disabledForGroups"> (optional)</param>
    virtual void com_adobe_cq_experiencelog_impl_experience_log_config_servlet(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<bool> &enabled, const Pistache::Optional<std::string> &disabledForGroups, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="hcPeriodname"> (optional)</param>
    /// <param name="hcPeriodtags"> (optional)</param>
    /// <param name="hcPeriodmbeanPeriodname"> (optional)</param>
    /// <param name="packagePeriodnames"> (optional)</param>
    virtual void com_adobe_cq_hc_content_packages_health_check(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &hcPeriodname, const Pistache::Optional<std::string> &hcPeriodtags, const Pistache::Optional<std::string> &hcPeriodmbeanPeriodname, const Pistache::Optional<std::string> &packagePeriodnames, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="historyPeriodrequestFilterPeriodexcludedSelectors"> (optional)</param>
    /// <param name="historyPeriodrequestFilterPeriodexcludedExtensions"> (optional)</param>
    virtual void com_adobe_cq_history_impl_history_request_filter(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &historyPeriodrequestFilterPeriodexcludedSelectors, const Pistache::Optional<std::string> &historyPeriodrequestFilterPeriodexcludedExtensions, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="historyPeriodservicePeriodresourceTypes"> (optional)</param>
    /// <param name="historyPeriodservicePeriodpathFilter"> (optional)</param>
    virtual void com_adobe_cq_history_impl_history_service_impl(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &historyPeriodservicePeriodresourceTypes, const Pistache::Optional<std::string> &historyPeriodservicePeriodpathFilter, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="inboxPeriodimplPeriodtypeproviderPeriodregistrypaths"> (optional)</param>
    /// <param name="inboxPeriodimplPeriodtypeproviderPeriodlegacypaths"> (optional)</param>
    /// <param name="inboxPeriodimplPeriodtypeproviderPerioddefaulturlPeriodfailureitem"> (optional)</param>
    /// <param name="inboxPeriodimplPeriodtypeproviderPerioddefaulturlPeriodworkitem"> (optional)</param>
    /// <param name="inboxPeriodimplPeriodtypeproviderPerioddefaulturlPeriodtask"> (optional)</param>
    virtual void com_adobe_cq_inbox_impl_typeprovider_item_type_provider(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &inboxPeriodimplPeriodtypeproviderPeriodregistrypaths, const Pistache::Optional<std::string> &inboxPeriodimplPeriodtypeproviderPeriodlegacypaths, const Pistache::Optional<std::string> &inboxPeriodimplPeriodtypeproviderPerioddefaulturlPeriodfailureitem, const Pistache::Optional<std::string> &inboxPeriodimplPeriodtypeproviderPerioddefaulturlPeriodworkitem, const Pistache::Optional<std::string> &inboxPeriodimplPeriodtypeproviderPerioddefaulturlPeriodtask, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="imagePeriodquality"> (optional)</param>
    /// <param name="imagePeriodsupportedPeriodresolutions"> (optional)</param>
    virtual void com_adobe_cq_projects_impl_servlet_project_image_servlet(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &imagePeriodquality, const Pistache::Optional<std::string> &imagePeriodsupportedPeriodresolutions, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="scheduledpurgePeriodname"> (optional)</param>
    /// <param name="scheduledpurgePeriodpurgeActive"> (optional)</param>
    /// <param name="scheduledpurgePeriodtemplates"> (optional)</param>
    /// <param name="scheduledpurgePeriodpurgeGroups"> (optional)</param>
    /// <param name="scheduledpurgePeriodpurgeAssets"> (optional)</param>
    /// <param name="scheduledpurgePeriodterminateRunningWorkflows"> (optional)</param>
    /// <param name="scheduledpurgePerioddaysold"> (optional)</param>
    /// <param name="scheduledpurgePeriodsaveThreshold"> (optional)</param>
    virtual void com_adobe_cq_projects_purge_scheduler(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &scheduledpurgePeriodname, const Pistache::Optional<bool> &scheduledpurgePeriodpurgeActive, const Pistache::Optional<std::string> &scheduledpurgePeriodtemplates, const Pistache::Optional<bool> &scheduledpurgePeriodpurgeGroups, const Pistache::Optional<bool> &scheduledpurgePeriodpurgeAssets, const Pistache::Optional<bool> &scheduledpurgePeriodterminateRunningWorkflows, const Pistache::Optional<int32_t> &scheduledpurgePerioddaysold, const Pistache::Optional<int32_t> &scheduledpurgePeriodsaveThreshold, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="includePeriodpaths"> (optional)</param>
    /// <param name="exporterPerioduser"> (optional)</param>
    virtual void com_adobe_cq_scheduled_exporter_impl_scheduled_exporter_impl(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &includePeriodpaths, const Pistache::Optional<std::string> &exporterPerioduser, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="comPeriodadobePeriodcqPeriodscreensPeriodanalyticsPeriodimplPeriodurl"> (optional)</param>
    /// <param name="comPeriodadobePeriodcqPeriodscreensPeriodanalyticsPeriodimplPeriodapikey"> (optional)</param>
    /// <param name="comPeriodadobePeriodcqPeriodscreensPeriodanalyticsPeriodimplPeriodproject"> (optional)</param>
    /// <param name="comPeriodadobePeriodcqPeriodscreensPeriodanalyticsPeriodimplPeriodenvironment"> (optional)</param>
    /// <param name="comPeriodadobePeriodcqPeriodscreensPeriodanalyticsPeriodimplPeriodsendFrequency"> (optional)</param>
    virtual void com_adobe_cq_screens_analytics_impl_screens_analytics_service_impl(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &comPeriodadobePeriodcqPeriodscreensPeriodanalyticsPeriodimplPeriodurl, const Pistache::Optional<std::string> &comPeriodadobePeriodcqPeriodscreensPeriodanalyticsPeriodimplPeriodapikey, const Pistache::Optional<std::string> &comPeriodadobePeriodcqPeriodscreensPeriodanalyticsPeriodimplPeriodproject, const Pistache::Optional<std::string> &comPeriodadobePeriodcqPeriodscreensPeriodanalyticsPeriodimplPeriodenvironment, const Pistache::Optional<int32_t> &comPeriodadobePeriodcqPeriodscreensPeriodanalyticsPeriodimplPeriodsendFrequency, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="comPeriodadobePeriodaemPeriodscreensPeriodplayerPeriodpingfrequency"> (optional)</param>
    /// <param name="comPeriodadobePeriodaemPeriodscreensPerioddevicePeriodpaswordPeriodspecialchars"> (optional)</param>
    /// <param name="comPeriodadobePeriodaemPeriodscreensPerioddevicePeriodpaswordPeriodminlowercasechars"> (optional)</param>
    /// <param name="comPeriodadobePeriodaemPeriodscreensPerioddevicePeriodpaswordPeriodminuppercasechars"> (optional)</param>
    /// <param name="comPeriodadobePeriodaemPeriodscreensPerioddevicePeriodpaswordPeriodminnumberchars"> (optional)</param>
    /// <param name="comPeriodadobePeriodaemPeriodscreensPerioddevicePeriodpaswordPeriodminspecialchars"> (optional)</param>
    /// <param name="comPeriodadobePeriodaemPeriodscreensPerioddevicePeriodpaswordPeriodminlength"> (optional)</param>
    virtual void com_adobe_cq_screens_device_impl_device_service(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<int32_t> &comPeriodadobePeriodaemPeriodscreensPeriodplayerPeriodpingfrequency, const Pistache::Optional<std::string> &comPeriodadobePeriodaemPeriodscreensPerioddevicePeriodpaswordPeriodspecialchars, const Pistache::Optional<int32_t> &comPeriodadobePeriodaemPeriodscreensPerioddevicePeriodpaswordPeriodminlowercasechars, const Pistache::Optional<int32_t> &comPeriodadobePeriodaemPeriodscreensPerioddevicePeriodpaswordPeriodminuppercasechars, const Pistache::Optional<int32_t> &comPeriodadobePeriodaemPeriodscreensPerioddevicePeriodpaswordPeriodminnumberchars, const Pistache::Optional<int32_t> &comPeriodadobePeriodaemPeriodscreensPerioddevicePeriodpaswordPeriodminspecialchars, const Pistache::Optional<int32_t> &comPeriodadobePeriodaemPeriodscreensPerioddevicePeriodpaswordPeriodminlength, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="deviceRegistrationTimeout"> (optional)</param>
    virtual void com_adobe_cq_screens_device_registration_impl_registration_service_impl(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<int32_t> &deviceRegistrationTimeout, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="cqPeriodpagesupdatehandlerPeriodimageresourcetypes"> (optional)</param>
    /// <param name="cqPeriodpagesupdatehandlerPeriodproductresourcetypes"> (optional)</param>
    /// <param name="cqPeriodpagesupdatehandlerPeriodvideoresourcetypes"> (optional)</param>
    /// <param name="cqPeriodpagesupdatehandlerPerioddynamicsequenceresourcetypes"> (optional)</param>
    /// <param name="cqPeriodpagesupdatehandlerPeriodpreviewmodepaths"> (optional)</param>
    virtual void com_adobe_cq_screens_impl_handler_channels_update_handler(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &cqPeriodpagesupdatehandlerPeriodimageresourcetypes, const Pistache::Optional<std::string> &cqPeriodpagesupdatehandlerPeriodproductresourcetypes, const Pistache::Optional<std::string> &cqPeriodpagesupdatehandlerPeriodvideoresourcetypes, const Pistache::Optional<std::string> &cqPeriodpagesupdatehandlerPerioddynamicsequenceresourcetypes, const Pistache::Optional<std::string> &cqPeriodpagesupdatehandlerPeriodpreviewmodepaths, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="schedulerPeriodexpression"> (optional)</param>
    virtual void com_adobe_cq_screens_impl_jobs_distributed_devices_stati_update_job(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &schedulerPeriodexpression, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="comPeriodadobePeriodaemPeriodscreensPeriodimplPeriodremotePeriodrequestTimeout"> (optional)</param>
    virtual void com_adobe_cq_screens_impl_remote_impl_distributed_http_client_impl(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<int32_t> &comPeriodadobePeriodaemPeriodscreensPeriodimplPeriodremotePeriodrequestTimeout, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="screensPeriodchannelsPeriodpropertiesPeriodtoPeriodremove"> (optional)</param>
    virtual void com_adobe_cq_screens_impl_screens_channel_post_processor(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &screensPeriodchannelsPeriodpropertiesPeriodtoPeriodremove, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="comPeriodadobePeriodcqPeriodscreensPeriodmonitoringPeriodimplPeriodScreensMonitoringServiceImplPeriodprojectPath"> (optional)</param>
    /// <param name="comPeriodadobePeriodcqPeriodscreensPeriodmonitoringPeriodimplPeriodScreensMonitoringServiceImplPeriodscheduleFrequency"> (optional)</param>
    /// <param name="comPeriodadobePeriodcqPeriodscreensPeriodmonitoringPeriodimplPeriodScreensMonitoringServiceImplPeriodpingTimeout"> (optional)</param>
    /// <param name="comPeriodadobePeriodcqPeriodscreensPeriodmonitoringPeriodimplPeriodScreensMonitoringServiceImplPeriodrecipients"> (optional)</param>
    /// <param name="comPeriodadobePeriodcqPeriodscreensPeriodmonitoringPeriodimplPeriodScreensMonitoringServiceImplPeriodsmtpserver"> (optional)</param>
    /// <param name="comPeriodadobePeriodcqPeriodscreensPeriodmonitoringPeriodimplPeriodScreensMonitoringServiceImplPeriodsmtpport"> (optional)</param>
    /// <param name="comPeriodadobePeriodcqPeriodscreensPeriodmonitoringPeriodimplPeriodScreensMonitoringServiceImplPeriodusetls"> (optional)</param>
    /// <param name="comPeriodadobePeriodcqPeriodscreensPeriodmonitoringPeriodimplPeriodScreensMonitoringServiceImplPeriodusername"> (optional)</param>
    /// <param name="comPeriodadobePeriodcqPeriodscreensPeriodmonitoringPeriodimplPeriodScreensMonitoringServiceImplPeriodpassword"> (optional)</param>
    virtual void com_adobe_cq_screens_monitoring_impl_screens_monitoring_service_impl(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &comPeriodadobePeriodcqPeriodscreensPeriodmonitoringPeriodimplPeriodScreensMonitoringServiceImplPeriodprojectPath, const Pistache::Optional<std::string> &comPeriodadobePeriodcqPeriodscreensPeriodmonitoringPeriodimplPeriodScreensMonitoringServiceImplPeriodscheduleFrequency, const Pistache::Optional<int32_t> &comPeriodadobePeriodcqPeriodscreensPeriodmonitoringPeriodimplPeriodScreensMonitoringServiceImplPeriodpingTimeout, const Pistache::Optional<std::string> &comPeriodadobePeriodcqPeriodscreensPeriodmonitoringPeriodimplPeriodScreensMonitoringServiceImplPeriodrecipients, const Pistache::Optional<std::string> &comPeriodadobePeriodcqPeriodscreensPeriodmonitoringPeriodimplPeriodScreensMonitoringServiceImplPeriodsmtpserver, const Pistache::Optional<int32_t> &comPeriodadobePeriodcqPeriodscreensPeriodmonitoringPeriodimplPeriodScreensMonitoringServiceImplPeriodsmtpport, const Pistache::Optional<bool> &comPeriodadobePeriodcqPeriodscreensPeriodmonitoringPeriodimplPeriodScreensMonitoringServiceImplPeriodusetls, const Pistache::Optional<std::string> &comPeriodadobePeriodcqPeriodscreensPeriodmonitoringPeriodimplPeriodScreensMonitoringServiceImplPeriodusername, const Pistache::Optional<std::string> &comPeriodadobePeriodcqPeriodscreensPeriodmonitoringPeriodimplPeriodScreensMonitoringServiceImplPeriodpassword, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="servicePeriodranking"> (optional)</param>
    /// <param name="globalPeriodsize"> (optional)</param>
    /// <param name="maxPerioddiskPeriodusage"> (optional)</param>
    /// <param name="persistencePeriodenabled"> (optional)</param>
    /// <param name="threadPeriodpoolPeriodmaxPeriodsize"> (optional)</param>
    /// <param name="scheduledPeriodthreadPeriodpoolPeriodmaxPeriodsize"> (optional)</param>
    /// <param name="gracefulPeriodshutdownPeriodtimeout"> (optional)</param>
    /// <param name="queues"> (optional)</param>
    /// <param name="topics"> (optional)</param>
    /// <param name="addressesPeriodmaxPerioddeliveryPeriodattempts"> (optional)</param>
    /// <param name="addressesPeriodexpiryPerioddelay"> (optional)</param>
    /// <param name="addressesPeriodaddressPeriodfullPeriodmessagePeriodpolicy"> (optional)</param>
    /// <param name="addressesPeriodmaxPeriodsizePeriodbytes"> (optional)</param>
    /// <param name="addressesPeriodpagePeriodsizePeriodbytes"> (optional)</param>
    /// <param name="addressesPeriodpagePeriodcachePeriodmaxPeriodsize"> (optional)</param>
    /// <param name="clusterPerioduser"> (optional)</param>
    /// <param name="clusterPeriodpassword"> (optional)</param>
    /// <param name="clusterPeriodcallPeriodtimeout"> (optional)</param>
    /// <param name="clusterPeriodcallPeriodfailoverPeriodtimeout"> (optional)</param>
    /// <param name="clusterPeriodclientPeriodfailurePeriodcheckPeriodperiod"> (optional)</param>
    /// <param name="clusterPeriodnotificationPeriodattempts"> (optional)</param>
    /// <param name="clusterPeriodnotificationPeriodinterval"> (optional)</param>
    /// <param name="idPeriodcachePeriodsize"> (optional)</param>
    /// <param name="clusterPeriodconfirmationPeriodwindowPeriodsize"> (optional)</param>
    /// <param name="clusterPeriodconnectionPeriodttl"> (optional)</param>
    /// <param name="clusterPeriodduplicatePerioddetection"> (optional)</param>
    /// <param name="clusterPeriodinitialPeriodconnectPeriodattempts"> (optional)</param>
    /// <param name="clusterPeriodmaxPeriodretryPeriodinterval"> (optional)</param>
    /// <param name="clusterPeriodminPeriodlargePeriodmessagePeriodsize"> (optional)</param>
    /// <param name="clusterPeriodproducerPeriodwindowPeriodsize"> (optional)</param>
    /// <param name="clusterPeriodreconnectPeriodattempts"> (optional)</param>
    /// <param name="clusterPeriodretryPeriodinterval"> (optional)</param>
    /// <param name="clusterPeriodretryPeriodintervalPeriodmultiplier"> (optional)</param>
    virtual void com_adobe_cq_screens_mq_activemq_impl_artemis_jms_provider(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<int32_t> &servicePeriodranking, const Pistache::Optional<int32_t> &globalPeriodsize, const Pistache::Optional<int32_t> &maxPerioddiskPeriodusage, const Pistache::Optional<bool> &persistencePeriodenabled, const Pistache::Optional<int32_t> &threadPeriodpoolPeriodmaxPeriodsize, const Pistache::Optional<int32_t> &scheduledPeriodthreadPeriodpoolPeriodmaxPeriodsize, const Pistache::Optional<int32_t> &gracefulPeriodshutdownPeriodtimeout, const Pistache::Optional<std::string> &queues, const Pistache::Optional<std::string> &topics, const Pistache::Optional<int32_t> &addressesPeriodmaxPerioddeliveryPeriodattempts, const Pistache::Optional<int32_t> &addressesPeriodexpiryPerioddelay, const Pistache::Optional<std::string> &addressesPeriodaddressPeriodfullPeriodmessagePeriodpolicy, const Pistache::Optional<int32_t> &addressesPeriodmaxPeriodsizePeriodbytes, const Pistache::Optional<int32_t> &addressesPeriodpagePeriodsizePeriodbytes, const Pistache::Optional<int32_t> &addressesPeriodpagePeriodcachePeriodmaxPeriodsize, const Pistache::Optional<std::string> &clusterPerioduser, const Pistache::Optional<std::string> &clusterPeriodpassword, const Pistache::Optional<int32_t> &clusterPeriodcallPeriodtimeout, const Pistache::Optional<int32_t> &clusterPeriodcallPeriodfailoverPeriodtimeout, const Pistache::Optional<int32_t> &clusterPeriodclientPeriodfailurePeriodcheckPeriodperiod, const Pistache::Optional<int32_t> &clusterPeriodnotificationPeriodattempts, const Pistache::Optional<int32_t> &clusterPeriodnotificationPeriodinterval, const Pistache::Optional<int32_t> &idPeriodcachePeriodsize, const Pistache::Optional<int32_t> &clusterPeriodconfirmationPeriodwindowPeriodsize, const Pistache::Optional<int32_t> &clusterPeriodconnectionPeriodttl, const Pistache::Optional<bool> &clusterPeriodduplicatePerioddetection, const Pistache::Optional<int32_t> &clusterPeriodinitialPeriodconnectPeriodattempts, const Pistache::Optional<int32_t> &clusterPeriodmaxPeriodretryPeriodinterval, const Pistache::Optional<int32_t> &clusterPeriodminPeriodlargePeriodmessagePeriodsize, const Pistache::Optional<int32_t> &clusterPeriodproducerPeriodwindowPeriodsize, const Pistache::Optional<int32_t> &clusterPeriodreconnectPeriodattempts, const Pistache::Optional<int32_t> &clusterPeriodretryPeriodinterval, const Pistache::Optional<double> &clusterPeriodretryPeriodintervalPeriodmultiplier, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="comPeriodadobePeriodcqPeriodscreensPeriodofflinecontentPeriodimplPeriodBulkOfflineUpdateServiceImplPeriodprojectPath"> (optional)</param>
    /// <param name="comPeriodadobePeriodcqPeriodscreensPeriodofflinecontentPeriodimplPeriodBulkOfflineUpdateServiceImplPeriodscheduleFrequency"> (optional)</param>
    virtual void com_adobe_cq_screens_offlinecontent_impl_bulk_offline_update_service_impl(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &comPeriodadobePeriodcqPeriodscreensPeriodofflinecontentPeriodimplPeriodBulkOfflineUpdateServiceImplPeriodprojectPath, const Pistache::Optional<std::string> &comPeriodadobePeriodcqPeriodscreensPeriodofflinecontentPeriodimplPeriodBulkOfflineUpdateServiceImplPeriodscheduleFrequency, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="disableSmartSync"> (optional)</param>
    virtual void com_adobe_cq_screens_offlinecontent_impl_offline_content_service_impl(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<bool> &disableSmartSync, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="enableDataTriggeredContent"> (optional)</param>
    virtual void com_adobe_cq_screens_segmentation_impl_segmentation_feature_flag(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<bool> &enableDataTriggeredContent, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="hcPeriodtags"> (optional)</param>
    virtual void com_adobe_cq_security_hc_bundles_impl_html_library_manager_config_health_ch(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &hcPeriodtags, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="hcPeriodtags"> (optional)</param>
    virtual void com_adobe_cq_security_hc_bundles_impl_wcm_filter_health_check(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &hcPeriodtags, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="hcPeriodtags"> (optional)</param>
    /// <param name="dispatcherPeriodaddress"> (optional)</param>
    /// <param name="dispatcherPeriodfilterPeriodallowed"> (optional)</param>
    /// <param name="dispatcherPeriodfilterPeriodblocked"> (optional)</param>
    virtual void com_adobe_cq_security_hc_dispatcher_impl_dispatcher_access_health_check(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &hcPeriodtags, const Pistache::Optional<std::string> &dispatcherPeriodaddress, const Pistache::Optional<std::string> &dispatcherPeriodfilterPeriodallowed, const Pistache::Optional<std::string> &dispatcherPeriodfilterPeriodblocked, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="hcPeriodtags"> (optional)</param>
    virtual void com_adobe_cq_security_hc_packages_impl_example_content_health_check(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &hcPeriodtags, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="hcPeriodtags"> (optional)</param>
    /// <param name="webserverPeriodaddress"> (optional)</param>
    virtual void com_adobe_cq_security_hc_webserver_impl_clickjacking_health_check(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &hcPeriodtags, const Pistache::Optional<std::string> &webserverPeriodaddress, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="enable"> (optional)</param>
    /// <param name="ttl1"> (optional)</param>
    /// <param name="ttl2"> (optional)</param>
    virtual void com_adobe_cq_social_accountverification_impl_account_management_config_im(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<bool> &enable, const Pistache::Optional<int32_t> &ttl1, const Pistache::Optional<int32_t> &ttl2, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="priority"> (optional)</param>
    virtual void com_adobe_cq_social_activitystreams_client_impl_social_activity_componen(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<int32_t> &priority, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="priority"> (optional)</param>
    virtual void com_adobe_cq_social_activitystreams_client_impl_social_activity_stream_co(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<int32_t> &priority, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="eventPeriodtopics"> (optional)</param>
    /// <param name="eventPeriodfilter"> (optional)</param>
    virtual void com_adobe_cq_social_activitystreams_listener_impl_event_listener_handler(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &eventPeriodtopics, const Pistache::Optional<std::string> &eventPeriodfilter, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="accepted"> (optional)</param>
    /// <param name="ranked"> (optional)</param>
    virtual void com_adobe_cq_social_activitystreams_listener_impl_moderation_event_exten(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<bool> &accepted, const Pistache::Optional<int32_t> &ranked, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="ranking"> (optional)</param>
    /// <param name="enable"> (optional)</param>
    virtual void com_adobe_cq_social_activitystreams_listener_impl_rating_event_activity_s(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<int32_t> &ranking, const Pistache::Optional<bool> &enable, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="streamPath"> (optional)</param>
    /// <param name="streamName"> (optional)</param>
    virtual void com_adobe_cq_social_activitystreams_listener_impl_resource_activity_stre(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &streamPath, const Pistache::Optional<std::string> &streamName, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="maxRetry"> (optional)</param>
    /// <param name="fieldWhitelist"> (optional)</param>
    /// <param name="attachmentTypeBlacklist"> (optional)</param>
    virtual void com_adobe_cq_social_calendar_client_endpoints_impl_calendar_operations_i(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<int32_t> &maxRetry, const Pistache::Optional<std::string> &fieldWhitelist, const Pistache::Optional<std::string> &attachmentTypeBlacklist, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="attachmentTypeBlacklist"> (optional)</param>
    /// <param name="extensionPeriodorder"> (optional)</param>
    virtual void com_adobe_cq_social_calendar_client_operationextensions_event_attachmen(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &attachmentTypeBlacklist, const Pistache::Optional<int32_t> &extensionPeriodorder, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="timezonesPeriodexpirytime"> (optional)</param>
    virtual void com_adobe_cq_social_calendar_servlets_time_zone_servlet(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<int32_t> &timezonesPeriodexpirytime, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="ranking"> (optional)</param>
    virtual void com_adobe_cq_social_commons_comments_endpoints_impl_comment_delete_event(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<int32_t> &ranking, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="fieldWhitelist"> (optional)</param>
    /// <param name="attachmentTypeBlacklist"> (optional)</param>
    virtual void com_adobe_cq_social_commons_comments_endpoints_impl_comment_operation_se(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &fieldWhitelist, const Pistache::Optional<std::string> &attachmentTypeBlacklist, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="fieldWhitelist"> (optional)</param>
    /// <param name="attachmentTypeBlacklist"> (optional)</param>
    virtual void com_adobe_cq_social_commons_comments_endpoints_impl_translation_operati(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &fieldWhitelist, const Pistache::Optional<std::string> &attachmentTypeBlacklist, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="numUserLimit"> (optional)</param>
    virtual void com_adobe_cq_social_commons_comments_listing_impl_search_comment_social_c(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<int32_t> &numUserLimit, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="enableScheduledPostsSearch"> (optional)</param>
    /// <param name="numberOfMinutes"> (optional)</param>
    /// <param name="maxSearchLimit"> (optional)</param>
    virtual void com_adobe_cq_social_commons_comments_scheduler_impl_search_scheduled_pos(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<bool> &enableScheduledPostsSearch, const Pistache::Optional<int32_t> &numberOfMinutes, const Pistache::Optional<int32_t> &maxSearchLimit, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="corsPeriodenabling"> (optional)</param>
    virtual void com_adobe_cq_social_commons_cors_cors_authentication_filter(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<bool> &corsPeriodenabling, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="priorityOrder"> (optional)</param>
    /// <param name="replyEmailPatterns"> (optional)</param>
    virtual void com_adobe_cq_social_commons_emailreply_impl_android_email_client_provider(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<int32_t> &priorityOrder, const Pistache::Optional<std::string> &replyEmailPatterns, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="contextPeriodpath"> (optional)</param>
    virtual void com_adobe_cq_social_commons_emailreply_impl_comment_email_builder_impl(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &contextPeriodpath, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="eventPeriodtopics"> (optional)</param>
    virtual void com_adobe_cq_social_commons_emailreply_impl_comment_email_event_listener(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &eventPeriodtopics, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="priorityOrder"> (optional)</param>
    /// <param name="replyEmailPatterns"> (optional)</param>
    virtual void com_adobe_cq_social_commons_emailreply_impl_custom_email_client_provider(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<int32_t> &priorityOrder, const Pistache::Optional<std::string> &replyEmailPatterns, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="patternPeriodtime"> (optional)</param>
    /// <param name="patternPeriodnewline"> (optional)</param>
    /// <param name="patternPerioddayOfMonth"> (optional)</param>
    /// <param name="patternPeriodmonth"> (optional)</param>
    /// <param name="patternPeriodyear"> (optional)</param>
    /// <param name="patternPerioddate"> (optional)</param>
    /// <param name="patternPerioddateTime"> (optional)</param>
    /// <param name="patternPeriodemail"> (optional)</param>
    virtual void com_adobe_cq_social_commons_emailreply_impl_email_quoted_text_patterns_imp(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &patternPeriodtime, const Pistache::Optional<std::string> &patternPeriodnewline, const Pistache::Optional<std::string> &patternPerioddayOfMonth, const Pistache::Optional<std::string> &patternPeriodmonth, const Pistache::Optional<std::string> &patternPeriodyear, const Pistache::Optional<std::string> &patternPerioddate, const Pistache::Optional<std::string> &patternPerioddateTime, const Pistache::Optional<std::string> &patternPeriodemail, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="emailPeriodname"> (optional)</param>
    /// <param name="emailPeriodcreatePostFromReply"> (optional)</param>
    /// <param name="emailPeriodaddCommentIdTo"> (optional)</param>
    /// <param name="emailPeriodsubjectMaximumLength"> (optional)</param>
    /// <param name="emailPeriodreplyToAddress"> (optional)</param>
    /// <param name="emailPeriodreplyToDelimiter"> (optional)</param>
    /// <param name="emailPeriodtrackerIdPrefixInSubject"> (optional)</param>
    /// <param name="emailPeriodtrackerIdPrefixInBody"> (optional)</param>
    /// <param name="emailPeriodasHTML"> (optional)</param>
    /// <param name="emailPerioddefaultUserName"> (optional)</param>
    /// <param name="emailPeriodtemplatesPeriodrootPath"> (optional)</param>
    virtual void com_adobe_cq_social_commons_emailreply_impl_email_reply_configuration_imp(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &emailPeriodname, const Pistache::Optional<bool> &emailPeriodcreatePostFromReply, const Pistache::Optional<std::string> &emailPeriodaddCommentIdTo, const Pistache::Optional<int32_t> &emailPeriodsubjectMaximumLength, const Pistache::Optional<std::string> &emailPeriodreplyToAddress, const Pistache::Optional<std::string> &emailPeriodreplyToDelimiter, const Pistache::Optional<std::string> &emailPeriodtrackerIdPrefixInSubject, const Pistache::Optional<std::string> &emailPeriodtrackerIdPrefixInBody, const Pistache::Optional<bool> &emailPeriodasHTML, const Pistache::Optional<std::string> &emailPerioddefaultUserName, const Pistache::Optional<std::string> &emailPeriodtemplatesPeriodrootPath, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="connectProtocol"> (optional)</param>
    virtual void com_adobe_cq_social_commons_emailreply_impl_email_reply_importer(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &connectProtocol, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="priorityOrder"> (optional)</param>
    /// <param name="replyEmailPatterns"> (optional)</param>
    virtual void com_adobe_cq_social_commons_emailreply_impl_gmail_email_client_provider(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<int32_t> &priorityOrder, const Pistache::Optional<std::string> &replyEmailPatterns, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="priorityOrder"> (optional)</param>
    /// <param name="replyEmailPatterns"> (optional)</param>
    virtual void com_adobe_cq_social_commons_emailreply_impl_ios_email_client_provider(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<int32_t> &priorityOrder, const Pistache::Optional<std::string> &replyEmailPatterns, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="priorityOrder"> (optional)</param>
    /// <param name="replyEmailPatterns"> (optional)</param>
    virtual void com_adobe_cq_social_commons_emailreply_impl_macmail_email_client_provider(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<int32_t> &priorityOrder, const Pistache::Optional<std::string> &replyEmailPatterns, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="priorityOrder"> (optional)</param>
    /// <param name="replyEmailPatterns"> (optional)</param>
    virtual void com_adobe_cq_social_commons_emailreply_impl_out_look_email_client_provider(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<int32_t> &priorityOrder, const Pistache::Optional<std::string> &replyEmailPatterns, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="replyEmailPatterns"> (optional)</param>
    /// <param name="priorityOrder"> (optional)</param>
    virtual void com_adobe_cq_social_commons_emailreply_impl_unknown_email_client_provider(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &replyEmailPatterns, const Pistache::Optional<int32_t> &priorityOrder, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="priorityOrder"> (optional)</param>
    /// <param name="replyEmailPatterns"> (optional)</param>
    virtual void com_adobe_cq_social_commons_emailreply_impl_yahoo_email_client_provider(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<int32_t> &priorityOrder, const Pistache::Optional<std::string> &replyEmailPatterns, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="numberOfDays"> (optional)</param>
    /// <param name="ageOfFile"> (optional)</param>
    virtual void com_adobe_cq_social_commons_maintainance_impl_delete_temp_ugc_image_upload(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<int32_t> &numberOfDays, const Pistache::Optional<int32_t> &ageOfFile, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="eventPeriodtopics"> (optional)</param>
    /// <param name="eventPeriodfilter"> (optional)</param>
    /// <param name="verbs"> (optional)</param>
    virtual void com_adobe_cq_social_commons_ugclimiter_impl_ugc_limiter_service_impl(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &eventPeriodtopics, const Pistache::Optional<std::string> &eventPeriodfilter, const Pistache::Optional<std::string> &verbs, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="enable"> (optional)</param>
    /// <param name="uGCLimit"> (optional)</param>
    /// <param name="ugcLimitDuration"> (optional)</param>
    /// <param name="domains"> (optional)</param>
    /// <param name="toList"> (optional)</param>
    virtual void com_adobe_cq_social_commons_ugclimitsconfig_impl_community_user_ugc_limit(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<bool> &enable, const Pistache::Optional<int32_t> &uGCLimit, const Pistache::Optional<int32_t> &ugcLimitDuration, const Pistache::Optional<std::string> &domains, const Pistache::Optional<std::string> &toList, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="oauthPeriodproviderPeriodid"> (optional)</param>
    /// <param name="oauthPeriodcloudPeriodconfigPeriodroot"> (optional)</param>
    /// <param name="providerPeriodconfigPeriodroot"> (optional)</param>
    /// <param name="providerPeriodconfigPeriodcreatePeriodtagsPeriodenabled"> (optional)</param>
    /// <param name="providerPeriodconfigPerioduserPeriodfolder"> (optional)</param>
    /// <param name="providerPeriodconfigPeriodfacebookPeriodfetchPeriodfields"> (optional)</param>
    /// <param name="providerPeriodconfigPeriodfacebookPeriodfields"> (optional)</param>
    /// <param name="providerPeriodconfigPeriodrefreshPerioduserdataPeriodenabled"> (optional)</param>
    virtual void com_adobe_cq_social_connect_oauth_impl_facebook_provider_impl(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &oauthPeriodproviderPeriodid, const Pistache::Optional<std::string> &oauthPeriodcloudPeriodconfigPeriodroot, const Pistache::Optional<std::string> &providerPeriodconfigPeriodroot, const Pistache::Optional<bool> &providerPeriodconfigPeriodcreatePeriodtagsPeriodenabled, const Pistache::Optional<std::string> &providerPeriodconfigPerioduserPeriodfolder, const Pistache::Optional<bool> &providerPeriodconfigPeriodfacebookPeriodfetchPeriodfields, const Pistache::Optional<std::string> &providerPeriodconfigPeriodfacebookPeriodfields, const Pistache::Optional<bool> &providerPeriodconfigPeriodrefreshPerioduserdataPeriodenabled, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="path"> (optional)</param>
    /// <param name="servicePeriodranking"> (optional)</param>
    virtual void com_adobe_cq_social_connect_oauth_impl_social_o_auth_authentication_handle(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &path, const Pistache::Optional<int32_t> &servicePeriodranking, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="facebook"> (optional)</param>
    /// <param name="twitter"> (optional)</param>
    /// <param name="providerPeriodconfigPerioduserPeriodfolder"> (optional)</param>
    virtual void com_adobe_cq_social_connect_oauth_impl_social_o_auth_user_profile_mapper(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &facebook, const Pistache::Optional<std::string> &twitter, const Pistache::Optional<std::string> &providerPeriodconfigPerioduserPeriodfolder, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="oauthPeriodproviderPeriodid"> (optional)</param>
    /// <param name="oauthPeriodcloudPeriodconfigPeriodroot"> (optional)</param>
    /// <param name="providerPeriodconfigPeriodroot"> (optional)</param>
    /// <param name="providerPeriodconfigPerioduserPeriodfolder"> (optional)</param>
    /// <param name="providerPeriodconfigPeriodtwitterPeriodenablePeriodparams"> (optional)</param>
    /// <param name="providerPeriodconfigPeriodtwitterPeriodparams"> (optional)</param>
    /// <param name="providerPeriodconfigPeriodrefreshPerioduserdataPeriodenabled"> (optional)</param>
    virtual void com_adobe_cq_social_connect_oauth_impl_twitter_provider_impl(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &oauthPeriodproviderPeriodid, const Pistache::Optional<std::string> &oauthPeriodcloudPeriodconfigPeriodroot, const Pistache::Optional<std::string> &providerPeriodconfigPeriodroot, const Pistache::Optional<std::string> &providerPeriodconfigPerioduserPeriodfolder, const Pistache::Optional<bool> &providerPeriodconfigPeriodtwitterPeriodenablePeriodparams, const Pistache::Optional<std::string> &providerPeriodconfigPeriodtwitterPeriodparams, const Pistache::Optional<bool> &providerPeriodconfigPeriodrefreshPerioduserdataPeriodenabled, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="cqPeriodsocialPeriodcontentPeriodfragmentsPeriodservicesPeriodenabled"> (optional)</param>
    /// <param name="cqPeriodsocialPeriodcontentPeriodfragmentsPeriodservicesPeriodwaitTimeSeconds"> (optional)</param>
    virtual void com_adobe_cq_social_content_fragments_services_impl_communities_fragmen(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<bool> &cqPeriodsocialPeriodcontentPeriodfragmentsPeriodservicesPeriodenabled, const Pistache::Optional<int32_t> &cqPeriodsocialPeriodcontentPeriodfragmentsPeriodservicesPeriodwaitTimeSeconds, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="versionPeriodid"> (optional)</param>
    /// <param name="cachePeriodon"> (optional)</param>
    /// <param name="concurrencyPeriodlevel"> (optional)</param>
    /// <param name="cachePeriodstartPeriodsize"> (optional)</param>
    /// <param name="cachePeriodttl"> (optional)</param>
    /// <param name="cachePeriodsize"> (optional)</param>
    /// <param name="timePeriodlimit"> (optional)</param>
    virtual void com_adobe_cq_social_datastore_as_impl_as_resource_provider_factory(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &versionPeriodid, const Pistache::Optional<bool> &cachePeriodon, const Pistache::Optional<int32_t> &concurrencyPeriodlevel, const Pistache::Optional<int32_t> &cachePeriodstartPeriodsize, const Pistache::Optional<int32_t> &cachePeriodttl, const Pistache::Optional<int32_t> &cachePeriodsize, const Pistache::Optional<int32_t> &timePeriodlimit, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="solrPeriodzkPeriodtimeout"> (optional)</param>
    /// <param name="solrPeriodcommit"> (optional)</param>
    /// <param name="cachePeriodon"> (optional)</param>
    /// <param name="concurrencyPeriodlevel"> (optional)</param>
    /// <param name="cachePeriodstartPeriodsize"> (optional)</param>
    /// <param name="cachePeriodttl"> (optional)</param>
    /// <param name="cachePeriodsize"> (optional)</param>
    virtual void com_adobe_cq_social_datastore_op_impl_social_ms_resource_provider_factory(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &solrPeriodzkPeriodtimeout, const Pistache::Optional<std::string> &solrPeriodcommit, const Pistache::Optional<bool> &cachePeriodon, const Pistache::Optional<int32_t> &concurrencyPeriodlevel, const Pistache::Optional<int32_t> &cachePeriodstartPeriodsize, const Pistache::Optional<int32_t> &cachePeriodttl, const Pistache::Optional<int32_t> &cachePeriodsize, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="solrPeriodzkPeriodtimeout"> (optional)</param>
    /// <param name="solrPeriodcommit"> (optional)</param>
    /// <param name="cachePeriodon"> (optional)</param>
    /// <param name="concurrencyPeriodlevel"> (optional)</param>
    /// <param name="cachePeriodstartPeriodsize"> (optional)</param>
    /// <param name="cachePeriodttl"> (optional)</param>
    /// <param name="cachePeriodsize"> (optional)</param>
    virtual void com_adobe_cq_social_datastore_rdb_impl_social_rdb_resource_provider_factor(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &solrPeriodzkPeriodtimeout, const Pistache::Optional<std::string> &solrPeriodcommit, const Pistache::Optional<bool> &cachePeriodon, const Pistache::Optional<int32_t> &concurrencyPeriodlevel, const Pistache::Optional<int32_t> &cachePeriodstartPeriodsize, const Pistache::Optional<int32_t> &cachePeriodttl, const Pistache::Optional<int32_t> &cachePeriodsize, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="isMemberCheck"> (optional)</param>
    virtual void com_adobe_cq_social_enablement_adaptors_enablement_learning_path_adaptor_f(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<bool> &isMemberCheck, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="isMemberCheck"> (optional)</param>
    virtual void com_adobe_cq_social_enablement_adaptors_enablement_resource_adaptor_facto(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<bool> &isMemberCheck, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="fieldWhitelist"> (optional)</param>
    virtual void com_adobe_cq_social_enablement_learningpath_endpoints_impl_enablement_l(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &fieldWhitelist, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="fieldWhitelist"> (optional)</param>
    virtual void com_adobe_cq_social_enablement_resource_endpoints_impl_enablement_resou(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &fieldWhitelist, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="servicePeriodranking"> (optional)</param>
    virtual void com_adobe_cq_social_enablement_services_impl_author_marker_impl(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<int32_t> &servicePeriodranking, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="slingPeriodservletPeriodselectors"> (optional)</param>
    /// <param name="slingPeriodservletPeriodextensions"> (optional)</param>
    virtual void com_adobe_cq_social_filelibrary_client_endpoints_filelibrary_download_ge(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &slingPeriodservletPeriodselectors, const Pistache::Optional<std::string> &slingPeriodservletPeriodextensions, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="fieldWhitelist"> (optional)</param>
    /// <param name="attachmentTypeBlacklist"> (optional)</param>
    virtual void com_adobe_cq_social_filelibrary_client_endpoints_impl_file_library_opera(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &fieldWhitelist, const Pistache::Optional<std::string> &attachmentTypeBlacklist, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="fieldWhitelist"> (optional)</param>
    /// <param name="attachmentTypeBlacklist"> (optional)</param>
    virtual void com_adobe_cq_social_forum_client_endpoints_impl_forum_operations_service(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &fieldWhitelist, const Pistache::Optional<std::string> &attachmentTypeBlacklist, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="extensionPeriodorder"> (optional)</param>
    /// <param name="flushPeriodforumontopic"> (optional)</param>
    virtual void com_adobe_cq_social_forum_dispatcher_impl_flush_operations(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<int32_t> &extensionPeriodorder, const Pistache::Optional<bool> &flushPeriodforumontopic, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="groupPeriodlistingPeriodpaginationPeriodenable"> (optional)</param>
    /// <param name="groupPeriodlistingPeriodlazyloadingPeriodenable"> (optional)</param>
    /// <param name="pagePeriodsize"> (optional)</param>
    /// <param name="priority"> (optional)</param>
    virtual void com_adobe_cq_social_group_client_impl_community_group_collection_componen(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<bool> &groupPeriodlistingPeriodpaginationPeriodenable, const Pistache::Optional<bool> &groupPeriodlistingPeriodlazyloadingPeriodenable, const Pistache::Optional<int32_t> &pagePeriodsize, const Pistache::Optional<int32_t> &priority, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="maxWaitTime"> (optional)</param>
    /// <param name="minWaitBetweenRetries"> (optional)</param>
    virtual void com_adobe_cq_social_group_impl_group_service_impl(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<int32_t> &maxWaitTime, const Pistache::Optional<int32_t> &minWaitBetweenRetries, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="parameterPeriodguavaPeriodcachePeriodenabled"> (optional)</param>
    /// <param name="parameterPeriodguavaPeriodcachePeriodparams"> (optional)</param>
    /// <param name="parameterPeriodguavaPeriodcachePeriodreload"> (optional)</param>
    /// <param name="servicePeriodranking"> (optional)</param>
    virtual void com_adobe_cq_social_handlebars_guava_template_cache_impl(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<bool> &parameterPeriodguavaPeriodcachePeriodenabled, const Pistache::Optional<std::string> &parameterPeriodguavaPeriodcachePeriodparams, const Pistache::Optional<bool> &parameterPeriodguavaPeriodcachePeriodreload, const Pistache::Optional<int32_t> &servicePeriodranking, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="fieldWhitelist"> (optional)</param>
    /// <param name="attachmentTypeBlacklist"> (optional)</param>
    virtual void com_adobe_cq_social_ideation_client_endpoints_impl_ideation_operations_s(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &fieldWhitelist, const Pistache::Optional<std::string> &attachmentTypeBlacklist, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="fieldWhitelist"> (optional)</param>
    /// <param name="attachmentTypeBlacklist"> (optional)</param>
    virtual void com_adobe_cq_social_journal_client_endpoints_impl_journal_operations_ser(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &fieldWhitelist, const Pistache::Optional<std::string> &attachmentTypeBlacklist, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="fieldWhitelist"> (optional)</param>
    virtual void com_adobe_cq_social_members_endpoints_impl_community_member_group_profile(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &fieldWhitelist, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="fieldWhitelist"> (optional)</param>
    virtual void com_adobe_cq_social_members_endpoints_impl_community_member_user_profile_o(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &fieldWhitelist, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="everyoneLimit"> (optional)</param>
    /// <param name="priority"> (optional)</param>
    virtual void com_adobe_cq_social_members_impl_community_member_group_profile_component_f(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<int32_t> &everyoneLimit, const Pistache::Optional<int32_t> &priority, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="messagePeriodproperties"> (optional)</param>
    /// <param name="messageBoxSizeLimit"> (optional)</param>
    /// <param name="messageCountLimit"> (optional)</param>
    /// <param name="notifyFailure"> (optional)</param>
    /// <param name="failureMessageFrom"> (optional)</param>
    /// <param name="failureTemplatePath"> (optional)</param>
    /// <param name="maxRetries"> (optional)</param>
    /// <param name="minWaitBetweenRetries"> (optional)</param>
    /// <param name="countUpdatePoolSize"> (optional)</param>
    /// <param name="inboxPeriodpath"> (optional)</param>
    /// <param name="sentitemsPeriodpath"> (optional)</param>
    /// <param name="supportAttachments"> (optional)</param>
    /// <param name="supportGroupMessaging"> (optional)</param>
    /// <param name="maxTotalRecipients"> (optional)</param>
    /// <param name="batchSize"> (optional)</param>
    /// <param name="maxTotalAttachmentSize"> (optional)</param>
    /// <param name="attachmentTypeBlacklist"> (optional)</param>
    /// <param name="allowedAttachmentTypes"> (optional)</param>
    /// <param name="serviceSelector"> (optional)</param>
    /// <param name="fieldWhitelist"> (optional)</param>
    virtual void com_adobe_cq_social_messaging_client_endpoints_impl_messaging_operation(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &messagePeriodproperties, const Pistache::Optional<int32_t> &messageBoxSizeLimit, const Pistache::Optional<int32_t> &messageCountLimit, const Pistache::Optional<bool> &notifyFailure, const Pistache::Optional<std::string> &failureMessageFrom, const Pistache::Optional<std::string> &failureTemplatePath, const Pistache::Optional<int32_t> &maxRetries, const Pistache::Optional<int32_t> &minWaitBetweenRetries, const Pistache::Optional<int32_t> &countUpdatePoolSize, const Pistache::Optional<std::string> &inboxPeriodpath, const Pistache::Optional<std::string> &sentitemsPeriodpath, const Pistache::Optional<bool> &supportAttachments, const Pistache::Optional<bool> &supportGroupMessaging, const Pistache::Optional<int32_t> &maxTotalRecipients, const Pistache::Optional<int32_t> &batchSize, const Pistache::Optional<int32_t> &maxTotalAttachmentSize, const Pistache::Optional<std::string> &attachmentTypeBlacklist, const Pistache::Optional<std::string> &allowedAttachmentTypes, const Pistache::Optional<std::string> &serviceSelector, const Pistache::Optional<std::string> &fieldWhitelist, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="resourceTypePeriodfilters"> (optional)</param>
    /// <param name="priority"> (optional)</param>
    virtual void com_adobe_cq_social_moderation_dashboard_api_filter_group_social_componen(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &resourceTypePeriodfilters, const Pistache::Optional<int32_t> &priority, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="priority"> (optional)</param>
    virtual void com_adobe_cq_social_moderation_dashboard_api_moderation_dashboard_social(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<int32_t> &priority, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="priority"> (optional)</param>
    virtual void com_adobe_cq_social_moderation_dashboard_api_user_details_social_componen(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<int32_t> &priority, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="resourceTypePeriodfilters"> (optional)</param>
    /// <param name="priority"> (optional)</param>
    virtual void com_adobe_cq_social_moderation_dashboard_internal_impl_filter_group_soci(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &resourceTypePeriodfilters, const Pistache::Optional<int32_t> &priority, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="eventPeriodtopics"> (optional)</param>
    /// <param name="eventPeriodfilter"> (optional)</param>
    virtual void com_adobe_cq_social_notifications_impl_mentions_router(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &eventPeriodtopics, const Pistache::Optional<std::string> &eventPeriodfilter, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="maxPeriodunreadPeriodnotificationPeriodcount"> (optional)</param>
    virtual void com_adobe_cq_social_notifications_impl_notification_manager_impl(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<int32_t> &maxPeriodunreadPeriodnotificationPeriodcount, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="eventPeriodtopics"> (optional)</param>
    /// <param name="eventPeriodfilter"> (optional)</param>
    virtual void com_adobe_cq_social_notifications_impl_notifications_router(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &eventPeriodtopics, const Pistache::Optional<std::string> &eventPeriodfilter, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="fieldWhitelist"> (optional)</param>
    /// <param name="attachmentTypeBlacklist"> (optional)</param>
    virtual void com_adobe_cq_social_qna_client_endpoints_impl_qna_forum_operations_servic(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &fieldWhitelist, const Pistache::Optional<std::string> &attachmentTypeBlacklist, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="cqPeriodsocialPeriodreportingPeriodanalyticsPeriodpollingPeriodimporterPeriodinterval"> (optional)</param>
    /// <param name="cqPeriodsocialPeriodreportingPeriodanalyticsPeriodpollingPeriodimporterPeriodpageSize"> (optional)</param>
    virtual void com_adobe_cq_social_reporting_analytics_services_impl_analytics_report_i(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<int32_t> &cqPeriodsocialPeriodreportingPeriodanalyticsPeriodpollingPeriodimporterPeriodinterval, const Pistache::Optional<int32_t> &cqPeriodsocialPeriodreportingPeriodanalyticsPeriodpollingPeriodimporterPeriodpageSize, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="reportPeriodfetchPerioddelay"> (optional)</param>
    virtual void com_adobe_cq_social_reporting_analytics_services_impl_analytics_report_m(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<int32_t> &reportPeriodfetchPerioddelay, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="cqPeriodsocialPeriodconsolePeriodanalyticsPeriodsitesPeriodmapping"> (optional)</param>
    /// <param name="priority"> (optional)</param>
    virtual void com_adobe_cq_social_reporting_analytics_services_impl_site_trend_report_s(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &cqPeriodsocialPeriodconsolePeriodanalyticsPeriodsitesPeriodmapping, const Pistache::Optional<int32_t> &priority, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="fieldWhitelist"> (optional)</param>
    /// <param name="attachmentTypeBlacklist"> (optional)</param>
    virtual void com_adobe_cq_social_review_client_endpoints_impl_review_operations_servi(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &fieldWhitelist, const Pistache::Optional<std::string> &attachmentTypeBlacklist, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="slingPeriodservletPeriodselectors"> (optional)</param>
    /// <param name="slingPeriodservletPeriodextensions"> (optional)</param>
    virtual void com_adobe_cq_social_scf_core_operations_impl_social_operations_servlet(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &slingPeriodservletPeriodselectors, const Pistache::Optional<std::string> &slingPeriodservletPeriodextensions, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="slingPeriodservletPeriodselectors"> (optional)</param>
    /// <param name="slingPeriodservletPeriodextensions"> (optional)</param>
    virtual void com_adobe_cq_social_scf_endpoints_impl_default_social_get_servlet(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &slingPeriodservletPeriodselectors, const Pistache::Optional<std::string> &slingPeriodservletPeriodextensions, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="eventPeriodtopics"> (optional)</param>
    /// <param name="eventPeriodfilter"> (optional)</param>
    virtual void com_adobe_cq_social_scoring_impl_scoring_event_listener(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &eventPeriodtopics, const Pistache::Optional<std::string> &eventPeriodfilter, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="enableFallback"> (optional)</param>
    virtual void com_adobe_cq_social_serviceusers_internal_impl_service_user_wrapper_impl(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<bool> &enableFallback, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="fieldWhitelist"> (optional)</param>
    /// <param name="sitePathFilters"> (optional)</param>
    /// <param name="sitePackageGroup"> (optional)</param>
    virtual void com_adobe_cq_social_site_endpoints_impl_site_operation_service(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &fieldWhitelist, const Pistache::Optional<std::string> &sitePathFilters, const Pistache::Optional<std::string> &sitePackageGroup, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="cqPeriodsocialPeriodconsolePeriodanalyticsPeriodcomponents"> (optional)</param>
    virtual void com_adobe_cq_social_site_impl_analytics_component_configuration_service_im(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &cqPeriodsocialPeriodconsolePeriodanalyticsPeriodcomponents, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="componentsUsingTags"> (optional)</param>
    virtual void com_adobe_cq_social_site_impl_site_configurator_impl(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &componentsUsingTags, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="srpPeriodtype"> (optional)</param>
    virtual void com_adobe_cq_social_srp_impl_social_solr_connector(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &srpPeriodtype, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="enabled"> (optional)</param>
    /// <param name="agentName"> (optional)</param>
    /// <param name="diffPath"> (optional)</param>
    /// <param name="propertyNames"> (optional)</param>
    virtual void com_adobe_cq_social_sync_impl_diff_changes_observer(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<bool> &enabled, const Pistache::Optional<std::string> &agentName, const Pistache::Optional<std::string> &diffPath, const Pistache::Optional<std::string> &propertyNames, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="nodetypes"> (optional)</param>
    /// <param name="ignorableprops"> (optional)</param>
    /// <param name="ignorablenodes"> (optional)</param>
    /// <param name="enabled"> (optional)</param>
    /// <param name="distfolders"> (optional)</param>
    virtual void com_adobe_cq_social_sync_impl_group_sync_listener_impl(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &nodetypes, const Pistache::Optional<std::string> &ignorableprops, const Pistache::Optional<std::string> &ignorablenodes, const Pistache::Optional<bool> &enabled, const Pistache::Optional<std::string> &distfolders, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="activeRunModes"> (optional)</param>
    virtual void com_adobe_cq_social_sync_impl_publisher_sync_service_impl(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &activeRunModes, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="nodetypes"> (optional)</param>
    /// <param name="ignorableprops"> (optional)</param>
    /// <param name="ignorablenodes"> (optional)</param>
    /// <param name="enabled"> (optional)</param>
    /// <param name="distfolders"> (optional)</param>
    virtual void com_adobe_cq_social_sync_impl_user_sync_listener_impl(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &nodetypes, const Pistache::Optional<std::string> &ignorableprops, const Pistache::Optional<std::string> &ignorablenodes, const Pistache::Optional<bool> &enabled, const Pistache::Optional<std::string> &distfolders, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="translatePeriodlanguage"> (optional)</param>
    /// <param name="translatePerioddisplay"> (optional)</param>
    /// <param name="translatePeriodattribution"> (optional)</param>
    /// <param name="translatePeriodcaching"> (optional)</param>
    /// <param name="translatePeriodsmartPeriodrendering"> (optional)</param>
    /// <param name="translatePeriodcachingPeriodduration"> (optional)</param>
    /// <param name="translatePeriodsessionPeriodsavePeriodinterval"> (optional)</param>
    /// <param name="translatePeriodsessionPeriodsavePeriodbatchLimit"> (optional)</param>
    virtual void com_adobe_cq_social_translation_impl_translation_service_config_manager(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &translatePeriodlanguage, const Pistache::Optional<std::string> &translatePerioddisplay, const Pistache::Optional<bool> &translatePeriodattribution, const Pistache::Optional<std::string> &translatePeriodcaching, const Pistache::Optional<std::string> &translatePeriodsmartPeriodrendering, const Pistache::Optional<std::string> &translatePeriodcachingPeriodduration, const Pistache::Optional<std::string> &translatePeriodsessionPeriodsavePeriodinterval, const Pistache::Optional<std::string> &translatePeriodsessionPeriodsavePeriodbatchLimit, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="eventPeriodtopics"> (optional)</param>
    /// <param name="eventPeriodfilter"> (optional)</param>
    /// <param name="translatePeriodlistenerPeriodtype"> (optional)</param>
    /// <param name="translatePeriodpropertyPeriodlist"> (optional)</param>
    /// <param name="poolSize"> (optional)</param>
    /// <param name="maxPoolSize"> (optional)</param>
    /// <param name="queueSize"> (optional)</param>
    /// <param name="keepAliveTime"> (optional)</param>
    virtual void com_adobe_cq_social_translation_impl_ugc_language_detector(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &eventPeriodtopics, const Pistache::Optional<std::string> &eventPeriodfilter, const Pistache::Optional<std::string> &translatePeriodlistenerPeriodtype, const Pistache::Optional<std::string> &translatePeriodpropertyPeriodlist, const Pistache::Optional<int32_t> &poolSize, const Pistache::Optional<int32_t> &maxPoolSize, const Pistache::Optional<int32_t> &queueSize, const Pistache::Optional<int32_t> &keepAliveTime, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="threadPoolSize"> (optional)</param>
    /// <param name="delayTime"> (optional)</param>
    /// <param name="workerSleepTime"> (optional)</param>
    virtual void com_adobe_cq_social_ugcbase_dispatcher_impl_flush_service_impl(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<int32_t> &threadPoolSize, const Pistache::Optional<int32_t> &delayTime, const Pistache::Optional<int32_t> &workerSleepTime, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="poolSize"> (optional)</param>
    /// <param name="maxPoolSize"> (optional)</param>
    /// <param name="queueSize"> (optional)</param>
    /// <param name="keepAliveTime"> (optional)</param>
    virtual void com_adobe_cq_social_ugcbase_impl_aysnc_reverse_replicator_impl(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<int32_t> &poolSize, const Pistache::Optional<int32_t> &maxPoolSize, const Pistache::Optional<int32_t> &queueSize, const Pistache::Optional<int32_t> &keepAliveTime, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="isPrimaryPublisher"> (optional)</param>
    virtual void com_adobe_cq_social_ugcbase_impl_publisher_configuration_impl(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<bool> &isPrimaryPublisher, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="legacyCloudUGCPathMapping"> (optional)</param>
    virtual void com_adobe_cq_social_ugcbase_impl_social_utils_impl(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<bool> &legacyCloudUGCPathMapping, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="automoderationPeriodsequence"> (optional)</param>
    /// <param name="automoderationPeriodonfailurestop"> (optional)</param>
    virtual void com_adobe_cq_social_ugcbase_moderation_impl_auto_moderation_impl(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &automoderationPeriodsequence, const Pistache::Optional<bool> &automoderationPeriodonfailurestop, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="watchwordsPeriodpositive"> (optional)</param>
    /// <param name="watchwordsPeriodnegative"> (optional)</param>
    /// <param name="watchwordsPeriodpath"> (optional)</param>
    /// <param name="sentimentPeriodpath"> (optional)</param>
    virtual void com_adobe_cq_social_ugcbase_moderation_impl_sentiment_process(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &watchwordsPeriodpositive, const Pistache::Optional<std::string> &watchwordsPeriodnegative, const Pistache::Optional<std::string> &watchwordsPeriodpath, const Pistache::Optional<std::string> &sentimentPeriodpath, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="defaultPeriodattachmentPeriodtypePeriodblacklist"> (optional)</param>
    /// <param name="baselinePeriodattachmentPeriodtypePeriodblacklist"> (optional)</param>
    virtual void com_adobe_cq_social_ugcbase_security_impl_default_attachment_type_blackli(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &defaultPeriodattachmentPeriodtypePeriodblacklist, const Pistache::Optional<std::string> &baselinePeriodattachmentPeriodtypePeriodblacklist, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="parameterPeriodwhitelist"> (optional)</param>
    /// <param name="parameterPeriodwhitelistPeriodprefixes"> (optional)</param>
    /// <param name="binaryPeriodparameterPeriodwhitelist"> (optional)</param>
    /// <param name="modifierPeriodwhitelist"> (optional)</param>
    /// <param name="operationPeriodwhitelist"> (optional)</param>
    /// <param name="operationPeriodwhitelistPeriodprefixes"> (optional)</param>
    /// <param name="typehintPeriodwhitelist"> (optional)</param>
    /// <param name="resourcetypePeriodwhitelist"> (optional)</param>
    virtual void com_adobe_cq_social_ugcbase_security_impl_safer_sling_post_validator_impl(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &parameterPeriodwhitelist, const Pistache::Optional<std::string> &parameterPeriodwhitelistPeriodprefixes, const Pistache::Optional<std::string> &binaryPeriodparameterPeriodwhitelist, const Pistache::Optional<std::string> &modifierPeriodwhitelist, const Pistache::Optional<std::string> &operationPeriodwhitelist, const Pistache::Optional<std::string> &operationPeriodwhitelistPeriodprefixes, const Pistache::Optional<std::string> &typehintPeriodwhitelist, const Pistache::Optional<std::string> &resourcetypePeriodwhitelist, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="slingPeriodservletPeriodextensions"> (optional)</param>
    /// <param name="slingPeriodservletPeriodpaths"> (optional)</param>
    /// <param name="slingPeriodservletPeriodmethods"> (optional)</param>
    virtual void com_adobe_cq_social_user_endpoints_impl_users_group_from_publish_servlet(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &slingPeriodservletPeriodextensions, const Pistache::Optional<std::string> &slingPeriodservletPeriodpaths, const Pistache::Optional<std::string> &slingPeriodservletPeriodmethods, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="enable"> (optional)</param>
    /// <param name="agentPeriodconfiguration"> (optional)</param>
    /// <param name="contextPeriodpath"> (optional)</param>
    /// <param name="disabledPeriodcipherPeriodsuites"> (optional)</param>
    /// <param name="enabledPeriodcipherPeriodsuites"> (optional)</param>
    virtual void com_adobe_cq_social_user_impl_transport_http_to_publisher(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<bool> &enable, const Pistache::Optional<std::string> &agentPeriodconfiguration, const Pistache::Optional<std::string> &contextPeriodpath, const Pistache::Optional<std::string> &disabledPeriodcipherPeriodsuites, const Pistache::Optional<std::string> &enabledPeriodcipherPeriodsuites, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="resourcePeriodtypes"> (optional)</param>
    virtual void com_adobe_cq_ui_wcm_commons_internal_servlets_rte_rte_filter_servlet_fact(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &resourcePeriodtypes, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="deletePeriodpathPeriodregexps"> (optional)</param>
    /// <param name="deletePeriodsql2Periodquery"> (optional)</param>
    virtual void com_adobe_cq_upgrades_cleanup_impl_upgrade_content_cleanup(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &deletePeriodpathPeriodregexps, const Pistache::Optional<std::string> &deletePeriodsql2Periodquery, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="deletePeriodnamePeriodregexps"> (optional)</param>
    virtual void com_adobe_cq_upgrades_cleanup_impl_upgrade_install_folder_cleanup(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &deletePeriodnamePeriodregexps, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="threshold"> (optional)</param>
    /// <param name="jobTopicName"> (optional)</param>
    /// <param name="emailEnabled"> (optional)</param>
    virtual void com_adobe_cq_wcm_jobs_async_impl_async_delete_config_provider_service(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<int32_t> &threshold, const Pistache::Optional<std::string> &jobTopicName, const Pistache::Optional<bool> &emailEnabled, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="schedulerPeriodexpression"> (optional)</param>
    /// <param name="jobPeriodpurgePeriodthreshold"> (optional)</param>
    /// <param name="jobPeriodpurgePeriodmaxPeriodjobs"> (optional)</param>
    virtual void com_adobe_cq_wcm_jobs_async_impl_async_job_clean_up_task(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &schedulerPeriodexpression, const Pistache::Optional<int32_t> &jobPeriodpurgePeriodthreshold, const Pistache::Optional<int32_t> &jobPeriodpurgePeriodmaxPeriodjobs, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="threshold"> (optional)</param>
    /// <param name="jobTopicName"> (optional)</param>
    /// <param name="emailEnabled"> (optional)</param>
    virtual void com_adobe_cq_wcm_jobs_async_impl_async_move_config_provider_service(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<int32_t> &threshold, const Pistache::Optional<std::string> &jobTopicName, const Pistache::Optional<bool> &emailEnabled, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="threshold"> (optional)</param>
    /// <param name="jobTopicName"> (optional)</param>
    /// <param name="emailEnabled"> (optional)</param>
    virtual void com_adobe_cq_wcm_jobs_async_impl_async_page_move_config_provider_service(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<int32_t> &threshold, const Pistache::Optional<std::string> &jobTopicName, const Pistache::Optional<bool> &emailEnabled, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="eventPeriodfilter"> (optional)</param>
    /// <param name="launchesPeriodeventhandlerPeriodthreadpoolPeriodmaxsize"> (optional)</param>
    /// <param name="launchesPeriodeventhandlerPeriodthreadpoolPeriodpriority"> (optional)</param>
    /// <param name="launchesPeriodeventhandlerPeriodupdatelastmodification"> (optional)</param>
    virtual void com_adobe_cq_wcm_launches_impl_launches_event_handler(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &eventPeriodfilter, const Pistache::Optional<int32_t> &launchesPeriodeventhandlerPeriodthreadpoolPeriodmaxsize, const Pistache::Optional<std::string> &launchesPeriodeventhandlerPeriodthreadpoolPeriodpriority, const Pistache::Optional<bool> &launchesPeriodeventhandlerPeriodupdatelastmodification, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="cqPeriodwcmPeriodqrcodePeriodservletPeriodwhitelist"> (optional)</param>
    virtual void com_adobe_cq_wcm_mobile_qrcode_servlet_qr_code_image_generator(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &cqPeriodwcmPeriodqrcodePeriodservletPeriodwhitelist, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="size"> (optional)</param>
    virtual void com_adobe_cq_wcm_style_internal_component_style_info_cache_impl(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<int32_t> &size, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="syncTranslationStatePeriodschedulingFormat"> (optional)</param>
    /// <param name="schedulingRepeatTranslationPeriodschedulingFormat"> (optional)</param>
    /// <param name="syncTranslationStatePeriodlockTimeoutInMinutes"> (optional)</param>
    /// <param name="exportPeriodformat"> (optional)</param>
    virtual void com_adobe_cq_wcm_translation_impl_translation_platform_configuration_impl(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &syncTranslationStatePeriodschedulingFormat, const Pistache::Optional<std::string> &schedulingRepeatTranslationPeriodschedulingFormat, const Pistache::Optional<std::string> &syncTranslationStatePeriodlockTimeoutInMinutes, const Pistache::Optional<std::string> &exportPeriodformat, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="portalPeriodoutboxes"> (optional)</param>
    /// <param name="draftPerioddataPeriodservice"> (optional)</param>
    /// <param name="draftPeriodmetadataPeriodservice"> (optional)</param>
    /// <param name="submitPerioddataPeriodservice"> (optional)</param>
    /// <param name="submitPeriodmetadataPeriodservice"> (optional)</param>
    /// <param name="pendingSignPerioddataPeriodservice"> (optional)</param>
    /// <param name="pendingSignPeriodmetadataPeriodservice"> (optional)</param>
    virtual void com_adobe_fd_fp_config_forms_portal_draftsand_submission_config_service(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &portalPeriodoutboxes, const Pistache::Optional<std::string> &draftPerioddataPeriodservice, const Pistache::Optional<std::string> &draftPeriodmetadataPeriodservice, const Pistache::Optional<std::string> &submitPerioddataPeriodservice, const Pistache::Optional<std::string> &submitPeriodmetadataPeriodservice, const Pistache::Optional<std::string> &pendingSignPerioddataPeriodservice, const Pistache::Optional<std::string> &pendingSignPeriodmetadataPeriodservice, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="formportalPeriodinterval"> (optional)</param>
    virtual void com_adobe_fd_fp_config_forms_portal_scheduler_service(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &formportalPeriodinterval, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="alloweddataFileLocations"> (optional)</param>
    virtual void com_adobe_forms_common_service_impl_default_data_provider(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &alloweddataFileLocations, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="tempStorageConfig"> (optional)</param>
    virtual void com_adobe_forms_common_service_impl_forms_common_configuration_service_imp(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &tempStorageConfig, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="schedulerPeriodexpression"> (optional)</param>
    /// <param name="duration_for_Temporary_Storage"> (optional)</param>
    /// <param name="duration_for_Anonymous_Storage"> (optional)</param>
    virtual void com_adobe_forms_common_servlet_temp_clean_up_task(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &schedulerPeriodexpression, const Pistache::Optional<std::string> &duration_for_Temporary_Storage, const Pistache::Optional<std::string> &duration_for_Anonymous_Storage, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="queryPeriodlimit"> (optional)</param>
    /// <param name="filePeriodtypePeriodextensionPeriodmap"> (optional)</param>
    virtual void com_adobe_granite_acp_platform_platform_servlet(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<int32_t> &queryPeriodlimit, const Pistache::Optional<std::string> &filePeriodtypePeriodextensionPeriodmap, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="aggregatePeriodrelationships"> (optional)</param>
    /// <param name="aggregatePerioddescendPeriodvirtual"> (optional)</param>
    virtual void com_adobe_granite_activitystreams_impl_activity_manager_impl(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &aggregatePeriodrelationships, const Pistache::Optional<bool> &aggregatePerioddescendPeriodvirtual, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="disabled"> (optional)</param>
    virtual void com_adobe_granite_analyzer_base_system_status_servlet(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<bool> &disabled, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="disabled"> (optional)</param>
    virtual void com_adobe_granite_analyzer_scripts_compile_all_scripts_compiler_servlet(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<bool> &disabled, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="comPeriodadobePeriodcqPeriodcdnPeriodcdnRewriter"> (optional)</param>
    /// <param name="comPeriodadobePeriodcqPeriodcloudConfigPeriodcomponents"> (optional)</param>
    /// <param name="comPeriodadobePeriodcqPeriodcloudConfigPeriodcore"> (optional)</param>
    /// <param name="comPeriodadobePeriodcqPeriodcloudConfigPeriodui"> (optional)</param>
    /// <param name="comPeriodadobePeriodcqPeriodcomPeriodadobePeriodcqPeriodeditor"> (optional)</param>
    /// <param name="comPeriodadobePeriodcqPeriodcomPeriodadobePeriodcqPeriodprojectsPeriodcore"> (optional)</param>
    /// <param name="comPeriodadobePeriodcqPeriodcomPeriodadobePeriodcqPeriodprojectsPeriodwcmPeriodcore"> (optional)</param>
    /// <param name="comPeriodadobePeriodcqPeriodcomPeriodadobePeriodcqPerioduiPeriodcommons"> (optional)</param>
    /// <param name="comPeriodadobePeriodcqPeriodcomPeriodadobePeriodcqPeriodwcmPeriodstyle"> (optional)</param>
    /// <param name="comPeriodadobePeriodcqPeriodcqActivitymapIntegration"> (optional)</param>
    /// <param name="comPeriodadobePeriodcqPeriodcqContexthubCommons"> (optional)</param>
    /// <param name="comPeriodadobePeriodcqPeriodcqDtm"> (optional)</param>
    /// <param name="comPeriodadobePeriodcqPeriodcqHealthcheck"> (optional)</param>
    /// <param name="comPeriodadobePeriodcqPeriodcqMultisiteTargeting"> (optional)</param>
    /// <param name="comPeriodadobePeriodcqPeriodcqPreUpgradeCleanup"> (optional)</param>
    /// <param name="comPeriodadobePeriodcqPeriodcqProductInfoProvider"> (optional)</param>
    /// <param name="comPeriodadobePeriodcqPeriodcqRestSites"> (optional)</param>
    /// <param name="comPeriodadobePeriodcqPeriodcqSecurityHc"> (optional)</param>
    /// <param name="comPeriodadobePeriodcqPerioddamPeriodcqDamSvgHandler"> (optional)</param>
    /// <param name="comPeriodadobePeriodcqPerioddamPeriodcqScene7Imaging"> (optional)</param>
    /// <param name="comPeriodadobePeriodcqPerioddtmReactorPeriodcore"> (optional)</param>
    /// <param name="comPeriodadobePeriodcqPerioddtmReactorPeriodui"> (optional)</param>
    /// <param name="comPeriodadobePeriodcqPeriodexpJspelResolver"> (optional)</param>
    /// <param name="comPeriodadobePeriodcqPeriodinboxPeriodcqInbox"> (optional)</param>
    /// <param name="comPeriodadobePeriodcqPeriodjsonSchemaParser"> (optional)</param>
    /// <param name="comPeriodadobePeriodcqPeriodmediaPeriodcqMediaPublishingDpsFpCore"> (optional)</param>
    /// <param name="comPeriodadobePeriodcqPeriodmobilePeriodcqMobileCaas"> (optional)</param>
    /// <param name="comPeriodadobePeriodcqPeriodmobilePeriodcqMobileIndexBuilder"> (optional)</param>
    /// <param name="comPeriodadobePeriodcqPeriodmobilePeriodcqMobilePhonegapBuild"> (optional)</param>
    /// <param name="comPeriodadobePeriodcqPeriodmyspell"> (optional)</param>
    /// <param name="comPeriodadobePeriodcqPeriodsamplePeriodwePeriodretailPeriodcore"> (optional)</param>
    /// <param name="comPeriodadobePeriodcqPeriodscreensPeriodcomPeriodadobePeriodcqPeriodscreensPerioddcc"> (optional)</param>
    /// <param name="comPeriodadobePeriodcqPeriodscreensPeriodcomPeriodadobePeriodcqPeriodscreensPeriodmqPeriodcore"> (optional)</param>
    /// <param name="comPeriodadobePeriodcqPeriodsocialPeriodcqSocialAsProvider"> (optional)</param>
    /// <param name="comPeriodadobePeriodcqPeriodsocialPeriodcqSocialBadgingBasicImpl"> (optional)</param>
    /// <param name="comPeriodadobePeriodcqPeriodsocialPeriodcqSocialBadgingImpl"> (optional)</param>
    /// <param name="comPeriodadobePeriodcqPeriodsocialPeriodcqSocialCalendarImpl"> (optional)</param>
    /// <param name="comPeriodadobePeriodcqPeriodsocialPeriodcqSocialContentFragmentsImpl"> (optional)</param>
    /// <param name="comPeriodadobePeriodcqPeriodsocialPeriodcqSocialEnablementImpl"> (optional)</param>
    /// <param name="comPeriodadobePeriodcqPeriodsocialPeriodcqSocialGraphImpl"> (optional)</param>
    /// <param name="comPeriodadobePeriodcqPeriodsocialPeriodcqSocialIdeationImpl"> (optional)</param>
    /// <param name="comPeriodadobePeriodcqPeriodsocialPeriodcqSocialJcrProvider"> (optional)</param>
    /// <param name="comPeriodadobePeriodcqPeriodsocialPeriodcqSocialMembersImpl"> (optional)</param>
    /// <param name="comPeriodadobePeriodcqPeriodsocialPeriodcqSocialMsProvider"> (optional)</param>
    /// <param name="comPeriodadobePeriodcqPeriodsocialPeriodcqSocialNotificationsChannelsWeb"> (optional)</param>
    /// <param name="comPeriodadobePeriodcqPeriodsocialPeriodcqSocialNotificationsImpl"> (optional)</param>
    /// <param name="comPeriodadobePeriodcqPeriodsocialPeriodcqSocialRdbProvider"> (optional)</param>
    /// <param name="comPeriodadobePeriodcqPeriodsocialPeriodcqSocialScfImpl"> (optional)</param>
    /// <param name="comPeriodadobePeriodcqPeriodsocialPeriodcqSocialScoringBasicImpl"> (optional)</param>
    /// <param name="comPeriodadobePeriodcqPeriodsocialPeriodcqSocialScoringImpl"> (optional)</param>
    /// <param name="comPeriodadobePeriodcqPeriodsocialPeriodcqSocialServiceusersImpl"> (optional)</param>
    /// <param name="comPeriodadobePeriodcqPeriodsocialPeriodcqSocialSrpImpl"> (optional)</param>
    /// <param name="comPeriodadobePeriodcqPeriodsocialPeriodcqSocialUgcbaseImpl"> (optional)</param>
    /// <param name="comPeriodadobePerioddamPeriodcqDamCfmImpl"> (optional)</param>
    /// <param name="comPeriodadobePeriodformsPeriodfoundationFormsFoundationBase"> (optional)</param>
    /// <param name="comPeriodadobePeriodgranitePeriodapicontroller"> (optional)</param>
    /// <param name="comPeriodadobePeriodgranitePeriodassetPeriodcore"> (optional)</param>
    /// <param name="comPeriodadobePeriodgranitePeriodauthPeriodsso"> (optional)</param>
    /// <param name="comPeriodadobePeriodgranitePeriodbundlesPeriodhcPeriodimpl"> (optional)</param>
    /// <param name="comPeriodadobePeriodgranitePeriodcompatRouter"> (optional)</param>
    /// <param name="comPeriodadobePeriodgranitePeriodconf"> (optional)</param>
    /// <param name="comPeriodadobePeriodgranitePeriodconfPerioduiPeriodcore"> (optional)</param>
    /// <param name="comPeriodadobePeriodgranitePeriodcors"> (optional)</param>
    /// <param name="comPeriodadobePeriodgranitePeriodcrxExplorer"> (optional)</param>
    /// <param name="comPeriodadobePeriodgranitePeriodcrxdeLite"> (optional)</param>
    /// <param name="comPeriodadobePeriodgranitePeriodcryptoPeriodconfig"> (optional)</param>
    /// <param name="comPeriodadobePeriodgranitePeriodcryptoPeriodextension"> (optional)</param>
    /// <param name="comPeriodadobePeriodgranitePeriodcryptoPeriodfile"> (optional)</param>
    /// <param name="comPeriodadobePeriodgranitePeriodcryptoPeriodjcr"> (optional)</param>
    /// <param name="comPeriodadobePeriodgranitePeriodcsrf"> (optional)</param>
    /// <param name="comPeriodadobePeriodgranitePerioddistributionPeriodcore"> (optional)</param>
    /// <param name="comPeriodadobePeriodgranitePerioddropwizardPeriodmetrics"> (optional)</param>
    /// <param name="comPeriodadobePeriodgranitePeriodfragsPeriodimpl"> (optional)</param>
    /// <param name="comPeriodadobePeriodgranitePeriodgibson"> (optional)</param>
    /// <param name="comPeriodadobePeriodgranitePeriodinfocollector"> (optional)</param>
    /// <param name="comPeriodadobePeriodgranitePeriodinstallerPeriodfactoryPeriodpackages"> (optional)</param>
    /// <param name="comPeriodadobePeriodgranitePeriodjettyPeriodssl"> (optional)</param>
    /// <param name="comPeriodadobePeriodgranitePeriodjobsPeriodasync"> (optional)</param>
    /// <param name="comPeriodadobePeriodgranitePeriodmaintenancePeriodoak"> (optional)</param>
    /// <param name="comPeriodadobePeriodgranitePeriodmonitoringPeriodcore"> (optional)</param>
    /// <param name="comPeriodadobePeriodgranitePeriodqueries"> (optional)</param>
    /// <param name="comPeriodadobePeriodgranitePeriodreplicationPeriodhcPeriodimpl"> (optional)</param>
    /// <param name="comPeriodadobePeriodgranitePeriodrepositoryPeriodchecker"> (optional)</param>
    /// <param name="comPeriodadobePeriodgranitePeriodrepositoryPeriodhcPeriodimpl"> (optional)</param>
    /// <param name="comPeriodadobePeriodgranitePeriodrestPeriodassets"> (optional)</param>
    /// <param name="comPeriodadobePeriodgranitePeriodsecurityPeriodui"> (optional)</param>
    /// <param name="comPeriodadobePeriodgranitePeriodstartup"> (optional)</param>
    /// <param name="comPeriodadobePeriodgranitePeriodtagsoup"> (optional)</param>
    /// <param name="comPeriodadobePeriodgranitePeriodtaskmanagementPeriodcore"> (optional)</param>
    /// <param name="comPeriodadobePeriodgranitePeriodtaskmanagementPeriodworkflow"> (optional)</param>
    /// <param name="comPeriodadobePeriodgranitePerioduiPeriodclientlibsPeriodcompilerPeriodless"> (optional)</param>
    /// <param name="comPeriodadobePeriodgranitePerioduiPeriodclientlibsPeriodprocessorPeriodgcc"> (optional)</param>
    /// <param name="comPeriodadobePeriodgranitePeriodwebconsolePeriodplugins"> (optional)</param>
    /// <param name="comPeriodadobePeriodgranitePeriodworkflowPeriodconsole"> (optional)</param>
    /// <param name="comPeriodadobePeriodxmpPeriodworkerPeriodfilesPeriodnativePeriodfragmentPeriodlinux"> (optional)</param>
    /// <param name="comPeriodadobePeriodxmpPeriodworkerPeriodfilesPeriodnativePeriodfragmentPeriodmacosx"> (optional)</param>
    /// <param name="comPeriodadobePeriodxmpPeriodworkerPeriodfilesPeriodnativePeriodfragmentPeriodwin"> (optional)</param>
    /// <param name="comPerioddayPeriodcommonsPeriodosgiPeriodwrapperPeriodsimpleJndi"> (optional)</param>
    /// <param name="comPerioddayPeriodcqPeriodcqAuthhandler"> (optional)</param>
    /// <param name="comPerioddayPeriodcqPeriodcqCompatConfigupdate"> (optional)</param>
    /// <param name="comPerioddayPeriodcqPeriodcqLicensebranding"> (optional)</param>
    /// <param name="comPerioddayPeriodcqPeriodcqNotifcationImpl"> (optional)</param>
    /// <param name="comPerioddayPeriodcqPeriodcqReplicationAudit"> (optional)</param>
    /// <param name="comPerioddayPeriodcqPeriodcqSearchExt"> (optional)</param>
    /// <param name="comPerioddayPeriodcqPerioddamPeriodcqDamAnnotationPrint"> (optional)</param>
    /// <param name="comPerioddayPeriodcqPerioddamPeriodcqDamAssetUsage"> (optional)</param>
    /// <param name="comPerioddayPeriodcqPerioddamPeriodcqDamS7dam"> (optional)</param>
    /// <param name="comPerioddayPeriodcqPerioddamPeriodcqDamSimilaritysearch"> (optional)</param>
    /// <param name="comPerioddayPeriodcqPerioddamPerioddamWebdavSupport"> (optional)</param>
    /// <param name="comPerioddayPeriodcqPeriodpreUpgradeTasks"> (optional)</param>
    /// <param name="comPerioddayPeriodcqPeriodreplicationPeriodextensions"> (optional)</param>
    /// <param name="comPerioddayPeriodcqPeriodwcmPeriodcqMsmCore"> (optional)</param>
    /// <param name="comPerioddayPeriodcqPeriodwcmPeriodcqWcmTranslation"> (optional)</param>
    /// <param name="dayCommonsJrawio"> (optional)</param>
    /// <param name="orgPeriodapachePeriodariesPeriodjmxPeriodwhiteboard"> (optional)</param>
    /// <param name="orgPeriodapachePeriodfelixPeriodhttpPeriodsslfilter"> (optional)</param>
    /// <param name="orgPeriodapachePeriodfelixPeriodorgPeriodapachePeriodfelixPeriodthreaddump"> (optional)</param>
    /// <param name="orgPeriodapachePeriodfelixPeriodwebconsolePeriodpluginsPeriodds"> (optional)</param>
    /// <param name="orgPeriodapachePeriodfelixPeriodwebconsolePeriodpluginsPeriodevent"> (optional)</param>
    /// <param name="orgPeriodapachePeriodfelixPeriodwebconsolePeriodpluginsPeriodmemoryusage"> (optional)</param>
    /// <param name="orgPeriodapachePeriodfelixPeriodwebconsolePeriodpluginsPeriodpackageadmin"> (optional)</param>
    /// <param name="orgPeriodapachePeriodjackrabbitPeriodoakAuthLdap"> (optional)</param>
    /// <param name="orgPeriodapachePeriodjackrabbitPeriodoakSegmentTar"> (optional)</param>
    /// <param name="orgPeriodapachePeriodjackrabbitPeriodoakSolrOsgi"> (optional)</param>
    /// <param name="orgPeriodapachePeriodslingPeriodbundleresourcePeriodimpl"> (optional)</param>
    /// <param name="orgPeriodapachePeriodslingPeriodcommonsPeriodfsclassloader"> (optional)</param>
    /// <param name="orgPeriodapachePeriodslingPeriodcommonsPeriodlogPeriodwebconsole"> (optional)</param>
    /// <param name="orgPeriodapachePeriodslingPerioddatasource"> (optional)</param>
    /// <param name="orgPeriodapachePeriodslingPerioddiscoveryPeriodbase"> (optional)</param>
    /// <param name="orgPeriodapachePeriodslingPerioddiscoveryPeriodoak"> (optional)</param>
    /// <param name="orgPeriodapachePeriodslingPerioddiscoveryPeriodsupport"> (optional)</param>
    /// <param name="orgPeriodapachePeriodslingPerioddistributionPeriodapi"> (optional)</param>
    /// <param name="orgPeriodapachePeriodslingPerioddistributionPeriodcore"> (optional)</param>
    /// <param name="orgPeriodapachePeriodslingPeriodextensionsPeriodwebconsolesecurityprovider"> (optional)</param>
    /// <param name="orgPeriodapachePeriodslingPeriodhcPeriodwebconsole"> (optional)</param>
    /// <param name="orgPeriodapachePeriodslingPeriodinstallerPeriodconsole"> (optional)</param>
    /// <param name="orgPeriodapachePeriodslingPeriodinstallerPeriodproviderPeriodfile"> (optional)</param>
    /// <param name="orgPeriodapachePeriodslingPeriodinstallerPeriodproviderPeriodjcr"> (optional)</param>
    /// <param name="orgPeriodapachePeriodslingPeriodjcrPerioddavex"> (optional)</param>
    /// <param name="orgPeriodapachePeriodslingPeriodjcrPeriodresourcesecurity"> (optional)</param>
    /// <param name="orgPeriodapachePeriodslingPeriodjmxPeriodprovider"> (optional)</param>
    /// <param name="orgPeriodapachePeriodslingPeriodlaunchpadPeriodinstaller"> (optional)</param>
    /// <param name="orgPeriodapachePeriodslingPeriodmodelsPeriodimpl"> (optional)</param>
    /// <param name="orgPeriodapachePeriodslingPeriodrepoinitPeriodparser"> (optional)</param>
    /// <param name="orgPeriodapachePeriodslingPeriodresourcePeriodinventory"> (optional)</param>
    /// <param name="orgPeriodapachePeriodslingPeriodresourceresolver"> (optional)</param>
    /// <param name="orgPeriodapachePeriodslingPeriodscriptingPeriodjavascript"> (optional)</param>
    /// <param name="orgPeriodapachePeriodslingPeriodscriptingPeriodjst"> (optional)</param>
    /// <param name="orgPeriodapachePeriodslingPeriodscriptingPeriodsightlyPeriodjsPeriodprovider"> (optional)</param>
    /// <param name="orgPeriodapachePeriodslingPeriodscriptingPeriodsightlyPeriodmodelsPeriodprovider"> (optional)</param>
    /// <param name="orgPeriodapachePeriodslingPeriodsecurity"> (optional)</param>
    /// <param name="orgPeriodapachePeriodslingPeriodservletsPeriodcompat"> (optional)</param>
    /// <param name="orgPeriodapachePeriodslingPeriodservletsPeriodget"> (optional)</param>
    /// <param name="orgPeriodapachePeriodslingPeriodstartupfilterPerioddisabler"> (optional)</param>
    /// <param name="orgPeriodapachePeriodslingPeriodtracer"> (optional)</param>
    /// <param name="wePeriodretailPeriodclientPeriodappPeriodcore"> (optional)</param>
    virtual void com_adobe_granite_apicontroller_filter_resolver_hook_factory(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &comPeriodadobePeriodcqPeriodcdnPeriodcdnRewriter, const Pistache::Optional<std::string> &comPeriodadobePeriodcqPeriodcloudConfigPeriodcomponents, const Pistache::Optional<std::string> &comPeriodadobePeriodcqPeriodcloudConfigPeriodcore, const Pistache::Optional<std::string> &comPeriodadobePeriodcqPeriodcloudConfigPeriodui, const Pistache::Optional<std::string> &comPeriodadobePeriodcqPeriodcomPeriodadobePeriodcqPeriodeditor, const Pistache::Optional<std::string> &comPeriodadobePeriodcqPeriodcomPeriodadobePeriodcqPeriodprojectsPeriodcore, const Pistache::Optional<std::string> &comPeriodadobePeriodcqPeriodcomPeriodadobePeriodcqPeriodprojectsPeriodwcmPeriodcore, const Pistache::Optional<std::string> &comPeriodadobePeriodcqPeriodcomPeriodadobePeriodcqPerioduiPeriodcommons, const Pistache::Optional<std::string> &comPeriodadobePeriodcqPeriodcomPeriodadobePeriodcqPeriodwcmPeriodstyle, const Pistache::Optional<std::string> &comPeriodadobePeriodcqPeriodcqActivitymapIntegration, const Pistache::Optional<std::string> &comPeriodadobePeriodcqPeriodcqContexthubCommons, const Pistache::Optional<std::string> &comPeriodadobePeriodcqPeriodcqDtm, const Pistache::Optional<std::string> &comPeriodadobePeriodcqPeriodcqHealthcheck, const Pistache::Optional<std::string> &comPeriodadobePeriodcqPeriodcqMultisiteTargeting, const Pistache::Optional<std::string> &comPeriodadobePeriodcqPeriodcqPreUpgradeCleanup, const Pistache::Optional<std::string> &comPeriodadobePeriodcqPeriodcqProductInfoProvider, const Pistache::Optional<std::string> &comPeriodadobePeriodcqPeriodcqRestSites, const Pistache::Optional<std::string> &comPeriodadobePeriodcqPeriodcqSecurityHc, const Pistache::Optional<std::string> &comPeriodadobePeriodcqPerioddamPeriodcqDamSvgHandler, const Pistache::Optional<std::string> &comPeriodadobePeriodcqPerioddamPeriodcqScene7Imaging, const Pistache::Optional<std::string> &comPeriodadobePeriodcqPerioddtmReactorPeriodcore, const Pistache::Optional<std::string> &comPeriodadobePeriodcqPerioddtmReactorPeriodui, const Pistache::Optional<std::string> &comPeriodadobePeriodcqPeriodexpJspelResolver, const Pistache::Optional<std::string> &comPeriodadobePeriodcqPeriodinboxPeriodcqInbox, const Pistache::Optional<std::string> &comPeriodadobePeriodcqPeriodjsonSchemaParser, const Pistache::Optional<std::string> &comPeriodadobePeriodcqPeriodmediaPeriodcqMediaPublishingDpsFpCore, const Pistache::Optional<std::string> &comPeriodadobePeriodcqPeriodmobilePeriodcqMobileCaas, const Pistache::Optional<std::string> &comPeriodadobePeriodcqPeriodmobilePeriodcqMobileIndexBuilder, const Pistache::Optional<std::string> &comPeriodadobePeriodcqPeriodmobilePeriodcqMobilePhonegapBuild, const Pistache::Optional<std::string> &comPeriodadobePeriodcqPeriodmyspell, const Pistache::Optional<std::string> &comPeriodadobePeriodcqPeriodsamplePeriodwePeriodretailPeriodcore, const Pistache::Optional<std::string> &comPeriodadobePeriodcqPeriodscreensPeriodcomPeriodadobePeriodcqPeriodscreensPerioddcc, const Pistache::Optional<std::string> &comPeriodadobePeriodcqPeriodscreensPeriodcomPeriodadobePeriodcqPeriodscreensPeriodmqPeriodcore, const Pistache::Optional<std::string> &comPeriodadobePeriodcqPeriodsocialPeriodcqSocialAsProvider, const Pistache::Optional<std::string> &comPeriodadobePeriodcqPeriodsocialPeriodcqSocialBadgingBasicImpl, const Pistache::Optional<std::string> &comPeriodadobePeriodcqPeriodsocialPeriodcqSocialBadgingImpl, const Pistache::Optional<std::string> &comPeriodadobePeriodcqPeriodsocialPeriodcqSocialCalendarImpl, const Pistache::Optional<std::string> &comPeriodadobePeriodcqPeriodsocialPeriodcqSocialContentFragmentsImpl, const Pistache::Optional<std::string> &comPeriodadobePeriodcqPeriodsocialPeriodcqSocialEnablementImpl, const Pistache::Optional<std::string> &comPeriodadobePeriodcqPeriodsocialPeriodcqSocialGraphImpl, const Pistache::Optional<std::string> &comPeriodadobePeriodcqPeriodsocialPeriodcqSocialIdeationImpl, const Pistache::Optional<std::string> &comPeriodadobePeriodcqPeriodsocialPeriodcqSocialJcrProvider, const Pistache::Optional<std::string> &comPeriodadobePeriodcqPeriodsocialPeriodcqSocialMembersImpl, const Pistache::Optional<std::string> &comPeriodadobePeriodcqPeriodsocialPeriodcqSocialMsProvider, const Pistache::Optional<std::string> &comPeriodadobePeriodcqPeriodsocialPeriodcqSocialNotificationsChannelsWeb, const Pistache::Optional<std::string> &comPeriodadobePeriodcqPeriodsocialPeriodcqSocialNotificationsImpl, const Pistache::Optional<std::string> &comPeriodadobePeriodcqPeriodsocialPeriodcqSocialRdbProvider, const Pistache::Optional<std::string> &comPeriodadobePeriodcqPeriodsocialPeriodcqSocialScfImpl, const Pistache::Optional<std::string> &comPeriodadobePeriodcqPeriodsocialPeriodcqSocialScoringBasicImpl, const Pistache::Optional<std::string> &comPeriodadobePeriodcqPeriodsocialPeriodcqSocialScoringImpl, const Pistache::Optional<std::string> &comPeriodadobePeriodcqPeriodsocialPeriodcqSocialServiceusersImpl, const Pistache::Optional<std::string> &comPeriodadobePeriodcqPeriodsocialPeriodcqSocialSrpImpl, const Pistache::Optional<std::string> &comPeriodadobePeriodcqPeriodsocialPeriodcqSocialUgcbaseImpl, const Pistache::Optional<std::string> &comPeriodadobePerioddamPeriodcqDamCfmImpl, const Pistache::Optional<std::string> &comPeriodadobePeriodformsPeriodfoundationFormsFoundationBase, const Pistache::Optional<std::string> &comPeriodadobePeriodgranitePeriodapicontroller, const Pistache::Optional<std::string> &comPeriodadobePeriodgranitePeriodassetPeriodcore, const Pistache::Optional<std::string> &comPeriodadobePeriodgranitePeriodauthPeriodsso, const Pistache::Optional<std::string> &comPeriodadobePeriodgranitePeriodbundlesPeriodhcPeriodimpl, const Pistache::Optional<std::string> &comPeriodadobePeriodgranitePeriodcompatRouter, const Pistache::Optional<std::string> &comPeriodadobePeriodgranitePeriodconf, const Pistache::Optional<std::string> &comPeriodadobePeriodgranitePeriodconfPerioduiPeriodcore, const Pistache::Optional<std::string> &comPeriodadobePeriodgranitePeriodcors, const Pistache::Optional<std::string> &comPeriodadobePeriodgranitePeriodcrxExplorer, const Pistache::Optional<std::string> &comPeriodadobePeriodgranitePeriodcrxdeLite, const Pistache::Optional<std::string> &comPeriodadobePeriodgranitePeriodcryptoPeriodconfig, const Pistache::Optional<std::string> &comPeriodadobePeriodgranitePeriodcryptoPeriodextension, const Pistache::Optional<std::string> &comPeriodadobePeriodgranitePeriodcryptoPeriodfile, const Pistache::Optional<std::string> &comPeriodadobePeriodgranitePeriodcryptoPeriodjcr, const Pistache::Optional<std::string> &comPeriodadobePeriodgranitePeriodcsrf, const Pistache::Optional<std::string> &comPeriodadobePeriodgranitePerioddistributionPeriodcore, const Pistache::Optional<std::string> &comPeriodadobePeriodgranitePerioddropwizardPeriodmetrics, const Pistache::Optional<std::string> &comPeriodadobePeriodgranitePeriodfragsPeriodimpl, const Pistache::Optional<std::string> &comPeriodadobePeriodgranitePeriodgibson, const Pistache::Optional<std::string> &comPeriodadobePeriodgranitePeriodinfocollector, const Pistache::Optional<std::string> &comPeriodadobePeriodgranitePeriodinstallerPeriodfactoryPeriodpackages, const Pistache::Optional<std::string> &comPeriodadobePeriodgranitePeriodjettyPeriodssl, const Pistache::Optional<std::string> &comPeriodadobePeriodgranitePeriodjobsPeriodasync, const Pistache::Optional<std::string> &comPeriodadobePeriodgranitePeriodmaintenancePeriodoak, const Pistache::Optional<std::string> &comPeriodadobePeriodgranitePeriodmonitoringPeriodcore, const Pistache::Optional<std::string> &comPeriodadobePeriodgranitePeriodqueries, const Pistache::Optional<std::string> &comPeriodadobePeriodgranitePeriodreplicationPeriodhcPeriodimpl, const Pistache::Optional<std::string> &comPeriodadobePeriodgranitePeriodrepositoryPeriodchecker, const Pistache::Optional<std::string> &comPeriodadobePeriodgranitePeriodrepositoryPeriodhcPeriodimpl, const Pistache::Optional<std::string> &comPeriodadobePeriodgranitePeriodrestPeriodassets, const Pistache::Optional<std::string> &comPeriodadobePeriodgranitePeriodsecurityPeriodui, const Pistache::Optional<std::string> &comPeriodadobePeriodgranitePeriodstartup, const Pistache::Optional<std::string> &comPeriodadobePeriodgranitePeriodtagsoup, const Pistache::Optional<std::string> &comPeriodadobePeriodgranitePeriodtaskmanagementPeriodcore, const Pistache::Optional<std::string> &comPeriodadobePeriodgranitePeriodtaskmanagementPeriodworkflow, const Pistache::Optional<std::string> &comPeriodadobePeriodgranitePerioduiPeriodclientlibsPeriodcompilerPeriodless, const Pistache::Optional<std::string> &comPeriodadobePeriodgranitePerioduiPeriodclientlibsPeriodprocessorPeriodgcc, const Pistache::Optional<std::string> &comPeriodadobePeriodgranitePeriodwebconsolePeriodplugins, const Pistache::Optional<std::string> &comPeriodadobePeriodgranitePeriodworkflowPeriodconsole, const Pistache::Optional<std::string> &comPeriodadobePeriodxmpPeriodworkerPeriodfilesPeriodnativePeriodfragmentPeriodlinux, const Pistache::Optional<std::string> &comPeriodadobePeriodxmpPeriodworkerPeriodfilesPeriodnativePeriodfragmentPeriodmacosx, const Pistache::Optional<std::string> &comPeriodadobePeriodxmpPeriodworkerPeriodfilesPeriodnativePeriodfragmentPeriodwin, const Pistache::Optional<std::string> &comPerioddayPeriodcommonsPeriodosgiPeriodwrapperPeriodsimpleJndi, const Pistache::Optional<std::string> &comPerioddayPeriodcqPeriodcqAuthhandler, const Pistache::Optional<std::string> &comPerioddayPeriodcqPeriodcqCompatConfigupdate, const Pistache::Optional<std::string> &comPerioddayPeriodcqPeriodcqLicensebranding, const Pistache::Optional<std::string> &comPerioddayPeriodcqPeriodcqNotifcationImpl, const Pistache::Optional<std::string> &comPerioddayPeriodcqPeriodcqReplicationAudit, const Pistache::Optional<std::string> &comPerioddayPeriodcqPeriodcqSearchExt, const Pistache::Optional<std::string> &comPerioddayPeriodcqPerioddamPeriodcqDamAnnotationPrint, const Pistache::Optional<std::string> &comPerioddayPeriodcqPerioddamPeriodcqDamAssetUsage, const Pistache::Optional<std::string> &comPerioddayPeriodcqPerioddamPeriodcqDamS7dam, const Pistache::Optional<std::string> &comPerioddayPeriodcqPerioddamPeriodcqDamSimilaritysearch, const Pistache::Optional<std::string> &comPerioddayPeriodcqPerioddamPerioddamWebdavSupport, const Pistache::Optional<std::string> &comPerioddayPeriodcqPeriodpreUpgradeTasks, const Pistache::Optional<std::string> &comPerioddayPeriodcqPeriodreplicationPeriodextensions, const Pistache::Optional<std::string> &comPerioddayPeriodcqPeriodwcmPeriodcqMsmCore, const Pistache::Optional<std::string> &comPerioddayPeriodcqPeriodwcmPeriodcqWcmTranslation, const Pistache::Optional<std::string> &dayCommonsJrawio, const Pistache::Optional<std::string> &orgPeriodapachePeriodariesPeriodjmxPeriodwhiteboard, const Pistache::Optional<std::string> &orgPeriodapachePeriodfelixPeriodhttpPeriodsslfilter, const Pistache::Optional<std::string> &orgPeriodapachePeriodfelixPeriodorgPeriodapachePeriodfelixPeriodthreaddump, const Pistache::Optional<std::string> &orgPeriodapachePeriodfelixPeriodwebconsolePeriodpluginsPeriodds, const Pistache::Optional<std::string> &orgPeriodapachePeriodfelixPeriodwebconsolePeriodpluginsPeriodevent, const Pistache::Optional<std::string> &orgPeriodapachePeriodfelixPeriodwebconsolePeriodpluginsPeriodmemoryusage, const Pistache::Optional<std::string> &orgPeriodapachePeriodfelixPeriodwebconsolePeriodpluginsPeriodpackageadmin, const Pistache::Optional<std::string> &orgPeriodapachePeriodjackrabbitPeriodoakAuthLdap, const Pistache::Optional<std::string> &orgPeriodapachePeriodjackrabbitPeriodoakSegmentTar, const Pistache::Optional<std::string> &orgPeriodapachePeriodjackrabbitPeriodoakSolrOsgi, const Pistache::Optional<std::string> &orgPeriodapachePeriodslingPeriodbundleresourcePeriodimpl, const Pistache::Optional<std::string> &orgPeriodapachePeriodslingPeriodcommonsPeriodfsclassloader, const Pistache::Optional<std::string> &orgPeriodapachePeriodslingPeriodcommonsPeriodlogPeriodwebconsole, const Pistache::Optional<std::string> &orgPeriodapachePeriodslingPerioddatasource, const Pistache::Optional<std::string> &orgPeriodapachePeriodslingPerioddiscoveryPeriodbase, const Pistache::Optional<std::string> &orgPeriodapachePeriodslingPerioddiscoveryPeriodoak, const Pistache::Optional<std::string> &orgPeriodapachePeriodslingPerioddiscoveryPeriodsupport, const Pistache::Optional<std::string> &orgPeriodapachePeriodslingPerioddistributionPeriodapi, const Pistache::Optional<std::string> &orgPeriodapachePeriodslingPerioddistributionPeriodcore, const Pistache::Optional<std::string> &orgPeriodapachePeriodslingPeriodextensionsPeriodwebconsolesecurityprovider, const Pistache::Optional<std::string> &orgPeriodapachePeriodslingPeriodhcPeriodwebconsole, const Pistache::Optional<std::string> &orgPeriodapachePeriodslingPeriodinstallerPeriodconsole, const Pistache::Optional<std::string> &orgPeriodapachePeriodslingPeriodinstallerPeriodproviderPeriodfile, const Pistache::Optional<std::string> &orgPeriodapachePeriodslingPeriodinstallerPeriodproviderPeriodjcr, const Pistache::Optional<std::string> &orgPeriodapachePeriodslingPeriodjcrPerioddavex, const Pistache::Optional<std::string> &orgPeriodapachePeriodslingPeriodjcrPeriodresourcesecurity, const Pistache::Optional<std::string> &orgPeriodapachePeriodslingPeriodjmxPeriodprovider, const Pistache::Optional<std::string> &orgPeriodapachePeriodslingPeriodlaunchpadPeriodinstaller, const Pistache::Optional<std::string> &orgPeriodapachePeriodslingPeriodmodelsPeriodimpl, const Pistache::Optional<std::string> &orgPeriodapachePeriodslingPeriodrepoinitPeriodparser, const Pistache::Optional<std::string> &orgPeriodapachePeriodslingPeriodresourcePeriodinventory, const Pistache::Optional<std::string> &orgPeriodapachePeriodslingPeriodresourceresolver, const Pistache::Optional<std::string> &orgPeriodapachePeriodslingPeriodscriptingPeriodjavascript, const Pistache::Optional<std::string> &orgPeriodapachePeriodslingPeriodscriptingPeriodjst, const Pistache::Optional<std::string> &orgPeriodapachePeriodslingPeriodscriptingPeriodsightlyPeriodjsPeriodprovider, const Pistache::Optional<std::string> &orgPeriodapachePeriodslingPeriodscriptingPeriodsightlyPeriodmodelsPeriodprovider, const Pistache::Optional<std::string> &orgPeriodapachePeriodslingPeriodsecurity, const Pistache::Optional<std::string> &orgPeriodapachePeriodslingPeriodservletsPeriodcompat, const Pistache::Optional<std::string> &orgPeriodapachePeriodslingPeriodservletsPeriodget, const Pistache::Optional<std::string> &orgPeriodapachePeriodslingPeriodstartupfilterPerioddisabler, const Pistache::Optional<std::string> &orgPeriodapachePeriodslingPeriodtracer, const Pistache::Optional<std::string> &wePeriodretailPeriodclientPeriodappPeriodcore, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="path"> (optional)</param>
    /// <param name="servicePeriodranking"> (optional)</param>
    virtual void com_adobe_granite_auth_cert_impl_client_cert_auth_handler(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &path, const Pistache::Optional<int32_t> &servicePeriodranking, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="configid"> (optional)</param>
    /// <param name="scope"> (optional)</param>
    virtual void com_adobe_granite_auth_ims(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &configid, const Pistache::Optional<std::string> &scope, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="oauthPeriodproviderPeriodid"> (optional)</param>
    virtual void com_adobe_granite_auth_ims_impl_external_user_id_mapping_provider_extension(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &oauthPeriodproviderPeriodid, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="authPeriodimsPeriodclientPeriodsecret"> (optional)</param>
    /// <param name="customizerPeriodtype"> (optional)</param>
    virtual void com_adobe_granite_auth_ims_impl_ims_access_token_request_customizer_impl(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &authPeriodimsPeriodclientPeriodsecret, const Pistache::Optional<std::string> &customizerPeriodtype, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="oauthPeriodproviderPeriodid"> (optional)</param>
    virtual void com_adobe_granite_auth_ims_impl_ims_instance_credentials_validator(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &oauthPeriodproviderPeriodid, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="oauthPeriodproviderPeriodid"> (optional)</param>
    /// <param name="oauthPeriodproviderPeriodimsPeriodauthorizationPeriodurl"> (optional)</param>
    /// <param name="oauthPeriodproviderPeriodimsPeriodtokenPeriodurl"> (optional)</param>
    /// <param name="oauthPeriodproviderPeriodimsPeriodprofilePeriodurl"> (optional)</param>
    /// <param name="oauthPeriodproviderPeriodimsPeriodextendedPerioddetailsPeriodurls"> (optional)</param>
    /// <param name="oauthPeriodproviderPeriodimsPeriodvalidatePeriodtokenPeriodurl"> (optional)</param>
    /// <param name="oauthPeriodproviderPeriodimsPeriodsessionPeriodproperty"> (optional)</param>
    /// <param name="oauthPeriodproviderPeriodimsPeriodservicePeriodtokenPeriodclientPeriodid"> (optional)</param>
    /// <param name="oauthPeriodproviderPeriodimsPeriodservicePeriodtokenPeriodclientPeriodsecret"> (optional)</param>
    /// <param name="oauthPeriodproviderPeriodimsPeriodservicePeriodtoken"> (optional)</param>
    /// <param name="imsPeriodorgPeriodref"> (optional)</param>
    /// <param name="imsPeriodgroupPeriodmapping"> (optional)</param>
    /// <param name="oauthPeriodproviderPeriodimsPeriodonlyPeriodlicensePeriodgroup"> (optional)</param>
    virtual void com_adobe_granite_auth_ims_impl_ims_provider_impl(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &oauthPeriodproviderPeriodid, const Pistache::Optional<std::string> &oauthPeriodproviderPeriodimsPeriodauthorizationPeriodurl, const Pistache::Optional<std::string> &oauthPeriodproviderPeriodimsPeriodtokenPeriodurl, const Pistache::Optional<std::string> &oauthPeriodproviderPeriodimsPeriodprofilePeriodurl, const Pistache::Optional<std::string> &oauthPeriodproviderPeriodimsPeriodextendedPerioddetailsPeriodurls, const Pistache::Optional<std::string> &oauthPeriodproviderPeriodimsPeriodvalidatePeriodtokenPeriodurl, const Pistache::Optional<std::string> &oauthPeriodproviderPeriodimsPeriodsessionPeriodproperty, const Pistache::Optional<std::string> &oauthPeriodproviderPeriodimsPeriodservicePeriodtokenPeriodclientPeriodid, const Pistache::Optional<std::string> &oauthPeriodproviderPeriodimsPeriodservicePeriodtokenPeriodclientPeriodsecret, const Pistache::Optional<std::string> &oauthPeriodproviderPeriodimsPeriodservicePeriodtoken, const Pistache::Optional<std::string> &imsPeriodorgPeriodref, const Pistache::Optional<std::string> &imsPeriodgroupPeriodmapping, const Pistache::Optional<bool> &oauthPeriodproviderPeriodimsPeriodonlyPeriodlicensePeriodgroup, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="oauthPeriodconfigmanagerPeriodimsPeriodconfigid"> (optional)</param>
    /// <param name="imsPeriodowningEntity"> (optional)</param>
    /// <param name="aemPeriodinstanceId"> (optional)</param>
    /// <param name="imsPeriodserviceCode"> (optional)</param>
    virtual void com_adobe_granite_auth_ims_impl_ims_config_provider_impl(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &oauthPeriodconfigmanagerPeriodimsPeriodconfigid, const Pistache::Optional<std::string> &imsPeriodowningEntity, const Pistache::Optional<std::string> &aemPeriodinstanceId, const Pistache::Optional<std::string> &imsPeriodserviceCode, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="name"> (optional)</param>
    /// <param name="authPeriodtokenPeriodproviderPeriodtitle"> (optional)</param>
    /// <param name="authPeriodtokenPeriodproviderPerioddefaultPeriodclaims"> (optional)</param>
    /// <param name="authPeriodtokenPeriodproviderPeriodendpoint"> (optional)</param>
    /// <param name="authPeriodaccessPeriodtokenPeriodrequest"> (optional)</param>
    /// <param name="authPeriodtokenPeriodproviderPeriodkeypairPeriodalias"> (optional)</param>
    /// <param name="authPeriodtokenPeriodproviderPeriodconnPeriodtimeout"> (optional)</param>
    /// <param name="authPeriodtokenPeriodproviderPeriodsoPeriodtimeout"> (optional)</param>
    /// <param name="authPeriodtokenPeriodproviderPeriodclientPeriodid"> (optional)</param>
    /// <param name="authPeriodtokenPeriodproviderPeriodscope"> (optional)</param>
    /// <param name="authPeriodtokenPeriodproviderPeriodreusePeriodaccessPeriodtoken"> (optional)</param>
    /// <param name="authPeriodtokenPeriodproviderPeriodrelaxedPeriodssl"> (optional)</param>
    /// <param name="tokenPeriodrequestPeriodcustomizerPeriodtype"> (optional)</param>
    /// <param name="authPeriodtokenPeriodvalidatorPeriodtype"> (optional)</param>
    virtual void com_adobe_granite_auth_oauth_accesstoken_provider(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &name, const Pistache::Optional<std::string> &authPeriodtokenPeriodproviderPeriodtitle, const Pistache::Optional<std::string> &authPeriodtokenPeriodproviderPerioddefaultPeriodclaims, const Pistache::Optional<std::string> &authPeriodtokenPeriodproviderPeriodendpoint, const Pistache::Optional<std::string> &authPeriodaccessPeriodtokenPeriodrequest, const Pistache::Optional<std::string> &authPeriodtokenPeriodproviderPeriodkeypairPeriodalias, const Pistache::Optional<int32_t> &authPeriodtokenPeriodproviderPeriodconnPeriodtimeout, const Pistache::Optional<int32_t> &authPeriodtokenPeriodproviderPeriodsoPeriodtimeout, const Pistache::Optional<std::string> &authPeriodtokenPeriodproviderPeriodclientPeriodid, const Pistache::Optional<std::string> &authPeriodtokenPeriodproviderPeriodscope, const Pistache::Optional<bool> &authPeriodtokenPeriodproviderPeriodreusePeriodaccessPeriodtoken, const Pistache::Optional<bool> &authPeriodtokenPeriodproviderPeriodrelaxedPeriodssl, const Pistache::Optional<std::string> &tokenPeriodrequestPeriodcustomizerPeriodtype, const Pistache::Optional<std::string> &authPeriodtokenPeriodvalidatorPeriodtype, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="path"> (optional)</param>
    /// <param name="oauthPeriodclientIdsPeriodallowed"> (optional)</param>
    /// <param name="authPeriodbearerPeriodsyncPeriodims"> (optional)</param>
    /// <param name="authPeriodtokenRequestParameter"> (optional)</param>
    /// <param name="oauthPeriodbearerPeriodconfigid"> (optional)</param>
    /// <param name="oauthPeriodjwtPeriodsupport"> (optional)</param>
    virtual void com_adobe_granite_auth_oauth_impl_bearer_authentication_handler(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &path, const Pistache::Optional<std::string> &oauthPeriodclientIdsPeriodallowed, const Pistache::Optional<bool> &authPeriodbearerPeriodsyncPeriodims, const Pistache::Optional<std::string> &authPeriodtokenRequestParameter, const Pistache::Optional<std::string> &oauthPeriodbearerPeriodconfigid, const Pistache::Optional<bool> &oauthPeriodjwtPeriodsupport, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="authPeriodtokenPeriodvalidatorPeriodtype"> (optional)</param>
    virtual void com_adobe_granite_auth_oauth_impl_default_token_validator_impl(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &authPeriodtokenPeriodvalidatorPeriodtype, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="oauthPeriodproviderPeriodid"> (optional)</param>
    virtual void com_adobe_granite_auth_oauth_impl_facebook_provider_impl(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &oauthPeriodproviderPeriodid, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="oauthPeriodproviderPeriodid"> (optional)</param>
    /// <param name="oauthPeriodproviderPeriodgithubPeriodauthorizationPeriodurl"> (optional)</param>
    /// <param name="oauthPeriodproviderPeriodgithubPeriodtokenPeriodurl"> (optional)</param>
    /// <param name="oauthPeriodproviderPeriodgithubPeriodprofilePeriodurl"> (optional)</param>
    virtual void com_adobe_granite_auth_oauth_impl_github_provider_impl(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &oauthPeriodproviderPeriodid, const Pistache::Optional<std::string> &oauthPeriodproviderPeriodgithubPeriodauthorizationPeriodurl, const Pistache::Optional<std::string> &oauthPeriodproviderPeriodgithubPeriodtokenPeriodurl, const Pistache::Optional<std::string> &oauthPeriodproviderPeriodgithubPeriodprofilePeriodurl, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="oauthPeriodproviderPeriodid"> (optional)</param>
    /// <param name="oauthPeriodproviderPeriodgranitePeriodauthorizationPeriodurl"> (optional)</param>
    /// <param name="oauthPeriodproviderPeriodgranitePeriodtokenPeriodurl"> (optional)</param>
    /// <param name="oauthPeriodproviderPeriodgranitePeriodprofilePeriodurl"> (optional)</param>
    /// <param name="oauthPeriodproviderPeriodgranitePeriodextendedPerioddetailsPeriodurls"> (optional)</param>
    virtual void com_adobe_granite_auth_oauth_impl_granite_provider(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &oauthPeriodproviderPeriodid, const Pistache::Optional<std::string> &oauthPeriodproviderPeriodgranitePeriodauthorizationPeriodurl, const Pistache::Optional<std::string> &oauthPeriodproviderPeriodgranitePeriodtokenPeriodurl, const Pistache::Optional<std::string> &oauthPeriodproviderPeriodgranitePeriodprofilePeriodurl, const Pistache::Optional<std::string> &oauthPeriodproviderPeriodgranitePeriodextendedPerioddetailsPeriodurls, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="oauthPeriodcookiePeriodloginPeriodtimeout"> (optional)</param>
    /// <param name="oauthPeriodcookiePeriodmaxPeriodage"> (optional)</param>
    virtual void com_adobe_granite_auth_oauth_impl_helper_provider_config_manager(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &oauthPeriodcookiePeriodloginPeriodtimeout, const Pistache::Optional<std::string> &oauthPeriodcookiePeriodmaxPeriodage, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="oauthPeriodcookiePeriodloginPeriodtimeout"> (optional)</param>
    /// <param name="oauthPeriodcookiePeriodmaxPeriodage"> (optional)</param>
    virtual void com_adobe_granite_auth_oauth_impl_helper_provider_config_manager_internal(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &oauthPeriodcookiePeriodloginPeriodtimeout, const Pistache::Optional<std::string> &oauthPeriodcookiePeriodmaxPeriodage, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="path"> (optional)</param>
    virtual void com_adobe_granite_auth_oauth_impl_o_auth_authentication_handler(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &path, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="oauthPeriodproviderPeriodid"> (optional)</param>
    virtual void com_adobe_granite_auth_oauth_impl_twitter_provider_impl(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &oauthPeriodproviderPeriodid, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="oauthPeriodconfigPeriodid"> (optional)</param>
    /// <param name="oauthPeriodclientPeriodid"> (optional)</param>
    /// <param name="oauthPeriodclientPeriodsecret"> (optional)</param>
    /// <param name="oauthPeriodscope"> (optional)</param>
    /// <param name="oauthPeriodconfigPeriodproviderPeriodid"> (optional)</param>
    /// <param name="oauthPeriodcreatePeriodusers"> (optional)</param>
    /// <param name="oauthPerioduseridPeriodproperty"> (optional)</param>
    /// <param name="forcePeriodstrictPeriodusernamePeriodmatching"> (optional)</param>
    /// <param name="oauthPeriodencodePerioduserids"> (optional)</param>
    /// <param name="oauthPeriodhashPerioduserids"> (optional)</param>
    /// <param name="oauthPeriodcallBackUrl"> (optional)</param>
    /// <param name="oauthPeriodaccessPeriodtokenPeriodpersist"> (optional)</param>
    /// <param name="oauthPeriodaccessPeriodtokenPeriodpersistPeriodcookie"> (optional)</param>
    /// <param name="oauthPeriodcsrfPeriodstatePeriodprotection"> (optional)</param>
    /// <param name="oauthPeriodredirectPeriodrequestPeriodparams"> (optional)</param>
    /// <param name="oauthPeriodconfigPeriodsiblingsPeriodallow"> (optional)</param>
    virtual void com_adobe_granite_auth_oauth_provider(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &oauthPeriodconfigPeriodid, const Pistache::Optional<std::string> &oauthPeriodclientPeriodid, const Pistache::Optional<std::string> &oauthPeriodclientPeriodsecret, const Pistache::Optional<std::string> &oauthPeriodscope, const Pistache::Optional<std::string> &oauthPeriodconfigPeriodproviderPeriodid, const Pistache::Optional<bool> &oauthPeriodcreatePeriodusers, const Pistache::Optional<std::string> &oauthPerioduseridPeriodproperty, const Pistache::Optional<bool> &forcePeriodstrictPeriodusernamePeriodmatching, const Pistache::Optional<bool> &oauthPeriodencodePerioduserids, const Pistache::Optional<bool> &oauthPeriodhashPerioduserids, const Pistache::Optional<std::string> &oauthPeriodcallBackUrl, const Pistache::Optional<bool> &oauthPeriodaccessPeriodtokenPeriodpersist, const Pistache::Optional<bool> &oauthPeriodaccessPeriodtokenPeriodpersistPeriodcookie, const Pistache::Optional<bool> &oauthPeriodcsrfPeriodstatePeriodprotection, const Pistache::Optional<bool> &oauthPeriodredirectPeriodrequestPeriodparams, const Pistache::Optional<bool> &oauthPeriodconfigPeriodsiblingsPeriodallow, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="supportedPaths"> (optional)</param>
    virtual void com_adobe_granite_auth_requirement_impl_default_requirement_handler(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &supportedPaths, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="path"> (optional)</param>
    /// <param name="servicePeriodranking"> (optional)</param>
    /// <param name="idpUrl"> (optional)</param>
    /// <param name="idpCertAlias"> (optional)</param>
    /// <param name="idpHttpRedirect"> (optional)</param>
    /// <param name="serviceProviderEntityId"> (optional)</param>
    /// <param name="assertionConsumerServiceURL"> (optional)</param>
    /// <param name="spPrivateKeyAlias"> (optional)</param>
    /// <param name="keyStorePassword"> (optional)</param>
    /// <param name="defaultRedirectUrl"> (optional)</param>
    /// <param name="userIDAttribute"> (optional)</param>
    /// <param name="useEncryption"> (optional)</param>
    /// <param name="createUser"> (optional)</param>
    /// <param name="userIntermediatePath"> (optional)</param>
    /// <param name="addGroupMemberships"> (optional)</param>
    /// <param name="groupMembershipAttribute"> (optional)</param>
    /// <param name="defaultGroups"> (optional)</param>
    /// <param name="nameIdFormat"> (optional)</param>
    /// <param name="synchronizeAttributes"> (optional)</param>
    /// <param name="handleLogout"> (optional)</param>
    /// <param name="logoutUrl"> (optional)</param>
    /// <param name="clockTolerance"> (optional)</param>
    /// <param name="digestMethod"> (optional)</param>
    /// <param name="signatureMethod"> (optional)</param>
    /// <param name="identitySyncType"> (optional)</param>
    /// <param name="idpIdentifier"> (optional)</param>
    virtual void com_adobe_granite_auth_saml_saml_authentication_handler(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &path, const Pistache::Optional<int32_t> &servicePeriodranking, const Pistache::Optional<std::string> &idpUrl, const Pistache::Optional<std::string> &idpCertAlias, const Pistache::Optional<bool> &idpHttpRedirect, const Pistache::Optional<std::string> &serviceProviderEntityId, const Pistache::Optional<std::string> &assertionConsumerServiceURL, const Pistache::Optional<std::string> &spPrivateKeyAlias, const Pistache::Optional<std::string> &keyStorePassword, const Pistache::Optional<std::string> &defaultRedirectUrl, const Pistache::Optional<std::string> &userIDAttribute, const Pistache::Optional<bool> &useEncryption, const Pistache::Optional<bool> &createUser, const Pistache::Optional<std::string> &userIntermediatePath, const Pistache::Optional<bool> &addGroupMemberships, const Pistache::Optional<std::string> &groupMembershipAttribute, const Pistache::Optional<std::string> &defaultGroups, const Pistache::Optional<std::string> &nameIdFormat, const Pistache::Optional<std::string> &synchronizeAttributes, const Pistache::Optional<bool> &handleLogout, const Pistache::Optional<std::string> &logoutUrl, const Pistache::Optional<int32_t> &clockTolerance, const Pistache::Optional<std::string> &digestMethod, const Pistache::Optional<std::string> &signatureMethod, const Pistache::Optional<std::string> &identitySyncType, const Pistache::Optional<std::string> &idpIdentifier, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="path"> (optional)</param>
    /// <param name="servicePeriodranking"> (optional)</param>
    /// <param name="jaasPeriodcontrolFlag"> (optional)</param>
    /// <param name="jaasPeriodrealmName"> (optional)</param>
    /// <param name="jaasPeriodranking"> (optional)</param>
    /// <param name="headers"> (optional)</param>
    /// <param name="cookies"> (optional)</param>
    /// <param name="parameters"> (optional)</param>
    /// <param name="usermap"> (optional)</param>
    /// <param name="format"> (optional)</param>
    /// <param name="trustedCredentialsAttribute"> (optional)</param>
    virtual void com_adobe_granite_auth_sso_impl_sso_authentication_handler(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &path, const Pistache::Optional<int32_t> &servicePeriodranking, const Pistache::Optional<std::string> &jaasPeriodcontrolFlag, const Pistache::Optional<std::string> &jaasPeriodrealmName, const Pistache::Optional<int32_t> &jaasPeriodranking, const Pistache::Optional<std::string> &headers, const Pistache::Optional<std::string> &cookies, const Pistache::Optional<std::string> &parameters, const Pistache::Optional<std::string> &usermap, const Pistache::Optional<std::string> &format, const Pistache::Optional<std::string> &trustedCredentialsAttribute, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="hcPeriodtags"> (optional)</param>
    /// <param name="minimumPeriodcodePeriodcachePeriodsize"> (optional)</param>
    virtual void com_adobe_granite_bundles_hc_impl_code_cache_health_check(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &hcPeriodtags, const Pistache::Optional<int32_t> &minimumPeriodcodePeriodcachePeriodsize, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="hcPeriodtags"> (optional)</param>
    virtual void com_adobe_granite_bundles_hc_impl_crxde_support_bundle_health_check(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &hcPeriodtags, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="hcPeriodtags"> (optional)</param>
    virtual void com_adobe_granite_bundles_hc_impl_dav_ex_bundle_health_check(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &hcPeriodtags, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="hcPeriodtags"> (optional)</param>
    /// <param name="ignoredPeriodbundles"> (optional)</param>
    virtual void com_adobe_granite_bundles_hc_impl_inactive_bundles_health_check(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &hcPeriodtags, const Pistache::Optional<std::string> &ignoredPeriodbundles, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="hcPeriodtags"> (optional)</param>
    /// <param name="maxPeriodqueuedPeriodjobs"> (optional)</param>
    virtual void com_adobe_granite_bundles_hc_impl_jobs_health_check(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &hcPeriodtags, const Pistache::Optional<int32_t> &maxPeriodqueuedPeriodjobs, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="hcPeriodtags"> (optional)</param>
    virtual void com_adobe_granite_bundles_hc_impl_sling_get_servlet_health_check(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &hcPeriodtags, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="hcPeriodtags"> (optional)</param>
    virtual void com_adobe_granite_bundles_hc_impl_sling_java_script_handler_health_check(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &hcPeriodtags, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="hcPeriodtags"> (optional)</param>
    virtual void com_adobe_granite_bundles_hc_impl_sling_jsp_script_handler_health_check(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &hcPeriodtags, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="hcPeriodtags"> (optional)</param>
    virtual void com_adobe_granite_bundles_hc_impl_sling_referrer_filter_health_check(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &hcPeriodtags, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="hcPeriodtags"> (optional)</param>
    virtual void com_adobe_granite_bundles_hc_impl_web_dav_bundle_health_check(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &hcPeriodtags, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="replicatePeriodcommentPeriodresourceTypes"> (optional)</param>
    virtual void com_adobe_granite_comments_internal_comment_replication_content_filter_fac(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &replicatePeriodcommentPeriodresourceTypes, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="compatgroups"> (optional)</param>
    /// <param name="enabled"> (optional)</param>
    virtual void com_adobe_granite_compatrouter_impl_compat_switching_service_impl(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &compatgroups, const Pistache::Optional<bool> &enabled, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="id"> (optional)</param>
    /// <param name="compatPath"> (optional)</param>
    /// <param name="newPath"> (optional)</param>
    virtual void com_adobe_granite_compatrouter_impl_routing_config(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &id, const Pistache::Optional<std::string> &compatPath, const Pistache::Optional<std::string> &newPath, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="group"> (optional)</param>
    /// <param name="ids"> (optional)</param>
    virtual void com_adobe_granite_compatrouter_impl_switch_mapping_config(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &group, const Pistache::Optional<std::string> &ids, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="enabled"> (optional)</param>
    /// <param name="fallbackPaths"> (optional)</param>
    virtual void com_adobe_granite_conf_impl_runtime_aware_configuration_resource_resolving(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<bool> &enabled, const Pistache::Optional<std::string> &fallbackPaths, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="comPeriodadobePeriodgranitePeriodcontexthubPeriodsilentMode"> (optional)</param>
    /// <param name="comPeriodadobePeriodgranitePeriodcontexthubPeriodshowUi"> (optional)</param>
    virtual void com_adobe_granite_contexthub_impl_context_hub_impl(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<bool> &comPeriodadobePeriodgranitePeriodcontexthubPeriodsilentMode, const Pistache::Optional<bool> &comPeriodadobePeriodgranitePeriodcontexthubPeriodshowUi, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="alloworigin"> (optional)</param>
    /// <param name="alloworiginregexp"> (optional)</param>
    /// <param name="allowedpaths"> (optional)</param>
    /// <param name="exposedheaders"> (optional)</param>
    /// <param name="maxage"> (optional)</param>
    /// <param name="supportedheaders"> (optional)</param>
    /// <param name="supportedmethods"> (optional)</param>
    /// <param name="supportscredentials"> (optional)</param>
    virtual void com_adobe_granite_cors_impl_cors_policy_impl(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &alloworigin, const Pistache::Optional<std::string> &alloworiginregexp, const Pistache::Optional<std::string> &allowedpaths, const Pistache::Optional<std::string> &exposedheaders, const Pistache::Optional<int32_t> &maxage, const Pistache::Optional<std::string> &supportedheaders, const Pistache::Optional<std::string> &supportedmethods, const Pistache::Optional<bool> &supportscredentials, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="filterPeriodmethods"> (optional)</param>
    /// <param name="filterPeriodenablePeriodsafePerioduserPeriodagents"> (optional)</param>
    /// <param name="filterPeriodsafePerioduserPeriodagents"> (optional)</param>
    /// <param name="filterPeriodexcludedPeriodpaths"> (optional)</param>
    virtual void com_adobe_granite_csrf_impl_csrf_filter(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &filterPeriodmethods, const Pistache::Optional<bool> &filterPeriodenablePeriodsafePerioduserPeriodagents, const Pistache::Optional<std::string> &filterPeriodsafePerioduserPeriodagents, const Pistache::Optional<std::string> &filterPeriodexcludedPeriodpaths, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="csrfPeriodtokenPeriodexpiresPeriodin"> (optional)</param>
    /// <param name="slingPeriodauthPeriodrequirements"> (optional)</param>
    virtual void com_adobe_granite_csrf_impl_csrf_servlet(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<int32_t> &csrfPeriodtokenPeriodexpiresPeriodin, const Pistache::Optional<std::string> &slingPeriodauthPeriodrequirements, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="name"> (optional)</param>
    /// <param name="username"> (optional)</param>
    /// <param name="encryptedPassword"> (optional)</param>
    virtual void com_adobe_granite_distribution_core_impl_crypto_distribution_transport_se(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &name, const Pistache::Optional<std::string> &username, const Pistache::Optional<std::string> &encryptedPassword, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="enabled"> (optional)</param>
    /// <param name="agentName"> (optional)</param>
    /// <param name="diffPath"> (optional)</param>
    /// <param name="observedPath"> (optional)</param>
    /// <param name="serviceName"> (optional)</param>
    /// <param name="propertyNames"> (optional)</param>
    /// <param name="distributionDelay"> (optional)</param>
    /// <param name="serviceUserPeriodtarget"> (optional)</param>
    virtual void com_adobe_granite_distribution_core_impl_diff_diff_changes_observer(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<bool> &enabled, const Pistache::Optional<std::string> &agentName, const Pistache::Optional<std::string> &diffPath, const Pistache::Optional<std::string> &observedPath, const Pistache::Optional<std::string> &serviceName, const Pistache::Optional<std::string> &propertyNames, const Pistache::Optional<int32_t> &distributionDelay, const Pistache::Optional<std::string> &serviceUserPeriodtarget, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="diffPath"> (optional)</param>
    /// <param name="serviceName"> (optional)</param>
    /// <param name="serviceUserPeriodtarget"> (optional)</param>
    virtual void com_adobe_granite_distribution_core_impl_diff_diff_event_listener(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &diffPath, const Pistache::Optional<std::string> &serviceName, const Pistache::Optional<std::string> &serviceUserPeriodtarget, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="importerPeriodname"> (optional)</param>
    virtual void com_adobe_granite_distribution_core_impl_distribution_to_replication_even(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &importerPeriodname, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="providerName"> (optional)</param>
    /// <param name="forwardPeriodrequests"> (optional)</param>
    virtual void com_adobe_granite_distribution_core_impl_replication_adapters_replicat(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &providerName, const Pistache::Optional<bool> &forwardPeriodrequests, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="forwardPeriodrequests"> (optional)</param>
    virtual void com_adobe_granite_distribution_core_impl_replication_distribution_trans(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<bool> &forwardPeriodrequests, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="name"> (optional)</param>
    /// <param name="serviceName"> (optional)</param>
    /// <param name="userId"> (optional)</param>
    /// <param name="accessTokenProviderPeriodtarget"> (optional)</param>
    virtual void com_adobe_granite_distribution_core_impl_transport_access_token_distribu(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &name, const Pistache::Optional<std::string> &serviceName, const Pistache::Optional<std::string> &userId, const Pistache::Optional<std::string> &accessTokenProviderPeriodtarget, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="featurePeriodname"> (optional)</param>
    /// <param name="featurePerioddescription"> (optional)</param>
    /// <param name="httpPeriodheaderPeriodname"> (optional)</param>
    /// <param name="httpPeriodheaderPeriodvaluepattern"> (optional)</param>
    virtual void com_adobe_granite_frags_impl_check_http_header_flag(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &featurePeriodname, const Pistache::Optional<std::string> &featurePerioddescription, const Pistache::Optional<std::string> &httpPeriodheaderPeriodname, const Pistache::Optional<std::string> &httpPeriodheaderPeriodvaluepattern, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="featurePeriodname"> (optional)</param>
    /// <param name="featurePerioddescription"> (optional)</param>
    /// <param name="activePeriodpercentage"> (optional)</param>
    /// <param name="cookiePeriodname"> (optional)</param>
    /// <param name="cookiePeriodmaxAge"> (optional)</param>
    virtual void com_adobe_granite_frags_impl_random_feature(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &featurePeriodname, const Pistache::Optional<std::string> &featurePerioddescription, const Pistache::Optional<std::string> &activePeriodpercentage, const Pistache::Optional<std::string> &cookiePeriodname, const Pistache::Optional<int32_t> &cookiePeriodmaxAge, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="comPeriodadobePeriodgranitePeriodhttpcachePeriodfilePerioddocumentRoot"> (optional)</param>
    /// <param name="comPeriodadobePeriodgranitePeriodhttpcachePeriodfilePeriodincludeHost"> (optional)</param>
    virtual void com_adobe_granite_httpcache_file_file_cache_store(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &comPeriodadobePeriodgranitePeriodhttpcachePeriodfilePerioddocumentRoot, const Pistache::Optional<std::string> &comPeriodadobePeriodgranitePeriodhttpcachePeriodfilePeriodincludeHost, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="comPeriodadobePeriodgranitePeriodhttpcachePeriodurlPeriodpaths"> (optional)</param>
    virtual void com_adobe_granite_httpcache_impl_outer_cache_filter(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &comPeriodadobePeriodgranitePeriodhttpcachePeriodurlPeriodpaths, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="pseudoPeriodpatterns"> (optional)</param>
    virtual void com_adobe_granite_i18n_impl_bundle_pseudo_translations(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &pseudoPeriodpatterns, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="securityPeriodpreferencesPeriodname"> (optional)</param>
    virtual void com_adobe_granite_i18n_impl_preferences_locale_resolver_service(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &securityPeriodpreferencesPeriodname, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="granitePeriodinfocollectorPeriodincludeThreadDumps"> (optional)</param>
    /// <param name="granitePeriodinfocollectorPeriodincludeHeapDump"> (optional)</param>
    virtual void com_adobe_granite_infocollector_info_collector(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<bool> &granitePeriodinfocollectorPeriodincludeThreadDumps, const Pistache::Optional<bool> &granitePeriodinfocollectorPeriodincludeHeapDump, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="comPeriodadobePeriodgranitePeriodjettyPeriodsslPeriodport"> (optional)</param>
    /// <param name="comPeriodadobePeriodgranitePeriodjettyPeriodsslPeriodkeystorePerioduser"> (optional)</param>
    /// <param name="comPeriodadobePeriodgranitePeriodjettyPeriodsslPeriodkeystorePeriodpassword"> (optional)</param>
    /// <param name="comPeriodadobePeriodgranitePeriodjettyPeriodsslPeriodciphersuitesPeriodexcluded"> (optional)</param>
    /// <param name="comPeriodadobePeriodgranitePeriodjettyPeriodsslPeriodciphersuitesPeriodincluded"> (optional)</param>
    /// <param name="comPeriodadobePeriodgranitePeriodjettyPeriodsslPeriodclientPeriodcertificate"> (optional)</param>
    virtual void com_adobe_granite_jetty_ssl_internal_granite_ssl_connector_factory(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<int32_t> &comPeriodadobePeriodgranitePeriodjettyPeriodsslPeriodport, const Pistache::Optional<std::string> &comPeriodadobePeriodgranitePeriodjettyPeriodsslPeriodkeystorePerioduser, const Pistache::Optional<std::string> &comPeriodadobePeriodgranitePeriodjettyPeriodsslPeriodkeystorePeriodpassword, const Pistache::Optional<std::string> &comPeriodadobePeriodgranitePeriodjettyPeriodsslPeriodciphersuitesPeriodexcluded, const Pistache::Optional<std::string> &comPeriodadobePeriodgranitePeriodjettyPeriodsslPeriodciphersuitesPeriodincluded, const Pistache::Optional<std::string> &comPeriodadobePeriodgranitePeriodjettyPeriodsslPeriodclientPeriodcertificate, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="checkInternval"> (optional)</param>
    /// <param name="excludeIds"> (optional)</param>
    /// <param name="encryptPing"> (optional)</param>
    virtual void com_adobe_granite_license_impl_license_check_filter(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<int32_t> &checkInternval, const Pistache::Optional<std::string> &excludeIds, const Pistache::Optional<bool> &encryptPing, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="messagesPeriodqueuePeriodsize"> (optional)</param>
    /// <param name="loggerPeriodconfig"> (optional)</param>
    /// <param name="messagesPeriodsize"> (optional)</param>
    virtual void com_adobe_granite_logging_impl_log_analyser_impl(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<int32_t> &messagesPeriodqueuePeriodsize, const Pistache::Optional<std::string> &loggerPeriodconfig, const Pistache::Optional<int32_t> &messagesPeriodsize, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="hcPeriodtags"> (optional)</param>
    virtual void com_adobe_granite_logging_impl_log_error_health_check(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &hcPeriodtags, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="granitePeriodmaintenancePeriodmandatory"> (optional)</param>
    /// <param name="jobPeriodtopics"> (optional)</param>
    virtual void com_adobe_granite_maintenance_crx_impl_data_store_garbage_collection_task(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<bool> &granitePeriodmaintenancePeriodmandatory, const Pistache::Optional<std::string> &jobPeriodtopics, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="jobPeriodtopics"> (optional)</param>
    virtual void com_adobe_granite_maintenance_crx_impl_lucene_binaries_cleanup_task(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &jobPeriodtopics, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="fullPeriodgcPerioddays"> (optional)</param>
    virtual void com_adobe_granite_maintenance_crx_impl_revision_cleanup_task(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &fullPeriodgcPerioddays, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="scriptPeriodfilename"> (optional)</param>
    /// <param name="scriptPerioddisplay"> (optional)</param>
    /// <param name="scriptPeriodpath"> (optional)</param>
    /// <param name="scriptPeriodplatform"> (optional)</param>
    /// <param name="interval"> (optional)</param>
    /// <param name="jmxdomain"> (optional)</param>
    virtual void com_adobe_granite_monitoring_impl_script_config_impl(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &scriptPeriodfilename, const Pistache::Optional<std::string> &scriptPerioddisplay, const Pistache::Optional<std::string> &scriptPeriodpath, const Pistache::Optional<std::string> &scriptPeriodplatform, const Pistache::Optional<int32_t> &interval, const Pistache::Optional<std::string> &jmxdomain, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="path"> (optional)</param>
    /// <param name="jaasPeriodcontrolFlag"> (optional)</param>
    /// <param name="jaasPeriodrealmName"> (optional)</param>
    /// <param name="jaasPeriodranking"> (optional)</param>
    /// <param name="oauthPeriodofflinePeriodvalidation"> (optional)</param>
    virtual void com_adobe_granite_oauth_server_auth_impl_o_auth2_server_authentication_han(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &path, const Pistache::Optional<std::string> &jaasPeriodcontrolFlag, const Pistache::Optional<std::string> &jaasPeriodrealmName, const Pistache::Optional<int32_t> &jaasPeriodranking, const Pistache::Optional<bool> &oauthPeriodofflinePeriodvalidation, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="schedulerPeriodexpression"> (optional)</param>
    virtual void com_adobe_granite_oauth_server_impl_access_token_cleanup_task(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &schedulerPeriodexpression, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="oauthPeriodclientPeriodrevocationPeriodactive"> (optional)</param>
    virtual void com_adobe_granite_oauth_server_impl_o_auth2_client_revocation_servlet(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<bool> &oauthPeriodclientPeriodrevocationPeriodactive, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="slingPeriodservletPeriodpaths"> (optional)</param>
    /// <param name="oauthPeriodrevocationPeriodactive"> (optional)</param>
    virtual void com_adobe_granite_oauth_server_impl_o_auth2_revocation_endpoint_servlet(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &slingPeriodservletPeriodpaths, const Pistache::Optional<bool> &oauthPeriodrevocationPeriodactive, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="oauthPeriodissuer"> (optional)</param>
    /// <param name="oauthPeriodaccessPeriodtokenPeriodexpiresPeriodin"> (optional)</param>
    /// <param name="osgiPeriodhttpPeriodwhiteboardPeriodservletPeriodpattern"> (optional)</param>
    /// <param name="osgiPeriodhttpPeriodwhiteboardPeriodcontextPeriodselect"> (optional)</param>
    virtual void com_adobe_granite_oauth_server_impl_o_auth2_token_endpoint_servlet(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &oauthPeriodissuer, const Pistache::Optional<std::string> &oauthPeriodaccessPeriodtokenPeriodexpiresPeriodin, const Pistache::Optional<std::string> &osgiPeriodhttpPeriodwhiteboardPeriodservletPeriodpattern, const Pistache::Optional<std::string> &osgiPeriodhttpPeriodwhiteboardPeriodcontextPeriodselect, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="oauthPeriodtokenPeriodrevocationPeriodactive"> (optional)</param>
    virtual void com_adobe_granite_oauth_server_impl_o_auth2_token_revocation_servlet(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<bool> &oauthPeriodtokenPeriodrevocationPeriodactive, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="offloadingPeriodtransporter"> (optional)</param>
    /// <param name="offloadingPeriodcleanupPeriodpayload"> (optional)</param>
    virtual void com_adobe_granite_offloading_impl_offloading_configurator(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &offloadingPeriodtransporter, const Pistache::Optional<bool> &offloadingPeriodcleanupPeriodpayload, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="offloadingPeriodjobclonerPeriodenabled"> (optional)</param>
    virtual void com_adobe_granite_offloading_impl_offloading_job_cloner(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<bool> &offloadingPeriodjobclonerPeriodenabled, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="offloadingPeriodoffloaderPeriodenabled"> (optional)</param>
    virtual void com_adobe_granite_offloading_impl_offloading_job_offloader(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<bool> &offloadingPeriodoffloaderPeriodenabled, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="offloadingPeriodagentmanagerPeriodenabled"> (optional)</param>
    virtual void com_adobe_granite_offloading_impl_transporter_offloading_agent_manager(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<bool> &offloadingPeriodagentmanagerPeriodenabled, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="defaultPeriodtransportPeriodagentToWorkerPeriodprefix"> (optional)</param>
    /// <param name="defaultPeriodtransportPeriodagentToMasterPeriodprefix"> (optional)</param>
    /// <param name="defaultPeriodtransportPeriodinputPeriodpackage"> (optional)</param>
    /// <param name="defaultPeriodtransportPeriodoutputPeriodpackage"> (optional)</param>
    /// <param name="defaultPeriodtransportPeriodreplicationPeriodsynchronous"> (optional)</param>
    /// <param name="defaultPeriodtransportPeriodcontentpackage"> (optional)</param>
    /// <param name="offloadingPeriodtransporterPerioddefaultPeriodenabled"> (optional)</param>
    virtual void com_adobe_granite_offloading_impl_transporter_offloading_default_transpo(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &defaultPeriodtransportPeriodagentToWorkerPeriodprefix, const Pistache::Optional<std::string> &defaultPeriodtransportPeriodagentToMasterPeriodprefix, const Pistache::Optional<std::string> &defaultPeriodtransportPeriodinputPeriodpackage, const Pistache::Optional<std::string> &defaultPeriodtransportPeriodoutputPeriodpackage, const Pistache::Optional<bool> &defaultPeriodtransportPeriodreplicationPeriodsynchronous, const Pistache::Optional<bool> &defaultPeriodtransportPeriodcontentpackage, const Pistache::Optional<bool> &offloadingPeriodtransporterPerioddefaultPeriodenabled, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="omnisearchPeriodsuggestionPeriodrequiretextPeriodmin"> (optional)</param>
    /// <param name="omnisearchPeriodsuggestionPeriodspellcheckPeriodrequire"> (optional)</param>
    virtual void com_adobe_granite_omnisearch_impl_core_omni_search_service_impl(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<int32_t> &omnisearchPeriodsuggestionPeriodrequiretextPeriodmin, const Pistache::Optional<bool> &omnisearchPeriodsuggestionPeriodspellcheckPeriodrequire, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="optoutPeriodcookies"> (optional)</param>
    /// <param name="optoutPeriodheaders"> (optional)</param>
    /// <param name="optoutPeriodwhitelistPeriodcookies"> (optional)</param>
    virtual void com_adobe_granite_optout_impl_opt_out_service_impl(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &optoutPeriodcookies, const Pistache::Optional<std::string> &optoutPeriodheaders, const Pistache::Optional<std::string> &optoutPeriodwhitelistPeriodcookies, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="indexingPeriodcriticalPeriodthreshold"> (optional)</param>
    /// <param name="indexingPeriodwarnPeriodthreshold"> (optional)</param>
    /// <param name="hcPeriodtags"> (optional)</param>
    virtual void com_adobe_granite_queries_impl_hc_async_index_health_check(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<int32_t> &indexingPeriodcriticalPeriodthreshold, const Pistache::Optional<int32_t> &indexingPeriodwarnPeriodthreshold, const Pistache::Optional<std::string> &hcPeriodtags, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="largePeriodindexPeriodcriticalPeriodthreshold"> (optional)</param>
    /// <param name="largePeriodindexPeriodwarnPeriodthreshold"> (optional)</param>
    /// <param name="hcPeriodtags"> (optional)</param>
    virtual void com_adobe_granite_queries_impl_hc_large_index_health_check(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<int32_t> &largePeriodindexPeriodcriticalPeriodthreshold, const Pistache::Optional<int32_t> &largePeriodindexPeriodwarnPeriodthreshold, const Pistache::Optional<std::string> &hcPeriodtags, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="hcPeriodtags"> (optional)</param>
    virtual void com_adobe_granite_queries_impl_hc_queries_status_health_check(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &hcPeriodtags, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="getPeriod"> (optional)</param>
    virtual void com_adobe_granite_queries_impl_hc_query_health_check_metrics(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<int32_t> &getPeriod, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="hcPeriodtags"> (optional)</param>
    virtual void com_adobe_granite_queries_impl_hc_query_limits_health_check(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &hcPeriodtags, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="numberPeriodofPeriodretriesPeriodallowed"> (optional)</param>
    /// <param name="hcPeriodtags"> (optional)</param>
    virtual void com_adobe_granite_replication_hc_impl_replication_queue_health_check(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<int32_t> &numberPeriodofPeriodretriesPeriodallowed, const Pistache::Optional<std::string> &hcPeriodtags, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="hcPeriodtags"> (optional)</param>
    virtual void com_adobe_granite_replication_hc_impl_replication_transport_users_health_c(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &hcPeriodtags, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="hcPeriodtags"> (optional)</param>
    virtual void com_adobe_granite_repository_hc_impl_authorizable_node_name_health_check(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &hcPeriodtags, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="hcPeriodtags"> (optional)</param>
    /// <param name="excludePeriodsearchPeriodpath"> (optional)</param>
    virtual void com_adobe_granite_repository_hc_impl_content_sling_sling_content_health_c(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &hcPeriodtags, const Pistache::Optional<std::string> &excludePeriodsearchPeriodpath, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="hcPeriodtags"> (optional)</param>
    virtual void com_adobe_granite_repository_hc_impl_continuous_rgc_health_check(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &hcPeriodtags, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="hcPeriodtags"> (optional)</param>
    virtual void com_adobe_granite_repository_hc_impl_default_access_user_profile_health_che(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &hcPeriodtags, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="hcPeriodtags"> (optional)</param>
    /// <param name="accountPeriodlogins"> (optional)</param>
    /// <param name="consolePeriodlogins"> (optional)</param>
    virtual void com_adobe_granite_repository_hc_impl_default_logins_health_check(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &hcPeriodtags, const Pistache::Optional<std::string> &accountPeriodlogins, const Pistache::Optional<std::string> &consolePeriodlogins, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="hcPeriodtags"> (optional)</param>
    /// <param name="diskPeriodspacePeriodwarnPeriodthreshold"> (optional)</param>
    /// <param name="diskPeriodspacePerioderrorPeriodthreshold"> (optional)</param>
    virtual void com_adobe_granite_repository_hc_impl_disk_space_health_check(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &hcPeriodtags, const Pistache::Optional<int32_t> &diskPeriodspacePeriodwarnPeriodthreshold, const Pistache::Optional<int32_t> &diskPeriodspacePerioderrorPeriodthreshold, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="hcPeriodtags"> (optional)</param>
    virtual void com_adobe_granite_repository_hc_impl_observation_queue_length_health_check(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &hcPeriodtags, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="enabled"> (optional)</param>
    /// <param name="intervalSeconds"> (optional)</param>
    /// <param name="commitsPerIntervalThreshold"> (optional)</param>
    /// <param name="maxLocationLength"> (optional)</param>
    /// <param name="maxDetailsShown"> (optional)</param>
    /// <param name="minDetailsPercentage"> (optional)</param>
    /// <param name="threadMatchers"> (optional)</param>
    /// <param name="maxGreedyDepth"> (optional)</param>
    /// <param name="greedyStackMatchers"> (optional)</param>
    /// <param name="stackFilters"> (optional)</param>
    /// <param name="stackMatchers"> (optional)</param>
    /// <param name="stackCategorizers"> (optional)</param>
    /// <param name="stackShorteners"> (optional)</param>
    virtual void com_adobe_granite_repository_impl_commit_stats_config(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<bool> &enabled, const Pistache::Optional<int32_t> &intervalSeconds, const Pistache::Optional<int32_t> &commitsPerIntervalThreshold, const Pistache::Optional<int32_t> &maxLocationLength, const Pistache::Optional<int32_t> &maxDetailsShown, const Pistache::Optional<int32_t> &minDetailsPercentage, const Pistache::Optional<std::string> &threadMatchers, const Pistache::Optional<int32_t> &maxGreedyDepth, const Pistache::Optional<std::string> &greedyStackMatchers, const Pistache::Optional<std::string> &stackFilters, const Pistache::Optional<std::string> &stackMatchers, const Pistache::Optional<std::string> &stackCategorizers, const Pistache::Optional<std::string> &stackShorteners, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="servicePeriodranking"> (optional)</param>
    /// <param name="serviceusersPeriodsimpleSubjectPopulation"> (optional)</param>
    /// <param name="serviceusersPeriodlist"> (optional)</param>
    virtual void com_adobe_granite_repository_service_user_configuration(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<int32_t> &servicePeriodranking, const Pistache::Optional<bool> &serviceusersPeriodsimpleSubjectPopulation, const Pistache::Optional<std::string> &serviceusersPeriodlist, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="hcPeriodtags"> (optional)</param>
    virtual void com_adobe_granite_requests_logging_impl_hc_requests_status_health_check_im(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &hcPeriodtags, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="name"> (optional)</param>
    /// <param name="types"> (optional)</param>
    virtual void com_adobe_granite_resourcestatus_impl_composite_status_type(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &name, const Pistache::Optional<std::string> &types, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="providerPeriodroot"> (optional)</param>
    virtual void com_adobe_granite_resourcestatus_impl_status_resource_provider_impl(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &providerPeriodroot, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="mimePeriodallowEmpty"> (optional)</param>
    /// <param name="mimePeriodallowed"> (optional)</param>
    virtual void com_adobe_granite_rest_assets_impl_asset_content_disposition_filter(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<bool> &mimePeriodallowEmpty, const Pistache::Optional<std::string> &mimePeriodallowed, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="providerPeriodroots"> (optional)</param>
    virtual void com_adobe_granite_rest_impl_api_endpoint_resource_provider_factory_impl(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &providerPeriodroots, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="defaultPeriodlimit"> (optional)</param>
    /// <param name="usePeriodabsolutePerioduri"> (optional)</param>
    virtual void com_adobe_granite_rest_impl_servlet_default_get_servlet(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<int32_t> &defaultPeriodlimit, const Pistache::Optional<bool> &usePeriodabsolutePerioduri, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="hcPeriodtags"> (optional)</param>
    virtual void com_adobe_granite_security_user_ui_internal_servlets_ssl_configuration_s(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &hcPeriodtags, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="adapterPeriodcondition"> (optional)</param>
    /// <param name="granitePerioduserpropertiesPeriodnodetypes"> (optional)</param>
    /// <param name="granitePerioduserpropertiesPeriodresourcetypes"> (optional)</param>
    virtual void com_adobe_granite_security_user_user_properties_service(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &adapterPeriodcondition, const Pistache::Optional<std::string> &granitePerioduserpropertiesPeriodnodetypes, const Pistache::Optional<std::string> &granitePerioduserpropertiesPeriodresourcetypes, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="group2memberPeriodrelationshipPeriodoutgoing"> (optional)</param>
    /// <param name="group2memberPeriodexcludedPeriodoutgoing"> (optional)</param>
    /// <param name="group2memberPeriodrelationshipPeriodincoming"> (optional)</param>
    /// <param name="group2memberPeriodexcludedPeriodincoming"> (optional)</param>
    virtual void com_adobe_granite_socialgraph_impl_social_graph_factory_impl(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &group2memberPeriodrelationshipPeriodoutgoing, const Pistache::Optional<std::string> &group2memberPeriodexcludedPeriodoutgoing, const Pistache::Optional<std::string> &group2memberPeriodrelationshipPeriodincoming, const Pistache::Optional<std::string> &group2memberPeriodexcludedPeriodincoming, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="schedulerPeriodexpression"> (optional)</param>
    /// <param name="jmxPeriodobjectname"> (optional)</param>
    virtual void com_adobe_granite_system_monitoring_impl_system_stats_m_bean_impl(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &schedulerPeriodexpression, const Pistache::Optional<std::string> &jmxPeriodobjectname, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="adapterPeriodcondition"> (optional)</param>
    virtual void com_adobe_granite_taskmanagement_impl_jcr_task_adapter_factory(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &adapterPeriodcondition, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="archivingPeriodenabled"> (optional)</param>
    /// <param name="schedulerPeriodexpression"> (optional)</param>
    /// <param name="archivePeriodsincePerioddaysPeriodcompleted"> (optional)</param>
    virtual void com_adobe_granite_taskmanagement_impl_jcr_task_archive_service(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<bool> &archivingPeriodenabled, const Pistache::Optional<std::string> &schedulerPeriodexpression, const Pistache::Optional<int32_t> &archivePeriodsincePerioddaysPeriodcompleted, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="purgeCompleted"> (optional)</param>
    /// <param name="completedAge"> (optional)</param>
    /// <param name="purgeActive"> (optional)</param>
    /// <param name="activeAge"> (optional)</param>
    /// <param name="saveThreshold"> (optional)</param>
    virtual void com_adobe_granite_taskmanagement_impl_purge_task_purge_maintenance_task(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<bool> &purgeCompleted, const Pistache::Optional<int32_t> &completedAge, const Pistache::Optional<bool> &purgeActive, const Pistache::Optional<int32_t> &activeAge, const Pistache::Optional<int32_t> &saveThreshold, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="adapterPeriodcondition"> (optional)</param>
    /// <param name="taskmanagerPeriodadmingroups"> (optional)</param>
    virtual void com_adobe_granite_taskmanagement_impl_service_task_manager_adapter_factor(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &adapterPeriodcondition, const Pistache::Optional<std::string> &taskmanagerPeriodadmingroups, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="schedulerPeriodperiod"> (optional)</param>
    /// <param name="schedulerPeriodrunOn"> (optional)</param>
    /// <param name="granitePeriodthreaddumpPeriodenabled"> (optional)</param>
    /// <param name="granitePeriodthreaddumpPerioddumpsPerFile"> (optional)</param>
    /// <param name="granitePeriodthreaddumpPeriodenableGzipCompression"> (optional)</param>
    /// <param name="granitePeriodthreaddumpPeriodenableDirectoriesCompression"> (optional)</param>
    /// <param name="granitePeriodthreaddumpPeriodenableJStack"> (optional)</param>
    /// <param name="granitePeriodthreaddumpPeriodmaxBackupDays"> (optional)</param>
    /// <param name="granitePeriodthreaddumpPeriodbackupCleanTrigger"> (optional)</param>
    virtual void com_adobe_granite_threaddump_thread_dump_collector(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<int32_t> &schedulerPeriodperiod, const Pistache::Optional<std::string> &schedulerPeriodrunOn, const Pistache::Optional<bool> &granitePeriodthreaddumpPeriodenabled, const Pistache::Optional<int32_t> &granitePeriodthreaddumpPerioddumpsPerFile, const Pistache::Optional<bool> &granitePeriodthreaddumpPeriodenableGzipCompression, const Pistache::Optional<bool> &granitePeriodthreaddumpPeriodenableDirectoriesCompression, const Pistache::Optional<bool> &granitePeriodthreaddumpPeriodenableJStack, const Pistache::Optional<int32_t> &granitePeriodthreaddumpPeriodmaxBackupDays, const Pistache::Optional<std::string> &granitePeriodthreaddumpPeriodbackupCleanTrigger, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="translationFactory"> (optional)</param>
    /// <param name="defaultConnectorLabel"> (optional)</param>
    /// <param name="defaultConnectorAttribution"> (optional)</param>
    /// <param name="defaultConnectorWorkspaceId"> (optional)</param>
    /// <param name="defaultConnectorSubscriptionKey"> (optional)</param>
    /// <param name="languageMapLocation"> (optional)</param>
    /// <param name="categoryMapLocation"> (optional)</param>
    /// <param name="retryAttempts"> (optional)</param>
    /// <param name="timeoutCount"> (optional)</param>
    virtual void com_adobe_granite_translation_connector_msft_core_impl_microsoft_transl(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &translationFactory, const Pistache::Optional<std::string> &defaultConnectorLabel, const Pistache::Optional<std::string> &defaultConnectorAttribution, const Pistache::Optional<std::string> &defaultConnectorWorkspaceId, const Pistache::Optional<std::string> &defaultConnectorSubscriptionKey, const Pistache::Optional<std::string> &languageMapLocation, const Pistache::Optional<std::string> &categoryMapLocation, const Pistache::Optional<int32_t> &retryAttempts, const Pistache::Optional<int32_t> &timeoutCount, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="defaultConnectorName"> (optional)</param>
    /// <param name="defaultCategory"> (optional)</param>
    virtual void com_adobe_granite_translation_core_impl_translation_manager_impl(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &defaultConnectorName, const Pistache::Optional<std::string> &defaultCategory, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="htmllibmanagerPeriodtiming"> (optional)</param>
    /// <param name="htmllibmanagerPerioddebugPeriodinitPeriodjs"> (optional)</param>
    /// <param name="htmllibmanagerPeriodminify"> (optional)</param>
    /// <param name="htmllibmanagerPerioddebug"> (optional)</param>
    /// <param name="htmllibmanagerPeriodgzip"> (optional)</param>
    /// <param name="htmllibmanagerPeriodmaxDataUriSize"> (optional)</param>
    /// <param name="htmllibmanagerPeriodmaxage"> (optional)</param>
    /// <param name="htmllibmanagerPeriodforceCQUrlInfo"> (optional)</param>
    /// <param name="htmllibmanagerPerioddefaultthemename"> (optional)</param>
    /// <param name="htmllibmanagerPerioddefaultuserthemename"> (optional)</param>
    /// <param name="htmllibmanagerPeriodclientmanager"> (optional)</param>
    /// <param name="htmllibmanagerPeriodpathPeriodlist"> (optional)</param>
    /// <param name="htmllibmanagerPeriodexcludedPeriodpathPeriodlist"> (optional)</param>
    /// <param name="htmllibmanagerPeriodprocessorPeriodjs"> (optional)</param>
    /// <param name="htmllibmanagerPeriodprocessorPeriodcss"> (optional)</param>
    /// <param name="htmllibmanagerPeriodlongcachePeriodpatterns"> (optional)</param>
    /// <param name="htmllibmanagerPeriodlongcachePeriodformat"> (optional)</param>
    /// <param name="htmllibmanagerPerioduseFileSystemOutputCache"> (optional)</param>
    /// <param name="htmllibmanagerPeriodfileSystemOutputCacheLocation"> (optional)</param>
    /// <param name="htmllibmanagerPerioddisablePeriodreplacement"> (optional)</param>
    virtual void com_adobe_granite_ui_clientlibs_impl_html_library_manager_impl(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<bool> &htmllibmanagerPeriodtiming, const Pistache::Optional<std::string> &htmllibmanagerPerioddebugPeriodinitPeriodjs, const Pistache::Optional<bool> &htmllibmanagerPeriodminify, const Pistache::Optional<bool> &htmllibmanagerPerioddebug, const Pistache::Optional<bool> &htmllibmanagerPeriodgzip, const Pistache::Optional<int32_t> &htmllibmanagerPeriodmaxDataUriSize, const Pistache::Optional<int32_t> &htmllibmanagerPeriodmaxage, const Pistache::Optional<bool> &htmllibmanagerPeriodforceCQUrlInfo, const Pistache::Optional<std::string> &htmllibmanagerPerioddefaultthemename, const Pistache::Optional<std::string> &htmllibmanagerPerioddefaultuserthemename, const Pistache::Optional<std::string> &htmllibmanagerPeriodclientmanager, const Pistache::Optional<std::string> &htmllibmanagerPeriodpathPeriodlist, const Pistache::Optional<std::string> &htmllibmanagerPeriodexcludedPeriodpathPeriodlist, const Pistache::Optional<std::string> &htmllibmanagerPeriodprocessorPeriodjs, const Pistache::Optional<std::string> &htmllibmanagerPeriodprocessorPeriodcss, const Pistache::Optional<std::string> &htmllibmanagerPeriodlongcachePeriodpatterns, const Pistache::Optional<std::string> &htmllibmanagerPeriodlongcachePeriodformat, const Pistache::Optional<bool> &htmllibmanagerPerioduseFileSystemOutputCache, const Pistache::Optional<std::string> &htmllibmanagerPeriodfileSystemOutputCacheLocation, const Pistache::Optional<std::string> &htmllibmanagerPerioddisablePeriodreplacement, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="enabled"> (optional)</param>
    virtual void com_adobe_granite_workflow_console_frags_workflow_withdraw_feature(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<bool> &enabled, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="granitePeriodworkflowPeriodWorkflowPublishEventServicePeriodenabled"> (optional)</param>
    virtual void com_adobe_granite_workflow_console_publish_workflow_publish_event_service(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<bool> &granitePeriodworkflowPeriodWorkflowPublishEventServicePeriodenabled, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="bucketSize"> (optional)</param>
    virtual void com_adobe_granite_workflow_core_jcr_workflow_bucket_manager(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<int32_t> &bucketSize, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="defaultPeriodtimeout"> (optional)</param>
    /// <param name="maxPeriodtimeout"> (optional)</param>
    /// <param name="defaultPeriodperiod"> (optional)</param>
    virtual void com_adobe_granite_workflow_core_job_external_process_job_handler(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<int32_t> &defaultPeriodtimeout, const Pistache::Optional<int32_t> &maxPeriodtimeout, const Pistache::Optional<int32_t> &defaultPeriodperiod, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="jobPeriodtopics"> (optional)</param>
    /// <param name="allowPeriodselfPeriodprocessPeriodtermination"> (optional)</param>
    virtual void com_adobe_granite_workflow_core_job_job_handler(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &jobPeriodtopics, const Pistache::Optional<bool> &allowPeriodselfPeriodprocessPeriodtermination, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="jobPeriodtopics"> (optional)</param>
    virtual void com_adobe_granite_workflow_core_offloading_workflow_offloading_job_consum(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &jobPeriodtopics, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="getSystemWorkflowModels"> (optional)</param>
    /// <param name="getPackageRootPath"> (optional)</param>
    virtual void com_adobe_granite_workflow_core_payload_map_cache(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &getSystemWorkflowModels, const Pistache::Optional<std::string> &getPackageRootPath, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="payloadPeriodmovePeriodwhitePeriodlist"> (optional)</param>
    /// <param name="payloadPeriodmovePeriodhandlePeriodfromPeriodworkflowPeriodprocess"> (optional)</param>
    virtual void com_adobe_granite_workflow_core_payloadmap_payload_move_listener(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &payloadPeriodmovePeriodwhitePeriodlist, const Pistache::Optional<bool> &payloadPeriodmovePeriodhandlePeriodfromPeriodworkflowPeriodprocess, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="cqPeriodworkflowPeriodconfigPeriodworkflowPeriodpackagesPeriodrootPeriodpath"> (optional)</param>
    /// <param name="cqPeriodworkflowPeriodconfigPeriodworkflowPeriodprocessPeriodlegacyPeriodmode"> (optional)</param>
    /// <param name="cqPeriodworkflowPeriodconfigPeriodallowPeriodlocking"> (optional)</param>
    virtual void com_adobe_granite_workflow_core_workflow_config(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &cqPeriodworkflowPeriodconfigPeriodworkflowPeriodpackagesPeriodrootPeriodpath, const Pistache::Optional<bool> &cqPeriodworkflowPeriodconfigPeriodworkflowPeriodprocessPeriodlegacyPeriodmode, const Pistache::Optional<bool> &cqPeriodworkflowPeriodconfigPeriodallowPeriodlocking, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="granitePeriodworkflowinboxPeriodsortPeriodpropertyName"> (optional)</param>
    /// <param name="granitePeriodworkflowinboxPeriodsortPeriodorder"> (optional)</param>
    /// <param name="cqPeriodworkflowPeriodjobPeriodretry"> (optional)</param>
    /// <param name="cqPeriodworkflowPeriodsuperuser"> (optional)</param>
    /// <param name="granitePeriodworkflowPeriodinboxQuerySize"> (optional)</param>
    /// <param name="granitePeriodworkflowPeriodadminUserGroupFilter"> (optional)</param>
    /// <param name="granitePeriodworkflowPeriodenforceWorkitemAssigneePermissions"> (optional)</param>
    /// <param name="granitePeriodworkflowPeriodenforceWorkflowInitiatorPermissions"> (optional)</param>
    /// <param name="granitePeriodworkflowPeriodinjectTenantIdInJobTopics"> (optional)</param>
    /// <param name="granitePeriodworkflowPeriodmaxPurgeSaveThreshold"> (optional)</param>
    /// <param name="granitePeriodworkflowPeriodmaxPurgeQueryCount"> (optional)</param>
    virtual void com_adobe_granite_workflow_core_workflow_session_factory(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &granitePeriodworkflowinboxPeriodsortPeriodpropertyName, const Pistache::Optional<std::string> &granitePeriodworkflowinboxPeriodsortPeriodorder, const Pistache::Optional<int32_t> &cqPeriodworkflowPeriodjobPeriodretry, const Pistache::Optional<std::string> &cqPeriodworkflowPeriodsuperuser, const Pistache::Optional<int32_t> &granitePeriodworkflowPeriodinboxQuerySize, const Pistache::Optional<bool> &granitePeriodworkflowPeriodadminUserGroupFilter, const Pistache::Optional<bool> &granitePeriodworkflowPeriodenforceWorkitemAssigneePermissions, const Pistache::Optional<bool> &granitePeriodworkflowPeriodenforceWorkflowInitiatorPermissions, const Pistache::Optional<bool> &granitePeriodworkflowPeriodinjectTenantIdInJobTopics, const Pistache::Optional<int32_t> &granitePeriodworkflowPeriodmaxPurgeSaveThreshold, const Pistache::Optional<int32_t> &granitePeriodworkflowPeriodmaxPurgeQueryCount, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="scheduledpurgePeriodname"> (optional)</param>
    /// <param name="scheduledpurgePeriodworkflowStatus"> (optional)</param>
    /// <param name="scheduledpurgePeriodmodelIds"> (optional)</param>
    /// <param name="scheduledpurgePerioddaysold"> (optional)</param>
    virtual void com_adobe_granite_workflow_purge_scheduler(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &scheduledpurgePeriodname, const Pistache::Optional<std::string> &scheduledpurgePeriodworkflowStatus, const Pistache::Optional<std::string> &scheduledpurgePeriodmodelIds, const Pistache::Optional<int32_t> &scheduledpurgePerioddaysold, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="maxConnections"> (optional)</param>
    /// <param name="maxRequests"> (optional)</param>
    /// <param name="requestTimeout"> (optional)</param>
    /// <param name="requestRetries"> (optional)</param>
    /// <param name="launchTimeout"> (optional)</param>
    virtual void com_adobe_octopus_ncomm_bootstrap(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<int32_t> &maxConnections, const Pistache::Optional<int32_t> &maxRequests, const Pistache::Optional<int32_t> &requestTimeout, const Pistache::Optional<int32_t> &requestRetries, const Pistache::Optional<int32_t> &launchTimeout, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="communitiesPeriodintegrationPeriodlivefyrePeriodslingPeriodeventPeriodfilter"> (optional)</param>
    virtual void com_adobe_social_integrations_livefyre_user_pingforpull_impl_ping_pull_s(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &communitiesPeriodintegrationPeriodlivefyrePeriodslingPeriodeventPeriodfilter, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="maxConnections"> (optional)</param>
    /// <param name="maxRequests"> (optional)</param>
    /// <param name="requestTimeout"> (optional)</param>
    /// <param name="logDir"> (optional)</param>
    virtual void com_adobe_xmp_worker_files_ncomm_xmp_files_n_comm(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &maxConnections, const Pistache::Optional<std::string> &maxRequests, const Pistache::Optional<std::string> &requestTimeout, const Pistache::Optional<std::string> &logDir, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="jdbcPerioddriverPeriodclass"> (optional)</param>
    /// <param name="jdbcPeriodconnectionPerioduri"> (optional)</param>
    /// <param name="jdbcPeriodusername"> (optional)</param>
    /// <param name="jdbcPeriodpassword"> (optional)</param>
    /// <param name="jdbcPeriodvalidationPeriodquery"> (optional)</param>
    /// <param name="defaultPeriodreadonly"> (optional)</param>
    /// <param name="defaultPeriodautocommit"> (optional)</param>
    /// <param name="poolPeriodsize"> (optional)</param>
    /// <param name="poolPeriodmaxPeriodwaitPeriodmsec"> (optional)</param>
    /// <param name="datasourcePeriodname"> (optional)</param>
    /// <param name="datasourcePeriodsvcPeriodproperties"> (optional)</param>
    virtual void com_day_commons_datasource_jdbcpool_jdbc_pool_service(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &jdbcPerioddriverPeriodclass, const Pistache::Optional<std::string> &jdbcPeriodconnectionPerioduri, const Pistache::Optional<std::string> &jdbcPeriodusername, const Pistache::Optional<std::string> &jdbcPeriodpassword, const Pistache::Optional<std::string> &jdbcPeriodvalidationPeriodquery, const Pistache::Optional<bool> &defaultPeriodreadonly, const Pistache::Optional<bool> &defaultPeriodautocommit, const Pistache::Optional<int32_t> &poolPeriodsize, const Pistache::Optional<int32_t> &poolPeriodmaxPeriodwaitPeriodmsec, const Pistache::Optional<std::string> &datasourcePeriodname, const Pistache::Optional<std::string> &datasourcePeriodsvcPeriodproperties, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="proxyPeriodenabled"> (optional)</param>
    /// <param name="proxyPeriodhost"> (optional)</param>
    /// <param name="proxyPerioduser"> (optional)</param>
    /// <param name="proxyPeriodpassword"> (optional)</param>
    /// <param name="proxyPeriodntlmPeriodhost"> (optional)</param>
    /// <param name="proxyPeriodntlmPerioddomain"> (optional)</param>
    /// <param name="proxyPeriodexceptions"> (optional)</param>
    virtual void com_day_commons_httpclient(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<bool> &proxyPeriodenabled, const Pistache::Optional<std::string> &proxyPeriodhost, const Pistache::Optional<std::string> &proxyPerioduser, const Pistache::Optional<std::string> &proxyPeriodpassword, const Pistache::Optional<std::string> &proxyPeriodntlmPeriodhost, const Pistache::Optional<std::string> &proxyPeriodntlmPerioddomain, const Pistache::Optional<std::string> &proxyPeriodexceptions, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="cqPeriodstorePeriodlistenerPeriodadditionalStorePaths"> (optional)</param>
    virtual void com_day_cq_analytics_impl_store_properties_change_listener(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &cqPeriodstorePeriodlistenerPeriodadditionalStorePaths, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="allowedPeriodpaths"> (optional)</param>
    /// <param name="cqPeriodanalyticsPeriodsaintPeriodexporterPeriodpagesize"> (optional)</param>
    virtual void com_day_cq_analytics_sitecatalyst_impl_exporter_classifications_exporte(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &allowedPeriodpaths, const Pistache::Optional<int32_t> &cqPeriodanalyticsPeriodsaintPeriodexporterPeriodpagesize, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="reportPeriodfetchPeriodattempts"> (optional)</param>
    /// <param name="reportPeriodfetchPerioddelay"> (optional)</param>
    virtual void com_day_cq_analytics_sitecatalyst_impl_importer_report_importer(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<int32_t> &reportPeriodfetchPeriodattempts, const Pistache::Optional<int32_t> &reportPeriodfetchPerioddelay, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="cqPeriodanalyticsPeriodadapterfactoryPeriodcontextstores"> (optional)</param>
    virtual void com_day_cq_analytics_sitecatalyst_impl_sitecatalyst_adapter_factory(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &cqPeriodanalyticsPeriodadapterfactoryPeriodcontextstores, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="cqPeriodanalyticsPeriodsitecatalystPeriodservicePerioddatacenterPeriodurl"> (optional)</param>
    /// <param name="devhostnamepatterns"> (optional)</param>
    /// <param name="connectionPeriodtimeout"> (optional)</param>
    /// <param name="socketPeriodtimeout"> (optional)</param>
    virtual void com_day_cq_analytics_sitecatalyst_impl_sitecatalyst_http_client_impl(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &cqPeriodanalyticsPeriodsitecatalystPeriodservicePerioddatacenterPeriodurl, const Pistache::Optional<std::string> &devhostnamepatterns, const Pistache::Optional<int32_t> &connectionPeriodtimeout, const Pistache::Optional<int32_t> &socketPeriodtimeout, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="cqPeriodanalyticsPeriodtestandtargetPeriodaccountoptionsupdaterPeriodenabled"> (optional)</param>
    virtual void com_day_cq_analytics_testandtarget_impl_account_options_updater(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<bool> &cqPeriodanalyticsPeriodtestandtargetPeriodaccountoptionsupdaterPeriodenabled, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="cqPeriodanalyticsPeriodtestandtargetPerioddeleteauthoractivitylistenerPeriodenabled"> (optional)</param>
    virtual void com_day_cq_analytics_testandtarget_impl_delete_author_activity_listener(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<bool> &cqPeriodanalyticsPeriodtestandtargetPerioddeleteauthoractivitylistenerPeriodenabled, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="cqPeriodanalyticsPeriodtestandtargetPeriodpushauthorcampaignpagelistenerPeriodenabled"> (optional)</param>
    virtual void com_day_cq_analytics_testandtarget_impl_push_author_campaign_page_listener(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<bool> &cqPeriodanalyticsPeriodtestandtargetPeriodpushauthorcampaignpagelistenerPeriodenabled, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="cqPeriodanalyticsPeriodtestandtargetPeriodsegmentimporterPeriodenabled"> (optional)</param>
    virtual void com_day_cq_analytics_testandtarget_impl_segment_importer(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<bool> &cqPeriodanalyticsPeriodtestandtargetPeriodsegmentimporterPeriodenabled, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="endpointUri"> (optional)</param>
    /// <param name="connectionTimeout"> (optional)</param>
    /// <param name="socketTimeout"> (optional)</param>
    virtual void com_day_cq_analytics_testandtarget_impl_service_web_service_impl(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &endpointUri, const Pistache::Optional<int32_t> &connectionTimeout, const Pistache::Optional<int32_t> &socketTimeout, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="testandtargetPeriodendpointPeriodurl"> (optional)</param>
    virtual void com_day_cq_analytics_testandtarget_impl_servlets_admin_server_servlet(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &testandtargetPeriodendpointPeriodurl, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="cqPeriodanalyticsPeriodtestandtargetPeriodapiPeriodurl"> (optional)</param>
    /// <param name="cqPeriodanalyticsPeriodtestandtargetPeriodtimeout"> (optional)</param>
    /// <param name="cqPeriodanalyticsPeriodtestandtargetPeriodsockettimeout"> (optional)</param>
    /// <param name="cqPeriodanalyticsPeriodtestandtargetPeriodrecommendationsPeriodurlPeriodreplace"> (optional)</param>
    /// <param name="cqPeriodanalyticsPeriodtestandtargetPeriodrecommendationsPeriodurlPeriodreplacewith"> (optional)</param>
    virtual void com_day_cq_analytics_testandtarget_impl_testandtarget_http_client_impl(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &cqPeriodanalyticsPeriodtestandtargetPeriodapiPeriodurl, const Pistache::Optional<int32_t> &cqPeriodanalyticsPeriodtestandtargetPeriodtimeout, const Pistache::Optional<int32_t> &cqPeriodanalyticsPeriodtestandtargetPeriodsockettimeout, const Pistache::Optional<std::string> &cqPeriodanalyticsPeriodtestandtargetPeriodrecommendationsPeriodurlPeriodreplace, const Pistache::Optional<std::string> &cqPeriodanalyticsPeriodtestandtargetPeriodrecommendationsPeriodurlPeriodreplacewith, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="cugPeriodexemptedPeriodprincipals"> (optional)</param>
    /// <param name="cugPeriodenabled"> (optional)</param>
    /// <param name="cugPeriodprincipalsPeriodregex"> (optional)</param>
    /// <param name="cugPeriodprincipalsPeriodreplacement"> (optional)</param>
    virtual void com_day_cq_auth_impl_cug_cug_support_impl(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &cugPeriodexemptedPeriodprincipals, const Pistache::Optional<bool> &cugPeriodenabled, const Pistache::Optional<std::string> &cugPeriodprincipalsPeriodregex, const Pistache::Optional<std::string> &cugPeriodprincipalsPeriodreplacement, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="path"> (optional)</param>
    /// <param name="servicePeriodranking"> (optional)</param>
    /// <param name="authPeriodloginselectorPeriodmappings"> (optional)</param>
    /// <param name="authPeriodloginselectorPeriodchangepwPeriodmappings"> (optional)</param>
    /// <param name="authPeriodloginselectorPerioddefaultloginpage"> (optional)</param>
    /// <param name="authPeriodloginselectorPerioddefaultchangepwpage"> (optional)</param>
    /// <param name="authPeriodloginselectorPeriodhandle"> (optional)</param>
    /// <param name="authPeriodloginselectorPeriodhandlePeriodallPeriodextensions"> (optional)</param>
    virtual void com_day_cq_auth_impl_login_selector_handler(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &path, const Pistache::Optional<int32_t> &servicePeriodranking, const Pistache::Optional<std::string> &authPeriodloginselectorPeriodmappings, const Pistache::Optional<std::string> &authPeriodloginselectorPeriodchangepwPeriodmappings, const Pistache::Optional<std::string> &authPeriodloginselectorPerioddefaultloginpage, const Pistache::Optional<std::string> &authPeriodloginselectorPerioddefaultchangepwpage, const Pistache::Optional<std::string> &authPeriodloginselectorPeriodhandle, const Pistache::Optional<bool> &authPeriodloginselectorPeriodhandlePeriodallPeriodextensions, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="externalizerPerioddomains"> (optional)</param>
    /// <param name="externalizerPeriodhost"> (optional)</param>
    /// <param name="externalizerPeriodcontextpath"> (optional)</param>
    /// <param name="externalizerPeriodencodedpath"> (optional)</param>
    virtual void com_day_cq_commons_impl_externalizer_impl(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &externalizerPerioddomains, const Pistache::Optional<std::string> &externalizerPeriodhost, const Pistache::Optional<std::string> &externalizerPeriodcontextpath, const Pistache::Optional<bool> &externalizerPeriodencodedpath, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="rootmappingPeriodtarget"> (optional)</param>
    virtual void com_day_cq_commons_servlets_root_mapping_servlet(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &rootmappingPeriodtarget, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="codeupgradetasks"> (optional)</param>
    /// <param name="codeupgradetaskfilters"> (optional)</param>
    virtual void com_day_cq_compat_codeupgrade_impl_code_upgrade_execution_condition_checke(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &codeupgradetasks, const Pistache::Optional<std::string> &codeupgradetaskfilters, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="upgradeTaskIgnoreList"> (optional)</param>
    virtual void com_day_cq_compat_codeupgrade_impl_upgrade_task_ignore_list(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &upgradeTaskIgnoreList, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="effectiveBundleListPath"> (optional)</param>
    virtual void com_day_cq_compat_codeupgrade_impl_version_range_task_ignorelist(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &effectiveBundleListPath, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="contentsyncPeriodfallbackPeriodauthorizable"> (optional)</param>
    /// <param name="contentsyncPeriodfallbackPeriodupdateuser"> (optional)</param>
    virtual void com_day_cq_contentsync_impl_content_sync_manager_impl(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &contentsyncPeriodfallbackPeriodauthorizable, const Pistache::Optional<std::string> &contentsyncPeriodfallbackPeriodupdateuser, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="largeFileThreshold"> (optional)</param>
    /// <param name="largeCommentThreshold"> (optional)</param>
    /// <param name="cqPerioddamPeriodenablePeriodextPeriodmetaPeriodextraction"> (optional)</param>
    virtual void com_day_cq_dam_commons_handler_standard_image_handler(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<int32_t> &largeFileThreshold, const Pistache::Optional<int32_t> &largeCommentThreshold, const Pistache::Optional<bool> &cqPerioddamPeriodenablePeriodextPeriodmetaPeriodextraction, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="xmpPeriodfilterPeriodapplyWhitelist"> (optional)</param>
    /// <param name="xmpPeriodfilterPeriodwhitelist"> (optional)</param>
    /// <param name="xmpPeriodfilterPeriodapplyBlacklist"> (optional)</param>
    /// <param name="xmpPeriodfilterPeriodblacklist"> (optional)</param>
    virtual void com_day_cq_dam_commons_metadata_xmp_filter_black_white(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<bool> &xmpPeriodfilterPeriodapplyWhitelist, const Pistache::Optional<std::string> &xmpPeriodfilterPeriodwhitelist, const Pistache::Optional<bool> &xmpPeriodfilterPeriodapplyBlacklist, const Pistache::Optional<std::string> &xmpPeriodfilterPeriodblacklist, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="largePeriodfilePeriodmin"> (optional)</param>
    /// <param name="cachePeriodapply"> (optional)</param>
    /// <param name="mimePeriodtypes"> (optional)</param>
    virtual void com_day_cq_dam_commons_util_impl_asset_cache_impl(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<int32_t> &largePeriodfilePeriodmin, const Pistache::Optional<bool> &cachePeriodapply, const Pistache::Optional<std::string> &mimePeriodtypes, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="cqPerioddamPeriodconfigPeriodannotationPeriodpdfPerioddocumentPeriodwidth"> (optional)</param>
    /// <param name="cqPerioddamPeriodconfigPeriodannotationPeriodpdfPerioddocumentPeriodheight"> (optional)</param>
    /// <param name="cqPerioddamPeriodconfigPeriodannotationPeriodpdfPerioddocumentPeriodpaddingPeriodhorizontal"> (optional)</param>
    /// <param name="cqPerioddamPeriodconfigPeriodannotationPeriodpdfPerioddocumentPeriodpaddingPeriodvertical"> (optional)</param>
    /// <param name="cqPerioddamPeriodconfigPeriodannotationPeriodpdfPeriodfontPeriodsize"> (optional)</param>
    /// <param name="cqPerioddamPeriodconfigPeriodannotationPeriodpdfPeriodfontPeriodcolor"> (optional)</param>
    /// <param name="cqPerioddamPeriodconfigPeriodannotationPeriodpdfPeriodfontPeriodfamily"> (optional)</param>
    /// <param name="cqPerioddamPeriodconfigPeriodannotationPeriodpdfPeriodfontPeriodlight"> (optional)</param>
    /// <param name="cqPerioddamPeriodconfigPeriodannotationPeriodpdfPeriodmarginTextImage"> (optional)</param>
    /// <param name="cqPerioddamPeriodconfigPeriodannotationPeriodpdfPeriodminImageHeight"> (optional)</param>
    /// <param name="cqPerioddamPeriodconfigPeriodannotationPeriodpdfPeriodreviewStatusPeriodwidth"> (optional)</param>
    /// <param name="cqPerioddamPeriodconfigPeriodannotationPeriodpdfPeriodreviewStatusPeriodcolorPeriodapproved"> (optional)</param>
    /// <param name="cqPerioddamPeriodconfigPeriodannotationPeriodpdfPeriodreviewStatusPeriodcolorPeriodrejected"> (optional)</param>
    /// <param name="cqPerioddamPeriodconfigPeriodannotationPeriodpdfPeriodreviewStatusPeriodcolorPeriodchangesRequested"> (optional)</param>
    /// <param name="cqPerioddamPeriodconfigPeriodannotationPeriodpdfPeriodannotationMarkerPeriodwidth"> (optional)</param>
    /// <param name="cqPerioddamPeriodconfigPeriodannotationPeriodpdfPeriodassetPeriodminheight"> (optional)</param>
    virtual void com_day_cq_dam_core_impl_annotation_pdf_annotation_pdf_config(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<int32_t> &cqPerioddamPeriodconfigPeriodannotationPeriodpdfPerioddocumentPeriodwidth, const Pistache::Optional<int32_t> &cqPerioddamPeriodconfigPeriodannotationPeriodpdfPerioddocumentPeriodheight, const Pistache::Optional<int32_t> &cqPerioddamPeriodconfigPeriodannotationPeriodpdfPerioddocumentPeriodpaddingPeriodhorizontal, const Pistache::Optional<int32_t> &cqPerioddamPeriodconfigPeriodannotationPeriodpdfPerioddocumentPeriodpaddingPeriodvertical, const Pistache::Optional<int32_t> &cqPerioddamPeriodconfigPeriodannotationPeriodpdfPeriodfontPeriodsize, const Pistache::Optional<std::string> &cqPerioddamPeriodconfigPeriodannotationPeriodpdfPeriodfontPeriodcolor, const Pistache::Optional<std::string> &cqPerioddamPeriodconfigPeriodannotationPeriodpdfPeriodfontPeriodfamily, const Pistache::Optional<std::string> &cqPerioddamPeriodconfigPeriodannotationPeriodpdfPeriodfontPeriodlight, const Pistache::Optional<int32_t> &cqPerioddamPeriodconfigPeriodannotationPeriodpdfPeriodmarginTextImage, const Pistache::Optional<int32_t> &cqPerioddamPeriodconfigPeriodannotationPeriodpdfPeriodminImageHeight, const Pistache::Optional<int32_t> &cqPerioddamPeriodconfigPeriodannotationPeriodpdfPeriodreviewStatusPeriodwidth, const Pistache::Optional<std::string> &cqPerioddamPeriodconfigPeriodannotationPeriodpdfPeriodreviewStatusPeriodcolorPeriodapproved, const Pistache::Optional<std::string> &cqPerioddamPeriodconfigPeriodannotationPeriodpdfPeriodreviewStatusPeriodcolorPeriodrejected, const Pistache::Optional<std::string> &cqPerioddamPeriodconfigPeriodannotationPeriodpdfPeriodreviewStatusPeriodcolorPeriodchangesRequested, const Pistache::Optional<int32_t> &cqPerioddamPeriodconfigPeriodannotationPeriodpdfPeriodannotationMarkerPeriodwidth, const Pistache::Optional<int32_t> &cqPerioddamPeriodconfigPeriodannotationPeriodpdfPeriodassetPeriodminheight, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="enabled"> (optional)</param>
    virtual void com_day_cq_dam_core_impl_asset_move_listener(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<bool> &enabled, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="isEnabled"> (optional)</param>
    virtual void com_day_cq_dam_core_impl_assethome_asset_home_page_configuration(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<bool> &isEnabled, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="cqPerioddamPeriodadhocPeriodassetPeriodsharePeriodprezipPeriodmaxcontentsize"> (optional)</param>
    virtual void com_day_cq_dam_core_impl_assetlinkshare_adhoc_asset_share_proxy_servlet(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<int32_t> &cqPerioddamPeriodadhocPeriodassetPeriodsharePeriodprezipPeriodmaxcontentsize, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="cqPerioddamPeriodimagePeriodcachePeriodmaxPeriodmemory"> (optional)</param>
    /// <param name="cqPerioddamPeriodimagePeriodcachePeriodmaxPeriodage"> (optional)</param>
    /// <param name="cqPerioddamPeriodimagePeriodcachePeriodmaxPerioddimension"> (optional)</param>
    virtual void com_day_cq_dam_core_impl_cache_cq_buffered_image_cache(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<int32_t> &cqPerioddamPeriodimagePeriodcachePeriodmaxPeriodmemory, const Pistache::Optional<int32_t> &cqPerioddamPeriodimagePeriodcachePeriodmaxPeriodage, const Pistache::Optional<std::string> &cqPerioddamPeriodimagePeriodcachePeriodmaxPerioddimension, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="changeeventlistenerPeriodobservedPeriodpaths"> (optional)</param>
    virtual void com_day_cq_dam_core_impl_dam_change_event_listener(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &changeeventlistenerPeriodobservedPeriodpaths, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="schedulerPeriodexpression"> (optional)</param>
    /// <param name="maxSavedActivities"> (optional)</param>
    /// <param name="saveInterval"> (optional)</param>
    /// <param name="enableActivityPurge"> (optional)</param>
    /// <param name="eventTypes"> (optional)</param>
    virtual void com_day_cq_dam_core_impl_dam_event_purge_service(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &schedulerPeriodexpression, const Pistache::Optional<int32_t> &maxSavedActivities, const Pistache::Optional<int32_t> &saveInterval, const Pistache::Optional<bool> &enableActivityPurge, const Pistache::Optional<std::string> &eventTypes, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="eventPeriodfilter"> (optional)</param>
    /// <param name="eventPeriodqueuePeriodlength"> (optional)</param>
    /// <param name="eventrecorderPeriodenabled"> (optional)</param>
    /// <param name="eventrecorderPeriodblacklist"> (optional)</param>
    /// <param name="eventrecorderPeriodeventtypes"> (optional)</param>
    virtual void com_day_cq_dam_core_impl_dam_event_recorder_impl(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &eventPeriodfilter, const Pistache::Optional<int32_t> &eventPeriodqueuePeriodlength, const Pistache::Optional<bool> &eventrecorderPeriodenabled, const Pistache::Optional<std::string> &eventrecorderPeriodblacklist, const Pistache::Optional<std::string> &eventrecorderPeriodeventtypes, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="eventPeriodfilter"> (optional)</param>
    /// <param name="enabled"> (optional)</param>
    virtual void com_day_cq_dam_core_impl_event_dam_event_audit_listener(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &eventPeriodfilter, const Pistache::Optional<bool> &enabled, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="cqPerioddamPeriodexpiryPeriodnotificationPeriodschedulerPeriodistimebased"> (optional)</param>
    /// <param name="cqPerioddamPeriodexpiryPeriodnotificationPeriodschedulerPeriodtimebasedPeriodrule"> (optional)</param>
    /// <param name="cqPerioddamPeriodexpiryPeriodnotificationPeriodschedulerPeriodperiodPeriodrule"> (optional)</param>
    /// <param name="sendEmail"> (optional)</param>
    /// <param name="assetExpiredLimit"> (optional)</param>
    /// <param name="priorNotificationSeconds"> (optional)</param>
    /// <param name="cqPerioddamPeriodexpiryPeriodnotificationPeriodurlPeriodprotocol"> (optional)</param>
    virtual void com_day_cq_dam_core_impl_expiry_notification_job_impl(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<bool> &cqPerioddamPeriodexpiryPeriodnotificationPeriodschedulerPeriodistimebased, const Pistache::Optional<std::string> &cqPerioddamPeriodexpiryPeriodnotificationPeriodschedulerPeriodtimebasedPeriodrule, const Pistache::Optional<int32_t> &cqPerioddamPeriodexpiryPeriodnotificationPeriodschedulerPeriodperiodPeriodrule, const Pistache::Optional<bool> &sendEmail, const Pistache::Optional<int32_t> &assetExpiredLimit, const Pistache::Optional<int32_t> &priorNotificationSeconds, const Pistache::Optional<std::string> &cqPerioddamPeriodexpiryPeriodnotificationPeriodurlPeriodprotocol, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="isEnabled"> (optional)</param>
    virtual void com_day_cq_dam_core_impl_foldermetadataschema_folder_metadata_schema_feat(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<bool> &isEnabled, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="skipPeriodbufferedcache"> (optional)</param>
    virtual void com_day_cq_dam_core_impl_gfx_commons_gfx_renderer(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<bool> &skipPeriodbufferedcache, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="mimetype"> (optional)</param>
    virtual void com_day_cq_dam_core_impl_handler_eps_format_handler(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &mimetype, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="mimetype"> (optional)</param>
    virtual void com_day_cq_dam_core_impl_handler_indesign_format_handler(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &mimetype, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="cqPerioddamPeriodenablePeriodextPeriodmetaPeriodextraction"> (optional)</param>
    /// <param name="largeFileThreshold"> (optional)</param>
    /// <param name="largeCommentThreshold"> (optional)</param>
    virtual void com_day_cq_dam_core_impl_handler_jpeg_handler(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<bool> &cqPerioddamPeriodenablePeriodextPeriodmetaPeriodextraction, const Pistache::Optional<int32_t> &largeFileThreshold, const Pistache::Optional<int32_t> &largeCommentThreshold, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="xmphandlerPeriodcqPeriodformats"> (optional)</param>
    virtual void com_day_cq_dam_core_impl_handler_xmp_n_comm_xmp_handler(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &xmphandlerPeriodcqPeriodformats, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="jmxPeriodobjectname"> (optional)</param>
    /// <param name="propertyPeriodmeasurePeriodenabled"> (optional)</param>
    /// <param name="propertyPeriodname"> (optional)</param>
    /// <param name="propertyPeriodmaxPeriodwaitPeriodms"> (optional)</param>
    /// <param name="propertyPeriodmaxPeriodrate"> (optional)</param>
    /// <param name="fulltextPeriodmeasurePeriodenabled"> (optional)</param>
    /// <param name="fulltextPeriodname"> (optional)</param>
    /// <param name="fulltextPeriodmaxPeriodwaitPeriodms"> (optional)</param>
    /// <param name="fulltextPeriodmaxPeriodrate"> (optional)</param>
    virtual void com_day_cq_dam_core_impl_jmx_asset_index_update_monitor(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &jmxPeriodobjectname, const Pistache::Optional<bool> &propertyPeriodmeasurePeriodenabled, const Pistache::Optional<std::string> &propertyPeriodname, const Pistache::Optional<int32_t> &propertyPeriodmaxPeriodwaitPeriodms, const Pistache::Optional<double> &propertyPeriodmaxPeriodrate, const Pistache::Optional<bool> &fulltextPeriodmeasurePeriodenabled, const Pistache::Optional<std::string> &fulltextPeriodname, const Pistache::Optional<int32_t> &fulltextPeriodmaxPeriodwaitPeriodms, const Pistache::Optional<double> &fulltextPeriodmaxPeriodrate, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="jmxPeriodobjectname"> (optional)</param>
    virtual void com_day_cq_dam_core_impl_jmx_asset_migration_m_bean_impl(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &jmxPeriodobjectname, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="jmxPeriodobjectname"> (optional)</param>
    /// <param name="active"> (optional)</param>
    virtual void com_day_cq_dam_core_impl_jmx_asset_update_monitor_impl(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &jmxPeriodobjectname, const Pistache::Optional<bool> &active, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="operation"> (optional)</param>
    /// <param name="emailEnabled"> (optional)</param>
    virtual void com_day_cq_dam_core_impl_jobs_metadataexport_async_metadata_export_config(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &operation, const Pistache::Optional<bool> &emailEnabled, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="operation"> (optional)</param>
    /// <param name="operationIcon"> (optional)</param>
    /// <param name="topicName"> (optional)</param>
    /// <param name="emailEnabled"> (optional)</param>
    virtual void com_day_cq_dam_core_impl_jobs_metadataimport_async_metadata_import_config(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &operation, const Pistache::Optional<std::string> &operationIcon, const Pistache::Optional<std::string> &topicName, const Pistache::Optional<bool> &emailEnabled, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="slingPeriodservletPeriodpaths"> (optional)</param>
    /// <param name="slingPeriodservletPeriodmethods"> (optional)</param>
    /// <param name="cqPerioddamPeriodenablePeriodanonymous"> (optional)</param>
    virtual void com_day_cq_dam_core_impl_lightbox_lightbox_servlet(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &slingPeriodservletPeriodpaths, const Pistache::Optional<std::string> &slingPeriodservletPeriodmethods, const Pistache::Optional<bool> &cqPerioddamPeriodenablePeriodanonymous, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="graniteData"> (optional)</param>
    virtual void com_day_cq_dam_core_impl_metadata_editor_select_component_handler(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &graniteData, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="cqPerioddamPeriodallowPeriodallPeriodmime"> (optional)</param>
    /// <param name="cqPerioddamPeriodallowedPeriodassetPeriodmimes"> (optional)</param>
    virtual void com_day_cq_dam_core_impl_mime_type_asset_upload_restriction_helper(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<bool> &cqPerioddamPeriodallowPeriodallPeriodmime, const Pistache::Optional<std::string> &cqPerioddamPeriodallowedPeriodassetPeriodmimes, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="cqPerioddamPerioddetectPeriodassetPeriodmimePeriodfromPeriodcontent"> (optional)</param>
    virtual void com_day_cq_dam_core_impl_mime_type_dam_mime_type_service_impl(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<bool> &cqPerioddamPerioddetectPeriodassetPeriodmimePeriodfromPeriodcontent, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="cqPerioddamPeriodmissingmetadataPeriodnotificationPeriodschedulerPeriodistimebased"> (optional)</param>
    /// <param name="cqPerioddamPeriodmissingmetadataPeriodnotificationPeriodschedulerPeriodtimebasedPeriodrule"> (optional)</param>
    /// <param name="cqPerioddamPeriodmissingmetadataPeriodnotificationPeriodschedulerPeriodperiodPeriodrule"> (optional)</param>
    /// <param name="cqPerioddamPeriodmissingmetadataPeriodnotificationPeriodrecipient"> (optional)</param>
    virtual void com_day_cq_dam_core_impl_missing_metadata_notification_job(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<bool> &cqPerioddamPeriodmissingmetadataPeriodnotificationPeriodschedulerPeriodistimebased, const Pistache::Optional<std::string> &cqPerioddamPeriodmissingmetadataPeriodnotificationPeriodschedulerPeriodtimebasedPeriodrule, const Pistache::Optional<int32_t> &cqPerioddamPeriodmissingmetadataPeriodnotificationPeriodschedulerPeriodperiodPeriodrule, const Pistache::Optional<std::string> &cqPerioddamPeriodmissingmetadataPeriodnotificationPeriodrecipient, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="processPeriodlabel"> (optional)</param>
    /// <param name="notify_on_Complete"> (optional)</param>
    virtual void com_day_cq_dam_core_impl_process_send_transient_workflow_completed_email_pr(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &processPeriodlabel, const Pistache::Optional<bool> &notify_on_Complete, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="mimeTypes"> (optional)</param>
    /// <param name="maxExtract"> (optional)</param>
    virtual void com_day_cq_dam_core_impl_process_text_extraction_process(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &mimeTypes, const Pistache::Optional<int32_t> &maxExtract, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="xmpPeriodpropagate"> (optional)</param>
    /// <param name="xmpPeriodexcludes"> (optional)</param>
    virtual void com_day_cq_dam_core_impl_rendition_maker_impl(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<bool> &xmpPeriodpropagate, const Pistache::Optional<std::string> &xmpPeriodexcludes, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="queryBatchSize"> (optional)</param>
    virtual void com_day_cq_dam_core_impl_reports_report_export_service(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<int32_t> &queryBatchSize, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="schedulerPeriodexpression"> (optional)</param>
    /// <param name="maxSavedReports"> (optional)</param>
    /// <param name="timeDuration"> (optional)</param>
    /// <param name="enableReportPurge"> (optional)</param>
    virtual void com_day_cq_dam_core_impl_reports_report_purge_service(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &schedulerPeriodexpression, const Pistache::Optional<int32_t> &maxSavedReports, const Pistache::Optional<int32_t> &timeDuration, const Pistache::Optional<bool> &enableReportPurge, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="enabled"> (optional)</param>
    virtual void com_day_cq_dam_core_impl_servlet_asset_download_servlet(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<bool> &enabled, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="cqPerioddamPeriodbatchPeriodstatusPeriodmaxassets"> (optional)</param>
    virtual void com_day_cq_dam_core_impl_servlet_asset_status_servlet(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<int32_t> &cqPerioddamPeriodbatchPeriodstatusPeriodmaxassets, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="cqPerioddamPeriodbatchPeriodindesignPeriodmaxassets"> (optional)</param>
    virtual void com_day_cq_dam_core_impl_servlet_asset_xmp_search_servlet(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<int32_t> &cqPerioddamPeriodbatchPeriodindesignPeriodmaxassets, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="cqPerioddamPeriodbatchPeriodmetadataPeriodassetPerioddefault"> (optional)</param>
    /// <param name="cqPerioddamPeriodbatchPeriodmetadataPeriodcollectionPerioddefault"> (optional)</param>
    /// <param name="cqPerioddamPeriodbatchPeriodmetadataPeriodmaxresources"> (optional)</param>
    virtual void com_day_cq_dam_core_impl_servlet_batch_metadata_servlet(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &cqPerioddamPeriodbatchPeriodmetadataPeriodassetPerioddefault, const Pistache::Optional<std::string> &cqPerioddamPeriodbatchPeriodmetadataPeriodcollectionPerioddefault, const Pistache::Optional<int32_t> &cqPerioddamPeriodbatchPeriodmetadataPeriodmaxresources, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="slingPeriodservletPeriodresourceTypes"> (optional)</param>
    /// <param name="slingPeriodservletPeriodmethods"> (optional)</param>
    /// <param name="cqPerioddamPerioddrmPeriodenable"> (optional)</param>
    virtual void com_day_cq_dam_core_impl_servlet_binary_provider_servlet(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &slingPeriodservletPeriodresourceTypes, const Pistache::Optional<std::string> &slingPeriodservletPeriodmethods, const Pistache::Optional<bool> &cqPerioddamPerioddrmPeriodenable, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="cqPerioddamPeriodbatchPeriodcollectionPeriodproperties"> (optional)</param>
    /// <param name="cqPerioddamPeriodbatchPeriodcollectionPeriodmaxcollections"> (optional)</param>
    virtual void com_day_cq_dam_core_impl_servlet_collection_servlet(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &cqPerioddamPeriodbatchPeriodcollectionPeriodproperties, const Pistache::Optional<int32_t> &cqPerioddamPeriodbatchPeriodcollectionPeriodmaxcollections, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="cqPerioddamPeriodbatchPeriodcollectionsPeriodproperties"> (optional)</param>
    /// <param name="cqPerioddamPeriodbatchPeriodcollectionsPeriodlimit"> (optional)</param>
    virtual void com_day_cq_dam_core_impl_servlet_collections_servlet(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &cqPerioddamPeriodbatchPeriodcollectionsPeriodproperties, const Pistache::Optional<int32_t> &cqPerioddamPeriodbatchPeriodcollectionsPeriodlimit, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="more_Info"> (optional)</param>
    /// <param name="SlashmntSlashoverlaySlashdamSlashguiSlashcontentSlashassetsSlashmoreinfoPeriodhtmlSlashDollarLeft_Curly_BracketpathRight_Curly_Bracket"> (optional)</param>
    virtual void com_day_cq_dam_core_impl_servlet_companion_servlet(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &more_Info, const Pistache::Optional<std::string> &SlashmntSlashoverlaySlashdamSlashguiSlashcontentSlashassetsSlashmoreinfoPeriodhtmlSlashDollarLeft_Curly_BracketpathRight_Curly_Bracket, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="detectDuplicate"> (optional)</param>
    virtual void com_day_cq_dam_core_impl_servlet_create_asset_servlet(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<bool> &detectDuplicate, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="cqPeriodmimePeriodtypePeriodblacklist"> (optional)</param>
    /// <param name="cqPerioddamPeriodemptyPeriodmime"> (optional)</param>
    virtual void com_day_cq_dam_core_impl_servlet_dam_content_disposition_filter(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &cqPeriodmimePeriodtypePeriodblacklist, const Pistache::Optional<bool> &cqPerioddamPeriodemptyPeriodmime, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="cqPerioddamPeriodcorePeriodguidlookupfilterPeriodenabled"> (optional)</param>
    virtual void com_day_cq_dam_core_impl_servlet_guid_lookup_filter(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<bool> &cqPerioddamPeriodcorePeriodguidlookupfilterPeriodenabled, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="cqPerioddamPeriodsyncPeriodworkflowPeriodid"> (optional)</param>
    /// <param name="cqPerioddamPeriodsyncPeriodfolderPeriodtypes"> (optional)</param>
    virtual void com_day_cq_dam_core_impl_servlet_health_check_servlet(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &cqPerioddamPeriodsyncPeriodworkflowPeriodid, const Pistache::Optional<std::string> &cqPerioddamPeriodsyncPeriodfolderPeriodtypes, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="slingPeriodservletPeriodresourceTypes"> (optional)</param>
    /// <param name="slingPeriodservletPeriodmethods"> (optional)</param>
    /// <param name="slingPeriodservletPeriodextensions"> (optional)</param>
    /// <param name="slingPeriodservletPeriodselectors"> (optional)</param>
    virtual void com_day_cq_dam_core_impl_servlet_metadata_get_servlet(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &slingPeriodservletPeriodresourceTypes, const Pistache::Optional<std::string> &slingPeriodservletPeriodmethods, const Pistache::Optional<std::string> &slingPeriodservletPeriodextensions, const Pistache::Optional<std::string> &slingPeriodservletPeriodselectors, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="cqPerioddamPerioddrmPeriodenable"> (optional)</param>
    virtual void com_day_cq_dam_core_impl_servlet_multiple_license_accept_servlet(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<bool> &cqPerioddamPerioddrmPeriodenable, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="slingPeriodservletPeriodresourceTypes"> (optional)</param>
    /// <param name="slingPeriodservletPeriodmethods"> (optional)</param>
    /// <param name="slingPeriodservletPeriodselectors"> (optional)</param>
    /// <param name="downloadPeriodconfig"> (optional)</param>
    /// <param name="viewPeriodselector"> (optional)</param>
    /// <param name="sendEmail"> (optional)</param>
    virtual void com_day_cq_dam_core_impl_servlet_resource_collection_servlet(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &slingPeriodservletPeriodresourceTypes, const Pistache::Optional<std::string> &slingPeriodservletPeriodmethods, const Pistache::Optional<std::string> &slingPeriodservletPeriodselectors, const Pistache::Optional<std::string> &downloadPeriodconfig, const Pistache::Optional<std::string> &viewPeriodselector, const Pistache::Optional<bool> &sendEmail, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="createPreviewEnabled"> (optional)</param>
    /// <param name="updatePreviewEnabled"> (optional)</param>
    /// <param name="queueSize"> (optional)</param>
    /// <param name="folderPreviewRenditionRegex"> (optional)</param>
    virtual void com_day_cq_dam_core_impl_ui_preview_folder_preview_updater_impl(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<bool> &createPreviewEnabled, const Pistache::Optional<bool> &updatePreviewEnabled, const Pistache::Optional<int32_t> &queueSize, const Pistache::Optional<std::string> &folderPreviewRenditionRegex, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="cqPerioddamPeriodconfigPeriodunzipPeriodmaxuncompressedsize"> (optional)</param>
    /// <param name="cqPerioddamPeriodconfigPeriodunzipPeriodencoding"> (optional)</param>
    virtual void com_day_cq_dam_core_impl_unzip_unzip_config(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<int32_t> &cqPerioddamPeriodconfigPeriodunzipPeriodmaxuncompressedsize, const Pistache::Optional<std::string> &cqPerioddamPeriodconfigPeriodunzipPeriodencoding, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="processPeriodlabel"> (optional)</param>
    /// <param name="cqPerioddamPeriodenablePeriodsha1"> (optional)</param>
    virtual void com_day_cq_dam_core_process_exif_tool_extract_metadata_process(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &processPeriodlabel, const Pistache::Optional<bool> &cqPerioddamPeriodenablePeriodsha1, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="processPeriodlabel"> (optional)</param>
    /// <param name="cqPerioddamPeriodenablePeriodsha1"> (optional)</param>
    virtual void com_day_cq_dam_core_process_extract_metadata_process(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &processPeriodlabel, const Pistache::Optional<bool> &cqPerioddamPeriodenablePeriodsha1, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="processPeriodlabel"> (optional)</param>
    /// <param name="cqPerioddamPeriodenablePeriodsha1"> (optional)</param>
    /// <param name="cqPerioddamPeriodmetadataPeriodxssprotectedPeriodproperties"> (optional)</param>
    virtual void com_day_cq_dam_core_process_metadata_processor_process(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &processPeriodlabel, const Pistache::Optional<bool> &cqPerioddamPeriodenablePeriodsha1, const Pistache::Optional<std::string> &cqPerioddamPeriodmetadataPeriodxssprotectedPeriodproperties, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="executablePeriodsearchpath"> (optional)</param>
    virtual void com_day_cq_dam_handler_ffmpeg_locator_impl(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &executablePeriodsearchpath, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="eventPeriodfilter"> (optional)</param>
    /// <param name="fontmgrPeriodsystemPeriodfontPerioddir"> (optional)</param>
    /// <param name="fontmgrPeriodadobePeriodfontPerioddir"> (optional)</param>
    /// <param name="fontmgrPeriodcustomerPeriodfontPerioddir"> (optional)</param>
    virtual void com_day_cq_dam_handler_gibson_fontmanager_impl_font_manager_service_impl(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &eventPeriodfilter, const Pistache::Optional<std::string> &fontmgrPeriodsystemPeriodfontPerioddir, const Pistache::Optional<std::string> &fontmgrPeriodadobePeriodfontPerioddir, const Pistache::Optional<std::string> &fontmgrPeriodcustomerPeriodfontPerioddir, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="rasterPeriodannotation"> (optional)</param>
    virtual void com_day_cq_dam_handler_standard_pdf_pdf_handler(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<bool> &rasterPeriodannotation, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="rasterPeriodannotation"> (optional)</param>
    virtual void com_day_cq_dam_handler_standard_ps_post_script_handler(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<bool> &rasterPeriodannotation, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="largeFileThreshold"> (optional)</param>
    virtual void com_day_cq_dam_handler_standard_psd_psd_handler(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<int32_t> &largeFileThreshold, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="enablePeriodmultisession"> (optional)</param>
    /// <param name="idsPeriodccPeriodenable"> (optional)</param>
    /// <param name="enablePeriodretry"> (optional)</param>
    /// <param name="enablePeriodretryPeriodscripterror"> (optional)</param>
    /// <param name="externalizerPerioddomainPeriodcqhost"> (optional)</param>
    /// <param name="externalizerPerioddomainPeriodhttp"> (optional)</param>
    virtual void com_day_cq_dam_ids_impl_ids_job_processor(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<bool> &enablePeriodmultisession, const Pistache::Optional<bool> &idsPeriodccPeriodenable, const Pistache::Optional<bool> &enablePeriodretry, const Pistache::Optional<bool> &enablePeriodretryPeriodscripterror, const Pistache::Optional<std::string> &externalizerPerioddomainPeriodcqhost, const Pistache::Optional<std::string> &externalizerPerioddomainPeriodhttp, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="maxPerioderrorsPeriodtoPeriodblacklist"> (optional)</param>
    /// <param name="retryPeriodintervalPeriodtoPeriodwhitelist"> (optional)</param>
    /// <param name="connectPeriodtimeout"> (optional)</param>
    /// <param name="socketPeriodtimeout"> (optional)</param>
    /// <param name="processPeriodlabel"> (optional)</param>
    /// <param name="connectionPeriodusePeriodmax"> (optional)</param>
    virtual void com_day_cq_dam_ids_impl_ids_pool_manager_impl(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<int32_t> &maxPerioderrorsPeriodtoPeriodblacklist, const Pistache::Optional<int32_t> &retryPeriodintervalPeriodtoPeriodwhitelist, const Pistache::Optional<int32_t> &connectPeriodtimeout, const Pistache::Optional<int32_t> &socketPeriodtimeout, const Pistache::Optional<std::string> &processPeriodlabel, const Pistache::Optional<int32_t> &connectionPeriodusePeriodmax, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="processPeriodlabel"> (optional)</param>
    /// <param name="extractPeriodpages"> (optional)</param>
    virtual void com_day_cq_dam_indd_impl_handler_indesign_xmp_handler(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &processPeriodlabel, const Pistache::Optional<bool> &extractPeriodpages, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="snippetcreationPeriodmaxcollections"> (optional)</param>
    virtual void com_day_cq_dam_indd_impl_servlet_snippet_creation_servlet(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<int32_t> &snippetcreationPeriodmaxcollections, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="processPeriodlabel"> (optional)</param>
    /// <param name="cqPerioddamPeriodinddPeriodpagesPeriodregex"> (optional)</param>
    /// <param name="idsPeriodjobPerioddecoupled"> (optional)</param>
    /// <param name="idsPeriodjobPeriodworkflowPeriodmodel"> (optional)</param>
    virtual void com_day_cq_dam_indd_process_indd_media_extract_process(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &processPeriodlabel, const Pistache::Optional<std::string> &cqPerioddamPeriodinddPeriodpagesPeriodregex, const Pistache::Optional<bool> &idsPeriodjobPerioddecoupled, const Pistache::Optional<std::string> &idsPeriodjobPeriodworkflowPeriodmodel, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="batchPeriodcommitPeriodsize"> (optional)</param>
    virtual void com_day_cq_dam_performance_internal_asset_performance_data_handler_impl(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<int32_t> &batchPeriodcommitPeriodsize, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="schedulerPeriodexpression"> (optional)</param>
    virtual void com_day_cq_dam_performance_internal_asset_performance_report_sync_job(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &schedulerPeriodexpression, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="deletePeriodzipPeriodfile"> (optional)</param>
    virtual void com_day_cq_dam_pim_impl_sourcing_upload_process_product_assets_upload_pro(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<bool> &deletePeriodzipPeriodfile, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="cqPerioddamPeriods7damPerioddynamicmediaconfigeventlistenerPeriodenabled"> (optional)</param>
    virtual void com_day_cq_dam_s7dam_common_analytics_impl_s7dam_dynamic_media_config_even(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<bool> &cqPerioddamPeriods7damPerioddynamicmediaconfigeventlistenerPeriodenabled, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="schedulerPeriodexpression"> (optional)</param>
    /// <param name="schedulerPeriodconcurrent"> (optional)</param>
    virtual void com_day_cq_dam_s7dam_common_analytics_impl_site_catalyst_report_runner(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &schedulerPeriodexpression, const Pistache::Optional<bool> &schedulerPeriodconcurrent, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="slingPeriodpostPeriodoperation"> (optional)</param>
    /// <param name="slingPeriodservletPeriodmethods"> (optional)</param>
    virtual void com_day_cq_dam_s7dam_common_post_servlets_set_create_handler(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &slingPeriodpostPeriodoperation, const Pistache::Optional<std::string> &slingPeriodservletPeriodmethods, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="slingPeriodpostPeriodoperation"> (optional)</param>
    /// <param name="slingPeriodservletPeriodmethods"> (optional)</param>
    virtual void com_day_cq_dam_s7dam_common_post_servlets_set_modify_handler(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &slingPeriodpostPeriodoperation, const Pistache::Optional<std::string> &slingPeriodservletPeriodmethods, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="processPeriodlabel"> (optional)</param>
    virtual void com_day_cq_dam_s7dam_common_process_video_thumbnail_download_process(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &processPeriodlabel, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="cqPerioddamPeriods7damPerioddamchangeeventlistenerPeriodenabled"> (optional)</param>
    virtual void com_day_cq_dam_s7dam_common_s7dam_dam_change_event_listener(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<bool> &cqPerioddamPeriods7damPerioddamchangeeventlistenerPeriodenabled, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="slingPeriodservletPeriodpaths"> (optional)</param>
    /// <param name="slingPeriodservletPeriodmethods"> (optional)</param>
    virtual void com_day_cq_dam_s7dam_common_servlets_s7dam_product_info_servlet(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &slingPeriodservletPeriodpaths, const Pistache::Optional<std::string> &slingPeriodservletPeriodmethods, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="cqPerioddamPeriods7damPeriodvideoproxyclientservicePeriodmultipartuploadPeriodminsizePeriodname"> (optional)</param>
    /// <param name="cqPerioddamPeriods7damPeriodvideoproxyclientservicePeriodmultipartuploadPeriodpartsizePeriodname"> (optional)</param>
    /// <param name="cqPerioddamPeriods7damPeriodvideoproxyclientservicePeriodmultipartuploadPeriodnumthreadPeriodname"> (optional)</param>
    /// <param name="cqPerioddamPeriods7damPeriodvideoproxyclientservicePeriodhttpPeriodreadtimeoutPeriodname"> (optional)</param>
    /// <param name="cqPerioddamPeriods7damPeriodvideoproxyclientservicePeriodhttpPeriodconnectiontimeoutPeriodname"> (optional)</param>
    /// <param name="cqPerioddamPeriods7damPeriodvideoproxyclientservicePeriodhttpPeriodmaxretrycountPeriodname"> (optional)</param>
    /// <param name="cqPerioddamPeriods7damPeriodvideoproxyclientservicePerioduploadprogressPeriodintervalPeriodname"> (optional)</param>
    virtual void com_day_cq_dam_s7dam_common_video_impl_video_proxy_client_service_impl(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<int32_t> &cqPerioddamPeriods7damPeriodvideoproxyclientservicePeriodmultipartuploadPeriodminsizePeriodname, const Pistache::Optional<int32_t> &cqPerioddamPeriods7damPeriodvideoproxyclientservicePeriodmultipartuploadPeriodpartsizePeriodname, const Pistache::Optional<int32_t> &cqPerioddamPeriods7damPeriodvideoproxyclientservicePeriodmultipartuploadPeriodnumthreadPeriodname, const Pistache::Optional<int32_t> &cqPerioddamPeriods7damPeriodvideoproxyclientservicePeriodhttpPeriodreadtimeoutPeriodname, const Pistache::Optional<int32_t> &cqPerioddamPeriods7damPeriodvideoproxyclientservicePeriodhttpPeriodconnectiontimeoutPeriodname, const Pistache::Optional<int32_t> &cqPerioddamPeriods7damPeriodvideoproxyclientservicePeriodhttpPeriodmaxretrycountPeriodname, const Pistache::Optional<int32_t> &cqPerioddamPeriods7damPeriodvideoproxyclientservicePerioduploadprogressPeriodintervalPeriodname, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="cqPerioddamPeriodscene7PeriodapiclientPeriodrecordsperpagePeriodnofilterPeriodname"> (optional)</param>
    /// <param name="cqPerioddamPeriodscene7PeriodapiclientPeriodrecordsperpagePeriodwithfilterPeriodname"> (optional)</param>
    virtual void com_day_cq_dam_scene7_impl_scene7_api_client_impl(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<int32_t> &cqPerioddamPeriodscene7PeriodapiclientPeriodrecordsperpagePeriodnofilterPeriodname, const Pistache::Optional<int32_t> &cqPerioddamPeriodscene7PeriodapiclientPeriodrecordsperpagePeriodwithfilterPeriodname, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="cqPerioddamPeriodscene7PeriodassetmimetypeservicePeriodmapping"> (optional)</param>
    virtual void com_day_cq_dam_scene7_impl_scene7_asset_mime_type_service_impl(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &cqPerioddamPeriodscene7PeriodassetmimetypeservicePeriodmapping, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="cqPerioddamPeriodscene7PeriodconfigurationeventlistenerPeriodenabled"> (optional)</param>
    virtual void com_day_cq_dam_scene7_impl_scene7_configuration_event_listener(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<bool> &cqPerioddamPeriodscene7PeriodconfigurationeventlistenerPeriodenabled, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="cqPerioddamPeriodscene7PerioddamchangeeventlistenerPeriodenabled"> (optional)</param>
    /// <param name="cqPerioddamPeriodscene7PerioddamchangeeventlistenerPeriodobservedPeriodpaths"> (optional)</param>
    virtual void com_day_cq_dam_scene7_impl_scene7_dam_change_event_listener(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<bool> &cqPerioddamPeriodscene7PerioddamchangeeventlistenerPeriodenabled, const Pistache::Optional<std::string> &cqPerioddamPeriodscene7PerioddamchangeeventlistenerPeriodobservedPeriodpaths, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="scene7FlashTemplatesPeriodrti"> (optional)</param>
    /// <param name="scene7FlashTemplatesPeriodrsi"> (optional)</param>
    /// <param name="scene7FlashTemplatesPeriodrb"> (optional)</param>
    /// <param name="scene7FlashTemplatesPeriodrurl"> (optional)</param>
    /// <param name="scene7FlashTemplatePeriodurlFormatParameter"> (optional)</param>
    virtual void com_day_cq_dam_scene7_impl_scene7_flash_templates_service_impl(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &scene7FlashTemplatesPeriodrti, const Pistache::Optional<std::string> &scene7FlashTemplatesPeriodrsi, const Pistache::Optional<std::string> &scene7FlashTemplatesPeriodrb, const Pistache::Optional<std::string> &scene7FlashTemplatesPeriodrurl, const Pistache::Optional<std::string> &scene7FlashTemplatePeriodurlFormatParameter, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="cqPerioddamPeriodscene7PerioduploadservicePeriodactivejobtimeoutPeriodlabel"> (optional)</param>
    /// <param name="cqPerioddamPeriodscene7PerioduploadservicePeriodconnectionmaxperroutePeriodlabel"> (optional)</param>
    virtual void com_day_cq_dam_scene7_impl_scene7_upload_service_impl(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<int32_t> &cqPerioddamPeriodscene7PerioduploadservicePeriodactivejobtimeoutPeriodlabel, const Pistache::Optional<int32_t> &cqPerioddamPeriodscene7PerioduploadservicePeriodconnectionmaxperroutePeriodlabel, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="getCacheExpirationUnit"> (optional)</param>
    /// <param name="getCacheExpirationValue"> (optional)</param>
    virtual void com_day_cq_dam_stock_integration_impl_cache_stock_cache_configuration_ser(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &getCacheExpirationUnit, const Pistache::Optional<int32_t> &getCacheExpirationValue, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="name"> (optional)</param>
    /// <param name="locale"> (optional)</param>
    /// <param name="imsConfig"> (optional)</param>
    virtual void com_day_cq_dam_stock_integration_impl_configuration_stock_configuration(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &name, const Pistache::Optional<std::string> &locale, const Pistache::Optional<std::string> &imsConfig, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="enabled"> (optional)</param>
    virtual void com_day_cq_dam_video_impl_servlet_video_test_servlet(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<bool> &enabled, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="maxWidth"> (optional)</param>
    /// <param name="maxHeight"> (optional)</param>
    virtual void com_day_cq_extwidget_servlets_image_sprite_servlet(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<int32_t> &maxWidth, const Pistache::Optional<int32_t> &maxHeight, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="fontpath"> (optional)</param>
    /// <param name="oversamplingFactor"> (optional)</param>
    virtual void com_day_cq_image_internal_font_font_helper(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &fontpath, const Pistache::Optional<int32_t> &oversamplingFactor, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="clusterPeriodlevelPeriodenable"> (optional)</param>
    /// <param name="clusterPeriodmasterPeriodlevel"> (optional)</param>
    /// <param name="clusterPeriodslavePeriodlevel"> (optional)</param>
    virtual void com_day_cq_jcrclustersupport_cluster_start_level_controller(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<bool> &clusterPeriodlevelPeriodenable, const Pistache::Optional<int32_t> &clusterPeriodmasterPeriodlevel, const Pistache::Optional<int32_t> &clusterPeriodslavePeriodlevel, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="smtpPeriodhost"> (optional)</param>
    /// <param name="smtpPeriodport"> (optional)</param>
    /// <param name="smtpPerioduser"> (optional)</param>
    /// <param name="smtpPeriodpassword"> (optional)</param>
    /// <param name="fromPeriodaddress"> (optional)</param>
    /// <param name="smtpPeriodssl"> (optional)</param>
    /// <param name="smtpPeriodstarttls"> (optional)</param>
    /// <param name="debugPeriodemail"> (optional)</param>
    virtual void com_day_cq_mailer_default_mail_service(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &smtpPeriodhost, const Pistache::Optional<int32_t> &smtpPeriodport, const Pistache::Optional<std::string> &smtpPerioduser, const Pistache::Optional<std::string> &smtpPeriodpassword, const Pistache::Optional<std::string> &fromPeriodaddress, const Pistache::Optional<bool> &smtpPeriodssl, const Pistache::Optional<bool> &smtpPeriodstarttls, const Pistache::Optional<bool> &debugPeriodemail, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="maxPeriodrecipientPeriodcount"> (optional)</param>
    virtual void com_day_cq_mailer_impl_cq_mailing_service(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &maxPeriodrecipientPeriodcount, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="mailerPeriodemailPeriodcharset"> (optional)</param>
    virtual void com_day_cq_mailer_impl_email_cq_email_template_factory(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &mailerPeriodemailPeriodcharset, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="mailerPeriodemailPeriodembed"> (optional)</param>
    /// <param name="mailerPeriodemailPeriodcharset"> (optional)</param>
    /// <param name="mailerPeriodemailPeriodretrieverUserID"> (optional)</param>
    /// <param name="mailerPeriodemailPeriodretrieverUserPWD"> (optional)</param>
    virtual void com_day_cq_mailer_impl_email_cq_retriever_template_factory(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<bool> &mailerPeriodemailPeriodembed, const Pistache::Optional<std::string> &mailerPeriodemailPeriodcharset, const Pistache::Optional<std::string> &mailerPeriodemailPeriodretrieverUserID, const Pistache::Optional<std::string> &mailerPeriodemailPeriodretrieverUserPWD, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="aemPeriodmcmPeriodcampaignPeriodformConstraints"> (optional)</param>
    /// <param name="aemPeriodmcmPeriodcampaignPeriodpublicUrl"> (optional)</param>
    /// <param name="aemPeriodmcmPeriodcampaignPeriodrelaxedSSL"> (optional)</param>
    virtual void com_day_cq_mcm_campaign_impl_integration_config_impl(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &aemPeriodmcmPeriodcampaignPeriodformConstraints, const Pistache::Optional<std::string> &aemPeriodmcmPeriodcampaignPeriodpublicUrl, const Pistache::Optional<bool> &aemPeriodmcmPeriodcampaignPeriodrelaxedSSL, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="servicePeriodranking"> (optional)</param>
    /// <param name="tagpattern"> (optional)</param>
    virtual void com_day_cq_mcm_campaign_importer_personalized_text_handler_factory(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<int32_t> &servicePeriodranking, const Pistache::Optional<std::string> &tagpattern, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="fromPeriodaddress"> (optional)</param>
    /// <param name="senderPeriodhost"> (optional)</param>
    /// <param name="maxPeriodbouncePeriodcount"> (optional)</param>
    virtual void com_day_cq_mcm_core_newsletter_newsletter_email_service_impl(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &fromPeriodaddress, const Pistache::Optional<std::string> &senderPeriodhost, const Pistache::Optional<std::string> &maxPeriodbouncePeriodcount, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="experiencePeriodindirection"> (optional)</param>
    /// <param name="touchpointPeriodindirection"> (optional)</param>
    virtual void com_day_cq_mcm_impl_mcm_configuration(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &experiencePeriodindirection, const Pistache::Optional<std::string> &touchpointPeriodindirection, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="servicePeriodranking"> (optional)</param>
    /// <param name="tagpattern"> (optional)</param>
    /// <param name="componentPeriodresourceType"> (optional)</param>
    virtual void com_day_cq_mcm_landingpage_parser_taghandlers_cta_click_through_componen(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<int32_t> &servicePeriodranking, const Pistache::Optional<std::string> &tagpattern, const Pistache::Optional<std::string> &componentPeriodresourceType, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="servicePeriodranking"> (optional)</param>
    /// <param name="tagpattern"> (optional)</param>
    /// <param name="componentPeriodresourceType"> (optional)</param>
    virtual void com_day_cq_mcm_landingpage_parser_taghandlers_cta_graphical_click_throug(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<int32_t> &servicePeriodranking, const Pistache::Optional<std::string> &tagpattern, const Pistache::Optional<std::string> &componentPeriodresourceType, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="servicePeriodranking"> (optional)</param>
    /// <param name="tagpattern"> (optional)</param>
    virtual void com_day_cq_mcm_landingpage_parser_taghandlers_cta_lead_form_cta_component(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<int32_t> &servicePeriodranking, const Pistache::Optional<std::string> &tagpattern, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="servicePeriodranking"> (optional)</param>
    /// <param name="tagpattern"> (optional)</param>
    virtual void com_day_cq_mcm_landingpage_parser_taghandlers_mbox_m_box_experience_tag_ha(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<int32_t> &servicePeriodranking, const Pistache::Optional<std::string> &tagpattern, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="servicePeriodranking"> (optional)</param>
    /// <param name="tagpattern"> (optional)</param>
    /// <param name="componentPeriodresourceType"> (optional)</param>
    virtual void com_day_cq_mcm_landingpage_parser_taghandlers_mbox_target_component_tag_h(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<int32_t> &servicePeriodranking, const Pistache::Optional<std::string> &tagpattern, const Pistache::Optional<std::string> &componentPeriodresourceType, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="eventPeriodfilter"> (optional)</param>
    virtual void com_day_cq_notification_impl_notification_service_impl(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &eventPeriodfilter, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="forcelocation"> (optional)</param>
    virtual void com_day_cq_personalization_impl_servlets_targeting_configuration_servlet(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<bool> &forcelocation, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="id"> (optional)</param>
    /// <param name="enabled"> (optional)</param>
    /// <param name="reference"> (optional)</param>
    /// <param name="interval"> (optional)</param>
    /// <param name="expression"> (optional)</param>
    /// <param name="source"> (optional)</param>
    /// <param name="target"> (optional)</param>
    /// <param name="login"> (optional)</param>
    /// <param name="password"> (optional)</param>
    virtual void com_day_cq_polling_importer_impl_managed_poll_config_impl(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &id, const Pistache::Optional<bool> &enabled, const Pistache::Optional<bool> &reference, const Pistache::Optional<int32_t> &interval, const Pistache::Optional<std::string> &expression, const Pistache::Optional<std::string> &source, const Pistache::Optional<std::string> &target, const Pistache::Optional<std::string> &login, const Pistache::Optional<std::string> &password, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="importerPerioduser"> (optional)</param>
    virtual void com_day_cq_polling_importer_impl_managed_polling_importer_impl(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &importerPerioduser, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="importerPeriodminPeriodinterval"> (optional)</param>
    /// <param name="importerPerioduser"> (optional)</param>
    /// <param name="excludePeriodpaths"> (optional)</param>
    /// <param name="includePeriodpaths"> (optional)</param>
    virtual void com_day_cq_polling_importer_impl_polling_importer_impl(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<int32_t> &importerPeriodminPeriodinterval, const Pistache::Optional<std::string> &importerPerioduser, const Pistache::Optional<std::string> &excludePeriodpaths, const Pistache::Optional<std::string> &includePeriodpaths, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="servicePeriodranking"> (optional)</param>
    virtual void com_day_cq_replication_audit_replication_event_listener(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<int32_t> &servicePeriodranking, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="host"> (optional)</param>
    /// <param name="port"> (optional)</param>
    virtual void com_day_cq_replication_content_static_content_builder(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &host, const Pistache::Optional<int32_t> &port, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="jobPeriodtopics"> (optional)</param>
    /// <param name="serviceUserPeriodtarget"> (optional)</param>
    /// <param name="agentProviderPeriodtarget"> (optional)</param>
    virtual void com_day_cq_replication_impl_agent_manager_impl(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &jobPeriodtopics, const Pistache::Optional<std::string> &serviceUserPeriodtarget, const Pistache::Optional<std::string> &agentProviderPeriodtarget, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="binaryPeriodthreshold"> (optional)</param>
    virtual void com_day_cq_replication_impl_content_durbo_binary_less_content_builder(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<int32_t> &binaryPeriodthreshold, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="preservePeriodhierarchyPeriodnodes"> (optional)</param>
    /// <param name="ignorePeriodversioning"> (optional)</param>
    /// <param name="importPeriodacl"> (optional)</param>
    /// <param name="savePeriodthreshold"> (optional)</param>
    /// <param name="preservePerioduserPeriodpaths"> (optional)</param>
    /// <param name="preservePerioduuid"> (optional)</param>
    /// <param name="preservePerioduuidPeriodnodetypes"> (optional)</param>
    /// <param name="preservePerioduuidPeriodsubtrees"> (optional)</param>
    /// <param name="autoPeriodcommit"> (optional)</param>
    virtual void com_day_cq_replication_impl_content_durbo_durbo_import_configuration_prov(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<bool> &preservePeriodhierarchyPeriodnodes, const Pistache::Optional<bool> &ignorePeriodversioning, const Pistache::Optional<bool> &importPeriodacl, const Pistache::Optional<int32_t> &savePeriodthreshold, const Pistache::Optional<bool> &preservePerioduserPeriodpaths, const Pistache::Optional<bool> &preservePerioduuid, const Pistache::Optional<std::string> &preservePerioduuidPeriodnodetypes, const Pistache::Optional<std::string> &preservePerioduuidPeriodsubtrees, const Pistache::Optional<bool> &autoPeriodcommit, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="replicationPeriodcontentPerioduseFileStorage"> (optional)</param>
    /// <param name="replicationPeriodcontentPeriodmaxCommitAttempts"> (optional)</param>
    virtual void com_day_cq_replication_impl_replication_content_factory_provider_impl(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<bool> &replicationPeriodcontentPerioduseFileStorage, const Pistache::Optional<int32_t> &replicationPeriodcontentPeriodmaxCommitAttempts, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="receiverPeriodtmpfilePeriodthreshold"> (optional)</param>
    /// <param name="receiverPeriodpackagesPeriodusePeriodinstall"> (optional)</param>
    virtual void com_day_cq_replication_impl_replication_receiver_impl(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<int32_t> &receiverPeriodtmpfilePeriodthreshold, const Pistache::Optional<bool> &receiverPeriodpackagesPeriodusePeriodinstall, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="distributeEvents"> (optional)</param>
    virtual void com_day_cq_replication_impl_replicator_impl(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<bool> &distributeEvents, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="schedulerPeriodperiod"> (optional)</param>
    virtual void com_day_cq_replication_impl_reverse_replicator(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<int32_t> &schedulerPeriodperiod, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="disabledPeriodcipherPeriodsuites"> (optional)</param>
    /// <param name="enabledPeriodcipherPeriodsuites"> (optional)</param>
    virtual void com_day_cq_replication_impl_transport_binary_less_transport_handler(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &disabledPeriodcipherPeriodsuites, const Pistache::Optional<std::string> &enabledPeriodcipherPeriodsuites, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="disabledPeriodcipherPeriodsuites"> (optional)</param>
    /// <param name="enabledPeriodcipherPeriodsuites"> (optional)</param>
    virtual void com_day_cq_replication_impl_transport_http(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &disabledPeriodcipherPeriodsuites, const Pistache::Optional<std::string> &enabledPeriodcipherPeriodsuites, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="repcachePeriodenable"> (optional)</param>
    /// <param name="repcachePeriodttl"> (optional)</param>
    /// <param name="repcachePeriodmax"> (optional)</param>
    virtual void com_day_cq_reporting_impl_cache_cache_impl(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<bool> &repcachePeriodenable, const Pistache::Optional<int32_t> &repcachePeriodttl, const Pistache::Optional<int32_t> &repcachePeriodmax, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="repconfPeriodtimezone"> (optional)</param>
    /// <param name="repconfPeriodlocale"> (optional)</param>
    /// <param name="repconfPeriodsnapshots"> (optional)</param>
    /// <param name="repconfPeriodrepdir"> (optional)</param>
    /// <param name="repconfPeriodhourofday"> (optional)</param>
    /// <param name="repconfPeriodminofhour"> (optional)</param>
    /// <param name="repconfPeriodmaxrows"> (optional)</param>
    /// <param name="repconfPeriodfakedata"> (optional)</param>
    /// <param name="repconfPeriodsnapshotuser"> (optional)</param>
    /// <param name="repconfPeriodenforcesnapshotuser"> (optional)</param>
    virtual void com_day_cq_reporting_impl_config_service_impl(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &repconfPeriodtimezone, const Pistache::Optional<std::string> &repconfPeriodlocale, const Pistache::Optional<std::string> &repconfPeriodsnapshots, const Pistache::Optional<std::string> &repconfPeriodrepdir, const Pistache::Optional<int32_t> &repconfPeriodhourofday, const Pistache::Optional<int32_t> &repconfPeriodminofhour, const Pistache::Optional<int32_t> &repconfPeriodmaxrows, const Pistache::Optional<bool> &repconfPeriodfakedata, const Pistache::Optional<std::string> &repconfPeriodsnapshotuser, const Pistache::Optional<bool> &repconfPeriodenforcesnapshotuser, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="requestPeriodlogPeriodoutput"> (optional)</param>
    virtual void com_day_cq_reporting_impl_r_log_analyzer(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &requestPeriodlogPeriodoutput, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="schedulerPeriodperiod"> (optional)</param>
    /// <param name="schedulerPeriodconcurrent"> (optional)</param>
    /// <param name="servicePeriodbadLinkToleranceInterval"> (optional)</param>
    /// <param name="servicePeriodcheckOverridePatterns"> (optional)</param>
    /// <param name="servicePeriodcacheBrokenInternalLinks"> (optional)</param>
    /// <param name="servicePeriodspecialLinkPrefix"> (optional)</param>
    /// <param name="servicePeriodspecialLinkPatterns"> (optional)</param>
    virtual void com_day_cq_rewriter_linkchecker_impl_link_checker_impl(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<int32_t> &schedulerPeriodperiod, const Pistache::Optional<bool> &schedulerPeriodconcurrent, const Pistache::Optional<int32_t> &servicePeriodbadLinkToleranceInterval, const Pistache::Optional<std::string> &servicePeriodcheckOverridePatterns, const Pistache::Optional<bool> &servicePeriodcacheBrokenInternalLinks, const Pistache::Optional<std::string> &servicePeriodspecialLinkPrefix, const Pistache::Optional<std::string> &servicePeriodspecialLinkPatterns, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="schedulerPeriodperiod"> (optional)</param>
    /// <param name="schedulerPeriodconcurrent"> (optional)</param>
    /// <param name="goodLinkTestInterval"> (optional)</param>
    /// <param name="badLinkTestInterval"> (optional)</param>
    /// <param name="linkUnusedInterval"> (optional)</param>
    /// <param name="connectionPeriodtimeout"> (optional)</param>
    virtual void com_day_cq_rewriter_linkchecker_impl_link_checker_task(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<int32_t> &schedulerPeriodperiod, const Pistache::Optional<bool> &schedulerPeriodconcurrent, const Pistache::Optional<int32_t> &goodLinkTestInterval, const Pistache::Optional<int32_t> &badLinkTestInterval, const Pistache::Optional<int32_t> &linkUnusedInterval, const Pistache::Optional<int32_t> &connectionPeriodtimeout, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="linkcheckertransformerPerioddisableRewriting"> (optional)</param>
    /// <param name="linkcheckertransformerPerioddisableChecking"> (optional)</param>
    /// <param name="linkcheckertransformerPeriodmapCacheSize"> (optional)</param>
    /// <param name="linkcheckertransformerPeriodstrictExtensionCheck"> (optional)</param>
    /// <param name="linkcheckertransformerPeriodstripHtmltExtension"> (optional)</param>
    /// <param name="linkcheckertransformerPeriodrewriteElements"> (optional)</param>
    /// <param name="linkcheckertransformerPeriodstripExtensionPathBlacklist"> (optional)</param>
    virtual void com_day_cq_rewriter_linkchecker_impl_link_checker_transformer_factory(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<bool> &linkcheckertransformerPerioddisableRewriting, const Pistache::Optional<bool> &linkcheckertransformerPerioddisableChecking, const Pistache::Optional<int32_t> &linkcheckertransformerPeriodmapCacheSize, const Pistache::Optional<bool> &linkcheckertransformerPeriodstrictExtensionCheck, const Pistache::Optional<bool> &linkcheckertransformerPeriodstripHtmltExtension, const Pistache::Optional<std::string> &linkcheckertransformerPeriodrewriteElements, const Pistache::Optional<std::string> &linkcheckertransformerPeriodstripExtensionPathBlacklist, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="servicePeriodmaxLinksPerHost"> (optional)</param>
    /// <param name="servicePeriodsaveExternalLinkReferences"> (optional)</param>
    virtual void com_day_cq_rewriter_linkchecker_impl_link_info_storage_impl(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<int32_t> &servicePeriodmaxLinksPerHost, const Pistache::Optional<bool> &servicePeriodsaveExternalLinkReferences, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="htmlparserPeriodprocessTags"> (optional)</param>
    /// <param name="htmlparserPeriodpreserveCamelCase"> (optional)</param>
    virtual void com_day_cq_rewriter_processor_impl_html_parser_factory(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &htmlparserPeriodprocessTags, const Pistache::Optional<bool> &htmlparserPeriodpreserveCamelCase, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="excerptPeriodproperties"> (optional)</param>
    /// <param name="cachePeriodmaxPeriodentries"> (optional)</param>
    /// <param name="cachePeriodentryPeriodlifetime"> (optional)</param>
    /// <param name="xpathPeriodunion"> (optional)</param>
    virtual void com_day_cq_search_impl_builder_query_builder_impl(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &excerptPeriodproperties, const Pistache::Optional<int32_t> &cachePeriodmaxPeriodentries, const Pistache::Optional<int32_t> &cachePeriodentryPeriodlifetime, const Pistache::Optional<bool> &xpathPeriodunion, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="pathBuilderPeriodtarget"> (optional)</param>
    /// <param name="suggestPeriodbasepath"> (optional)</param>
    virtual void com_day_cq_search_suggest_impl_suggestion_index_manager_impl(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &pathBuilderPeriodtarget, const Pistache::Optional<std::string> &suggestPeriodbasepath, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="cqPeriodsearchpromotePeriodconfighandlerPeriodenabled"> (optional)</param>
    virtual void com_day_cq_searchpromote_impl_publish_search_promote_config_handler(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<bool> &cqPeriodsearchpromotePeriodconfighandlerPeriodenabled, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="cqPeriodsearchpromotePeriodconfigurationPeriodserverPerioduri"> (optional)</param>
    /// <param name="cqPeriodsearchpromotePeriodconfigurationPeriodenvironment"> (optional)</param>
    /// <param name="connectionPeriodtimeout"> (optional)</param>
    /// <param name="socketPeriodtimeout"> (optional)</param>
    virtual void com_day_cq_searchpromote_impl_search_promote_service_impl(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &cqPeriodsearchpromotePeriodconfigurationPeriodserverPerioduri, const Pistache::Optional<std::string> &cqPeriodsearchpromotePeriodconfigurationPeriodenvironment, const Pistache::Optional<int32_t> &connectionPeriodtimeout, const Pistache::Optional<int32_t> &socketPeriodtimeout, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="cqPeriodaclsetupPeriodrules"> (optional)</param>
    virtual void com_day_cq_security_acl_setup(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &cqPeriodaclsetupPeriodrules, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="schedulerPeriodperiod"> (optional)</param>
    /// <param name="schedulerPeriodconcurrent"> (optional)</param>
    /// <param name="path"> (optional)</param>
    /// <param name="workspace"> (optional)</param>
    /// <param name="keywordsPath"> (optional)</param>
    /// <param name="asyncEntries"> (optional)</param>
    virtual void com_day_cq_statistics_impl_statistics_service_impl(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<int32_t> &schedulerPeriodperiod, const Pistache::Optional<bool> &schedulerPeriodconcurrent, const Pistache::Optional<std::string> &path, const Pistache::Optional<std::string> &workspace, const Pistache::Optional<std::string> &keywordsPath, const Pistache::Optional<bool> &asyncEntries, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="validationPeriodenabled"> (optional)</param>
    virtual void com_day_cq_tagging_impl_jcr_tag_manager_factory_impl(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<bool> &validationPeriodenabled, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="ignorePath"> (optional)</param>
    virtual void com_day_cq_tagging_impl_search_tag_predicate_evaluator(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<bool> &ignorePath, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="schedulerPeriodexpression"> (optional)</param>
    virtual void com_day_cq_tagging_impl_tag_garbage_collector(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &schedulerPeriodexpression, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="cqPeriodpagesupdatehandlerPeriodimageresourcetypes"> (optional)</param>
    virtual void com_day_cq_wcm_contentsync_impl_handler_pages_update_handler(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &cqPeriodpagesupdatehandlerPeriodimageresourcetypes, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="cqPeriodcontentsyncPeriodpathrewritertransformerPeriodmappingPeriodlinks"> (optional)</param>
    /// <param name="cqPeriodcontentsyncPeriodpathrewritertransformerPeriodmappingPeriodclientlibs"> (optional)</param>
    /// <param name="cqPeriodcontentsyncPeriodpathrewritertransformerPeriodmappingPeriodimages"> (optional)</param>
    /// <param name="cqPeriodcontentsyncPeriodpathrewritertransformerPeriodattributePeriodpattern"> (optional)</param>
    /// <param name="cqPeriodcontentsyncPeriodpathrewritertransformerPeriodclientlibraryPeriodpattern"> (optional)</param>
    /// <param name="cqPeriodcontentsyncPeriodpathrewritertransformerPeriodclientlibraryPeriodreplace"> (optional)</param>
    virtual void com_day_cq_wcm_contentsync_impl_rewriter_path_rewriter_transformer_factor(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &cqPeriodcontentsyncPeriodpathrewritertransformerPeriodmappingPeriodlinks, const Pistache::Optional<std::string> &cqPeriodcontentsyncPeriodpathrewritertransformerPeriodmappingPeriodclientlibs, const Pistache::Optional<std::string> &cqPeriodcontentsyncPeriodpathrewritertransformerPeriodmappingPeriodimages, const Pistache::Optional<std::string> &cqPeriodcontentsyncPeriodpathrewritertransformerPeriodattributePeriodpattern, const Pistache::Optional<std::string> &cqPeriodcontentsyncPeriodpathrewritertransformerPeriodclientlibraryPeriodpattern, const Pistache::Optional<std::string> &cqPeriodcontentsyncPeriodpathrewritertransformerPeriodclientlibraryPeriodreplace, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="authoringUIModeServicePerioddefault"> (optional)</param>
    virtual void com_day_cq_wcm_core_impl_authoring_ui_mode_service_impl(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &authoringUIModeServicePerioddefault, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="wcmcommandservletPerioddeleteWhitelist"> (optional)</param>
    virtual void com_day_cq_wcm_core_impl_commands_wcm_command_servlet(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &wcmcommandservletPerioddeleteWhitelist, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="dimPerioddefaultPeriodmode"> (optional)</param>
    /// <param name="dimPeriodappcachePeriodenabled"> (optional)</param>
    virtual void com_day_cq_wcm_core_impl_devicedetection_device_identification_mode_impl(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &dimPerioddefaultPeriodmode, const Pistache::Optional<bool> &dimPeriodappcachePeriodenabled, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="configured"> (optional)</param>
    virtual void com_day_cq_wcm_core_impl_event_page_event_audit_listener(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &configured, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="paths"> (optional)</param>
    virtual void com_day_cq_wcm_core_impl_event_page_post_processor(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &paths, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="paths"> (optional)</param>
    /// <param name="excludedPaths"> (optional)</param>
    virtual void com_day_cq_wcm_core_impl_event_repository_change_event_listener(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &paths, const Pistache::Optional<std::string> &excludedPaths, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="paths"> (optional)</param>
    virtual void com_day_cq_wcm_core_impl_event_template_post_processor(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &paths, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="langmgrPeriodlistPeriodpath"> (optional)</param>
    /// <param name="langmgrPeriodcountryPerioddefault"> (optional)</param>
    virtual void com_day_cq_wcm_core_impl_language_manager_impl(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &langmgrPeriodlistPeriodpath, const Pistache::Optional<std::string> &langmgrPeriodcountryPerioddefault, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="linkPeriodexpiredPeriodprefix"> (optional)</param>
    /// <param name="linkPeriodexpiredPeriodremove"> (optional)</param>
    /// <param name="linkPeriodexpiredPeriodsuffix"> (optional)</param>
    /// <param name="linkPeriodinvalidPeriodprefix"> (optional)</param>
    /// <param name="linkPeriodinvalidPeriodremove"> (optional)</param>
    /// <param name="linkPeriodinvalidPeriodsuffix"> (optional)</param>
    /// <param name="linkPeriodpredatedPeriodprefix"> (optional)</param>
    /// <param name="linkPeriodpredatedPeriodremove"> (optional)</param>
    /// <param name="linkPeriodpredatedPeriodsuffix"> (optional)</param>
    /// <param name="linkPeriodwcmmodes"> (optional)</param>
    virtual void com_day_cq_wcm_core_impl_link_checker_configuration_factory_impl(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &linkPeriodexpiredPeriodprefix, const Pistache::Optional<bool> &linkPeriodexpiredPeriodremove, const Pistache::Optional<std::string> &linkPeriodexpiredPeriodsuffix, const Pistache::Optional<std::string> &linkPeriodinvalidPeriodprefix, const Pistache::Optional<bool> &linkPeriodinvalidPeriodremove, const Pistache::Optional<std::string> &linkPeriodinvalidPeriodsuffix, const Pistache::Optional<std::string> &linkPeriodpredatedPeriodprefix, const Pistache::Optional<bool> &linkPeriodpredatedPeriodremove, const Pistache::Optional<std::string> &linkPeriodpredatedPeriodsuffix, const Pistache::Optional<std::string> &linkPeriodwcmmodes, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="pagePeriodinfoPeriodproviderPeriodpropertyPeriodregexPerioddefault"> (optional)</param>
    /// <param name="pagePeriodinfoPeriodproviderPeriodpropertyPeriodname"> (optional)</param>
    virtual void com_day_cq_wcm_core_impl_page_page_info_aggregator_impl(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &pagePeriodinfoPeriodproviderPeriodpropertyPeriodregexPerioddefault, const Pistache::Optional<std::string> &pagePeriodinfoPeriodproviderPeriodpropertyPeriodname, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="illegalCharMapping"> (optional)</param>
    /// <param name="pageSubTreeActivationCheck"> (optional)</param>
    virtual void com_day_cq_wcm_core_impl_page_page_manager_factory_impl(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &illegalCharMapping, const Pistache::Optional<bool> &pageSubTreeActivationCheck, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="contentReferenceConfigPeriodresourceTypes"> (optional)</param>
    virtual void com_day_cq_wcm_core_impl_references_content_content_reference_config(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &contentReferenceConfigPeriodresourceTypes, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="damPeriodshowexpired"> (optional)</param>
    /// <param name="damPeriodshowhidden"> (optional)</param>
    /// <param name="tagTitleSearch"> (optional)</param>
    /// <param name="guessTotal"> (optional)</param>
    /// <param name="damPeriodexpiryProperty"> (optional)</param>
    virtual void com_day_cq_wcm_core_impl_servlets_contentfinder_asset_view_handler(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<bool> &damPeriodshowexpired, const Pistache::Optional<bool> &damPeriodshowhidden, const Pistache::Optional<bool> &tagTitleSearch, const Pistache::Optional<std::string> &guessTotal, const Pistache::Optional<std::string> &damPeriodexpiryProperty, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="itemPeriodresourcePeriodtypes"> (optional)</param>
    virtual void com_day_cq_wcm_core_impl_servlets_contentfinder_connector_connector_vie(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &itemPeriodresourcePeriodtypes, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="guessTotal"> (optional)</param>
    /// <param name="tagTitleSearch"> (optional)</param>
    virtual void com_day_cq_wcm_core_impl_servlets_contentfinder_page_view_handler(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &guessTotal, const Pistache::Optional<bool> &tagTitleSearch, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="scope"> (optional)</param>
    virtual void com_day_cq_wcm_core_impl_servlets_find_replace_servlet(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &scope, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="referencesearchservletPeriodmaxReferencesPerPage"> (optional)</param>
    /// <param name="referencesearchservletPeriodmaxPages"> (optional)</param>
    virtual void com_day_cq_wcm_core_impl_servlets_reference_search_servlet(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<int32_t> &referencesearchservletPeriodmaxReferencesPerPage, const Pistache::Optional<int32_t> &referencesearchservletPeriodmaxPages, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="workspace"> (optional)</param>
    /// <param name="dimensions"> (optional)</param>
    virtual void com_day_cq_wcm_core_impl_servlets_thumbnail_servlet(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &workspace, const Pistache::Optional<std::string> &dimensions, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="nonValidChars"> (optional)</param>
    virtual void com_day_cq_wcm_core_impl_utils_default_page_name_validator(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &nonValidChars, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="defaultPeriodexternalizerPerioddomain"> (optional)</param>
    virtual void com_day_cq_wcm_core_impl_variants_page_variants_provider_impl(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &defaultPeriodexternalizerPerioddomain, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="versionmanagerPeriodcreateVersionOnActivation"> (optional)</param>
    /// <param name="versionmanagerPeriodpurgingEnabled"> (optional)</param>
    /// <param name="versionmanagerPeriodpurgePaths"> (optional)</param>
    /// <param name="versionmanagerPeriodivPaths"> (optional)</param>
    /// <param name="versionmanagerPeriodmaxAgeDays"> (optional)</param>
    /// <param name="versionmanagerPeriodmaxNumberVersions"> (optional)</param>
    /// <param name="versionmanagerPeriodminNumberVersions"> (optional)</param>
    virtual void com_day_cq_wcm_core_impl_version_manager_impl(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<bool> &versionmanagerPeriodcreateVersionOnActivation, const Pistache::Optional<bool> &versionmanagerPeriodpurgingEnabled, const Pistache::Optional<std::string> &versionmanagerPeriodpurgePaths, const Pistache::Optional<std::string> &versionmanagerPeriodivPaths, const Pistache::Optional<int32_t> &versionmanagerPeriodmaxAgeDays, const Pistache::Optional<int32_t> &versionmanagerPeriodmaxNumberVersions, const Pistache::Optional<int32_t> &versionmanagerPeriodminNumberVersions, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="versionpurgePeriodpaths"> (optional)</param>
    /// <param name="versionpurgePeriodrecursive"> (optional)</param>
    /// <param name="versionpurgePeriodmaxVersions"> (optional)</param>
    /// <param name="versionpurgePeriodminVersions"> (optional)</param>
    /// <param name="versionpurgePeriodmaxAgeDays"> (optional)</param>
    virtual void com_day_cq_wcm_core_impl_version_purge_task(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &versionpurgePeriodpaths, const Pistache::Optional<bool> &versionpurgePeriodrecursive, const Pistache::Optional<int32_t> &versionpurgePeriodmaxVersions, const Pistache::Optional<int32_t> &versionpurgePeriodminVersions, const Pistache::Optional<int32_t> &versionpurgePeriodmaxAgeDays, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="wcmdbgfilterPeriodenabled"> (optional)</param>
    /// <param name="wcmdbgfilterPeriodjspDebug"> (optional)</param>
    virtual void com_day_cq_wcm_core_impl_wcm_debug_filter(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<bool> &wcmdbgfilterPeriodenabled, const Pistache::Optional<bool> &wcmdbgfilterPeriodjspDebug, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="wcmdevmodefilterPeriodenabled"> (optional)</param>
    virtual void com_day_cq_wcm_core_impl_wcm_developer_mode_filter(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<bool> &wcmdevmodefilterPeriodenabled, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="filterPeriodorder"> (optional)</param>
    /// <param name="filterPeriodscope"> (optional)</param>
    virtual void com_day_cq_wcm_core_impl_warp_time_warp_filter(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &filterPeriodorder, const Pistache::Optional<std::string> &filterPeriodscope, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="mvtstatisticsPeriodtrackingurl"> (optional)</param>
    virtual void com_day_cq_wcm_core_mvt_mvt_statistics_impl(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &mvtstatisticsPeriodtrackingurl, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="pageviewstatisticsPeriodtrackingurl"> (optional)</param>
    /// <param name="pageviewstatisticsPeriodtrackingscriptPeriodenabled"> (optional)</param>
    virtual void com_day_cq_wcm_core_stats_page_view_statistics_impl(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &pageviewstatisticsPeriodtrackingurl, const Pistache::Optional<std::string> &pageviewstatisticsPeriodtrackingscriptPeriodenabled, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="wcmfilterPeriodmode"> (optional)</param>
    virtual void com_day_cq_wcm_core_wcm_request_filter(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &wcmfilterPeriodmode, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="extractPeriodfilter"> (optional)</param>
    virtual void com_day_cq_wcm_designimporter_design_package_importer(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &extractPeriodfilter, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="filepattern"> (optional)</param>
    /// <param name="buildPeriodpagePeriodnodes"> (optional)</param>
    /// <param name="buildPeriodclientPeriodlibs"> (optional)</param>
    /// <param name="buildPeriodcanvasPeriodcomponent"> (optional)</param>
    virtual void com_day_cq_wcm_designimporter_impl_canvas_builder_impl(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &filepattern, const Pistache::Optional<bool> &buildPeriodpagePeriodnodes, const Pistache::Optional<bool> &buildPeriodclientPeriodlibs, const Pistache::Optional<bool> &buildPeriodcanvasPeriodcomponent, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="minThreadPoolSize"> (optional)</param>
    /// <param name="maxThreadPoolSize"> (optional)</param>
    virtual void com_day_cq_wcm_designimporter_impl_canvas_page_delete_handler(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<int32_t> &minThreadPoolSize, const Pistache::Optional<int32_t> &maxThreadPoolSize, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="searchPeriodpattern"> (optional)</param>
    /// <param name="replacePeriodpattern"> (optional)</param>
    virtual void com_day_cq_wcm_designimporter_impl_entry_preprocessor_impl(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &searchPeriodpattern, const Pistache::Optional<std::string> &replacePeriodpattern, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="filepattern"> (optional)</param>
    /// <param name="devicePeriodgroups"> (optional)</param>
    /// <param name="buildPeriodpagePeriodnodes"> (optional)</param>
    /// <param name="buildPeriodclientPeriodlibs"> (optional)</param>
    /// <param name="buildPeriodcanvasPeriodcomponent"> (optional)</param>
    virtual void com_day_cq_wcm_designimporter_impl_mobile_canvas_builder_impl(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &filepattern, const Pistache::Optional<std::string> &devicePeriodgroups, const Pistache::Optional<bool> &buildPeriodpagePeriodnodes, const Pistache::Optional<bool> &buildPeriodclientPeriodlibs, const Pistache::Optional<bool> &buildPeriodcanvasPeriodcomponent, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="servicePeriodranking"> (optional)</param>
    /// <param name="tagpattern"> (optional)</param>
    virtual void com_day_cq_wcm_designimporter_parser_taghandlers_factory_canvas_compone(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<int32_t> &servicePeriodranking, const Pistache::Optional<std::string> &tagpattern, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="servicePeriodranking"> (optional)</param>
    /// <param name="tagpattern"> (optional)</param>
    virtual void com_day_cq_wcm_designimporter_parser_taghandlers_factory_default_compon(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<int32_t> &servicePeriodranking, const Pistache::Optional<std::string> &tagpattern, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="servicePeriodranking"> (optional)</param>
    /// <param name="tagpattern"> (optional)</param>
    virtual void com_day_cq_wcm_designimporter_parser_taghandlers_factory_default_tag_han(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<int32_t> &servicePeriodranking, const Pistache::Optional<std::string> &tagpattern, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="servicePeriodranking"> (optional)</param>
    /// <param name="tagpattern"> (optional)</param>
    virtual void com_day_cq_wcm_designimporter_parser_taghandlers_factory_head_tag_handle(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<int32_t> &servicePeriodranking, const Pistache::Optional<std::string> &tagpattern, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="servicePeriodranking"> (optional)</param>
    /// <param name="tagpattern"> (optional)</param>
    virtual void com_day_cq_wcm_designimporter_parser_taghandlers_factory_i_frame_tag_hand(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<int32_t> &servicePeriodranking, const Pistache::Optional<std::string> &tagpattern, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="servicePeriodranking"> (optional)</param>
    /// <param name="tagpattern"> (optional)</param>
    /// <param name="componentPeriodresourceType"> (optional)</param>
    virtual void com_day_cq_wcm_designimporter_parser_taghandlers_factory_image_componen(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<int32_t> &servicePeriodranking, const Pistache::Optional<std::string> &tagpattern, const Pistache::Optional<std::string> &componentPeriodresourceType, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="servicePeriodranking"> (optional)</param>
    /// <param name="tagpattern"> (optional)</param>
    virtual void com_day_cq_wcm_designimporter_parser_taghandlers_factory_img_tag_handler(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<int32_t> &servicePeriodranking, const Pistache::Optional<std::string> &tagpattern, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="servicePeriodranking"> (optional)</param>
    /// <param name="tagpattern"> (optional)</param>
    virtual void com_day_cq_wcm_designimporter_parser_taghandlers_factory_inline_script_t(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<int32_t> &servicePeriodranking, const Pistache::Optional<std::string> &tagpattern, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="servicePeriodranking"> (optional)</param>
    /// <param name="tagpattern"> (optional)</param>
    virtual void com_day_cq_wcm_designimporter_parser_taghandlers_factory_link_tag_handle(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<int32_t> &servicePeriodranking, const Pistache::Optional<std::string> &tagpattern, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="servicePeriodranking"> (optional)</param>
    /// <param name="tagpattern"> (optional)</param>
    virtual void com_day_cq_wcm_designimporter_parser_taghandlers_factory_meta_tag_handle(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<int32_t> &servicePeriodranking, const Pistache::Optional<std::string> &tagpattern, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="servicePeriodranking"> (optional)</param>
    /// <param name="tagpattern"> (optional)</param>
    virtual void com_day_cq_wcm_designimporter_parser_taghandlers_factory_non_script_tag_h(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<int32_t> &servicePeriodranking, const Pistache::Optional<std::string> &tagpattern, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="servicePeriodranking"> (optional)</param>
    /// <param name="tagpattern"> (optional)</param>
    /// <param name="componentPeriodresourceType"> (optional)</param>
    virtual void com_day_cq_wcm_designimporter_parser_taghandlers_factory_parsys_compone(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<int32_t> &servicePeriodranking, const Pistache::Optional<std::string> &tagpattern, const Pistache::Optional<std::string> &componentPeriodresourceType, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="servicePeriodranking"> (optional)</param>
    /// <param name="tagpattern"> (optional)</param>
    virtual void com_day_cq_wcm_designimporter_parser_taghandlers_factory_script_tag_hand(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<int32_t> &servicePeriodranking, const Pistache::Optional<std::string> &tagpattern, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="servicePeriodranking"> (optional)</param>
    /// <param name="tagpattern"> (optional)</param>
    virtual void com_day_cq_wcm_designimporter_parser_taghandlers_factory_style_tag_handl(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<int32_t> &servicePeriodranking, const Pistache::Optional<std::string> &tagpattern, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="servicePeriodranking"> (optional)</param>
    /// <param name="tagpattern"> (optional)</param>
    /// <param name="componentPeriodresourceType"> (optional)</param>
    virtual void com_day_cq_wcm_designimporter_parser_taghandlers_factory_text_component(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<int32_t> &servicePeriodranking, const Pistache::Optional<std::string> &tagpattern, const Pistache::Optional<std::string> &componentPeriodresourceType, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="servicePeriodranking"> (optional)</param>
    /// <param name="tagpattern"> (optional)</param>
    /// <param name="componentPeriodresourceType"> (optional)</param>
    virtual void com_day_cq_wcm_designimporter_parser_taghandlers_factory_title_componen(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<int32_t> &servicePeriodranking, const Pistache::Optional<std::string> &tagpattern, const Pistache::Optional<std::string> &componentPeriodresourceType, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="servicePeriodranking"> (optional)</param>
    /// <param name="tagpattern"> (optional)</param>
    virtual void com_day_cq_wcm_designimporter_parser_taghandlers_factory_title_tag_handl(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<int32_t> &servicePeriodranking, const Pistache::Optional<std::string> &tagpattern, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="servicePeriodname"> (optional)</param>
    /// <param name="slingPeriodservletPeriodresourceTypes"> (optional)</param>
    /// <param name="slingPeriodservletPeriodselectors"> (optional)</param>
    /// <param name="slingPeriodservletPeriodmethods"> (optional)</param>
    /// <param name="formsPeriodformchooserservletPeriodadvansesearchPeriodrequire"> (optional)</param>
    virtual void com_day_cq_wcm_foundation_forms_impl_form_chooser_servlet(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &servicePeriodname, const Pistache::Optional<std::string> &slingPeriodservletPeriodresourceTypes, const Pistache::Optional<std::string> &slingPeriodservletPeriodselectors, const Pistache::Optional<std::string> &slingPeriodservletPeriodmethods, const Pistache::Optional<bool> &formsPeriodformchooserservletPeriodadvansesearchPeriodrequire, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="formsPeriodformparagraphpostprocessorPeriodenabled"> (optional)</param>
    /// <param name="formsPeriodformparagraphpostprocessorPeriodformresourcetypes"> (optional)</param>
    virtual void com_day_cq_wcm_foundation_forms_impl_form_paragraph_post_processor(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<bool> &formsPeriodformparagraphpostprocessorPeriodenabled, const Pistache::Optional<std::string> &formsPeriodformparagraphpostprocessorPeriodformresourcetypes, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="namePeriodwhitelist"> (optional)</param>
    /// <param name="allowPeriodexpressions"> (optional)</param>
    virtual void com_day_cq_wcm_foundation_forms_impl_forms_handling_servlet(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &namePeriodwhitelist, const Pistache::Optional<bool> &allowPeriodexpressions, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="slingPeriodservletPeriodresourceTypes"> (optional)</param>
    /// <param name="slingPeriodservletPeriodselectors"> (optional)</param>
    /// <param name="resourcePeriodwhitelist"> (optional)</param>
    /// <param name="resourcePeriodblacklist"> (optional)</param>
    virtual void com_day_cq_wcm_foundation_forms_impl_mail_servlet(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &slingPeriodservletPeriodresourceTypes, const Pistache::Optional<std::string> &slingPeriodservletPeriodselectors, const Pistache::Optional<std::string> &resourcePeriodwhitelist, const Pistache::Optional<std::string> &resourcePeriodblacklist, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="adaptPeriodsupportedPeriodwidths"> (optional)</param>
    virtual void com_day_cq_wcm_foundation_impl_adaptive_image_component_servlet(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &adaptPeriodsupportedPeriodwidths, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="path"> (optional)</param>
    /// <param name="authPeriodhttpPeriodnologin"> (optional)</param>
    /// <param name="authPeriodhttpPeriodrealm"> (optional)</param>
    /// <param name="authPerioddefaultPeriodloginpage"> (optional)</param>
    /// <param name="authPeriodcredPeriodform"> (optional)</param>
    /// <param name="authPeriodcredPeriodutf8"> (optional)</param>
    virtual void com_day_cq_wcm_foundation_impl_http_auth_handler(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &path, const Pistache::Optional<bool> &authPeriodhttpPeriodnologin, const Pistache::Optional<std::string> &authPeriodhttpPeriodrealm, const Pistache::Optional<std::string> &authPerioddefaultPeriodloginpage, const Pistache::Optional<std::string> &authPeriodcredPeriodform, const Pistache::Optional<std::string> &authPeriodcredPeriodutf8, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="slingPeriodauthPeriodrequirements"> (optional)</param>
    virtual void com_day_cq_wcm_foundation_impl_page_impressions_tracker(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &slingPeriodauthPeriodrequirements, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="excludedPeriodresourcePeriodtypes"> (optional)</param>
    virtual void com_day_cq_wcm_foundation_impl_page_redirect_servlet(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &excludedPeriodresourcePeriodtypes, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="defaultPeriodattachmentPeriodtypePeriodblacklist"> (optional)</param>
    /// <param name="baselinePeriodattachmentPeriodtypePeriodblacklist"> (optional)</param>
    virtual void com_day_cq_wcm_foundation_security_impl_default_attachment_type_blacklist(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &defaultPeriodattachmentPeriodtypePeriodblacklist, const Pistache::Optional<std::string> &baselinePeriodattachmentPeriodtypePeriodblacklist, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="parameterPeriodwhitelist"> (optional)</param>
    /// <param name="parameterPeriodwhitelistPeriodprefixes"> (optional)</param>
    /// <param name="binaryPeriodparameterPeriodwhitelist"> (optional)</param>
    /// <param name="modifierPeriodwhitelist"> (optional)</param>
    /// <param name="operationPeriodwhitelist"> (optional)</param>
    /// <param name="operationPeriodwhitelistPeriodprefixes"> (optional)</param>
    /// <param name="typehintPeriodwhitelist"> (optional)</param>
    /// <param name="resourcetypePeriodwhitelist"> (optional)</param>
    virtual void com_day_cq_wcm_foundation_security_impl_safer_sling_post_validator_impl(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &parameterPeriodwhitelist, const Pistache::Optional<std::string> &parameterPeriodwhitelistPeriodprefixes, const Pistache::Optional<std::string> &binaryPeriodparameterPeriodwhitelist, const Pistache::Optional<std::string> &modifierPeriodwhitelist, const Pistache::Optional<std::string> &operationPeriodwhitelist, const Pistache::Optional<std::string> &operationPeriodwhitelistPeriodprefixes, const Pistache::Optional<std::string> &typehintPeriodwhitelist, const Pistache::Optional<std::string> &resourcetypePeriodwhitelist, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="devicePeriodinfoPeriodtransformerPeriodenabled"> (optional)</param>
    /// <param name="devicePeriodinfoPeriodtransformerPeriodcssPeriodstyle"> (optional)</param>
    virtual void com_day_cq_wcm_mobile_core_impl_device_device_info_transformer_factory(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<bool> &devicePeriodinfoPeriodtransformerPeriodenabled, const Pistache::Optional<std::string> &devicePeriodinfoPeriodtransformerPeriodcssPeriodstyle, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="redirectPeriodenabled"> (optional)</param>
    /// <param name="redirectPeriodstatsPeriodenabled"> (optional)</param>
    /// <param name="redirectPeriodextensions"> (optional)</param>
    /// <param name="redirectPeriodpaths"> (optional)</param>
    virtual void com_day_cq_wcm_mobile_core_impl_redirect_redirect_filter(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<bool> &redirectPeriodenabled, const Pistache::Optional<bool> &redirectPeriodstatsPeriodenabled, const Pistache::Optional<std::string> &redirectPeriodextensions, const Pistache::Optional<std::string> &redirectPeriodpaths, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="cqPeriodwcmPeriodmsmPeriodactionPeriodexcludednodetypes"> (optional)</param>
    /// <param name="cqPeriodwcmPeriodmsmPeriodactionPeriodexcludedparagraphitems"> (optional)</param>
    /// <param name="cqPeriodwcmPeriodmsmPeriodactionPeriodexcludedprops"> (optional)</param>
    /// <param name="contentcopyactionPeriodorderPeriodstyle"> (optional)</param>
    virtual void com_day_cq_wcm_msm_impl_actions_content_copy_action_factory(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &cqPeriodwcmPeriodmsmPeriodactionPeriodexcludednodetypes, const Pistache::Optional<std::string> &cqPeriodwcmPeriodmsmPeriodactionPeriodexcludedparagraphitems, const Pistache::Optional<std::string> &cqPeriodwcmPeriodmsmPeriodactionPeriodexcludedprops, const Pistache::Optional<std::string> &contentcopyactionPeriodorderPeriodstyle, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="cqPeriodwcmPeriodmsmPeriodactionPeriodexcludednodetypes"> (optional)</param>
    /// <param name="cqPeriodwcmPeriodmsmPeriodactionPeriodexcludedparagraphitems"> (optional)</param>
    /// <param name="cqPeriodwcmPeriodmsmPeriodactionPeriodexcludedprops"> (optional)</param>
    virtual void com_day_cq_wcm_msm_impl_actions_content_delete_action_factory(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &cqPeriodwcmPeriodmsmPeriodactionPeriodexcludednodetypes, const Pistache::Optional<std::string> &cqPeriodwcmPeriodmsmPeriodactionPeriodexcludedparagraphitems, const Pistache::Optional<std::string> &cqPeriodwcmPeriodmsmPeriodactionPeriodexcludedprops, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="cqPeriodwcmPeriodmsmPeriodactionPeriodexcludednodetypes"> (optional)</param>
    /// <param name="cqPeriodwcmPeriodmsmPeriodactionPeriodexcludedparagraphitems"> (optional)</param>
    /// <param name="cqPeriodwcmPeriodmsmPeriodactionPeriodexcludedprops"> (optional)</param>
    /// <param name="cqPeriodwcmPeriodmsmPeriodactionPeriodignoredMixin"> (optional)</param>
    virtual void com_day_cq_wcm_msm_impl_actions_content_update_action_factory(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &cqPeriodwcmPeriodmsmPeriodactionPeriodexcludednodetypes, const Pistache::Optional<std::string> &cqPeriodwcmPeriodmsmPeriodactionPeriodexcludedparagraphitems, const Pistache::Optional<std::string> &cqPeriodwcmPeriodmsmPeriodactionPeriodexcludedprops, const Pistache::Optional<std::string> &cqPeriodwcmPeriodmsmPeriodactionPeriodignoredMixin, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="cqPeriodwcmPeriodmsmPeriodactionPeriodexcludednodetypes"> (optional)</param>
    /// <param name="cqPeriodwcmPeriodmsmPeriodactionPeriodexcludedparagraphitems"> (optional)</param>
    /// <param name="cqPeriodwcmPeriodmsmPeriodactionPeriodexcludedprops"> (optional)</param>
    virtual void com_day_cq_wcm_msm_impl_actions_order_children_action_factory(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &cqPeriodwcmPeriodmsmPeriodactionPeriodexcludednodetypes, const Pistache::Optional<std::string> &cqPeriodwcmPeriodmsmPeriodactionPeriodexcludedparagraphitems, const Pistache::Optional<std::string> &cqPeriodwcmPeriodmsmPeriodactionPeriodexcludedprops, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="cqPeriodwcmPeriodmsmPeriodactionPeriodexcludednodetypes"> (optional)</param>
    /// <param name="cqPeriodwcmPeriodmsmPeriodactionPeriodexcludedparagraphitems"> (optional)</param>
    /// <param name="cqPeriodwcmPeriodmsmPeriodactionPeriodexcludedprops"> (optional)</param>
    /// <param name="cqPeriodwcmPeriodmsmPeriodimplPeriodactionsPeriodpagemovePeriodpropReferenceUpdate"> (optional)</param>
    virtual void com_day_cq_wcm_msm_impl_actions_page_move_action_factory(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &cqPeriodwcmPeriodmsmPeriodactionPeriodexcludednodetypes, const Pistache::Optional<std::string> &cqPeriodwcmPeriodmsmPeriodactionPeriodexcludedparagraphitems, const Pistache::Optional<std::string> &cqPeriodwcmPeriodmsmPeriodactionPeriodexcludedprops, const Pistache::Optional<bool> &cqPeriodwcmPeriodmsmPeriodimplPeriodactionsPeriodpagemovePeriodpropReferenceUpdate, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="cqPeriodwcmPeriodmsmPeriodactionPeriodexcludednodetypes"> (optional)</param>
    /// <param name="cqPeriodwcmPeriodmsmPeriodactionPeriodexcludedparagraphitems"> (optional)</param>
    /// <param name="cqPeriodwcmPeriodmsmPeriodactionPeriodexcludedprops"> (optional)</param>
    /// <param name="cqPeriodwcmPeriodmsmPeriodimplPeriodactionPeriodreferencesupdatePeriodpropUpdateNested"> (optional)</param>
    virtual void com_day_cq_wcm_msm_impl_actions_references_update_action_factory(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &cqPeriodwcmPeriodmsmPeriodactionPeriodexcludednodetypes, const Pistache::Optional<std::string> &cqPeriodwcmPeriodmsmPeriodactionPeriodexcludedparagraphitems, const Pistache::Optional<std::string> &cqPeriodwcmPeriodmsmPeriodactionPeriodexcludedprops, const Pistache::Optional<bool> &cqPeriodwcmPeriodmsmPeriodimplPeriodactionPeriodreferencesupdatePeriodpropUpdateNested, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="cqPeriodwcmPeriodmsmPeriodactionPeriodexcludednodetypes"> (optional)</param>
    /// <param name="cqPeriodwcmPeriodmsmPeriodactionPeriodexcludedparagraphitems"> (optional)</param>
    /// <param name="cqPeriodwcmPeriodmsmPeriodactionPeriodexcludedprops"> (optional)</param>
    virtual void com_day_cq_wcm_msm_impl_actions_version_copy_action_factory(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &cqPeriodwcmPeriodmsmPeriodactionPeriodexcludednodetypes, const Pistache::Optional<std::string> &cqPeriodwcmPeriodmsmPeriodactionPeriodexcludedparagraphitems, const Pistache::Optional<std::string> &cqPeriodwcmPeriodmsmPeriodactionPeriodexcludedprops, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="liverelationshipmgrPeriodrelationsconfigPerioddefault"> (optional)</param>
    virtual void com_day_cq_wcm_msm_impl_live_relationship_manager_impl(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &liverelationshipmgrPeriodrelationsconfigPerioddefault, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="eventPeriodfilter"> (optional)</param>
    /// <param name="rolloutmgrPeriodexcludedpropsPerioddefault"> (optional)</param>
    /// <param name="rolloutmgrPeriodexcludedparagraphpropsPerioddefault"> (optional)</param>
    /// <param name="rolloutmgrPeriodexcludednodetypesPerioddefault"> (optional)</param>
    /// <param name="rolloutmgrPeriodthreadpoolPeriodmaxsize"> (optional)</param>
    /// <param name="rolloutmgrPeriodthreadpoolPeriodmaxshutdowntime"> (optional)</param>
    /// <param name="rolloutmgrPeriodthreadpoolPeriodpriority"> (optional)</param>
    /// <param name="rolloutmgrPeriodcommitPeriodsize"> (optional)</param>
    /// <param name="rolloutmgrPeriodconflicthandlingPeriodenabled"> (optional)</param>
    virtual void com_day_cq_wcm_msm_impl_rollout_manager_impl(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &eventPeriodfilter, const Pistache::Optional<std::string> &rolloutmgrPeriodexcludedpropsPerioddefault, const Pistache::Optional<std::string> &rolloutmgrPeriodexcludedparagraphpropsPerioddefault, const Pistache::Optional<std::string> &rolloutmgrPeriodexcludednodetypesPerioddefault, const Pistache::Optional<int32_t> &rolloutmgrPeriodthreadpoolPeriodmaxsize, const Pistache::Optional<int32_t> &rolloutmgrPeriodthreadpoolPeriodmaxshutdowntime, const Pistache::Optional<std::string> &rolloutmgrPeriodthreadpoolPeriodpriority, const Pistache::Optional<int32_t> &rolloutmgrPeriodcommitPeriodsize, const Pistache::Optional<bool> &rolloutmgrPeriodconflicthandlingPeriodenabled, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="auditlogservletPerioddefaultPeriodeventsPeriodcount"> (optional)</param>
    /// <param name="auditlogservletPerioddefaultPeriodpath"> (optional)</param>
    virtual void com_day_cq_wcm_msm_impl_servlets_audit_log_servlet(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<int32_t> &auditlogservletPerioddefaultPeriodeventsPeriodcount, const Pistache::Optional<std::string> &auditlogservletPerioddefaultPeriodpath, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="emailPeriodfrom"> (optional)</param>
    virtual void com_day_cq_wcm_notification_email_impl_email_channel(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &emailPeriodfrom, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="eventPeriodtopics"> (optional)</param>
    virtual void com_day_cq_wcm_notification_impl_notification_manager_impl(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &eventPeriodtopics, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="comPerioddayPeriodcqPeriodwcmPeriodscriptingPeriodbvpPeriodscriptPeriodengines"> (optional)</param>
    virtual void com_day_cq_wcm_scripting_impl_bvp_manager(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &comPerioddayPeriodcqPeriodwcmPeriodscriptingPeriodbvpPeriodscriptPeriodengines, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="cqPeriodwcmPeriodundoPeriodenabled"> (optional)</param>
    /// <param name="cqPeriodwcmPeriodundoPeriodpath"> (optional)</param>
    /// <param name="cqPeriodwcmPeriodundoPeriodvalidity"> (optional)</param>
    /// <param name="cqPeriodwcmPeriodundoPeriodsteps"> (optional)</param>
    /// <param name="cqPeriodwcmPeriodundoPeriodpersistence"> (optional)</param>
    /// <param name="cqPeriodwcmPeriodundoPeriodpersistencePeriodmode"> (optional)</param>
    /// <param name="cqPeriodwcmPeriodundoPeriodmarkermode"> (optional)</param>
    /// <param name="cqPeriodwcmPeriodundoPeriodwhitelist"> (optional)</param>
    /// <param name="cqPeriodwcmPeriodundoPeriodblacklist"> (optional)</param>
    virtual void com_day_cq_wcm_undo_undo_config(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<bool> &cqPeriodwcmPeriodundoPeriodenabled, const Pistache::Optional<std::string> &cqPeriodwcmPeriodundoPeriodpath, const Pistache::Optional<int32_t> &cqPeriodwcmPeriodundoPeriodvalidity, const Pistache::Optional<int32_t> &cqPeriodwcmPeriodundoPeriodsteps, const Pistache::Optional<std::string> &cqPeriodwcmPeriodundoPeriodpersistence, const Pistache::Optional<bool> &cqPeriodwcmPeriodundoPeriodpersistencePeriodmode, const Pistache::Optional<std::string> &cqPeriodwcmPeriodundoPeriodmarkermode, const Pistache::Optional<std::string> &cqPeriodwcmPeriodundoPeriodwhitelist, const Pistache::Optional<std::string> &cqPeriodwcmPeriodundoPeriodblacklist, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="flush_agents"> (optional)</param>
    virtual void com_day_cq_wcm_webservicesupport_impl_replication_event_listener(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &flush_agents, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="eventPeriodfilter"> (optional)</param>
    /// <param name="minThreadPoolSize"> (optional)</param>
    /// <param name="maxThreadPoolSize"> (optional)</param>
    /// <param name="cqPeriodwcmPeriodworkflowPeriodterminatePeriodonPeriodactivate"> (optional)</param>
    /// <param name="cqPeriodwcmPeriodworklfowPeriodterminatePeriodexclusionPeriodlist"> (optional)</param>
    virtual void com_day_cq_wcm_workflow_impl_wcm_workflow_service_impl(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &eventPeriodfilter, const Pistache::Optional<int32_t> &minThreadPoolSize, const Pistache::Optional<int32_t> &maxThreadPoolSize, const Pistache::Optional<bool> &cqPeriodwcmPeriodworkflowPeriodterminatePeriodonPeriodactivate, const Pistache::Optional<std::string> &cqPeriodwcmPeriodworklfowPeriodterminatePeriodexclusionPeriodlist, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="workflowpackageinfoproviderPeriodfilter"> (optional)</param>
    /// <param name="workflowpackageinfoproviderPeriodfilterPeriodrootpath"> (optional)</param>
    virtual void com_day_cq_wcm_workflow_impl_workflow_package_info_provider(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &workflowpackageinfoproviderPeriodfilter, const Pistache::Optional<std::string> &workflowpackageinfoproviderPeriodfilterPeriodrootpath, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="htmllibmanagerPeriodclientmanager"> (optional)</param>
    /// <param name="htmllibmanagerPerioddebug"> (optional)</param>
    /// <param name="htmllibmanagerPerioddebugPeriodconsole"> (optional)</param>
    /// <param name="htmllibmanagerPerioddebugPeriodinitPeriodjs"> (optional)</param>
    /// <param name="htmllibmanagerPerioddefaultthemename"> (optional)</param>
    /// <param name="htmllibmanagerPerioddefaultuserthemename"> (optional)</param>
    /// <param name="htmllibmanagerPeriodfirebuglitePeriodpath"> (optional)</param>
    /// <param name="htmllibmanagerPeriodforceCQUrlInfo"> (optional)</param>
    /// <param name="htmllibmanagerPeriodgzip"> (optional)</param>
    /// <param name="htmllibmanagerPeriodmaxage"> (optional)</param>
    /// <param name="htmllibmanagerPeriodmaxDataUriSize"> (optional)</param>
    /// <param name="htmllibmanagerPeriodminify"> (optional)</param>
    /// <param name="htmllibmanagerPeriodpathPeriodlist"> (optional)</param>
    /// <param name="htmllibmanagerPeriodtiming"> (optional)</param>
    virtual void com_day_cq_widget_impl_html_library_manager_impl(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &htmllibmanagerPeriodclientmanager, const Pistache::Optional<bool> &htmllibmanagerPerioddebug, const Pistache::Optional<bool> &htmllibmanagerPerioddebugPeriodconsole, const Pistache::Optional<std::string> &htmllibmanagerPerioddebugPeriodinitPeriodjs, const Pistache::Optional<std::string> &htmllibmanagerPerioddefaultthemename, const Pistache::Optional<std::string> &htmllibmanagerPerioddefaultuserthemename, const Pistache::Optional<std::string> &htmllibmanagerPeriodfirebuglitePeriodpath, const Pistache::Optional<bool> &htmllibmanagerPeriodforceCQUrlInfo, const Pistache::Optional<bool> &htmllibmanagerPeriodgzip, const Pistache::Optional<int32_t> &htmllibmanagerPeriodmaxage, const Pistache::Optional<int32_t> &htmllibmanagerPeriodmaxDataUriSize, const Pistache::Optional<bool> &htmllibmanagerPeriodminify, const Pistache::Optional<std::string> &htmllibmanagerPeriodpathPeriodlist, const Pistache::Optional<bool> &htmllibmanagerPeriodtiming, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="extendablePeriodwidgets"> (optional)</param>
    /// <param name="widgetextensionproviderPerioddebug"> (optional)</param>
    virtual void com_day_cq_widget_impl_widget_extension_provider_impl(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &extendablePeriodwidgets, const Pistache::Optional<bool> &widgetextensionproviderPerioddebug, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="fromPeriodaddress"> (optional)</param>
    /// <param name="hostPeriodprefix"> (optional)</param>
    /// <param name="notifyPeriodonabort"> (optional)</param>
    /// <param name="notifyPeriodoncomplete"> (optional)</param>
    /// <param name="notifyPeriodoncontainercomplete"> (optional)</param>
    /// <param name="notifyPerioduseronly"> (optional)</param>
    virtual void com_day_cq_workflow_impl_email_e_mail_notification_service(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &fromPeriodaddress, const Pistache::Optional<std::string> &hostPeriodprefix, const Pistache::Optional<bool> &notifyPeriodonabort, const Pistache::Optional<bool> &notifyPeriodoncomplete, const Pistache::Optional<bool> &notifyPeriodoncontainercomplete, const Pistache::Optional<bool> &notifyPerioduseronly, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="notifyPeriodonupdate"> (optional)</param>
    /// <param name="notifyPeriodoncomplete"> (optional)</param>
    virtual void com_day_cq_workflow_impl_email_task_e_mail_notification_service(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<bool> &notifyPeriodonupdate, const Pistache::Optional<bool> &notifyPeriodoncomplete, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="path"> (optional)</param>
    /// <param name="tokenPeriodrequiredPeriodattr"> (optional)</param>
    /// <param name="tokenPeriodalternatePeriodurl"> (optional)</param>
    /// <param name="tokenPeriodencapsulated"> (optional)</param>
    /// <param name="skipPeriodtokenPeriodrefresh"> (optional)</param>
    virtual void com_day_crx_security_token_impl_impl_token_authentication_handler(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &path, const Pistache::Optional<std::string> &tokenPeriodrequiredPeriodattr, const Pistache::Optional<std::string> &tokenPeriodalternatePeriodurl, const Pistache::Optional<bool> &tokenPeriodencapsulated, const Pistache::Optional<std::string> &skipPeriodtokenPeriodrefresh, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="enablePeriodtokenPeriodcleanupPeriodtask"> (optional)</param>
    /// <param name="schedulerPeriodexpression"> (optional)</param>
    /// <param name="batchPeriodsize"> (optional)</param>
    virtual void com_day_crx_security_token_impl_token_cleanup_task(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<bool> &enablePeriodtokenPeriodcleanupPeriodtask, const Pistache::Optional<std::string> &schedulerPeriodexpression, const Pistache::Optional<int32_t> &batchPeriodsize, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="supportedLocales"> (optional)</param>
    /// <param name="localizable_Properties"> (optional)</param>
    virtual void guide_localization_service(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &supportedLocales, const Pistache::Optional<std::string> &localizable_Properties, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="priority"> (optional)</param>
    virtual void messaging_user_component_factory(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<int32_t> &priority, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="attributeChangeNotificationEnabled"> (optional)</param>
    virtual void org_apache_aries_jmx_framework_state_config(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<bool> &attributeChangeNotificationEnabled, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="orgPeriodapachePeriodfelixPeriodeventadminPeriodThreadPoolSize"> (optional)</param>
    /// <param name="orgPeriodapachePeriodfelixPeriodeventadminPeriodAsyncToSyncThreadRatio"> (optional)</param>
    /// <param name="orgPeriodapachePeriodfelixPeriodeventadminPeriodTimeout"> (optional)</param>
    /// <param name="orgPeriodapachePeriodfelixPeriodeventadminPeriodRequireTopic"> (optional)</param>
    /// <param name="orgPeriodapachePeriodfelixPeriodeventadminPeriodIgnoreTimeout"> (optional)</param>
    /// <param name="orgPeriodapachePeriodfelixPeriodeventadminPeriodIgnoreTopic"> (optional)</param>
    virtual void org_apache_felix_eventadmin_impl_event_admin(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<int32_t> &orgPeriodapachePeriodfelixPeriodeventadminPeriodThreadPoolSize, const Pistache::Optional<double> &orgPeriodapachePeriodfelixPeriodeventadminPeriodAsyncToSyncThreadRatio, const Pistache::Optional<int32_t> &orgPeriodapachePeriodfelixPeriodeventadminPeriodTimeout, const Pistache::Optional<bool> &orgPeriodapachePeriodfelixPeriodeventadminPeriodRequireTopic, const Pistache::Optional<std::string> &orgPeriodapachePeriodfelixPeriodeventadminPeriodIgnoreTimeout, const Pistache::Optional<std::string> &orgPeriodapachePeriodfelixPeriodeventadminPeriodIgnoreTopic, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="orgPeriodapachePeriodfelixPeriodhttpPeriodhost"> (optional)</param>
    /// <param name="orgPeriodapachePeriodfelixPeriodhttpPeriodenable"> (optional)</param>
    /// <param name="orgPeriodosgiPeriodservicePeriodhttpPeriodport"> (optional)</param>
    /// <param name="orgPeriodapachePeriodfelixPeriodhttpPeriodtimeout"> (optional)</param>
    /// <param name="orgPeriodapachePeriodfelixPeriodhttpsPeriodenable"> (optional)</param>
    /// <param name="orgPeriodosgiPeriodservicePeriodhttpPeriodportPeriodsecure"> (optional)</param>
    /// <param name="orgPeriodapachePeriodfelixPeriodhttpsPeriodkeystore"> (optional)</param>
    /// <param name="orgPeriodapachePeriodfelixPeriodhttpsPeriodkeystorePeriodpassword"> (optional)</param>
    /// <param name="orgPeriodapachePeriodfelixPeriodhttpsPeriodkeystorePeriodkeyPeriodpassword"> (optional)</param>
    /// <param name="orgPeriodapachePeriodfelixPeriodhttpsPeriodtruststore"> (optional)</param>
    /// <param name="orgPeriodapachePeriodfelixPeriodhttpsPeriodtruststorePeriodpassword"> (optional)</param>
    /// <param name="orgPeriodapachePeriodfelixPeriodhttpsPeriodclientcertificate"> (optional)</param>
    /// <param name="orgPeriodapachePeriodfelixPeriodhttpPeriodcontextPath"> (optional)</param>
    /// <param name="orgPeriodapachePeriodfelixPeriodhttpPeriodmbeans"> (optional)</param>
    /// <param name="orgPeriodapachePeriodfelixPeriodhttpPeriodsessionPeriodtimeout"> (optional)</param>
    /// <param name="orgPeriodapachePeriodfelixPeriodhttpPeriodjettyPeriodthreadpoolPeriodmax"> (optional)</param>
    /// <param name="orgPeriodapachePeriodfelixPeriodhttpPeriodjettyPeriodacceptors"> (optional)</param>
    /// <param name="orgPeriodapachePeriodfelixPeriodhttpPeriodjettyPeriodselectors"> (optional)</param>
    /// <param name="orgPeriodapachePeriodfelixPeriodhttpPeriodjettyPeriodheaderBufferSize"> (optional)</param>
    /// <param name="orgPeriodapachePeriodfelixPeriodhttpPeriodjettyPeriodrequestBufferSize"> (optional)</param>
    /// <param name="orgPeriodapachePeriodfelixPeriodhttpPeriodjettyPeriodresponseBufferSize"> (optional)</param>
    /// <param name="orgPeriodapachePeriodfelixPeriodhttpPeriodjettyPeriodmaxFormSize"> (optional)</param>
    /// <param name="orgPeriodapachePeriodfelixPeriodhttpPeriodpathExclusions"> (optional)</param>
    /// <param name="orgPeriodapachePeriodfelixPeriodhttpsPeriodjettyPeriodciphersuitesPeriodexcluded"> (optional)</param>
    /// <param name="orgPeriodapachePeriodfelixPeriodhttpsPeriodjettyPeriodciphersuitesPeriodincluded"> (optional)</param>
    /// <param name="orgPeriodapachePeriodfelixPeriodhttpPeriodjettyPeriodsendServerHeader"> (optional)</param>
    /// <param name="orgPeriodapachePeriodfelixPeriodhttpsPeriodjettyPeriodprotocolsPeriodincluded"> (optional)</param>
    /// <param name="orgPeriodapachePeriodfelixPeriodhttpsPeriodjettyPeriodprotocolsPeriodexcluded"> (optional)</param>
    /// <param name="orgPeriodapachePeriodfelixPeriodproxyPeriodloadPeriodbalancerPeriodconnectionPeriodenable"> (optional)</param>
    /// <param name="orgPeriodapachePeriodfelixPeriodhttpsPeriodjettyPeriodrenegotiateAllowed"> (optional)</param>
    /// <param name="orgPeriodapachePeriodfelixPeriodhttpsPeriodjettyPeriodsessionPeriodcookiePeriodhttpOnly"> (optional)</param>
    /// <param name="orgPeriodapachePeriodfelixPeriodhttpsPeriodjettyPeriodsessionPeriodcookiePeriodsecure"> (optional)</param>
    /// <param name="orgPeriodeclipsePeriodjettyPeriodservletPeriodSessionIdPathParameterName"> (optional)</param>
    /// <param name="orgPeriodeclipsePeriodjettyPeriodservletPeriodCheckingRemoteSessionIdEncoding"> (optional)</param>
    /// <param name="orgPeriodeclipsePeriodjettyPeriodservletPeriodSessionCookie"> (optional)</param>
    /// <param name="orgPeriodeclipsePeriodjettyPeriodservletPeriodSessionDomain"> (optional)</param>
    /// <param name="orgPeriodeclipsePeriodjettyPeriodservletPeriodSessionPath"> (optional)</param>
    /// <param name="orgPeriodeclipsePeriodjettyPeriodservletPeriodMaxAge"> (optional)</param>
    /// <param name="orgPeriodapachePeriodfelixPeriodhttpPeriodname"> (optional)</param>
    /// <param name="orgPeriodapachePeriodfelixPeriodjettyPeriodgziphandlerPeriodenable"> (optional)</param>
    /// <param name="orgPeriodapachePeriodfelixPeriodjettyPeriodgzipPeriodminGzipSize"> (optional)</param>
    /// <param name="orgPeriodapachePeriodfelixPeriodjettyPeriodgzipPeriodcompressionLevel"> (optional)</param>
    /// <param name="orgPeriodapachePeriodfelixPeriodjettyPeriodgzipPeriodinflateBufferSize"> (optional)</param>
    /// <param name="orgPeriodapachePeriodfelixPeriodjettyPeriodgzipPeriodsyncFlush"> (optional)</param>
    /// <param name="orgPeriodapachePeriodfelixPeriodjettyPeriodgzipPeriodexcludedUserAgents"> (optional)</param>
    /// <param name="orgPeriodapachePeriodfelixPeriodjettyPeriodgzipPeriodincludedMethods"> (optional)</param>
    /// <param name="orgPeriodapachePeriodfelixPeriodjettyPeriodgzipPeriodexcludedMethods"> (optional)</param>
    /// <param name="orgPeriodapachePeriodfelixPeriodjettyPeriodgzipPeriodincludedPaths"> (optional)</param>
    /// <param name="orgPeriodapachePeriodfelixPeriodjettyPeriodgzipPeriodexcludedPaths"> (optional)</param>
    /// <param name="orgPeriodapachePeriodfelixPeriodjettyPeriodgzipPeriodincludedMimeTypes"> (optional)</param>
    /// <param name="orgPeriodapachePeriodfelixPeriodjettyPeriodgzipPeriodexcludedMimeTypes"> (optional)</param>
    /// <param name="orgPeriodapachePeriodfelixPeriodhttpPeriodsessionPeriodinvalidate"> (optional)</param>
    /// <param name="orgPeriodapachePeriodfelixPeriodhttpPeriodsessionPerioduniqueid"> (optional)</param>
    virtual void org_apache_felix_http(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &orgPeriodapachePeriodfelixPeriodhttpPeriodhost, const Pistache::Optional<bool> &orgPeriodapachePeriodfelixPeriodhttpPeriodenable, const Pistache::Optional<int32_t> &orgPeriodosgiPeriodservicePeriodhttpPeriodport, const Pistache::Optional<int32_t> &orgPeriodapachePeriodfelixPeriodhttpPeriodtimeout, const Pistache::Optional<bool> &orgPeriodapachePeriodfelixPeriodhttpsPeriodenable, const Pistache::Optional<int32_t> &orgPeriodosgiPeriodservicePeriodhttpPeriodportPeriodsecure, const Pistache::Optional<std::string> &orgPeriodapachePeriodfelixPeriodhttpsPeriodkeystore, const Pistache::Optional<std::string> &orgPeriodapachePeriodfelixPeriodhttpsPeriodkeystorePeriodpassword, const Pistache::Optional<std::string> &orgPeriodapachePeriodfelixPeriodhttpsPeriodkeystorePeriodkeyPeriodpassword, const Pistache::Optional<std::string> &orgPeriodapachePeriodfelixPeriodhttpsPeriodtruststore, const Pistache::Optional<std::string> &orgPeriodapachePeriodfelixPeriodhttpsPeriodtruststorePeriodpassword, const Pistache::Optional<std::string> &orgPeriodapachePeriodfelixPeriodhttpsPeriodclientcertificate, const Pistache::Optional<std::string> &orgPeriodapachePeriodfelixPeriodhttpPeriodcontextPath, const Pistache::Optional<bool> &orgPeriodapachePeriodfelixPeriodhttpPeriodmbeans, const Pistache::Optional<int32_t> &orgPeriodapachePeriodfelixPeriodhttpPeriodsessionPeriodtimeout, const Pistache::Optional<int32_t> &orgPeriodapachePeriodfelixPeriodhttpPeriodjettyPeriodthreadpoolPeriodmax, const Pistache::Optional<int32_t> &orgPeriodapachePeriodfelixPeriodhttpPeriodjettyPeriodacceptors, const Pistache::Optional<int32_t> &orgPeriodapachePeriodfelixPeriodhttpPeriodjettyPeriodselectors, const Pistache::Optional<int32_t> &orgPeriodapachePeriodfelixPeriodhttpPeriodjettyPeriodheaderBufferSize, const Pistache::Optional<int32_t> &orgPeriodapachePeriodfelixPeriodhttpPeriodjettyPeriodrequestBufferSize, const Pistache::Optional<int32_t> &orgPeriodapachePeriodfelixPeriodhttpPeriodjettyPeriodresponseBufferSize, const Pistache::Optional<int32_t> &orgPeriodapachePeriodfelixPeriodhttpPeriodjettyPeriodmaxFormSize, const Pistache::Optional<std::string> &orgPeriodapachePeriodfelixPeriodhttpPeriodpathExclusions, const Pistache::Optional<std::string> &orgPeriodapachePeriodfelixPeriodhttpsPeriodjettyPeriodciphersuitesPeriodexcluded, const Pistache::Optional<std::string> &orgPeriodapachePeriodfelixPeriodhttpsPeriodjettyPeriodciphersuitesPeriodincluded, const Pistache::Optional<bool> &orgPeriodapachePeriodfelixPeriodhttpPeriodjettyPeriodsendServerHeader, const Pistache::Optional<std::string> &orgPeriodapachePeriodfelixPeriodhttpsPeriodjettyPeriodprotocolsPeriodincluded, const Pistache::Optional<std::string> &orgPeriodapachePeriodfelixPeriodhttpsPeriodjettyPeriodprotocolsPeriodexcluded, const Pistache::Optional<bool> &orgPeriodapachePeriodfelixPeriodproxyPeriodloadPeriodbalancerPeriodconnectionPeriodenable, const Pistache::Optional<bool> &orgPeriodapachePeriodfelixPeriodhttpsPeriodjettyPeriodrenegotiateAllowed, const Pistache::Optional<bool> &orgPeriodapachePeriodfelixPeriodhttpsPeriodjettyPeriodsessionPeriodcookiePeriodhttpOnly, const Pistache::Optional<bool> &orgPeriodapachePeriodfelixPeriodhttpsPeriodjettyPeriodsessionPeriodcookiePeriodsecure, const Pistache::Optional<std::string> &orgPeriodeclipsePeriodjettyPeriodservletPeriodSessionIdPathParameterName, const Pistache::Optional<bool> &orgPeriodeclipsePeriodjettyPeriodservletPeriodCheckingRemoteSessionIdEncoding, const Pistache::Optional<std::string> &orgPeriodeclipsePeriodjettyPeriodservletPeriodSessionCookie, const Pistache::Optional<std::string> &orgPeriodeclipsePeriodjettyPeriodservletPeriodSessionDomain, const Pistache::Optional<std::string> &orgPeriodeclipsePeriodjettyPeriodservletPeriodSessionPath, const Pistache::Optional<int32_t> &orgPeriodeclipsePeriodjettyPeriodservletPeriodMaxAge, const Pistache::Optional<std::string> &orgPeriodapachePeriodfelixPeriodhttpPeriodname, const Pistache::Optional<bool> &orgPeriodapachePeriodfelixPeriodjettyPeriodgziphandlerPeriodenable, const Pistache::Optional<int32_t> &orgPeriodapachePeriodfelixPeriodjettyPeriodgzipPeriodminGzipSize, const Pistache::Optional<int32_t> &orgPeriodapachePeriodfelixPeriodjettyPeriodgzipPeriodcompressionLevel, const Pistache::Optional<int32_t> &orgPeriodapachePeriodfelixPeriodjettyPeriodgzipPeriodinflateBufferSize, const Pistache::Optional<bool> &orgPeriodapachePeriodfelixPeriodjettyPeriodgzipPeriodsyncFlush, const Pistache::Optional<std::string> &orgPeriodapachePeriodfelixPeriodjettyPeriodgzipPeriodexcludedUserAgents, const Pistache::Optional<std::string> &orgPeriodapachePeriodfelixPeriodjettyPeriodgzipPeriodincludedMethods, const Pistache::Optional<std::string> &orgPeriodapachePeriodfelixPeriodjettyPeriodgzipPeriodexcludedMethods, const Pistache::Optional<std::string> &orgPeriodapachePeriodfelixPeriodjettyPeriodgzipPeriodincludedPaths, const Pistache::Optional<std::string> &orgPeriodapachePeriodfelixPeriodjettyPeriodgzipPeriodexcludedPaths, const Pistache::Optional<std::string> &orgPeriodapachePeriodfelixPeriodjettyPeriodgzipPeriodincludedMimeTypes, const Pistache::Optional<std::string> &orgPeriodapachePeriodfelixPeriodjettyPeriodgzipPeriodexcludedMimeTypes, const Pistache::Optional<bool> &orgPeriodapachePeriodfelixPeriodhttpPeriodsessionPeriodinvalidate, const Pistache::Optional<bool> &orgPeriodapachePeriodfelixPeriodhttpPeriodsessionPerioduniqueid, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="sslForwardPeriodheader"> (optional)</param>
    /// <param name="sslForwardPeriodvalue"> (optional)</param>
    /// <param name="sslForwardCertPeriodheader"> (optional)</param>
    /// <param name="rewritePeriodabsolutePeriodurls"> (optional)</param>
    virtual void org_apache_felix_http_sslfilter_ssl_filter(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &sslForwardPeriodheader, const Pistache::Optional<std::string> &sslForwardPeriodvalue, const Pistache::Optional<std::string> &sslForwardCertPeriodheader, const Pistache::Optional<bool> &rewritePeriodabsolutePeriodurls, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="jaasPeriodcontrolFlag"> (optional)</param>
    /// <param name="jaasPeriodranking"> (optional)</param>
    /// <param name="jaasPeriodrealmName"> (optional)</param>
    /// <param name="jaasPeriodclassname"> (optional)</param>
    /// <param name="jaasPeriodoptions"> (optional)</param>
    virtual void org_apache_felix_jaas_configuration_factory(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &jaasPeriodcontrolFlag, const Pistache::Optional<int32_t> &jaasPeriodranking, const Pistache::Optional<std::string> &jaasPeriodrealmName, const Pistache::Optional<std::string> &jaasPeriodclassname, const Pistache::Optional<std::string> &jaasPeriodoptions, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="jaasPerioddefaultRealmName"> (optional)</param>
    /// <param name="jaasPeriodconfigProviderName"> (optional)</param>
    /// <param name="jaasPeriodglobalConfigPolicy"> (optional)</param>
    virtual void org_apache_felix_jaas_configuration_spi(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &jaasPerioddefaultRealmName, const Pistache::Optional<std::string> &jaasPeriodconfigProviderName, const Pistache::Optional<std::string> &jaasPeriodglobalConfigPolicy, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="dsPeriodloglevel"> (optional)</param>
    /// <param name="dsPeriodfactoryPeriodenabled"> (optional)</param>
    /// <param name="dsPerioddelayedPeriodkeepInstances"> (optional)</param>
    /// <param name="dsPeriodlockPeriodtimeoutPeriodmilliseconds"> (optional)</param>
    /// <param name="dsPeriodstopPeriodtimeoutPeriodmilliseconds"> (optional)</param>
    /// <param name="dsPeriodglobalPeriodextender"> (optional)</param>
    virtual void org_apache_felix_scr_scr_service(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<int32_t> &dsPeriodloglevel, const Pistache::Optional<bool> &dsPeriodfactoryPeriodenabled, const Pistache::Optional<bool> &dsPerioddelayedPeriodkeepInstances, const Pistache::Optional<int32_t> &dsPeriodlockPeriodtimeoutPeriodmilliseconds, const Pistache::Optional<int32_t> &dsPeriodstopPeriodtimeoutPeriodmilliseconds, const Pistache::Optional<bool> &dsPeriodglobalPeriodextender, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="componentsPeriodlist"> (optional)</param>
    /// <param name="type"> (optional)</param>
    virtual void org_apache_felix_systemready_impl_components_check(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &componentsPeriodlist, const Pistache::Optional<std::string> &type, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="timeout"> (optional)</param>
    /// <param name="targetPeriodstartPeriodlevel"> (optional)</param>
    /// <param name="targetPeriodstartPeriodlevelPeriodpropPeriodname"> (optional)</param>
    /// <param name="type"> (optional)</param>
    virtual void org_apache_felix_systemready_impl_framework_start_check(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<int32_t> &timeout, const Pistache::Optional<int32_t> &targetPeriodstartPeriodlevel, const Pistache::Optional<std::string> &targetPeriodstartPeriodlevelPeriodpropPeriodname, const Pistache::Optional<std::string> &type, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="servicesPeriodlist"> (optional)</param>
    /// <param name="type"> (optional)</param>
    virtual void org_apache_felix_systemready_impl_services_check(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &servicesPeriodlist, const Pistache::Optional<std::string> &type, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="osgiPeriodhttpPeriodwhiteboardPeriodservletPeriodpattern"> (optional)</param>
    /// <param name="osgiPeriodhttpPeriodwhiteboardPeriodcontextPeriodselect"> (optional)</param>
    virtual void org_apache_felix_systemready_impl_servlet_system_alive_servlet(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &osgiPeriodhttpPeriodwhiteboardPeriodservletPeriodpattern, const Pistache::Optional<std::string> &osgiPeriodhttpPeriodwhiteboardPeriodcontextPeriodselect, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="osgiPeriodhttpPeriodwhiteboardPeriodservletPeriodpattern"> (optional)</param>
    /// <param name="osgiPeriodhttpPeriodwhiteboardPeriodcontextPeriodselect"> (optional)</param>
    virtual void org_apache_felix_systemready_impl_servlet_system_ready_servlet(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &osgiPeriodhttpPeriodwhiteboardPeriodservletPeriodpattern, const Pistache::Optional<std::string> &osgiPeriodhttpPeriodwhiteboardPeriodcontextPeriodselect, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="pollPeriodinterval"> (optional)</param>
    virtual void org_apache_felix_systemready_system_ready_monitor(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<int32_t> &pollPeriodinterval, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="managerPeriodroot"> (optional)</param>
    /// <param name="httpPeriodservicePeriodfilter"> (optional)</param>
    /// <param name="defaultPeriodrender"> (optional)</param>
    /// <param name="realm"> (optional)</param>
    /// <param name="username"> (optional)</param>
    /// <param name="password"> (optional)</param>
    /// <param name="category"> (optional)</param>
    /// <param name="locale"> (optional)</param>
    /// <param name="loglevel"> (optional)</param>
    /// <param name="plugins"> (optional)</param>
    virtual void org_apache_felix_webconsole_internal_servlet_osgi_manager(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &managerPeriodroot, const Pistache::Optional<std::string> &httpPeriodservicePeriodfilter, const Pistache::Optional<std::string> &defaultPeriodrender, const Pistache::Optional<std::string> &realm, const Pistache::Optional<std::string> &username, const Pistache::Optional<std::string> &password, const Pistache::Optional<std::string> &category, const Pistache::Optional<std::string> &locale, const Pistache::Optional<int32_t> &loglevel, const Pistache::Optional<std::string> &plugins, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="maxPeriodsize"> (optional)</param>
    virtual void org_apache_felix_webconsole_plugins_event_internal_plugin_servlet(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<int32_t> &maxPeriodsize, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="felixPeriodmemoryusagePerioddumpPeriodthreshold"> (optional)</param>
    /// <param name="felixPeriodmemoryusagePerioddumpPeriodinterval"> (optional)</param>
    /// <param name="felixPeriodmemoryusagePerioddumpPeriodlocation"> (optional)</param>
    virtual void org_apache_felix_webconsole_plugins_memoryusage_internal_memory_usage_co(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<int32_t> &felixPeriodmemoryusagePerioddumpPeriodthreshold, const Pistache::Optional<int32_t> &felixPeriodmemoryusagePerioddumpPeriodinterval, const Pistache::Optional<std::string> &felixPeriodmemoryusagePerioddumpPeriodlocation, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="proxyPeriodenabled"> (optional)</param>
    /// <param name="proxyPeriodhost"> (optional)</param>
    /// <param name="proxyPeriodport"> (optional)</param>
    /// <param name="proxyPerioduser"> (optional)</param>
    /// <param name="proxyPeriodpassword"> (optional)</param>
    /// <param name="proxyPeriodexceptions"> (optional)</param>
    virtual void org_apache_http_proxyconfigurator(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<bool> &proxyPeriodenabled, const Pistache::Optional<std::string> &proxyPeriodhost, const Pistache::Optional<int32_t> &proxyPeriodport, const Pistache::Optional<std::string> &proxyPerioduser, const Pistache::Optional<std::string> &proxyPeriodpassword, const Pistache::Optional<std::string> &proxyPeriodexceptions, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="dir"> (optional)</param>
    virtual void org_apache_jackrabbit_oak_plugins_blob_datastore_data_store_text_provider(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &dir, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="path"> (optional)</param>
    virtual void org_apache_jackrabbit_oak_plugins_blob_datastore_file_data_store(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &path, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="mongouri"> (optional)</param>
    /// <param name="db"> (optional)</param>
    /// <param name="socketKeepAlive"> (optional)</param>
    /// <param name="cache"> (optional)</param>
    /// <param name="nodeCachePercentage"> (optional)</param>
    /// <param name="prevDocCachePercentage"> (optional)</param>
    /// <param name="childrenCachePercentage"> (optional)</param>
    /// <param name="diffCachePercentage"> (optional)</param>
    /// <param name="cacheSegmentCount"> (optional)</param>
    /// <param name="cacheStackMoveDistance"> (optional)</param>
    /// <param name="blobCacheSize"> (optional)</param>
    /// <param name="persistentCache"> (optional)</param>
    /// <param name="journalCache"> (optional)</param>
    /// <param name="customBlobStore"> (optional)</param>
    /// <param name="journalGCInterval"> (optional)</param>
    /// <param name="journalGCMaxAge"> (optional)</param>
    /// <param name="prefetchExternalChanges"> (optional)</param>
    /// <param name="role"> (optional)</param>
    /// <param name="versionGcMaxAgeInSecs"> (optional)</param>
    /// <param name="versionGCExpression"> (optional)</param>
    /// <param name="versionGCTimeLimitInSecs"> (optional)</param>
    /// <param name="blobGcMaxAgeInSecs"> (optional)</param>
    /// <param name="blobTrackSnapshotIntervalInSecs"> (optional)</param>
    /// <param name="repositoryPeriodhome"> (optional)</param>
    /// <param name="maxReplicationLagInSecs"> (optional)</param>
    /// <param name="documentStoreType"> (optional)</param>
    /// <param name="bundlingDisabled"> (optional)</param>
    /// <param name="updateLimit"> (optional)</param>
    /// <param name="persistentCacheIncludes"> (optional)</param>
    /// <param name="leaseCheckMode"> (optional)</param>
    virtual void org_apache_jackrabbit_oak_plugins_document_document_node_store_service(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &mongouri, const Pistache::Optional<std::string> &db, const Pistache::Optional<bool> &socketKeepAlive, const Pistache::Optional<int32_t> &cache, const Pistache::Optional<int32_t> &nodeCachePercentage, const Pistache::Optional<int32_t> &prevDocCachePercentage, const Pistache::Optional<int32_t> &childrenCachePercentage, const Pistache::Optional<int32_t> &diffCachePercentage, const Pistache::Optional<int32_t> &cacheSegmentCount, const Pistache::Optional<int32_t> &cacheStackMoveDistance, const Pistache::Optional<int32_t> &blobCacheSize, const Pistache::Optional<std::string> &persistentCache, const Pistache::Optional<std::string> &journalCache, const Pistache::Optional<bool> &customBlobStore, const Pistache::Optional<int32_t> &journalGCInterval, const Pistache::Optional<int32_t> &journalGCMaxAge, const Pistache::Optional<bool> &prefetchExternalChanges, const Pistache::Optional<std::string> &role, const Pistache::Optional<int32_t> &versionGcMaxAgeInSecs, const Pistache::Optional<std::string> &versionGCExpression, const Pistache::Optional<int32_t> &versionGCTimeLimitInSecs, const Pistache::Optional<int32_t> &blobGcMaxAgeInSecs, const Pistache::Optional<int32_t> &blobTrackSnapshotIntervalInSecs, const Pistache::Optional<std::string> &repositoryPeriodhome, const Pistache::Optional<int32_t> &maxReplicationLagInSecs, const Pistache::Optional<std::string> &documentStoreType, const Pistache::Optional<bool> &bundlingDisabled, const Pistache::Optional<int32_t> &updateLimit, const Pistache::Optional<std::string> &persistentCacheIncludes, const Pistache::Optional<std::string> &leaseCheckMode, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="persistentCacheIncludes"> (optional)</param>
    virtual void org_apache_jackrabbit_oak_plugins_document_document_node_store_service_pre(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &persistentCacheIncludes, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="includedPaths"> (optional)</param>
    /// <param name="enableAsyncObserver"> (optional)</param>
    /// <param name="observerQueueSize"> (optional)</param>
    virtual void org_apache_jackrabbit_oak_plugins_document_secondary_secondary_store_cac(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &includedPaths, const Pistache::Optional<bool> &enableAsyncObserver, const Pistache::Optional<int32_t> &observerQueueSize, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="asyncConfigs"> (optional)</param>
    /// <param name="leaseTimeOutMinutes"> (optional)</param>
    /// <param name="failingIndexTimeoutSeconds"> (optional)</param>
    /// <param name="errorWarnIntervalSeconds"> (optional)</param>
    virtual void org_apache_jackrabbit_oak_plugins_index_async_indexer_service(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &asyncConfigs, const Pistache::Optional<int32_t> &leaseTimeOutMinutes, const Pistache::Optional<int32_t> &failingIndexTimeoutSeconds, const Pistache::Optional<int32_t> &errorWarnIntervalSeconds, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="disabled"> (optional)</param>
    /// <param name="debug"> (optional)</param>
    /// <param name="localIndexDir"> (optional)</param>
    /// <param name="enableOpenIndexAsync"> (optional)</param>
    /// <param name="threadPoolSize"> (optional)</param>
    /// <param name="prefetchIndexFiles"> (optional)</param>
    /// <param name="extractedTextCacheSizeInMB"> (optional)</param>
    /// <param name="extractedTextCacheExpiryInSecs"> (optional)</param>
    /// <param name="alwaysUsePreExtractedCache"> (optional)</param>
    /// <param name="booleanClauseLimit"> (optional)</param>
    /// <param name="enableHybridIndexing"> (optional)</param>
    /// <param name="hybridQueueSize"> (optional)</param>
    /// <param name="disableStoredIndexDefinition"> (optional)</param>
    /// <param name="deletedBlobsCollectionEnabled"> (optional)</param>
    /// <param name="propIndexCleanerIntervalInSecs"> (optional)</param>
    /// <param name="enableSingleBlobIndexFiles"> (optional)</param>
    virtual void org_apache_jackrabbit_oak_plugins_index_lucene_lucene_index_provider_serv(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<bool> &disabled, const Pistache::Optional<bool> &debug, const Pistache::Optional<std::string> &localIndexDir, const Pistache::Optional<bool> &enableOpenIndexAsync, const Pistache::Optional<int32_t> &threadPoolSize, const Pistache::Optional<bool> &prefetchIndexFiles, const Pistache::Optional<int32_t> &extractedTextCacheSizeInMB, const Pistache::Optional<int32_t> &extractedTextCacheExpiryInSecs, const Pistache::Optional<bool> &alwaysUsePreExtractedCache, const Pistache::Optional<int32_t> &booleanClauseLimit, const Pistache::Optional<bool> &enableHybridIndexing, const Pistache::Optional<int32_t> &hybridQueueSize, const Pistache::Optional<bool> &disableStoredIndexDefinition, const Pistache::Optional<bool> &deletedBlobsCollectionEnabled, const Pistache::Optional<int32_t> &propIndexCleanerIntervalInSecs, const Pistache::Optional<bool> &enableSingleBlobIndexFiles, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="solrPeriodhomePeriodpath"> (optional)</param>
    /// <param name="solrPeriodcorePeriodname"> (optional)</param>
    virtual void org_apache_jackrabbit_oak_plugins_index_solr_osgi_embedded_solr_server_co(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &solrPeriodhomePeriodpath, const Pistache::Optional<std::string> &solrPeriodcorePeriodname, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="enabled"> (optional)</param>
    virtual void org_apache_jackrabbit_oak_plugins_index_solr_osgi_node_state_solr_servers(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<bool> &enabled, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="pathPerioddescPeriodfield"> (optional)</param>
    /// <param name="pathPeriodchildPeriodfield"> (optional)</param>
    /// <param name="pathPeriodparentPeriodfield"> (optional)</param>
    /// <param name="pathPeriodexactPeriodfield"> (optional)</param>
    /// <param name="catchPeriodallPeriodfield"> (optional)</param>
    /// <param name="collapsedPeriodpathPeriodfield"> (optional)</param>
    /// <param name="pathPerioddepthPeriodfield"> (optional)</param>
    /// <param name="commitPeriodpolicy"> (optional)</param>
    /// <param name="rows"> (optional)</param>
    /// <param name="pathPeriodrestrictions"> (optional)</param>
    /// <param name="propertyPeriodrestrictions"> (optional)</param>
    /// <param name="primarytypesPeriodrestrictions"> (optional)</param>
    /// <param name="ignoredPeriodproperties"> (optional)</param>
    /// <param name="usedPeriodproperties"> (optional)</param>
    /// <param name="typePeriodmappings"> (optional)</param>
    /// <param name="propertyPeriodmappings"> (optional)</param>
    /// <param name="collapsePeriodjcrcontentPeriodnodes"> (optional)</param>
    virtual void org_apache_jackrabbit_oak_plugins_index_solr_osgi_oak_solr_configuration(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &pathPerioddescPeriodfield, const Pistache::Optional<std::string> &pathPeriodchildPeriodfield, const Pistache::Optional<std::string> &pathPeriodparentPeriodfield, const Pistache::Optional<std::string> &pathPeriodexactPeriodfield, const Pistache::Optional<std::string> &catchPeriodallPeriodfield, const Pistache::Optional<std::string> &collapsedPeriodpathPeriodfield, const Pistache::Optional<std::string> &pathPerioddepthPeriodfield, const Pistache::Optional<std::string> &commitPeriodpolicy, const Pistache::Optional<int32_t> &rows, const Pistache::Optional<bool> &pathPeriodrestrictions, const Pistache::Optional<bool> &propertyPeriodrestrictions, const Pistache::Optional<bool> &primarytypesPeriodrestrictions, const Pistache::Optional<std::string> &ignoredPeriodproperties, const Pistache::Optional<std::string> &usedPeriodproperties, const Pistache::Optional<std::string> &typePeriodmappings, const Pistache::Optional<std::string> &propertyPeriodmappings, const Pistache::Optional<bool> &collapsePeriodjcrcontentPeriodnodes, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="solrPeriodhttpPeriodurl"> (optional)</param>
    /// <param name="solrPeriodzkPeriodhost"> (optional)</param>
    /// <param name="solrPeriodcollection"> (optional)</param>
    /// <param name="solrPeriodsocketPeriodtimeout"> (optional)</param>
    /// <param name="solrPeriodconnectionPeriodtimeout"> (optional)</param>
    /// <param name="solrPeriodshardsPeriodno"> (optional)</param>
    /// <param name="solrPeriodreplicationPeriodfactor"> (optional)</param>
    /// <param name="solrPeriodconfPerioddir"> (optional)</param>
    virtual void org_apache_jackrabbit_oak_plugins_index_solr_osgi_remote_solr_server_conf(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &solrPeriodhttpPeriodurl, const Pistache::Optional<std::string> &solrPeriodzkPeriodhost, const Pistache::Optional<std::string> &solrPeriodcollection, const Pistache::Optional<int32_t> &solrPeriodsocketPeriodtimeout, const Pistache::Optional<int32_t> &solrPeriodconnectionPeriodtimeout, const Pistache::Optional<int32_t> &solrPeriodshardsPeriodno, const Pistache::Optional<int32_t> &solrPeriodreplicationPeriodfactor, const Pistache::Optional<std::string> &solrPeriodconfPerioddir, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="queryPeriodaggregation"> (optional)</param>
    virtual void org_apache_jackrabbit_oak_plugins_index_solr_osgi_solr_query_index_provid(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<bool> &queryPeriodaggregation, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="serverPeriodtype"> (optional)</param>
    virtual void org_apache_jackrabbit_oak_plugins_index_solr_osgi_solr_server_provider_se(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &serverPeriodtype, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="providerType"> (optional)</param>
    virtual void org_apache_jackrabbit_oak_plugins_metric_statistics_provider_factory(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &providerType, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="maxItems"> (optional)</param>
    /// <param name="maxPathDepth"> (optional)</param>
    /// <param name="enabled"> (optional)</param>
    virtual void org_apache_jackrabbit_oak_plugins_observation_change_collector_provider(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<int32_t> &maxItems, const Pistache::Optional<int32_t> &maxPathDepth, const Pistache::Optional<bool> &enabled, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="queryLimitInMemory"> (optional)</param>
    /// <param name="queryLimitReads"> (optional)</param>
    /// <param name="queryFailTraversal"> (optional)</param>
    /// <param name="fastQuerySize"> (optional)</param>
    virtual void org_apache_jackrabbit_oak_query_query_engine_settings_service(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<int32_t> &queryLimitInMemory, const Pistache::Optional<int32_t> &queryLimitReads, const Pistache::Optional<bool> &queryFailTraversal, const Pistache::Optional<bool> &fastQuerySize, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="orgPeriodapachePeriodjackrabbitPeriodoakPeriodauthenticationPeriodappName"> (optional)</param>
    /// <param name="orgPeriodapachePeriodjackrabbitPeriodoakPeriodauthenticationPeriodconfigSpiName"> (optional)</param>
    virtual void org_apache_jackrabbit_oak_security_authentication_authentication_config(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &orgPeriodapachePeriodjackrabbitPeriodoakPeriodauthenticationPeriodappName, const Pistache::Optional<std::string> &orgPeriodapachePeriodjackrabbitPeriodoakPeriodauthenticationPeriodconfigSpiName, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="providerPeriodname"> (optional)</param>
    /// <param name="hostPeriodname"> (optional)</param>
    /// <param name="hostPeriodport"> (optional)</param>
    /// <param name="hostPeriodssl"> (optional)</param>
    /// <param name="hostPeriodtls"> (optional)</param>
    /// <param name="hostPeriodnoCertCheck"> (optional)</param>
    /// <param name="bindPerioddn"> (optional)</param>
    /// <param name="bindPeriodpassword"> (optional)</param>
    /// <param name="searchTimeout"> (optional)</param>
    /// <param name="adminPoolPeriodmaxActive"> (optional)</param>
    /// <param name="adminPoolPeriodlookupOnValidate"> (optional)</param>
    /// <param name="userPoolPeriodmaxActive"> (optional)</param>
    /// <param name="userPoolPeriodlookupOnValidate"> (optional)</param>
    /// <param name="userPeriodbaseDN"> (optional)</param>
    /// <param name="userPeriodobjectclass"> (optional)</param>
    /// <param name="userPeriodidAttribute"> (optional)</param>
    /// <param name="userPeriodextraFilter"> (optional)</param>
    /// <param name="userPeriodmakeDnPath"> (optional)</param>
    /// <param name="groupPeriodbaseDN"> (optional)</param>
    /// <param name="groupPeriodobjectclass"> (optional)</param>
    /// <param name="groupPeriodnameAttribute"> (optional)</param>
    /// <param name="groupPeriodextraFilter"> (optional)</param>
    /// <param name="groupPeriodmakeDnPath"> (optional)</param>
    /// <param name="groupPeriodmemberAttribute"> (optional)</param>
    /// <param name="useUidForExtId"> (optional)</param>
    /// <param name="customattributes"> (optional)</param>
    virtual void org_apache_jackrabbit_oak_security_authentication_ldap_impl_ldap_identi(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &providerPeriodname, const Pistache::Optional<std::string> &hostPeriodname, const Pistache::Optional<int32_t> &hostPeriodport, const Pistache::Optional<bool> &hostPeriodssl, const Pistache::Optional<bool> &hostPeriodtls, const Pistache::Optional<bool> &hostPeriodnoCertCheck, const Pistache::Optional<std::string> &bindPerioddn, const Pistache::Optional<std::string> &bindPeriodpassword, const Pistache::Optional<std::string> &searchTimeout, const Pistache::Optional<int32_t> &adminPoolPeriodmaxActive, const Pistache::Optional<bool> &adminPoolPeriodlookupOnValidate, const Pistache::Optional<int32_t> &userPoolPeriodmaxActive, const Pistache::Optional<bool> &userPoolPeriodlookupOnValidate, const Pistache::Optional<std::string> &userPeriodbaseDN, const Pistache::Optional<std::string> &userPeriodobjectclass, const Pistache::Optional<std::string> &userPeriodidAttribute, const Pistache::Optional<std::string> &userPeriodextraFilter, const Pistache::Optional<bool> &userPeriodmakeDnPath, const Pistache::Optional<std::string> &groupPeriodbaseDN, const Pistache::Optional<std::string> &groupPeriodobjectclass, const Pistache::Optional<std::string> &groupPeriodnameAttribute, const Pistache::Optional<std::string> &groupPeriodextraFilter, const Pistache::Optional<bool> &groupPeriodmakeDnPath, const Pistache::Optional<std::string> &groupPeriodmemberAttribute, const Pistache::Optional<bool> &useUidForExtId, const Pistache::Optional<std::string> &customattributes, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="tokenExpiration"> (optional)</param>
    /// <param name="tokenLength"> (optional)</param>
    /// <param name="tokenRefresh"> (optional)</param>
    /// <param name="tokenCleanupThreshold"> (optional)</param>
    /// <param name="passwordHashAlgorithm"> (optional)</param>
    /// <param name="passwordHashIterations"> (optional)</param>
    /// <param name="passwordSaltSize"> (optional)</param>
    virtual void org_apache_jackrabbit_oak_security_authentication_token_token_configura(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &tokenExpiration, const Pistache::Optional<std::string> &tokenLength, const Pistache::Optional<bool> &tokenRefresh, const Pistache::Optional<int32_t> &tokenCleanupThreshold, const Pistache::Optional<std::string> &passwordHashAlgorithm, const Pistache::Optional<int32_t> &passwordHashIterations, const Pistache::Optional<int32_t> &passwordSaltSize, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="permissionsJr2"> (optional)</param>
    /// <param name="importBehavior"> (optional)</param>
    /// <param name="readPaths"> (optional)</param>
    /// <param name="administrativePrincipals"> (optional)</param>
    /// <param name="configurationRanking"> (optional)</param>
    virtual void org_apache_jackrabbit_oak_security_authorization_authorization_configur(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &permissionsJr2, const Pistache::Optional<std::string> &importBehavior, const Pistache::Optional<std::string> &readPaths, const Pistache::Optional<std::string> &administrativePrincipals, const Pistache::Optional<int32_t> &configurationRanking, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="requiredServicePids"> (optional)</param>
    /// <param name="authorizationCompositionType"> (optional)</param>
    virtual void org_apache_jackrabbit_oak_security_internal_security_provider_registrati(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &requiredServicePids, const Pistache::Optional<std::string> &authorizationCompositionType, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="length"> (optional)</param>
    virtual void org_apache_jackrabbit_oak_security_user_random_authorizable_node_name(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<int32_t> &length, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="usersPath"> (optional)</param>
    /// <param name="groupsPath"> (optional)</param>
    /// <param name="systemRelativePath"> (optional)</param>
    /// <param name="defaultDepth"> (optional)</param>
    /// <param name="importBehavior"> (optional)</param>
    /// <param name="passwordHashAlgorithm"> (optional)</param>
    /// <param name="passwordHashIterations"> (optional)</param>
    /// <param name="passwordSaltSize"> (optional)</param>
    /// <param name="omitAdminPw"> (optional)</param>
    /// <param name="supportAutoSave"> (optional)</param>
    /// <param name="passwordMaxAge"> (optional)</param>
    /// <param name="initialPasswordChange"> (optional)</param>
    /// <param name="passwordHistorySize"> (optional)</param>
    /// <param name="passwordExpiryForAdmin"> (optional)</param>
    /// <param name="cacheExpiration"> (optional)</param>
    /// <param name="enableRFC7613UsercaseMappedProfile"> (optional)</param>
    virtual void org_apache_jackrabbit_oak_security_user_user_configuration_impl(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &usersPath, const Pistache::Optional<std::string> &groupsPath, const Pistache::Optional<std::string> &systemRelativePath, const Pistache::Optional<int32_t> &defaultDepth, const Pistache::Optional<std::string> &importBehavior, const Pistache::Optional<std::string> &passwordHashAlgorithm, const Pistache::Optional<int32_t> &passwordHashIterations, const Pistache::Optional<int32_t> &passwordSaltSize, const Pistache::Optional<bool> &omitAdminPw, const Pistache::Optional<bool> &supportAutoSave, const Pistache::Optional<int32_t> &passwordMaxAge, const Pistache::Optional<bool> &initialPasswordChange, const Pistache::Optional<int32_t> &passwordHistorySize, const Pistache::Optional<bool> &passwordExpiryForAdmin, const Pistache::Optional<int32_t> &cacheExpiration, const Pistache::Optional<bool> &enableRFC7613UsercaseMappedProfile, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="accountName"> (optional)</param>
    /// <param name="containerName"> (optional)</param>
    /// <param name="accessKey"> (optional)</param>
    /// <param name="rootPath"> (optional)</param>
    /// <param name="connectionURL"> (optional)</param>
    virtual void org_apache_jackrabbit_oak_segment_azure_azure_segment_store_service(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &accountName, const Pistache::Optional<std::string> &containerName, const Pistache::Optional<std::string> &accessKey, const Pistache::Optional<std::string> &rootPath, const Pistache::Optional<std::string> &connectionURL, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="repositoryPeriodhome"> (optional)</param>
    /// <param name="tarmkPeriodmode"> (optional)</param>
    /// <param name="tarmkPeriodsize"> (optional)</param>
    /// <param name="segmentCachePeriodsize"> (optional)</param>
    /// <param name="stringCachePeriodsize"> (optional)</param>
    /// <param name="templateCachePeriodsize"> (optional)</param>
    /// <param name="stringDeduplicationCachePeriodsize"> (optional)</param>
    /// <param name="templateDeduplicationCachePeriodsize"> (optional)</param>
    /// <param name="nodeDeduplicationCachePeriodsize"> (optional)</param>
    /// <param name="pauseCompaction"> (optional)</param>
    /// <param name="compactionPeriodretryCount"> (optional)</param>
    /// <param name="compactionPeriodforcePeriodtimeout"> (optional)</param>
    /// <param name="compactionPeriodsizeDeltaEstimation"> (optional)</param>
    /// <param name="compactionPerioddisableEstimation"> (optional)</param>
    /// <param name="compactionPeriodretainedGenerations"> (optional)</param>
    /// <param name="compactionPeriodmemoryThreshold"> (optional)</param>
    /// <param name="compactionPeriodprogressLog"> (optional)</param>
    /// <param name="standby"> (optional)</param>
    /// <param name="customBlobStore"> (optional)</param>
    /// <param name="customSegmentStore"> (optional)</param>
    /// <param name="splitPersistence"> (optional)</param>
    /// <param name="repositoryPeriodbackupPerioddir"> (optional)</param>
    /// <param name="blobGcMaxAgeInSecs"> (optional)</param>
    /// <param name="blobTrackSnapshotIntervalInSecs"> (optional)</param>
    /// <param name="role"> (optional)</param>
    /// <param name="registerDescriptors"> (optional)</param>
    /// <param name="dispatchChanges"> (optional)</param>
    virtual void org_apache_jackrabbit_oak_segment_segment_node_store_factory(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &repositoryPeriodhome, const Pistache::Optional<std::string> &tarmkPeriodmode, const Pistache::Optional<int32_t> &tarmkPeriodsize, const Pistache::Optional<int32_t> &segmentCachePeriodsize, const Pistache::Optional<int32_t> &stringCachePeriodsize, const Pistache::Optional<int32_t> &templateCachePeriodsize, const Pistache::Optional<int32_t> &stringDeduplicationCachePeriodsize, const Pistache::Optional<int32_t> &templateDeduplicationCachePeriodsize, const Pistache::Optional<int32_t> &nodeDeduplicationCachePeriodsize, const Pistache::Optional<bool> &pauseCompaction, const Pistache::Optional<int32_t> &compactionPeriodretryCount, const Pistache::Optional<int32_t> &compactionPeriodforcePeriodtimeout, const Pistache::Optional<int32_t> &compactionPeriodsizeDeltaEstimation, const Pistache::Optional<bool> &compactionPerioddisableEstimation, const Pistache::Optional<int32_t> &compactionPeriodretainedGenerations, const Pistache::Optional<int32_t> &compactionPeriodmemoryThreshold, const Pistache::Optional<int32_t> &compactionPeriodprogressLog, const Pistache::Optional<bool> &standby, const Pistache::Optional<bool> &customBlobStore, const Pistache::Optional<bool> &customSegmentStore, const Pistache::Optional<bool> &splitPersistence, const Pistache::Optional<std::string> &repositoryPeriodbackupPerioddir, const Pistache::Optional<int32_t> &blobGcMaxAgeInSecs, const Pistache::Optional<int32_t> &blobTrackSnapshotIntervalInSecs, const Pistache::Optional<std::string> &role, const Pistache::Optional<bool> &registerDescriptors, const Pistache::Optional<bool> &dispatchChanges, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="commitsTrackerWriterGroups"> (optional)</param>
    virtual void org_apache_jackrabbit_oak_segment_segment_node_store_monitor_service(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &commitsTrackerWriterGroups, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="repositoryPeriodhome"> (optional)</param>
    /// <param name="tarmkPeriodmode"> (optional)</param>
    /// <param name="tarmkPeriodsize"> (optional)</param>
    /// <param name="segmentCachePeriodsize"> (optional)</param>
    /// <param name="stringCachePeriodsize"> (optional)</param>
    /// <param name="templateCachePeriodsize"> (optional)</param>
    /// <param name="stringDeduplicationCachePeriodsize"> (optional)</param>
    /// <param name="templateDeduplicationCachePeriodsize"> (optional)</param>
    /// <param name="nodeDeduplicationCachePeriodsize"> (optional)</param>
    /// <param name="pauseCompaction"> (optional)</param>
    /// <param name="compactionPeriodretryCount"> (optional)</param>
    /// <param name="compactionPeriodforcePeriodtimeout"> (optional)</param>
    /// <param name="compactionPeriodsizeDeltaEstimation"> (optional)</param>
    /// <param name="compactionPerioddisableEstimation"> (optional)</param>
    /// <param name="compactionPeriodretainedGenerations"> (optional)</param>
    /// <param name="compactionPeriodmemoryThreshold"> (optional)</param>
    /// <param name="compactionPeriodprogressLog"> (optional)</param>
    /// <param name="standby"> (optional)</param>
    /// <param name="customBlobStore"> (optional)</param>
    /// <param name="customSegmentStore"> (optional)</param>
    /// <param name="splitPersistence"> (optional)</param>
    /// <param name="repositoryPeriodbackupPerioddir"> (optional)</param>
    /// <param name="blobGcMaxAgeInSecs"> (optional)</param>
    /// <param name="blobTrackSnapshotIntervalInSecs"> (optional)</param>
    virtual void org_apache_jackrabbit_oak_segment_segment_node_store_service(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &repositoryPeriodhome, const Pistache::Optional<std::string> &tarmkPeriodmode, const Pistache::Optional<int32_t> &tarmkPeriodsize, const Pistache::Optional<int32_t> &segmentCachePeriodsize, const Pistache::Optional<int32_t> &stringCachePeriodsize, const Pistache::Optional<int32_t> &templateCachePeriodsize, const Pistache::Optional<int32_t> &stringDeduplicationCachePeriodsize, const Pistache::Optional<int32_t> &templateDeduplicationCachePeriodsize, const Pistache::Optional<int32_t> &nodeDeduplicationCachePeriodsize, const Pistache::Optional<bool> &pauseCompaction, const Pistache::Optional<int32_t> &compactionPeriodretryCount, const Pistache::Optional<int32_t> &compactionPeriodforcePeriodtimeout, const Pistache::Optional<int32_t> &compactionPeriodsizeDeltaEstimation, const Pistache::Optional<bool> &compactionPerioddisableEstimation, const Pistache::Optional<int32_t> &compactionPeriodretainedGenerations, const Pistache::Optional<int32_t> &compactionPeriodmemoryThreshold, const Pistache::Optional<int32_t> &compactionPeriodprogressLog, const Pistache::Optional<bool> &standby, const Pistache::Optional<bool> &customBlobStore, const Pistache::Optional<bool> &customSegmentStore, const Pistache::Optional<bool> &splitPersistence, const Pistache::Optional<std::string> &repositoryPeriodbackupPerioddir, const Pistache::Optional<int32_t> &blobGcMaxAgeInSecs, const Pistache::Optional<int32_t> &blobTrackSnapshotIntervalInSecs, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="orgPeriodapachePeriodslingPeriodinstallerPeriodconfigurationPeriodpersist"> (optional)</param>
    /// <param name="mode"> (optional)</param>
    /// <param name="port"> (optional)</param>
    /// <param name="primaryPeriodhost"> (optional)</param>
    /// <param name="interval"> (optional)</param>
    /// <param name="primaryPeriodallowedClientIpRanges"> (optional)</param>
    /// <param name="secure"> (optional)</param>
    /// <param name="standbyPeriodreadtimeout"> (optional)</param>
    /// <param name="standbyPeriodautoclean"> (optional)</param>
    virtual void org_apache_jackrabbit_oak_segment_standby_store_standby_store_service(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<bool> &orgPeriodapachePeriodslingPeriodinstallerPeriodconfigurationPeriodpersist, const Pistache::Optional<std::string> &mode, const Pistache::Optional<int32_t> &port, const Pistache::Optional<std::string> &primaryPeriodhost, const Pistache::Optional<int32_t> &interval, const Pistache::Optional<std::string> &primaryPeriodallowedClientIpRanges, const Pistache::Optional<bool> &secure, const Pistache::Optional<int32_t> &standbyPeriodreadtimeout, const Pistache::Optional<bool> &standbyPeriodautoclean, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="handlerPeriodname"> (optional)</param>
    /// <param name="userPeriodexpirationTime"> (optional)</param>
    /// <param name="userPeriodautoMembership"> (optional)</param>
    /// <param name="userPeriodpropertyMapping"> (optional)</param>
    /// <param name="userPeriodpathPrefix"> (optional)</param>
    /// <param name="userPeriodmembershipExpTime"> (optional)</param>
    /// <param name="userPeriodmembershipNestingDepth"> (optional)</param>
    /// <param name="userPerioddynamicMembership"> (optional)</param>
    /// <param name="userPerioddisableMissing"> (optional)</param>
    /// <param name="groupPeriodexpirationTime"> (optional)</param>
    /// <param name="groupPeriodautoMembership"> (optional)</param>
    /// <param name="groupPeriodpropertyMapping"> (optional)</param>
    /// <param name="groupPeriodpathPrefix"> (optional)</param>
    /// <param name="enableRFC7613UsercaseMappedProfile"> (optional)</param>
    virtual void org_apache_jackrabbit_oak_spi_security_authentication_external_impl_de(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &handlerPeriodname, const Pistache::Optional<std::string> &userPeriodexpirationTime, const Pistache::Optional<std::string> &userPeriodautoMembership, const Pistache::Optional<std::string> &userPeriodpropertyMapping, const Pistache::Optional<std::string> &userPeriodpathPrefix, const Pistache::Optional<std::string> &userPeriodmembershipExpTime, const Pistache::Optional<int32_t> &userPeriodmembershipNestingDepth, const Pistache::Optional<bool> &userPerioddynamicMembership, const Pistache::Optional<bool> &userPerioddisableMissing, const Pistache::Optional<std::string> &groupPeriodexpirationTime, const Pistache::Optional<std::string> &groupPeriodautoMembership, const Pistache::Optional<std::string> &groupPeriodpropertyMapping, const Pistache::Optional<std::string> &groupPeriodpathPrefix, const Pistache::Optional<bool> &enableRFC7613UsercaseMappedProfile, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="jaasPeriodranking"> (optional)</param>
    /// <param name="jaasPeriodcontrolFlag"> (optional)</param>
    /// <param name="jaasPeriodrealmName"> (optional)</param>
    /// <param name="idpPeriodname"> (optional)</param>
    /// <param name="syncPeriodhandlerName"> (optional)</param>
    virtual void org_apache_jackrabbit_oak_spi_security_authentication_external_impl_ex(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<int32_t> &jaasPeriodranking, const Pistache::Optional<std::string> &jaasPeriodcontrolFlag, const Pistache::Optional<std::string> &jaasPeriodrealmName, const Pistache::Optional<std::string> &idpPeriodname, const Pistache::Optional<std::string> &syncPeriodhandlerName, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="protectExternalId"> (optional)</param>
    virtual void org_apache_jackrabbit_oak_spi_security_authentication_external_impl_pr(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<bool> &protectExternalId, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="cugSupportedPaths"> (optional)</param>
    /// <param name="cugEnabled"> (optional)</param>
    /// <param name="configurationRanking"> (optional)</param>
    virtual void org_apache_jackrabbit_oak_spi_security_authorization_cug_impl_cug_confi(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &cugSupportedPaths, const Pistache::Optional<bool> &cugEnabled, const Pistache::Optional<int32_t> &configurationRanking, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="principalNames"> (optional)</param>
    virtual void org_apache_jackrabbit_oak_spi_security_authorization_cug_impl_cug_exclu(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &principalNames, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="enabledActions"> (optional)</param>
    /// <param name="userPrivilegeNames"> (optional)</param>
    /// <param name="groupPrivilegeNames"> (optional)</param>
    /// <param name="constraint"> (optional)</param>
    virtual void org_apache_jackrabbit_oak_spi_security_user_action_default_authorizable(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &enabledActions, const Pistache::Optional<std::string> &userPrivilegeNames, const Pistache::Optional<std::string> &groupPrivilegeNames, const Pistache::Optional<std::string> &constraint, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="packageRoots"> (optional)</param>
    virtual void org_apache_jackrabbit_vault_packaging_impl_packaging_impl(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &packageRoots, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="homePath"> (optional)</param>
    virtual void org_apache_jackrabbit_vault_packaging_registry_impl_fs_package_registry(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &homePath, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="slingPeriodservletPeriodmethods"> (optional)</param>
    /// <param name="slingPeriodservletPeriodpaths"> (optional)</param>
    virtual void org_apache_sling_auth_core_impl_logout_servlet(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &slingPeriodservletPeriodmethods, const Pistache::Optional<std::string> &slingPeriodservletPeriodpaths, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="enabled"> (optional)</param>
    virtual void org_apache_sling_caconfig_impl_configuration_bindings_value_provider(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<bool> &enabled, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="configBucketNames"> (optional)</param>
    virtual void org_apache_sling_caconfig_impl_configuration_resolver_impl(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &configBucketNames, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="enabled"> (optional)</param>
    /// <param name="configPropertyInheritancePropertyNames"> (optional)</param>
    virtual void org_apache_sling_caconfig_impl_def_default_configuration_inheritance_stra(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<bool> &enabled, const Pistache::Optional<std::string> &configPropertyInheritancePropertyNames, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="enabled"> (optional)</param>
    virtual void org_apache_sling_caconfig_impl_def_default_configuration_persistence_stra(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<bool> &enabled, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="description"> (optional)</param>
    /// <param name="overrides"> (optional)</param>
    /// <param name="enabled"> (optional)</param>
    /// <param name="servicePeriodranking"> (optional)</param>
    virtual void org_apache_sling_caconfig_impl_override_osgi_configuration_override_provi(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &description, const Pistache::Optional<std::string> &overrides, const Pistache::Optional<bool> &enabled, const Pistache::Optional<int32_t> &servicePeriodranking, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="enabled"> (optional)</param>
    /// <param name="servicePeriodranking"> (optional)</param>
    virtual void org_apache_sling_caconfig_impl_override_system_property_configuration_ove(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<bool> &enabled, const Pistache::Optional<int32_t> &servicePeriodranking, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="ignorePropertyNameRegex"> (optional)</param>
    /// <param name="configCollectionPropertiesResourceNames"> (optional)</param>
    virtual void org_apache_sling_caconfig_management_impl_configuration_management_setti(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &ignorePropertyNameRegex, const Pistache::Optional<std::string> &configCollectionPropertiesResourceNames, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="enabled"> (optional)</param>
    /// <param name="configPath"> (optional)</param>
    /// <param name="fallbackPaths"> (optional)</param>
    /// <param name="configCollectionInheritancePropertyNames"> (optional)</param>
    virtual void org_apache_sling_caconfig_resource_impl_def_default_configuration_resour(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<bool> &enabled, const Pistache::Optional<std::string> &configPath, const Pistache::Optional<std::string> &fallbackPaths, const Pistache::Optional<std::string> &configCollectionInheritancePropertyNames, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="enabled"> (optional)</param>
    /// <param name="configRefResourceNames"> (optional)</param>
    /// <param name="configRefPropertyNames"> (optional)</param>
    /// <param name="servicePeriodranking"> (optional)</param>
    virtual void org_apache_sling_caconfig_resource_impl_def_default_context_path_strategy(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<bool> &enabled, const Pistache::Optional<std::string> &configRefResourceNames, const Pistache::Optional<std::string> &configRefPropertyNames, const Pistache::Optional<int32_t> &servicePeriodranking, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="parserPeriodfeatures"> (optional)</param>
    virtual void org_apache_sling_commons_html_internal_tagsoup_html_parser(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &parserPeriodfeatures, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="orgPeriodapachePeriodslingPeriodcommonsPeriodlogPeriodlevel"> (optional)</param>
    /// <param name="orgPeriodapachePeriodslingPeriodcommonsPeriodlogPeriodfile"> (optional)</param>
    /// <param name="orgPeriodapachePeriodslingPeriodcommonsPeriodlogPeriodfilePeriodnumber"> (optional)</param>
    /// <param name="orgPeriodapachePeriodslingPeriodcommonsPeriodlogPeriodfilePeriodsize"> (optional)</param>
    /// <param name="orgPeriodapachePeriodslingPeriodcommonsPeriodlogPeriodpattern"> (optional)</param>
    /// <param name="orgPeriodapachePeriodslingPeriodcommonsPeriodlogPeriodconfigurationFile"> (optional)</param>
    /// <param name="orgPeriodapachePeriodslingPeriodcommonsPeriodlogPeriodpackagingDataEnabled"> (optional)</param>
    /// <param name="orgPeriodapachePeriodslingPeriodcommonsPeriodlogPeriodmaxCallerDataDepth"> (optional)</param>
    /// <param name="orgPeriodapachePeriodslingPeriodcommonsPeriodlogPeriodmaxOldFileCountInDump"> (optional)</param>
    /// <param name="orgPeriodapachePeriodslingPeriodcommonsPeriodlogPeriodnumOfLines"> (optional)</param>
    virtual void org_apache_sling_commons_log_log_manager(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &orgPeriodapachePeriodslingPeriodcommonsPeriodlogPeriodlevel, const Pistache::Optional<std::string> &orgPeriodapachePeriodslingPeriodcommonsPeriodlogPeriodfile, const Pistache::Optional<int32_t> &orgPeriodapachePeriodslingPeriodcommonsPeriodlogPeriodfilePeriodnumber, const Pistache::Optional<std::string> &orgPeriodapachePeriodslingPeriodcommonsPeriodlogPeriodfilePeriodsize, const Pistache::Optional<std::string> &orgPeriodapachePeriodslingPeriodcommonsPeriodlogPeriodpattern, const Pistache::Optional<std::string> &orgPeriodapachePeriodslingPeriodcommonsPeriodlogPeriodconfigurationFile, const Pistache::Optional<bool> &orgPeriodapachePeriodslingPeriodcommonsPeriodlogPeriodpackagingDataEnabled, const Pistache::Optional<int32_t> &orgPeriodapachePeriodslingPeriodcommonsPeriodlogPeriodmaxCallerDataDepth, const Pistache::Optional<int32_t> &orgPeriodapachePeriodslingPeriodcommonsPeriodlogPeriodmaxOldFileCountInDump, const Pistache::Optional<int32_t> &orgPeriodapachePeriodslingPeriodcommonsPeriodlogPeriodnumOfLines, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="orgPeriodapachePeriodslingPeriodcommonsPeriodlogPeriodlevel"> (optional)</param>
    /// <param name="orgPeriodapachePeriodslingPeriodcommonsPeriodlogPeriodfile"> (optional)</param>
    /// <param name="orgPeriodapachePeriodslingPeriodcommonsPeriodlogPeriodpattern"> (optional)</param>
    /// <param name="orgPeriodapachePeriodslingPeriodcommonsPeriodlogPeriodnames"> (optional)</param>
    /// <param name="orgPeriodapachePeriodslingPeriodcommonsPeriodlogPeriodadditiv"> (optional)</param>
    virtual void org_apache_sling_commons_log_log_manager_factory_config(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &orgPeriodapachePeriodslingPeriodcommonsPeriodlogPeriodlevel, const Pistache::Optional<std::string> &orgPeriodapachePeriodslingPeriodcommonsPeriodlogPeriodfile, const Pistache::Optional<std::string> &orgPeriodapachePeriodslingPeriodcommonsPeriodlogPeriodpattern, const Pistache::Optional<std::string> &orgPeriodapachePeriodslingPeriodcommonsPeriodlogPeriodnames, const Pistache::Optional<bool> &orgPeriodapachePeriodslingPeriodcommonsPeriodlogPeriodadditiv, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="orgPeriodapachePeriodslingPeriodcommonsPeriodlogPeriodfile"> (optional)</param>
    /// <param name="orgPeriodapachePeriodslingPeriodcommonsPeriodlogPeriodfilePeriodnumber"> (optional)</param>
    /// <param name="orgPeriodapachePeriodslingPeriodcommonsPeriodlogPeriodfilePeriodsize"> (optional)</param>
    /// <param name="orgPeriodapachePeriodslingPeriodcommonsPeriodlogPeriodfilePeriodbuffered"> (optional)</param>
    virtual void org_apache_sling_commons_log_log_manager_factory_writer(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &orgPeriodapachePeriodslingPeriodcommonsPeriodlogPeriodfile, const Pistache::Optional<int32_t> &orgPeriodapachePeriodslingPeriodcommonsPeriodlogPeriodfilePeriodnumber, const Pistache::Optional<std::string> &orgPeriodapachePeriodslingPeriodcommonsPeriodlogPeriodfilePeriodsize, const Pistache::Optional<bool> &orgPeriodapachePeriodslingPeriodcommonsPeriodlogPeriodfilePeriodbuffered, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="period"> (optional)</param>
    /// <param name="timeUnit"> (optional)</param>
    /// <param name="level"> (optional)</param>
    /// <param name="loggerName"> (optional)</param>
    /// <param name="prefix"> (optional)</param>
    /// <param name="pattern"> (optional)</param>
    /// <param name="registryName"> (optional)</param>
    virtual void org_apache_sling_commons_metrics_internal_log_reporter(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<int32_t> &period, const Pistache::Optional<std::string> &timeUnit, const Pistache::Optional<std::string> &level, const Pistache::Optional<std::string> &loggerName, const Pistache::Optional<std::string> &prefix, const Pistache::Optional<std::string> &pattern, const Pistache::Optional<std::string> &registryName, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="datasources"> (optional)</param>
    /// <param name="step"> (optional)</param>
    /// <param name="archives"> (optional)</param>
    /// <param name="path"> (optional)</param>
    virtual void org_apache_sling_commons_metrics_rrd4j_impl_codahale_metrics_reporter(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &datasources, const Pistache::Optional<int32_t> &step, const Pistache::Optional<std::string> &archives, const Pistache::Optional<std::string> &path, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="mimePeriodtypes"> (optional)</param>
    virtual void org_apache_sling_commons_mime_internal_mime_type_service_impl(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &mimePeriodtypes, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="poolName"> (optional)</param>
    /// <param name="allowedPoolNames"> (optional)</param>
    /// <param name="schedulerPerioduseleaderforsingle"> (optional)</param>
    /// <param name="metricsPeriodfilters"> (optional)</param>
    /// <param name="slowThresholdMillis"> (optional)</param>
    virtual void org_apache_sling_commons_scheduler_impl_quartz_scheduler(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &poolName, const Pistache::Optional<std::string> &allowedPoolNames, const Pistache::Optional<bool> &schedulerPerioduseleaderforsingle, const Pistache::Optional<std::string> &metricsPeriodfilters, const Pistache::Optional<int32_t> &slowThresholdMillis, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="maxPeriodquartzJobPerioddurationPeriodacceptable"> (optional)</param>
    virtual void org_apache_sling_commons_scheduler_impl_scheduler_health_check(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<int32_t> &maxPeriodquartzJobPerioddurationPeriodacceptable, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="name"> (optional)</param>
    /// <param name="minPoolSize"> (optional)</param>
    /// <param name="maxPoolSize"> (optional)</param>
    /// <param name="queueSize"> (optional)</param>
    /// <param name="maxThreadAge"> (optional)</param>
    /// <param name="keepAliveTime"> (optional)</param>
    /// <param name="blockPolicy"> (optional)</param>
    /// <param name="shutdownGraceful"> (optional)</param>
    /// <param name="daemon"> (optional)</param>
    /// <param name="shutdownWaitTime"> (optional)</param>
    /// <param name="priority"> (optional)</param>
    virtual void org_apache_sling_commons_threads_impl_default_thread_pool_factory(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &name, const Pistache::Optional<int32_t> &minPoolSize, const Pistache::Optional<int32_t> &maxPoolSize, const Pistache::Optional<int32_t> &queueSize, const Pistache::Optional<int32_t> &maxThreadAge, const Pistache::Optional<int32_t> &keepAliveTime, const Pistache::Optional<std::string> &blockPolicy, const Pistache::Optional<bool> &shutdownGraceful, const Pistache::Optional<bool> &daemon, const Pistache::Optional<int32_t> &shutdownWaitTime, const Pistache::Optional<std::string> &priority, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="datasourcePeriodname"> (optional)</param>
    /// <param name="datasourcePeriodsvcPeriodpropPeriodname"> (optional)</param>
    /// <param name="driverClassName"> (optional)</param>
    /// <param name="url"> (optional)</param>
    /// <param name="username"> (optional)</param>
    /// <param name="password"> (optional)</param>
    /// <param name="defaultAutoCommit"> (optional)</param>
    /// <param name="defaultReadOnly"> (optional)</param>
    /// <param name="defaultTransactionIsolation"> (optional)</param>
    /// <param name="defaultCatalog"> (optional)</param>
    /// <param name="maxActive"> (optional)</param>
    /// <param name="maxIdle"> (optional)</param>
    /// <param name="minIdle"> (optional)</param>
    /// <param name="initialSize"> (optional)</param>
    /// <param name="maxWait"> (optional)</param>
    /// <param name="maxAge"> (optional)</param>
    /// <param name="testOnBorrow"> (optional)</param>
    /// <param name="testOnReturn"> (optional)</param>
    /// <param name="testWhileIdle"> (optional)</param>
    /// <param name="validationQuery"> (optional)</param>
    /// <param name="validationQueryTimeout"> (optional)</param>
    /// <param name="timeBetweenEvictionRunsMillis"> (optional)</param>
    /// <param name="minEvictableIdleTimeMillis"> (optional)</param>
    /// <param name="connectionProperties"> (optional)</param>
    /// <param name="initSQL"> (optional)</param>
    /// <param name="jdbcInterceptors"> (optional)</param>
    /// <param name="validationInterval"> (optional)</param>
    /// <param name="logValidationErrors"> (optional)</param>
    /// <param name="datasourcePeriodsvcPeriodproperties"> (optional)</param>
    virtual void org_apache_sling_datasource_data_source_factory(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &datasourcePeriodname, const Pistache::Optional<std::string> &datasourcePeriodsvcPeriodpropPeriodname, const Pistache::Optional<std::string> &driverClassName, const Pistache::Optional<std::string> &url, const Pistache::Optional<std::string> &username, const Pistache::Optional<std::string> &password, const Pistache::Optional<std::string> &defaultAutoCommit, const Pistache::Optional<std::string> &defaultReadOnly, const Pistache::Optional<std::string> &defaultTransactionIsolation, const Pistache::Optional<std::string> &defaultCatalog, const Pistache::Optional<int32_t> &maxActive, const Pistache::Optional<int32_t> &maxIdle, const Pistache::Optional<int32_t> &minIdle, const Pistache::Optional<int32_t> &initialSize, const Pistache::Optional<int32_t> &maxWait, const Pistache::Optional<int32_t> &maxAge, const Pistache::Optional<bool> &testOnBorrow, const Pistache::Optional<bool> &testOnReturn, const Pistache::Optional<bool> &testWhileIdle, const Pistache::Optional<std::string> &validationQuery, const Pistache::Optional<int32_t> &validationQueryTimeout, const Pistache::Optional<int32_t> &timeBetweenEvictionRunsMillis, const Pistache::Optional<int32_t> &minEvictableIdleTimeMillis, const Pistache::Optional<std::string> &connectionProperties, const Pistache::Optional<std::string> &initSQL, const Pistache::Optional<std::string> &jdbcInterceptors, const Pistache::Optional<int32_t> &validationInterval, const Pistache::Optional<bool> &logValidationErrors, const Pistache::Optional<std::string> &datasourcePeriodsvcPeriodproperties, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="datasourcePeriodname"> (optional)</param>
    /// <param name="datasourcePeriodsvcPeriodpropPeriodname"> (optional)</param>
    /// <param name="datasourcePeriodjndiPeriodname"> (optional)</param>
    /// <param name="jndiPeriodproperties"> (optional)</param>
    virtual void org_apache_sling_datasource_jndi_data_source_factory(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &datasourcePeriodname, const Pistache::Optional<std::string> &datasourcePeriodsvcPeriodpropPeriodname, const Pistache::Optional<std::string> &datasourcePeriodjndiPeriodname, const Pistache::Optional<std::string> &jndiPeriodproperties, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="connectorPingTimeout"> (optional)</param>
    /// <param name="connectorPingInterval"> (optional)</param>
    /// <param name="discoveryLiteCheckInterval"> (optional)</param>
    /// <param name="clusterSyncServiceTimeout"> (optional)</param>
    /// <param name="clusterSyncServiceInterval"> (optional)</param>
    /// <param name="enableSyncToken"> (optional)</param>
    /// <param name="minEventDelay"> (optional)</param>
    /// <param name="socketConnectTimeout"> (optional)</param>
    /// <param name="soTimeout"> (optional)</param>
    /// <param name="topologyConnectorUrls"> (optional)</param>
    /// <param name="topologyConnectorWhitelist"> (optional)</param>
    /// <param name="autoStopLocalLoopEnabled"> (optional)</param>
    /// <param name="gzipConnectorRequestsEnabled"> (optional)</param>
    /// <param name="hmacEnabled"> (optional)</param>
    /// <param name="enableEncryption"> (optional)</param>
    /// <param name="sharedKey"> (optional)</param>
    /// <param name="hmacSharedKeyTTL"> (optional)</param>
    /// <param name="backoffStandbyFactor"> (optional)</param>
    /// <param name="backoffStableFactor"> (optional)</param>
    virtual void org_apache_sling_discovery_oak_config(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<int32_t> &connectorPingTimeout, const Pistache::Optional<int32_t> &connectorPingInterval, const Pistache::Optional<int32_t> &discoveryLiteCheckInterval, const Pistache::Optional<int32_t> &clusterSyncServiceTimeout, const Pistache::Optional<int32_t> &clusterSyncServiceInterval, const Pistache::Optional<bool> &enableSyncToken, const Pistache::Optional<int32_t> &minEventDelay, const Pistache::Optional<int32_t> &socketConnectTimeout, const Pistache::Optional<int32_t> &soTimeout, const Pistache::Optional<std::string> &topologyConnectorUrls, const Pistache::Optional<std::string> &topologyConnectorWhitelist, const Pistache::Optional<bool> &autoStopLocalLoopEnabled, const Pistache::Optional<bool> &gzipConnectorRequestsEnabled, const Pistache::Optional<bool> &hmacEnabled, const Pistache::Optional<bool> &enableEncryption, const Pistache::Optional<std::string> &sharedKey, const Pistache::Optional<int32_t> &hmacSharedKeyTTL, const Pistache::Optional<std::string> &backoffStandbyFactor, const Pistache::Optional<std::string> &backoffStableFactor, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="hcPeriodname"> (optional)</param>
    /// <param name="hcPeriodtags"> (optional)</param>
    /// <param name="hcPeriodmbeanPeriodname"> (optional)</param>
    virtual void org_apache_sling_discovery_oak_synchronized_clocks_health_check(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &hcPeriodname, const Pistache::Optional<std::string> &hcPeriodtags, const Pistache::Optional<std::string> &hcPeriodmbeanPeriodname, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="name"> (optional)</param>
    /// <param name="title"> (optional)</param>
    /// <param name="details"> (optional)</param>
    /// <param name="enabled"> (optional)</param>
    /// <param name="serviceName"> (optional)</param>
    /// <param name="logPeriodlevel"> (optional)</param>
    /// <param name="allowedPeriodroots"> (optional)</param>
    /// <param name="queuePeriodprocessingPeriodenabled"> (optional)</param>
    /// <param name="packageImporterPeriodendpoints"> (optional)</param>
    /// <param name="passiveQueues"> (optional)</param>
    /// <param name="priorityQueues"> (optional)</param>
    /// <param name="retryPeriodstrategy"> (optional)</param>
    /// <param name="retryPeriodattempts"> (optional)</param>
    /// <param name="requestAuthorizationStrategyPeriodtarget"> (optional)</param>
    /// <param name="transportSecretProviderPeriodtarget"> (optional)</param>
    /// <param name="packageBuilderPeriodtarget"> (optional)</param>
    /// <param name="triggersPeriodtarget"> (optional)</param>
    /// <param name="queuePeriodprovider"> (optional)</param>
    /// <param name="asyncPerioddelivery"> (optional)</param>
    /// <param name="httpPeriodconnPeriodtimeout"> (optional)</param>
    virtual void org_apache_sling_distribution_agent_impl_forward_distribution_agent_facto(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &name, const Pistache::Optional<std::string> &title, const Pistache::Optional<std::string> &details, const Pistache::Optional<bool> &enabled, const Pistache::Optional<std::string> &serviceName, const Pistache::Optional<std::string> &logPeriodlevel, const Pistache::Optional<std::string> &allowedPeriodroots, const Pistache::Optional<bool> &queuePeriodprocessingPeriodenabled, const Pistache::Optional<std::string> &packageImporterPeriodendpoints, const Pistache::Optional<std::string> &passiveQueues, const Pistache::Optional<std::string> &priorityQueues, const Pistache::Optional<std::string> &retryPeriodstrategy, const Pistache::Optional<int32_t> &retryPeriodattempts, const Pistache::Optional<std::string> &requestAuthorizationStrategyPeriodtarget, const Pistache::Optional<std::string> &transportSecretProviderPeriodtarget, const Pistache::Optional<std::string> &packageBuilderPeriodtarget, const Pistache::Optional<std::string> &triggersPeriodtarget, const Pistache::Optional<std::string> &queuePeriodprovider, const Pistache::Optional<bool> &asyncPerioddelivery, const Pistache::Optional<int32_t> &httpPeriodconnPeriodtimeout, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="name"> (optional)</param>
    /// <param name="jcrPrivilege"> (optional)</param>
    virtual void org_apache_sling_distribution_agent_impl_privilege_distribution_request_a(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &name, const Pistache::Optional<std::string> &jcrPrivilege, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="name"> (optional)</param>
    /// <param name="title"> (optional)</param>
    /// <param name="details"> (optional)</param>
    /// <param name="enabled"> (optional)</param>
    /// <param name="serviceName"> (optional)</param>
    /// <param name="logPeriodlevel"> (optional)</param>
    /// <param name="allowedPeriodroots"> (optional)</param>
    /// <param name="requestAuthorizationStrategyPeriodtarget"> (optional)</param>
    /// <param name="queueProviderFactoryPeriodtarget"> (optional)</param>
    /// <param name="packageBuilderPeriodtarget"> (optional)</param>
    /// <param name="triggersPeriodtarget"> (optional)</param>
    /// <param name="priorityQueues"> (optional)</param>
    virtual void org_apache_sling_distribution_agent_impl_queue_distribution_agent_factory(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &name, const Pistache::Optional<std::string> &title, const Pistache::Optional<std::string> &details, const Pistache::Optional<bool> &enabled, const Pistache::Optional<std::string> &serviceName, const Pistache::Optional<std::string> &logPeriodlevel, const Pistache::Optional<std::string> &allowedPeriodroots, const Pistache::Optional<std::string> &requestAuthorizationStrategyPeriodtarget, const Pistache::Optional<std::string> &queueProviderFactoryPeriodtarget, const Pistache::Optional<std::string> &packageBuilderPeriodtarget, const Pistache::Optional<std::string> &triggersPeriodtarget, const Pistache::Optional<std::string> &priorityQueues, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="name"> (optional)</param>
    /// <param name="title"> (optional)</param>
    /// <param name="details"> (optional)</param>
    /// <param name="enabled"> (optional)</param>
    /// <param name="serviceName"> (optional)</param>
    /// <param name="logPeriodlevel"> (optional)</param>
    /// <param name="queuePeriodprocessingPeriodenabled"> (optional)</param>
    /// <param name="packageExporterPeriodendpoints"> (optional)</param>
    /// <param name="pullPerioditems"> (optional)</param>
    /// <param name="httpPeriodconnPeriodtimeout"> (optional)</param>
    /// <param name="requestAuthorizationStrategyPeriodtarget"> (optional)</param>
    /// <param name="transportSecretProviderPeriodtarget"> (optional)</param>
    /// <param name="packageBuilderPeriodtarget"> (optional)</param>
    /// <param name="triggersPeriodtarget"> (optional)</param>
    virtual void org_apache_sling_distribution_agent_impl_reverse_distribution_agent_facto(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &name, const Pistache::Optional<std::string> &title, const Pistache::Optional<std::string> &details, const Pistache::Optional<bool> &enabled, const Pistache::Optional<std::string> &serviceName, const Pistache::Optional<std::string> &logPeriodlevel, const Pistache::Optional<bool> &queuePeriodprocessingPeriodenabled, const Pistache::Optional<std::string> &packageExporterPeriodendpoints, const Pistache::Optional<int32_t> &pullPerioditems, const Pistache::Optional<int32_t> &httpPeriodconnPeriodtimeout, const Pistache::Optional<std::string> &requestAuthorizationStrategyPeriodtarget, const Pistache::Optional<std::string> &transportSecretProviderPeriodtarget, const Pistache::Optional<std::string> &packageBuilderPeriodtarget, const Pistache::Optional<std::string> &triggersPeriodtarget, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="name"> (optional)</param>
    /// <param name="title"> (optional)</param>
    /// <param name="details"> (optional)</param>
    /// <param name="enabled"> (optional)</param>
    /// <param name="serviceName"> (optional)</param>
    /// <param name="logPeriodlevel"> (optional)</param>
    /// <param name="queuePeriodprocessingPeriodenabled"> (optional)</param>
    /// <param name="packageExporterPeriodtarget"> (optional)</param>
    /// <param name="packageImporterPeriodtarget"> (optional)</param>
    /// <param name="requestAuthorizationStrategyPeriodtarget"> (optional)</param>
    /// <param name="triggersPeriodtarget"> (optional)</param>
    virtual void org_apache_sling_distribution_agent_impl_simple_distribution_agent_factor(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &name, const Pistache::Optional<std::string> &title, const Pistache::Optional<std::string> &details, const Pistache::Optional<bool> &enabled, const Pistache::Optional<std::string> &serviceName, const Pistache::Optional<std::string> &logPeriodlevel, const Pistache::Optional<bool> &queuePeriodprocessingPeriodenabled, const Pistache::Optional<std::string> &packageExporterPeriodtarget, const Pistache::Optional<std::string> &packageImporterPeriodtarget, const Pistache::Optional<std::string> &requestAuthorizationStrategyPeriodtarget, const Pistache::Optional<std::string> &triggersPeriodtarget, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="name"> (optional)</param>
    /// <param name="title"> (optional)</param>
    /// <param name="details"> (optional)</param>
    /// <param name="enabled"> (optional)</param>
    /// <param name="serviceName"> (optional)</param>
    /// <param name="logPeriodlevel"> (optional)</param>
    /// <param name="queuePeriodprocessingPeriodenabled"> (optional)</param>
    /// <param name="passiveQueues"> (optional)</param>
    /// <param name="packageExporterPeriodendpoints"> (optional)</param>
    /// <param name="packageImporterPeriodendpoints"> (optional)</param>
    /// <param name="retryPeriodstrategy"> (optional)</param>
    /// <param name="retryPeriodattempts"> (optional)</param>
    /// <param name="pullPerioditems"> (optional)</param>
    /// <param name="httpPeriodconnPeriodtimeout"> (optional)</param>
    /// <param name="requestAuthorizationStrategyPeriodtarget"> (optional)</param>
    /// <param name="transportSecretProviderPeriodtarget"> (optional)</param>
    /// <param name="packageBuilderPeriodtarget"> (optional)</param>
    /// <param name="triggersPeriodtarget"> (optional)</param>
    virtual void org_apache_sling_distribution_agent_impl_sync_distribution_agent_factory(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &name, const Pistache::Optional<std::string> &title, const Pistache::Optional<std::string> &details, const Pistache::Optional<bool> &enabled, const Pistache::Optional<std::string> &serviceName, const Pistache::Optional<std::string> &logPeriodlevel, const Pistache::Optional<bool> &queuePeriodprocessingPeriodenabled, const Pistache::Optional<std::string> &passiveQueues, const Pistache::Optional<std::string> &packageExporterPeriodendpoints, const Pistache::Optional<std::string> &packageImporterPeriodendpoints, const Pistache::Optional<std::string> &retryPeriodstrategy, const Pistache::Optional<int32_t> &retryPeriodattempts, const Pistache::Optional<int32_t> &pullPerioditems, const Pistache::Optional<int32_t> &httpPeriodconnPeriodtimeout, const Pistache::Optional<std::string> &requestAuthorizationStrategyPeriodtarget, const Pistache::Optional<std::string> &transportSecretProviderPeriodtarget, const Pistache::Optional<std::string> &packageBuilderPeriodtarget, const Pistache::Optional<std::string> &triggersPeriodtarget, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="hcPeriodname"> (optional)</param>
    /// <param name="hcPeriodtags"> (optional)</param>
    /// <param name="hcPeriodmbeanPeriodname"> (optional)</param>
    /// <param name="numberOfRetriesAllowed"> (optional)</param>
    virtual void org_apache_sling_distribution_monitor_distribution_queue_health_check(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &hcPeriodname, const Pistache::Optional<std::string> &hcPeriodtags, const Pistache::Optional<std::string> &hcPeriodmbeanPeriodname, const Pistache::Optional<int32_t> &numberOfRetriesAllowed, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="name"> (optional)</param>
    /// <param name="queue"> (optional)</param>
    /// <param name="dropPeriodinvalidPerioditems"> (optional)</param>
    /// <param name="agentPeriodtarget"> (optional)</param>
    virtual void org_apache_sling_distribution_packaging_impl_exporter_agent_distributio(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &name, const Pistache::Optional<std::string> &queue, const Pistache::Optional<bool> &dropPeriodinvalidPerioditems, const Pistache::Optional<std::string> &agentPeriodtarget, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="name"> (optional)</param>
    /// <param name="packageBuilderPeriodtarget"> (optional)</param>
    virtual void org_apache_sling_distribution_packaging_impl_exporter_local_distributio(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &name, const Pistache::Optional<std::string> &packageBuilderPeriodtarget, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="name"> (optional)</param>
    /// <param name="endpoints"> (optional)</param>
    /// <param name="pullPerioditems"> (optional)</param>
    /// <param name="packageBuilderPeriodtarget"> (optional)</param>
    /// <param name="transportSecretProviderPeriodtarget"> (optional)</param>
    virtual void org_apache_sling_distribution_packaging_impl_exporter_remote_distributi(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &name, const Pistache::Optional<std::string> &endpoints, const Pistache::Optional<int32_t> &pullPerioditems, const Pistache::Optional<std::string> &packageBuilderPeriodtarget, const Pistache::Optional<std::string> &transportSecretProviderPeriodtarget, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="name"> (optional)</param>
    /// <param name="packageBuilderPeriodtarget"> (optional)</param>
    virtual void org_apache_sling_distribution_packaging_impl_importer_local_distributio(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &name, const Pistache::Optional<std::string> &packageBuilderPeriodtarget, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="name"> (optional)</param>
    /// <param name="endpoints"> (optional)</param>
    /// <param name="transportSecretProviderPeriodtarget"> (optional)</param>
    virtual void org_apache_sling_distribution_packaging_impl_importer_remote_distributi(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &name, const Pistache::Optional<std::string> &endpoints, const Pistache::Optional<std::string> &transportSecretProviderPeriodtarget, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="name"> (optional)</param>
    /// <param name="servicePeriodname"> (optional)</param>
    /// <param name="path"> (optional)</param>
    /// <param name="privilegePeriodname"> (optional)</param>
    virtual void org_apache_sling_distribution_packaging_impl_importer_repository_distri(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &name, const Pistache::Optional<std::string> &servicePeriodname, const Pistache::Optional<std::string> &path, const Pistache::Optional<std::string> &privilegePeriodname, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="providerPeriodroots"> (optional)</param>
    /// <param name="kind"> (optional)</param>
    virtual void org_apache_sling_distribution_resources_impl_distribution_configuration(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &providerPeriodroots, const Pistache::Optional<std::string> &kind, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="providerPeriodroots"> (optional)</param>
    /// <param name="kind"> (optional)</param>
    virtual void org_apache_sling_distribution_resources_impl_distribution_service_resour(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &providerPeriodroots, const Pistache::Optional<std::string> &kind, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="name"> (optional)</param>
    /// <param name="type"> (optional)</param>
    /// <param name="formatPeriodtarget"> (optional)</param>
    /// <param name="tempFsFolder"> (optional)</param>
    /// <param name="fileThreshold"> (optional)</param>
    /// <param name="memoryUnit"> (optional)</param>
    /// <param name="useOffHeapMemory"> (optional)</param>
    /// <param name="digestAlgorithm"> (optional)</param>
    /// <param name="monitoringQueueSize"> (optional)</param>
    /// <param name="cleanupDelay"> (optional)</param>
    /// <param name="packagePeriodfilters"> (optional)</param>
    /// <param name="propertyPeriodfilters"> (optional)</param>
    virtual void org_apache_sling_distribution_serialization_impl_distribution_package_bu(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &name, const Pistache::Optional<std::string> &type, const Pistache::Optional<std::string> &formatPeriodtarget, const Pistache::Optional<std::string> &tempFsFolder, const Pistache::Optional<int32_t> &fileThreshold, const Pistache::Optional<std::string> &memoryUnit, const Pistache::Optional<bool> &useOffHeapMemory, const Pistache::Optional<std::string> &digestAlgorithm, const Pistache::Optional<int32_t> &monitoringQueueSize, const Pistache::Optional<int32_t> &cleanupDelay, const Pistache::Optional<std::string> &packagePeriodfilters, const Pistache::Optional<std::string> &propertyPeriodfilters, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="name"> (optional)</param>
    /// <param name="type"> (optional)</param>
    /// <param name="importMode"> (optional)</param>
    /// <param name="aclHandling"> (optional)</param>
    /// <param name="packagePeriodroots"> (optional)</param>
    /// <param name="packagePeriodfilters"> (optional)</param>
    /// <param name="propertyPeriodfilters"> (optional)</param>
    /// <param name="tempFsFolder"> (optional)</param>
    /// <param name="useBinaryReferences"> (optional)</param>
    /// <param name="autoSaveThreshold"> (optional)</param>
    /// <param name="cleanupDelay"> (optional)</param>
    /// <param name="fileThreshold"> (optional)</param>
    /// <param name="mEGABYTES"> (optional)</param>
    /// <param name="useOffHeapMemory"> (optional)</param>
    /// <param name="digestAlgorithm"> (optional)</param>
    /// <param name="monitoringQueueSize"> (optional)</param>
    /// <param name="pathsMapping"> (optional)</param>
    /// <param name="strictImport"> (optional)</param>
    virtual void org_apache_sling_distribution_serialization_impl_vlt_vault_distribution(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &name, const Pistache::Optional<std::string> &type, const Pistache::Optional<std::string> &importMode, const Pistache::Optional<std::string> &aclHandling, const Pistache::Optional<std::string> &packagePeriodroots, const Pistache::Optional<std::string> &packagePeriodfilters, const Pistache::Optional<std::string> &propertyPeriodfilters, const Pistache::Optional<std::string> &tempFsFolder, const Pistache::Optional<bool> &useBinaryReferences, const Pistache::Optional<int32_t> &autoSaveThreshold, const Pistache::Optional<int32_t> &cleanupDelay, const Pistache::Optional<int32_t> &fileThreshold, const Pistache::Optional<std::string> &mEGABYTES, const Pistache::Optional<bool> &useOffHeapMemory, const Pistache::Optional<std::string> &digestAlgorithm, const Pistache::Optional<int32_t> &monitoringQueueSize, const Pistache::Optional<std::string> &pathsMapping, const Pistache::Optional<bool> &strictImport, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="name"> (optional)</param>
    /// <param name="username"> (optional)</param>
    /// <param name="password"> (optional)</param>
    virtual void org_apache_sling_distribution_transport_impl_user_credentials_distributi(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &name, const Pistache::Optional<std::string> &username, const Pistache::Optional<std::string> &password, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="name"> (optional)</param>
    /// <param name="path"> (optional)</param>
    virtual void org_apache_sling_distribution_trigger_impl_distribution_event_distribute(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &name, const Pistache::Optional<std::string> &path, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="name"> (optional)</param>
    /// <param name="path"> (optional)</param>
    /// <param name="ignoredPathsPatterns"> (optional)</param>
    /// <param name="serviceName"> (optional)</param>
    /// <param name="deep"> (optional)</param>
    virtual void org_apache_sling_distribution_trigger_impl_jcr_event_distribution_trigger(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &name, const Pistache::Optional<std::string> &path, const Pistache::Optional<std::string> &ignoredPathsPatterns, const Pistache::Optional<std::string> &serviceName, const Pistache::Optional<bool> &deep, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="name"> (optional)</param>
    /// <param name="path"> (optional)</param>
    /// <param name="serviceName"> (optional)</param>
    /// <param name="nuggetsPath"> (optional)</param>
    virtual void org_apache_sling_distribution_trigger_impl_persisted_jcr_event_distributi(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &name, const Pistache::Optional<std::string> &path, const Pistache::Optional<std::string> &serviceName, const Pistache::Optional<std::string> &nuggetsPath, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="name"> (optional)</param>
    /// <param name="endpoint"> (optional)</param>
    /// <param name="transportSecretProviderPeriodtarget"> (optional)</param>
    virtual void org_apache_sling_distribution_trigger_impl_remote_event_distribution_trig(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &name, const Pistache::Optional<std::string> &endpoint, const Pistache::Optional<std::string> &transportSecretProviderPeriodtarget, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="name"> (optional)</param>
    /// <param name="path"> (optional)</param>
    virtual void org_apache_sling_distribution_trigger_impl_resource_event_distribution_tr(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &name, const Pistache::Optional<std::string> &path, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="name"> (optional)</param>
    /// <param name="path"> (optional)</param>
    /// <param name="seconds"> (optional)</param>
    /// <param name="serviceName"> (optional)</param>
    virtual void org_apache_sling_distribution_trigger_impl_scheduled_distribution_trigge(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &name, const Pistache::Optional<std::string> &path, const Pistache::Optional<std::string> &seconds, const Pistache::Optional<std::string> &serviceName, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="osgiPeriodhttpPeriodwhiteboardPeriodcontextPeriodselect"> (optional)</param>
    /// <param name="osgiPeriodhttpPeriodwhiteboardPeriodlistener"> (optional)</param>
    /// <param name="authPeriodsudoPeriodcookie"> (optional)</param>
    /// <param name="authPeriodsudoPeriodparameter"> (optional)</param>
    /// <param name="authPeriodannonymous"> (optional)</param>
    /// <param name="slingPeriodauthPeriodrequirements"> (optional)</param>
    /// <param name="slingPeriodauthPeriodanonymousPerioduser"> (optional)</param>
    /// <param name="slingPeriodauthPeriodanonymousPeriodpassword"> (optional)</param>
    /// <param name="authPeriodhttp"> (optional)</param>
    /// <param name="authPeriodhttpPeriodrealm"> (optional)</param>
    /// <param name="authPerioduriPeriodsuffix"> (optional)</param>
    virtual void org_apache_sling_engine_impl_auth_sling_authenticator(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &osgiPeriodhttpPeriodwhiteboardPeriodcontextPeriodselect, const Pistache::Optional<std::string> &osgiPeriodhttpPeriodwhiteboardPeriodlistener, const Pistache::Optional<std::string> &authPeriodsudoPeriodcookie, const Pistache::Optional<std::string> &authPeriodsudoPeriodparameter, const Pistache::Optional<bool> &authPeriodannonymous, const Pistache::Optional<std::string> &slingPeriodauthPeriodrequirements, const Pistache::Optional<std::string> &slingPeriodauthPeriodanonymousPerioduser, const Pistache::Optional<std::string> &slingPeriodauthPeriodanonymousPeriodpassword, const Pistache::Optional<std::string> &authPeriodhttp, const Pistache::Optional<std::string> &authPeriodhttpPeriodrealm, const Pistache::Optional<std::string> &authPerioduriPeriodsuffix, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="extensions"> (optional)</param>
    /// <param name="minDurationMs"> (optional)</param>
    /// <param name="maxDurationMs"> (optional)</param>
    /// <param name="compactLogFormat"> (optional)</param>
    virtual void org_apache_sling_engine_impl_debug_request_progress_tracker_log_filter(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &extensions, const Pistache::Optional<int32_t> &minDurationMs, const Pistache::Optional<int32_t> &maxDurationMs, const Pistache::Optional<bool> &compactLogFormat, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="requestPeriodlogPeriodoutput"> (optional)</param>
    /// <param name="requestPeriodlogPeriodoutputtype"> (optional)</param>
    /// <param name="requestPeriodlogPeriodenabled"> (optional)</param>
    /// <param name="accessPeriodlogPeriodoutput"> (optional)</param>
    /// <param name="accessPeriodlogPeriodoutputtype"> (optional)</param>
    /// <param name="accessPeriodlogPeriodenabled"> (optional)</param>
    virtual void org_apache_sling_engine_impl_log_request_logger(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &requestPeriodlogPeriodoutput, const Pistache::Optional<int32_t> &requestPeriodlogPeriodoutputtype, const Pistache::Optional<bool> &requestPeriodlogPeriodenabled, const Pistache::Optional<std::string> &accessPeriodlogPeriodoutput, const Pistache::Optional<int32_t> &accessPeriodlogPeriodoutputtype, const Pistache::Optional<bool> &accessPeriodlogPeriodenabled, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="requestPeriodlogPeriodservicePeriodformat"> (optional)</param>
    /// <param name="requestPeriodlogPeriodservicePeriodoutput"> (optional)</param>
    /// <param name="requestPeriodlogPeriodservicePeriodoutputtype"> (optional)</param>
    /// <param name="requestPeriodlogPeriodservicePeriodonentry"> (optional)</param>
    virtual void org_apache_sling_engine_impl_log_request_logger_service(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &requestPeriodlogPeriodservicePeriodformat, const Pistache::Optional<std::string> &requestPeriodlogPeriodservicePeriodoutput, const Pistache::Optional<int32_t> &requestPeriodlogPeriodservicePeriodoutputtype, const Pistache::Optional<bool> &requestPeriodlogPeriodservicePeriodonentry, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="slingPeriodmaxPeriodcalls"> (optional)</param>
    /// <param name="slingPeriodmaxPeriodinclusions"> (optional)</param>
    /// <param name="slingPeriodtracePeriodallow"> (optional)</param>
    /// <param name="slingPeriodmaxPeriodrecordPeriodrequests"> (optional)</param>
    /// <param name="slingPeriodstorePeriodpatternPeriodrequests"> (optional)</param>
    /// <param name="slingPeriodserverinfo"> (optional)</param>
    /// <param name="slingPeriodadditionalPeriodresponsePeriodheaders"> (optional)</param>
    virtual void org_apache_sling_engine_impl_sling_main_servlet(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<int32_t> &slingPeriodmaxPeriodcalls, const Pistache::Optional<int32_t> &slingPeriodmaxPeriodinclusions, const Pistache::Optional<bool> &slingPeriodtracePeriodallow, const Pistache::Optional<int32_t> &slingPeriodmaxPeriodrecordPeriodrequests, const Pistache::Optional<std::string> &slingPeriodstorePeriodpatternPeriodrequests, const Pistache::Optional<std::string> &slingPeriodserverinfo, const Pistache::Optional<std::string> &slingPeriodadditionalPeriodresponsePeriodheaders, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="slingPerioddefaultPeriodparameterPeriodencoding"> (optional)</param>
    /// <param name="slingPerioddefaultPeriodmaxPeriodparameters"> (optional)</param>
    /// <param name="filePeriodlocation"> (optional)</param>
    /// <param name="filePeriodthreshold"> (optional)</param>
    /// <param name="filePeriodmax"> (optional)</param>
    /// <param name="requestPeriodmax"> (optional)</param>
    /// <param name="slingPerioddefaultPeriodparameterPeriodcheckForAdditionalContainerParameters"> (optional)</param>
    virtual void org_apache_sling_engine_parameters(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &slingPerioddefaultPeriodparameterPeriodencoding, const Pistache::Optional<int32_t> &slingPerioddefaultPeriodmaxPeriodparameters, const Pistache::Optional<std::string> &filePeriodlocation, const Pistache::Optional<int32_t> &filePeriodthreshold, const Pistache::Optional<int32_t> &filePeriodmax, const Pistache::Optional<int32_t> &requestPeriodmax, const Pistache::Optional<bool> &slingPerioddefaultPeriodparameterPeriodcheckForAdditionalContainerParameters, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="minPoolSize"> (optional)</param>
    virtual void org_apache_sling_event_impl_eventing_thread_pool(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<int32_t> &minPoolSize, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="queuePeriodpriority"> (optional)</param>
    /// <param name="queuePeriodretries"> (optional)</param>
    /// <param name="queuePeriodretrydelay"> (optional)</param>
    /// <param name="queuePeriodmaxparallel"> (optional)</param>
    virtual void org_apache_sling_event_impl_jobs_default_job_manager(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &queuePeriodpriority, const Pistache::Optional<int32_t> &queuePeriodretries, const Pistache::Optional<int32_t> &queuePeriodretrydelay, const Pistache::Optional<int32_t> &queuePeriodmaxparallel, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="jobPeriodconsumermanagerPerioddisableDistribution"> (optional)</param>
    /// <param name="startupPerioddelay"> (optional)</param>
    /// <param name="cleanupPeriodperiod"> (optional)</param>
    virtual void org_apache_sling_event_impl_jobs_jcr_persistence_handler(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<bool> &jobPeriodconsumermanagerPerioddisableDistribution, const Pistache::Optional<int32_t> &startupPerioddelay, const Pistache::Optional<int32_t> &cleanupPeriodperiod, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="orgPeriodapachePeriodslingPeriodinstallerPeriodconfigurationPeriodpersist"> (optional)</param>
    /// <param name="jobPeriodconsumermanagerPeriodwhitelist"> (optional)</param>
    /// <param name="jobPeriodconsumermanagerPeriodblacklist"> (optional)</param>
    virtual void org_apache_sling_event_impl_jobs_job_consumer_manager(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<bool> &orgPeriodapachePeriodslingPeriodinstallerPeriodconfigurationPeriodpersist, const Pistache::Optional<std::string> &jobPeriodconsumermanagerPeriodwhitelist, const Pistache::Optional<std::string> &jobPeriodconsumermanagerPeriodblacklist, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="queuePeriodname"> (optional)</param>
    /// <param name="queuePeriodtopics"> (optional)</param>
    /// <param name="queuePeriodtype"> (optional)</param>
    /// <param name="queuePeriodpriority"> (optional)</param>
    /// <param name="queuePeriodretries"> (optional)</param>
    /// <param name="queuePeriodretrydelay"> (optional)</param>
    /// <param name="queuePeriodmaxparallel"> (optional)</param>
    /// <param name="queuePeriodkeepJobs"> (optional)</param>
    /// <param name="queuePeriodpreferRunOnCreationInstance"> (optional)</param>
    /// <param name="queuePeriodthreadPoolSize"> (optional)</param>
    /// <param name="servicePeriodranking"> (optional)</param>
    virtual void org_apache_sling_event_jobs_queue_configuration(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &queuePeriodname, const Pistache::Optional<std::string> &queuePeriodtopics, const Pistache::Optional<std::string> &queuePeriodtype, const Pistache::Optional<std::string> &queuePeriodpriority, const Pistache::Optional<int32_t> &queuePeriodretries, const Pistache::Optional<int32_t> &queuePeriodretrydelay, const Pistache::Optional<double> &queuePeriodmaxparallel, const Pistache::Optional<bool> &queuePeriodkeepJobs, const Pistache::Optional<bool> &queuePeriodpreferRunOnCreationInstance, const Pistache::Optional<int32_t> &queuePeriodthreadPoolSize, const Pistache::Optional<int32_t> &servicePeriodranking, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="users"> (optional)</param>
    /// <param name="groups"> (optional)</param>
    virtual void org_apache_sling_extensions_webconsolesecurityprovider_internal_sling_w(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &users, const Pistache::Optional<std::string> &groups, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="name"> (optional)</param>
    /// <param name="description"> (optional)</param>
    /// <param name="enabled"> (optional)</param>
    virtual void org_apache_sling_featureflags_feature(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &name, const Pistache::Optional<std::string> &description, const Pistache::Optional<bool> &enabled, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="name"> (optional)</param>
    /// <param name="description"> (optional)</param>
    /// <param name="enabled"> (optional)</param>
    virtual void org_apache_sling_featureflags_impl_configured_feature(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &name, const Pistache::Optional<std::string> &description, const Pistache::Optional<bool> &enabled, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="orgPeriodapachePeriodslingPeriodhapiPeriodtoolsPeriodresourcetype"> (optional)</param>
    /// <param name="orgPeriodapachePeriodslingPeriodhapiPeriodtoolsPeriodcollectionresourcetype"> (optional)</param>
    /// <param name="orgPeriodapachePeriodslingPeriodhapiPeriodtoolsPeriodsearchpaths"> (optional)</param>
    /// <param name="orgPeriodapachePeriodslingPeriodhapiPeriodtoolsPeriodexternalurl"> (optional)</param>
    /// <param name="orgPeriodapachePeriodslingPeriodhapiPeriodtoolsPeriodenabled"> (optional)</param>
    virtual void org_apache_sling_hapi_impl_h_api_util_impl(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &orgPeriodapachePeriodslingPeriodhapiPeriodtoolsPeriodresourcetype, const Pistache::Optional<std::string> &orgPeriodapachePeriodslingPeriodhapiPeriodtoolsPeriodcollectionresourcetype, const Pistache::Optional<std::string> &orgPeriodapachePeriodslingPeriodhapiPeriodtoolsPeriodsearchpaths, const Pistache::Optional<std::string> &orgPeriodapachePeriodslingPeriodhapiPeriodtoolsPeriodexternalurl, const Pistache::Optional<bool> &orgPeriodapachePeriodslingPeriodhapiPeriodtoolsPeriodenabled, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="hcPeriodname"> (optional)</param>
    /// <param name="hcPeriodtags"> (optional)</param>
    /// <param name="hcPeriodmbeanPeriodname"> (optional)</param>
    /// <param name="filterPeriodtags"> (optional)</param>
    /// <param name="filterPeriodcombineTagsWithOr"> (optional)</param>
    virtual void org_apache_sling_hc_core_impl_composite_health_check(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &hcPeriodname, const Pistache::Optional<std::string> &hcPeriodtags, const Pistache::Optional<std::string> &hcPeriodmbeanPeriodname, const Pistache::Optional<std::string> &filterPeriodtags, const Pistache::Optional<bool> &filterPeriodcombineTagsWithOr, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="timeoutInMs"> (optional)</param>
    /// <param name="longRunningFutureThresholdForCriticalMs"> (optional)</param>
    /// <param name="resultCacheTtlInMs"> (optional)</param>
    virtual void org_apache_sling_hc_core_impl_executor_health_check_executor_impl(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<int32_t> &timeoutInMs, const Pistache::Optional<int32_t> &longRunningFutureThresholdForCriticalMs, const Pistache::Optional<int32_t> &resultCacheTtlInMs, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="hcPeriodname"> (optional)</param>
    /// <param name="hcPeriodtags"> (optional)</param>
    /// <param name="hcPeriodmbeanPeriodname"> (optional)</param>
    /// <param name="mbeanPeriodname"> (optional)</param>
    /// <param name="attributePeriodname"> (optional)</param>
    /// <param name="attributePeriodvaluePeriodconstraint"> (optional)</param>
    virtual void org_apache_sling_hc_core_impl_jmx_attribute_health_check(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &hcPeriodname, const Pistache::Optional<std::string> &hcPeriodtags, const Pistache::Optional<std::string> &hcPeriodmbeanPeriodname, const Pistache::Optional<std::string> &mbeanPeriodname, const Pistache::Optional<std::string> &attributePeriodname, const Pistache::Optional<std::string> &attributePeriodvaluePeriodconstraint, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="hcPeriodname"> (optional)</param>
    /// <param name="hcPeriodtags"> (optional)</param>
    /// <param name="hcPeriodmbeanPeriodname"> (optional)</param>
    /// <param name="expression"> (optional)</param>
    /// <param name="languagePeriodextension"> (optional)</param>
    virtual void org_apache_sling_hc_core_impl_scriptable_health_check(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &hcPeriodname, const Pistache::Optional<std::string> &hcPeriodtags, const Pistache::Optional<std::string> &hcPeriodmbeanPeriodname, const Pistache::Optional<std::string> &expression, const Pistache::Optional<std::string> &languagePeriodextension, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="servletPath"> (optional)</param>
    /// <param name="disabled"> (optional)</param>
    /// <param name="corsPeriodaccessControlAllowOrigin"> (optional)</param>
    virtual void org_apache_sling_hc_core_impl_servlet_health_check_executor_servlet(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &servletPath, const Pistache::Optional<bool> &disabled, const Pistache::Optional<std::string> &corsPeriodaccessControlAllowOrigin, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="totalWidth"> (optional)</param>
    /// <param name="colWidthName"> (optional)</param>
    /// <param name="colWidthResult"> (optional)</param>
    /// <param name="colWidthTiming"> (optional)</param>
    virtual void org_apache_sling_hc_core_impl_servlet_result_txt_verbose_serializer(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<int32_t> &totalWidth, const Pistache::Optional<int32_t> &colWidthName, const Pistache::Optional<int32_t> &colWidthResult, const Pistache::Optional<int32_t> &colWidthTiming, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="servicePeriodranking"> (optional)</param>
    /// <param name="slingPeriodfilterPeriodscope"> (optional)</param>
    virtual void org_apache_sling_i18n_impl_i18_n_filter(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<int32_t> &servicePeriodranking, const Pistache::Optional<std::string> &slingPeriodfilterPeriodscope, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="localePerioddefault"> (optional)</param>
    /// <param name="preloadPeriodbundles"> (optional)</param>
    /// <param name="invalidationPerioddelay"> (optional)</param>
    virtual void org_apache_sling_i18n_impl_jcr_resource_bundle_provider(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &localePerioddefault, const Pistache::Optional<bool> &preloadPeriodbundles, const Pistache::Optional<int32_t> &invalidationPerioddelay, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="handlerPeriodschemes"> (optional)</param>
    /// <param name="slingPeriodjcrinstallPeriodfolderPeriodnamePeriodregexp"> (optional)</param>
    /// <param name="slingPeriodjcrinstallPeriodfolderPeriodmaxPerioddepth"> (optional)</param>
    /// <param name="slingPeriodjcrinstallPeriodsearchPeriodpath"> (optional)</param>
    /// <param name="slingPeriodjcrinstallPeriodnewPeriodconfigPeriodpath"> (optional)</param>
    /// <param name="slingPeriodjcrinstallPeriodsignalPeriodpath"> (optional)</param>
    /// <param name="slingPeriodjcrinstallPeriodenablePeriodwriteback"> (optional)</param>
    virtual void org_apache_sling_installer_provider_jcr_impl_jcr_installer(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &handlerPeriodschemes, const Pistache::Optional<std::string> &slingPeriodjcrinstallPeriodfolderPeriodnamePeriodregexp, const Pistache::Optional<int32_t> &slingPeriodjcrinstallPeriodfolderPeriodmaxPerioddepth, const Pistache::Optional<std::string> &slingPeriodjcrinstallPeriodsearchPeriodpath, const Pistache::Optional<std::string> &slingPeriodjcrinstallPeriodnewPeriodconfigPeriodpath, const Pistache::Optional<std::string> &slingPeriodjcrinstallPeriodsignalPeriodpath, const Pistache::Optional<bool> &slingPeriodjcrinstallPeriodenablePeriodwriteback, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="whitelistPeriodbypass"> (optional)</param>
    /// <param name="whitelistPeriodbundlesPeriodregexp"> (optional)</param>
    virtual void org_apache_sling_jcr_base_internal_login_admin_whitelist(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<bool> &whitelistPeriodbypass, const Pistache::Optional<std::string> &whitelistPeriodbundlesPeriodregexp, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="whitelistPeriodname"> (optional)</param>
    /// <param name="whitelistPeriodbundles"> (optional)</param>
    virtual void org_apache_sling_jcr_base_internal_login_admin_whitelist_fragment(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &whitelistPeriodname, const Pistache::Optional<std::string> &whitelistPeriodbundles, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="alias"> (optional)</param>
    /// <param name="davPeriodcreateAbsoluteUri"> (optional)</param>
    /// <param name="davPeriodprotectedhandlers"> (optional)</param>
    virtual void org_apache_sling_jcr_davex_impl_servlets_sling_dav_ex_servlet(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &alias, const Pistache::Optional<bool> &davPeriodcreateAbsoluteUri, const Pistache::Optional<std::string> &davPeriodprotectedhandlers, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="javaPeriodnamingPeriodfactoryPeriodinitial"> (optional)</param>
    /// <param name="javaPeriodnamingPeriodproviderPeriodurl"> (optional)</param>
    virtual void org_apache_sling_jcr_jackrabbit_server_jndi_registration_support(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &javaPeriodnamingPeriodfactoryPeriodinitial, const Pistache::Optional<std::string> &javaPeriodnamingPeriodproviderPeriodurl, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="port"> (optional)</param>
    virtual void org_apache_sling_jcr_jackrabbit_server_rmi_registration_support(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<int32_t> &port, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="references"> (optional)</param>
    virtual void org_apache_sling_jcr_repoinit_impl_repository_initializer(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &references, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="references"> (optional)</param>
    /// <param name="scripts"> (optional)</param>
    virtual void org_apache_sling_jcr_repoinit_repository_initializer(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &references, const Pistache::Optional<std::string> &scripts, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="resourcePeriodresolverPeriodsearchpath"> (optional)</param>
    /// <param name="resourcePeriodresolverPeriodmanglenamespaces"> (optional)</param>
    /// <param name="resourcePeriodresolverPeriodallowDirect"> (optional)</param>
    /// <param name="resourcePeriodresolverPeriodrequiredPeriodproviders"> (optional)</param>
    /// <param name="resourcePeriodresolverPeriodrequiredPeriodprovidernames"> (optional)</param>
    /// <param name="resourcePeriodresolverPeriodvirtual"> (optional)</param>
    /// <param name="resourcePeriodresolverPeriodmapping"> (optional)</param>
    /// <param name="resourcePeriodresolverPeriodmapPeriodlocation"> (optional)</param>
    /// <param name="resourcePeriodresolverPeriodmapPeriodobservation"> (optional)</param>
    /// <param name="resourcePeriodresolverPerioddefaultPeriodvanityPeriodredirectPeriodstatus"> (optional)</param>
    /// <param name="resourcePeriodresolverPeriodenablePeriodvanitypath"> (optional)</param>
    /// <param name="resourcePeriodresolverPeriodvanitypathPeriodmaxEntries"> (optional)</param>
    /// <param name="resourcePeriodresolverPeriodvanitypathPeriodmaxEntriesPeriodstartup"> (optional)</param>
    /// <param name="resourcePeriodresolverPeriodvanitypathPeriodbloomfilterPeriodmaxBytes"> (optional)</param>
    /// <param name="resourcePeriodresolverPeriodoptimizePeriodaliasPeriodresolution"> (optional)</param>
    /// <param name="resourcePeriodresolverPeriodvanitypathPeriodwhitelist"> (optional)</param>
    /// <param name="resourcePeriodresolverPeriodvanitypathPeriodblacklist"> (optional)</param>
    /// <param name="resourcePeriodresolverPeriodvanityPeriodprecedence"> (optional)</param>
    /// <param name="resourcePeriodresolverPeriodproviderhandlingPeriodparanoid"> (optional)</param>
    /// <param name="resourcePeriodresolverPeriodlogPeriodclosing"> (optional)</param>
    /// <param name="resourcePeriodresolverPeriodlogPeriodunclosed"> (optional)</param>
    virtual void org_apache_sling_jcr_resource_internal_jcr_resource_resolver_factory_impl(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &resourcePeriodresolverPeriodsearchpath, const Pistache::Optional<bool> &resourcePeriodresolverPeriodmanglenamespaces, const Pistache::Optional<bool> &resourcePeriodresolverPeriodallowDirect, const Pistache::Optional<std::string> &resourcePeriodresolverPeriodrequiredPeriodproviders, const Pistache::Optional<std::string> &resourcePeriodresolverPeriodrequiredPeriodprovidernames, const Pistache::Optional<std::string> &resourcePeriodresolverPeriodvirtual, const Pistache::Optional<std::string> &resourcePeriodresolverPeriodmapping, const Pistache::Optional<std::string> &resourcePeriodresolverPeriodmapPeriodlocation, const Pistache::Optional<std::string> &resourcePeriodresolverPeriodmapPeriodobservation, const Pistache::Optional<int32_t> &resourcePeriodresolverPerioddefaultPeriodvanityPeriodredirectPeriodstatus, const Pistache::Optional<bool> &resourcePeriodresolverPeriodenablePeriodvanitypath, const Pistache::Optional<int32_t> &resourcePeriodresolverPeriodvanitypathPeriodmaxEntries, const Pistache::Optional<bool> &resourcePeriodresolverPeriodvanitypathPeriodmaxEntriesPeriodstartup, const Pistache::Optional<int32_t> &resourcePeriodresolverPeriodvanitypathPeriodbloomfilterPeriodmaxBytes, const Pistache::Optional<bool> &resourcePeriodresolverPeriodoptimizePeriodaliasPeriodresolution, const Pistache::Optional<std::string> &resourcePeriodresolverPeriodvanitypathPeriodwhitelist, const Pistache::Optional<std::string> &resourcePeriodresolverPeriodvanitypathPeriodblacklist, const Pistache::Optional<bool> &resourcePeriodresolverPeriodvanityPeriodprecedence, const Pistache::Optional<bool> &resourcePeriodresolverPeriodproviderhandlingPeriodparanoid, const Pistache::Optional<bool> &resourcePeriodresolverPeriodlogPeriodclosing, const Pistache::Optional<bool> &resourcePeriodresolverPeriodlogPeriodunclosed, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="allowPeriodonlyPeriodsystemPerioduser"> (optional)</param>
    virtual void org_apache_sling_jcr_resource_internal_jcr_system_user_validator(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<bool> &allowPeriodonlyPeriodsystemPerioduser, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="path"> (optional)</param>
    /// <param name="checkpathPeriodprefix"> (optional)</param>
    /// <param name="jcrPath"> (optional)</param>
    virtual void org_apache_sling_jcr_resourcesecurity_impl_resource_access_gate_factory(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &path, const Pistache::Optional<std::string> &checkpathPeriodprefix, const Pistache::Optional<std::string> &jcrPath, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="servicePeriodranking"> (optional)</param>
    /// <param name="typePeriodcollections"> (optional)</param>
    /// <param name="typePeriodnoncollections"> (optional)</param>
    /// <param name="typePeriodcontent"> (optional)</param>
    virtual void org_apache_sling_jcr_webdav_impl_handler_default_handler_service(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<int32_t> &servicePeriodranking, const Pistache::Optional<std::string> &typePeriodcollections, const Pistache::Optional<std::string> &typePeriodnoncollections, const Pistache::Optional<std::string> &typePeriodcontent, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="servicePeriodranking"> (optional)</param>
    virtual void org_apache_sling_jcr_webdav_impl_handler_dir_listing_export_handler_servic(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<int32_t> &servicePeriodranking, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="davPeriodroot"> (optional)</param>
    /// <param name="davPeriodcreateAbsoluteUri"> (optional)</param>
    /// <param name="davPeriodrealm"> (optional)</param>
    /// <param name="collectionPeriodtypes"> (optional)</param>
    /// <param name="filterPeriodprefixes"> (optional)</param>
    /// <param name="filterPeriodtypes"> (optional)</param>
    /// <param name="filterPerioduris"> (optional)</param>
    /// <param name="typePeriodcollections"> (optional)</param>
    /// <param name="typePeriodnoncollections"> (optional)</param>
    /// <param name="typePeriodcontent"> (optional)</param>
    virtual void org_apache_sling_jcr_webdav_impl_servlets_simple_web_dav_servlet(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &davPeriodroot, const Pistache::Optional<bool> &davPeriodcreateAbsoluteUri, const Pistache::Optional<std::string> &davPeriodrealm, const Pistache::Optional<std::string> &collectionPeriodtypes, const Pistache::Optional<std::string> &filterPeriodprefixes, const Pistache::Optional<std::string> &filterPeriodtypes, const Pistache::Optional<std::string> &filterPerioduris, const Pistache::Optional<std::string> &typePeriodcollections, const Pistache::Optional<std::string> &typePeriodnoncollections, const Pistache::Optional<std::string> &typePeriodcontent, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="providerPeriodroots"> (optional)</param>
    virtual void org_apache_sling_jmx_provider_impl_jmx_resource_provider(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &providerPeriodroots, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="osgiPeriodhttpPeriodwhiteboardPeriodlistener"> (optional)</param>
    /// <param name="osgiPeriodhttpPeriodwhiteboardPeriodcontextPeriodselect"> (optional)</param>
    /// <param name="maxPeriodrecursionPerioddepth"> (optional)</param>
    /// <param name="cleanupPeriodjobPeriodperiod"> (optional)</param>
    virtual void org_apache_sling_models_impl_model_adapter_factory(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &osgiPeriodhttpPeriodwhiteboardPeriodlistener, const Pistache::Optional<std::string> &osgiPeriodhttpPeriodwhiteboardPeriodcontextPeriodselect, const Pistache::Optional<int32_t> &maxPeriodrecursionPerioddepth, const Pistache::Optional<int32_t> &cleanupPeriodjobPeriodperiod, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="maxPeriodrecursionPeriodlevels"> (optional)</param>
    virtual void org_apache_sling_models_jacksonexporter_impl_resource_module_provider(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<int32_t> &maxPeriodrecursionPeriodlevels, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="felixPeriodinventoryPeriodprinterPeriodname"> (optional)</param>
    /// <param name="felixPeriodinventoryPeriodprinterPeriodtitle"> (optional)</param>
    /// <param name="path"> (optional)</param>
    virtual void org_apache_sling_resource_inventory_impl_resource_inventory_printer_facto(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &felixPeriodinventoryPeriodprinterPeriodname, const Pistache::Optional<std::string> &felixPeriodinventoryPeriodprinterPeriodtitle, const Pistache::Optional<std::string> &path, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="mergePeriodroot"> (optional)</param>
    /// <param name="mergePeriodreadOnly"> (optional)</param>
    virtual void org_apache_sling_resourcemerger_impl_merged_resource_provider_factory(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &mergePeriodroot, const Pistache::Optional<bool> &mergePeriodreadOnly, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="mergePeriodroot"> (optional)</param>
    /// <param name="mergePeriodreadOnly"> (optional)</param>
    virtual void org_apache_sling_resourcemerger_picker_overriding(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &mergePeriodroot, const Pistache::Optional<bool> &mergePeriodreadOnly, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="orgPeriodapachePeriodslingPeriodscriptingPeriodcachePeriodsize"> (optional)</param>
    /// <param name="orgPeriodapachePeriodslingPeriodscriptingPeriodcachePeriodadditionalExtensions"> (optional)</param>
    virtual void org_apache_sling_scripting_core_impl_script_cache_impl(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<int32_t> &orgPeriodapachePeriodslingPeriodscriptingPeriodcachePeriodsize, const Pistache::Optional<std::string> &orgPeriodapachePeriodslingPeriodscriptingPeriodcachePeriodadditionalExtensions, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="logPeriodstacktracePeriodonclose"> (optional)</param>
    virtual void org_apache_sling_scripting_core_impl_scripting_resource_resolver_provider(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<bool> &logPeriodstacktracePeriodonclose, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="javaPeriodclassdebuginfo"> (optional)</param>
    /// <param name="javaPeriodjavaEncoding"> (optional)</param>
    /// <param name="javaPeriodcompilerSourceVM"> (optional)</param>
    /// <param name="javaPeriodcompilerTargetVM"> (optional)</param>
    virtual void org_apache_sling_scripting_java_impl_java_script_engine_factory(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<bool> &javaPeriodclassdebuginfo, const Pistache::Optional<std::string> &javaPeriodjavaEncoding, const Pistache::Optional<std::string> &javaPeriodcompilerSourceVM, const Pistache::Optional<std::string> &javaPeriodcompilerTargetVM, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="orgPeriodapachePeriodslingPeriodscriptingPeriodjavascriptPeriodrhinoPeriodoptLevel"> (optional)</param>
    virtual void org_apache_sling_scripting_javascript_internal_rhino_java_script_engine_fa(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<int32_t> &orgPeriodapachePeriodslingPeriodscriptingPeriodjavascriptPeriodrhinoPeriodoptLevel, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="jasperPeriodcompilerTargetVM"> (optional)</param>
    /// <param name="jasperPeriodcompilerSourceVM"> (optional)</param>
    /// <param name="jasperPeriodclassdebuginfo"> (optional)</param>
    /// <param name="jasperPeriodenablePooling"> (optional)</param>
    /// <param name="jasperPeriodieClassId"> (optional)</param>
    /// <param name="jasperPeriodgenStringAsCharArray"> (optional)</param>
    /// <param name="jasperPeriodkeepgenerated"> (optional)</param>
    /// <param name="jasperPeriodmappedfile"> (optional)</param>
    /// <param name="jasperPeriodtrimSpaces"> (optional)</param>
    /// <param name="jasperPerioddisplaySourceFragments"> (optional)</param>
    /// <param name="defaultPeriodisPeriodsession"> (optional)</param>
    virtual void org_apache_sling_scripting_jsp_jsp_script_engine_factory(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &jasperPeriodcompilerTargetVM, const Pistache::Optional<std::string> &jasperPeriodcompilerSourceVM, const Pistache::Optional<bool> &jasperPeriodclassdebuginfo, const Pistache::Optional<bool> &jasperPeriodenablePooling, const Pistache::Optional<std::string> &jasperPeriodieClassId, const Pistache::Optional<bool> &jasperPeriodgenStringAsCharArray, const Pistache::Optional<bool> &jasperPeriodkeepgenerated, const Pistache::Optional<bool> &jasperPeriodmappedfile, const Pistache::Optional<bool> &jasperPeriodtrimSpaces, const Pistache::Optional<bool> &jasperPerioddisplaySourceFragments, const Pistache::Optional<bool> &defaultPeriodisPeriodsession, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="orgPeriodapachePeriodslingPeriodscriptingPeriodsightlyPeriodjsPeriodbindings"> (optional)</param>
    virtual void org_apache_sling_scripting_sightly_js_impl_jsapi_sly_bindings_values_prov(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &orgPeriodapachePeriodslingPeriodscriptingPeriodsightlyPeriodjsPeriodbindings, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="slingPeriodcontentPerioddispositionPeriodpaths"> (optional)</param>
    /// <param name="slingPeriodcontentPerioddispositionPeriodexcludedPeriodpaths"> (optional)</param>
    /// <param name="slingPeriodcontentPerioddispositionPeriodallPeriodpaths"> (optional)</param>
    virtual void org_apache_sling_security_impl_content_disposition_filter(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &slingPeriodcontentPerioddispositionPeriodpaths, const Pistache::Optional<std::string> &slingPeriodcontentPerioddispositionPeriodexcludedPeriodpaths, const Pistache::Optional<bool> &slingPeriodcontentPerioddispositionPeriodallPeriodpaths, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="allowPeriodempty"> (optional)</param>
    /// <param name="allowPeriodhosts"> (optional)</param>
    /// <param name="allowPeriodhostsPeriodregexp"> (optional)</param>
    /// <param name="filterPeriodmethods"> (optional)</param>
    /// <param name="excludePeriodagentsPeriodregexp"> (optional)</param>
    virtual void org_apache_sling_security_impl_referrer_filter(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<bool> &allowPeriodempty, const Pistache::Optional<std::string> &allowPeriodhosts, const Pistache::Optional<std::string> &allowPeriodhostsPeriodregexp, const Pistache::Optional<std::string> &filterPeriodmethods, const Pistache::Optional<std::string> &excludePeriodagentsPeriodregexp, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="userPeriodmapping"> (optional)</param>
    /// <param name="userPerioddefault"> (optional)</param>
    /// <param name="userPeriodenablePerioddefaultPeriodmapping"> (optional)</param>
    /// <param name="requirePeriodvalidation"> (optional)</param>
    virtual void org_apache_sling_serviceusermapping_impl_service_user_mapper_impl(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &userPeriodmapping, const Pistache::Optional<std::string> &userPerioddefault, const Pistache::Optional<bool> &userPeriodenablePerioddefaultPeriodmapping, const Pistache::Optional<bool> &requirePeriodvalidation, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="servicePeriodranking"> (optional)</param>
    /// <param name="userPeriodmapping"> (optional)</param>
    virtual void org_apache_sling_serviceusermapping_impl_service_user_mapper_impl_amended(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<int32_t> &servicePeriodranking, const Pistache::Optional<std::string> &userPeriodmapping, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="aliases"> (optional)</param>
    /// <param name="index"> (optional)</param>
    /// <param name="indexPeriodfiles"> (optional)</param>
    /// <param name="enablePeriodhtml"> (optional)</param>
    /// <param name="enablePeriodjson"> (optional)</param>
    /// <param name="enablePeriodtxt"> (optional)</param>
    /// <param name="enablePeriodxml"> (optional)</param>
    /// <param name="jsonPeriodmaximumresults"> (optional)</param>
    /// <param name="ecmaSuport"> (optional)</param>
    virtual void org_apache_sling_servlets_get_default_get_servlet(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &aliases, const Pistache::Optional<bool> &index, const Pistache::Optional<std::string> &indexPeriodfiles, const Pistache::Optional<bool> &enablePeriodhtml, const Pistache::Optional<bool> &enablePeriodjson, const Pistache::Optional<bool> &enablePeriodtxt, const Pistache::Optional<bool> &enablePeriodxml, const Pistache::Optional<int32_t> &jsonPeriodmaximumresults, const Pistache::Optional<bool> &ecmaSuport, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="slingPeriodservletPeriodselectors"> (optional)</param>
    /// <param name="ecmaSuport"> (optional)</param>
    virtual void org_apache_sling_servlets_get_impl_version_version_info_servlet(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &slingPeriodservletPeriodselectors, const Pistache::Optional<bool> &ecmaSuport, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="schedulerPeriodexpression"> (optional)</param>
    /// <param name="schedulerPeriodconcurrent"> (optional)</param>
    /// <param name="chunkPeriodcleanupPeriodage"> (optional)</param>
    virtual void org_apache_sling_servlets_post_impl_helper_chunk_clean_up_task(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &schedulerPeriodexpression, const Pistache::Optional<bool> &schedulerPeriodconcurrent, const Pistache::Optional<int32_t> &chunkPeriodcleanupPeriodage, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="servletPeriodpostPerioddateFormats"> (optional)</param>
    /// <param name="servletPeriodpostPeriodnodeNameHints"> (optional)</param>
    /// <param name="servletPeriodpostPeriodnodeNameMaxLength"> (optional)</param>
    /// <param name="servletPeriodpostPeriodcheckinNewVersionableNodes"> (optional)</param>
    /// <param name="servletPeriodpostPeriodautoCheckout"> (optional)</param>
    /// <param name="servletPeriodpostPeriodautoCheckin"> (optional)</param>
    /// <param name="servletPeriodpostPeriodignorePattern"> (optional)</param>
    virtual void org_apache_sling_servlets_post_impl_sling_post_servlet(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &servletPeriodpostPerioddateFormats, const Pistache::Optional<std::string> &servletPeriodpostPeriodnodeNameHints, const Pistache::Optional<int32_t> &servletPeriodpostPeriodnodeNameMaxLength, const Pistache::Optional<bool> &servletPeriodpostPeriodcheckinNewVersionableNodes, const Pistache::Optional<bool> &servletPeriodpostPeriodautoCheckout, const Pistache::Optional<bool> &servletPeriodpostPeriodautoCheckin, const Pistache::Optional<std::string> &servletPeriodpostPeriodignorePattern, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="servletresolverPeriodservletRoot"> (optional)</param>
    /// <param name="servletresolverPeriodcacheSize"> (optional)</param>
    /// <param name="servletresolverPeriodpaths"> (optional)</param>
    /// <param name="servletresolverPerioddefaultExtensions"> (optional)</param>
    virtual void org_apache_sling_servlets_resolver_sling_servlet_resolver(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &servletresolverPeriodservletRoot, const Pistache::Optional<int32_t> &servletresolverPeriodcacheSize, const Pistache::Optional<std::string> &servletresolverPeriodpaths, const Pistache::Optional<std::string> &servletresolverPerioddefaultExtensions, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="slingPeriodname"> (optional)</param>
    /// <param name="slingPerioddescription"> (optional)</param>
    virtual void org_apache_sling_settings_impl_sling_settings_service_impl(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &slingPeriodname, const Pistache::Optional<std::string> &slingPerioddescription, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="activePeriodbyPerioddefault"> (optional)</param>
    /// <param name="defaultPeriodmessage"> (optional)</param>
    virtual void org_apache_sling_startupfilter_impl_startup_filter_impl(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<bool> &activePeriodbyPerioddefault, const Pistache::Optional<std::string> &defaultPeriodmessage, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="tenantPeriodroot"> (optional)</param>
    /// <param name="tenantPeriodpathPeriodmatcher"> (optional)</param>
    virtual void org_apache_sling_tenant_internal_tenant_provider_impl(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &tenantPeriodroot, const Pistache::Optional<std::string> &tenantPeriodpathPeriodmatcher, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="tracerSets"> (optional)</param>
    /// <param name="enabled"> (optional)</param>
    /// <param name="servletEnabled"> (optional)</param>
    /// <param name="recordingCacheSizeInMB"> (optional)</param>
    /// <param name="recordingCacheDurationInSecs"> (optional)</param>
    /// <param name="recordingCompressionEnabled"> (optional)</param>
    /// <param name="gzipResponse"> (optional)</param>
    virtual void org_apache_sling_tracer_internal_log_tracer(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &tracerSets, const Pistache::Optional<bool> &enabled, const Pistache::Optional<bool> &servletEnabled, const Pistache::Optional<int32_t> &recordingCacheSizeInMB, const Pistache::Optional<int32_t> &recordingCacheDurationInSecs, const Pistache::Optional<bool> &recordingCompressionEnabled, const Pistache::Optional<bool> &gzipResponse, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="post"> (optional)</param>
    /// <param name="apply"> (optional)</param>
    /// <param name="delete"> (optional)</param>
    /// <param name="action"> (optional)</param>
    /// <param name="Dollarlocation"> (optional)</param>
    /// <param name="propertylist"> (optional)</param>
    /// <param name="policyPath"> (optional)</param>
    virtual void org_apache_sling_xss_impl_xss_filter_impl(const Pistache::Optional<bool> &post, const Pistache::Optional<bool> &apply, const Pistache::Optional<bool> &delete, const Pistache::Optional<std::string> &action, const Pistache::Optional<std::string> &Dollarlocation, const Pistache::Optional<std::string> &propertylist, const Pistache::Optional<std::string> &policyPath, Pistache::Http::ResponseWriter &response) = 0;

};

}
}
}
}

#endif /* ConfigmgrApi_H_ */

