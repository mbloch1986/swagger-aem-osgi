/**
* Adobe Experience Manager OSGI config (AEM) API
* Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
*
* OpenAPI spec version: 1.0.0-pre.0
* Contact: opensource@shinesolutions.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/


#include "ComDayCqAnalyticsTestandtargetImplServletsAdminServerServletProperties.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

ComDayCqAnalyticsTestandtargetImplServletsAdminServerServletProperties::ComDayCqAnalyticsTestandtargetImplServletsAdminServerServletProperties()
{
    m_Testandtarget_endpoint_urlIsSet = false;
    
}

ComDayCqAnalyticsTestandtargetImplServletsAdminServerServletProperties::~ComDayCqAnalyticsTestandtargetImplServletsAdminServerServletProperties()
{
}

void ComDayCqAnalyticsTestandtargetImplServletsAdminServerServletProperties::validate()
{
    // TODO: implement validation
}

nlohmann::json ComDayCqAnalyticsTestandtargetImplServletsAdminServerServletProperties::toJson() const
{
    nlohmann::json val = nlohmann::json::object();

    if(m_Testandtarget_endpoint_urlIsSet)
    {
        val["testandtarget.endpoint.url"] = ModelBase::toJson(m_Testandtarget_endpoint_url);
    }
    

    return val;
}

void ComDayCqAnalyticsTestandtargetImplServletsAdminServerServletProperties::fromJson(nlohmann::json& val)
{
    if(val.find("testandtarget.endpoint.url") != val.end())
    {
        if(!val["testandtarget.endpoint.url"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["testandtarget.endpoint.url"]);
            setTestandtargetEndpointUrl( newItem );
        }
        
    }
    
}


ConfigNodePropertyString ComDayCqAnalyticsTestandtargetImplServletsAdminServerServletProperties::getTestandtargetEndpointUrl() const
{
    return m_Testandtarget_endpoint_url;
}
void ComDayCqAnalyticsTestandtargetImplServletsAdminServerServletProperties::setTestandtargetEndpointUrl(ConfigNodePropertyString const& value)
{
    m_Testandtarget_endpoint_url = value;
    m_Testandtarget_endpoint_urlIsSet = true;
}
bool ComDayCqAnalyticsTestandtargetImplServletsAdminServerServletProperties::testandtargetEndpointUrlIsSet() const
{
    return m_Testandtarget_endpoint_urlIsSet;
}
void ComDayCqAnalyticsTestandtargetImplServletsAdminServerServletProperties::unsetTestandtarget_endpoint_url()
{
    m_Testandtarget_endpoint_urlIsSet = false;
}

}
}
}
}

