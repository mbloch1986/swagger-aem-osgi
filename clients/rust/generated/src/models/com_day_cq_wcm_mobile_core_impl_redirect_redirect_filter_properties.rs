/* 
 * Adobe Experience Manager OSGI config (AEM) API
 *
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 * Generated by: https://openapi-generator.tech
 */


#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct ComDayCqWcmMobileCoreImplRedirectRedirectFilterProperties {
  #[serde(rename = "redirect.enabled")]
  redirect_enabled: Option<::models::ConfigNodePropertyBoolean>,
  #[serde(rename = "redirect.stats.enabled")]
  redirect_stats_enabled: Option<::models::ConfigNodePropertyBoolean>,
  #[serde(rename = "redirect.extensions")]
  redirect_extensions: Option<::models::ConfigNodePropertyArray>,
  #[serde(rename = "redirect.paths")]
  redirect_paths: Option<::models::ConfigNodePropertyArray>
}

impl ComDayCqWcmMobileCoreImplRedirectRedirectFilterProperties {
  pub fn new() -> ComDayCqWcmMobileCoreImplRedirectRedirectFilterProperties {
    ComDayCqWcmMobileCoreImplRedirectRedirectFilterProperties {
      redirect_enabled: None,
      redirect_stats_enabled: None,
      redirect_extensions: None,
      redirect_paths: None
    }
  }

  pub fn set_redirect_enabled(&mut self, redirect_enabled: ::models::ConfigNodePropertyBoolean) {
    self.redirect_enabled = Some(redirect_enabled);
  }

  pub fn with_redirect_enabled(mut self, redirect_enabled: ::models::ConfigNodePropertyBoolean) -> ComDayCqWcmMobileCoreImplRedirectRedirectFilterProperties {
    self.redirect_enabled = Some(redirect_enabled);
    self
  }

  pub fn redirect_enabled(&self) -> Option<&::models::ConfigNodePropertyBoolean> {
    self.redirect_enabled.as_ref()
  }

  pub fn reset_redirect_enabled(&mut self) {
    self.redirect_enabled = None;
  }

  pub fn set_redirect_stats_enabled(&mut self, redirect_stats_enabled: ::models::ConfigNodePropertyBoolean) {
    self.redirect_stats_enabled = Some(redirect_stats_enabled);
  }

  pub fn with_redirect_stats_enabled(mut self, redirect_stats_enabled: ::models::ConfigNodePropertyBoolean) -> ComDayCqWcmMobileCoreImplRedirectRedirectFilterProperties {
    self.redirect_stats_enabled = Some(redirect_stats_enabled);
    self
  }

  pub fn redirect_stats_enabled(&self) -> Option<&::models::ConfigNodePropertyBoolean> {
    self.redirect_stats_enabled.as_ref()
  }

  pub fn reset_redirect_stats_enabled(&mut self) {
    self.redirect_stats_enabled = None;
  }

  pub fn set_redirect_extensions(&mut self, redirect_extensions: ::models::ConfigNodePropertyArray) {
    self.redirect_extensions = Some(redirect_extensions);
  }

  pub fn with_redirect_extensions(mut self, redirect_extensions: ::models::ConfigNodePropertyArray) -> ComDayCqWcmMobileCoreImplRedirectRedirectFilterProperties {
    self.redirect_extensions = Some(redirect_extensions);
    self
  }

  pub fn redirect_extensions(&self) -> Option<&::models::ConfigNodePropertyArray> {
    self.redirect_extensions.as_ref()
  }

  pub fn reset_redirect_extensions(&mut self) {
    self.redirect_extensions = None;
  }

  pub fn set_redirect_paths(&mut self, redirect_paths: ::models::ConfigNodePropertyArray) {
    self.redirect_paths = Some(redirect_paths);
  }

  pub fn with_redirect_paths(mut self, redirect_paths: ::models::ConfigNodePropertyArray) -> ComDayCqWcmMobileCoreImplRedirectRedirectFilterProperties {
    self.redirect_paths = Some(redirect_paths);
    self
  }

  pub fn redirect_paths(&self) -> Option<&::models::ConfigNodePropertyArray> {
    self.redirect_paths.as_ref()
  }

  pub fn reset_redirect_paths(&mut self) {
    self.redirect_paths = None;
  }

}



