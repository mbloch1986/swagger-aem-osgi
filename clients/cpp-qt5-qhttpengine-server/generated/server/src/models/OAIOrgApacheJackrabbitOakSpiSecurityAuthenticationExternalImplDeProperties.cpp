/**
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


#include "OAIOrgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplDeProperties.h"

#include "OAIHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace OpenAPI {

OAIOrgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplDeProperties::OAIOrgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplDeProperties(QString json) {
    this->fromJson(json);
}

OAIOrgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplDeProperties::OAIOrgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplDeProperties() {
    this->init();
}

OAIOrgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplDeProperties::~OAIOrgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplDeProperties() {
    
}

void
OAIOrgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplDeProperties::init() {
    m_handler_name_isSet = false;
    m_user_expiration_time_isSet = false;
    m_user_auto_membership_isSet = false;
    m_user_property_mapping_isSet = false;
    m_user_path_prefix_isSet = false;
    m_user_membership_exp_time_isSet = false;
    m_user_membership_nesting_depth_isSet = false;
    m_user_dynamic_membership_isSet = false;
    m_user_disable_missing_isSet = false;
    m_group_expiration_time_isSet = false;
    m_group_auto_membership_isSet = false;
    m_group_property_mapping_isSet = false;
    m_group_path_prefix_isSet = false;
    m_enable_rfc7613_usercase_mapped_profile_isSet = false;
}

void
OAIOrgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplDeProperties::fromJson(QString jsonString) {
    QByteArray array (jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void
OAIOrgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplDeProperties::fromJsonObject(QJsonObject json) {
    ::OpenAPI::fromJsonValue(handler_name, json[QString("handler.name")]);
    
    ::OpenAPI::fromJsonValue(user_expiration_time, json[QString("user.expirationTime")]);
    
    ::OpenAPI::fromJsonValue(user_auto_membership, json[QString("user.autoMembership")]);
    
    ::OpenAPI::fromJsonValue(user_property_mapping, json[QString("user.propertyMapping")]);
    
    ::OpenAPI::fromJsonValue(user_path_prefix, json[QString("user.pathPrefix")]);
    
    ::OpenAPI::fromJsonValue(user_membership_exp_time, json[QString("user.membershipExpTime")]);
    
    ::OpenAPI::fromJsonValue(user_membership_nesting_depth, json[QString("user.membershipNestingDepth")]);
    
    ::OpenAPI::fromJsonValue(user_dynamic_membership, json[QString("user.dynamicMembership")]);
    
    ::OpenAPI::fromJsonValue(user_disable_missing, json[QString("user.disableMissing")]);
    
    ::OpenAPI::fromJsonValue(group_expiration_time, json[QString("group.expirationTime")]);
    
    ::OpenAPI::fromJsonValue(group_auto_membership, json[QString("group.autoMembership")]);
    
    ::OpenAPI::fromJsonValue(group_property_mapping, json[QString("group.propertyMapping")]);
    
    ::OpenAPI::fromJsonValue(group_path_prefix, json[QString("group.pathPrefix")]);
    
    ::OpenAPI::fromJsonValue(enable_rfc7613_usercase_mapped_profile, json[QString("enableRFC7613UsercaseMappedProfile")]);
    
}

QString
OAIOrgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplDeProperties::asJson () const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject
OAIOrgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplDeProperties::asJsonObject() const {
    QJsonObject obj;
	if(handler_name.isSet()){
        obj.insert(QString("handler.name"), ::OpenAPI::toJsonValue(handler_name));
    }
	if(user_expiration_time.isSet()){
        obj.insert(QString("user.expirationTime"), ::OpenAPI::toJsonValue(user_expiration_time));
    }
	if(user_auto_membership.isSet()){
        obj.insert(QString("user.autoMembership"), ::OpenAPI::toJsonValue(user_auto_membership));
    }
	if(user_property_mapping.isSet()){
        obj.insert(QString("user.propertyMapping"), ::OpenAPI::toJsonValue(user_property_mapping));
    }
	if(user_path_prefix.isSet()){
        obj.insert(QString("user.pathPrefix"), ::OpenAPI::toJsonValue(user_path_prefix));
    }
	if(user_membership_exp_time.isSet()){
        obj.insert(QString("user.membershipExpTime"), ::OpenAPI::toJsonValue(user_membership_exp_time));
    }
	if(user_membership_nesting_depth.isSet()){
        obj.insert(QString("user.membershipNestingDepth"), ::OpenAPI::toJsonValue(user_membership_nesting_depth));
    }
	if(user_dynamic_membership.isSet()){
        obj.insert(QString("user.dynamicMembership"), ::OpenAPI::toJsonValue(user_dynamic_membership));
    }
	if(user_disable_missing.isSet()){
        obj.insert(QString("user.disableMissing"), ::OpenAPI::toJsonValue(user_disable_missing));
    }
	if(group_expiration_time.isSet()){
        obj.insert(QString("group.expirationTime"), ::OpenAPI::toJsonValue(group_expiration_time));
    }
	if(group_auto_membership.isSet()){
        obj.insert(QString("group.autoMembership"), ::OpenAPI::toJsonValue(group_auto_membership));
    }
	if(group_property_mapping.isSet()){
        obj.insert(QString("group.propertyMapping"), ::OpenAPI::toJsonValue(group_property_mapping));
    }
	if(group_path_prefix.isSet()){
        obj.insert(QString("group.pathPrefix"), ::OpenAPI::toJsonValue(group_path_prefix));
    }
	if(enable_rfc7613_usercase_mapped_profile.isSet()){
        obj.insert(QString("enableRFC7613UsercaseMappedProfile"), ::OpenAPI::toJsonValue(enable_rfc7613_usercase_mapped_profile));
    }
    return obj;
}

OAIConfigNodePropertyString
OAIOrgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplDeProperties::getHandlerName() const {
    return handler_name;
}
void
OAIOrgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplDeProperties::setHandlerName(const OAIConfigNodePropertyString &handler_name) {
    this->handler_name = handler_name;
    this->m_handler_name_isSet = true;
}

OAIConfigNodePropertyString
OAIOrgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplDeProperties::getUserExpirationTime() const {
    return user_expiration_time;
}
void
OAIOrgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplDeProperties::setUserExpirationTime(const OAIConfigNodePropertyString &user_expiration_time) {
    this->user_expiration_time = user_expiration_time;
    this->m_user_expiration_time_isSet = true;
}

OAIConfigNodePropertyArray
OAIOrgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplDeProperties::getUserAutoMembership() const {
    return user_auto_membership;
}
void
OAIOrgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplDeProperties::setUserAutoMembership(const OAIConfigNodePropertyArray &user_auto_membership) {
    this->user_auto_membership = user_auto_membership;
    this->m_user_auto_membership_isSet = true;
}

OAIConfigNodePropertyArray
OAIOrgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplDeProperties::getUserPropertyMapping() const {
    return user_property_mapping;
}
void
OAIOrgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplDeProperties::setUserPropertyMapping(const OAIConfigNodePropertyArray &user_property_mapping) {
    this->user_property_mapping = user_property_mapping;
    this->m_user_property_mapping_isSet = true;
}

OAIConfigNodePropertyString
OAIOrgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplDeProperties::getUserPathPrefix() const {
    return user_path_prefix;
}
void
OAIOrgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplDeProperties::setUserPathPrefix(const OAIConfigNodePropertyString &user_path_prefix) {
    this->user_path_prefix = user_path_prefix;
    this->m_user_path_prefix_isSet = true;
}

OAIConfigNodePropertyString
OAIOrgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplDeProperties::getUserMembershipExpTime() const {
    return user_membership_exp_time;
}
void
OAIOrgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplDeProperties::setUserMembershipExpTime(const OAIConfigNodePropertyString &user_membership_exp_time) {
    this->user_membership_exp_time = user_membership_exp_time;
    this->m_user_membership_exp_time_isSet = true;
}

OAIConfigNodePropertyInteger
OAIOrgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplDeProperties::getUserMembershipNestingDepth() const {
    return user_membership_nesting_depth;
}
void
OAIOrgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplDeProperties::setUserMembershipNestingDepth(const OAIConfigNodePropertyInteger &user_membership_nesting_depth) {
    this->user_membership_nesting_depth = user_membership_nesting_depth;
    this->m_user_membership_nesting_depth_isSet = true;
}

OAIConfigNodePropertyBoolean
OAIOrgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplDeProperties::getUserDynamicMembership() const {
    return user_dynamic_membership;
}
void
OAIOrgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplDeProperties::setUserDynamicMembership(const OAIConfigNodePropertyBoolean &user_dynamic_membership) {
    this->user_dynamic_membership = user_dynamic_membership;
    this->m_user_dynamic_membership_isSet = true;
}

OAIConfigNodePropertyBoolean
OAIOrgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplDeProperties::getUserDisableMissing() const {
    return user_disable_missing;
}
void
OAIOrgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplDeProperties::setUserDisableMissing(const OAIConfigNodePropertyBoolean &user_disable_missing) {
    this->user_disable_missing = user_disable_missing;
    this->m_user_disable_missing_isSet = true;
}

OAIConfigNodePropertyString
OAIOrgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplDeProperties::getGroupExpirationTime() const {
    return group_expiration_time;
}
void
OAIOrgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplDeProperties::setGroupExpirationTime(const OAIConfigNodePropertyString &group_expiration_time) {
    this->group_expiration_time = group_expiration_time;
    this->m_group_expiration_time_isSet = true;
}

OAIConfigNodePropertyArray
OAIOrgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplDeProperties::getGroupAutoMembership() const {
    return group_auto_membership;
}
void
OAIOrgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplDeProperties::setGroupAutoMembership(const OAIConfigNodePropertyArray &group_auto_membership) {
    this->group_auto_membership = group_auto_membership;
    this->m_group_auto_membership_isSet = true;
}

OAIConfigNodePropertyArray
OAIOrgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplDeProperties::getGroupPropertyMapping() const {
    return group_property_mapping;
}
void
OAIOrgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplDeProperties::setGroupPropertyMapping(const OAIConfigNodePropertyArray &group_property_mapping) {
    this->group_property_mapping = group_property_mapping;
    this->m_group_property_mapping_isSet = true;
}

OAIConfigNodePropertyString
OAIOrgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplDeProperties::getGroupPathPrefix() const {
    return group_path_prefix;
}
void
OAIOrgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplDeProperties::setGroupPathPrefix(const OAIConfigNodePropertyString &group_path_prefix) {
    this->group_path_prefix = group_path_prefix;
    this->m_group_path_prefix_isSet = true;
}

OAIConfigNodePropertyBoolean
OAIOrgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplDeProperties::getEnableRfc7613UsercaseMappedProfile() const {
    return enable_rfc7613_usercase_mapped_profile;
}
void
OAIOrgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplDeProperties::setEnableRfc7613UsercaseMappedProfile(const OAIConfigNodePropertyBoolean &enable_rfc7613_usercase_mapped_profile) {
    this->enable_rfc7613_usercase_mapped_profile = enable_rfc7613_usercase_mapped_profile;
    this->m_enable_rfc7613_usercase_mapped_profile_isSet = true;
}


bool
OAIOrgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplDeProperties::isSet() const {
    bool isObjectUpdated = false;
    do{ 
        if(handler_name.isSet()){ isObjectUpdated = true; break;}
    
        if(user_expiration_time.isSet()){ isObjectUpdated = true; break;}
    
        if(user_auto_membership.isSet()){ isObjectUpdated = true; break;}
    
        if(user_property_mapping.isSet()){ isObjectUpdated = true; break;}
    
        if(user_path_prefix.isSet()){ isObjectUpdated = true; break;}
    
        if(user_membership_exp_time.isSet()){ isObjectUpdated = true; break;}
    
        if(user_membership_nesting_depth.isSet()){ isObjectUpdated = true; break;}
    
        if(user_dynamic_membership.isSet()){ isObjectUpdated = true; break;}
    
        if(user_disable_missing.isSet()){ isObjectUpdated = true; break;}
    
        if(group_expiration_time.isSet()){ isObjectUpdated = true; break;}
    
        if(group_auto_membership.isSet()){ isObjectUpdated = true; break;}
    
        if(group_property_mapping.isSet()){ isObjectUpdated = true; break;}
    
        if(group_path_prefix.isSet()){ isObjectUpdated = true; break;}
    
        if(enable_rfc7613_usercase_mapped_profile.isSet()){ isObjectUpdated = true; break;}
    }while(false);
    return isObjectUpdated;
}

}

