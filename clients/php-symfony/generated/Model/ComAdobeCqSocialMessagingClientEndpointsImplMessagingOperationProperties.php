<?php
/**
 * ComAdobeCqSocialMessagingClientEndpointsImplMessagingOperationProperties
 *
 * PHP version 5
 *
 * @category Class
 * @package  OpenAPI\Server\Model
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * Adobe Experience Manager OSGI config (AEM) API
 *
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 *
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Do not edit the class manually.
 */

namespace OpenAPI\Server\Model;

use Symfony\Component\Validator\Constraints as Assert;
use JMS\Serializer\Annotation\Type;
use JMS\Serializer\Annotation\SerializedName;

/**
 * Class representing the ComAdobeCqSocialMessagingClientEndpointsImplMessagingOperationProperties model.
 *
 * @package OpenAPI\Server\Model
 * @author  OpenAPI Generator team
 */
class ComAdobeCqSocialMessagingClientEndpointsImplMessagingOperationProperties 
{
        /**
     * @var OpenAPI\Server\Model\ConfigNodePropertyArray|null
     * @SerializedName("message.properties")
     * @Assert\Type("OpenAPI\Server\Model\ConfigNodePropertyArray")
     * @Type("OpenAPI\Server\Model\ConfigNodePropertyArray")
     */
    protected $messageProperties;

    /**
     * @var OpenAPI\Server\Model\ConfigNodePropertyInteger|null
     * @SerializedName("messageBoxSizeLimit")
     * @Assert\Type("OpenAPI\Server\Model\ConfigNodePropertyInteger")
     * @Type("OpenAPI\Server\Model\ConfigNodePropertyInteger")
     */
    protected $messageBoxSizeLimit;

    /**
     * @var OpenAPI\Server\Model\ConfigNodePropertyInteger|null
     * @SerializedName("messageCountLimit")
     * @Assert\Type("OpenAPI\Server\Model\ConfigNodePropertyInteger")
     * @Type("OpenAPI\Server\Model\ConfigNodePropertyInteger")
     */
    protected $messageCountLimit;

    /**
     * @var OpenAPI\Server\Model\ConfigNodePropertyBoolean|null
     * @SerializedName("notifyFailure")
     * @Assert\Type("OpenAPI\Server\Model\ConfigNodePropertyBoolean")
     * @Type("OpenAPI\Server\Model\ConfigNodePropertyBoolean")
     */
    protected $notifyFailure;

    /**
     * @var OpenAPI\Server\Model\ConfigNodePropertyString|null
     * @SerializedName("failureMessageFrom")
     * @Assert\Type("OpenAPI\Server\Model\ConfigNodePropertyString")
     * @Type("OpenAPI\Server\Model\ConfigNodePropertyString")
     */
    protected $failureMessageFrom;

    /**
     * @var OpenAPI\Server\Model\ConfigNodePropertyString|null
     * @SerializedName("failureTemplatePath")
     * @Assert\Type("OpenAPI\Server\Model\ConfigNodePropertyString")
     * @Type("OpenAPI\Server\Model\ConfigNodePropertyString")
     */
    protected $failureTemplatePath;

    /**
     * @var OpenAPI\Server\Model\ConfigNodePropertyInteger|null
     * @SerializedName("maxRetries")
     * @Assert\Type("OpenAPI\Server\Model\ConfigNodePropertyInteger")
     * @Type("OpenAPI\Server\Model\ConfigNodePropertyInteger")
     */
    protected $maxRetries;

    /**
     * @var OpenAPI\Server\Model\ConfigNodePropertyInteger|null
     * @SerializedName("minWaitBetweenRetries")
     * @Assert\Type("OpenAPI\Server\Model\ConfigNodePropertyInteger")
     * @Type("OpenAPI\Server\Model\ConfigNodePropertyInteger")
     */
    protected $minWaitBetweenRetries;

    /**
     * @var OpenAPI\Server\Model\ConfigNodePropertyInteger|null
     * @SerializedName("countUpdatePoolSize")
     * @Assert\Type("OpenAPI\Server\Model\ConfigNodePropertyInteger")
     * @Type("OpenAPI\Server\Model\ConfigNodePropertyInteger")
     */
    protected $countUpdatePoolSize;

    /**
     * @var OpenAPI\Server\Model\ConfigNodePropertyString|null
     * @SerializedName("inbox.path")
     * @Assert\Type("OpenAPI\Server\Model\ConfigNodePropertyString")
     * @Type("OpenAPI\Server\Model\ConfigNodePropertyString")
     */
    protected $inboxPath;

    /**
     * @var OpenAPI\Server\Model\ConfigNodePropertyString|null
     * @SerializedName("sentitems.path")
     * @Assert\Type("OpenAPI\Server\Model\ConfigNodePropertyString")
     * @Type("OpenAPI\Server\Model\ConfigNodePropertyString")
     */
    protected $sentitemsPath;

    /**
     * @var OpenAPI\Server\Model\ConfigNodePropertyBoolean|null
     * @SerializedName("supportAttachments")
     * @Assert\Type("OpenAPI\Server\Model\ConfigNodePropertyBoolean")
     * @Type("OpenAPI\Server\Model\ConfigNodePropertyBoolean")
     */
    protected $supportAttachments;

    /**
     * @var OpenAPI\Server\Model\ConfigNodePropertyBoolean|null
     * @SerializedName("supportGroupMessaging")
     * @Assert\Type("OpenAPI\Server\Model\ConfigNodePropertyBoolean")
     * @Type("OpenAPI\Server\Model\ConfigNodePropertyBoolean")
     */
    protected $supportGroupMessaging;

    /**
     * @var OpenAPI\Server\Model\ConfigNodePropertyInteger|null
     * @SerializedName("maxTotalRecipients")
     * @Assert\Type("OpenAPI\Server\Model\ConfigNodePropertyInteger")
     * @Type("OpenAPI\Server\Model\ConfigNodePropertyInteger")
     */
    protected $maxTotalRecipients;

    /**
     * @var OpenAPI\Server\Model\ConfigNodePropertyInteger|null
     * @SerializedName("batchSize")
     * @Assert\Type("OpenAPI\Server\Model\ConfigNodePropertyInteger")
     * @Type("OpenAPI\Server\Model\ConfigNodePropertyInteger")
     */
    protected $batchSize;

    /**
     * @var OpenAPI\Server\Model\ConfigNodePropertyInteger|null
     * @SerializedName("maxTotalAttachmentSize")
     * @Assert\Type("OpenAPI\Server\Model\ConfigNodePropertyInteger")
     * @Type("OpenAPI\Server\Model\ConfigNodePropertyInteger")
     */
    protected $maxTotalAttachmentSize;

    /**
     * @var OpenAPI\Server\Model\ConfigNodePropertyArray|null
     * @SerializedName("attachmentTypeBlacklist")
     * @Assert\Type("OpenAPI\Server\Model\ConfigNodePropertyArray")
     * @Type("OpenAPI\Server\Model\ConfigNodePropertyArray")
     */
    protected $attachmentTypeBlacklist;

    /**
     * @var OpenAPI\Server\Model\ConfigNodePropertyArray|null
     * @SerializedName("allowedAttachmentTypes")
     * @Assert\Type("OpenAPI\Server\Model\ConfigNodePropertyArray")
     * @Type("OpenAPI\Server\Model\ConfigNodePropertyArray")
     */
    protected $allowedAttachmentTypes;

    /**
     * @var OpenAPI\Server\Model\ConfigNodePropertyString|null
     * @SerializedName("serviceSelector")
     * @Assert\Type("OpenAPI\Server\Model\ConfigNodePropertyString")
     * @Type("OpenAPI\Server\Model\ConfigNodePropertyString")
     */
    protected $serviceSelector;

    /**
     * @var OpenAPI\Server\Model\ConfigNodePropertyArray|null
     * @SerializedName("fieldWhitelist")
     * @Assert\Type("OpenAPI\Server\Model\ConfigNodePropertyArray")
     * @Type("OpenAPI\Server\Model\ConfigNodePropertyArray")
     */
    protected $fieldWhitelist;

    /**
     * Constructor
     * @param mixed[] $data Associated array of property values initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->messageProperties = isset($data['messageProperties']) ? $data['messageProperties'] : null;
        $this->messageBoxSizeLimit = isset($data['messageBoxSizeLimit']) ? $data['messageBoxSizeLimit'] : null;
        $this->messageCountLimit = isset($data['messageCountLimit']) ? $data['messageCountLimit'] : null;
        $this->notifyFailure = isset($data['notifyFailure']) ? $data['notifyFailure'] : null;
        $this->failureMessageFrom = isset($data['failureMessageFrom']) ? $data['failureMessageFrom'] : null;
        $this->failureTemplatePath = isset($data['failureTemplatePath']) ? $data['failureTemplatePath'] : null;
        $this->maxRetries = isset($data['maxRetries']) ? $data['maxRetries'] : null;
        $this->minWaitBetweenRetries = isset($data['minWaitBetweenRetries']) ? $data['minWaitBetweenRetries'] : null;
        $this->countUpdatePoolSize = isset($data['countUpdatePoolSize']) ? $data['countUpdatePoolSize'] : null;
        $this->inboxPath = isset($data['inboxPath']) ? $data['inboxPath'] : null;
        $this->sentitemsPath = isset($data['sentitemsPath']) ? $data['sentitemsPath'] : null;
        $this->supportAttachments = isset($data['supportAttachments']) ? $data['supportAttachments'] : null;
        $this->supportGroupMessaging = isset($data['supportGroupMessaging']) ? $data['supportGroupMessaging'] : null;
        $this->maxTotalRecipients = isset($data['maxTotalRecipients']) ? $data['maxTotalRecipients'] : null;
        $this->batchSize = isset($data['batchSize']) ? $data['batchSize'] : null;
        $this->maxTotalAttachmentSize = isset($data['maxTotalAttachmentSize']) ? $data['maxTotalAttachmentSize'] : null;
        $this->attachmentTypeBlacklist = isset($data['attachmentTypeBlacklist']) ? $data['attachmentTypeBlacklist'] : null;
        $this->allowedAttachmentTypes = isset($data['allowedAttachmentTypes']) ? $data['allowedAttachmentTypes'] : null;
        $this->serviceSelector = isset($data['serviceSelector']) ? $data['serviceSelector'] : null;
        $this->fieldWhitelist = isset($data['fieldWhitelist']) ? $data['fieldWhitelist'] : null;
    }

    /**
     * Gets messageProperties.
     *
     * @return OpenAPI\Server\Model\ConfigNodePropertyArray|null
     */
    public function getMessageProperties()
    {
        return $this->messageProperties;
    }

    /**
     * Sets messageProperties.
     *
     * @param OpenAPI\Server\Model\ConfigNodePropertyArray|null $messageProperties
     *
     * @return $this
     */
    public function setMessageProperties(ConfigNodePropertyArray $messageProperties = null)
    {
        $this->messageProperties = $messageProperties;

        return $this;
    }

    /**
     * Gets messageBoxSizeLimit.
     *
     * @return OpenAPI\Server\Model\ConfigNodePropertyInteger|null
     */
    public function getMessageBoxSizeLimit()
    {
        return $this->messageBoxSizeLimit;
    }

    /**
     * Sets messageBoxSizeLimit.
     *
     * @param OpenAPI\Server\Model\ConfigNodePropertyInteger|null $messageBoxSizeLimit
     *
     * @return $this
     */
    public function setMessageBoxSizeLimit(ConfigNodePropertyInteger $messageBoxSizeLimit = null)
    {
        $this->messageBoxSizeLimit = $messageBoxSizeLimit;

        return $this;
    }

    /**
     * Gets messageCountLimit.
     *
     * @return OpenAPI\Server\Model\ConfigNodePropertyInteger|null
     */
    public function getMessageCountLimit()
    {
        return $this->messageCountLimit;
    }

    /**
     * Sets messageCountLimit.
     *
     * @param OpenAPI\Server\Model\ConfigNodePropertyInteger|null $messageCountLimit
     *
     * @return $this
     */
    public function setMessageCountLimit(ConfigNodePropertyInteger $messageCountLimit = null)
    {
        $this->messageCountLimit = $messageCountLimit;

        return $this;
    }

    /**
     * Gets notifyFailure.
     *
     * @return OpenAPI\Server\Model\ConfigNodePropertyBoolean|null
     */
    public function getNotifyFailure()
    {
        return $this->notifyFailure;
    }

    /**
     * Sets notifyFailure.
     *
     * @param OpenAPI\Server\Model\ConfigNodePropertyBoolean|null $notifyFailure
     *
     * @return $this
     */
    public function setNotifyFailure(ConfigNodePropertyBoolean $notifyFailure = null)
    {
        $this->notifyFailure = $notifyFailure;

        return $this;
    }

    /**
     * Gets failureMessageFrom.
     *
     * @return OpenAPI\Server\Model\ConfigNodePropertyString|null
     */
    public function getFailureMessageFrom()
    {
        return $this->failureMessageFrom;
    }

    /**
     * Sets failureMessageFrom.
     *
     * @param OpenAPI\Server\Model\ConfigNodePropertyString|null $failureMessageFrom
     *
     * @return $this
     */
    public function setFailureMessageFrom(ConfigNodePropertyString $failureMessageFrom = null)
    {
        $this->failureMessageFrom = $failureMessageFrom;

        return $this;
    }

    /**
     * Gets failureTemplatePath.
     *
     * @return OpenAPI\Server\Model\ConfigNodePropertyString|null
     */
    public function getFailureTemplatePath()
    {
        return $this->failureTemplatePath;
    }

    /**
     * Sets failureTemplatePath.
     *
     * @param OpenAPI\Server\Model\ConfigNodePropertyString|null $failureTemplatePath
     *
     * @return $this
     */
    public function setFailureTemplatePath(ConfigNodePropertyString $failureTemplatePath = null)
    {
        $this->failureTemplatePath = $failureTemplatePath;

        return $this;
    }

    /**
     * Gets maxRetries.
     *
     * @return OpenAPI\Server\Model\ConfigNodePropertyInteger|null
     */
    public function getMaxRetries()
    {
        return $this->maxRetries;
    }

    /**
     * Sets maxRetries.
     *
     * @param OpenAPI\Server\Model\ConfigNodePropertyInteger|null $maxRetries
     *
     * @return $this
     */
    public function setMaxRetries(ConfigNodePropertyInteger $maxRetries = null)
    {
        $this->maxRetries = $maxRetries;

        return $this;
    }

    /**
     * Gets minWaitBetweenRetries.
     *
     * @return OpenAPI\Server\Model\ConfigNodePropertyInteger|null
     */
    public function getMinWaitBetweenRetries()
    {
        return $this->minWaitBetweenRetries;
    }

    /**
     * Sets minWaitBetweenRetries.
     *
     * @param OpenAPI\Server\Model\ConfigNodePropertyInteger|null $minWaitBetweenRetries
     *
     * @return $this
     */
    public function setMinWaitBetweenRetries(ConfigNodePropertyInteger $minWaitBetweenRetries = null)
    {
        $this->minWaitBetweenRetries = $minWaitBetweenRetries;

        return $this;
    }

    /**
     * Gets countUpdatePoolSize.
     *
     * @return OpenAPI\Server\Model\ConfigNodePropertyInteger|null
     */
    public function getCountUpdatePoolSize()
    {
        return $this->countUpdatePoolSize;
    }

    /**
     * Sets countUpdatePoolSize.
     *
     * @param OpenAPI\Server\Model\ConfigNodePropertyInteger|null $countUpdatePoolSize
     *
     * @return $this
     */
    public function setCountUpdatePoolSize(ConfigNodePropertyInteger $countUpdatePoolSize = null)
    {
        $this->countUpdatePoolSize = $countUpdatePoolSize;

        return $this;
    }

    /**
     * Gets inboxPath.
     *
     * @return OpenAPI\Server\Model\ConfigNodePropertyString|null
     */
    public function getInboxPath()
    {
        return $this->inboxPath;
    }

    /**
     * Sets inboxPath.
     *
     * @param OpenAPI\Server\Model\ConfigNodePropertyString|null $inboxPath
     *
     * @return $this
     */
    public function setInboxPath(ConfigNodePropertyString $inboxPath = null)
    {
        $this->inboxPath = $inboxPath;

        return $this;
    }

    /**
     * Gets sentitemsPath.
     *
     * @return OpenAPI\Server\Model\ConfigNodePropertyString|null
     */
    public function getSentitemsPath()
    {
        return $this->sentitemsPath;
    }

    /**
     * Sets sentitemsPath.
     *
     * @param OpenAPI\Server\Model\ConfigNodePropertyString|null $sentitemsPath
     *
     * @return $this
     */
    public function setSentitemsPath(ConfigNodePropertyString $sentitemsPath = null)
    {
        $this->sentitemsPath = $sentitemsPath;

        return $this;
    }

    /**
     * Gets supportAttachments.
     *
     * @return OpenAPI\Server\Model\ConfigNodePropertyBoolean|null
     */
    public function getSupportAttachments()
    {
        return $this->supportAttachments;
    }

    /**
     * Sets supportAttachments.
     *
     * @param OpenAPI\Server\Model\ConfigNodePropertyBoolean|null $supportAttachments
     *
     * @return $this
     */
    public function setSupportAttachments(ConfigNodePropertyBoolean $supportAttachments = null)
    {
        $this->supportAttachments = $supportAttachments;

        return $this;
    }

    /**
     * Gets supportGroupMessaging.
     *
     * @return OpenAPI\Server\Model\ConfigNodePropertyBoolean|null
     */
    public function getSupportGroupMessaging()
    {
        return $this->supportGroupMessaging;
    }

    /**
     * Sets supportGroupMessaging.
     *
     * @param OpenAPI\Server\Model\ConfigNodePropertyBoolean|null $supportGroupMessaging
     *
     * @return $this
     */
    public function setSupportGroupMessaging(ConfigNodePropertyBoolean $supportGroupMessaging = null)
    {
        $this->supportGroupMessaging = $supportGroupMessaging;

        return $this;
    }

    /**
     * Gets maxTotalRecipients.
     *
     * @return OpenAPI\Server\Model\ConfigNodePropertyInteger|null
     */
    public function getMaxTotalRecipients()
    {
        return $this->maxTotalRecipients;
    }

    /**
     * Sets maxTotalRecipients.
     *
     * @param OpenAPI\Server\Model\ConfigNodePropertyInteger|null $maxTotalRecipients
     *
     * @return $this
     */
    public function setMaxTotalRecipients(ConfigNodePropertyInteger $maxTotalRecipients = null)
    {
        $this->maxTotalRecipients = $maxTotalRecipients;

        return $this;
    }

    /**
     * Gets batchSize.
     *
     * @return OpenAPI\Server\Model\ConfigNodePropertyInteger|null
     */
    public function getBatchSize()
    {
        return $this->batchSize;
    }

    /**
     * Sets batchSize.
     *
     * @param OpenAPI\Server\Model\ConfigNodePropertyInteger|null $batchSize
     *
     * @return $this
     */
    public function setBatchSize(ConfigNodePropertyInteger $batchSize = null)
    {
        $this->batchSize = $batchSize;

        return $this;
    }

    /**
     * Gets maxTotalAttachmentSize.
     *
     * @return OpenAPI\Server\Model\ConfigNodePropertyInteger|null
     */
    public function getMaxTotalAttachmentSize()
    {
        return $this->maxTotalAttachmentSize;
    }

    /**
     * Sets maxTotalAttachmentSize.
     *
     * @param OpenAPI\Server\Model\ConfigNodePropertyInteger|null $maxTotalAttachmentSize
     *
     * @return $this
     */
    public function setMaxTotalAttachmentSize(ConfigNodePropertyInteger $maxTotalAttachmentSize = null)
    {
        $this->maxTotalAttachmentSize = $maxTotalAttachmentSize;

        return $this;
    }

    /**
     * Gets attachmentTypeBlacklist.
     *
     * @return OpenAPI\Server\Model\ConfigNodePropertyArray|null
     */
    public function getAttachmentTypeBlacklist()
    {
        return $this->attachmentTypeBlacklist;
    }

    /**
     * Sets attachmentTypeBlacklist.
     *
     * @param OpenAPI\Server\Model\ConfigNodePropertyArray|null $attachmentTypeBlacklist
     *
     * @return $this
     */
    public function setAttachmentTypeBlacklist(ConfigNodePropertyArray $attachmentTypeBlacklist = null)
    {
        $this->attachmentTypeBlacklist = $attachmentTypeBlacklist;

        return $this;
    }

    /**
     * Gets allowedAttachmentTypes.
     *
     * @return OpenAPI\Server\Model\ConfigNodePropertyArray|null
     */
    public function getAllowedAttachmentTypes()
    {
        return $this->allowedAttachmentTypes;
    }

    /**
     * Sets allowedAttachmentTypes.
     *
     * @param OpenAPI\Server\Model\ConfigNodePropertyArray|null $allowedAttachmentTypes
     *
     * @return $this
     */
    public function setAllowedAttachmentTypes(ConfigNodePropertyArray $allowedAttachmentTypes = null)
    {
        $this->allowedAttachmentTypes = $allowedAttachmentTypes;

        return $this;
    }

    /**
     * Gets serviceSelector.
     *
     * @return OpenAPI\Server\Model\ConfigNodePropertyString|null
     */
    public function getServiceSelector()
    {
        return $this->serviceSelector;
    }

    /**
     * Sets serviceSelector.
     *
     * @param OpenAPI\Server\Model\ConfigNodePropertyString|null $serviceSelector
     *
     * @return $this
     */
    public function setServiceSelector(ConfigNodePropertyString $serviceSelector = null)
    {
        $this->serviceSelector = $serviceSelector;

        return $this;
    }

    /**
     * Gets fieldWhitelist.
     *
     * @return OpenAPI\Server\Model\ConfigNodePropertyArray|null
     */
    public function getFieldWhitelist()
    {
        return $this->fieldWhitelist;
    }

    /**
     * Sets fieldWhitelist.
     *
     * @param OpenAPI\Server\Model\ConfigNodePropertyArray|null $fieldWhitelist
     *
     * @return $this
     */
    public function setFieldWhitelist(ConfigNodePropertyArray $fieldWhitelist = null)
    {
        $this->fieldWhitelist = $fieldWhitelist;

        return $this;
    }
}


