/**
* Adobe Experience Manager OSGI config (AEM) API
* Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
*
* OpenAPI spec version: 1.0.0-pre.0
* Contact: opensource@shinesolutions.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/


#include "ComDayCqDamCoreImplProcessTextExtractionProcessProperties.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

ComDayCqDamCoreImplProcessTextExtractionProcessProperties::ComDayCqDamCoreImplProcessTextExtractionProcessProperties()
{
    m_MimeTypesIsSet = false;
    m_MaxExtractIsSet = false;
    
}

ComDayCqDamCoreImplProcessTextExtractionProcessProperties::~ComDayCqDamCoreImplProcessTextExtractionProcessProperties()
{
}

void ComDayCqDamCoreImplProcessTextExtractionProcessProperties::validate()
{
    // TODO: implement validation
}

nlohmann::json ComDayCqDamCoreImplProcessTextExtractionProcessProperties::toJson() const
{
    nlohmann::json val = nlohmann::json::object();

    if(m_MimeTypesIsSet)
    {
        val["mimeTypes"] = ModelBase::toJson(m_MimeTypes);
    }
    if(m_MaxExtractIsSet)
    {
        val["maxExtract"] = ModelBase::toJson(m_MaxExtract);
    }
    

    return val;
}

void ComDayCqDamCoreImplProcessTextExtractionProcessProperties::fromJson(nlohmann::json& val)
{
    if(val.find("mimeTypes") != val.end())
    {
        if(!val["mimeTypes"].is_null())
        {
            ConfigNodePropertyArray newItem;
            newItem.fromJson(val["mimeTypes"]);
            setMimeTypes( newItem );
        }
        
    }
    if(val.find("maxExtract") != val.end())
    {
        if(!val["maxExtract"].is_null())
        {
            ConfigNodePropertyInteger newItem;
            newItem.fromJson(val["maxExtract"]);
            setMaxExtract( newItem );
        }
        
    }
    
}


ConfigNodePropertyArray ComDayCqDamCoreImplProcessTextExtractionProcessProperties::getMimeTypes() const
{
    return m_MimeTypes;
}
void ComDayCqDamCoreImplProcessTextExtractionProcessProperties::setMimeTypes(ConfigNodePropertyArray const& value)
{
    m_MimeTypes = value;
    m_MimeTypesIsSet = true;
}
bool ComDayCqDamCoreImplProcessTextExtractionProcessProperties::mimeTypesIsSet() const
{
    return m_MimeTypesIsSet;
}
void ComDayCqDamCoreImplProcessTextExtractionProcessProperties::unsetMimeTypes()
{
    m_MimeTypesIsSet = false;
}
ConfigNodePropertyInteger ComDayCqDamCoreImplProcessTextExtractionProcessProperties::getMaxExtract() const
{
    return m_MaxExtract;
}
void ComDayCqDamCoreImplProcessTextExtractionProcessProperties::setMaxExtract(ConfigNodePropertyInteger const& value)
{
    m_MaxExtract = value;
    m_MaxExtractIsSet = true;
}
bool ComDayCqDamCoreImplProcessTextExtractionProcessProperties::maxExtractIsSet() const
{
    return m_MaxExtractIsSet;
}
void ComDayCqDamCoreImplProcessTextExtractionProcessProperties::unsetMaxExtract()
{
    m_MaxExtractIsSet = false;
}

}
}
}
}

