/**
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


#include "OAIComAdobeCqCommercePimImplCataloggeneratorCatalogGeneratorImplProperties.h"

#include "OAIHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace OpenAPI {

OAIComAdobeCqCommercePimImplCataloggeneratorCatalogGeneratorImplProperties::OAIComAdobeCqCommercePimImplCataloggeneratorCatalogGeneratorImplProperties(QString json) {
    init();
    this->fromJson(json);
}

OAIComAdobeCqCommercePimImplCataloggeneratorCatalogGeneratorImplProperties::OAIComAdobeCqCommercePimImplCataloggeneratorCatalogGeneratorImplProperties() {
    init();
}

OAIComAdobeCqCommercePimImplCataloggeneratorCatalogGeneratorImplProperties::~OAIComAdobeCqCommercePimImplCataloggeneratorCatalogGeneratorImplProperties() {
    this->cleanup();
}

void
OAIComAdobeCqCommercePimImplCataloggeneratorCatalogGeneratorImplProperties::init() {
    cq_commerce_cataloggenerator_bucketsize = new OAIConfigNodePropertyInteger();
    m_cq_commerce_cataloggenerator_bucketsize_isSet = false;
    cq_commerce_cataloggenerator_bucketname = new OAIConfigNodePropertyString();
    m_cq_commerce_cataloggenerator_bucketname_isSet = false;
    cq_commerce_cataloggenerator_excludedtemplateproperties = new OAIConfigNodePropertyArray();
    m_cq_commerce_cataloggenerator_excludedtemplateproperties_isSet = false;
}

void
OAIComAdobeCqCommercePimImplCataloggeneratorCatalogGeneratorImplProperties::cleanup() {
    if(cq_commerce_cataloggenerator_bucketsize != nullptr) { 
        delete cq_commerce_cataloggenerator_bucketsize;
    }
    if(cq_commerce_cataloggenerator_bucketname != nullptr) { 
        delete cq_commerce_cataloggenerator_bucketname;
    }
    if(cq_commerce_cataloggenerator_excludedtemplateproperties != nullptr) { 
        delete cq_commerce_cataloggenerator_excludedtemplateproperties;
    }
}

OAIComAdobeCqCommercePimImplCataloggeneratorCatalogGeneratorImplProperties*
OAIComAdobeCqCommercePimImplCataloggeneratorCatalogGeneratorImplProperties::fromJson(QString json) {
    QByteArray array (json.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
    return this;
}

void
OAIComAdobeCqCommercePimImplCataloggeneratorCatalogGeneratorImplProperties::fromJsonObject(QJsonObject pJson) {
    ::OpenAPI::setValue(&cq_commerce_cataloggenerator_bucketsize, pJson["cq.commerce.cataloggenerator.bucketsize"], "OAIConfigNodePropertyInteger", "OAIConfigNodePropertyInteger");
    
    ::OpenAPI::setValue(&cq_commerce_cataloggenerator_bucketname, pJson["cq.commerce.cataloggenerator.bucketname"], "OAIConfigNodePropertyString", "OAIConfigNodePropertyString");
    
    ::OpenAPI::setValue(&cq_commerce_cataloggenerator_excludedtemplateproperties, pJson["cq.commerce.cataloggenerator.excludedtemplateproperties"], "OAIConfigNodePropertyArray", "OAIConfigNodePropertyArray");
    
}

QString
OAIComAdobeCqCommercePimImplCataloggeneratorCatalogGeneratorImplProperties::asJson ()
{
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject
OAIComAdobeCqCommercePimImplCataloggeneratorCatalogGeneratorImplProperties::asJsonObject() {
    QJsonObject obj;
    if((cq_commerce_cataloggenerator_bucketsize != nullptr) && (cq_commerce_cataloggenerator_bucketsize->isSet())){
        toJsonValue(QString("cq.commerce.cataloggenerator.bucketsize"), cq_commerce_cataloggenerator_bucketsize, obj, QString("OAIConfigNodePropertyInteger"));
    }
    if((cq_commerce_cataloggenerator_bucketname != nullptr) && (cq_commerce_cataloggenerator_bucketname->isSet())){
        toJsonValue(QString("cq.commerce.cataloggenerator.bucketname"), cq_commerce_cataloggenerator_bucketname, obj, QString("OAIConfigNodePropertyString"));
    }
    if((cq_commerce_cataloggenerator_excludedtemplateproperties != nullptr) && (cq_commerce_cataloggenerator_excludedtemplateproperties->isSet())){
        toJsonValue(QString("cq.commerce.cataloggenerator.excludedtemplateproperties"), cq_commerce_cataloggenerator_excludedtemplateproperties, obj, QString("OAIConfigNodePropertyArray"));
    }

    return obj;
}

OAIConfigNodePropertyInteger*
OAIComAdobeCqCommercePimImplCataloggeneratorCatalogGeneratorImplProperties::getCqCommerceCataloggeneratorBucketsize() {
    return cq_commerce_cataloggenerator_bucketsize;
}
void
OAIComAdobeCqCommercePimImplCataloggeneratorCatalogGeneratorImplProperties::setCqCommerceCataloggeneratorBucketsize(OAIConfigNodePropertyInteger* cq_commerce_cataloggenerator_bucketsize) {
    this->cq_commerce_cataloggenerator_bucketsize = cq_commerce_cataloggenerator_bucketsize;
    this->m_cq_commerce_cataloggenerator_bucketsize_isSet = true;
}

OAIConfigNodePropertyString*
OAIComAdobeCqCommercePimImplCataloggeneratorCatalogGeneratorImplProperties::getCqCommerceCataloggeneratorBucketname() {
    return cq_commerce_cataloggenerator_bucketname;
}
void
OAIComAdobeCqCommercePimImplCataloggeneratorCatalogGeneratorImplProperties::setCqCommerceCataloggeneratorBucketname(OAIConfigNodePropertyString* cq_commerce_cataloggenerator_bucketname) {
    this->cq_commerce_cataloggenerator_bucketname = cq_commerce_cataloggenerator_bucketname;
    this->m_cq_commerce_cataloggenerator_bucketname_isSet = true;
}

OAIConfigNodePropertyArray*
OAIComAdobeCqCommercePimImplCataloggeneratorCatalogGeneratorImplProperties::getCqCommerceCataloggeneratorExcludedtemplateproperties() {
    return cq_commerce_cataloggenerator_excludedtemplateproperties;
}
void
OAIComAdobeCqCommercePimImplCataloggeneratorCatalogGeneratorImplProperties::setCqCommerceCataloggeneratorExcludedtemplateproperties(OAIConfigNodePropertyArray* cq_commerce_cataloggenerator_excludedtemplateproperties) {
    this->cq_commerce_cataloggenerator_excludedtemplateproperties = cq_commerce_cataloggenerator_excludedtemplateproperties;
    this->m_cq_commerce_cataloggenerator_excludedtemplateproperties_isSet = true;
}


bool
OAIComAdobeCqCommercePimImplCataloggeneratorCatalogGeneratorImplProperties::isSet(){
    bool isObjectUpdated = false;
    do{
        if(cq_commerce_cataloggenerator_bucketsize != nullptr && cq_commerce_cataloggenerator_bucketsize->isSet()){ isObjectUpdated = true; break;}
        if(cq_commerce_cataloggenerator_bucketname != nullptr && cq_commerce_cataloggenerator_bucketname->isSet()){ isObjectUpdated = true; break;}
        if(cq_commerce_cataloggenerator_excludedtemplateproperties != nullptr && cq_commerce_cataloggenerator_excludedtemplateproperties->isSet()){ isObjectUpdated = true; break;}
    }while(false);
    return isObjectUpdated;
}
}

