/**
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


#include "OAIComDayCqDamCommonsMetadataXmpFilterBlackWhiteProperties.h"

#include "OAIHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace OpenAPI {

OAIComDayCqDamCommonsMetadataXmpFilterBlackWhiteProperties::OAIComDayCqDamCommonsMetadataXmpFilterBlackWhiteProperties(QString json) {
    this->fromJson(json);
}

OAIComDayCqDamCommonsMetadataXmpFilterBlackWhiteProperties::OAIComDayCqDamCommonsMetadataXmpFilterBlackWhiteProperties() {
    this->init();
}

OAIComDayCqDamCommonsMetadataXmpFilterBlackWhiteProperties::~OAIComDayCqDamCommonsMetadataXmpFilterBlackWhiteProperties() {
    
}

void
OAIComDayCqDamCommonsMetadataXmpFilterBlackWhiteProperties::init() {
    m_xmp_filter_apply_whitelist_isSet = false;
    m_xmp_filter_whitelist_isSet = false;
    m_xmp_filter_apply_blacklist_isSet = false;
    m_xmp_filter_blacklist_isSet = false;
}

void
OAIComDayCqDamCommonsMetadataXmpFilterBlackWhiteProperties::fromJson(QString jsonString) {
    QByteArray array (jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void
OAIComDayCqDamCommonsMetadataXmpFilterBlackWhiteProperties::fromJsonObject(QJsonObject json) {
    ::OpenAPI::fromJsonValue(xmp_filter_apply_whitelist, json[QString("xmp.filter.apply_whitelist")]);
    
    ::OpenAPI::fromJsonValue(xmp_filter_whitelist, json[QString("xmp.filter.whitelist")]);
    
    ::OpenAPI::fromJsonValue(xmp_filter_apply_blacklist, json[QString("xmp.filter.apply_blacklist")]);
    
    ::OpenAPI::fromJsonValue(xmp_filter_blacklist, json[QString("xmp.filter.blacklist")]);
    
}

QString
OAIComDayCqDamCommonsMetadataXmpFilterBlackWhiteProperties::asJson () const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject
OAIComDayCqDamCommonsMetadataXmpFilterBlackWhiteProperties::asJsonObject() const {
    QJsonObject obj;
	if(xmp_filter_apply_whitelist.isSet()){
        obj.insert(QString("xmp.filter.apply_whitelist"), ::OpenAPI::toJsonValue(xmp_filter_apply_whitelist));
    }
	if(xmp_filter_whitelist.isSet()){
        obj.insert(QString("xmp.filter.whitelist"), ::OpenAPI::toJsonValue(xmp_filter_whitelist));
    }
	if(xmp_filter_apply_blacklist.isSet()){
        obj.insert(QString("xmp.filter.apply_blacklist"), ::OpenAPI::toJsonValue(xmp_filter_apply_blacklist));
    }
	if(xmp_filter_blacklist.isSet()){
        obj.insert(QString("xmp.filter.blacklist"), ::OpenAPI::toJsonValue(xmp_filter_blacklist));
    }
    return obj;
}

OAIConfigNodePropertyBoolean
OAIComDayCqDamCommonsMetadataXmpFilterBlackWhiteProperties::getXmpFilterApplyWhitelist() const {
    return xmp_filter_apply_whitelist;
}
void
OAIComDayCqDamCommonsMetadataXmpFilterBlackWhiteProperties::setXmpFilterApplyWhitelist(const OAIConfigNodePropertyBoolean &xmp_filter_apply_whitelist) {
    this->xmp_filter_apply_whitelist = xmp_filter_apply_whitelist;
    this->m_xmp_filter_apply_whitelist_isSet = true;
}

OAIConfigNodePropertyArray
OAIComDayCqDamCommonsMetadataXmpFilterBlackWhiteProperties::getXmpFilterWhitelist() const {
    return xmp_filter_whitelist;
}
void
OAIComDayCqDamCommonsMetadataXmpFilterBlackWhiteProperties::setXmpFilterWhitelist(const OAIConfigNodePropertyArray &xmp_filter_whitelist) {
    this->xmp_filter_whitelist = xmp_filter_whitelist;
    this->m_xmp_filter_whitelist_isSet = true;
}

OAIConfigNodePropertyBoolean
OAIComDayCqDamCommonsMetadataXmpFilterBlackWhiteProperties::getXmpFilterApplyBlacklist() const {
    return xmp_filter_apply_blacklist;
}
void
OAIComDayCqDamCommonsMetadataXmpFilterBlackWhiteProperties::setXmpFilterApplyBlacklist(const OAIConfigNodePropertyBoolean &xmp_filter_apply_blacklist) {
    this->xmp_filter_apply_blacklist = xmp_filter_apply_blacklist;
    this->m_xmp_filter_apply_blacklist_isSet = true;
}

OAIConfigNodePropertyArray
OAIComDayCqDamCommonsMetadataXmpFilterBlackWhiteProperties::getXmpFilterBlacklist() const {
    return xmp_filter_blacklist;
}
void
OAIComDayCqDamCommonsMetadataXmpFilterBlackWhiteProperties::setXmpFilterBlacklist(const OAIConfigNodePropertyArray &xmp_filter_blacklist) {
    this->xmp_filter_blacklist = xmp_filter_blacklist;
    this->m_xmp_filter_blacklist_isSet = true;
}


bool
OAIComDayCqDamCommonsMetadataXmpFilterBlackWhiteProperties::isSet() const {
    bool isObjectUpdated = false;
    do{ 
        if(xmp_filter_apply_whitelist.isSet()){ isObjectUpdated = true; break;}
    
        if(xmp_filter_whitelist.isSet()){ isObjectUpdated = true; break;}
    
        if(xmp_filter_apply_blacklist.isSet()){ isObjectUpdated = true; break;}
    
        if(xmp_filter_blacklist.isSet()){ isObjectUpdated = true; break;}
    }while(false);
    return isObjectUpdated;
}

}

