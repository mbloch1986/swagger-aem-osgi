<?php
/**
 * ComAdobeCqDamS7imagingImplPsPlatformServerServletProperties
 *
 * PHP version 5
 *
 * @category Class
 * @package  OpenAPI\Server\Model
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * Adobe Experience Manager OSGI config (AEM) API
 *
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 *
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Do not edit the class manually.
 */

namespace OpenAPI\Server\Model;

use Symfony\Component\Validator\Constraints as Assert;
use JMS\Serializer\Annotation\Type;
use JMS\Serializer\Annotation\SerializedName;

/**
 * Class representing the ComAdobeCqDamS7imagingImplPsPlatformServerServletProperties model.
 *
 * @package OpenAPI\Server\Model
 * @author  OpenAPI Generator team
 */
class ComAdobeCqDamS7imagingImplPsPlatformServerServletProperties 
{
        /**
     * @var OpenAPI\Server\Model\ConfigNodePropertyBoolean|null
     * @SerializedName("cache.enable")
     * @Assert\Type("OpenAPI\Server\Model\ConfigNodePropertyBoolean")
     * @Type("OpenAPI\Server\Model\ConfigNodePropertyBoolean")
     */
    protected $cacheEnable;

    /**
     * @var OpenAPI\Server\Model\ConfigNodePropertyArray|null
     * @SerializedName("cache.rootPaths")
     * @Assert\Type("OpenAPI\Server\Model\ConfigNodePropertyArray")
     * @Type("OpenAPI\Server\Model\ConfigNodePropertyArray")
     */
    protected $cacheRootPaths;

    /**
     * @var OpenAPI\Server\Model\ConfigNodePropertyInteger|null
     * @SerializedName("cache.maxSize")
     * @Assert\Type("OpenAPI\Server\Model\ConfigNodePropertyInteger")
     * @Type("OpenAPI\Server\Model\ConfigNodePropertyInteger")
     */
    protected $cacheMaxSize;

    /**
     * @var OpenAPI\Server\Model\ConfigNodePropertyInteger|null
     * @SerializedName("cache.maxEntries")
     * @Assert\Type("OpenAPI\Server\Model\ConfigNodePropertyInteger")
     * @Type("OpenAPI\Server\Model\ConfigNodePropertyInteger")
     */
    protected $cacheMaxEntries;

    /**
     * Constructor
     * @param mixed[] $data Associated array of property values initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->cacheEnable = isset($data['cacheEnable']) ? $data['cacheEnable'] : null;
        $this->cacheRootPaths = isset($data['cacheRootPaths']) ? $data['cacheRootPaths'] : null;
        $this->cacheMaxSize = isset($data['cacheMaxSize']) ? $data['cacheMaxSize'] : null;
        $this->cacheMaxEntries = isset($data['cacheMaxEntries']) ? $data['cacheMaxEntries'] : null;
    }

    /**
     * Gets cacheEnable.
     *
     * @return OpenAPI\Server\Model\ConfigNodePropertyBoolean|null
     */
    public function getCacheEnable()
    {
        return $this->cacheEnable;
    }

    /**
     * Sets cacheEnable.
     *
     * @param OpenAPI\Server\Model\ConfigNodePropertyBoolean|null $cacheEnable
     *
     * @return $this
     */
    public function setCacheEnable(ConfigNodePropertyBoolean $cacheEnable = null)
    {
        $this->cacheEnable = $cacheEnable;

        return $this;
    }

    /**
     * Gets cacheRootPaths.
     *
     * @return OpenAPI\Server\Model\ConfigNodePropertyArray|null
     */
    public function getCacheRootPaths()
    {
        return $this->cacheRootPaths;
    }

    /**
     * Sets cacheRootPaths.
     *
     * @param OpenAPI\Server\Model\ConfigNodePropertyArray|null $cacheRootPaths
     *
     * @return $this
     */
    public function setCacheRootPaths(ConfigNodePropertyArray $cacheRootPaths = null)
    {
        $this->cacheRootPaths = $cacheRootPaths;

        return $this;
    }

    /**
     * Gets cacheMaxSize.
     *
     * @return OpenAPI\Server\Model\ConfigNodePropertyInteger|null
     */
    public function getCacheMaxSize()
    {
        return $this->cacheMaxSize;
    }

    /**
     * Sets cacheMaxSize.
     *
     * @param OpenAPI\Server\Model\ConfigNodePropertyInteger|null $cacheMaxSize
     *
     * @return $this
     */
    public function setCacheMaxSize(ConfigNodePropertyInteger $cacheMaxSize = null)
    {
        $this->cacheMaxSize = $cacheMaxSize;

        return $this;
    }

    /**
     * Gets cacheMaxEntries.
     *
     * @return OpenAPI\Server\Model\ConfigNodePropertyInteger|null
     */
    public function getCacheMaxEntries()
    {
        return $this->cacheMaxEntries;
    }

    /**
     * Sets cacheMaxEntries.
     *
     * @param OpenAPI\Server\Model\ConfigNodePropertyInteger|null $cacheMaxEntries
     *
     * @return $this
     */
    public function setCacheMaxEntries(ConfigNodePropertyInteger $cacheMaxEntries = null)
    {
        $this->cacheMaxEntries = $cacheMaxEntries;

        return $this;
    }
}


