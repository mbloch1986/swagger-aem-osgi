package org.openapitools.client.api

import argonaut._
import argonaut.EncodeJson._
import argonaut.DecodeJson._

import org.http4s.{EntityDecoder, EntityEncoder}
import org.http4s.argonaut._
import org.joda.time.DateTime
import ComAdobeGraniteRepositoryHcImplDefaultAccessUserProfileHealthCheProperties._

case class ComAdobeGraniteRepositoryHcImplDefaultAccessUserProfileHealthCheProperties (
  hcTags: Option[ConfigNodePropertyArray])

object ComAdobeGraniteRepositoryHcImplDefaultAccessUserProfileHealthCheProperties {
  import DateTimeCodecs._

  implicit val ComAdobeGraniteRepositoryHcImplDefaultAccessUserProfileHealthChePropertiesCodecJson: CodecJson[ComAdobeGraniteRepositoryHcImplDefaultAccessUserProfileHealthCheProperties] = CodecJson.derive[ComAdobeGraniteRepositoryHcImplDefaultAccessUserProfileHealthCheProperties]
  implicit val ComAdobeGraniteRepositoryHcImplDefaultAccessUserProfileHealthChePropertiesDecoder: EntityDecoder[ComAdobeGraniteRepositoryHcImplDefaultAccessUserProfileHealthCheProperties] = jsonOf[ComAdobeGraniteRepositoryHcImplDefaultAccessUserProfileHealthCheProperties]
  implicit val ComAdobeGraniteRepositoryHcImplDefaultAccessUserProfileHealthChePropertiesEncoder: EntityEncoder[ComAdobeGraniteRepositoryHcImplDefaultAccessUserProfileHealthCheProperties] = jsonEncoderOf[ComAdobeGraniteRepositoryHcImplDefaultAccessUserProfileHealthCheProperties]
}
