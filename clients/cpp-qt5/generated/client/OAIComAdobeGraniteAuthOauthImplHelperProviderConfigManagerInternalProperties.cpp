/**
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


#include "OAIComAdobeGraniteAuthOauthImplHelperProviderConfigManagerInternalProperties.h"

#include "OAIHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace OpenAPI {

OAIComAdobeGraniteAuthOauthImplHelperProviderConfigManagerInternalProperties::OAIComAdobeGraniteAuthOauthImplHelperProviderConfigManagerInternalProperties(QString json) {
    init();
    this->fromJson(json);
}

OAIComAdobeGraniteAuthOauthImplHelperProviderConfigManagerInternalProperties::OAIComAdobeGraniteAuthOauthImplHelperProviderConfigManagerInternalProperties() {
    init();
}

OAIComAdobeGraniteAuthOauthImplHelperProviderConfigManagerInternalProperties::~OAIComAdobeGraniteAuthOauthImplHelperProviderConfigManagerInternalProperties() {
    this->cleanup();
}

void
OAIComAdobeGraniteAuthOauthImplHelperProviderConfigManagerInternalProperties::init() {
    oauth_cookie_login_timeout = new OAIConfigNodePropertyString();
    m_oauth_cookie_login_timeout_isSet = false;
    oauth_cookie_max_age = new OAIConfigNodePropertyString();
    m_oauth_cookie_max_age_isSet = false;
}

void
OAIComAdobeGraniteAuthOauthImplHelperProviderConfigManagerInternalProperties::cleanup() {
    if(oauth_cookie_login_timeout != nullptr) { 
        delete oauth_cookie_login_timeout;
    }
    if(oauth_cookie_max_age != nullptr) { 
        delete oauth_cookie_max_age;
    }
}

OAIComAdobeGraniteAuthOauthImplHelperProviderConfigManagerInternalProperties*
OAIComAdobeGraniteAuthOauthImplHelperProviderConfigManagerInternalProperties::fromJson(QString json) {
    QByteArray array (json.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
    return this;
}

void
OAIComAdobeGraniteAuthOauthImplHelperProviderConfigManagerInternalProperties::fromJsonObject(QJsonObject pJson) {
    ::OpenAPI::setValue(&oauth_cookie_login_timeout, pJson["oauth.cookie.login.timeout"], "OAIConfigNodePropertyString", "OAIConfigNodePropertyString");
    
    ::OpenAPI::setValue(&oauth_cookie_max_age, pJson["oauth.cookie.max.age"], "OAIConfigNodePropertyString", "OAIConfigNodePropertyString");
    
}

QString
OAIComAdobeGraniteAuthOauthImplHelperProviderConfigManagerInternalProperties::asJson ()
{
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject
OAIComAdobeGraniteAuthOauthImplHelperProviderConfigManagerInternalProperties::asJsonObject() {
    QJsonObject obj;
    if((oauth_cookie_login_timeout != nullptr) && (oauth_cookie_login_timeout->isSet())){
        toJsonValue(QString("oauth.cookie.login.timeout"), oauth_cookie_login_timeout, obj, QString("OAIConfigNodePropertyString"));
    }
    if((oauth_cookie_max_age != nullptr) && (oauth_cookie_max_age->isSet())){
        toJsonValue(QString("oauth.cookie.max.age"), oauth_cookie_max_age, obj, QString("OAIConfigNodePropertyString"));
    }

    return obj;
}

OAIConfigNodePropertyString*
OAIComAdobeGraniteAuthOauthImplHelperProviderConfigManagerInternalProperties::getOauthCookieLoginTimeout() {
    return oauth_cookie_login_timeout;
}
void
OAIComAdobeGraniteAuthOauthImplHelperProviderConfigManagerInternalProperties::setOauthCookieLoginTimeout(OAIConfigNodePropertyString* oauth_cookie_login_timeout) {
    this->oauth_cookie_login_timeout = oauth_cookie_login_timeout;
    this->m_oauth_cookie_login_timeout_isSet = true;
}

OAIConfigNodePropertyString*
OAIComAdobeGraniteAuthOauthImplHelperProviderConfigManagerInternalProperties::getOauthCookieMaxAge() {
    return oauth_cookie_max_age;
}
void
OAIComAdobeGraniteAuthOauthImplHelperProviderConfigManagerInternalProperties::setOauthCookieMaxAge(OAIConfigNodePropertyString* oauth_cookie_max_age) {
    this->oauth_cookie_max_age = oauth_cookie_max_age;
    this->m_oauth_cookie_max_age_isSet = true;
}


bool
OAIComAdobeGraniteAuthOauthImplHelperProviderConfigManagerInternalProperties::isSet(){
    bool isObjectUpdated = false;
    do{
        if(oauth_cookie_login_timeout != nullptr && oauth_cookie_login_timeout->isSet()){ isObjectUpdated = true; break;}
        if(oauth_cookie_max_age != nullptr && oauth_cookie_max_age->isSet()){ isObjectUpdated = true; break;}
    }while(false);
    return isObjectUpdated;
}
}

