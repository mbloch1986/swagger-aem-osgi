package org.openapitools.client.api

import argonaut._
import argonaut.EncodeJson._
import argonaut.DecodeJson._

import org.http4s.{EntityDecoder, EntityEncoder}
import org.http4s.argonaut._
import org.joda.time.DateTime
import ComAdobeCqDamIpsImplReplicationTriggerReplicateOnModifyWorkerInfo._

case class ComAdobeCqDamIpsImplReplicationTriggerReplicateOnModifyWorkerInfo (
  pid: Option[String],
title: Option[String],
description: Option[String],
properties: Option[ComAdobeCqDamIpsImplReplicationTriggerReplicateOnModifyWorkerProperties])

object ComAdobeCqDamIpsImplReplicationTriggerReplicateOnModifyWorkerInfo {
  import DateTimeCodecs._

  implicit val ComAdobeCqDamIpsImplReplicationTriggerReplicateOnModifyWorkerInfoCodecJson: CodecJson[ComAdobeCqDamIpsImplReplicationTriggerReplicateOnModifyWorkerInfo] = CodecJson.derive[ComAdobeCqDamIpsImplReplicationTriggerReplicateOnModifyWorkerInfo]
  implicit val ComAdobeCqDamIpsImplReplicationTriggerReplicateOnModifyWorkerInfoDecoder: EntityDecoder[ComAdobeCqDamIpsImplReplicationTriggerReplicateOnModifyWorkerInfo] = jsonOf[ComAdobeCqDamIpsImplReplicationTriggerReplicateOnModifyWorkerInfo]
  implicit val ComAdobeCqDamIpsImplReplicationTriggerReplicateOnModifyWorkerInfoEncoder: EntityEncoder[ComAdobeCqDamIpsImplReplicationTriggerReplicateOnModifyWorkerInfo] = jsonEncoderOf[ComAdobeCqDamIpsImplReplicationTriggerReplicateOnModifyWorkerInfo]
}
