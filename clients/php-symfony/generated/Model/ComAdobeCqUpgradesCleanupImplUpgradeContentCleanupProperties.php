<?php
/**
 * ComAdobeCqUpgradesCleanupImplUpgradeContentCleanupProperties
 *
 * PHP version 5
 *
 * @category Class
 * @package  OpenAPI\Server\Model
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * Adobe Experience Manager OSGI config (AEM) API
 *
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 *
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Do not edit the class manually.
 */

namespace OpenAPI\Server\Model;

use Symfony\Component\Validator\Constraints as Assert;
use JMS\Serializer\Annotation\Type;
use JMS\Serializer\Annotation\SerializedName;

/**
 * Class representing the ComAdobeCqUpgradesCleanupImplUpgradeContentCleanupProperties model.
 *
 * @package OpenAPI\Server\Model
 * @author  OpenAPI Generator team
 */
class ComAdobeCqUpgradesCleanupImplUpgradeContentCleanupProperties 
{
        /**
     * @var OpenAPI\Server\Model\ConfigNodePropertyArray|null
     * @SerializedName("delete.path.regexps")
     * @Assert\Type("OpenAPI\Server\Model\ConfigNodePropertyArray")
     * @Type("OpenAPI\Server\Model\ConfigNodePropertyArray")
     */
    protected $deletePathRegexps;

    /**
     * @var OpenAPI\Server\Model\ConfigNodePropertyString|null
     * @SerializedName("delete.sql2.query")
     * @Assert\Type("OpenAPI\Server\Model\ConfigNodePropertyString")
     * @Type("OpenAPI\Server\Model\ConfigNodePropertyString")
     */
    protected $deleteSql2Query;

    /**
     * Constructor
     * @param mixed[] $data Associated array of property values initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->deletePathRegexps = isset($data['deletePathRegexps']) ? $data['deletePathRegexps'] : null;
        $this->deleteSql2Query = isset($data['deleteSql2Query']) ? $data['deleteSql2Query'] : null;
    }

    /**
     * Gets deletePathRegexps.
     *
     * @return OpenAPI\Server\Model\ConfigNodePropertyArray|null
     */
    public function getDeletePathRegexps()
    {
        return $this->deletePathRegexps;
    }

    /**
     * Sets deletePathRegexps.
     *
     * @param OpenAPI\Server\Model\ConfigNodePropertyArray|null $deletePathRegexps
     *
     * @return $this
     */
    public function setDeletePathRegexps(ConfigNodePropertyArray $deletePathRegexps = null)
    {
        $this->deletePathRegexps = $deletePathRegexps;

        return $this;
    }

    /**
     * Gets deleteSql2Query.
     *
     * @return OpenAPI\Server\Model\ConfigNodePropertyString|null
     */
    public function getDeleteSql2Query()
    {
        return $this->deleteSql2Query;
    }

    /**
     * Sets deleteSql2Query.
     *
     * @param OpenAPI\Server\Model\ConfigNodePropertyString|null $deleteSql2Query
     *
     * @return $this
     */
    public function setDeleteSql2Query(ConfigNodePropertyString $deleteSql2Query = null)
    {
        $this->deleteSql2Query = $deleteSql2Query;

        return $this;
    }
}


