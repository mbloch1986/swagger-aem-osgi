# NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
# https://openapi-generator.tech
# Do not edit the class manually.

defmodule AdobeExperienceManagerOSGIConfig(AEM)API.Model.OrgApacheSlingJcrWebdavImplServletsSimpleWebDavServletProperties do
  @moduledoc """
  
  """

  @derive [Poison.Encoder]
  defstruct [
    :"dav.root",
    :"dav.create-absolute-uri",
    :"dav.realm",
    :"collection.types",
    :"filter.prefixes",
    :"filter.types",
    :"filter.uris",
    :"type.collections",
    :"type.noncollections",
    :"type.content"
  ]

  @type t :: %__MODULE__{
    :"dav.root" => ConfigNodePropertyString,
    :"dav.create-absolute-uri" => ConfigNodePropertyBoolean,
    :"dav.realm" => ConfigNodePropertyString,
    :"collection.types" => ConfigNodePropertyArray,
    :"filter.prefixes" => ConfigNodePropertyArray,
    :"filter.types" => ConfigNodePropertyString,
    :"filter.uris" => ConfigNodePropertyString,
    :"type.collections" => ConfigNodePropertyString,
    :"type.noncollections" => ConfigNodePropertyString,
    :"type.content" => ConfigNodePropertyString
  }
end

defimpl Poison.Decoder, for: AdobeExperienceManagerOSGIConfig(AEM)API.Model.OrgApacheSlingJcrWebdavImplServletsSimpleWebDavServletProperties do
  import AdobeExperienceManagerOSGIConfig(AEM)API.Deserializer
  def decode(value, options) do
    value
    |> deserialize(:"dav.root", :struct, AdobeExperienceManagerOSGIConfig(AEM)API.Model.ConfigNodePropertyString, options)
    |> deserialize(:"dav.create-absolute-uri", :struct, AdobeExperienceManagerOSGIConfig(AEM)API.Model.ConfigNodePropertyBoolean, options)
    |> deserialize(:"dav.realm", :struct, AdobeExperienceManagerOSGIConfig(AEM)API.Model.ConfigNodePropertyString, options)
    |> deserialize(:"collection.types", :struct, AdobeExperienceManagerOSGIConfig(AEM)API.Model.ConfigNodePropertyArray, options)
    |> deserialize(:"filter.prefixes", :struct, AdobeExperienceManagerOSGIConfig(AEM)API.Model.ConfigNodePropertyArray, options)
    |> deserialize(:"filter.types", :struct, AdobeExperienceManagerOSGIConfig(AEM)API.Model.ConfigNodePropertyString, options)
    |> deserialize(:"filter.uris", :struct, AdobeExperienceManagerOSGIConfig(AEM)API.Model.ConfigNodePropertyString, options)
    |> deserialize(:"type.collections", :struct, AdobeExperienceManagerOSGIConfig(AEM)API.Model.ConfigNodePropertyString, options)
    |> deserialize(:"type.noncollections", :struct, AdobeExperienceManagerOSGIConfig(AEM)API.Model.ConfigNodePropertyString, options)
    |> deserialize(:"type.content", :struct, AdobeExperienceManagerOSGIConfig(AEM)API.Model.ConfigNodePropertyString, options)
  end
end

