/**
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.NodeSwaggerAemOsgi);
  }
}(this, function(expect, NodeSwaggerAemOsgi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new NodeSwaggerAemOsgi.OrgApacheJackrabbitOakSecurityAuthenticationLdapImplLdapIdentityProviderProperties();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('OrgApacheJackrabbitOakSecurityAuthenticationLdapImplLdapIdentityProviderProperties', function() {
    it('should create an instance of OrgApacheJackrabbitOakSecurityAuthenticationLdapImplLdapIdentityProviderProperties', function() {
      // uncomment below and update the code to test OrgApacheJackrabbitOakSecurityAuthenticationLdapImplLdapIdentityProviderProperties
      //var instane = new NodeSwaggerAemOsgi.OrgApacheJackrabbitOakSecurityAuthenticationLdapImplLdapIdentityProviderProperties();
      //expect(instance).to.be.a(NodeSwaggerAemOsgi.OrgApacheJackrabbitOakSecurityAuthenticationLdapImplLdapIdentityProviderProperties);
    });

    it('should have the property providerName (base name: "provider.name")', function() {
      // uncomment below and update the code to test the property providerName
      //var instane = new NodeSwaggerAemOsgi.OrgApacheJackrabbitOakSecurityAuthenticationLdapImplLdapIdentityProviderProperties();
      //expect(instance).to.be();
    });

    it('should have the property hostName (base name: "host.name")', function() {
      // uncomment below and update the code to test the property hostName
      //var instane = new NodeSwaggerAemOsgi.OrgApacheJackrabbitOakSecurityAuthenticationLdapImplLdapIdentityProviderProperties();
      //expect(instance).to.be();
    });

    it('should have the property hostPort (base name: "host.port")', function() {
      // uncomment below and update the code to test the property hostPort
      //var instane = new NodeSwaggerAemOsgi.OrgApacheJackrabbitOakSecurityAuthenticationLdapImplLdapIdentityProviderProperties();
      //expect(instance).to.be();
    });

    it('should have the property hostSsl (base name: "host.ssl")', function() {
      // uncomment below and update the code to test the property hostSsl
      //var instane = new NodeSwaggerAemOsgi.OrgApacheJackrabbitOakSecurityAuthenticationLdapImplLdapIdentityProviderProperties();
      //expect(instance).to.be();
    });

    it('should have the property hostTls (base name: "host.tls")', function() {
      // uncomment below and update the code to test the property hostTls
      //var instane = new NodeSwaggerAemOsgi.OrgApacheJackrabbitOakSecurityAuthenticationLdapImplLdapIdentityProviderProperties();
      //expect(instance).to.be();
    });

    it('should have the property hostNoCertCheck (base name: "host.noCertCheck")', function() {
      // uncomment below and update the code to test the property hostNoCertCheck
      //var instane = new NodeSwaggerAemOsgi.OrgApacheJackrabbitOakSecurityAuthenticationLdapImplLdapIdentityProviderProperties();
      //expect(instance).to.be();
    });

    it('should have the property bindDn (base name: "bind.dn")', function() {
      // uncomment below and update the code to test the property bindDn
      //var instane = new NodeSwaggerAemOsgi.OrgApacheJackrabbitOakSecurityAuthenticationLdapImplLdapIdentityProviderProperties();
      //expect(instance).to.be();
    });

    it('should have the property bindPassword (base name: "bind.password")', function() {
      // uncomment below and update the code to test the property bindPassword
      //var instane = new NodeSwaggerAemOsgi.OrgApacheJackrabbitOakSecurityAuthenticationLdapImplLdapIdentityProviderProperties();
      //expect(instance).to.be();
    });

    it('should have the property searchTimeout (base name: "searchTimeout")', function() {
      // uncomment below and update the code to test the property searchTimeout
      //var instane = new NodeSwaggerAemOsgi.OrgApacheJackrabbitOakSecurityAuthenticationLdapImplLdapIdentityProviderProperties();
      //expect(instance).to.be();
    });

    it('should have the property adminPoolMaxActive (base name: "adminPool.maxActive")', function() {
      // uncomment below and update the code to test the property adminPoolMaxActive
      //var instane = new NodeSwaggerAemOsgi.OrgApacheJackrabbitOakSecurityAuthenticationLdapImplLdapIdentityProviderProperties();
      //expect(instance).to.be();
    });

    it('should have the property adminPoolLookupOnValidate (base name: "adminPool.lookupOnValidate")', function() {
      // uncomment below and update the code to test the property adminPoolLookupOnValidate
      //var instane = new NodeSwaggerAemOsgi.OrgApacheJackrabbitOakSecurityAuthenticationLdapImplLdapIdentityProviderProperties();
      //expect(instance).to.be();
    });

    it('should have the property userPoolMaxActive (base name: "userPool.maxActive")', function() {
      // uncomment below and update the code to test the property userPoolMaxActive
      //var instane = new NodeSwaggerAemOsgi.OrgApacheJackrabbitOakSecurityAuthenticationLdapImplLdapIdentityProviderProperties();
      //expect(instance).to.be();
    });

    it('should have the property userPoolLookupOnValidate (base name: "userPool.lookupOnValidate")', function() {
      // uncomment below and update the code to test the property userPoolLookupOnValidate
      //var instane = new NodeSwaggerAemOsgi.OrgApacheJackrabbitOakSecurityAuthenticationLdapImplLdapIdentityProviderProperties();
      //expect(instance).to.be();
    });

    it('should have the property userBaseDN (base name: "user.baseDN")', function() {
      // uncomment below and update the code to test the property userBaseDN
      //var instane = new NodeSwaggerAemOsgi.OrgApacheJackrabbitOakSecurityAuthenticationLdapImplLdapIdentityProviderProperties();
      //expect(instance).to.be();
    });

    it('should have the property userObjectclass (base name: "user.objectclass")', function() {
      // uncomment below and update the code to test the property userObjectclass
      //var instane = new NodeSwaggerAemOsgi.OrgApacheJackrabbitOakSecurityAuthenticationLdapImplLdapIdentityProviderProperties();
      //expect(instance).to.be();
    });

    it('should have the property userIdAttribute (base name: "user.idAttribute")', function() {
      // uncomment below and update the code to test the property userIdAttribute
      //var instane = new NodeSwaggerAemOsgi.OrgApacheJackrabbitOakSecurityAuthenticationLdapImplLdapIdentityProviderProperties();
      //expect(instance).to.be();
    });

    it('should have the property userExtraFilter (base name: "user.extraFilter")', function() {
      // uncomment below and update the code to test the property userExtraFilter
      //var instane = new NodeSwaggerAemOsgi.OrgApacheJackrabbitOakSecurityAuthenticationLdapImplLdapIdentityProviderProperties();
      //expect(instance).to.be();
    });

    it('should have the property userMakeDnPath (base name: "user.makeDnPath")', function() {
      // uncomment below and update the code to test the property userMakeDnPath
      //var instane = new NodeSwaggerAemOsgi.OrgApacheJackrabbitOakSecurityAuthenticationLdapImplLdapIdentityProviderProperties();
      //expect(instance).to.be();
    });

    it('should have the property groupBaseDN (base name: "group.baseDN")', function() {
      // uncomment below and update the code to test the property groupBaseDN
      //var instane = new NodeSwaggerAemOsgi.OrgApacheJackrabbitOakSecurityAuthenticationLdapImplLdapIdentityProviderProperties();
      //expect(instance).to.be();
    });

    it('should have the property groupObjectclass (base name: "group.objectclass")', function() {
      // uncomment below and update the code to test the property groupObjectclass
      //var instane = new NodeSwaggerAemOsgi.OrgApacheJackrabbitOakSecurityAuthenticationLdapImplLdapIdentityProviderProperties();
      //expect(instance).to.be();
    });

    it('should have the property groupNameAttribute (base name: "group.nameAttribute")', function() {
      // uncomment below and update the code to test the property groupNameAttribute
      //var instane = new NodeSwaggerAemOsgi.OrgApacheJackrabbitOakSecurityAuthenticationLdapImplLdapIdentityProviderProperties();
      //expect(instance).to.be();
    });

    it('should have the property groupExtraFilter (base name: "group.extraFilter")', function() {
      // uncomment below and update the code to test the property groupExtraFilter
      //var instane = new NodeSwaggerAemOsgi.OrgApacheJackrabbitOakSecurityAuthenticationLdapImplLdapIdentityProviderProperties();
      //expect(instance).to.be();
    });

    it('should have the property groupMakeDnPath (base name: "group.makeDnPath")', function() {
      // uncomment below and update the code to test the property groupMakeDnPath
      //var instane = new NodeSwaggerAemOsgi.OrgApacheJackrabbitOakSecurityAuthenticationLdapImplLdapIdentityProviderProperties();
      //expect(instance).to.be();
    });

    it('should have the property groupMemberAttribute (base name: "group.memberAttribute")', function() {
      // uncomment below and update the code to test the property groupMemberAttribute
      //var instane = new NodeSwaggerAemOsgi.OrgApacheJackrabbitOakSecurityAuthenticationLdapImplLdapIdentityProviderProperties();
      //expect(instance).to.be();
    });

    it('should have the property useUidForExtId (base name: "useUidForExtId")', function() {
      // uncomment below and update the code to test the property useUidForExtId
      //var instane = new NodeSwaggerAemOsgi.OrgApacheJackrabbitOakSecurityAuthenticationLdapImplLdapIdentityProviderProperties();
      //expect(instance).to.be();
    });

    it('should have the property customattributes (base name: "customattributes")', function() {
      // uncomment below and update the code to test the property customattributes
      //var instane = new NodeSwaggerAemOsgi.OrgApacheJackrabbitOakSecurityAuthenticationLdapImplLdapIdentityProviderProperties();
      //expect(instance).to.be();
    });

  });

}));
