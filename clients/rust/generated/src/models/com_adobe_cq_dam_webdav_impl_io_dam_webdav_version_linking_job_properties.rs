/* 
 * Adobe Experience Manager OSGI config (AEM) API
 *
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 * Generated by: https://openapi-generator.tech
 */


#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct ComAdobeCqDamWebdavImplIoDamWebdavVersionLinkingJobProperties {
  #[serde(rename = "cq.dam.webdav.version.linking.enable")]
  cq_dam_webdav_version_linking_enable: Option<::models::ConfigNodePropertyBoolean>,
  #[serde(rename = "cq.dam.webdav.version.linking.scheduler.period")]
  cq_dam_webdav_version_linking_scheduler_period: Option<::models::ConfigNodePropertyInteger>,
  #[serde(rename = "cq.dam.webdav.version.linking.staging.timeout")]
  cq_dam_webdav_version_linking_staging_timeout: Option<::models::ConfigNodePropertyInteger>
}

impl ComAdobeCqDamWebdavImplIoDamWebdavVersionLinkingJobProperties {
  pub fn new() -> ComAdobeCqDamWebdavImplIoDamWebdavVersionLinkingJobProperties {
    ComAdobeCqDamWebdavImplIoDamWebdavVersionLinkingJobProperties {
      cq_dam_webdav_version_linking_enable: None,
      cq_dam_webdav_version_linking_scheduler_period: None,
      cq_dam_webdav_version_linking_staging_timeout: None
    }
  }

  pub fn set_cq_dam_webdav_version_linking_enable(&mut self, cq_dam_webdav_version_linking_enable: ::models::ConfigNodePropertyBoolean) {
    self.cq_dam_webdav_version_linking_enable = Some(cq_dam_webdav_version_linking_enable);
  }

  pub fn with_cq_dam_webdav_version_linking_enable(mut self, cq_dam_webdav_version_linking_enable: ::models::ConfigNodePropertyBoolean) -> ComAdobeCqDamWebdavImplIoDamWebdavVersionLinkingJobProperties {
    self.cq_dam_webdav_version_linking_enable = Some(cq_dam_webdav_version_linking_enable);
    self
  }

  pub fn cq_dam_webdav_version_linking_enable(&self) -> Option<&::models::ConfigNodePropertyBoolean> {
    self.cq_dam_webdav_version_linking_enable.as_ref()
  }

  pub fn reset_cq_dam_webdav_version_linking_enable(&mut self) {
    self.cq_dam_webdav_version_linking_enable = None;
  }

  pub fn set_cq_dam_webdav_version_linking_scheduler_period(&mut self, cq_dam_webdav_version_linking_scheduler_period: ::models::ConfigNodePropertyInteger) {
    self.cq_dam_webdav_version_linking_scheduler_period = Some(cq_dam_webdav_version_linking_scheduler_period);
  }

  pub fn with_cq_dam_webdav_version_linking_scheduler_period(mut self, cq_dam_webdav_version_linking_scheduler_period: ::models::ConfigNodePropertyInteger) -> ComAdobeCqDamWebdavImplIoDamWebdavVersionLinkingJobProperties {
    self.cq_dam_webdav_version_linking_scheduler_period = Some(cq_dam_webdav_version_linking_scheduler_period);
    self
  }

  pub fn cq_dam_webdav_version_linking_scheduler_period(&self) -> Option<&::models::ConfigNodePropertyInteger> {
    self.cq_dam_webdav_version_linking_scheduler_period.as_ref()
  }

  pub fn reset_cq_dam_webdav_version_linking_scheduler_period(&mut self) {
    self.cq_dam_webdav_version_linking_scheduler_period = None;
  }

  pub fn set_cq_dam_webdav_version_linking_staging_timeout(&mut self, cq_dam_webdav_version_linking_staging_timeout: ::models::ConfigNodePropertyInteger) {
    self.cq_dam_webdav_version_linking_staging_timeout = Some(cq_dam_webdav_version_linking_staging_timeout);
  }

  pub fn with_cq_dam_webdav_version_linking_staging_timeout(mut self, cq_dam_webdav_version_linking_staging_timeout: ::models::ConfigNodePropertyInteger) -> ComAdobeCqDamWebdavImplIoDamWebdavVersionLinkingJobProperties {
    self.cq_dam_webdav_version_linking_staging_timeout = Some(cq_dam_webdav_version_linking_staging_timeout);
    self
  }

  pub fn cq_dam_webdav_version_linking_staging_timeout(&self) -> Option<&::models::ConfigNodePropertyInteger> {
    self.cq_dam_webdav_version_linking_staging_timeout.as_ref()
  }

  pub fn reset_cq_dam_webdav_version_linking_staging_timeout(&mut self) {
    self.cq_dam_webdav_version_linking_staging_timeout = None;
  }

}



