/* 
 * Adobe Experience Manager OSGI config (AEM) API
 *
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Org.OpenAPITools.Client.OpenAPIDateConverter;

namespace Org.OpenAPITools.Model
{
    /// <summary>
    /// OrgApacheSlingJcrDavexImplServletsSlingDavExServletProperties
    /// </summary>
    [DataContract]
    public partial class OrgApacheSlingJcrDavexImplServletsSlingDavExServletProperties :  IEquatable<OrgApacheSlingJcrDavexImplServletsSlingDavExServletProperties>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="OrgApacheSlingJcrDavexImplServletsSlingDavExServletProperties" /> class.
        /// </summary>
        /// <param name="alias">alias.</param>
        /// <param name="davCreateAbsoluteUri">davCreateAbsoluteUri.</param>
        /// <param name="davProtectedhandlers">davProtectedhandlers.</param>
        public OrgApacheSlingJcrDavexImplServletsSlingDavExServletProperties(ConfigNodePropertyString alias = default(ConfigNodePropertyString), ConfigNodePropertyBoolean davCreateAbsoluteUri = default(ConfigNodePropertyBoolean), ConfigNodePropertyString davProtectedhandlers = default(ConfigNodePropertyString))
        {
            this.Alias = alias;
            this.DavCreateAbsoluteUri = davCreateAbsoluteUri;
            this.DavProtectedhandlers = davProtectedhandlers;
        }
        
        /// <summary>
        /// Gets or Sets Alias
        /// </summary>
        [DataMember(Name="alias", EmitDefaultValue=false)]
        public ConfigNodePropertyString Alias { get; set; }

        /// <summary>
        /// Gets or Sets DavCreateAbsoluteUri
        /// </summary>
        [DataMember(Name="dav.create-absolute-uri", EmitDefaultValue=false)]
        public ConfigNodePropertyBoolean DavCreateAbsoluteUri { get; set; }

        /// <summary>
        /// Gets or Sets DavProtectedhandlers
        /// </summary>
        [DataMember(Name="dav.protectedhandlers", EmitDefaultValue=false)]
        public ConfigNodePropertyString DavProtectedhandlers { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class OrgApacheSlingJcrDavexImplServletsSlingDavExServletProperties {\n");
            sb.Append("  Alias: ").Append(Alias).Append("\n");
            sb.Append("  DavCreateAbsoluteUri: ").Append(DavCreateAbsoluteUri).Append("\n");
            sb.Append("  DavProtectedhandlers: ").Append(DavProtectedhandlers).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as OrgApacheSlingJcrDavexImplServletsSlingDavExServletProperties);
        }

        /// <summary>
        /// Returns true if OrgApacheSlingJcrDavexImplServletsSlingDavExServletProperties instances are equal
        /// </summary>
        /// <param name="input">Instance of OrgApacheSlingJcrDavexImplServletsSlingDavExServletProperties to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(OrgApacheSlingJcrDavexImplServletsSlingDavExServletProperties input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.Alias == input.Alias ||
                    (this.Alias != null &&
                    this.Alias.Equals(input.Alias))
                ) && 
                (
                    this.DavCreateAbsoluteUri == input.DavCreateAbsoluteUri ||
                    (this.DavCreateAbsoluteUri != null &&
                    this.DavCreateAbsoluteUri.Equals(input.DavCreateAbsoluteUri))
                ) && 
                (
                    this.DavProtectedhandlers == input.DavProtectedhandlers ||
                    (this.DavProtectedhandlers != null &&
                    this.DavProtectedhandlers.Equals(input.DavProtectedhandlers))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Alias != null)
                    hashCode = hashCode * 59 + this.Alias.GetHashCode();
                if (this.DavCreateAbsoluteUri != null)
                    hashCode = hashCode * 59 + this.DavCreateAbsoluteUri.GetHashCode();
                if (this.DavProtectedhandlers != null)
                    hashCode = hashCode * 59 + this.DavProtectedhandlers.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
