/**
* Adobe Experience Manager OSGI config (AEM) API
* Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
*
* OpenAPI spec version: 1.0.0-pre.0
* Contact: opensource@shinesolutions.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
/*
 * ComAdobeCqSocialReportingAnalyticsServicesImplAnalyticsReportIProperties.h
 *
 * 
 */

#ifndef ComAdobeCqSocialReportingAnalyticsServicesImplAnalyticsReportIProperties_H_
#define ComAdobeCqSocialReportingAnalyticsServicesImplAnalyticsReportIProperties_H_


#include "ModelBase.h"

#include "ConfigNodePropertyInteger.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
/// 
/// </summary>
class  ComAdobeCqSocialReportingAnalyticsServicesImplAnalyticsReportIProperties
    : public ModelBase
{
public:
    ComAdobeCqSocialReportingAnalyticsServicesImplAnalyticsReportIProperties();
    virtual ~ComAdobeCqSocialReportingAnalyticsServicesImplAnalyticsReportIProperties();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    nlohmann::json toJson() const override;
    void fromJson(nlohmann::json& json) override;

    /////////////////////////////////////////////
    /// ComAdobeCqSocialReportingAnalyticsServicesImplAnalyticsReportIProperties members

    /// <summary>
    /// 
    /// </summary>
    ConfigNodePropertyInteger getCqSocialReportingAnalyticsPollingImporterInterval() const;
    void setCqSocialReportingAnalyticsPollingImporterInterval(ConfigNodePropertyInteger const& value);
    bool cqSocialReportingAnalyticsPollingImporterIntervalIsSet() const;
    void unsetCq_social_reporting_analytics_polling_importer_interval();
    /// <summary>
    /// 
    /// </summary>
    ConfigNodePropertyInteger getCqSocialReportingAnalyticsPollingImporterPageSize() const;
    void setCqSocialReportingAnalyticsPollingImporterPageSize(ConfigNodePropertyInteger const& value);
    bool cqSocialReportingAnalyticsPollingImporterPageSizeIsSet() const;
    void unsetCq_social_reporting_analytics_polling_importer_pageSize();

protected:
    ConfigNodePropertyInteger m_Cq_social_reporting_analytics_polling_importer_interval;
    bool m_Cq_social_reporting_analytics_polling_importer_intervalIsSet;
    ConfigNodePropertyInteger m_Cq_social_reporting_analytics_polling_importer_pageSize;
    bool m_Cq_social_reporting_analytics_polling_importer_pageSizeIsSet;
};

}
}
}
}

#endif /* ComAdobeCqSocialReportingAnalyticsServicesImplAnalyticsReportIProperties_H_ */
