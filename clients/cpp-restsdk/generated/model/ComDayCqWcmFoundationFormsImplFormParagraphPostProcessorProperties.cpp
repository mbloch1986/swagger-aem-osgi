/**
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 3.2.1-SNAPSHOT.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */



#include "ComDayCqWcmFoundationFormsImplFormParagraphPostProcessorProperties.h"

namespace org {
namespace openapitools {
namespace client {
namespace model {

ComDayCqWcmFoundationFormsImplFormParagraphPostProcessorProperties::ComDayCqWcmFoundationFormsImplFormParagraphPostProcessorProperties()
{
    m_Forms_formparagraphpostprocessor_enabledIsSet = false;
    m_Forms_formparagraphpostprocessor_formresourcetypesIsSet = false;
}

ComDayCqWcmFoundationFormsImplFormParagraphPostProcessorProperties::~ComDayCqWcmFoundationFormsImplFormParagraphPostProcessorProperties()
{
}

void ComDayCqWcmFoundationFormsImplFormParagraphPostProcessorProperties::validate()
{
    // TODO: implement validation
}

web::json::value ComDayCqWcmFoundationFormsImplFormParagraphPostProcessorProperties::toJson() const
{
    web::json::value val = web::json::value::object();

    if(m_Forms_formparagraphpostprocessor_enabledIsSet)
    {
        val[utility::conversions::to_string_t("forms.formparagraphpostprocessor.enabled")] = ModelBase::toJson(m_Forms_formparagraphpostprocessor_enabled);
    }
    if(m_Forms_formparagraphpostprocessor_formresourcetypesIsSet)
    {
        val[utility::conversions::to_string_t("forms.formparagraphpostprocessor.formresourcetypes")] = ModelBase::toJson(m_Forms_formparagraphpostprocessor_formresourcetypes);
    }

    return val;
}

void ComDayCqWcmFoundationFormsImplFormParagraphPostProcessorProperties::fromJson(web::json::value& val)
{
    if(val.has_field(utility::conversions::to_string_t("forms.formparagraphpostprocessor.enabled")))
    {
        if(!val[utility::conversions::to_string_t("forms.formparagraphpostprocessor.enabled")].is_null())
        {
            std::shared_ptr<ConfigNodePropertyBoolean> newItem(new ConfigNodePropertyBoolean());
            newItem->fromJson(val[utility::conversions::to_string_t("forms.formparagraphpostprocessor.enabled")]);
            setFormsFormparagraphpostprocessorEnabled( newItem );
        }
    }
    if(val.has_field(utility::conversions::to_string_t("forms.formparagraphpostprocessor.formresourcetypes")))
    {
        if(!val[utility::conversions::to_string_t("forms.formparagraphpostprocessor.formresourcetypes")].is_null())
        {
            std::shared_ptr<ConfigNodePropertyArray> newItem(new ConfigNodePropertyArray());
            newItem->fromJson(val[utility::conversions::to_string_t("forms.formparagraphpostprocessor.formresourcetypes")]);
            setFormsFormparagraphpostprocessorFormresourcetypes( newItem );
        }
    }
}

void ComDayCqWcmFoundationFormsImplFormParagraphPostProcessorProperties::toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& prefix) const
{
    utility::string_t namePrefix = prefix;
    if(namePrefix.size() > 0 && namePrefix.substr(namePrefix.size() - 1) != utility::conversions::to_string_t("."))
    {
        namePrefix += utility::conversions::to_string_t(".");
    }

    if(m_Forms_formparagraphpostprocessor_enabledIsSet)
    {
        if (m_Forms_formparagraphpostprocessor_enabled.get())
        {
            m_Forms_formparagraphpostprocessor_enabled->toMultipart(multipart, utility::conversions::to_string_t("forms.formparagraphpostprocessor.enabled."));
        }
    }
    if(m_Forms_formparagraphpostprocessor_formresourcetypesIsSet)
    {
        if (m_Forms_formparagraphpostprocessor_formresourcetypes.get())
        {
            m_Forms_formparagraphpostprocessor_formresourcetypes->toMultipart(multipart, utility::conversions::to_string_t("forms.formparagraphpostprocessor.formresourcetypes."));
        }
    }
}

void ComDayCqWcmFoundationFormsImplFormParagraphPostProcessorProperties::fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& prefix)
{
    utility::string_t namePrefix = prefix;
    if(namePrefix.size() > 0 && namePrefix.substr(namePrefix.size() - 1) != utility::conversions::to_string_t("."))
    {
        namePrefix += utility::conversions::to_string_t(".");
    }

    if(multipart->hasContent(utility::conversions::to_string_t("forms.formparagraphpostprocessor.enabled")))
    {
        if(multipart->hasContent(utility::conversions::to_string_t("forms.formparagraphpostprocessor.enabled")))
        {
            std::shared_ptr<ConfigNodePropertyBoolean> newItem(new ConfigNodePropertyBoolean());
            newItem->fromMultiPart(multipart, utility::conversions::to_string_t("forms.formparagraphpostprocessor.enabled."));
            setFormsFormparagraphpostprocessorEnabled( newItem );
        }
    }
    if(multipart->hasContent(utility::conversions::to_string_t("forms.formparagraphpostprocessor.formresourcetypes")))
    {
        if(multipart->hasContent(utility::conversions::to_string_t("forms.formparagraphpostprocessor.formresourcetypes")))
        {
            std::shared_ptr<ConfigNodePropertyArray> newItem(new ConfigNodePropertyArray());
            newItem->fromMultiPart(multipart, utility::conversions::to_string_t("forms.formparagraphpostprocessor.formresourcetypes."));
            setFormsFormparagraphpostprocessorFormresourcetypes( newItem );
        }
    }
}

std::shared_ptr<ConfigNodePropertyBoolean> ComDayCqWcmFoundationFormsImplFormParagraphPostProcessorProperties::getFormsFormparagraphpostprocessorEnabled() const
{
    return m_Forms_formparagraphpostprocessor_enabled;
}


void ComDayCqWcmFoundationFormsImplFormParagraphPostProcessorProperties::setFormsFormparagraphpostprocessorEnabled(std::shared_ptr<ConfigNodePropertyBoolean> value)
{
    m_Forms_formparagraphpostprocessor_enabled = value;
    m_Forms_formparagraphpostprocessor_enabledIsSet = true;
}
bool ComDayCqWcmFoundationFormsImplFormParagraphPostProcessorProperties::formsFormparagraphpostprocessorEnabledIsSet() const
{
    return m_Forms_formparagraphpostprocessor_enabledIsSet;
}

void ComDayCqWcmFoundationFormsImplFormParagraphPostProcessorProperties::unsetForms_formparagraphpostprocessor_enabled()
{
    m_Forms_formparagraphpostprocessor_enabledIsSet = false;
}

std::shared_ptr<ConfigNodePropertyArray> ComDayCqWcmFoundationFormsImplFormParagraphPostProcessorProperties::getFormsFormparagraphpostprocessorFormresourcetypes() const
{
    return m_Forms_formparagraphpostprocessor_formresourcetypes;
}


void ComDayCqWcmFoundationFormsImplFormParagraphPostProcessorProperties::setFormsFormparagraphpostprocessorFormresourcetypes(std::shared_ptr<ConfigNodePropertyArray> value)
{
    m_Forms_formparagraphpostprocessor_formresourcetypes = value;
    m_Forms_formparagraphpostprocessor_formresourcetypesIsSet = true;
}
bool ComDayCqWcmFoundationFormsImplFormParagraphPostProcessorProperties::formsFormparagraphpostprocessorFormresourcetypesIsSet() const
{
    return m_Forms_formparagraphpostprocessor_formresourcetypesIsSet;
}

void ComDayCqWcmFoundationFormsImplFormParagraphPostProcessorProperties::unsetForms_formparagraphpostprocessor_formresourcetypes()
{
    m_Forms_formparagraphpostprocessor_formresourcetypesIsSet = false;
}

}
}
}
}

