/**
* Adobe Experience Manager OSGI config (AEM) API
* Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
*
* OpenAPI spec version: 1.0.0-pre.0
* Contact: opensource@shinesolutions.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
/*
 * ComAdobeCqDamCfmImplComponentComponentConfigImplProperties.h
 *
 * 
 */

#ifndef ComAdobeCqDamCfmImplComponentComponentConfigImplProperties_H_
#define ComAdobeCqDamCfmImplComponentComponentConfigImplProperties_H_


#include "ModelBase.h"

#include "ConfigNodePropertyString.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
/// 
/// </summary>
class  ComAdobeCqDamCfmImplComponentComponentConfigImplProperties
    : public ModelBase
{
public:
    ComAdobeCqDamCfmImplComponentComponentConfigImplProperties();
    virtual ~ComAdobeCqDamCfmImplComponentComponentConfigImplProperties();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    nlohmann::json toJson() const override;
    void fromJson(nlohmann::json& json) override;

    /////////////////////////////////////////////
    /// ComAdobeCqDamCfmImplComponentComponentConfigImplProperties members

    /// <summary>
    /// 
    /// </summary>
    ConfigNodePropertyString getDamCfmComponentResourceType() const;
    void setDamCfmComponentResourceType(ConfigNodePropertyString const& value);
    bool damCfmComponentResourceTypeIsSet() const;
    void unsetDam_cfm_component_resourceType();
    /// <summary>
    /// 
    /// </summary>
    ConfigNodePropertyString getDamCfmComponentFileReferenceProp() const;
    void setDamCfmComponentFileReferenceProp(ConfigNodePropertyString const& value);
    bool damCfmComponentFileReferencePropIsSet() const;
    void unsetDam_cfm_component_fileReferenceProp();
    /// <summary>
    /// 
    /// </summary>
    ConfigNodePropertyString getDamCfmComponentElementsProp() const;
    void setDamCfmComponentElementsProp(ConfigNodePropertyString const& value);
    bool damCfmComponentElementsPropIsSet() const;
    void unsetDam_cfm_component_elementsProp();
    /// <summary>
    /// 
    /// </summary>
    ConfigNodePropertyString getDamCfmComponentVariationProp() const;
    void setDamCfmComponentVariationProp(ConfigNodePropertyString const& value);
    bool damCfmComponentVariationPropIsSet() const;
    void unsetDam_cfm_component_variationProp();

protected:
    ConfigNodePropertyString m_Dam_cfm_component_resourceType;
    bool m_Dam_cfm_component_resourceTypeIsSet;
    ConfigNodePropertyString m_Dam_cfm_component_fileReferenceProp;
    bool m_Dam_cfm_component_fileReferencePropIsSet;
    ConfigNodePropertyString m_Dam_cfm_component_elementsProp;
    bool m_Dam_cfm_component_elementsPropIsSet;
    ConfigNodePropertyString m_Dam_cfm_component_variationProp;
    bool m_Dam_cfm_component_variationPropIsSet;
};

}
}
}
}

#endif /* ComAdobeCqDamCfmImplComponentComponentConfigImplProperties_H_ */
