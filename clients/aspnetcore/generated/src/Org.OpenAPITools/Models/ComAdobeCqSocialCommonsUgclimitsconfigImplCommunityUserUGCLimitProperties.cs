/*
 * Adobe Experience Manager OSGI config (AEM) API
 *
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Linq;
using System.Text;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;

namespace Org.OpenAPITools.Models
{ 
    /// <summary>
    /// 
    /// </summary>
    [DataContract]
    public partial class ComAdobeCqSocialCommonsUgclimitsconfigImplCommunityUserUGCLimitProperties : IEquatable<ComAdobeCqSocialCommonsUgclimitsconfigImplCommunityUserUGCLimitProperties>
    { 
        /// <summary>
        /// Gets or Sets Enable
        /// </summary>
        [DataMember(Name="enable")]
        public ConfigNodePropertyBoolean Enable { get; set; }

        /// <summary>
        /// Gets or Sets UGCLimit
        /// </summary>
        [DataMember(Name="UGCLimit")]
        public ConfigNodePropertyInteger UGCLimit { get; set; }

        /// <summary>
        /// Gets or Sets UgcLimitDuration
        /// </summary>
        [DataMember(Name="ugcLimitDuration")]
        public ConfigNodePropertyInteger UgcLimitDuration { get; set; }

        /// <summary>
        /// Gets or Sets Domains
        /// </summary>
        [DataMember(Name="domains")]
        public ConfigNodePropertyArray Domains { get; set; }

        /// <summary>
        /// Gets or Sets ToList
        /// </summary>
        [DataMember(Name="toList")]
        public ConfigNodePropertyArray ToList { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class ComAdobeCqSocialCommonsUgclimitsconfigImplCommunityUserUGCLimitProperties {\n");
            sb.Append("  Enable: ").Append(Enable).Append("\n");
            sb.Append("  UGCLimit: ").Append(UGCLimit).Append("\n");
            sb.Append("  UgcLimitDuration: ").Append(UgcLimitDuration).Append("\n");
            sb.Append("  Domains: ").Append(Domains).Append("\n");
            sb.Append("  ToList: ").Append(ToList).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="obj">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object obj)
        {
            if (obj is null) return false;
            if (ReferenceEquals(this, obj)) return true;
            return obj.GetType() == GetType() && Equals((ComAdobeCqSocialCommonsUgclimitsconfigImplCommunityUserUGCLimitProperties)obj);
        }

        /// <summary>
        /// Returns true if ComAdobeCqSocialCommonsUgclimitsconfigImplCommunityUserUGCLimitProperties instances are equal
        /// </summary>
        /// <param name="other">Instance of ComAdobeCqSocialCommonsUgclimitsconfigImplCommunityUserUGCLimitProperties to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(ComAdobeCqSocialCommonsUgclimitsconfigImplCommunityUserUGCLimitProperties other)
        {
            if (other is null) return false;
            if (ReferenceEquals(this, other)) return true;

            return 
                (
                    Enable == other.Enable ||
                    Enable != null &&
                    Enable.Equals(other.Enable)
                ) && 
                (
                    UGCLimit == other.UGCLimit ||
                    UGCLimit != null &&
                    UGCLimit.Equals(other.UGCLimit)
                ) && 
                (
                    UgcLimitDuration == other.UgcLimitDuration ||
                    UgcLimitDuration != null &&
                    UgcLimitDuration.Equals(other.UgcLimitDuration)
                ) && 
                (
                    Domains == other.Domains ||
                    Domains != null &&
                    Domains.Equals(other.Domains)
                ) && 
                (
                    ToList == other.ToList ||
                    ToList != null &&
                    ToList.Equals(other.ToList)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                var hashCode = 41;
                // Suitable nullity checks etc, of course :)
                    if (Enable != null)
                    hashCode = hashCode * 59 + Enable.GetHashCode();
                    if (UGCLimit != null)
                    hashCode = hashCode * 59 + UGCLimit.GetHashCode();
                    if (UgcLimitDuration != null)
                    hashCode = hashCode * 59 + UgcLimitDuration.GetHashCode();
                    if (Domains != null)
                    hashCode = hashCode * 59 + Domains.GetHashCode();
                    if (ToList != null)
                    hashCode = hashCode * 59 + ToList.GetHashCode();
                return hashCode;
            }
        }

        #region Operators
        #pragma warning disable 1591

        public static bool operator ==(ComAdobeCqSocialCommonsUgclimitsconfigImplCommunityUserUGCLimitProperties left, ComAdobeCqSocialCommonsUgclimitsconfigImplCommunityUserUGCLimitProperties right)
        {
            return Equals(left, right);
        }

        public static bool operator !=(ComAdobeCqSocialCommonsUgclimitsconfigImplCommunityUserUGCLimitProperties left, ComAdobeCqSocialCommonsUgclimitsconfigImplCommunityUserUGCLimitProperties right)
        {
            return !Equals(left, right);
        }

        #pragma warning restore 1591
        #endregion Operators
    }
}
