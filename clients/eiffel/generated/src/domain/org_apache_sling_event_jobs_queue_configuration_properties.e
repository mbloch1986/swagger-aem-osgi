note
 description:"[
		Adobe Experience Manager OSGI config (AEM) API
 		Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
  		OpenAPI spec version: 1.0.0-pre.0
 	    Contact: opensource@shinesolutions.com

  	NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

 		 Do not edit the class manually.
 	]"
	date: "$Date$"
	revision: "$Revision$"
	EIS:"Eiffel openapi generator", "src=https://openapi-generator.tech", "protocol=uri"
class ORG_APACHE_SLING_EVENT_JOBS_QUEUE_CONFIGURATION_PROPERTIES 

inherit

  ANY
      redefine
          out 
      end


feature --Access

    queue_name: detachable CONFIG_NODE_PROPERTY_STRING 
      
    queue_topics: detachable CONFIG_NODE_PROPERTY_ARRAY 
      
    queue_type: detachable CONFIG_NODE_PROPERTY_DROP_DOWN 
      
    queue_priority: detachable CONFIG_NODE_PROPERTY_DROP_DOWN 
      
    queue_retries: detachable CONFIG_NODE_PROPERTY_INTEGER 
      
    queue_retrydelay: detachable CONFIG_NODE_PROPERTY_INTEGER 
      
    queue_maxparallel: detachable CONFIG_NODE_PROPERTY_FLOAT 
      
    queue_keep_jobs: detachable CONFIG_NODE_PROPERTY_BOOLEAN 
      
    queue_prefer_run_on_creation_instance: detachable CONFIG_NODE_PROPERTY_BOOLEAN 
      
    queue_thread_pool_size: detachable CONFIG_NODE_PROPERTY_INTEGER 
      
    service_ranking: detachable CONFIG_NODE_PROPERTY_INTEGER 
      

feature -- Change Element  
 
    set_queue_name (a_name: like queue_name)
        -- Set 'queue_name' with 'a_name'.
      do
        queue_name := a_name
      ensure
        queue_name_set: queue_name = a_name		
      end

    set_queue_topics (a_name: like queue_topics)
        -- Set 'queue_topics' with 'a_name'.
      do
        queue_topics := a_name
      ensure
        queue_topics_set: queue_topics = a_name		
      end

    set_queue_type (a_name: like queue_type)
        -- Set 'queue_type' with 'a_name'.
      do
        queue_type := a_name
      ensure
        queue_type_set: queue_type = a_name		
      end

    set_queue_priority (a_name: like queue_priority)
        -- Set 'queue_priority' with 'a_name'.
      do
        queue_priority := a_name
      ensure
        queue_priority_set: queue_priority = a_name		
      end

    set_queue_retries (a_name: like queue_retries)
        -- Set 'queue_retries' with 'a_name'.
      do
        queue_retries := a_name
      ensure
        queue_retries_set: queue_retries = a_name		
      end

    set_queue_retrydelay (a_name: like queue_retrydelay)
        -- Set 'queue_retrydelay' with 'a_name'.
      do
        queue_retrydelay := a_name
      ensure
        queue_retrydelay_set: queue_retrydelay = a_name		
      end

    set_queue_maxparallel (a_name: like queue_maxparallel)
        -- Set 'queue_maxparallel' with 'a_name'.
      do
        queue_maxparallel := a_name
      ensure
        queue_maxparallel_set: queue_maxparallel = a_name		
      end

    set_queue_keep_jobs (a_name: like queue_keep_jobs)
        -- Set 'queue_keep_jobs' with 'a_name'.
      do
        queue_keep_jobs := a_name
      ensure
        queue_keep_jobs_set: queue_keep_jobs = a_name		
      end

    set_queue_prefer_run_on_creation_instance (a_name: like queue_prefer_run_on_creation_instance)
        -- Set 'queue_prefer_run_on_creation_instance' with 'a_name'.
      do
        queue_prefer_run_on_creation_instance := a_name
      ensure
        queue_prefer_run_on_creation_instance_set: queue_prefer_run_on_creation_instance = a_name		
      end

    set_queue_thread_pool_size (a_name: like queue_thread_pool_size)
        -- Set 'queue_thread_pool_size' with 'a_name'.
      do
        queue_thread_pool_size := a_name
      ensure
        queue_thread_pool_size_set: queue_thread_pool_size = a_name		
      end

    set_service_ranking (a_name: like service_ranking)
        -- Set 'service_ranking' with 'a_name'.
      do
        service_ranking := a_name
      ensure
        service_ranking_set: service_ranking = a_name		
      end


 feature -- Status Report

    out: STRING
          -- <Precursor>
      do
        create Result.make_empty
        Result.append("%Nclass ORG_APACHE_SLING_EVENT_JOBS_QUEUE_CONFIGURATION_PROPERTIES%N")
        if attached queue_name as l_queue_name then
          Result.append ("%Nqueue_name:")
          Result.append (l_queue_name.out)
          Result.append ("%N")    
        end  
        if attached queue_topics as l_queue_topics then
          Result.append ("%Nqueue_topics:")
          Result.append (l_queue_topics.out)
          Result.append ("%N")    
        end  
        if attached queue_type as l_queue_type then
          Result.append ("%Nqueue_type:")
          Result.append (l_queue_type.out)
          Result.append ("%N")    
        end  
        if attached queue_priority as l_queue_priority then
          Result.append ("%Nqueue_priority:")
          Result.append (l_queue_priority.out)
          Result.append ("%N")    
        end  
        if attached queue_retries as l_queue_retries then
          Result.append ("%Nqueue_retries:")
          Result.append (l_queue_retries.out)
          Result.append ("%N")    
        end  
        if attached queue_retrydelay as l_queue_retrydelay then
          Result.append ("%Nqueue_retrydelay:")
          Result.append (l_queue_retrydelay.out)
          Result.append ("%N")    
        end  
        if attached queue_maxparallel as l_queue_maxparallel then
          Result.append ("%Nqueue_maxparallel:")
          Result.append (l_queue_maxparallel.out)
          Result.append ("%N")    
        end  
        if attached queue_keep_jobs as l_queue_keep_jobs then
          Result.append ("%Nqueue_keep_jobs:")
          Result.append (l_queue_keep_jobs.out)
          Result.append ("%N")    
        end  
        if attached queue_prefer_run_on_creation_instance as l_queue_prefer_run_on_creation_instance then
          Result.append ("%Nqueue_prefer_run_on_creation_instance:")
          Result.append (l_queue_prefer_run_on_creation_instance.out)
          Result.append ("%N")    
        end  
        if attached queue_thread_pool_size as l_queue_thread_pool_size then
          Result.append ("%Nqueue_thread_pool_size:")
          Result.append (l_queue_thread_pool_size.out)
          Result.append ("%N")    
        end  
        if attached service_ranking as l_service_ranking then
          Result.append ("%Nservice_ranking:")
          Result.append (l_service_ranking.out)
          Result.append ("%N")    
        end  
      end
end


