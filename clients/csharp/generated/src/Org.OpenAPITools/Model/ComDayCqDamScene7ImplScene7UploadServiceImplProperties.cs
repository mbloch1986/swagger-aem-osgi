/* 
 * Adobe Experience Manager OSGI config (AEM) API
 *
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Org.OpenAPITools.Client.OpenAPIDateConverter;

namespace Org.OpenAPITools.Model
{
    /// <summary>
    /// ComDayCqDamScene7ImplScene7UploadServiceImplProperties
    /// </summary>
    [DataContract]
    public partial class ComDayCqDamScene7ImplScene7UploadServiceImplProperties :  IEquatable<ComDayCqDamScene7ImplScene7UploadServiceImplProperties>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ComDayCqDamScene7ImplScene7UploadServiceImplProperties" /> class.
        /// </summary>
        /// <param name="cqDamScene7UploadserviceActivejobtimeoutLabel">cqDamScene7UploadserviceActivejobtimeoutLabel.</param>
        /// <param name="cqDamScene7UploadserviceConnectionmaxperrouteLabel">cqDamScene7UploadserviceConnectionmaxperrouteLabel.</param>
        public ComDayCqDamScene7ImplScene7UploadServiceImplProperties(ConfigNodePropertyInteger cqDamScene7UploadserviceActivejobtimeoutLabel = default(ConfigNodePropertyInteger), ConfigNodePropertyInteger cqDamScene7UploadserviceConnectionmaxperrouteLabel = default(ConfigNodePropertyInteger))
        {
            this.CqDamScene7UploadserviceActivejobtimeoutLabel = cqDamScene7UploadserviceActivejobtimeoutLabel;
            this.CqDamScene7UploadserviceConnectionmaxperrouteLabel = cqDamScene7UploadserviceConnectionmaxperrouteLabel;
        }
        
        /// <summary>
        /// Gets or Sets CqDamScene7UploadserviceActivejobtimeoutLabel
        /// </summary>
        [DataMember(Name="cq.dam.scene7.uploadservice.activejobtimeout.label", EmitDefaultValue=false)]
        public ConfigNodePropertyInteger CqDamScene7UploadserviceActivejobtimeoutLabel { get; set; }

        /// <summary>
        /// Gets or Sets CqDamScene7UploadserviceConnectionmaxperrouteLabel
        /// </summary>
        [DataMember(Name="cq.dam.scene7.uploadservice.connectionmaxperroute.label", EmitDefaultValue=false)]
        public ConfigNodePropertyInteger CqDamScene7UploadserviceConnectionmaxperrouteLabel { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class ComDayCqDamScene7ImplScene7UploadServiceImplProperties {\n");
            sb.Append("  CqDamScene7UploadserviceActivejobtimeoutLabel: ").Append(CqDamScene7UploadserviceActivejobtimeoutLabel).Append("\n");
            sb.Append("  CqDamScene7UploadserviceConnectionmaxperrouteLabel: ").Append(CqDamScene7UploadserviceConnectionmaxperrouteLabel).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as ComDayCqDamScene7ImplScene7UploadServiceImplProperties);
        }

        /// <summary>
        /// Returns true if ComDayCqDamScene7ImplScene7UploadServiceImplProperties instances are equal
        /// </summary>
        /// <param name="input">Instance of ComDayCqDamScene7ImplScene7UploadServiceImplProperties to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(ComDayCqDamScene7ImplScene7UploadServiceImplProperties input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.CqDamScene7UploadserviceActivejobtimeoutLabel == input.CqDamScene7UploadserviceActivejobtimeoutLabel ||
                    (this.CqDamScene7UploadserviceActivejobtimeoutLabel != null &&
                    this.CqDamScene7UploadserviceActivejobtimeoutLabel.Equals(input.CqDamScene7UploadserviceActivejobtimeoutLabel))
                ) && 
                (
                    this.CqDamScene7UploadserviceConnectionmaxperrouteLabel == input.CqDamScene7UploadserviceConnectionmaxperrouteLabel ||
                    (this.CqDamScene7UploadserviceConnectionmaxperrouteLabel != null &&
                    this.CqDamScene7UploadserviceConnectionmaxperrouteLabel.Equals(input.CqDamScene7UploadserviceConnectionmaxperrouteLabel))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.CqDamScene7UploadserviceActivejobtimeoutLabel != null)
                    hashCode = hashCode * 59 + this.CqDamScene7UploadserviceActivejobtimeoutLabel.GetHashCode();
                if (this.CqDamScene7UploadserviceConnectionmaxperrouteLabel != null)
                    hashCode = hashCode * 59 + this.CqDamScene7UploadserviceConnectionmaxperrouteLabel.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
