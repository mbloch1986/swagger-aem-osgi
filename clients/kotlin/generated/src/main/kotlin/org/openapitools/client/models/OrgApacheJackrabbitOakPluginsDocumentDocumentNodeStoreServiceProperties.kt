/**
* Adobe Experience Manager OSGI config (AEM) API
* Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
*
* OpenAPI spec version: 1.0.0-pre.0
* Contact: opensource@shinesolutions.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package org.openapitools.client.models

import org.openapitools.client.models.ConfigNodePropertyArray
import org.openapitools.client.models.ConfigNodePropertyBoolean
import org.openapitools.client.models.ConfigNodePropertyDropDown
import org.openapitools.client.models.ConfigNodePropertyInteger
import org.openapitools.client.models.ConfigNodePropertyString

/**
 * 
 * @param mongouri 
 * @param db 
 * @param socketKeepAlive 
 * @param cache 
 * @param nodeCachePercentage 
 * @param prevDocCachePercentage 
 * @param childrenCachePercentage 
 * @param diffCachePercentage 
 * @param cacheSegmentCount 
 * @param cacheStackMoveDistance 
 * @param blobCacheSize 
 * @param persistentCache 
 * @param journalCache 
 * @param customBlobStore 
 * @param journalGCInterval 
 * @param journalGCMaxAge 
 * @param prefetchExternalChanges 
 * @param role 
 * @param versionGcMaxAgeInSecs 
 * @param versionGCExpression 
 * @param versionGCTimeLimitInSecs 
 * @param blobGcMaxAgeInSecs 
 * @param blobTrackSnapshotIntervalInSecs 
 * @param repositoryPeriodhome 
 * @param maxReplicationLagInSecs 
 * @param documentStoreType 
 * @param bundlingDisabled 
 * @param updateLimit 
 * @param persistentCacheIncludes 
 * @param leaseCheckMode 
 */
data class OrgApacheJackrabbitOakPluginsDocumentDocumentNodeStoreServiceProperties (
    val mongouri: ConfigNodePropertyString? = null,
    val db: ConfigNodePropertyString? = null,
    val socketKeepAlive: ConfigNodePropertyBoolean? = null,
    val cache: ConfigNodePropertyInteger? = null,
    val nodeCachePercentage: ConfigNodePropertyInteger? = null,
    val prevDocCachePercentage: ConfigNodePropertyInteger? = null,
    val childrenCachePercentage: ConfigNodePropertyInteger? = null,
    val diffCachePercentage: ConfigNodePropertyInteger? = null,
    val cacheSegmentCount: ConfigNodePropertyInteger? = null,
    val cacheStackMoveDistance: ConfigNodePropertyInteger? = null,
    val blobCacheSize: ConfigNodePropertyInteger? = null,
    val persistentCache: ConfigNodePropertyString? = null,
    val journalCache: ConfigNodePropertyString? = null,
    val customBlobStore: ConfigNodePropertyBoolean? = null,
    val journalGCInterval: ConfigNodePropertyInteger? = null,
    val journalGCMaxAge: ConfigNodePropertyInteger? = null,
    val prefetchExternalChanges: ConfigNodePropertyBoolean? = null,
    val role: ConfigNodePropertyString? = null,
    val versionGcMaxAgeInSecs: ConfigNodePropertyInteger? = null,
    val versionGCExpression: ConfigNodePropertyString? = null,
    val versionGCTimeLimitInSecs: ConfigNodePropertyInteger? = null,
    val blobGcMaxAgeInSecs: ConfigNodePropertyInteger? = null,
    val blobTrackSnapshotIntervalInSecs: ConfigNodePropertyInteger? = null,
    val repositoryPeriodhome: ConfigNodePropertyString? = null,
    val maxReplicationLagInSecs: ConfigNodePropertyInteger? = null,
    val documentStoreType: ConfigNodePropertyDropDown? = null,
    val bundlingDisabled: ConfigNodePropertyBoolean? = null,
    val updateLimit: ConfigNodePropertyInteger? = null,
    val persistentCacheIncludes: ConfigNodePropertyArray? = null,
    val leaseCheckMode: ConfigNodePropertyDropDown? = null
) {

}

