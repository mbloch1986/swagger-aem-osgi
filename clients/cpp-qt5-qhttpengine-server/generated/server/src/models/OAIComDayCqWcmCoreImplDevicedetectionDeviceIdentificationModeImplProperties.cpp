/**
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


#include "OAIComDayCqWcmCoreImplDevicedetectionDeviceIdentificationModeImplProperties.h"

#include "OAIHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace OpenAPI {

OAIComDayCqWcmCoreImplDevicedetectionDeviceIdentificationModeImplProperties::OAIComDayCqWcmCoreImplDevicedetectionDeviceIdentificationModeImplProperties(QString json) {
    this->fromJson(json);
}

OAIComDayCqWcmCoreImplDevicedetectionDeviceIdentificationModeImplProperties::OAIComDayCqWcmCoreImplDevicedetectionDeviceIdentificationModeImplProperties() {
    this->init();
}

OAIComDayCqWcmCoreImplDevicedetectionDeviceIdentificationModeImplProperties::~OAIComDayCqWcmCoreImplDevicedetectionDeviceIdentificationModeImplProperties() {
    
}

void
OAIComDayCqWcmCoreImplDevicedetectionDeviceIdentificationModeImplProperties::init() {
    m_dim_default_mode_isSet = false;
    m_dim_appcache_enabled_isSet = false;
}

void
OAIComDayCqWcmCoreImplDevicedetectionDeviceIdentificationModeImplProperties::fromJson(QString jsonString) {
    QByteArray array (jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void
OAIComDayCqWcmCoreImplDevicedetectionDeviceIdentificationModeImplProperties::fromJsonObject(QJsonObject json) {
    ::OpenAPI::fromJsonValue(dim_default_mode, json[QString("dim.default.mode")]);
    
    ::OpenAPI::fromJsonValue(dim_appcache_enabled, json[QString("dim.appcache.enabled")]);
    
}

QString
OAIComDayCqWcmCoreImplDevicedetectionDeviceIdentificationModeImplProperties::asJson () const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject
OAIComDayCqWcmCoreImplDevicedetectionDeviceIdentificationModeImplProperties::asJsonObject() const {
    QJsonObject obj;
	if(dim_default_mode.isSet()){
        obj.insert(QString("dim.default.mode"), ::OpenAPI::toJsonValue(dim_default_mode));
    }
	if(dim_appcache_enabled.isSet()){
        obj.insert(QString("dim.appcache.enabled"), ::OpenAPI::toJsonValue(dim_appcache_enabled));
    }
    return obj;
}

OAIConfigNodePropertyDropDown
OAIComDayCqWcmCoreImplDevicedetectionDeviceIdentificationModeImplProperties::getDimDefaultMode() const {
    return dim_default_mode;
}
void
OAIComDayCqWcmCoreImplDevicedetectionDeviceIdentificationModeImplProperties::setDimDefaultMode(const OAIConfigNodePropertyDropDown &dim_default_mode) {
    this->dim_default_mode = dim_default_mode;
    this->m_dim_default_mode_isSet = true;
}

OAIConfigNodePropertyBoolean
OAIComDayCqWcmCoreImplDevicedetectionDeviceIdentificationModeImplProperties::getDimAppcacheEnabled() const {
    return dim_appcache_enabled;
}
void
OAIComDayCqWcmCoreImplDevicedetectionDeviceIdentificationModeImplProperties::setDimAppcacheEnabled(const OAIConfigNodePropertyBoolean &dim_appcache_enabled) {
    this->dim_appcache_enabled = dim_appcache_enabled;
    this->m_dim_appcache_enabled_isSet = true;
}


bool
OAIComDayCqWcmCoreImplDevicedetectionDeviceIdentificationModeImplProperties::isSet() const {
    bool isObjectUpdated = false;
    do{ 
        if(dim_default_mode.isSet()){ isObjectUpdated = true; break;}
    
        if(dim_appcache_enabled.isSet()){ isObjectUpdated = true; break;}
    }while(false);
    return isObjectUpdated;
}

}

