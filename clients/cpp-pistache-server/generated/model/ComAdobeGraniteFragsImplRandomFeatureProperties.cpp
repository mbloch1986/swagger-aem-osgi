/**
* Adobe Experience Manager OSGI config (AEM) API
* Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
*
* OpenAPI spec version: 1.0.0-pre.0
* Contact: opensource@shinesolutions.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/


#include "ComAdobeGraniteFragsImplRandomFeatureProperties.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

ComAdobeGraniteFragsImplRandomFeatureProperties::ComAdobeGraniteFragsImplRandomFeatureProperties()
{
    m_Feature_nameIsSet = false;
    m_Feature_descriptionIsSet = false;
    m_Active_percentageIsSet = false;
    m_Cookie_nameIsSet = false;
    m_Cookie_maxAgeIsSet = false;
    
}

ComAdobeGraniteFragsImplRandomFeatureProperties::~ComAdobeGraniteFragsImplRandomFeatureProperties()
{
}

void ComAdobeGraniteFragsImplRandomFeatureProperties::validate()
{
    // TODO: implement validation
}

nlohmann::json ComAdobeGraniteFragsImplRandomFeatureProperties::toJson() const
{
    nlohmann::json val = nlohmann::json::object();

    if(m_Feature_nameIsSet)
    {
        val["feature.name"] = ModelBase::toJson(m_Feature_name);
    }
    if(m_Feature_descriptionIsSet)
    {
        val["feature.description"] = ModelBase::toJson(m_Feature_description);
    }
    if(m_Active_percentageIsSet)
    {
        val["active.percentage"] = ModelBase::toJson(m_Active_percentage);
    }
    if(m_Cookie_nameIsSet)
    {
        val["cookie.name"] = ModelBase::toJson(m_Cookie_name);
    }
    if(m_Cookie_maxAgeIsSet)
    {
        val["cookie.maxAge"] = ModelBase::toJson(m_Cookie_maxAge);
    }
    

    return val;
}

void ComAdobeGraniteFragsImplRandomFeatureProperties::fromJson(nlohmann::json& val)
{
    if(val.find("feature.name") != val.end())
    {
        if(!val["feature.name"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["feature.name"]);
            setFeatureName( newItem );
        }
        
    }
    if(val.find("feature.description") != val.end())
    {
        if(!val["feature.description"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["feature.description"]);
            setFeatureDescription( newItem );
        }
        
    }
    if(val.find("active.percentage") != val.end())
    {
        if(!val["active.percentage"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["active.percentage"]);
            setActivePercentage( newItem );
        }
        
    }
    if(val.find("cookie.name") != val.end())
    {
        if(!val["cookie.name"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["cookie.name"]);
            setCookieName( newItem );
        }
        
    }
    if(val.find("cookie.maxAge") != val.end())
    {
        if(!val["cookie.maxAge"].is_null())
        {
            ConfigNodePropertyInteger newItem;
            newItem.fromJson(val["cookie.maxAge"]);
            setCookieMaxAge( newItem );
        }
        
    }
    
}


ConfigNodePropertyString ComAdobeGraniteFragsImplRandomFeatureProperties::getFeatureName() const
{
    return m_Feature_name;
}
void ComAdobeGraniteFragsImplRandomFeatureProperties::setFeatureName(ConfigNodePropertyString const& value)
{
    m_Feature_name = value;
    m_Feature_nameIsSet = true;
}
bool ComAdobeGraniteFragsImplRandomFeatureProperties::featureNameIsSet() const
{
    return m_Feature_nameIsSet;
}
void ComAdobeGraniteFragsImplRandomFeatureProperties::unsetFeature_name()
{
    m_Feature_nameIsSet = false;
}
ConfigNodePropertyString ComAdobeGraniteFragsImplRandomFeatureProperties::getFeatureDescription() const
{
    return m_Feature_description;
}
void ComAdobeGraniteFragsImplRandomFeatureProperties::setFeatureDescription(ConfigNodePropertyString const& value)
{
    m_Feature_description = value;
    m_Feature_descriptionIsSet = true;
}
bool ComAdobeGraniteFragsImplRandomFeatureProperties::featureDescriptionIsSet() const
{
    return m_Feature_descriptionIsSet;
}
void ComAdobeGraniteFragsImplRandomFeatureProperties::unsetFeature_description()
{
    m_Feature_descriptionIsSet = false;
}
ConfigNodePropertyString ComAdobeGraniteFragsImplRandomFeatureProperties::getActivePercentage() const
{
    return m_Active_percentage;
}
void ComAdobeGraniteFragsImplRandomFeatureProperties::setActivePercentage(ConfigNodePropertyString const& value)
{
    m_Active_percentage = value;
    m_Active_percentageIsSet = true;
}
bool ComAdobeGraniteFragsImplRandomFeatureProperties::activePercentageIsSet() const
{
    return m_Active_percentageIsSet;
}
void ComAdobeGraniteFragsImplRandomFeatureProperties::unsetActive_percentage()
{
    m_Active_percentageIsSet = false;
}
ConfigNodePropertyString ComAdobeGraniteFragsImplRandomFeatureProperties::getCookieName() const
{
    return m_Cookie_name;
}
void ComAdobeGraniteFragsImplRandomFeatureProperties::setCookieName(ConfigNodePropertyString const& value)
{
    m_Cookie_name = value;
    m_Cookie_nameIsSet = true;
}
bool ComAdobeGraniteFragsImplRandomFeatureProperties::cookieNameIsSet() const
{
    return m_Cookie_nameIsSet;
}
void ComAdobeGraniteFragsImplRandomFeatureProperties::unsetCookie_name()
{
    m_Cookie_nameIsSet = false;
}
ConfigNodePropertyInteger ComAdobeGraniteFragsImplRandomFeatureProperties::getCookieMaxAge() const
{
    return m_Cookie_maxAge;
}
void ComAdobeGraniteFragsImplRandomFeatureProperties::setCookieMaxAge(ConfigNodePropertyInteger const& value)
{
    m_Cookie_maxAge = value;
    m_Cookie_maxAgeIsSet = true;
}
bool ComAdobeGraniteFragsImplRandomFeatureProperties::cookieMaxAgeIsSet() const
{
    return m_Cookie_maxAgeIsSet;
}
void ComAdobeGraniteFragsImplRandomFeatureProperties::unsetCookie_maxAge()
{
    m_Cookie_maxAgeIsSet = false;
}

}
}
}
}

