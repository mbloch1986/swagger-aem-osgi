/**
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


#include "OAIComAdobeGraniteAuthOauthImplDefaultTokenValidatorImplProperties.h"

#include "OAIHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace OpenAPI {

OAIComAdobeGraniteAuthOauthImplDefaultTokenValidatorImplProperties::OAIComAdobeGraniteAuthOauthImplDefaultTokenValidatorImplProperties(QString json) {
    init();
    this->fromJson(json);
}

OAIComAdobeGraniteAuthOauthImplDefaultTokenValidatorImplProperties::OAIComAdobeGraniteAuthOauthImplDefaultTokenValidatorImplProperties() {
    init();
}

OAIComAdobeGraniteAuthOauthImplDefaultTokenValidatorImplProperties::~OAIComAdobeGraniteAuthOauthImplDefaultTokenValidatorImplProperties() {
    this->cleanup();
}

void
OAIComAdobeGraniteAuthOauthImplDefaultTokenValidatorImplProperties::init() {
    auth_token_validator_type = new OAIConfigNodePropertyString();
    m_auth_token_validator_type_isSet = false;
}

void
OAIComAdobeGraniteAuthOauthImplDefaultTokenValidatorImplProperties::cleanup() {
    if(auth_token_validator_type != nullptr) { 
        delete auth_token_validator_type;
    }
}

OAIComAdobeGraniteAuthOauthImplDefaultTokenValidatorImplProperties*
OAIComAdobeGraniteAuthOauthImplDefaultTokenValidatorImplProperties::fromJson(QString json) {
    QByteArray array (json.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
    return this;
}

void
OAIComAdobeGraniteAuthOauthImplDefaultTokenValidatorImplProperties::fromJsonObject(QJsonObject pJson) {
    ::OpenAPI::setValue(&auth_token_validator_type, pJson["auth.token.validator.type"], "OAIConfigNodePropertyString", "OAIConfigNodePropertyString");
    
}

QString
OAIComAdobeGraniteAuthOauthImplDefaultTokenValidatorImplProperties::asJson ()
{
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject
OAIComAdobeGraniteAuthOauthImplDefaultTokenValidatorImplProperties::asJsonObject() {
    QJsonObject obj;
    if((auth_token_validator_type != nullptr) && (auth_token_validator_type->isSet())){
        toJsonValue(QString("auth.token.validator.type"), auth_token_validator_type, obj, QString("OAIConfigNodePropertyString"));
    }

    return obj;
}

OAIConfigNodePropertyString*
OAIComAdobeGraniteAuthOauthImplDefaultTokenValidatorImplProperties::getAuthTokenValidatorType() {
    return auth_token_validator_type;
}
void
OAIComAdobeGraniteAuthOauthImplDefaultTokenValidatorImplProperties::setAuthTokenValidatorType(OAIConfigNodePropertyString* auth_token_validator_type) {
    this->auth_token_validator_type = auth_token_validator_type;
    this->m_auth_token_validator_type_isSet = true;
}


bool
OAIComAdobeGraniteAuthOauthImplDefaultTokenValidatorImplProperties::isSet(){
    bool isObjectUpdated = false;
    do{
        if(auth_token_validator_type != nullptr && auth_token_validator_type->isSet()){ isObjectUpdated = true; break;}
    }while(false);
    return isObjectUpdated;
}
}

