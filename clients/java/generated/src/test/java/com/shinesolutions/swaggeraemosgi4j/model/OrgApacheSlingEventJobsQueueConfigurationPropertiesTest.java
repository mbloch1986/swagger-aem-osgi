/*
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.shinesolutions.swaggeraemosgi4j.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.shinesolutions.swaggeraemosgi4j.model.ConfigNodePropertyArray;
import com.shinesolutions.swaggeraemosgi4j.model.ConfigNodePropertyBoolean;
import com.shinesolutions.swaggeraemosgi4j.model.ConfigNodePropertyDropDown;
import com.shinesolutions.swaggeraemosgi4j.model.ConfigNodePropertyFloat;
import com.shinesolutions.swaggeraemosgi4j.model.ConfigNodePropertyInteger;
import com.shinesolutions.swaggeraemosgi4j.model.ConfigNodePropertyString;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import org.junit.Assert;
import org.junit.Ignore;
import org.junit.Test;


/**
 * Model tests for OrgApacheSlingEventJobsQueueConfigurationProperties
 */
public class OrgApacheSlingEventJobsQueueConfigurationPropertiesTest {
    private final OrgApacheSlingEventJobsQueueConfigurationProperties model = new OrgApacheSlingEventJobsQueueConfigurationProperties();

    /**
     * Model tests for OrgApacheSlingEventJobsQueueConfigurationProperties
     */
    @Test
    public void testOrgApacheSlingEventJobsQueueConfigurationProperties() {
        // TODO: test OrgApacheSlingEventJobsQueueConfigurationProperties
    }

    /**
     * Test the property 'queueName'
     */
    @Test
    public void queueNameTest() {
        // TODO: test queueName
    }

    /**
     * Test the property 'queueTopics'
     */
    @Test
    public void queueTopicsTest() {
        // TODO: test queueTopics
    }

    /**
     * Test the property 'queueType'
     */
    @Test
    public void queueTypeTest() {
        // TODO: test queueType
    }

    /**
     * Test the property 'queuePriority'
     */
    @Test
    public void queuePriorityTest() {
        // TODO: test queuePriority
    }

    /**
     * Test the property 'queueRetries'
     */
    @Test
    public void queueRetriesTest() {
        // TODO: test queueRetries
    }

    /**
     * Test the property 'queueRetrydelay'
     */
    @Test
    public void queueRetrydelayTest() {
        // TODO: test queueRetrydelay
    }

    /**
     * Test the property 'queueMaxparallel'
     */
    @Test
    public void queueMaxparallelTest() {
        // TODO: test queueMaxparallel
    }

    /**
     * Test the property 'queueKeepJobs'
     */
    @Test
    public void queueKeepJobsTest() {
        // TODO: test queueKeepJobs
    }

    /**
     * Test the property 'queuePreferRunOnCreationInstance'
     */
    @Test
    public void queuePreferRunOnCreationInstanceTest() {
        // TODO: test queuePreferRunOnCreationInstance
    }

    /**
     * Test the property 'queueThreadPoolSize'
     */
    @Test
    public void queueThreadPoolSizeTest() {
        // TODO: test queueThreadPoolSize
    }

    /**
     * Test the property 'serviceRanking'
     */
    @Test
    public void serviceRankingTest() {
        // TODO: test serviceRanking
    }

}
