/**
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


#include "OAIComDayCqSearchImplBuilderQueryBuilderImplProperties.h"

#include "OAIHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace OpenAPI {

OAIComDayCqSearchImplBuilderQueryBuilderImplProperties::OAIComDayCqSearchImplBuilderQueryBuilderImplProperties(QString json) {
    init();
    this->fromJson(json);
}

OAIComDayCqSearchImplBuilderQueryBuilderImplProperties::OAIComDayCqSearchImplBuilderQueryBuilderImplProperties() {
    init();
}

OAIComDayCqSearchImplBuilderQueryBuilderImplProperties::~OAIComDayCqSearchImplBuilderQueryBuilderImplProperties() {
    this->cleanup();
}

void
OAIComDayCqSearchImplBuilderQueryBuilderImplProperties::init() {
    excerpt_properties = new OAIConfigNodePropertyArray();
    m_excerpt_properties_isSet = false;
    cache_max_entries = new OAIConfigNodePropertyInteger();
    m_cache_max_entries_isSet = false;
    cache_entry_lifetime = new OAIConfigNodePropertyInteger();
    m_cache_entry_lifetime_isSet = false;
    xpath_union = new OAIConfigNodePropertyBoolean();
    m_xpath_union_isSet = false;
}

void
OAIComDayCqSearchImplBuilderQueryBuilderImplProperties::cleanup() {
    if(excerpt_properties != nullptr) { 
        delete excerpt_properties;
    }
    if(cache_max_entries != nullptr) { 
        delete cache_max_entries;
    }
    if(cache_entry_lifetime != nullptr) { 
        delete cache_entry_lifetime;
    }
    if(xpath_union != nullptr) { 
        delete xpath_union;
    }
}

OAIComDayCqSearchImplBuilderQueryBuilderImplProperties*
OAIComDayCqSearchImplBuilderQueryBuilderImplProperties::fromJson(QString json) {
    QByteArray array (json.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
    return this;
}

void
OAIComDayCqSearchImplBuilderQueryBuilderImplProperties::fromJsonObject(QJsonObject pJson) {
    ::OpenAPI::setValue(&excerpt_properties, pJson["excerpt.properties"], "OAIConfigNodePropertyArray", "OAIConfigNodePropertyArray");
    
    ::OpenAPI::setValue(&cache_max_entries, pJson["cache.max.entries"], "OAIConfigNodePropertyInteger", "OAIConfigNodePropertyInteger");
    
    ::OpenAPI::setValue(&cache_entry_lifetime, pJson["cache.entry.lifetime"], "OAIConfigNodePropertyInteger", "OAIConfigNodePropertyInteger");
    
    ::OpenAPI::setValue(&xpath_union, pJson["xpath.union"], "OAIConfigNodePropertyBoolean", "OAIConfigNodePropertyBoolean");
    
}

QString
OAIComDayCqSearchImplBuilderQueryBuilderImplProperties::asJson ()
{
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject
OAIComDayCqSearchImplBuilderQueryBuilderImplProperties::asJsonObject() {
    QJsonObject obj;
    if((excerpt_properties != nullptr) && (excerpt_properties->isSet())){
        toJsonValue(QString("excerpt.properties"), excerpt_properties, obj, QString("OAIConfigNodePropertyArray"));
    }
    if((cache_max_entries != nullptr) && (cache_max_entries->isSet())){
        toJsonValue(QString("cache.max.entries"), cache_max_entries, obj, QString("OAIConfigNodePropertyInteger"));
    }
    if((cache_entry_lifetime != nullptr) && (cache_entry_lifetime->isSet())){
        toJsonValue(QString("cache.entry.lifetime"), cache_entry_lifetime, obj, QString("OAIConfigNodePropertyInteger"));
    }
    if((xpath_union != nullptr) && (xpath_union->isSet())){
        toJsonValue(QString("xpath.union"), xpath_union, obj, QString("OAIConfigNodePropertyBoolean"));
    }

    return obj;
}

OAIConfigNodePropertyArray*
OAIComDayCqSearchImplBuilderQueryBuilderImplProperties::getExcerptProperties() {
    return excerpt_properties;
}
void
OAIComDayCqSearchImplBuilderQueryBuilderImplProperties::setExcerptProperties(OAIConfigNodePropertyArray* excerpt_properties) {
    this->excerpt_properties = excerpt_properties;
    this->m_excerpt_properties_isSet = true;
}

OAIConfigNodePropertyInteger*
OAIComDayCqSearchImplBuilderQueryBuilderImplProperties::getCacheMaxEntries() {
    return cache_max_entries;
}
void
OAIComDayCqSearchImplBuilderQueryBuilderImplProperties::setCacheMaxEntries(OAIConfigNodePropertyInteger* cache_max_entries) {
    this->cache_max_entries = cache_max_entries;
    this->m_cache_max_entries_isSet = true;
}

OAIConfigNodePropertyInteger*
OAIComDayCqSearchImplBuilderQueryBuilderImplProperties::getCacheEntryLifetime() {
    return cache_entry_lifetime;
}
void
OAIComDayCqSearchImplBuilderQueryBuilderImplProperties::setCacheEntryLifetime(OAIConfigNodePropertyInteger* cache_entry_lifetime) {
    this->cache_entry_lifetime = cache_entry_lifetime;
    this->m_cache_entry_lifetime_isSet = true;
}

OAIConfigNodePropertyBoolean*
OAIComDayCqSearchImplBuilderQueryBuilderImplProperties::getXpathUnion() {
    return xpath_union;
}
void
OAIComDayCqSearchImplBuilderQueryBuilderImplProperties::setXpathUnion(OAIConfigNodePropertyBoolean* xpath_union) {
    this->xpath_union = xpath_union;
    this->m_xpath_union_isSet = true;
}


bool
OAIComDayCqSearchImplBuilderQueryBuilderImplProperties::isSet(){
    bool isObjectUpdated = false;
    do{
        if(excerpt_properties != nullptr && excerpt_properties->isSet()){ isObjectUpdated = true; break;}
        if(cache_max_entries != nullptr && cache_max_entries->isSet()){ isObjectUpdated = true; break;}
        if(cache_entry_lifetime != nullptr && cache_entry_lifetime->isSet()){ isObjectUpdated = true; break;}
        if(xpath_union != nullptr && xpath_union->isSet()){ isObjectUpdated = true; break;}
    }while(false);
    return isObjectUpdated;
}
}

