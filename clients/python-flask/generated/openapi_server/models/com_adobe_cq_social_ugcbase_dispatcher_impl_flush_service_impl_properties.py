# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server.models.config_node_property_integer import ConfigNodePropertyInteger  # noqa: F401,E501
from openapi_server import util


class ComAdobeCqSocialUgcbaseDispatcherImplFlushServiceImplProperties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, thread_pool_size: ConfigNodePropertyInteger=None, delay_time: ConfigNodePropertyInteger=None, worker_sleep_time: ConfigNodePropertyInteger=None):  # noqa: E501
        """ComAdobeCqSocialUgcbaseDispatcherImplFlushServiceImplProperties - a model defined in OpenAPI

        :param thread_pool_size: The thread_pool_size of this ComAdobeCqSocialUgcbaseDispatcherImplFlushServiceImplProperties.  # noqa: E501
        :type thread_pool_size: ConfigNodePropertyInteger
        :param delay_time: The delay_time of this ComAdobeCqSocialUgcbaseDispatcherImplFlushServiceImplProperties.  # noqa: E501
        :type delay_time: ConfigNodePropertyInteger
        :param worker_sleep_time: The worker_sleep_time of this ComAdobeCqSocialUgcbaseDispatcherImplFlushServiceImplProperties.  # noqa: E501
        :type worker_sleep_time: ConfigNodePropertyInteger
        """
        self.openapi_types = {
            'thread_pool_size': ConfigNodePropertyInteger,
            'delay_time': ConfigNodePropertyInteger,
            'worker_sleep_time': ConfigNodePropertyInteger
        }

        self.attribute_map = {
            'thread_pool_size': 'threadPoolSize',
            'delay_time': 'delayTime',
            'worker_sleep_time': 'workerSleepTime'
        }

        self._thread_pool_size = thread_pool_size
        self._delay_time = delay_time
        self._worker_sleep_time = worker_sleep_time

    @classmethod
    def from_dict(cls, dikt) -> 'ComAdobeCqSocialUgcbaseDispatcherImplFlushServiceImplProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The comAdobeCqSocialUgcbaseDispatcherImplFlushServiceImplProperties of this ComAdobeCqSocialUgcbaseDispatcherImplFlushServiceImplProperties.  # noqa: E501
        :rtype: ComAdobeCqSocialUgcbaseDispatcherImplFlushServiceImplProperties
        """
        return util.deserialize_model(dikt, cls)

    @property
    def thread_pool_size(self) -> ConfigNodePropertyInteger:
        """Gets the thread_pool_size of this ComAdobeCqSocialUgcbaseDispatcherImplFlushServiceImplProperties.


        :return: The thread_pool_size of this ComAdobeCqSocialUgcbaseDispatcherImplFlushServiceImplProperties.
        :rtype: ConfigNodePropertyInteger
        """
        return self._thread_pool_size

    @thread_pool_size.setter
    def thread_pool_size(self, thread_pool_size: ConfigNodePropertyInteger):
        """Sets the thread_pool_size of this ComAdobeCqSocialUgcbaseDispatcherImplFlushServiceImplProperties.


        :param thread_pool_size: The thread_pool_size of this ComAdobeCqSocialUgcbaseDispatcherImplFlushServiceImplProperties.
        :type thread_pool_size: ConfigNodePropertyInteger
        """

        self._thread_pool_size = thread_pool_size

    @property
    def delay_time(self) -> ConfigNodePropertyInteger:
        """Gets the delay_time of this ComAdobeCqSocialUgcbaseDispatcherImplFlushServiceImplProperties.


        :return: The delay_time of this ComAdobeCqSocialUgcbaseDispatcherImplFlushServiceImplProperties.
        :rtype: ConfigNodePropertyInteger
        """
        return self._delay_time

    @delay_time.setter
    def delay_time(self, delay_time: ConfigNodePropertyInteger):
        """Sets the delay_time of this ComAdobeCqSocialUgcbaseDispatcherImplFlushServiceImplProperties.


        :param delay_time: The delay_time of this ComAdobeCqSocialUgcbaseDispatcherImplFlushServiceImplProperties.
        :type delay_time: ConfigNodePropertyInteger
        """

        self._delay_time = delay_time

    @property
    def worker_sleep_time(self) -> ConfigNodePropertyInteger:
        """Gets the worker_sleep_time of this ComAdobeCqSocialUgcbaseDispatcherImplFlushServiceImplProperties.


        :return: The worker_sleep_time of this ComAdobeCqSocialUgcbaseDispatcherImplFlushServiceImplProperties.
        :rtype: ConfigNodePropertyInteger
        """
        return self._worker_sleep_time

    @worker_sleep_time.setter
    def worker_sleep_time(self, worker_sleep_time: ConfigNodePropertyInteger):
        """Sets the worker_sleep_time of this ComAdobeCqSocialUgcbaseDispatcherImplFlushServiceImplProperties.


        :param worker_sleep_time: The worker_sleep_time of this ComAdobeCqSocialUgcbaseDispatcherImplFlushServiceImplProperties.
        :type worker_sleep_time: ConfigNodePropertyInteger
        """

        self._worker_sleep_time = worker_sleep_time
