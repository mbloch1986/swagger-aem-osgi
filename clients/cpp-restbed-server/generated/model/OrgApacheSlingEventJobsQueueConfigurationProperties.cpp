/**
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 3.2.1-SNAPSHOT.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */



#include "OrgApacheSlingEventJobsQueueConfigurationProperties.h"

#include <string>
#include <sstream>
#include <boost/property_tree/ptree.hpp>
#include <boost/property_tree/json_parser.hpp>

using boost::property_tree::ptree;
using boost::property_tree::read_json;
using boost::property_tree::write_json;

namespace org {
namespace openapitools {
namespace server {
namespace model {

OrgApacheSlingEventJobsQueueConfigurationProperties::OrgApacheSlingEventJobsQueueConfigurationProperties()
{
    
}

OrgApacheSlingEventJobsQueueConfigurationProperties::~OrgApacheSlingEventJobsQueueConfigurationProperties()
{
}

std::string OrgApacheSlingEventJobsQueueConfigurationProperties::toJsonString()
{
	std::stringstream ss;
	ptree pt;
	write_json(ss, pt, false);
	return ss.str();
}

void OrgApacheSlingEventJobsQueueConfigurationProperties::fromJsonString(std::string const& jsonString)
{
	std::stringstream ss(jsonString);
	ptree pt;
	read_json(ss,pt);
}

std::shared_ptr<ConfigNodePropertyString> OrgApacheSlingEventJobsQueueConfigurationProperties::getQueueName() const
{
    return m_Queue_name;
}
void OrgApacheSlingEventJobsQueueConfigurationProperties::setQueueName(std::shared_ptr<ConfigNodePropertyString> value)
{
    m_Queue_name = value;
}
std::shared_ptr<ConfigNodePropertyArray> OrgApacheSlingEventJobsQueueConfigurationProperties::getQueueTopics() const
{
    return m_Queue_topics;
}
void OrgApacheSlingEventJobsQueueConfigurationProperties::setQueueTopics(std::shared_ptr<ConfigNodePropertyArray> value)
{
    m_Queue_topics = value;
}
std::shared_ptr<ConfigNodePropertyDropDown> OrgApacheSlingEventJobsQueueConfigurationProperties::getQueueType() const
{
    return m_Queue_type;
}
void OrgApacheSlingEventJobsQueueConfigurationProperties::setQueueType(std::shared_ptr<ConfigNodePropertyDropDown> value)
{
    m_Queue_type = value;
}
std::shared_ptr<ConfigNodePropertyDropDown> OrgApacheSlingEventJobsQueueConfigurationProperties::getQueuePriority() const
{
    return m_Queue_priority;
}
void OrgApacheSlingEventJobsQueueConfigurationProperties::setQueuePriority(std::shared_ptr<ConfigNodePropertyDropDown> value)
{
    m_Queue_priority = value;
}
std::shared_ptr<ConfigNodePropertyInteger> OrgApacheSlingEventJobsQueueConfigurationProperties::getQueueRetries() const
{
    return m_Queue_retries;
}
void OrgApacheSlingEventJobsQueueConfigurationProperties::setQueueRetries(std::shared_ptr<ConfigNodePropertyInteger> value)
{
    m_Queue_retries = value;
}
std::shared_ptr<ConfigNodePropertyInteger> OrgApacheSlingEventJobsQueueConfigurationProperties::getQueueRetrydelay() const
{
    return m_Queue_retrydelay;
}
void OrgApacheSlingEventJobsQueueConfigurationProperties::setQueueRetrydelay(std::shared_ptr<ConfigNodePropertyInteger> value)
{
    m_Queue_retrydelay = value;
}
std::shared_ptr<ConfigNodePropertyFloat> OrgApacheSlingEventJobsQueueConfigurationProperties::getQueueMaxparallel() const
{
    return m_Queue_maxparallel;
}
void OrgApacheSlingEventJobsQueueConfigurationProperties::setQueueMaxparallel(std::shared_ptr<ConfigNodePropertyFloat> value)
{
    m_Queue_maxparallel = value;
}
std::shared_ptr<ConfigNodePropertyBoolean> OrgApacheSlingEventJobsQueueConfigurationProperties::getQueueKeepJobs() const
{
    return m_Queue_keepJobs;
}
void OrgApacheSlingEventJobsQueueConfigurationProperties::setQueueKeepJobs(std::shared_ptr<ConfigNodePropertyBoolean> value)
{
    m_Queue_keepJobs = value;
}
std::shared_ptr<ConfigNodePropertyBoolean> OrgApacheSlingEventJobsQueueConfigurationProperties::getQueuePreferRunOnCreationInstance() const
{
    return m_Queue_preferRunOnCreationInstance;
}
void OrgApacheSlingEventJobsQueueConfigurationProperties::setQueuePreferRunOnCreationInstance(std::shared_ptr<ConfigNodePropertyBoolean> value)
{
    m_Queue_preferRunOnCreationInstance = value;
}
std::shared_ptr<ConfigNodePropertyInteger> OrgApacheSlingEventJobsQueueConfigurationProperties::getQueueThreadPoolSize() const
{
    return m_Queue_threadPoolSize;
}
void OrgApacheSlingEventJobsQueueConfigurationProperties::setQueueThreadPoolSize(std::shared_ptr<ConfigNodePropertyInteger> value)
{
    m_Queue_threadPoolSize = value;
}
std::shared_ptr<ConfigNodePropertyInteger> OrgApacheSlingEventJobsQueueConfigurationProperties::getServiceRanking() const
{
    return m_Service_ranking;
}
void OrgApacheSlingEventJobsQueueConfigurationProperties::setServiceRanking(std::shared_ptr<ConfigNodePropertyInteger> value)
{
    m_Service_ranking = value;
}

}
}
}
}

