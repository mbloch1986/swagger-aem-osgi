note
 description:"[
		Adobe Experience Manager OSGI config (AEM) API
 		Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
  		OpenAPI spec version: 1.0.0-pre.0
 	    Contact: opensource@shinesolutions.com

  	NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

 		 Do not edit the class manually.
 	]"
	date: "$Date$"
	revision: "$Revision$"
	EIS:"Eiffel openapi generator", "src=https://openapi-generator.tech", "protocol=uri"
class COM_ADOBE_CQ_SOCIAL_REPORTING_ANALYTICS_SERVICES_IMPL_SITE_TREND_REPORT_S_PROPERTIES 

inherit

  ANY
      redefine
          out 
      end


feature --Access

    cq_social_console_analytics_sites_mapping: detachable CONFIG_NODE_PROPERTY_ARRAY 
      
    priority: detachable CONFIG_NODE_PROPERTY_INTEGER 
      

feature -- Change Element  
 
    set_cq_social_console_analytics_sites_mapping (a_name: like cq_social_console_analytics_sites_mapping)
        -- Set 'cq_social_console_analytics_sites_mapping' with 'a_name'.
      do
        cq_social_console_analytics_sites_mapping := a_name
      ensure
        cq_social_console_analytics_sites_mapping_set: cq_social_console_analytics_sites_mapping = a_name		
      end

    set_priority (a_name: like priority)
        -- Set 'priority' with 'a_name'.
      do
        priority := a_name
      ensure
        priority_set: priority = a_name		
      end


 feature -- Status Report

    out: STRING
          -- <Precursor>
      do
        create Result.make_empty
        Result.append("%Nclass COM_ADOBE_CQ_SOCIAL_REPORTING_ANALYTICS_SERVICES_IMPL_SITE_TREND_REPORT_S_PROPERTIES%N")
        if attached cq_social_console_analytics_sites_mapping as l_cq_social_console_analytics_sites_mapping then
          Result.append ("%Ncq_social_console_analytics_sites_mapping:")
          Result.append (l_cq_social_console_analytics_sites_mapping.out)
          Result.append ("%N")    
        end  
        if attached priority as l_priority then
          Result.append ("%Npriority:")
          Result.append (l_priority.out)
          Result.append ("%N")    
        end  
      end
end


