/**
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIComAdobeGraniteThreaddumpThreadDumpCollectorProperties.h
 *
 * 
 */

#ifndef OAIComAdobeGraniteThreaddumpThreadDumpCollectorProperties_H_
#define OAIComAdobeGraniteThreaddumpThreadDumpCollectorProperties_H_

#include <QJsonObject>


#include "OAIOAIConfigNodePropertyBoolean.h"
#include "OAIOAIConfigNodePropertyDropDown.h"
#include "OAIOAIConfigNodePropertyInteger.h"
#include "OAIOAIConfigNodePropertyString.h"

#include "OAIObject.h"

namespace OpenAPI {

class OAIComAdobeGraniteThreaddumpThreadDumpCollectorProperties: public OAIObject {
public:
    OAIComAdobeGraniteThreaddumpThreadDumpCollectorProperties();
    OAIComAdobeGraniteThreaddumpThreadDumpCollectorProperties(QString json);
    ~OAIComAdobeGraniteThreaddumpThreadDumpCollectorProperties();
    void init();
    void cleanup();

    QString asJson () override;
    QJsonObject asJsonObject() override;
    void fromJsonObject(QJsonObject json) override;
    OAIComAdobeGraniteThreaddumpThreadDumpCollectorProperties* fromJson(QString jsonString) override;

    OAIConfigNodePropertyInteger* getSchedulerPeriod();
    void setSchedulerPeriod(OAIConfigNodePropertyInteger* scheduler_period);

    OAIConfigNodePropertyDropDown* getSchedulerRunOn();
    void setSchedulerRunOn(OAIConfigNodePropertyDropDown* scheduler_run_on);

    OAIConfigNodePropertyBoolean* getGraniteThreaddumpEnabled();
    void setGraniteThreaddumpEnabled(OAIConfigNodePropertyBoolean* granite_threaddump_enabled);

    OAIConfigNodePropertyInteger* getGraniteThreaddumpDumpsPerFile();
    void setGraniteThreaddumpDumpsPerFile(OAIConfigNodePropertyInteger* granite_threaddump_dumps_per_file);

    OAIConfigNodePropertyBoolean* getGraniteThreaddumpEnableGzipCompression();
    void setGraniteThreaddumpEnableGzipCompression(OAIConfigNodePropertyBoolean* granite_threaddump_enable_gzip_compression);

    OAIConfigNodePropertyBoolean* getGraniteThreaddumpEnableDirectoriesCompression();
    void setGraniteThreaddumpEnableDirectoriesCompression(OAIConfigNodePropertyBoolean* granite_threaddump_enable_directories_compression);

    OAIConfigNodePropertyBoolean* getGraniteThreaddumpEnableJStack();
    void setGraniteThreaddumpEnableJStack(OAIConfigNodePropertyBoolean* granite_threaddump_enable_j_stack);

    OAIConfigNodePropertyInteger* getGraniteThreaddumpMaxBackupDays();
    void setGraniteThreaddumpMaxBackupDays(OAIConfigNodePropertyInteger* granite_threaddump_max_backup_days);

    OAIConfigNodePropertyString* getGraniteThreaddumpBackupCleanTrigger();
    void setGraniteThreaddumpBackupCleanTrigger(OAIConfigNodePropertyString* granite_threaddump_backup_clean_trigger);


    virtual bool isSet() override;

private:
    OAIConfigNodePropertyInteger* scheduler_period;
    bool m_scheduler_period_isSet;

    OAIConfigNodePropertyDropDown* scheduler_run_on;
    bool m_scheduler_run_on_isSet;

    OAIConfigNodePropertyBoolean* granite_threaddump_enabled;
    bool m_granite_threaddump_enabled_isSet;

    OAIConfigNodePropertyInteger* granite_threaddump_dumps_per_file;
    bool m_granite_threaddump_dumps_per_file_isSet;

    OAIConfigNodePropertyBoolean* granite_threaddump_enable_gzip_compression;
    bool m_granite_threaddump_enable_gzip_compression_isSet;

    OAIConfigNodePropertyBoolean* granite_threaddump_enable_directories_compression;
    bool m_granite_threaddump_enable_directories_compression_isSet;

    OAIConfigNodePropertyBoolean* granite_threaddump_enable_j_stack;
    bool m_granite_threaddump_enable_j_stack_isSet;

    OAIConfigNodePropertyInteger* granite_threaddump_max_backup_days;
    bool m_granite_threaddump_max_backup_days_isSet;

    OAIConfigNodePropertyString* granite_threaddump_backup_clean_trigger;
    bool m_granite_threaddump_backup_clean_trigger_isSet;

};

}

#endif /* OAIComAdobeGraniteThreaddumpThreadDumpCollectorProperties_H_ */
