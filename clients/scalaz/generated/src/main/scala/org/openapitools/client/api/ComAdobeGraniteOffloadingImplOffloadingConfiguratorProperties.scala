package org.openapitools.client.api

import argonaut._
import argonaut.EncodeJson._
import argonaut.DecodeJson._

import org.http4s.{EntityDecoder, EntityEncoder}
import org.http4s.argonaut._
import org.joda.time.DateTime
import ComAdobeGraniteOffloadingImplOffloadingConfiguratorProperties._

case class ComAdobeGraniteOffloadingImplOffloadingConfiguratorProperties (
  offloadingTransporter: Option[ConfigNodePropertyString],
offloadingCleanupPayload: Option[ConfigNodePropertyBoolean])

object ComAdobeGraniteOffloadingImplOffloadingConfiguratorProperties {
  import DateTimeCodecs._

  implicit val ComAdobeGraniteOffloadingImplOffloadingConfiguratorPropertiesCodecJson: CodecJson[ComAdobeGraniteOffloadingImplOffloadingConfiguratorProperties] = CodecJson.derive[ComAdobeGraniteOffloadingImplOffloadingConfiguratorProperties]
  implicit val ComAdobeGraniteOffloadingImplOffloadingConfiguratorPropertiesDecoder: EntityDecoder[ComAdobeGraniteOffloadingImplOffloadingConfiguratorProperties] = jsonOf[ComAdobeGraniteOffloadingImplOffloadingConfiguratorProperties]
  implicit val ComAdobeGraniteOffloadingImplOffloadingConfiguratorPropertiesEncoder: EntityEncoder[ComAdobeGraniteOffloadingImplOffloadingConfiguratorProperties] = jsonEncoderOf[ComAdobeGraniteOffloadingImplOffloadingConfiguratorProperties]
}
