<?php
/**
 * OrgApacheSlingCommonsLogLogManagerProperties
 *
 * PHP version 5
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Adobe Experience Manager OSGI config (AEM) API
 *
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 3.2.1-SNAPSHOT
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace OpenAPI\Client\Model;

use \ArrayAccess;
use \OpenAPI\Client\ObjectSerializer;

/**
 * OrgApacheSlingCommonsLogLogManagerProperties Class Doc Comment
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class OrgApacheSlingCommonsLogLogManagerProperties implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'orgApacheSlingCommonsLogLogManagerProperties';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'org_apache_sling_commons_log_level' => '\OpenAPI\Client\Model\ConfigNodePropertyDropDown',
        'org_apache_sling_commons_log_file' => '\OpenAPI\Client\Model\ConfigNodePropertyString',
        'org_apache_sling_commons_log_file_number' => '\OpenAPI\Client\Model\ConfigNodePropertyInteger',
        'org_apache_sling_commons_log_file_size' => '\OpenAPI\Client\Model\ConfigNodePropertyString',
        'org_apache_sling_commons_log_pattern' => '\OpenAPI\Client\Model\ConfigNodePropertyString',
        'org_apache_sling_commons_log_configuration_file' => '\OpenAPI\Client\Model\ConfigNodePropertyString',
        'org_apache_sling_commons_log_packaging_data_enabled' => '\OpenAPI\Client\Model\ConfigNodePropertyBoolean',
        'org_apache_sling_commons_log_max_caller_data_depth' => '\OpenAPI\Client\Model\ConfigNodePropertyInteger',
        'org_apache_sling_commons_log_max_old_file_count_in_dump' => '\OpenAPI\Client\Model\ConfigNodePropertyInteger',
        'org_apache_sling_commons_log_num_of_lines' => '\OpenAPI\Client\Model\ConfigNodePropertyInteger'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPIFormats = [
        'org_apache_sling_commons_log_level' => null,
        'org_apache_sling_commons_log_file' => null,
        'org_apache_sling_commons_log_file_number' => null,
        'org_apache_sling_commons_log_file_size' => null,
        'org_apache_sling_commons_log_pattern' => null,
        'org_apache_sling_commons_log_configuration_file' => null,
        'org_apache_sling_commons_log_packaging_data_enabled' => null,
        'org_apache_sling_commons_log_max_caller_data_depth' => null,
        'org_apache_sling_commons_log_max_old_file_count_in_dump' => null,
        'org_apache_sling_commons_log_num_of_lines' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'org_apache_sling_commons_log_level' => 'org.apache.sling.commons.log.level',
        'org_apache_sling_commons_log_file' => 'org.apache.sling.commons.log.file',
        'org_apache_sling_commons_log_file_number' => 'org.apache.sling.commons.log.file.number',
        'org_apache_sling_commons_log_file_size' => 'org.apache.sling.commons.log.file.size',
        'org_apache_sling_commons_log_pattern' => 'org.apache.sling.commons.log.pattern',
        'org_apache_sling_commons_log_configuration_file' => 'org.apache.sling.commons.log.configurationFile',
        'org_apache_sling_commons_log_packaging_data_enabled' => 'org.apache.sling.commons.log.packagingDataEnabled',
        'org_apache_sling_commons_log_max_caller_data_depth' => 'org.apache.sling.commons.log.maxCallerDataDepth',
        'org_apache_sling_commons_log_max_old_file_count_in_dump' => 'org.apache.sling.commons.log.maxOldFileCountInDump',
        'org_apache_sling_commons_log_num_of_lines' => 'org.apache.sling.commons.log.numOfLines'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'org_apache_sling_commons_log_level' => 'setOrgApacheSlingCommonsLogLevel',
        'org_apache_sling_commons_log_file' => 'setOrgApacheSlingCommonsLogFile',
        'org_apache_sling_commons_log_file_number' => 'setOrgApacheSlingCommonsLogFileNumber',
        'org_apache_sling_commons_log_file_size' => 'setOrgApacheSlingCommonsLogFileSize',
        'org_apache_sling_commons_log_pattern' => 'setOrgApacheSlingCommonsLogPattern',
        'org_apache_sling_commons_log_configuration_file' => 'setOrgApacheSlingCommonsLogConfigurationFile',
        'org_apache_sling_commons_log_packaging_data_enabled' => 'setOrgApacheSlingCommonsLogPackagingDataEnabled',
        'org_apache_sling_commons_log_max_caller_data_depth' => 'setOrgApacheSlingCommonsLogMaxCallerDataDepth',
        'org_apache_sling_commons_log_max_old_file_count_in_dump' => 'setOrgApacheSlingCommonsLogMaxOldFileCountInDump',
        'org_apache_sling_commons_log_num_of_lines' => 'setOrgApacheSlingCommonsLogNumOfLines'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'org_apache_sling_commons_log_level' => 'getOrgApacheSlingCommonsLogLevel',
        'org_apache_sling_commons_log_file' => 'getOrgApacheSlingCommonsLogFile',
        'org_apache_sling_commons_log_file_number' => 'getOrgApacheSlingCommonsLogFileNumber',
        'org_apache_sling_commons_log_file_size' => 'getOrgApacheSlingCommonsLogFileSize',
        'org_apache_sling_commons_log_pattern' => 'getOrgApacheSlingCommonsLogPattern',
        'org_apache_sling_commons_log_configuration_file' => 'getOrgApacheSlingCommonsLogConfigurationFile',
        'org_apache_sling_commons_log_packaging_data_enabled' => 'getOrgApacheSlingCommonsLogPackagingDataEnabled',
        'org_apache_sling_commons_log_max_caller_data_depth' => 'getOrgApacheSlingCommonsLogMaxCallerDataDepth',
        'org_apache_sling_commons_log_max_old_file_count_in_dump' => 'getOrgApacheSlingCommonsLogMaxOldFileCountInDump',
        'org_apache_sling_commons_log_num_of_lines' => 'getOrgApacheSlingCommonsLogNumOfLines'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['org_apache_sling_commons_log_level'] = isset($data['org_apache_sling_commons_log_level']) ? $data['org_apache_sling_commons_log_level'] : null;
        $this->container['org_apache_sling_commons_log_file'] = isset($data['org_apache_sling_commons_log_file']) ? $data['org_apache_sling_commons_log_file'] : null;
        $this->container['org_apache_sling_commons_log_file_number'] = isset($data['org_apache_sling_commons_log_file_number']) ? $data['org_apache_sling_commons_log_file_number'] : null;
        $this->container['org_apache_sling_commons_log_file_size'] = isset($data['org_apache_sling_commons_log_file_size']) ? $data['org_apache_sling_commons_log_file_size'] : null;
        $this->container['org_apache_sling_commons_log_pattern'] = isset($data['org_apache_sling_commons_log_pattern']) ? $data['org_apache_sling_commons_log_pattern'] : null;
        $this->container['org_apache_sling_commons_log_configuration_file'] = isset($data['org_apache_sling_commons_log_configuration_file']) ? $data['org_apache_sling_commons_log_configuration_file'] : null;
        $this->container['org_apache_sling_commons_log_packaging_data_enabled'] = isset($data['org_apache_sling_commons_log_packaging_data_enabled']) ? $data['org_apache_sling_commons_log_packaging_data_enabled'] : null;
        $this->container['org_apache_sling_commons_log_max_caller_data_depth'] = isset($data['org_apache_sling_commons_log_max_caller_data_depth']) ? $data['org_apache_sling_commons_log_max_caller_data_depth'] : null;
        $this->container['org_apache_sling_commons_log_max_old_file_count_in_dump'] = isset($data['org_apache_sling_commons_log_max_old_file_count_in_dump']) ? $data['org_apache_sling_commons_log_max_old_file_count_in_dump'] : null;
        $this->container['org_apache_sling_commons_log_num_of_lines'] = isset($data['org_apache_sling_commons_log_num_of_lines']) ? $data['org_apache_sling_commons_log_num_of_lines'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets org_apache_sling_commons_log_level
     *
     * @return \OpenAPI\Client\Model\ConfigNodePropertyDropDown|null
     */
    public function getOrgApacheSlingCommonsLogLevel()
    {
        return $this->container['org_apache_sling_commons_log_level'];
    }

    /**
     * Sets org_apache_sling_commons_log_level
     *
     * @param \OpenAPI\Client\Model\ConfigNodePropertyDropDown|null $org_apache_sling_commons_log_level org_apache_sling_commons_log_level
     *
     * @return $this
     */
    public function setOrgApacheSlingCommonsLogLevel($org_apache_sling_commons_log_level)
    {
        $this->container['org_apache_sling_commons_log_level'] = $org_apache_sling_commons_log_level;

        return $this;
    }

    /**
     * Gets org_apache_sling_commons_log_file
     *
     * @return \OpenAPI\Client\Model\ConfigNodePropertyString|null
     */
    public function getOrgApacheSlingCommonsLogFile()
    {
        return $this->container['org_apache_sling_commons_log_file'];
    }

    /**
     * Sets org_apache_sling_commons_log_file
     *
     * @param \OpenAPI\Client\Model\ConfigNodePropertyString|null $org_apache_sling_commons_log_file org_apache_sling_commons_log_file
     *
     * @return $this
     */
    public function setOrgApacheSlingCommonsLogFile($org_apache_sling_commons_log_file)
    {
        $this->container['org_apache_sling_commons_log_file'] = $org_apache_sling_commons_log_file;

        return $this;
    }

    /**
     * Gets org_apache_sling_commons_log_file_number
     *
     * @return \OpenAPI\Client\Model\ConfigNodePropertyInteger|null
     */
    public function getOrgApacheSlingCommonsLogFileNumber()
    {
        return $this->container['org_apache_sling_commons_log_file_number'];
    }

    /**
     * Sets org_apache_sling_commons_log_file_number
     *
     * @param \OpenAPI\Client\Model\ConfigNodePropertyInteger|null $org_apache_sling_commons_log_file_number org_apache_sling_commons_log_file_number
     *
     * @return $this
     */
    public function setOrgApacheSlingCommonsLogFileNumber($org_apache_sling_commons_log_file_number)
    {
        $this->container['org_apache_sling_commons_log_file_number'] = $org_apache_sling_commons_log_file_number;

        return $this;
    }

    /**
     * Gets org_apache_sling_commons_log_file_size
     *
     * @return \OpenAPI\Client\Model\ConfigNodePropertyString|null
     */
    public function getOrgApacheSlingCommonsLogFileSize()
    {
        return $this->container['org_apache_sling_commons_log_file_size'];
    }

    /**
     * Sets org_apache_sling_commons_log_file_size
     *
     * @param \OpenAPI\Client\Model\ConfigNodePropertyString|null $org_apache_sling_commons_log_file_size org_apache_sling_commons_log_file_size
     *
     * @return $this
     */
    public function setOrgApacheSlingCommonsLogFileSize($org_apache_sling_commons_log_file_size)
    {
        $this->container['org_apache_sling_commons_log_file_size'] = $org_apache_sling_commons_log_file_size;

        return $this;
    }

    /**
     * Gets org_apache_sling_commons_log_pattern
     *
     * @return \OpenAPI\Client\Model\ConfigNodePropertyString|null
     */
    public function getOrgApacheSlingCommonsLogPattern()
    {
        return $this->container['org_apache_sling_commons_log_pattern'];
    }

    /**
     * Sets org_apache_sling_commons_log_pattern
     *
     * @param \OpenAPI\Client\Model\ConfigNodePropertyString|null $org_apache_sling_commons_log_pattern org_apache_sling_commons_log_pattern
     *
     * @return $this
     */
    public function setOrgApacheSlingCommonsLogPattern($org_apache_sling_commons_log_pattern)
    {
        $this->container['org_apache_sling_commons_log_pattern'] = $org_apache_sling_commons_log_pattern;

        return $this;
    }

    /**
     * Gets org_apache_sling_commons_log_configuration_file
     *
     * @return \OpenAPI\Client\Model\ConfigNodePropertyString|null
     */
    public function getOrgApacheSlingCommonsLogConfigurationFile()
    {
        return $this->container['org_apache_sling_commons_log_configuration_file'];
    }

    /**
     * Sets org_apache_sling_commons_log_configuration_file
     *
     * @param \OpenAPI\Client\Model\ConfigNodePropertyString|null $org_apache_sling_commons_log_configuration_file org_apache_sling_commons_log_configuration_file
     *
     * @return $this
     */
    public function setOrgApacheSlingCommonsLogConfigurationFile($org_apache_sling_commons_log_configuration_file)
    {
        $this->container['org_apache_sling_commons_log_configuration_file'] = $org_apache_sling_commons_log_configuration_file;

        return $this;
    }

    /**
     * Gets org_apache_sling_commons_log_packaging_data_enabled
     *
     * @return \OpenAPI\Client\Model\ConfigNodePropertyBoolean|null
     */
    public function getOrgApacheSlingCommonsLogPackagingDataEnabled()
    {
        return $this->container['org_apache_sling_commons_log_packaging_data_enabled'];
    }

    /**
     * Sets org_apache_sling_commons_log_packaging_data_enabled
     *
     * @param \OpenAPI\Client\Model\ConfigNodePropertyBoolean|null $org_apache_sling_commons_log_packaging_data_enabled org_apache_sling_commons_log_packaging_data_enabled
     *
     * @return $this
     */
    public function setOrgApacheSlingCommonsLogPackagingDataEnabled($org_apache_sling_commons_log_packaging_data_enabled)
    {
        $this->container['org_apache_sling_commons_log_packaging_data_enabled'] = $org_apache_sling_commons_log_packaging_data_enabled;

        return $this;
    }

    /**
     * Gets org_apache_sling_commons_log_max_caller_data_depth
     *
     * @return \OpenAPI\Client\Model\ConfigNodePropertyInteger|null
     */
    public function getOrgApacheSlingCommonsLogMaxCallerDataDepth()
    {
        return $this->container['org_apache_sling_commons_log_max_caller_data_depth'];
    }

    /**
     * Sets org_apache_sling_commons_log_max_caller_data_depth
     *
     * @param \OpenAPI\Client\Model\ConfigNodePropertyInteger|null $org_apache_sling_commons_log_max_caller_data_depth org_apache_sling_commons_log_max_caller_data_depth
     *
     * @return $this
     */
    public function setOrgApacheSlingCommonsLogMaxCallerDataDepth($org_apache_sling_commons_log_max_caller_data_depth)
    {
        $this->container['org_apache_sling_commons_log_max_caller_data_depth'] = $org_apache_sling_commons_log_max_caller_data_depth;

        return $this;
    }

    /**
     * Gets org_apache_sling_commons_log_max_old_file_count_in_dump
     *
     * @return \OpenAPI\Client\Model\ConfigNodePropertyInteger|null
     */
    public function getOrgApacheSlingCommonsLogMaxOldFileCountInDump()
    {
        return $this->container['org_apache_sling_commons_log_max_old_file_count_in_dump'];
    }

    /**
     * Sets org_apache_sling_commons_log_max_old_file_count_in_dump
     *
     * @param \OpenAPI\Client\Model\ConfigNodePropertyInteger|null $org_apache_sling_commons_log_max_old_file_count_in_dump org_apache_sling_commons_log_max_old_file_count_in_dump
     *
     * @return $this
     */
    public function setOrgApacheSlingCommonsLogMaxOldFileCountInDump($org_apache_sling_commons_log_max_old_file_count_in_dump)
    {
        $this->container['org_apache_sling_commons_log_max_old_file_count_in_dump'] = $org_apache_sling_commons_log_max_old_file_count_in_dump;

        return $this;
    }

    /**
     * Gets org_apache_sling_commons_log_num_of_lines
     *
     * @return \OpenAPI\Client\Model\ConfigNodePropertyInteger|null
     */
    public function getOrgApacheSlingCommonsLogNumOfLines()
    {
        return $this->container['org_apache_sling_commons_log_num_of_lines'];
    }

    /**
     * Sets org_apache_sling_commons_log_num_of_lines
     *
     * @param \OpenAPI\Client\Model\ConfigNodePropertyInteger|null $org_apache_sling_commons_log_num_of_lines org_apache_sling_commons_log_num_of_lines
     *
     * @return $this
     */
    public function setOrgApacheSlingCommonsLogNumOfLines($org_apache_sling_commons_log_num_of_lines)
    {
        $this->container['org_apache_sling_commons_log_num_of_lines'] = $org_apache_sling_commons_log_num_of_lines;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }
}


