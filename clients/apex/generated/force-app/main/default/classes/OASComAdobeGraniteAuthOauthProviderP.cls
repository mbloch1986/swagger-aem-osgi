/*
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OAS-api/OAS-codegen.git
 * Do not edit the class manually.
 */

/**
 * OASComAdobeGraniteAuthOauthProviderP
 */
public class OASComAdobeGraniteAuthOauthProviderP implements OAS.MappedProperties {
    /**
     * Get oauthConfigId
     * @return oauthConfigId
     */
    public OASConfigNodePropertyString oauthConfigId { get; set; }

    /**
     * Get oauthClientId
     * @return oauthClientId
     */
    public OASConfigNodePropertyString oauthClientId { get; set; }

    /**
     * Get oauthClientSecret
     * @return oauthClientSecret
     */
    public OASConfigNodePropertyString oauthClientSecret { get; set; }

    /**
     * Get oauthScope
     * @return oauthScope
     */
    public OASConfigNodePropertyArray oauthScope { get; set; }

    /**
     * Get oauthConfigProviderId
     * @return oauthConfigProviderId
     */
    public OASConfigNodePropertyString oauthConfigProviderId { get; set; }

    /**
     * Get oauthCreateUsers
     * @return oauthCreateUsers
     */
    public OASConfigNodePropertyBoolean oauthCreateUsers { get; set; }

    /**
     * Get oauthUseridProperty
     * @return oauthUseridProperty
     */
    public OASConfigNodePropertyString oauthUseridProperty { get; set; }

    /**
     * Get forceStrictUsernameMatching
     * @return forceStrictUsernameMatching
     */
    public OASConfigNodePropertyBoolean forceStrictUsernameMatching { get; set; }

    /**
     * Get oauthEncodeUserids
     * @return oauthEncodeUserids
     */
    public OASConfigNodePropertyBoolean oauthEncodeUserids { get; set; }

    /**
     * Get oauthHashUserids
     * @return oauthHashUserids
     */
    public OASConfigNodePropertyBoolean oauthHashUserids { get; set; }

    /**
     * Get oauthCallBackUrl
     * @return oauthCallBackUrl
     */
    public OASConfigNodePropertyString oauthCallBackUrl { get; set; }

    /**
     * Get oauthAccessTokenPersist
     * @return oauthAccessTokenPersist
     */
    public OASConfigNodePropertyBoolean oauthAccessTokenPersist { get; set; }

    /**
     * Get oauthAccessTokenPersistCookie
     * @return oauthAccessTokenPersistCookie
     */
    public OASConfigNodePropertyBoolean oauthAccessTokenPersistCookie { get; set; }

    /**
     * Get oauthCsrfStateProtection
     * @return oauthCsrfStateProtection
     */
    public OASConfigNodePropertyBoolean oauthCsrfStateProtection { get; set; }

    /**
     * Get oauthRedirectRequestParams
     * @return oauthRedirectRequestParams
     */
    public OASConfigNodePropertyBoolean oauthRedirectRequestParams { get; set; }

    /**
     * Get oauthConfigSiblingsAllow
     * @return oauthConfigSiblingsAllow
     */
    public OASConfigNodePropertyBoolean oauthConfigSiblingsAllow { get; set; }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'oauth.config.id' => 'oauthConfigId',
        'oauth.client.id' => 'oauthClientId',
        'oauth.client.secret' => 'oauthClientSecret',
        'oauth.scope' => 'oauthScope',
        'oauth.config.provider.id' => 'oauthConfigProviderId',
        'oauth.create.users' => 'oauthCreateUsers',
        'oauth.userid.property' => 'oauthUseridProperty',
        'force.strict.username.matching' => 'forceStrictUsernameMatching',
        'oauth.encode.userids' => 'oauthEncodeUserids',
        'oauth.hash.userids' => 'oauthHashUserids',
        'oauth.callBackUrl' => 'oauthCallBackUrl',
        'oauth.access.token.persist' => 'oauthAccessTokenPersist',
        'oauth.access.token.persist.cookie' => 'oauthAccessTokenPersistCookie',
        'oauth.csrf.state.protection' => 'oauthCsrfStateProtection',
        'oauth.redirect.request.params' => 'oauthRedirectRequestParams',
        'oauth.config.siblings.allow' => 'oauthConfigSiblingsAllow'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    public static OASComAdobeGraniteAuthOauthProviderP getExample() {
        OASComAdobeGraniteAuthOauthProviderP comAdobeGraniteAuthOauthProviderProperties = new OASComAdobeGraniteAuthOauthProviderP();
          comAdobeGraniteAuthOauthProviderProperties.oauthConfigId = OASConfigNodePropertyString.getExample();
          comAdobeGraniteAuthOauthProviderProperties.oauthClientId = OASConfigNodePropertyString.getExample();
          comAdobeGraniteAuthOauthProviderProperties.oauthClientSecret = OASConfigNodePropertyString.getExample();
          comAdobeGraniteAuthOauthProviderProperties.oauthScope = OASConfigNodePropertyArray.getExample();
          comAdobeGraniteAuthOauthProviderProperties.oauthConfigProviderId = OASConfigNodePropertyString.getExample();
          comAdobeGraniteAuthOauthProviderProperties.oauthCreateUsers = OASConfigNodePropertyBoolean.getExample();
          comAdobeGraniteAuthOauthProviderProperties.oauthUseridProperty = OASConfigNodePropertyString.getExample();
          comAdobeGraniteAuthOauthProviderProperties.forceStrictUsernameMatching = OASConfigNodePropertyBoolean.getExample();
          comAdobeGraniteAuthOauthProviderProperties.oauthEncodeUserids = OASConfigNodePropertyBoolean.getExample();
          comAdobeGraniteAuthOauthProviderProperties.oauthHashUserids = OASConfigNodePropertyBoolean.getExample();
          comAdobeGraniteAuthOauthProviderProperties.oauthCallBackUrl = OASConfigNodePropertyString.getExample();
          comAdobeGraniteAuthOauthProviderProperties.oauthAccessTokenPersist = OASConfigNodePropertyBoolean.getExample();
          comAdobeGraniteAuthOauthProviderProperties.oauthAccessTokenPersistCookie = OASConfigNodePropertyBoolean.getExample();
          comAdobeGraniteAuthOauthProviderProperties.oauthCsrfStateProtection = OASConfigNodePropertyBoolean.getExample();
          comAdobeGraniteAuthOauthProviderProperties.oauthRedirectRequestParams = OASConfigNodePropertyBoolean.getExample();
          comAdobeGraniteAuthOauthProviderProperties.oauthConfigSiblingsAllow = OASConfigNodePropertyBoolean.getExample();
        return comAdobeGraniteAuthOauthProviderProperties;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof OASComAdobeGraniteAuthOauthProviderP) {           
            OASComAdobeGraniteAuthOauthProviderP comAdobeGraniteAuthOauthProviderProperties = (OASComAdobeGraniteAuthOauthProviderP) obj;
            return this.oauthConfigId == comAdobeGraniteAuthOauthProviderProperties.oauthConfigId
                && this.oauthClientId == comAdobeGraniteAuthOauthProviderProperties.oauthClientId
                && this.oauthClientSecret == comAdobeGraniteAuthOauthProviderProperties.oauthClientSecret
                && this.oauthScope == comAdobeGraniteAuthOauthProviderProperties.oauthScope
                && this.oauthConfigProviderId == comAdobeGraniteAuthOauthProviderProperties.oauthConfigProviderId
                && this.oauthCreateUsers == comAdobeGraniteAuthOauthProviderProperties.oauthCreateUsers
                && this.oauthUseridProperty == comAdobeGraniteAuthOauthProviderProperties.oauthUseridProperty
                && this.forceStrictUsernameMatching == comAdobeGraniteAuthOauthProviderProperties.forceStrictUsernameMatching
                && this.oauthEncodeUserids == comAdobeGraniteAuthOauthProviderProperties.oauthEncodeUserids
                && this.oauthHashUserids == comAdobeGraniteAuthOauthProviderProperties.oauthHashUserids
                && this.oauthCallBackUrl == comAdobeGraniteAuthOauthProviderProperties.oauthCallBackUrl
                && this.oauthAccessTokenPersist == comAdobeGraniteAuthOauthProviderProperties.oauthAccessTokenPersist
                && this.oauthAccessTokenPersistCookie == comAdobeGraniteAuthOauthProviderProperties.oauthAccessTokenPersistCookie
                && this.oauthCsrfStateProtection == comAdobeGraniteAuthOauthProviderProperties.oauthCsrfStateProtection
                && this.oauthRedirectRequestParams == comAdobeGraniteAuthOauthProviderProperties.oauthRedirectRequestParams
                && this.oauthConfigSiblingsAllow == comAdobeGraniteAuthOauthProviderProperties.oauthConfigSiblingsAllow;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (oauthConfigId == null ? 0 : System.hashCode(oauthConfigId));
        hashCode = (17 * hashCode) + (oauthClientId == null ? 0 : System.hashCode(oauthClientId));
        hashCode = (17 * hashCode) + (oauthClientSecret == null ? 0 : System.hashCode(oauthClientSecret));
        hashCode = (17 * hashCode) + (oauthScope == null ? 0 : System.hashCode(oauthScope));
        hashCode = (17 * hashCode) + (oauthConfigProviderId == null ? 0 : System.hashCode(oauthConfigProviderId));
        hashCode = (17 * hashCode) + (oauthCreateUsers == null ? 0 : System.hashCode(oauthCreateUsers));
        hashCode = (17 * hashCode) + (oauthUseridProperty == null ? 0 : System.hashCode(oauthUseridProperty));
        hashCode = (17 * hashCode) + (forceStrictUsernameMatching == null ? 0 : System.hashCode(forceStrictUsernameMatching));
        hashCode = (17 * hashCode) + (oauthEncodeUserids == null ? 0 : System.hashCode(oauthEncodeUserids));
        hashCode = (17 * hashCode) + (oauthHashUserids == null ? 0 : System.hashCode(oauthHashUserids));
        hashCode = (17 * hashCode) + (oauthCallBackUrl == null ? 0 : System.hashCode(oauthCallBackUrl));
        hashCode = (17 * hashCode) + (oauthAccessTokenPersist == null ? 0 : System.hashCode(oauthAccessTokenPersist));
        hashCode = (17 * hashCode) + (oauthAccessTokenPersistCookie == null ? 0 : System.hashCode(oauthAccessTokenPersistCookie));
        hashCode = (17 * hashCode) + (oauthCsrfStateProtection == null ? 0 : System.hashCode(oauthCsrfStateProtection));
        hashCode = (17 * hashCode) + (oauthRedirectRequestParams == null ? 0 : System.hashCode(oauthRedirectRequestParams));
        hashCode = (17 * hashCode) + (oauthConfigSiblingsAllow == null ? 0 : System.hashCode(oauthConfigSiblingsAllow));
        return hashCode;
    }
}

