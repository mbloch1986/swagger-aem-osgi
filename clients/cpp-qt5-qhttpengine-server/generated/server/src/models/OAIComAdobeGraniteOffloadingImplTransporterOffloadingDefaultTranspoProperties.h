/**
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIComAdobeGraniteOffloadingImplTransporterOffloadingDefaultTranspoProperties.h
 *
 * 
 */

#ifndef OAIComAdobeGraniteOffloadingImplTransporterOffloadingDefaultTranspoProperties_H
#define OAIComAdobeGraniteOffloadingImplTransporterOffloadingDefaultTranspoProperties_H

#include <QJsonObject>


#include "OAIConfigNodePropertyBoolean.h"
#include "OAIConfigNodePropertyString.h"

#include "OAIObject.h"

namespace OpenAPI {

class OAIComAdobeGraniteOffloadingImplTransporterOffloadingDefaultTranspoProperties: public OAIObject {
public:
    OAIComAdobeGraniteOffloadingImplTransporterOffloadingDefaultTranspoProperties();
    OAIComAdobeGraniteOffloadingImplTransporterOffloadingDefaultTranspoProperties(QString json);
    ~OAIComAdobeGraniteOffloadingImplTransporterOffloadingDefaultTranspoProperties() override;
    void init();

    QString asJson () const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIConfigNodePropertyString getDefaultTransportAgentToWorkerPrefix() const;
    void setDefaultTransportAgentToWorkerPrefix(const OAIConfigNodePropertyString &default_transport_agent_to_worker_prefix);

    OAIConfigNodePropertyString getDefaultTransportAgentToMasterPrefix() const;
    void setDefaultTransportAgentToMasterPrefix(const OAIConfigNodePropertyString &default_transport_agent_to_master_prefix);

    OAIConfigNodePropertyString getDefaultTransportInputPackage() const;
    void setDefaultTransportInputPackage(const OAIConfigNodePropertyString &default_transport_input_package);

    OAIConfigNodePropertyString getDefaultTransportOutputPackage() const;
    void setDefaultTransportOutputPackage(const OAIConfigNodePropertyString &default_transport_output_package);

    OAIConfigNodePropertyBoolean getDefaultTransportReplicationSynchronous() const;
    void setDefaultTransportReplicationSynchronous(const OAIConfigNodePropertyBoolean &default_transport_replication_synchronous);

    OAIConfigNodePropertyBoolean getDefaultTransportContentpackage() const;
    void setDefaultTransportContentpackage(const OAIConfigNodePropertyBoolean &default_transport_contentpackage);

    OAIConfigNodePropertyBoolean getOffloadingTransporterDefaultEnabled() const;
    void setOffloadingTransporterDefaultEnabled(const OAIConfigNodePropertyBoolean &offloading_transporter_default_enabled);

    virtual bool isSet() const override;

private:
    OAIConfigNodePropertyString default_transport_agent_to_worker_prefix;
    bool m_default_transport_agent_to_worker_prefix_isSet;

    OAIConfigNodePropertyString default_transport_agent_to_master_prefix;
    bool m_default_transport_agent_to_master_prefix_isSet;

    OAIConfigNodePropertyString default_transport_input_package;
    bool m_default_transport_input_package_isSet;

    OAIConfigNodePropertyString default_transport_output_package;
    bool m_default_transport_output_package_isSet;

    OAIConfigNodePropertyBoolean default_transport_replication_synchronous;
    bool m_default_transport_replication_synchronous_isSet;

    OAIConfigNodePropertyBoolean default_transport_contentpackage;
    bool m_default_transport_contentpackage_isSet;

    OAIConfigNodePropertyBoolean offloading_transporter_default_enabled;
    bool m_offloading_transporter_default_enabled_isSet;

};

}

#endif // OAIComAdobeGraniteOffloadingImplTransporterOffloadingDefaultTranspoProperties_H
