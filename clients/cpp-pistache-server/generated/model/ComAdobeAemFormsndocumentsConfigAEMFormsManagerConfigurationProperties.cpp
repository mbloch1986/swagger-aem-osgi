/**
* Adobe Experience Manager OSGI config (AEM) API
* Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
*
* OpenAPI spec version: 1.0.0-pre.0
* Contact: opensource@shinesolutions.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/


#include "ComAdobeAemFormsndocumentsConfigAEMFormsManagerConfigurationProperties.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

ComAdobeAemFormsndocumentsConfigAEMFormsManagerConfigurationProperties::ComAdobeAemFormsndocumentsConfigAEMFormsManagerConfigurationProperties()
{
    m_FormsManagerConfig_includeOOTBTemplatesIsSet = false;
    m_FormsManagerConfig_includeDeprecatedTemplatesIsSet = false;
    
}

ComAdobeAemFormsndocumentsConfigAEMFormsManagerConfigurationProperties::~ComAdobeAemFormsndocumentsConfigAEMFormsManagerConfigurationProperties()
{
}

void ComAdobeAemFormsndocumentsConfigAEMFormsManagerConfigurationProperties::validate()
{
    // TODO: implement validation
}

nlohmann::json ComAdobeAemFormsndocumentsConfigAEMFormsManagerConfigurationProperties::toJson() const
{
    nlohmann::json val = nlohmann::json::object();

    if(m_FormsManagerConfig_includeOOTBTemplatesIsSet)
    {
        val["formsManagerConfig.includeOOTBTemplates"] = ModelBase::toJson(m_FormsManagerConfig_includeOOTBTemplates);
    }
    if(m_FormsManagerConfig_includeDeprecatedTemplatesIsSet)
    {
        val["formsManagerConfig.includeDeprecatedTemplates"] = ModelBase::toJson(m_FormsManagerConfig_includeDeprecatedTemplates);
    }
    

    return val;
}

void ComAdobeAemFormsndocumentsConfigAEMFormsManagerConfigurationProperties::fromJson(nlohmann::json& val)
{
    if(val.find("formsManagerConfig.includeOOTBTemplates") != val.end())
    {
        if(!val["formsManagerConfig.includeOOTBTemplates"].is_null())
        {
            ConfigNodePropertyBoolean newItem;
            newItem.fromJson(val["formsManagerConfig.includeOOTBTemplates"]);
            setFormsManagerConfigIncludeOOTBTemplates( newItem );
        }
        
    }
    if(val.find("formsManagerConfig.includeDeprecatedTemplates") != val.end())
    {
        if(!val["formsManagerConfig.includeDeprecatedTemplates"].is_null())
        {
            ConfigNodePropertyBoolean newItem;
            newItem.fromJson(val["formsManagerConfig.includeDeprecatedTemplates"]);
            setFormsManagerConfigIncludeDeprecatedTemplates( newItem );
        }
        
    }
    
}


ConfigNodePropertyBoolean ComAdobeAemFormsndocumentsConfigAEMFormsManagerConfigurationProperties::getFormsManagerConfigIncludeOOTBTemplates() const
{
    return m_FormsManagerConfig_includeOOTBTemplates;
}
void ComAdobeAemFormsndocumentsConfigAEMFormsManagerConfigurationProperties::setFormsManagerConfigIncludeOOTBTemplates(ConfigNodePropertyBoolean const& value)
{
    m_FormsManagerConfig_includeOOTBTemplates = value;
    m_FormsManagerConfig_includeOOTBTemplatesIsSet = true;
}
bool ComAdobeAemFormsndocumentsConfigAEMFormsManagerConfigurationProperties::formsManagerConfigIncludeOOTBTemplatesIsSet() const
{
    return m_FormsManagerConfig_includeOOTBTemplatesIsSet;
}
void ComAdobeAemFormsndocumentsConfigAEMFormsManagerConfigurationProperties::unsetFormsManagerConfig_includeOOTBTemplates()
{
    m_FormsManagerConfig_includeOOTBTemplatesIsSet = false;
}
ConfigNodePropertyBoolean ComAdobeAemFormsndocumentsConfigAEMFormsManagerConfigurationProperties::getFormsManagerConfigIncludeDeprecatedTemplates() const
{
    return m_FormsManagerConfig_includeDeprecatedTemplates;
}
void ComAdobeAemFormsndocumentsConfigAEMFormsManagerConfigurationProperties::setFormsManagerConfigIncludeDeprecatedTemplates(ConfigNodePropertyBoolean const& value)
{
    m_FormsManagerConfig_includeDeprecatedTemplates = value;
    m_FormsManagerConfig_includeDeprecatedTemplatesIsSet = true;
}
bool ComAdobeAemFormsndocumentsConfigAEMFormsManagerConfigurationProperties::formsManagerConfigIncludeDeprecatedTemplatesIsSet() const
{
    return m_FormsManagerConfig_includeDeprecatedTemplatesIsSet;
}
void ComAdobeAemFormsndocumentsConfigAEMFormsManagerConfigurationProperties::unsetFormsManagerConfig_includeDeprecatedTemplates()
{
    m_FormsManagerConfig_includeDeprecatedTemplatesIsSet = false;
}

}
}
}
}

