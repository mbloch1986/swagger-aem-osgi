/**
* Adobe Experience Manager OSGI config (AEM) API
* Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
*
* OpenAPI spec version: 1.0.0-pre.0
* Contact: opensource@shinesolutions.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
/*
 * ComDayCrxSecurityTokenImplImplTokenAuthenticationHandlerProperties.h
 *
 * 
 */

#ifndef ComDayCrxSecurityTokenImplImplTokenAuthenticationHandlerProperties_H_
#define ComDayCrxSecurityTokenImplImplTokenAuthenticationHandlerProperties_H_


#include "ModelBase.h"

#include "ConfigNodePropertyBoolean.h"
#include "ConfigNodePropertyDropDown.h"
#include "ConfigNodePropertyArray.h"
#include "ConfigNodePropertyString.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
/// 
/// </summary>
class  ComDayCrxSecurityTokenImplImplTokenAuthenticationHandlerProperties
    : public ModelBase
{
public:
    ComDayCrxSecurityTokenImplImplTokenAuthenticationHandlerProperties();
    virtual ~ComDayCrxSecurityTokenImplImplTokenAuthenticationHandlerProperties();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    nlohmann::json toJson() const override;
    void fromJson(nlohmann::json& json) override;

    /////////////////////////////////////////////
    /// ComDayCrxSecurityTokenImplImplTokenAuthenticationHandlerProperties members

    /// <summary>
    /// 
    /// </summary>
    ConfigNodePropertyString getPath() const;
    void setPath(ConfigNodePropertyString const& value);
    bool pathIsSet() const;
    void unsetPath();
    /// <summary>
    /// 
    /// </summary>
    ConfigNodePropertyDropDown getTokenRequiredAttr() const;
    void setTokenRequiredAttr(ConfigNodePropertyDropDown const& value);
    bool tokenRequiredAttrIsSet() const;
    void unsetToken_required_attr();
    /// <summary>
    /// 
    /// </summary>
    ConfigNodePropertyString getTokenAlternateUrl() const;
    void setTokenAlternateUrl(ConfigNodePropertyString const& value);
    bool tokenAlternateUrlIsSet() const;
    void unsetToken_alternate_url();
    /// <summary>
    /// 
    /// </summary>
    ConfigNodePropertyBoolean getTokenEncapsulated() const;
    void setTokenEncapsulated(ConfigNodePropertyBoolean const& value);
    bool tokenEncapsulatedIsSet() const;
    void unsetToken_encapsulated();
    /// <summary>
    /// 
    /// </summary>
    ConfigNodePropertyArray getSkipTokenRefresh() const;
    void setSkipTokenRefresh(ConfigNodePropertyArray const& value);
    bool skipTokenRefreshIsSet() const;
    void unsetSkip_token_refresh();

protected:
    ConfigNodePropertyString m_Path;
    bool m_PathIsSet;
    ConfigNodePropertyDropDown m_Token_required_attr;
    bool m_Token_required_attrIsSet;
    ConfigNodePropertyString m_Token_alternate_url;
    bool m_Token_alternate_urlIsSet;
    ConfigNodePropertyBoolean m_Token_encapsulated;
    bool m_Token_encapsulatedIsSet;
    ConfigNodePropertyArray m_Skip_token_refresh;
    bool m_Skip_token_refreshIsSet;
};

}
}
}
}

#endif /* ComDayCrxSecurityTokenImplImplTokenAuthenticationHandlerProperties_H_ */
