package org.openapitools.client.api

import argonaut._
import argonaut.EncodeJson._
import argonaut.DecodeJson._

import org.http4s.{EntityDecoder, EntityEncoder}
import org.http4s.argonaut._
import org.joda.time.DateTime
import ComAdobeGraniteWorkflowConsolePublishWorkflowPublishEventServiceProperties._

case class ComAdobeGraniteWorkflowConsolePublishWorkflowPublishEventServiceProperties (
  graniteWorkflowWorkflowPublishEventServiceEnabled: Option[ConfigNodePropertyBoolean])

object ComAdobeGraniteWorkflowConsolePublishWorkflowPublishEventServiceProperties {
  import DateTimeCodecs._

  implicit val ComAdobeGraniteWorkflowConsolePublishWorkflowPublishEventServicePropertiesCodecJson: CodecJson[ComAdobeGraniteWorkflowConsolePublishWorkflowPublishEventServiceProperties] = CodecJson.derive[ComAdobeGraniteWorkflowConsolePublishWorkflowPublishEventServiceProperties]
  implicit val ComAdobeGraniteWorkflowConsolePublishWorkflowPublishEventServicePropertiesDecoder: EntityDecoder[ComAdobeGraniteWorkflowConsolePublishWorkflowPublishEventServiceProperties] = jsonOf[ComAdobeGraniteWorkflowConsolePublishWorkflowPublishEventServiceProperties]
  implicit val ComAdobeGraniteWorkflowConsolePublishWorkflowPublishEventServicePropertiesEncoder: EntityEncoder[ComAdobeGraniteWorkflowConsolePublishWorkflowPublishEventServiceProperties] = jsonEncoderOf[ComAdobeGraniteWorkflowConsolePublishWorkflowPublishEventServiceProperties]
}
