/**
* Adobe Experience Manager OSGI config (AEM) API
* Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
*
* OpenAPI spec version: 1.0.0-pre.0
* Contact: opensource@shinesolutions.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
/*
 * ComAdobeCqSocialUgcbaseModerationImplSentimentProcessProperties.h
 *
 * 
 */

#ifndef ComAdobeCqSocialUgcbaseModerationImplSentimentProcessProperties_H_
#define ComAdobeCqSocialUgcbaseModerationImplSentimentProcessProperties_H_


#include "ModelBase.h"

#include "ConfigNodePropertyArray.h"
#include "ConfigNodePropertyString.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
/// 
/// </summary>
class  ComAdobeCqSocialUgcbaseModerationImplSentimentProcessProperties
    : public ModelBase
{
public:
    ComAdobeCqSocialUgcbaseModerationImplSentimentProcessProperties();
    virtual ~ComAdobeCqSocialUgcbaseModerationImplSentimentProcessProperties();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    nlohmann::json toJson() const override;
    void fromJson(nlohmann::json& json) override;

    /////////////////////////////////////////////
    /// ComAdobeCqSocialUgcbaseModerationImplSentimentProcessProperties members

    /// <summary>
    /// 
    /// </summary>
    ConfigNodePropertyArray getWatchwordsPositive() const;
    void setWatchwordsPositive(ConfigNodePropertyArray const& value);
    bool watchwordsPositiveIsSet() const;
    void unsetWatchwords_positive();
    /// <summary>
    /// 
    /// </summary>
    ConfigNodePropertyArray getWatchwordsNegative() const;
    void setWatchwordsNegative(ConfigNodePropertyArray const& value);
    bool watchwordsNegativeIsSet() const;
    void unsetWatchwords_negative();
    /// <summary>
    /// 
    /// </summary>
    ConfigNodePropertyString getWatchwordsPath() const;
    void setWatchwordsPath(ConfigNodePropertyString const& value);
    bool watchwordsPathIsSet() const;
    void unsetWatchwords_path();
    /// <summary>
    /// 
    /// </summary>
    ConfigNodePropertyString getSentimentPath() const;
    void setSentimentPath(ConfigNodePropertyString const& value);
    bool sentimentPathIsSet() const;
    void unsetSentiment_path();

protected:
    ConfigNodePropertyArray m_Watchwords_positive;
    bool m_Watchwords_positiveIsSet;
    ConfigNodePropertyArray m_Watchwords_negative;
    bool m_Watchwords_negativeIsSet;
    ConfigNodePropertyString m_Watchwords_path;
    bool m_Watchwords_pathIsSet;
    ConfigNodePropertyString m_Sentiment_path;
    bool m_Sentiment_pathIsSet;
};

}
}
}
}

#endif /* ComAdobeCqSocialUgcbaseModerationImplSentimentProcessProperties_H_ */
