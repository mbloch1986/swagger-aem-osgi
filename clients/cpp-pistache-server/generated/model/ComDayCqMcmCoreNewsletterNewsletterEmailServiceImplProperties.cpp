/**
* Adobe Experience Manager OSGI config (AEM) API
* Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
*
* OpenAPI spec version: 1.0.0-pre.0
* Contact: opensource@shinesolutions.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/


#include "ComDayCqMcmCoreNewsletterNewsletterEmailServiceImplProperties.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

ComDayCqMcmCoreNewsletterNewsletterEmailServiceImplProperties::ComDayCqMcmCoreNewsletterNewsletterEmailServiceImplProperties()
{
    m_From_addressIsSet = false;
    m_Sender_hostIsSet = false;
    m_Max_bounce_countIsSet = false;
    
}

ComDayCqMcmCoreNewsletterNewsletterEmailServiceImplProperties::~ComDayCqMcmCoreNewsletterNewsletterEmailServiceImplProperties()
{
}

void ComDayCqMcmCoreNewsletterNewsletterEmailServiceImplProperties::validate()
{
    // TODO: implement validation
}

nlohmann::json ComDayCqMcmCoreNewsletterNewsletterEmailServiceImplProperties::toJson() const
{
    nlohmann::json val = nlohmann::json::object();

    if(m_From_addressIsSet)
    {
        val["from.address"] = ModelBase::toJson(m_From_address);
    }
    if(m_Sender_hostIsSet)
    {
        val["sender.host"] = ModelBase::toJson(m_Sender_host);
    }
    if(m_Max_bounce_countIsSet)
    {
        val["max.bounce.count"] = ModelBase::toJson(m_Max_bounce_count);
    }
    

    return val;
}

void ComDayCqMcmCoreNewsletterNewsletterEmailServiceImplProperties::fromJson(nlohmann::json& val)
{
    if(val.find("from.address") != val.end())
    {
        if(!val["from.address"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["from.address"]);
            setFromAddress( newItem );
        }
        
    }
    if(val.find("sender.host") != val.end())
    {
        if(!val["sender.host"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["sender.host"]);
            setSenderHost( newItem );
        }
        
    }
    if(val.find("max.bounce.count") != val.end())
    {
        if(!val["max.bounce.count"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["max.bounce.count"]);
            setMaxBounceCount( newItem );
        }
        
    }
    
}


ConfigNodePropertyString ComDayCqMcmCoreNewsletterNewsletterEmailServiceImplProperties::getFromAddress() const
{
    return m_From_address;
}
void ComDayCqMcmCoreNewsletterNewsletterEmailServiceImplProperties::setFromAddress(ConfigNodePropertyString const& value)
{
    m_From_address = value;
    m_From_addressIsSet = true;
}
bool ComDayCqMcmCoreNewsletterNewsletterEmailServiceImplProperties::fromAddressIsSet() const
{
    return m_From_addressIsSet;
}
void ComDayCqMcmCoreNewsletterNewsletterEmailServiceImplProperties::unsetFrom_address()
{
    m_From_addressIsSet = false;
}
ConfigNodePropertyString ComDayCqMcmCoreNewsletterNewsletterEmailServiceImplProperties::getSenderHost() const
{
    return m_Sender_host;
}
void ComDayCqMcmCoreNewsletterNewsletterEmailServiceImplProperties::setSenderHost(ConfigNodePropertyString const& value)
{
    m_Sender_host = value;
    m_Sender_hostIsSet = true;
}
bool ComDayCqMcmCoreNewsletterNewsletterEmailServiceImplProperties::senderHostIsSet() const
{
    return m_Sender_hostIsSet;
}
void ComDayCqMcmCoreNewsletterNewsletterEmailServiceImplProperties::unsetSender_host()
{
    m_Sender_hostIsSet = false;
}
ConfigNodePropertyString ComDayCqMcmCoreNewsletterNewsletterEmailServiceImplProperties::getMaxBounceCount() const
{
    return m_Max_bounce_count;
}
void ComDayCqMcmCoreNewsletterNewsletterEmailServiceImplProperties::setMaxBounceCount(ConfigNodePropertyString const& value)
{
    m_Max_bounce_count = value;
    m_Max_bounce_countIsSet = true;
}
bool ComDayCqMcmCoreNewsletterNewsletterEmailServiceImplProperties::maxBounceCountIsSet() const
{
    return m_Max_bounce_countIsSet;
}
void ComDayCqMcmCoreNewsletterNewsletterEmailServiceImplProperties::unsetMax_bounce_count()
{
    m_Max_bounce_countIsSet = false;
}

}
}
}
}

