/**
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


#include "OAIOrgApacheSlingHcCoreImplScriptableHealthCheckProperties.h"

#include "OAIHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace OpenAPI {

OAIOrgApacheSlingHcCoreImplScriptableHealthCheckProperties::OAIOrgApacheSlingHcCoreImplScriptableHealthCheckProperties(QString json) {
    this->fromJson(json);
}

OAIOrgApacheSlingHcCoreImplScriptableHealthCheckProperties::OAIOrgApacheSlingHcCoreImplScriptableHealthCheckProperties() {
    this->init();
}

OAIOrgApacheSlingHcCoreImplScriptableHealthCheckProperties::~OAIOrgApacheSlingHcCoreImplScriptableHealthCheckProperties() {
    
}

void
OAIOrgApacheSlingHcCoreImplScriptableHealthCheckProperties::init() {
    m_hc_name_isSet = false;
    m_hc_tags_isSet = false;
    m_hc_mbean_name_isSet = false;
    m_expression_isSet = false;
    m_language_extension_isSet = false;
}

void
OAIOrgApacheSlingHcCoreImplScriptableHealthCheckProperties::fromJson(QString jsonString) {
    QByteArray array (jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void
OAIOrgApacheSlingHcCoreImplScriptableHealthCheckProperties::fromJsonObject(QJsonObject json) {
    ::OpenAPI::fromJsonValue(hc_name, json[QString("hc.name")]);
    
    ::OpenAPI::fromJsonValue(hc_tags, json[QString("hc.tags")]);
    
    ::OpenAPI::fromJsonValue(hc_mbean_name, json[QString("hc.mbean.name")]);
    
    ::OpenAPI::fromJsonValue(expression, json[QString("expression")]);
    
    ::OpenAPI::fromJsonValue(language_extension, json[QString("language.extension")]);
    
}

QString
OAIOrgApacheSlingHcCoreImplScriptableHealthCheckProperties::asJson () const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject
OAIOrgApacheSlingHcCoreImplScriptableHealthCheckProperties::asJsonObject() const {
    QJsonObject obj;
	if(hc_name.isSet()){
        obj.insert(QString("hc.name"), ::OpenAPI::toJsonValue(hc_name));
    }
	if(hc_tags.isSet()){
        obj.insert(QString("hc.tags"), ::OpenAPI::toJsonValue(hc_tags));
    }
	if(hc_mbean_name.isSet()){
        obj.insert(QString("hc.mbean.name"), ::OpenAPI::toJsonValue(hc_mbean_name));
    }
	if(expression.isSet()){
        obj.insert(QString("expression"), ::OpenAPI::toJsonValue(expression));
    }
	if(language_extension.isSet()){
        obj.insert(QString("language.extension"), ::OpenAPI::toJsonValue(language_extension));
    }
    return obj;
}

OAIConfigNodePropertyString
OAIOrgApacheSlingHcCoreImplScriptableHealthCheckProperties::getHcName() const {
    return hc_name;
}
void
OAIOrgApacheSlingHcCoreImplScriptableHealthCheckProperties::setHcName(const OAIConfigNodePropertyString &hc_name) {
    this->hc_name = hc_name;
    this->m_hc_name_isSet = true;
}

OAIConfigNodePropertyArray
OAIOrgApacheSlingHcCoreImplScriptableHealthCheckProperties::getHcTags() const {
    return hc_tags;
}
void
OAIOrgApacheSlingHcCoreImplScriptableHealthCheckProperties::setHcTags(const OAIConfigNodePropertyArray &hc_tags) {
    this->hc_tags = hc_tags;
    this->m_hc_tags_isSet = true;
}

OAIConfigNodePropertyString
OAIOrgApacheSlingHcCoreImplScriptableHealthCheckProperties::getHcMbeanName() const {
    return hc_mbean_name;
}
void
OAIOrgApacheSlingHcCoreImplScriptableHealthCheckProperties::setHcMbeanName(const OAIConfigNodePropertyString &hc_mbean_name) {
    this->hc_mbean_name = hc_mbean_name;
    this->m_hc_mbean_name_isSet = true;
}

OAIConfigNodePropertyString
OAIOrgApacheSlingHcCoreImplScriptableHealthCheckProperties::getExpression() const {
    return expression;
}
void
OAIOrgApacheSlingHcCoreImplScriptableHealthCheckProperties::setExpression(const OAIConfigNodePropertyString &expression) {
    this->expression = expression;
    this->m_expression_isSet = true;
}

OAIConfigNodePropertyString
OAIOrgApacheSlingHcCoreImplScriptableHealthCheckProperties::getLanguageExtension() const {
    return language_extension;
}
void
OAIOrgApacheSlingHcCoreImplScriptableHealthCheckProperties::setLanguageExtension(const OAIConfigNodePropertyString &language_extension) {
    this->language_extension = language_extension;
    this->m_language_extension_isSet = true;
}


bool
OAIOrgApacheSlingHcCoreImplScriptableHealthCheckProperties::isSet() const {
    bool isObjectUpdated = false;
    do{ 
        if(hc_name.isSet()){ isObjectUpdated = true; break;}
    
        if(hc_tags.isSet()){ isObjectUpdated = true; break;}
    
        if(hc_mbean_name.isSet()){ isObjectUpdated = true; break;}
    
        if(expression.isSet()){ isObjectUpdated = true; break;}
    
        if(language_extension.isSet()){ isObjectUpdated = true; break;}
    }while(false);
    return isObjectUpdated;
}

}

