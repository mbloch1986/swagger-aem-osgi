# NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
# https://openapi-generator.tech
# Do not edit the class manually.

defmodule AdobeExperienceManagerOSGIConfig(AEM)API.Model.ComAdobeCqSocialUgcbaseSecurityImplSaferSlingPostValidatorImplProperties do
  @moduledoc """
  
  """

  @derive [Poison.Encoder]
  defstruct [
    :"parameter.whitelist",
    :"parameter.whitelist.prefixes",
    :"binary.parameter.whitelist",
    :"modifier.whitelist",
    :"operation.whitelist",
    :"operation.whitelist.prefixes",
    :"typehint.whitelist",
    :"resourcetype.whitelist"
  ]

  @type t :: %__MODULE__{
    :"parameter.whitelist" => ConfigNodePropertyArray,
    :"parameter.whitelist.prefixes" => ConfigNodePropertyArray,
    :"binary.parameter.whitelist" => ConfigNodePropertyArray,
    :"modifier.whitelist" => ConfigNodePropertyArray,
    :"operation.whitelist" => ConfigNodePropertyArray,
    :"operation.whitelist.prefixes" => ConfigNodePropertyArray,
    :"typehint.whitelist" => ConfigNodePropertyArray,
    :"resourcetype.whitelist" => ConfigNodePropertyArray
  }
end

defimpl Poison.Decoder, for: AdobeExperienceManagerOSGIConfig(AEM)API.Model.ComAdobeCqSocialUgcbaseSecurityImplSaferSlingPostValidatorImplProperties do
  import AdobeExperienceManagerOSGIConfig(AEM)API.Deserializer
  def decode(value, options) do
    value
    |> deserialize(:"parameter.whitelist", :struct, AdobeExperienceManagerOSGIConfig(AEM)API.Model.ConfigNodePropertyArray, options)
    |> deserialize(:"parameter.whitelist.prefixes", :struct, AdobeExperienceManagerOSGIConfig(AEM)API.Model.ConfigNodePropertyArray, options)
    |> deserialize(:"binary.parameter.whitelist", :struct, AdobeExperienceManagerOSGIConfig(AEM)API.Model.ConfigNodePropertyArray, options)
    |> deserialize(:"modifier.whitelist", :struct, AdobeExperienceManagerOSGIConfig(AEM)API.Model.ConfigNodePropertyArray, options)
    |> deserialize(:"operation.whitelist", :struct, AdobeExperienceManagerOSGIConfig(AEM)API.Model.ConfigNodePropertyArray, options)
    |> deserialize(:"operation.whitelist.prefixes", :struct, AdobeExperienceManagerOSGIConfig(AEM)API.Model.ConfigNodePropertyArray, options)
    |> deserialize(:"typehint.whitelist", :struct, AdobeExperienceManagerOSGIConfig(AEM)API.Model.ConfigNodePropertyArray, options)
    |> deserialize(:"resourcetype.whitelist", :struct, AdobeExperienceManagerOSGIConfig(AEM)API.Model.ConfigNodePropertyArray, options)
  end
end

