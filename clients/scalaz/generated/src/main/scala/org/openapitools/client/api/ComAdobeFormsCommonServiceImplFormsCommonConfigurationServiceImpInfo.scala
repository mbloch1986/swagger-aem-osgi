package org.openapitools.client.api

import argonaut._
import argonaut.EncodeJson._
import argonaut.DecodeJson._

import org.http4s.{EntityDecoder, EntityEncoder}
import org.http4s.argonaut._
import org.joda.time.DateTime
import ComAdobeFormsCommonServiceImplFormsCommonConfigurationServiceImpInfo._

case class ComAdobeFormsCommonServiceImplFormsCommonConfigurationServiceImpInfo (
  pid: Option[String],
title: Option[String],
description: Option[String],
properties: Option[ComAdobeFormsCommonServiceImplFormsCommonConfigurationServiceImpProperties])

object ComAdobeFormsCommonServiceImplFormsCommonConfigurationServiceImpInfo {
  import DateTimeCodecs._

  implicit val ComAdobeFormsCommonServiceImplFormsCommonConfigurationServiceImpInfoCodecJson: CodecJson[ComAdobeFormsCommonServiceImplFormsCommonConfigurationServiceImpInfo] = CodecJson.derive[ComAdobeFormsCommonServiceImplFormsCommonConfigurationServiceImpInfo]
  implicit val ComAdobeFormsCommonServiceImplFormsCommonConfigurationServiceImpInfoDecoder: EntityDecoder[ComAdobeFormsCommonServiceImplFormsCommonConfigurationServiceImpInfo] = jsonOf[ComAdobeFormsCommonServiceImplFormsCommonConfigurationServiceImpInfo]
  implicit val ComAdobeFormsCommonServiceImplFormsCommonConfigurationServiceImpInfoEncoder: EntityEncoder[ComAdobeFormsCommonServiceImplFormsCommonConfigurationServiceImpInfo] = jsonEncoderOf[ComAdobeFormsCommonServiceImplFormsCommonConfigurationServiceImpInfo]
}
