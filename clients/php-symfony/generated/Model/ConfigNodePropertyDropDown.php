<?php
/**
 * ConfigNodePropertyDropDown
 *
 * PHP version 5
 *
 * @category Class
 * @package  OpenAPI\Server\Model
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * Adobe Experience Manager OSGI config (AEM) API
 *
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 *
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Do not edit the class manually.
 */

namespace OpenAPI\Server\Model;

use Symfony\Component\Validator\Constraints as Assert;
use JMS\Serializer\Annotation\Type;
use JMS\Serializer\Annotation\SerializedName;

/**
 * Class representing the ConfigNodePropertyDropDown model.
 *
 * @package OpenAPI\Server\Model
 * @author  OpenAPI Generator team
 */
class ConfigNodePropertyDropDown 
{
        /**
     * property name
     *
     * @var string|null
     * @SerializedName("name")
     * @Assert\Type("string")
     * @Type("string")
     */
    protected $name;

    /**
     * True if optional
     *
     * @var bool|null
     * @SerializedName("optional")
     * @Assert\Type("bool")
     * @Type("bool")
     */
    protected $optional;

    /**
     * True if property is set
     *
     * @var bool|null
     * @SerializedName("is_set")
     * @Assert\Type("bool")
     * @Type("bool")
     */
    protected $isSet;

    /**
     * @var OpenAPI\Server\Model\ConfigNodePropertyDropDownType|null
     * @SerializedName("type")
     * @Assert\Type("OpenAPI\Server\Model\ConfigNodePropertyDropDownType")
     * @Type("OpenAPI\Server\Model\ConfigNodePropertyDropDownType")
     */
    protected $type;

    /**
     * Property value
     *
     * @var array|null
     * @SerializedName("value")
     * @Assert\Type("array")
     * @Type("array")
     */
    protected $value;

    /**
     * Property description
     *
     * @var string|null
     * @SerializedName("description")
     * @Assert\Type("string")
     * @Type("string")
     */
    protected $description;

    /**
     * Constructor
     * @param mixed[] $data Associated array of property values initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->name = isset($data['name']) ? $data['name'] : null;
        $this->optional = isset($data['optional']) ? $data['optional'] : null;
        $this->isSet = isset($data['isSet']) ? $data['isSet'] : null;
        $this->type = isset($data['type']) ? $data['type'] : null;
        $this->value = isset($data['value']) ? $data['value'] : null;
        $this->description = isset($data['description']) ? $data['description'] : null;
    }

    /**
     * Gets name.
     *
     * @return string|null
     */
    public function getName()
    {
        return $this->name;
    }

    /**
     * Sets name.
     *
     * @param string|null $name  property name
     *
     * @return $this
     */
    public function setName($name = null)
    {
        $this->name = $name;

        return $this;
    }

    /**
     * Gets optional.
     *
     * @return bool|null
     */
    public function isOptional()
    {
        return $this->optional;
    }

    /**
     * Sets optional.
     *
     * @param bool|null $optional  True if optional
     *
     * @return $this
     */
    public function setOptional($optional = null)
    {
        $this->optional = $optional;

        return $this;
    }

    /**
     * Gets isSet.
     *
     * @return bool|null
     */
    public function isIsSet()
    {
        return $this->isSet;
    }

    /**
     * Sets isSet.
     *
     * @param bool|null $isSet  True if property is set
     *
     * @return $this
     */
    public function setIsSet($isSet = null)
    {
        $this->isSet = $isSet;

        return $this;
    }

    /**
     * Gets type.
     *
     * @return OpenAPI\Server\Model\ConfigNodePropertyDropDownType|null
     */
    public function getType()
    {
        return $this->type;
    }

    /**
     * Sets type.
     *
     * @param OpenAPI\Server\Model\ConfigNodePropertyDropDownType|null $type
     *
     * @return $this
     */
    public function setType(ConfigNodePropertyDropDownType $type = null)
    {
        $this->type = $type;

        return $this;
    }

    /**
     * Gets value.
     *
     * @return array|null
     */
    public function getValue()
    {
        return $this->value;
    }

    /**
     * Sets value.
     *
     * @param array|null $value  Property value
     *
     * @return $this
     */
    public function setValue(array $value = null)
    {
        $this->value = $value;

        return $this;
    }

    /**
     * Gets description.
     *
     * @return string|null
     */
    public function getDescription()
    {
        return $this->description;
    }

    /**
     * Sets description.
     *
     * @param string|null $description  Property description
     *
     * @return $this
     */
    public function setDescription($description = null)
    {
        $this->description = $description;

        return $this;
    }
}


