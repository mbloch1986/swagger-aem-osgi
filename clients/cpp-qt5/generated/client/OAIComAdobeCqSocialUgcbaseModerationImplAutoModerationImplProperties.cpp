/**
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


#include "OAIComAdobeCqSocialUgcbaseModerationImplAutoModerationImplProperties.h"

#include "OAIHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace OpenAPI {

OAIComAdobeCqSocialUgcbaseModerationImplAutoModerationImplProperties::OAIComAdobeCqSocialUgcbaseModerationImplAutoModerationImplProperties(QString json) {
    init();
    this->fromJson(json);
}

OAIComAdobeCqSocialUgcbaseModerationImplAutoModerationImplProperties::OAIComAdobeCqSocialUgcbaseModerationImplAutoModerationImplProperties() {
    init();
}

OAIComAdobeCqSocialUgcbaseModerationImplAutoModerationImplProperties::~OAIComAdobeCqSocialUgcbaseModerationImplAutoModerationImplProperties() {
    this->cleanup();
}

void
OAIComAdobeCqSocialUgcbaseModerationImplAutoModerationImplProperties::init() {
    automoderation_sequence = new OAIConfigNodePropertyArray();
    m_automoderation_sequence_isSet = false;
    automoderation_onfailurestop = new OAIConfigNodePropertyBoolean();
    m_automoderation_onfailurestop_isSet = false;
}

void
OAIComAdobeCqSocialUgcbaseModerationImplAutoModerationImplProperties::cleanup() {
    if(automoderation_sequence != nullptr) { 
        delete automoderation_sequence;
    }
    if(automoderation_onfailurestop != nullptr) { 
        delete automoderation_onfailurestop;
    }
}

OAIComAdobeCqSocialUgcbaseModerationImplAutoModerationImplProperties*
OAIComAdobeCqSocialUgcbaseModerationImplAutoModerationImplProperties::fromJson(QString json) {
    QByteArray array (json.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
    return this;
}

void
OAIComAdobeCqSocialUgcbaseModerationImplAutoModerationImplProperties::fromJsonObject(QJsonObject pJson) {
    ::OpenAPI::setValue(&automoderation_sequence, pJson["automoderation.sequence"], "OAIConfigNodePropertyArray", "OAIConfigNodePropertyArray");
    
    ::OpenAPI::setValue(&automoderation_onfailurestop, pJson["automoderation.onfailurestop"], "OAIConfigNodePropertyBoolean", "OAIConfigNodePropertyBoolean");
    
}

QString
OAIComAdobeCqSocialUgcbaseModerationImplAutoModerationImplProperties::asJson ()
{
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject
OAIComAdobeCqSocialUgcbaseModerationImplAutoModerationImplProperties::asJsonObject() {
    QJsonObject obj;
    if((automoderation_sequence != nullptr) && (automoderation_sequence->isSet())){
        toJsonValue(QString("automoderation.sequence"), automoderation_sequence, obj, QString("OAIConfigNodePropertyArray"));
    }
    if((automoderation_onfailurestop != nullptr) && (automoderation_onfailurestop->isSet())){
        toJsonValue(QString("automoderation.onfailurestop"), automoderation_onfailurestop, obj, QString("OAIConfigNodePropertyBoolean"));
    }

    return obj;
}

OAIConfigNodePropertyArray*
OAIComAdobeCqSocialUgcbaseModerationImplAutoModerationImplProperties::getAutomoderationSequence() {
    return automoderation_sequence;
}
void
OAIComAdobeCqSocialUgcbaseModerationImplAutoModerationImplProperties::setAutomoderationSequence(OAIConfigNodePropertyArray* automoderation_sequence) {
    this->automoderation_sequence = automoderation_sequence;
    this->m_automoderation_sequence_isSet = true;
}

OAIConfigNodePropertyBoolean*
OAIComAdobeCqSocialUgcbaseModerationImplAutoModerationImplProperties::getAutomoderationOnfailurestop() {
    return automoderation_onfailurestop;
}
void
OAIComAdobeCqSocialUgcbaseModerationImplAutoModerationImplProperties::setAutomoderationOnfailurestop(OAIConfigNodePropertyBoolean* automoderation_onfailurestop) {
    this->automoderation_onfailurestop = automoderation_onfailurestop;
    this->m_automoderation_onfailurestop_isSet = true;
}


bool
OAIComAdobeCqSocialUgcbaseModerationImplAutoModerationImplProperties::isSet(){
    bool isObjectUpdated = false;
    do{
        if(automoderation_sequence != nullptr && automoderation_sequence->isSet()){ isObjectUpdated = true; break;}
        if(automoderation_onfailurestop != nullptr && automoderation_onfailurestop->isSet()){ isObjectUpdated = true; break;}
    }while(false);
    return isObjectUpdated;
}
}

