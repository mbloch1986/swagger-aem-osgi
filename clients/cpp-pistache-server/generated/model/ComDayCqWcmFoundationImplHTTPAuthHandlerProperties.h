/**
* Adobe Experience Manager OSGI config (AEM) API
* Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
*
* OpenAPI spec version: 1.0.0-pre.0
* Contact: opensource@shinesolutions.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
/*
 * ComDayCqWcmFoundationImplHTTPAuthHandlerProperties.h
 *
 * 
 */

#ifndef ComDayCqWcmFoundationImplHTTPAuthHandlerProperties_H_
#define ComDayCqWcmFoundationImplHTTPAuthHandlerProperties_H_


#include "ModelBase.h"

#include "ConfigNodePropertyBoolean.h"
#include "ConfigNodePropertyArray.h"
#include "ConfigNodePropertyString.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
/// 
/// </summary>
class  ComDayCqWcmFoundationImplHTTPAuthHandlerProperties
    : public ModelBase
{
public:
    ComDayCqWcmFoundationImplHTTPAuthHandlerProperties();
    virtual ~ComDayCqWcmFoundationImplHTTPAuthHandlerProperties();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    nlohmann::json toJson() const override;
    void fromJson(nlohmann::json& json) override;

    /////////////////////////////////////////////
    /// ComDayCqWcmFoundationImplHTTPAuthHandlerProperties members

    /// <summary>
    /// 
    /// </summary>
    ConfigNodePropertyString getPath() const;
    void setPath(ConfigNodePropertyString const& value);
    bool pathIsSet() const;
    void unsetPath();
    /// <summary>
    /// 
    /// </summary>
    ConfigNodePropertyBoolean getAuthHttpNologin() const;
    void setAuthHttpNologin(ConfigNodePropertyBoolean const& value);
    bool authHttpNologinIsSet() const;
    void unsetAuth_http_nologin();
    /// <summary>
    /// 
    /// </summary>
    ConfigNodePropertyString getAuthHttpRealm() const;
    void setAuthHttpRealm(ConfigNodePropertyString const& value);
    bool authHttpRealmIsSet() const;
    void unsetAuth_http_realm();
    /// <summary>
    /// 
    /// </summary>
    ConfigNodePropertyString getAuthDefaultLoginpage() const;
    void setAuthDefaultLoginpage(ConfigNodePropertyString const& value);
    bool authDefaultLoginpageIsSet() const;
    void unsetAuth_default_loginpage();
    /// <summary>
    /// 
    /// </summary>
    ConfigNodePropertyArray getAuthCredForm() const;
    void setAuthCredForm(ConfigNodePropertyArray const& value);
    bool authCredFormIsSet() const;
    void unsetAuth_cred_form();
    /// <summary>
    /// 
    /// </summary>
    ConfigNodePropertyArray getAuthCredUtf8() const;
    void setAuthCredUtf8(ConfigNodePropertyArray const& value);
    bool authCredUtf8IsSet() const;
    void unsetAuth_cred_utf8();

protected:
    ConfigNodePropertyString m_Path;
    bool m_PathIsSet;
    ConfigNodePropertyBoolean m_Auth_http_nologin;
    bool m_Auth_http_nologinIsSet;
    ConfigNodePropertyString m_Auth_http_realm;
    bool m_Auth_http_realmIsSet;
    ConfigNodePropertyString m_Auth_default_loginpage;
    bool m_Auth_default_loginpageIsSet;
    ConfigNodePropertyArray m_Auth_cred_form;
    bool m_Auth_cred_formIsSet;
    ConfigNodePropertyArray m_Auth_cred_utf8;
    bool m_Auth_cred_utf8IsSet;
};

}
}
}
}

#endif /* ComDayCqWcmFoundationImplHTTPAuthHandlerProperties_H_ */
