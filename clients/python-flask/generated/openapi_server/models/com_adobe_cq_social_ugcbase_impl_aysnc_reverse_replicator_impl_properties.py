# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server.models.config_node_property_integer import ConfigNodePropertyInteger  # noqa: F401,E501
from openapi_server import util


class ComAdobeCqSocialUgcbaseImplAysncReverseReplicatorImplProperties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, pool_size: ConfigNodePropertyInteger=None, max_pool_size: ConfigNodePropertyInteger=None, queue_size: ConfigNodePropertyInteger=None, keep_alive_time: ConfigNodePropertyInteger=None):  # noqa: E501
        """ComAdobeCqSocialUgcbaseImplAysncReverseReplicatorImplProperties - a model defined in OpenAPI

        :param pool_size: The pool_size of this ComAdobeCqSocialUgcbaseImplAysncReverseReplicatorImplProperties.  # noqa: E501
        :type pool_size: ConfigNodePropertyInteger
        :param max_pool_size: The max_pool_size of this ComAdobeCqSocialUgcbaseImplAysncReverseReplicatorImplProperties.  # noqa: E501
        :type max_pool_size: ConfigNodePropertyInteger
        :param queue_size: The queue_size of this ComAdobeCqSocialUgcbaseImplAysncReverseReplicatorImplProperties.  # noqa: E501
        :type queue_size: ConfigNodePropertyInteger
        :param keep_alive_time: The keep_alive_time of this ComAdobeCqSocialUgcbaseImplAysncReverseReplicatorImplProperties.  # noqa: E501
        :type keep_alive_time: ConfigNodePropertyInteger
        """
        self.openapi_types = {
            'pool_size': ConfigNodePropertyInteger,
            'max_pool_size': ConfigNodePropertyInteger,
            'queue_size': ConfigNodePropertyInteger,
            'keep_alive_time': ConfigNodePropertyInteger
        }

        self.attribute_map = {
            'pool_size': 'poolSize',
            'max_pool_size': 'maxPoolSize',
            'queue_size': 'queueSize',
            'keep_alive_time': 'keepAliveTime'
        }

        self._pool_size = pool_size
        self._max_pool_size = max_pool_size
        self._queue_size = queue_size
        self._keep_alive_time = keep_alive_time

    @classmethod
    def from_dict(cls, dikt) -> 'ComAdobeCqSocialUgcbaseImplAysncReverseReplicatorImplProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The comAdobeCqSocialUgcbaseImplAysncReverseReplicatorImplProperties of this ComAdobeCqSocialUgcbaseImplAysncReverseReplicatorImplProperties.  # noqa: E501
        :rtype: ComAdobeCqSocialUgcbaseImplAysncReverseReplicatorImplProperties
        """
        return util.deserialize_model(dikt, cls)

    @property
    def pool_size(self) -> ConfigNodePropertyInteger:
        """Gets the pool_size of this ComAdobeCqSocialUgcbaseImplAysncReverseReplicatorImplProperties.


        :return: The pool_size of this ComAdobeCqSocialUgcbaseImplAysncReverseReplicatorImplProperties.
        :rtype: ConfigNodePropertyInteger
        """
        return self._pool_size

    @pool_size.setter
    def pool_size(self, pool_size: ConfigNodePropertyInteger):
        """Sets the pool_size of this ComAdobeCqSocialUgcbaseImplAysncReverseReplicatorImplProperties.


        :param pool_size: The pool_size of this ComAdobeCqSocialUgcbaseImplAysncReverseReplicatorImplProperties.
        :type pool_size: ConfigNodePropertyInteger
        """

        self._pool_size = pool_size

    @property
    def max_pool_size(self) -> ConfigNodePropertyInteger:
        """Gets the max_pool_size of this ComAdobeCqSocialUgcbaseImplAysncReverseReplicatorImplProperties.


        :return: The max_pool_size of this ComAdobeCqSocialUgcbaseImplAysncReverseReplicatorImplProperties.
        :rtype: ConfigNodePropertyInteger
        """
        return self._max_pool_size

    @max_pool_size.setter
    def max_pool_size(self, max_pool_size: ConfigNodePropertyInteger):
        """Sets the max_pool_size of this ComAdobeCqSocialUgcbaseImplAysncReverseReplicatorImplProperties.


        :param max_pool_size: The max_pool_size of this ComAdobeCqSocialUgcbaseImplAysncReverseReplicatorImplProperties.
        :type max_pool_size: ConfigNodePropertyInteger
        """

        self._max_pool_size = max_pool_size

    @property
    def queue_size(self) -> ConfigNodePropertyInteger:
        """Gets the queue_size of this ComAdobeCqSocialUgcbaseImplAysncReverseReplicatorImplProperties.


        :return: The queue_size of this ComAdobeCqSocialUgcbaseImplAysncReverseReplicatorImplProperties.
        :rtype: ConfigNodePropertyInteger
        """
        return self._queue_size

    @queue_size.setter
    def queue_size(self, queue_size: ConfigNodePropertyInteger):
        """Sets the queue_size of this ComAdobeCqSocialUgcbaseImplAysncReverseReplicatorImplProperties.


        :param queue_size: The queue_size of this ComAdobeCqSocialUgcbaseImplAysncReverseReplicatorImplProperties.
        :type queue_size: ConfigNodePropertyInteger
        """

        self._queue_size = queue_size

    @property
    def keep_alive_time(self) -> ConfigNodePropertyInteger:
        """Gets the keep_alive_time of this ComAdobeCqSocialUgcbaseImplAysncReverseReplicatorImplProperties.


        :return: The keep_alive_time of this ComAdobeCqSocialUgcbaseImplAysncReverseReplicatorImplProperties.
        :rtype: ConfigNodePropertyInteger
        """
        return self._keep_alive_time

    @keep_alive_time.setter
    def keep_alive_time(self, keep_alive_time: ConfigNodePropertyInteger):
        """Sets the keep_alive_time of this ComAdobeCqSocialUgcbaseImplAysncReverseReplicatorImplProperties.


        :param keep_alive_time: The keep_alive_time of this ComAdobeCqSocialUgcbaseImplAysncReverseReplicatorImplProperties.
        :type keep_alive_time: ConfigNodePropertyInteger
        """

        self._keep_alive_time = keep_alive_time
