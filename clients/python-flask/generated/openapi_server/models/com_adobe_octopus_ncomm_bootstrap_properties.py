# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server.models.config_node_property_integer import ConfigNodePropertyInteger  # noqa: F401,E501
from openapi_server import util


class ComAdobeOctopusNcommBootstrapProperties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, max_connections: ConfigNodePropertyInteger=None, max_requests: ConfigNodePropertyInteger=None, request_timeout: ConfigNodePropertyInteger=None, request_retries: ConfigNodePropertyInteger=None, launch_timeout: ConfigNodePropertyInteger=None):  # noqa: E501
        """ComAdobeOctopusNcommBootstrapProperties - a model defined in OpenAPI

        :param max_connections: The max_connections of this ComAdobeOctopusNcommBootstrapProperties.  # noqa: E501
        :type max_connections: ConfigNodePropertyInteger
        :param max_requests: The max_requests of this ComAdobeOctopusNcommBootstrapProperties.  # noqa: E501
        :type max_requests: ConfigNodePropertyInteger
        :param request_timeout: The request_timeout of this ComAdobeOctopusNcommBootstrapProperties.  # noqa: E501
        :type request_timeout: ConfigNodePropertyInteger
        :param request_retries: The request_retries of this ComAdobeOctopusNcommBootstrapProperties.  # noqa: E501
        :type request_retries: ConfigNodePropertyInteger
        :param launch_timeout: The launch_timeout of this ComAdobeOctopusNcommBootstrapProperties.  # noqa: E501
        :type launch_timeout: ConfigNodePropertyInteger
        """
        self.openapi_types = {
            'max_connections': ConfigNodePropertyInteger,
            'max_requests': ConfigNodePropertyInteger,
            'request_timeout': ConfigNodePropertyInteger,
            'request_retries': ConfigNodePropertyInteger,
            'launch_timeout': ConfigNodePropertyInteger
        }

        self.attribute_map = {
            'max_connections': 'maxConnections',
            'max_requests': 'maxRequests',
            'request_timeout': 'requestTimeout',
            'request_retries': 'requestRetries',
            'launch_timeout': 'launchTimeout'
        }

        self._max_connections = max_connections
        self._max_requests = max_requests
        self._request_timeout = request_timeout
        self._request_retries = request_retries
        self._launch_timeout = launch_timeout

    @classmethod
    def from_dict(cls, dikt) -> 'ComAdobeOctopusNcommBootstrapProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The comAdobeOctopusNcommBootstrapProperties of this ComAdobeOctopusNcommBootstrapProperties.  # noqa: E501
        :rtype: ComAdobeOctopusNcommBootstrapProperties
        """
        return util.deserialize_model(dikt, cls)

    @property
    def max_connections(self) -> ConfigNodePropertyInteger:
        """Gets the max_connections of this ComAdobeOctopusNcommBootstrapProperties.


        :return: The max_connections of this ComAdobeOctopusNcommBootstrapProperties.
        :rtype: ConfigNodePropertyInteger
        """
        return self._max_connections

    @max_connections.setter
    def max_connections(self, max_connections: ConfigNodePropertyInteger):
        """Sets the max_connections of this ComAdobeOctopusNcommBootstrapProperties.


        :param max_connections: The max_connections of this ComAdobeOctopusNcommBootstrapProperties.
        :type max_connections: ConfigNodePropertyInteger
        """

        self._max_connections = max_connections

    @property
    def max_requests(self) -> ConfigNodePropertyInteger:
        """Gets the max_requests of this ComAdobeOctopusNcommBootstrapProperties.


        :return: The max_requests of this ComAdobeOctopusNcommBootstrapProperties.
        :rtype: ConfigNodePropertyInteger
        """
        return self._max_requests

    @max_requests.setter
    def max_requests(self, max_requests: ConfigNodePropertyInteger):
        """Sets the max_requests of this ComAdobeOctopusNcommBootstrapProperties.


        :param max_requests: The max_requests of this ComAdobeOctopusNcommBootstrapProperties.
        :type max_requests: ConfigNodePropertyInteger
        """

        self._max_requests = max_requests

    @property
    def request_timeout(self) -> ConfigNodePropertyInteger:
        """Gets the request_timeout of this ComAdobeOctopusNcommBootstrapProperties.


        :return: The request_timeout of this ComAdobeOctopusNcommBootstrapProperties.
        :rtype: ConfigNodePropertyInteger
        """
        return self._request_timeout

    @request_timeout.setter
    def request_timeout(self, request_timeout: ConfigNodePropertyInteger):
        """Sets the request_timeout of this ComAdobeOctopusNcommBootstrapProperties.


        :param request_timeout: The request_timeout of this ComAdobeOctopusNcommBootstrapProperties.
        :type request_timeout: ConfigNodePropertyInteger
        """

        self._request_timeout = request_timeout

    @property
    def request_retries(self) -> ConfigNodePropertyInteger:
        """Gets the request_retries of this ComAdobeOctopusNcommBootstrapProperties.


        :return: The request_retries of this ComAdobeOctopusNcommBootstrapProperties.
        :rtype: ConfigNodePropertyInteger
        """
        return self._request_retries

    @request_retries.setter
    def request_retries(self, request_retries: ConfigNodePropertyInteger):
        """Sets the request_retries of this ComAdobeOctopusNcommBootstrapProperties.


        :param request_retries: The request_retries of this ComAdobeOctopusNcommBootstrapProperties.
        :type request_retries: ConfigNodePropertyInteger
        """

        self._request_retries = request_retries

    @property
    def launch_timeout(self) -> ConfigNodePropertyInteger:
        """Gets the launch_timeout of this ComAdobeOctopusNcommBootstrapProperties.


        :return: The launch_timeout of this ComAdobeOctopusNcommBootstrapProperties.
        :rtype: ConfigNodePropertyInteger
        """
        return self._launch_timeout

    @launch_timeout.setter
    def launch_timeout(self, launch_timeout: ConfigNodePropertyInteger):
        """Sets the launch_timeout of this ComAdobeOctopusNcommBootstrapProperties.


        :param launch_timeout: The launch_timeout of this ComAdobeOctopusNcommBootstrapProperties.
        :type launch_timeout: ConfigNodePropertyInteger
        """

        self._launch_timeout = launch_timeout
