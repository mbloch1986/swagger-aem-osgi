/* 
 * Adobe Experience Manager OSGI config (AEM) API
 *
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Org.OpenAPITools.Client.OpenAPIDateConverter;

namespace Org.OpenAPITools.Model
{
    /// <summary>
    /// ComAdobeGraniteWorkflowCorePayloadmapPayloadMoveListenerProperties
    /// </summary>
    [DataContract]
    public partial class ComAdobeGraniteWorkflowCorePayloadmapPayloadMoveListenerProperties :  IEquatable<ComAdobeGraniteWorkflowCorePayloadmapPayloadMoveListenerProperties>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ComAdobeGraniteWorkflowCorePayloadmapPayloadMoveListenerProperties" /> class.
        /// </summary>
        /// <param name="payloadMoveWhiteList">payloadMoveWhiteList.</param>
        /// <param name="payloadMoveHandleFromWorkflowProcess">payloadMoveHandleFromWorkflowProcess.</param>
        public ComAdobeGraniteWorkflowCorePayloadmapPayloadMoveListenerProperties(ConfigNodePropertyArray payloadMoveWhiteList = default(ConfigNodePropertyArray), ConfigNodePropertyBoolean payloadMoveHandleFromWorkflowProcess = default(ConfigNodePropertyBoolean))
        {
            this.PayloadMoveWhiteList = payloadMoveWhiteList;
            this.PayloadMoveHandleFromWorkflowProcess = payloadMoveHandleFromWorkflowProcess;
        }
        
        /// <summary>
        /// Gets or Sets PayloadMoveWhiteList
        /// </summary>
        [DataMember(Name="payload.move.white.list", EmitDefaultValue=false)]
        public ConfigNodePropertyArray PayloadMoveWhiteList { get; set; }

        /// <summary>
        /// Gets or Sets PayloadMoveHandleFromWorkflowProcess
        /// </summary>
        [DataMember(Name="payload.move.handle.from.workflow.process", EmitDefaultValue=false)]
        public ConfigNodePropertyBoolean PayloadMoveHandleFromWorkflowProcess { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class ComAdobeGraniteWorkflowCorePayloadmapPayloadMoveListenerProperties {\n");
            sb.Append("  PayloadMoveWhiteList: ").Append(PayloadMoveWhiteList).Append("\n");
            sb.Append("  PayloadMoveHandleFromWorkflowProcess: ").Append(PayloadMoveHandleFromWorkflowProcess).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as ComAdobeGraniteWorkflowCorePayloadmapPayloadMoveListenerProperties);
        }

        /// <summary>
        /// Returns true if ComAdobeGraniteWorkflowCorePayloadmapPayloadMoveListenerProperties instances are equal
        /// </summary>
        /// <param name="input">Instance of ComAdobeGraniteWorkflowCorePayloadmapPayloadMoveListenerProperties to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(ComAdobeGraniteWorkflowCorePayloadmapPayloadMoveListenerProperties input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.PayloadMoveWhiteList == input.PayloadMoveWhiteList ||
                    (this.PayloadMoveWhiteList != null &&
                    this.PayloadMoveWhiteList.Equals(input.PayloadMoveWhiteList))
                ) && 
                (
                    this.PayloadMoveHandleFromWorkflowProcess == input.PayloadMoveHandleFromWorkflowProcess ||
                    (this.PayloadMoveHandleFromWorkflowProcess != null &&
                    this.PayloadMoveHandleFromWorkflowProcess.Equals(input.PayloadMoveHandleFromWorkflowProcess))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.PayloadMoveWhiteList != null)
                    hashCode = hashCode * 59 + this.PayloadMoveWhiteList.GetHashCode();
                if (this.PayloadMoveHandleFromWorkflowProcess != null)
                    hashCode = hashCode * 59 + this.PayloadMoveHandleFromWorkflowProcess.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
