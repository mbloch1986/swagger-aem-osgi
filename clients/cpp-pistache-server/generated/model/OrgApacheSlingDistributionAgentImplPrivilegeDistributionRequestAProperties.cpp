/**
* Adobe Experience Manager OSGI config (AEM) API
* Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
*
* OpenAPI spec version: 1.0.0-pre.0
* Contact: opensource@shinesolutions.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/


#include "OrgApacheSlingDistributionAgentImplPrivilegeDistributionRequestAProperties.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

OrgApacheSlingDistributionAgentImplPrivilegeDistributionRequestAProperties::OrgApacheSlingDistributionAgentImplPrivilegeDistributionRequestAProperties()
{
    m_NameIsSet = false;
    m_JcrPrivilegeIsSet = false;
    
}

OrgApacheSlingDistributionAgentImplPrivilegeDistributionRequestAProperties::~OrgApacheSlingDistributionAgentImplPrivilegeDistributionRequestAProperties()
{
}

void OrgApacheSlingDistributionAgentImplPrivilegeDistributionRequestAProperties::validate()
{
    // TODO: implement validation
}

nlohmann::json OrgApacheSlingDistributionAgentImplPrivilegeDistributionRequestAProperties::toJson() const
{
    nlohmann::json val = nlohmann::json::object();

    if(m_NameIsSet)
    {
        val["name"] = ModelBase::toJson(m_Name);
    }
    if(m_JcrPrivilegeIsSet)
    {
        val["jcrPrivilege"] = ModelBase::toJson(m_JcrPrivilege);
    }
    

    return val;
}

void OrgApacheSlingDistributionAgentImplPrivilegeDistributionRequestAProperties::fromJson(nlohmann::json& val)
{
    if(val.find("name") != val.end())
    {
        if(!val["name"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["name"]);
            setName( newItem );
        }
        
    }
    if(val.find("jcrPrivilege") != val.end())
    {
        if(!val["jcrPrivilege"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["jcrPrivilege"]);
            setJcrPrivilege( newItem );
        }
        
    }
    
}


ConfigNodePropertyString OrgApacheSlingDistributionAgentImplPrivilegeDistributionRequestAProperties::getName() const
{
    return m_Name;
}
void OrgApacheSlingDistributionAgentImplPrivilegeDistributionRequestAProperties::setName(ConfigNodePropertyString const& value)
{
    m_Name = value;
    m_NameIsSet = true;
}
bool OrgApacheSlingDistributionAgentImplPrivilegeDistributionRequestAProperties::nameIsSet() const
{
    return m_NameIsSet;
}
void OrgApacheSlingDistributionAgentImplPrivilegeDistributionRequestAProperties::unsetName()
{
    m_NameIsSet = false;
}
ConfigNodePropertyString OrgApacheSlingDistributionAgentImplPrivilegeDistributionRequestAProperties::getJcrPrivilege() const
{
    return m_JcrPrivilege;
}
void OrgApacheSlingDistributionAgentImplPrivilegeDistributionRequestAProperties::setJcrPrivilege(ConfigNodePropertyString const& value)
{
    m_JcrPrivilege = value;
    m_JcrPrivilegeIsSet = true;
}
bool OrgApacheSlingDistributionAgentImplPrivilegeDistributionRequestAProperties::jcrPrivilegeIsSet() const
{
    return m_JcrPrivilegeIsSet;
}
void OrgApacheSlingDistributionAgentImplPrivilegeDistributionRequestAProperties::unsetJcrPrivilege()
{
    m_JcrPrivilegeIsSet = false;
}

}
}
}
}

