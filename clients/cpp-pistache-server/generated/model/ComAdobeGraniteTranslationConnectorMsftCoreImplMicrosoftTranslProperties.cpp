/**
* Adobe Experience Manager OSGI config (AEM) API
* Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
*
* OpenAPI spec version: 1.0.0-pre.0
* Contact: opensource@shinesolutions.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/


#include "ComAdobeGraniteTranslationConnectorMsftCoreImplMicrosoftTranslProperties.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

ComAdobeGraniteTranslationConnectorMsftCoreImplMicrosoftTranslProperties::ComAdobeGraniteTranslationConnectorMsftCoreImplMicrosoftTranslProperties()
{
    m_TranslationFactoryIsSet = false;
    m_DefaultConnectorLabelIsSet = false;
    m_DefaultConnectorAttributionIsSet = false;
    m_DefaultConnectorWorkspaceIdIsSet = false;
    m_DefaultConnectorSubscriptionKeyIsSet = false;
    m_LanguageMapLocationIsSet = false;
    m_CategoryMapLocationIsSet = false;
    m_RetryAttemptsIsSet = false;
    m_TimeoutCountIsSet = false;
    
}

ComAdobeGraniteTranslationConnectorMsftCoreImplMicrosoftTranslProperties::~ComAdobeGraniteTranslationConnectorMsftCoreImplMicrosoftTranslProperties()
{
}

void ComAdobeGraniteTranslationConnectorMsftCoreImplMicrosoftTranslProperties::validate()
{
    // TODO: implement validation
}

nlohmann::json ComAdobeGraniteTranslationConnectorMsftCoreImplMicrosoftTranslProperties::toJson() const
{
    nlohmann::json val = nlohmann::json::object();

    if(m_TranslationFactoryIsSet)
    {
        val["translationFactory"] = ModelBase::toJson(m_TranslationFactory);
    }
    if(m_DefaultConnectorLabelIsSet)
    {
        val["defaultConnectorLabel"] = ModelBase::toJson(m_DefaultConnectorLabel);
    }
    if(m_DefaultConnectorAttributionIsSet)
    {
        val["defaultConnectorAttribution"] = ModelBase::toJson(m_DefaultConnectorAttribution);
    }
    if(m_DefaultConnectorWorkspaceIdIsSet)
    {
        val["defaultConnectorWorkspaceId"] = ModelBase::toJson(m_DefaultConnectorWorkspaceId);
    }
    if(m_DefaultConnectorSubscriptionKeyIsSet)
    {
        val["defaultConnectorSubscriptionKey"] = ModelBase::toJson(m_DefaultConnectorSubscriptionKey);
    }
    if(m_LanguageMapLocationIsSet)
    {
        val["languageMapLocation"] = ModelBase::toJson(m_LanguageMapLocation);
    }
    if(m_CategoryMapLocationIsSet)
    {
        val["categoryMapLocation"] = ModelBase::toJson(m_CategoryMapLocation);
    }
    if(m_RetryAttemptsIsSet)
    {
        val["retryAttempts"] = ModelBase::toJson(m_RetryAttempts);
    }
    if(m_TimeoutCountIsSet)
    {
        val["timeoutCount"] = ModelBase::toJson(m_TimeoutCount);
    }
    

    return val;
}

void ComAdobeGraniteTranslationConnectorMsftCoreImplMicrosoftTranslProperties::fromJson(nlohmann::json& val)
{
    if(val.find("translationFactory") != val.end())
    {
        if(!val["translationFactory"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["translationFactory"]);
            setTranslationFactory( newItem );
        }
        
    }
    if(val.find("defaultConnectorLabel") != val.end())
    {
        if(!val["defaultConnectorLabel"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["defaultConnectorLabel"]);
            setDefaultConnectorLabel( newItem );
        }
        
    }
    if(val.find("defaultConnectorAttribution") != val.end())
    {
        if(!val["defaultConnectorAttribution"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["defaultConnectorAttribution"]);
            setDefaultConnectorAttribution( newItem );
        }
        
    }
    if(val.find("defaultConnectorWorkspaceId") != val.end())
    {
        if(!val["defaultConnectorWorkspaceId"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["defaultConnectorWorkspaceId"]);
            setDefaultConnectorWorkspaceId( newItem );
        }
        
    }
    if(val.find("defaultConnectorSubscriptionKey") != val.end())
    {
        if(!val["defaultConnectorSubscriptionKey"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["defaultConnectorSubscriptionKey"]);
            setDefaultConnectorSubscriptionKey( newItem );
        }
        
    }
    if(val.find("languageMapLocation") != val.end())
    {
        if(!val["languageMapLocation"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["languageMapLocation"]);
            setLanguageMapLocation( newItem );
        }
        
    }
    if(val.find("categoryMapLocation") != val.end())
    {
        if(!val["categoryMapLocation"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["categoryMapLocation"]);
            setCategoryMapLocation( newItem );
        }
        
    }
    if(val.find("retryAttempts") != val.end())
    {
        if(!val["retryAttempts"].is_null())
        {
            ConfigNodePropertyInteger newItem;
            newItem.fromJson(val["retryAttempts"]);
            setRetryAttempts( newItem );
        }
        
    }
    if(val.find("timeoutCount") != val.end())
    {
        if(!val["timeoutCount"].is_null())
        {
            ConfigNodePropertyInteger newItem;
            newItem.fromJson(val["timeoutCount"]);
            setTimeoutCount( newItem );
        }
        
    }
    
}


ConfigNodePropertyString ComAdobeGraniteTranslationConnectorMsftCoreImplMicrosoftTranslProperties::getTranslationFactory() const
{
    return m_TranslationFactory;
}
void ComAdobeGraniteTranslationConnectorMsftCoreImplMicrosoftTranslProperties::setTranslationFactory(ConfigNodePropertyString const& value)
{
    m_TranslationFactory = value;
    m_TranslationFactoryIsSet = true;
}
bool ComAdobeGraniteTranslationConnectorMsftCoreImplMicrosoftTranslProperties::translationFactoryIsSet() const
{
    return m_TranslationFactoryIsSet;
}
void ComAdobeGraniteTranslationConnectorMsftCoreImplMicrosoftTranslProperties::unsetTranslationFactory()
{
    m_TranslationFactoryIsSet = false;
}
ConfigNodePropertyString ComAdobeGraniteTranslationConnectorMsftCoreImplMicrosoftTranslProperties::getDefaultConnectorLabel() const
{
    return m_DefaultConnectorLabel;
}
void ComAdobeGraniteTranslationConnectorMsftCoreImplMicrosoftTranslProperties::setDefaultConnectorLabel(ConfigNodePropertyString const& value)
{
    m_DefaultConnectorLabel = value;
    m_DefaultConnectorLabelIsSet = true;
}
bool ComAdobeGraniteTranslationConnectorMsftCoreImplMicrosoftTranslProperties::defaultConnectorLabelIsSet() const
{
    return m_DefaultConnectorLabelIsSet;
}
void ComAdobeGraniteTranslationConnectorMsftCoreImplMicrosoftTranslProperties::unsetDefaultConnectorLabel()
{
    m_DefaultConnectorLabelIsSet = false;
}
ConfigNodePropertyString ComAdobeGraniteTranslationConnectorMsftCoreImplMicrosoftTranslProperties::getDefaultConnectorAttribution() const
{
    return m_DefaultConnectorAttribution;
}
void ComAdobeGraniteTranslationConnectorMsftCoreImplMicrosoftTranslProperties::setDefaultConnectorAttribution(ConfigNodePropertyString const& value)
{
    m_DefaultConnectorAttribution = value;
    m_DefaultConnectorAttributionIsSet = true;
}
bool ComAdobeGraniteTranslationConnectorMsftCoreImplMicrosoftTranslProperties::defaultConnectorAttributionIsSet() const
{
    return m_DefaultConnectorAttributionIsSet;
}
void ComAdobeGraniteTranslationConnectorMsftCoreImplMicrosoftTranslProperties::unsetDefaultConnectorAttribution()
{
    m_DefaultConnectorAttributionIsSet = false;
}
ConfigNodePropertyString ComAdobeGraniteTranslationConnectorMsftCoreImplMicrosoftTranslProperties::getDefaultConnectorWorkspaceId() const
{
    return m_DefaultConnectorWorkspaceId;
}
void ComAdobeGraniteTranslationConnectorMsftCoreImplMicrosoftTranslProperties::setDefaultConnectorWorkspaceId(ConfigNodePropertyString const& value)
{
    m_DefaultConnectorWorkspaceId = value;
    m_DefaultConnectorWorkspaceIdIsSet = true;
}
bool ComAdobeGraniteTranslationConnectorMsftCoreImplMicrosoftTranslProperties::defaultConnectorWorkspaceIdIsSet() const
{
    return m_DefaultConnectorWorkspaceIdIsSet;
}
void ComAdobeGraniteTranslationConnectorMsftCoreImplMicrosoftTranslProperties::unsetDefaultConnectorWorkspaceId()
{
    m_DefaultConnectorWorkspaceIdIsSet = false;
}
ConfigNodePropertyString ComAdobeGraniteTranslationConnectorMsftCoreImplMicrosoftTranslProperties::getDefaultConnectorSubscriptionKey() const
{
    return m_DefaultConnectorSubscriptionKey;
}
void ComAdobeGraniteTranslationConnectorMsftCoreImplMicrosoftTranslProperties::setDefaultConnectorSubscriptionKey(ConfigNodePropertyString const& value)
{
    m_DefaultConnectorSubscriptionKey = value;
    m_DefaultConnectorSubscriptionKeyIsSet = true;
}
bool ComAdobeGraniteTranslationConnectorMsftCoreImplMicrosoftTranslProperties::defaultConnectorSubscriptionKeyIsSet() const
{
    return m_DefaultConnectorSubscriptionKeyIsSet;
}
void ComAdobeGraniteTranslationConnectorMsftCoreImplMicrosoftTranslProperties::unsetDefaultConnectorSubscriptionKey()
{
    m_DefaultConnectorSubscriptionKeyIsSet = false;
}
ConfigNodePropertyString ComAdobeGraniteTranslationConnectorMsftCoreImplMicrosoftTranslProperties::getLanguageMapLocation() const
{
    return m_LanguageMapLocation;
}
void ComAdobeGraniteTranslationConnectorMsftCoreImplMicrosoftTranslProperties::setLanguageMapLocation(ConfigNodePropertyString const& value)
{
    m_LanguageMapLocation = value;
    m_LanguageMapLocationIsSet = true;
}
bool ComAdobeGraniteTranslationConnectorMsftCoreImplMicrosoftTranslProperties::languageMapLocationIsSet() const
{
    return m_LanguageMapLocationIsSet;
}
void ComAdobeGraniteTranslationConnectorMsftCoreImplMicrosoftTranslProperties::unsetLanguageMapLocation()
{
    m_LanguageMapLocationIsSet = false;
}
ConfigNodePropertyString ComAdobeGraniteTranslationConnectorMsftCoreImplMicrosoftTranslProperties::getCategoryMapLocation() const
{
    return m_CategoryMapLocation;
}
void ComAdobeGraniteTranslationConnectorMsftCoreImplMicrosoftTranslProperties::setCategoryMapLocation(ConfigNodePropertyString const& value)
{
    m_CategoryMapLocation = value;
    m_CategoryMapLocationIsSet = true;
}
bool ComAdobeGraniteTranslationConnectorMsftCoreImplMicrosoftTranslProperties::categoryMapLocationIsSet() const
{
    return m_CategoryMapLocationIsSet;
}
void ComAdobeGraniteTranslationConnectorMsftCoreImplMicrosoftTranslProperties::unsetCategoryMapLocation()
{
    m_CategoryMapLocationIsSet = false;
}
ConfigNodePropertyInteger ComAdobeGraniteTranslationConnectorMsftCoreImplMicrosoftTranslProperties::getRetryAttempts() const
{
    return m_RetryAttempts;
}
void ComAdobeGraniteTranslationConnectorMsftCoreImplMicrosoftTranslProperties::setRetryAttempts(ConfigNodePropertyInteger const& value)
{
    m_RetryAttempts = value;
    m_RetryAttemptsIsSet = true;
}
bool ComAdobeGraniteTranslationConnectorMsftCoreImplMicrosoftTranslProperties::retryAttemptsIsSet() const
{
    return m_RetryAttemptsIsSet;
}
void ComAdobeGraniteTranslationConnectorMsftCoreImplMicrosoftTranslProperties::unsetRetryAttempts()
{
    m_RetryAttemptsIsSet = false;
}
ConfigNodePropertyInteger ComAdobeGraniteTranslationConnectorMsftCoreImplMicrosoftTranslProperties::getTimeoutCount() const
{
    return m_TimeoutCount;
}
void ComAdobeGraniteTranslationConnectorMsftCoreImplMicrosoftTranslProperties::setTimeoutCount(ConfigNodePropertyInteger const& value)
{
    m_TimeoutCount = value;
    m_TimeoutCountIsSet = true;
}
bool ComAdobeGraniteTranslationConnectorMsftCoreImplMicrosoftTranslProperties::timeoutCountIsSet() const
{
    return m_TimeoutCountIsSet;
}
void ComAdobeGraniteTranslationConnectorMsftCoreImplMicrosoftTranslProperties::unsetTimeoutCount()
{
    m_TimeoutCountIsSet = false;
}

}
}
}
}

