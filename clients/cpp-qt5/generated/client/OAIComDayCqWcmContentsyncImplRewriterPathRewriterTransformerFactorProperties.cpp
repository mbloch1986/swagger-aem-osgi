/**
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


#include "OAIComDayCqWcmContentsyncImplRewriterPathRewriterTransformerFactorProperties.h"

#include "OAIHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace OpenAPI {

OAIComDayCqWcmContentsyncImplRewriterPathRewriterTransformerFactorProperties::OAIComDayCqWcmContentsyncImplRewriterPathRewriterTransformerFactorProperties(QString json) {
    init();
    this->fromJson(json);
}

OAIComDayCqWcmContentsyncImplRewriterPathRewriterTransformerFactorProperties::OAIComDayCqWcmContentsyncImplRewriterPathRewriterTransformerFactorProperties() {
    init();
}

OAIComDayCqWcmContentsyncImplRewriterPathRewriterTransformerFactorProperties::~OAIComDayCqWcmContentsyncImplRewriterPathRewriterTransformerFactorProperties() {
    this->cleanup();
}

void
OAIComDayCqWcmContentsyncImplRewriterPathRewriterTransformerFactorProperties::init() {
    cq_contentsync_pathrewritertransformer_mapping_links = new OAIConfigNodePropertyArray();
    m_cq_contentsync_pathrewritertransformer_mapping_links_isSet = false;
    cq_contentsync_pathrewritertransformer_mapping_clientlibs = new OAIConfigNodePropertyArray();
    m_cq_contentsync_pathrewritertransformer_mapping_clientlibs_isSet = false;
    cq_contentsync_pathrewritertransformer_mapping_images = new OAIConfigNodePropertyArray();
    m_cq_contentsync_pathrewritertransformer_mapping_images_isSet = false;
    cq_contentsync_pathrewritertransformer_attribute_pattern = new OAIConfigNodePropertyString();
    m_cq_contentsync_pathrewritertransformer_attribute_pattern_isSet = false;
    cq_contentsync_pathrewritertransformer_clientlibrary_pattern = new OAIConfigNodePropertyString();
    m_cq_contentsync_pathrewritertransformer_clientlibrary_pattern_isSet = false;
    cq_contentsync_pathrewritertransformer_clientlibrary_replace = new OAIConfigNodePropertyString();
    m_cq_contentsync_pathrewritertransformer_clientlibrary_replace_isSet = false;
}

void
OAIComDayCqWcmContentsyncImplRewriterPathRewriterTransformerFactorProperties::cleanup() {
    if(cq_contentsync_pathrewritertransformer_mapping_links != nullptr) { 
        delete cq_contentsync_pathrewritertransformer_mapping_links;
    }
    if(cq_contentsync_pathrewritertransformer_mapping_clientlibs != nullptr) { 
        delete cq_contentsync_pathrewritertransformer_mapping_clientlibs;
    }
    if(cq_contentsync_pathrewritertransformer_mapping_images != nullptr) { 
        delete cq_contentsync_pathrewritertransformer_mapping_images;
    }
    if(cq_contentsync_pathrewritertransformer_attribute_pattern != nullptr) { 
        delete cq_contentsync_pathrewritertransformer_attribute_pattern;
    }
    if(cq_contentsync_pathrewritertransformer_clientlibrary_pattern != nullptr) { 
        delete cq_contentsync_pathrewritertransformer_clientlibrary_pattern;
    }
    if(cq_contentsync_pathrewritertransformer_clientlibrary_replace != nullptr) { 
        delete cq_contentsync_pathrewritertransformer_clientlibrary_replace;
    }
}

OAIComDayCqWcmContentsyncImplRewriterPathRewriterTransformerFactorProperties*
OAIComDayCqWcmContentsyncImplRewriterPathRewriterTransformerFactorProperties::fromJson(QString json) {
    QByteArray array (json.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
    return this;
}

void
OAIComDayCqWcmContentsyncImplRewriterPathRewriterTransformerFactorProperties::fromJsonObject(QJsonObject pJson) {
    ::OpenAPI::setValue(&cq_contentsync_pathrewritertransformer_mapping_links, pJson["cq.contentsync.pathrewritertransformer.mapping.links"], "OAIConfigNodePropertyArray", "OAIConfigNodePropertyArray");
    
    ::OpenAPI::setValue(&cq_contentsync_pathrewritertransformer_mapping_clientlibs, pJson["cq.contentsync.pathrewritertransformer.mapping.clientlibs"], "OAIConfigNodePropertyArray", "OAIConfigNodePropertyArray");
    
    ::OpenAPI::setValue(&cq_contentsync_pathrewritertransformer_mapping_images, pJson["cq.contentsync.pathrewritertransformer.mapping.images"], "OAIConfigNodePropertyArray", "OAIConfigNodePropertyArray");
    
    ::OpenAPI::setValue(&cq_contentsync_pathrewritertransformer_attribute_pattern, pJson["cq.contentsync.pathrewritertransformer.attribute.pattern"], "OAIConfigNodePropertyString", "OAIConfigNodePropertyString");
    
    ::OpenAPI::setValue(&cq_contentsync_pathrewritertransformer_clientlibrary_pattern, pJson["cq.contentsync.pathrewritertransformer.clientlibrary.pattern"], "OAIConfigNodePropertyString", "OAIConfigNodePropertyString");
    
    ::OpenAPI::setValue(&cq_contentsync_pathrewritertransformer_clientlibrary_replace, pJson["cq.contentsync.pathrewritertransformer.clientlibrary.replace"], "OAIConfigNodePropertyString", "OAIConfigNodePropertyString");
    
}

QString
OAIComDayCqWcmContentsyncImplRewriterPathRewriterTransformerFactorProperties::asJson ()
{
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject
OAIComDayCqWcmContentsyncImplRewriterPathRewriterTransformerFactorProperties::asJsonObject() {
    QJsonObject obj;
    if((cq_contentsync_pathrewritertransformer_mapping_links != nullptr) && (cq_contentsync_pathrewritertransformer_mapping_links->isSet())){
        toJsonValue(QString("cq.contentsync.pathrewritertransformer.mapping.links"), cq_contentsync_pathrewritertransformer_mapping_links, obj, QString("OAIConfigNodePropertyArray"));
    }
    if((cq_contentsync_pathrewritertransformer_mapping_clientlibs != nullptr) && (cq_contentsync_pathrewritertransformer_mapping_clientlibs->isSet())){
        toJsonValue(QString("cq.contentsync.pathrewritertransformer.mapping.clientlibs"), cq_contentsync_pathrewritertransformer_mapping_clientlibs, obj, QString("OAIConfigNodePropertyArray"));
    }
    if((cq_contentsync_pathrewritertransformer_mapping_images != nullptr) && (cq_contentsync_pathrewritertransformer_mapping_images->isSet())){
        toJsonValue(QString("cq.contentsync.pathrewritertransformer.mapping.images"), cq_contentsync_pathrewritertransformer_mapping_images, obj, QString("OAIConfigNodePropertyArray"));
    }
    if((cq_contentsync_pathrewritertransformer_attribute_pattern != nullptr) && (cq_contentsync_pathrewritertransformer_attribute_pattern->isSet())){
        toJsonValue(QString("cq.contentsync.pathrewritertransformer.attribute.pattern"), cq_contentsync_pathrewritertransformer_attribute_pattern, obj, QString("OAIConfigNodePropertyString"));
    }
    if((cq_contentsync_pathrewritertransformer_clientlibrary_pattern != nullptr) && (cq_contentsync_pathrewritertransformer_clientlibrary_pattern->isSet())){
        toJsonValue(QString("cq.contentsync.pathrewritertransformer.clientlibrary.pattern"), cq_contentsync_pathrewritertransformer_clientlibrary_pattern, obj, QString("OAIConfigNodePropertyString"));
    }
    if((cq_contentsync_pathrewritertransformer_clientlibrary_replace != nullptr) && (cq_contentsync_pathrewritertransformer_clientlibrary_replace->isSet())){
        toJsonValue(QString("cq.contentsync.pathrewritertransformer.clientlibrary.replace"), cq_contentsync_pathrewritertransformer_clientlibrary_replace, obj, QString("OAIConfigNodePropertyString"));
    }

    return obj;
}

OAIConfigNodePropertyArray*
OAIComDayCqWcmContentsyncImplRewriterPathRewriterTransformerFactorProperties::getCqContentsyncPathrewritertransformerMappingLinks() {
    return cq_contentsync_pathrewritertransformer_mapping_links;
}
void
OAIComDayCqWcmContentsyncImplRewriterPathRewriterTransformerFactorProperties::setCqContentsyncPathrewritertransformerMappingLinks(OAIConfigNodePropertyArray* cq_contentsync_pathrewritertransformer_mapping_links) {
    this->cq_contentsync_pathrewritertransformer_mapping_links = cq_contentsync_pathrewritertransformer_mapping_links;
    this->m_cq_contentsync_pathrewritertransformer_mapping_links_isSet = true;
}

OAIConfigNodePropertyArray*
OAIComDayCqWcmContentsyncImplRewriterPathRewriterTransformerFactorProperties::getCqContentsyncPathrewritertransformerMappingClientlibs() {
    return cq_contentsync_pathrewritertransformer_mapping_clientlibs;
}
void
OAIComDayCqWcmContentsyncImplRewriterPathRewriterTransformerFactorProperties::setCqContentsyncPathrewritertransformerMappingClientlibs(OAIConfigNodePropertyArray* cq_contentsync_pathrewritertransformer_mapping_clientlibs) {
    this->cq_contentsync_pathrewritertransformer_mapping_clientlibs = cq_contentsync_pathrewritertransformer_mapping_clientlibs;
    this->m_cq_contentsync_pathrewritertransformer_mapping_clientlibs_isSet = true;
}

OAIConfigNodePropertyArray*
OAIComDayCqWcmContentsyncImplRewriterPathRewriterTransformerFactorProperties::getCqContentsyncPathrewritertransformerMappingImages() {
    return cq_contentsync_pathrewritertransformer_mapping_images;
}
void
OAIComDayCqWcmContentsyncImplRewriterPathRewriterTransformerFactorProperties::setCqContentsyncPathrewritertransformerMappingImages(OAIConfigNodePropertyArray* cq_contentsync_pathrewritertransformer_mapping_images) {
    this->cq_contentsync_pathrewritertransformer_mapping_images = cq_contentsync_pathrewritertransformer_mapping_images;
    this->m_cq_contentsync_pathrewritertransformer_mapping_images_isSet = true;
}

OAIConfigNodePropertyString*
OAIComDayCqWcmContentsyncImplRewriterPathRewriterTransformerFactorProperties::getCqContentsyncPathrewritertransformerAttributePattern() {
    return cq_contentsync_pathrewritertransformer_attribute_pattern;
}
void
OAIComDayCqWcmContentsyncImplRewriterPathRewriterTransformerFactorProperties::setCqContentsyncPathrewritertransformerAttributePattern(OAIConfigNodePropertyString* cq_contentsync_pathrewritertransformer_attribute_pattern) {
    this->cq_contentsync_pathrewritertransformer_attribute_pattern = cq_contentsync_pathrewritertransformer_attribute_pattern;
    this->m_cq_contentsync_pathrewritertransformer_attribute_pattern_isSet = true;
}

OAIConfigNodePropertyString*
OAIComDayCqWcmContentsyncImplRewriterPathRewriterTransformerFactorProperties::getCqContentsyncPathrewritertransformerClientlibraryPattern() {
    return cq_contentsync_pathrewritertransformer_clientlibrary_pattern;
}
void
OAIComDayCqWcmContentsyncImplRewriterPathRewriterTransformerFactorProperties::setCqContentsyncPathrewritertransformerClientlibraryPattern(OAIConfigNodePropertyString* cq_contentsync_pathrewritertransformer_clientlibrary_pattern) {
    this->cq_contentsync_pathrewritertransformer_clientlibrary_pattern = cq_contentsync_pathrewritertransformer_clientlibrary_pattern;
    this->m_cq_contentsync_pathrewritertransformer_clientlibrary_pattern_isSet = true;
}

OAIConfigNodePropertyString*
OAIComDayCqWcmContentsyncImplRewriterPathRewriterTransformerFactorProperties::getCqContentsyncPathrewritertransformerClientlibraryReplace() {
    return cq_contentsync_pathrewritertransformer_clientlibrary_replace;
}
void
OAIComDayCqWcmContentsyncImplRewriterPathRewriterTransformerFactorProperties::setCqContentsyncPathrewritertransformerClientlibraryReplace(OAIConfigNodePropertyString* cq_contentsync_pathrewritertransformer_clientlibrary_replace) {
    this->cq_contentsync_pathrewritertransformer_clientlibrary_replace = cq_contentsync_pathrewritertransformer_clientlibrary_replace;
    this->m_cq_contentsync_pathrewritertransformer_clientlibrary_replace_isSet = true;
}


bool
OAIComDayCqWcmContentsyncImplRewriterPathRewriterTransformerFactorProperties::isSet(){
    bool isObjectUpdated = false;
    do{
        if(cq_contentsync_pathrewritertransformer_mapping_links != nullptr && cq_contentsync_pathrewritertransformer_mapping_links->isSet()){ isObjectUpdated = true; break;}
        if(cq_contentsync_pathrewritertransformer_mapping_clientlibs != nullptr && cq_contentsync_pathrewritertransformer_mapping_clientlibs->isSet()){ isObjectUpdated = true; break;}
        if(cq_contentsync_pathrewritertransformer_mapping_images != nullptr && cq_contentsync_pathrewritertransformer_mapping_images->isSet()){ isObjectUpdated = true; break;}
        if(cq_contentsync_pathrewritertransformer_attribute_pattern != nullptr && cq_contentsync_pathrewritertransformer_attribute_pattern->isSet()){ isObjectUpdated = true; break;}
        if(cq_contentsync_pathrewritertransformer_clientlibrary_pattern != nullptr && cq_contentsync_pathrewritertransformer_clientlibrary_pattern->isSet()){ isObjectUpdated = true; break;}
        if(cq_contentsync_pathrewritertransformer_clientlibrary_replace != nullptr && cq_contentsync_pathrewritertransformer_clientlibrary_replace->isSet()){ isObjectUpdated = true; break;}
    }while(false);
    return isObjectUpdated;
}
}

