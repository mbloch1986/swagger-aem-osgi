/**
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 3.2.1-SNAPSHOT.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * ComAdobeGraniteTaskmanagementImplPurgeTaskPurgeMaintenanceTaskProperties.h
 *
 * 
 */

#ifndef ComAdobeGraniteTaskmanagementImplPurgeTaskPurgeMaintenanceTaskProperties_H_
#define ComAdobeGraniteTaskmanagementImplPurgeTaskPurgeMaintenanceTaskProperties_H_



#include "ConfigNodePropertyBoolean.h"
#include "ConfigNodePropertyInteger.h"
#include <memory>

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
/// 
/// </summary>
class  ComAdobeGraniteTaskmanagementImplPurgeTaskPurgeMaintenanceTaskProperties
{
public:
    ComAdobeGraniteTaskmanagementImplPurgeTaskPurgeMaintenanceTaskProperties();
    virtual ~ComAdobeGraniteTaskmanagementImplPurgeTaskPurgeMaintenanceTaskProperties();
    
    std::string toJsonString();
    void fromJsonString(std::string const& jsonString);

    /////////////////////////////////////////////
    /// ComAdobeGraniteTaskmanagementImplPurgeTaskPurgeMaintenanceTaskProperties members
    
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyBoolean> getPurgeCompleted() const;
    void setPurgeCompleted(std::shared_ptr<ConfigNodePropertyBoolean> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyInteger> getCompletedAge() const;
    void setCompletedAge(std::shared_ptr<ConfigNodePropertyInteger> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyBoolean> getPurgeActive() const;
    void setPurgeActive(std::shared_ptr<ConfigNodePropertyBoolean> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyInteger> getActiveAge() const;
    void setActiveAge(std::shared_ptr<ConfigNodePropertyInteger> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyInteger> getSaveThreshold() const;
    void setSaveThreshold(std::shared_ptr<ConfigNodePropertyInteger> value);

protected:
    std::shared_ptr<ConfigNodePropertyBoolean> m_PurgeCompleted;
    std::shared_ptr<ConfigNodePropertyInteger> m_CompletedAge;
    std::shared_ptr<ConfigNodePropertyBoolean> m_PurgeActive;
    std::shared_ptr<ConfigNodePropertyInteger> m_ActiveAge;
    std::shared_ptr<ConfigNodePropertyInteger> m_SaveThreshold;
};

}
}
}
}

#endif /* ComAdobeGraniteTaskmanagementImplPurgeTaskPurgeMaintenanceTaskProperties_H_ */
