/**
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIComAdobeFdFpConfigFormsPortalDraftsandSubmissionConfigServiceProperties.h
 *
 * 
 */

#ifndef OAIComAdobeFdFpConfigFormsPortalDraftsandSubmissionConfigServiceProperties_H_
#define OAIComAdobeFdFpConfigFormsPortalDraftsandSubmissionConfigServiceProperties_H_

#include <QJsonObject>


#include "OAIOAIConfigNodePropertyArray.h"
#include "OAIOAIConfigNodePropertyString.h"

#include "OAIObject.h"

namespace OpenAPI {

class OAIComAdobeFdFpConfigFormsPortalDraftsandSubmissionConfigServiceProperties: public OAIObject {
public:
    OAIComAdobeFdFpConfigFormsPortalDraftsandSubmissionConfigServiceProperties();
    OAIComAdobeFdFpConfigFormsPortalDraftsandSubmissionConfigServiceProperties(QString json);
    ~OAIComAdobeFdFpConfigFormsPortalDraftsandSubmissionConfigServiceProperties();
    void init();
    void cleanup();

    QString asJson () override;
    QJsonObject asJsonObject() override;
    void fromJsonObject(QJsonObject json) override;
    OAIComAdobeFdFpConfigFormsPortalDraftsandSubmissionConfigServiceProperties* fromJson(QString jsonString) override;

    OAIConfigNodePropertyArray* getPortalOutboxes();
    void setPortalOutboxes(OAIConfigNodePropertyArray* portal_outboxes);

    OAIConfigNodePropertyString* getDraftDataService();
    void setDraftDataService(OAIConfigNodePropertyString* draft_data_service);

    OAIConfigNodePropertyString* getDraftMetadataService();
    void setDraftMetadataService(OAIConfigNodePropertyString* draft_metadata_service);

    OAIConfigNodePropertyString* getSubmitDataService();
    void setSubmitDataService(OAIConfigNodePropertyString* submit_data_service);

    OAIConfigNodePropertyString* getSubmitMetadataService();
    void setSubmitMetadataService(OAIConfigNodePropertyString* submit_metadata_service);

    OAIConfigNodePropertyString* getPendingSignDataService();
    void setPendingSignDataService(OAIConfigNodePropertyString* pending_sign_data_service);

    OAIConfigNodePropertyString* getPendingSignMetadataService();
    void setPendingSignMetadataService(OAIConfigNodePropertyString* pending_sign_metadata_service);


    virtual bool isSet() override;

private:
    OAIConfigNodePropertyArray* portal_outboxes;
    bool m_portal_outboxes_isSet;

    OAIConfigNodePropertyString* draft_data_service;
    bool m_draft_data_service_isSet;

    OAIConfigNodePropertyString* draft_metadata_service;
    bool m_draft_metadata_service_isSet;

    OAIConfigNodePropertyString* submit_data_service;
    bool m_submit_data_service_isSet;

    OAIConfigNodePropertyString* submit_metadata_service;
    bool m_submit_metadata_service_isSet;

    OAIConfigNodePropertyString* pending_sign_data_service;
    bool m_pending_sign_data_service_isSet;

    OAIConfigNodePropertyString* pending_sign_metadata_service;
    bool m_pending_sign_metadata_service_isSet;

};

}

#endif /* OAIComAdobeFdFpConfigFormsPortalDraftsandSubmissionConfigServiceProperties_H_ */
