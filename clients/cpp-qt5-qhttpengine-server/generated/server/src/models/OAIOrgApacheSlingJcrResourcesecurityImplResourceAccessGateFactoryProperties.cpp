/**
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


#include "OAIOrgApacheSlingJcrResourcesecurityImplResourceAccessGateFactoryProperties.h"

#include "OAIHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace OpenAPI {

OAIOrgApacheSlingJcrResourcesecurityImplResourceAccessGateFactoryProperties::OAIOrgApacheSlingJcrResourcesecurityImplResourceAccessGateFactoryProperties(QString json) {
    this->fromJson(json);
}

OAIOrgApacheSlingJcrResourcesecurityImplResourceAccessGateFactoryProperties::OAIOrgApacheSlingJcrResourcesecurityImplResourceAccessGateFactoryProperties() {
    this->init();
}

OAIOrgApacheSlingJcrResourcesecurityImplResourceAccessGateFactoryProperties::~OAIOrgApacheSlingJcrResourcesecurityImplResourceAccessGateFactoryProperties() {
    
}

void
OAIOrgApacheSlingJcrResourcesecurityImplResourceAccessGateFactoryProperties::init() {
    m_path_isSet = false;
    m_checkpath_prefix_isSet = false;
    m_jcr_path_isSet = false;
}

void
OAIOrgApacheSlingJcrResourcesecurityImplResourceAccessGateFactoryProperties::fromJson(QString jsonString) {
    QByteArray array (jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void
OAIOrgApacheSlingJcrResourcesecurityImplResourceAccessGateFactoryProperties::fromJsonObject(QJsonObject json) {
    ::OpenAPI::fromJsonValue(path, json[QString("path")]);
    
    ::OpenAPI::fromJsonValue(checkpath_prefix, json[QString("checkpath.prefix")]);
    
    ::OpenAPI::fromJsonValue(jcr_path, json[QString("jcrPath")]);
    
}

QString
OAIOrgApacheSlingJcrResourcesecurityImplResourceAccessGateFactoryProperties::asJson () const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject
OAIOrgApacheSlingJcrResourcesecurityImplResourceAccessGateFactoryProperties::asJsonObject() const {
    QJsonObject obj;
	if(path.isSet()){
        obj.insert(QString("path"), ::OpenAPI::toJsonValue(path));
    }
	if(checkpath_prefix.isSet()){
        obj.insert(QString("checkpath.prefix"), ::OpenAPI::toJsonValue(checkpath_prefix));
    }
	if(jcr_path.isSet()){
        obj.insert(QString("jcrPath"), ::OpenAPI::toJsonValue(jcr_path));
    }
    return obj;
}

OAIConfigNodePropertyString
OAIOrgApacheSlingJcrResourcesecurityImplResourceAccessGateFactoryProperties::getPath() const {
    return path;
}
void
OAIOrgApacheSlingJcrResourcesecurityImplResourceAccessGateFactoryProperties::setPath(const OAIConfigNodePropertyString &path) {
    this->path = path;
    this->m_path_isSet = true;
}

OAIConfigNodePropertyString
OAIOrgApacheSlingJcrResourcesecurityImplResourceAccessGateFactoryProperties::getCheckpathPrefix() const {
    return checkpath_prefix;
}
void
OAIOrgApacheSlingJcrResourcesecurityImplResourceAccessGateFactoryProperties::setCheckpathPrefix(const OAIConfigNodePropertyString &checkpath_prefix) {
    this->checkpath_prefix = checkpath_prefix;
    this->m_checkpath_prefix_isSet = true;
}

OAIConfigNodePropertyString
OAIOrgApacheSlingJcrResourcesecurityImplResourceAccessGateFactoryProperties::getJcrPath() const {
    return jcr_path;
}
void
OAIOrgApacheSlingJcrResourcesecurityImplResourceAccessGateFactoryProperties::setJcrPath(const OAIConfigNodePropertyString &jcr_path) {
    this->jcr_path = jcr_path;
    this->m_jcr_path_isSet = true;
}


bool
OAIOrgApacheSlingJcrResourcesecurityImplResourceAccessGateFactoryProperties::isSet() const {
    bool isObjectUpdated = false;
    do{ 
        if(path.isSet()){ isObjectUpdated = true; break;}
    
        if(checkpath_prefix.isSet()){ isObjectUpdated = true; break;}
    
        if(jcr_path.isSet()){ isObjectUpdated = true; break;}
    }while(false);
    return isObjectUpdated;
}

}

