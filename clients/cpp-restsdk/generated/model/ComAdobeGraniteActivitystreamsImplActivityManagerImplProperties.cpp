/**
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 3.2.1-SNAPSHOT.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */



#include "ComAdobeGraniteActivitystreamsImplActivityManagerImplProperties.h"

namespace org {
namespace openapitools {
namespace client {
namespace model {

ComAdobeGraniteActivitystreamsImplActivityManagerImplProperties::ComAdobeGraniteActivitystreamsImplActivityManagerImplProperties()
{
    m_Aggregate_relationshipsIsSet = false;
    m_Aggregate_descend_virtualIsSet = false;
}

ComAdobeGraniteActivitystreamsImplActivityManagerImplProperties::~ComAdobeGraniteActivitystreamsImplActivityManagerImplProperties()
{
}

void ComAdobeGraniteActivitystreamsImplActivityManagerImplProperties::validate()
{
    // TODO: implement validation
}

web::json::value ComAdobeGraniteActivitystreamsImplActivityManagerImplProperties::toJson() const
{
    web::json::value val = web::json::value::object();

    if(m_Aggregate_relationshipsIsSet)
    {
        val[utility::conversions::to_string_t("aggregate.relationships")] = ModelBase::toJson(m_Aggregate_relationships);
    }
    if(m_Aggregate_descend_virtualIsSet)
    {
        val[utility::conversions::to_string_t("aggregate.descend.virtual")] = ModelBase::toJson(m_Aggregate_descend_virtual);
    }

    return val;
}

void ComAdobeGraniteActivitystreamsImplActivityManagerImplProperties::fromJson(web::json::value& val)
{
    if(val.has_field(utility::conversions::to_string_t("aggregate.relationships")))
    {
        if(!val[utility::conversions::to_string_t("aggregate.relationships")].is_null())
        {
            std::shared_ptr<ConfigNodePropertyArray> newItem(new ConfigNodePropertyArray());
            newItem->fromJson(val[utility::conversions::to_string_t("aggregate.relationships")]);
            setAggregateRelationships( newItem );
        }
    }
    if(val.has_field(utility::conversions::to_string_t("aggregate.descend.virtual")))
    {
        if(!val[utility::conversions::to_string_t("aggregate.descend.virtual")].is_null())
        {
            std::shared_ptr<ConfigNodePropertyBoolean> newItem(new ConfigNodePropertyBoolean());
            newItem->fromJson(val[utility::conversions::to_string_t("aggregate.descend.virtual")]);
            setAggregateDescendVirtual( newItem );
        }
    }
}

void ComAdobeGraniteActivitystreamsImplActivityManagerImplProperties::toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& prefix) const
{
    utility::string_t namePrefix = prefix;
    if(namePrefix.size() > 0 && namePrefix.substr(namePrefix.size() - 1) != utility::conversions::to_string_t("."))
    {
        namePrefix += utility::conversions::to_string_t(".");
    }

    if(m_Aggregate_relationshipsIsSet)
    {
        if (m_Aggregate_relationships.get())
        {
            m_Aggregate_relationships->toMultipart(multipart, utility::conversions::to_string_t("aggregate.relationships."));
        }
    }
    if(m_Aggregate_descend_virtualIsSet)
    {
        if (m_Aggregate_descend_virtual.get())
        {
            m_Aggregate_descend_virtual->toMultipart(multipart, utility::conversions::to_string_t("aggregate.descend.virtual."));
        }
    }
}

void ComAdobeGraniteActivitystreamsImplActivityManagerImplProperties::fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& prefix)
{
    utility::string_t namePrefix = prefix;
    if(namePrefix.size() > 0 && namePrefix.substr(namePrefix.size() - 1) != utility::conversions::to_string_t("."))
    {
        namePrefix += utility::conversions::to_string_t(".");
    }

    if(multipart->hasContent(utility::conversions::to_string_t("aggregate.relationships")))
    {
        if(multipart->hasContent(utility::conversions::to_string_t("aggregate.relationships")))
        {
            std::shared_ptr<ConfigNodePropertyArray> newItem(new ConfigNodePropertyArray());
            newItem->fromMultiPart(multipart, utility::conversions::to_string_t("aggregate.relationships."));
            setAggregateRelationships( newItem );
        }
    }
    if(multipart->hasContent(utility::conversions::to_string_t("aggregate.descend.virtual")))
    {
        if(multipart->hasContent(utility::conversions::to_string_t("aggregate.descend.virtual")))
        {
            std::shared_ptr<ConfigNodePropertyBoolean> newItem(new ConfigNodePropertyBoolean());
            newItem->fromMultiPart(multipart, utility::conversions::to_string_t("aggregate.descend.virtual."));
            setAggregateDescendVirtual( newItem );
        }
    }
}

std::shared_ptr<ConfigNodePropertyArray> ComAdobeGraniteActivitystreamsImplActivityManagerImplProperties::getAggregateRelationships() const
{
    return m_Aggregate_relationships;
}


void ComAdobeGraniteActivitystreamsImplActivityManagerImplProperties::setAggregateRelationships(std::shared_ptr<ConfigNodePropertyArray> value)
{
    m_Aggregate_relationships = value;
    m_Aggregate_relationshipsIsSet = true;
}
bool ComAdobeGraniteActivitystreamsImplActivityManagerImplProperties::aggregateRelationshipsIsSet() const
{
    return m_Aggregate_relationshipsIsSet;
}

void ComAdobeGraniteActivitystreamsImplActivityManagerImplProperties::unsetAggregate_relationships()
{
    m_Aggregate_relationshipsIsSet = false;
}

std::shared_ptr<ConfigNodePropertyBoolean> ComAdobeGraniteActivitystreamsImplActivityManagerImplProperties::getAggregateDescendVirtual() const
{
    return m_Aggregate_descend_virtual;
}


void ComAdobeGraniteActivitystreamsImplActivityManagerImplProperties::setAggregateDescendVirtual(std::shared_ptr<ConfigNodePropertyBoolean> value)
{
    m_Aggregate_descend_virtual = value;
    m_Aggregate_descend_virtualIsSet = true;
}
bool ComAdobeGraniteActivitystreamsImplActivityManagerImplProperties::aggregateDescendVirtualIsSet() const
{
    return m_Aggregate_descend_virtualIsSet;
}

void ComAdobeGraniteActivitystreamsImplActivityManagerImplProperties::unsetAggregate_descend_virtual()
{
    m_Aggregate_descend_virtualIsSet = false;
}

}
}
}
}

