/**
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


#include "OAIOrgApacheSlingDistributionTriggerImplScheduledDistributionTriggeProperties.h"

#include "OAIHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace OpenAPI {

OAIOrgApacheSlingDistributionTriggerImplScheduledDistributionTriggeProperties::OAIOrgApacheSlingDistributionTriggerImplScheduledDistributionTriggeProperties(QString json) {
    this->fromJson(json);
}

OAIOrgApacheSlingDistributionTriggerImplScheduledDistributionTriggeProperties::OAIOrgApacheSlingDistributionTriggerImplScheduledDistributionTriggeProperties() {
    this->init();
}

OAIOrgApacheSlingDistributionTriggerImplScheduledDistributionTriggeProperties::~OAIOrgApacheSlingDistributionTriggerImplScheduledDistributionTriggeProperties() {
    
}

void
OAIOrgApacheSlingDistributionTriggerImplScheduledDistributionTriggeProperties::init() {
    m_name_isSet = false;
    m_path_isSet = false;
    m_seconds_isSet = false;
    m_service_name_isSet = false;
}

void
OAIOrgApacheSlingDistributionTriggerImplScheduledDistributionTriggeProperties::fromJson(QString jsonString) {
    QByteArray array (jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void
OAIOrgApacheSlingDistributionTriggerImplScheduledDistributionTriggeProperties::fromJsonObject(QJsonObject json) {
    ::OpenAPI::fromJsonValue(name, json[QString("name")]);
    
    ::OpenAPI::fromJsonValue(path, json[QString("path")]);
    
    ::OpenAPI::fromJsonValue(seconds, json[QString("seconds")]);
    
    ::OpenAPI::fromJsonValue(service_name, json[QString("serviceName")]);
    
}

QString
OAIOrgApacheSlingDistributionTriggerImplScheduledDistributionTriggeProperties::asJson () const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject
OAIOrgApacheSlingDistributionTriggerImplScheduledDistributionTriggeProperties::asJsonObject() const {
    QJsonObject obj;
	if(name.isSet()){
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(name));
    }
	if(path.isSet()){
        obj.insert(QString("path"), ::OpenAPI::toJsonValue(path));
    }
	if(seconds.isSet()){
        obj.insert(QString("seconds"), ::OpenAPI::toJsonValue(seconds));
    }
	if(service_name.isSet()){
        obj.insert(QString("serviceName"), ::OpenAPI::toJsonValue(service_name));
    }
    return obj;
}

OAIConfigNodePropertyString
OAIOrgApacheSlingDistributionTriggerImplScheduledDistributionTriggeProperties::getName() const {
    return name;
}
void
OAIOrgApacheSlingDistributionTriggerImplScheduledDistributionTriggeProperties::setName(const OAIConfigNodePropertyString &name) {
    this->name = name;
    this->m_name_isSet = true;
}

OAIConfigNodePropertyString
OAIOrgApacheSlingDistributionTriggerImplScheduledDistributionTriggeProperties::getPath() const {
    return path;
}
void
OAIOrgApacheSlingDistributionTriggerImplScheduledDistributionTriggeProperties::setPath(const OAIConfigNodePropertyString &path) {
    this->path = path;
    this->m_path_isSet = true;
}

OAIConfigNodePropertyString
OAIOrgApacheSlingDistributionTriggerImplScheduledDistributionTriggeProperties::getSeconds() const {
    return seconds;
}
void
OAIOrgApacheSlingDistributionTriggerImplScheduledDistributionTriggeProperties::setSeconds(const OAIConfigNodePropertyString &seconds) {
    this->seconds = seconds;
    this->m_seconds_isSet = true;
}

OAIConfigNodePropertyString
OAIOrgApacheSlingDistributionTriggerImplScheduledDistributionTriggeProperties::getServiceName() const {
    return service_name;
}
void
OAIOrgApacheSlingDistributionTriggerImplScheduledDistributionTriggeProperties::setServiceName(const OAIConfigNodePropertyString &service_name) {
    this->service_name = service_name;
    this->m_service_name_isSet = true;
}


bool
OAIOrgApacheSlingDistributionTriggerImplScheduledDistributionTriggeProperties::isSet() const {
    bool isObjectUpdated = false;
    do{ 
        if(name.isSet()){ isObjectUpdated = true; break;}
    
        if(path.isSet()){ isObjectUpdated = true; break;}
    
        if(seconds.isSet()){ isObjectUpdated = true; break;}
    
        if(service_name.isSet()){ isObjectUpdated = true; break;}
    }while(false);
    return isObjectUpdated;
}

}

