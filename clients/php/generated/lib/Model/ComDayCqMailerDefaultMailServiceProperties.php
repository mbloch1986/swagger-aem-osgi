<?php
/**
 * ComDayCqMailerDefaultMailServiceProperties
 *
 * PHP version 5
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Adobe Experience Manager OSGI config (AEM) API
 *
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 3.2.1-SNAPSHOT
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace OpenAPI\Client\Model;

use \ArrayAccess;
use \OpenAPI\Client\ObjectSerializer;

/**
 * ComDayCqMailerDefaultMailServiceProperties Class Doc Comment
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class ComDayCqMailerDefaultMailServiceProperties implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'comDayCqMailerDefaultMailServiceProperties';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'smtp_host' => '\OpenAPI\Client\Model\ConfigNodePropertyString',
        'smtp_port' => '\OpenAPI\Client\Model\ConfigNodePropertyInteger',
        'smtp_user' => '\OpenAPI\Client\Model\ConfigNodePropertyString',
        'smtp_password' => '\OpenAPI\Client\Model\ConfigNodePropertyString',
        'from_address' => '\OpenAPI\Client\Model\ConfigNodePropertyString',
        'smtp_ssl' => '\OpenAPI\Client\Model\ConfigNodePropertyBoolean',
        'smtp_starttls' => '\OpenAPI\Client\Model\ConfigNodePropertyBoolean',
        'debug_email' => '\OpenAPI\Client\Model\ConfigNodePropertyBoolean'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPIFormats = [
        'smtp_host' => null,
        'smtp_port' => null,
        'smtp_user' => null,
        'smtp_password' => null,
        'from_address' => null,
        'smtp_ssl' => null,
        'smtp_starttls' => null,
        'debug_email' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'smtp_host' => 'smtp.host',
        'smtp_port' => 'smtp.port',
        'smtp_user' => 'smtp.user',
        'smtp_password' => 'smtp.password',
        'from_address' => 'from.address',
        'smtp_ssl' => 'smtp.ssl',
        'smtp_starttls' => 'smtp.starttls',
        'debug_email' => 'debug.email'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'smtp_host' => 'setSmtpHost',
        'smtp_port' => 'setSmtpPort',
        'smtp_user' => 'setSmtpUser',
        'smtp_password' => 'setSmtpPassword',
        'from_address' => 'setFromAddress',
        'smtp_ssl' => 'setSmtpSsl',
        'smtp_starttls' => 'setSmtpStarttls',
        'debug_email' => 'setDebugEmail'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'smtp_host' => 'getSmtpHost',
        'smtp_port' => 'getSmtpPort',
        'smtp_user' => 'getSmtpUser',
        'smtp_password' => 'getSmtpPassword',
        'from_address' => 'getFromAddress',
        'smtp_ssl' => 'getSmtpSsl',
        'smtp_starttls' => 'getSmtpStarttls',
        'debug_email' => 'getDebugEmail'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['smtp_host'] = isset($data['smtp_host']) ? $data['smtp_host'] : null;
        $this->container['smtp_port'] = isset($data['smtp_port']) ? $data['smtp_port'] : null;
        $this->container['smtp_user'] = isset($data['smtp_user']) ? $data['smtp_user'] : null;
        $this->container['smtp_password'] = isset($data['smtp_password']) ? $data['smtp_password'] : null;
        $this->container['from_address'] = isset($data['from_address']) ? $data['from_address'] : null;
        $this->container['smtp_ssl'] = isset($data['smtp_ssl']) ? $data['smtp_ssl'] : null;
        $this->container['smtp_starttls'] = isset($data['smtp_starttls']) ? $data['smtp_starttls'] : null;
        $this->container['debug_email'] = isset($data['debug_email']) ? $data['debug_email'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets smtp_host
     *
     * @return \OpenAPI\Client\Model\ConfigNodePropertyString|null
     */
    public function getSmtpHost()
    {
        return $this->container['smtp_host'];
    }

    /**
     * Sets smtp_host
     *
     * @param \OpenAPI\Client\Model\ConfigNodePropertyString|null $smtp_host smtp_host
     *
     * @return $this
     */
    public function setSmtpHost($smtp_host)
    {
        $this->container['smtp_host'] = $smtp_host;

        return $this;
    }

    /**
     * Gets smtp_port
     *
     * @return \OpenAPI\Client\Model\ConfigNodePropertyInteger|null
     */
    public function getSmtpPort()
    {
        return $this->container['smtp_port'];
    }

    /**
     * Sets smtp_port
     *
     * @param \OpenAPI\Client\Model\ConfigNodePropertyInteger|null $smtp_port smtp_port
     *
     * @return $this
     */
    public function setSmtpPort($smtp_port)
    {
        $this->container['smtp_port'] = $smtp_port;

        return $this;
    }

    /**
     * Gets smtp_user
     *
     * @return \OpenAPI\Client\Model\ConfigNodePropertyString|null
     */
    public function getSmtpUser()
    {
        return $this->container['smtp_user'];
    }

    /**
     * Sets smtp_user
     *
     * @param \OpenAPI\Client\Model\ConfigNodePropertyString|null $smtp_user smtp_user
     *
     * @return $this
     */
    public function setSmtpUser($smtp_user)
    {
        $this->container['smtp_user'] = $smtp_user;

        return $this;
    }

    /**
     * Gets smtp_password
     *
     * @return \OpenAPI\Client\Model\ConfigNodePropertyString|null
     */
    public function getSmtpPassword()
    {
        return $this->container['smtp_password'];
    }

    /**
     * Sets smtp_password
     *
     * @param \OpenAPI\Client\Model\ConfigNodePropertyString|null $smtp_password smtp_password
     *
     * @return $this
     */
    public function setSmtpPassword($smtp_password)
    {
        $this->container['smtp_password'] = $smtp_password;

        return $this;
    }

    /**
     * Gets from_address
     *
     * @return \OpenAPI\Client\Model\ConfigNodePropertyString|null
     */
    public function getFromAddress()
    {
        return $this->container['from_address'];
    }

    /**
     * Sets from_address
     *
     * @param \OpenAPI\Client\Model\ConfigNodePropertyString|null $from_address from_address
     *
     * @return $this
     */
    public function setFromAddress($from_address)
    {
        $this->container['from_address'] = $from_address;

        return $this;
    }

    /**
     * Gets smtp_ssl
     *
     * @return \OpenAPI\Client\Model\ConfigNodePropertyBoolean|null
     */
    public function getSmtpSsl()
    {
        return $this->container['smtp_ssl'];
    }

    /**
     * Sets smtp_ssl
     *
     * @param \OpenAPI\Client\Model\ConfigNodePropertyBoolean|null $smtp_ssl smtp_ssl
     *
     * @return $this
     */
    public function setSmtpSsl($smtp_ssl)
    {
        $this->container['smtp_ssl'] = $smtp_ssl;

        return $this;
    }

    /**
     * Gets smtp_starttls
     *
     * @return \OpenAPI\Client\Model\ConfigNodePropertyBoolean|null
     */
    public function getSmtpStarttls()
    {
        return $this->container['smtp_starttls'];
    }

    /**
     * Sets smtp_starttls
     *
     * @param \OpenAPI\Client\Model\ConfigNodePropertyBoolean|null $smtp_starttls smtp_starttls
     *
     * @return $this
     */
    public function setSmtpStarttls($smtp_starttls)
    {
        $this->container['smtp_starttls'] = $smtp_starttls;

        return $this;
    }

    /**
     * Gets debug_email
     *
     * @return \OpenAPI\Client\Model\ConfigNodePropertyBoolean|null
     */
    public function getDebugEmail()
    {
        return $this->container['debug_email'];
    }

    /**
     * Sets debug_email
     *
     * @param \OpenAPI\Client\Model\ConfigNodePropertyBoolean|null $debug_email debug_email
     *
     * @return $this
     */
    public function setDebugEmail($debug_email)
    {
        $this->container['debug_email'] = $debug_email;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }
}


