/**
* Adobe Experience Manager OSGI config (AEM) API
* Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
*
* OpenAPI spec version: 1.0.0-pre.0
* Contact: opensource@shinesolutions.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
/*
 * ComDayCqAnalyticsTestandtargetImplTestandtargetHttpClientImplProperties.h
 *
 * 
 */

#ifndef ComDayCqAnalyticsTestandtargetImplTestandtargetHttpClientImplProperties_H_
#define ComDayCqAnalyticsTestandtargetImplTestandtargetHttpClientImplProperties_H_


#include "ModelBase.h"

#include "ConfigNodePropertyInteger.h"
#include "ConfigNodePropertyString.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
/// 
/// </summary>
class  ComDayCqAnalyticsTestandtargetImplTestandtargetHttpClientImplProperties
    : public ModelBase
{
public:
    ComDayCqAnalyticsTestandtargetImplTestandtargetHttpClientImplProperties();
    virtual ~ComDayCqAnalyticsTestandtargetImplTestandtargetHttpClientImplProperties();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    nlohmann::json toJson() const override;
    void fromJson(nlohmann::json& json) override;

    /////////////////////////////////////////////
    /// ComDayCqAnalyticsTestandtargetImplTestandtargetHttpClientImplProperties members

    /// <summary>
    /// 
    /// </summary>
    ConfigNodePropertyString getCqAnalyticsTestandtargetApiUrl() const;
    void setCqAnalyticsTestandtargetApiUrl(ConfigNodePropertyString const& value);
    bool cqAnalyticsTestandtargetApiUrlIsSet() const;
    void unsetCq_analytics_testandtarget_api_url();
    /// <summary>
    /// 
    /// </summary>
    ConfigNodePropertyInteger getCqAnalyticsTestandtargetTimeout() const;
    void setCqAnalyticsTestandtargetTimeout(ConfigNodePropertyInteger const& value);
    bool cqAnalyticsTestandtargetTimeoutIsSet() const;
    void unsetCq_analytics_testandtarget_timeout();
    /// <summary>
    /// 
    /// </summary>
    ConfigNodePropertyInteger getCqAnalyticsTestandtargetSockettimeout() const;
    void setCqAnalyticsTestandtargetSockettimeout(ConfigNodePropertyInteger const& value);
    bool cqAnalyticsTestandtargetSockettimeoutIsSet() const;
    void unsetCq_analytics_testandtarget_sockettimeout();
    /// <summary>
    /// 
    /// </summary>
    ConfigNodePropertyString getCqAnalyticsTestandtargetRecommendationsUrlReplace() const;
    void setCqAnalyticsTestandtargetRecommendationsUrlReplace(ConfigNodePropertyString const& value);
    bool cqAnalyticsTestandtargetRecommendationsUrlReplaceIsSet() const;
    void unsetCq_analytics_testandtarget_recommendations_url_replace();
    /// <summary>
    /// 
    /// </summary>
    ConfigNodePropertyString getCqAnalyticsTestandtargetRecommendationsUrlReplacewith() const;
    void setCqAnalyticsTestandtargetRecommendationsUrlReplacewith(ConfigNodePropertyString const& value);
    bool cqAnalyticsTestandtargetRecommendationsUrlReplacewithIsSet() const;
    void unsetCq_analytics_testandtarget_recommendations_url_replacewith();

protected:
    ConfigNodePropertyString m_Cq_analytics_testandtarget_api_url;
    bool m_Cq_analytics_testandtarget_api_urlIsSet;
    ConfigNodePropertyInteger m_Cq_analytics_testandtarget_timeout;
    bool m_Cq_analytics_testandtarget_timeoutIsSet;
    ConfigNodePropertyInteger m_Cq_analytics_testandtarget_sockettimeout;
    bool m_Cq_analytics_testandtarget_sockettimeoutIsSet;
    ConfigNodePropertyString m_Cq_analytics_testandtarget_recommendations_url_replace;
    bool m_Cq_analytics_testandtarget_recommendations_url_replaceIsSet;
    ConfigNodePropertyString m_Cq_analytics_testandtarget_recommendations_url_replacewith;
    bool m_Cq_analytics_testandtarget_recommendations_url_replacewithIsSet;
};

}
}
}
}

#endif /* ComDayCqAnalyticsTestandtargetImplTestandtargetHttpClientImplProperties_H_ */
