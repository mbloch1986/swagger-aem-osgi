/**
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 *
 * OpenAPI Generator version: 3.2.1-SNAPSHOT
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/ConfigNodePropertyArray', 'model/ConfigNodePropertyBoolean', 'model/ConfigNodePropertyInteger', 'model/ConfigNodePropertyString'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./ConfigNodePropertyArray'), require('./ConfigNodePropertyBoolean'), require('./ConfigNodePropertyInteger'), require('./ConfigNodePropertyString'));
  } else {
    // Browser globals (root is window)
    if (!root.NodeSwaggerAemOsgi) {
      root.NodeSwaggerAemOsgi = {};
    }
    root.NodeSwaggerAemOsgi.OrgApacheJackrabbitOakSecurityAuthenticationLdapImplLdapIdentiProperties = factory(root.NodeSwaggerAemOsgi.ApiClient, root.NodeSwaggerAemOsgi.ConfigNodePropertyArray, root.NodeSwaggerAemOsgi.ConfigNodePropertyBoolean, root.NodeSwaggerAemOsgi.ConfigNodePropertyInteger, root.NodeSwaggerAemOsgi.ConfigNodePropertyString);
  }
}(this, function(ApiClient, ConfigNodePropertyArray, ConfigNodePropertyBoolean, ConfigNodePropertyInteger, ConfigNodePropertyString) {
  'use strict';




  /**
   * The OrgApacheJackrabbitOakSecurityAuthenticationLdapImplLdapIdentiProperties model module.
   * @module model/OrgApacheJackrabbitOakSecurityAuthenticationLdapImplLdapIdentiProperties
   * @version 1.0.0
   */

  /**
   * Constructs a new <code>OrgApacheJackrabbitOakSecurityAuthenticationLdapImplLdapIdentiProperties</code>.
   * @alias module:model/OrgApacheJackrabbitOakSecurityAuthenticationLdapImplLdapIdentiProperties
   * @class
   */
  var exports = function() {
    var _this = this;



























  };

  /**
   * Constructs a <code>OrgApacheJackrabbitOakSecurityAuthenticationLdapImplLdapIdentiProperties</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/OrgApacheJackrabbitOakSecurityAuthenticationLdapImplLdapIdentiProperties} obj Optional instance to populate.
   * @return {module:model/OrgApacheJackrabbitOakSecurityAuthenticationLdapImplLdapIdentiProperties} The populated <code>OrgApacheJackrabbitOakSecurityAuthenticationLdapImplLdapIdentiProperties</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('provider.name')) {
        obj['provider.name'] = ConfigNodePropertyString.constructFromObject(data['provider.name']);
      }
      if (data.hasOwnProperty('host.name')) {
        obj['host.name'] = ConfigNodePropertyString.constructFromObject(data['host.name']);
      }
      if (data.hasOwnProperty('host.port')) {
        obj['host.port'] = ConfigNodePropertyInteger.constructFromObject(data['host.port']);
      }
      if (data.hasOwnProperty('host.ssl')) {
        obj['host.ssl'] = ConfigNodePropertyBoolean.constructFromObject(data['host.ssl']);
      }
      if (data.hasOwnProperty('host.tls')) {
        obj['host.tls'] = ConfigNodePropertyBoolean.constructFromObject(data['host.tls']);
      }
      if (data.hasOwnProperty('host.noCertCheck')) {
        obj['host.noCertCheck'] = ConfigNodePropertyBoolean.constructFromObject(data['host.noCertCheck']);
      }
      if (data.hasOwnProperty('bind.dn')) {
        obj['bind.dn'] = ConfigNodePropertyString.constructFromObject(data['bind.dn']);
      }
      if (data.hasOwnProperty('bind.password')) {
        obj['bind.password'] = ConfigNodePropertyString.constructFromObject(data['bind.password']);
      }
      if (data.hasOwnProperty('searchTimeout')) {
        obj['searchTimeout'] = ConfigNodePropertyString.constructFromObject(data['searchTimeout']);
      }
      if (data.hasOwnProperty('adminPool.maxActive')) {
        obj['adminPool.maxActive'] = ConfigNodePropertyInteger.constructFromObject(data['adminPool.maxActive']);
      }
      if (data.hasOwnProperty('adminPool.lookupOnValidate')) {
        obj['adminPool.lookupOnValidate'] = ConfigNodePropertyBoolean.constructFromObject(data['adminPool.lookupOnValidate']);
      }
      if (data.hasOwnProperty('userPool.maxActive')) {
        obj['userPool.maxActive'] = ConfigNodePropertyInteger.constructFromObject(data['userPool.maxActive']);
      }
      if (data.hasOwnProperty('userPool.lookupOnValidate')) {
        obj['userPool.lookupOnValidate'] = ConfigNodePropertyBoolean.constructFromObject(data['userPool.lookupOnValidate']);
      }
      if (data.hasOwnProperty('user.baseDN')) {
        obj['user.baseDN'] = ConfigNodePropertyString.constructFromObject(data['user.baseDN']);
      }
      if (data.hasOwnProperty('user.objectclass')) {
        obj['user.objectclass'] = ConfigNodePropertyArray.constructFromObject(data['user.objectclass']);
      }
      if (data.hasOwnProperty('user.idAttribute')) {
        obj['user.idAttribute'] = ConfigNodePropertyString.constructFromObject(data['user.idAttribute']);
      }
      if (data.hasOwnProperty('user.extraFilter')) {
        obj['user.extraFilter'] = ConfigNodePropertyString.constructFromObject(data['user.extraFilter']);
      }
      if (data.hasOwnProperty('user.makeDnPath')) {
        obj['user.makeDnPath'] = ConfigNodePropertyBoolean.constructFromObject(data['user.makeDnPath']);
      }
      if (data.hasOwnProperty('group.baseDN')) {
        obj['group.baseDN'] = ConfigNodePropertyString.constructFromObject(data['group.baseDN']);
      }
      if (data.hasOwnProperty('group.objectclass')) {
        obj['group.objectclass'] = ConfigNodePropertyArray.constructFromObject(data['group.objectclass']);
      }
      if (data.hasOwnProperty('group.nameAttribute')) {
        obj['group.nameAttribute'] = ConfigNodePropertyString.constructFromObject(data['group.nameAttribute']);
      }
      if (data.hasOwnProperty('group.extraFilter')) {
        obj['group.extraFilter'] = ConfigNodePropertyString.constructFromObject(data['group.extraFilter']);
      }
      if (data.hasOwnProperty('group.makeDnPath')) {
        obj['group.makeDnPath'] = ConfigNodePropertyBoolean.constructFromObject(data['group.makeDnPath']);
      }
      if (data.hasOwnProperty('group.memberAttribute')) {
        obj['group.memberAttribute'] = ConfigNodePropertyString.constructFromObject(data['group.memberAttribute']);
      }
      if (data.hasOwnProperty('useUidForExtId')) {
        obj['useUidForExtId'] = ConfigNodePropertyBoolean.constructFromObject(data['useUidForExtId']);
      }
      if (data.hasOwnProperty('customattributes')) {
        obj['customattributes'] = ConfigNodePropertyArray.constructFromObject(data['customattributes']);
      }
    }
    return obj;
  }

  /**
   * @member {module:model/ConfigNodePropertyString} provider.name
   */
  exports.prototype['provider.name'] = undefined;
  /**
   * @member {module:model/ConfigNodePropertyString} host.name
   */
  exports.prototype['host.name'] = undefined;
  /**
   * @member {module:model/ConfigNodePropertyInteger} host.port
   */
  exports.prototype['host.port'] = undefined;
  /**
   * @member {module:model/ConfigNodePropertyBoolean} host.ssl
   */
  exports.prototype['host.ssl'] = undefined;
  /**
   * @member {module:model/ConfigNodePropertyBoolean} host.tls
   */
  exports.prototype['host.tls'] = undefined;
  /**
   * @member {module:model/ConfigNodePropertyBoolean} host.noCertCheck
   */
  exports.prototype['host.noCertCheck'] = undefined;
  /**
   * @member {module:model/ConfigNodePropertyString} bind.dn
   */
  exports.prototype['bind.dn'] = undefined;
  /**
   * @member {module:model/ConfigNodePropertyString} bind.password
   */
  exports.prototype['bind.password'] = undefined;
  /**
   * @member {module:model/ConfigNodePropertyString} searchTimeout
   */
  exports.prototype['searchTimeout'] = undefined;
  /**
   * @member {module:model/ConfigNodePropertyInteger} adminPool.maxActive
   */
  exports.prototype['adminPool.maxActive'] = undefined;
  /**
   * @member {module:model/ConfigNodePropertyBoolean} adminPool.lookupOnValidate
   */
  exports.prototype['adminPool.lookupOnValidate'] = undefined;
  /**
   * @member {module:model/ConfigNodePropertyInteger} userPool.maxActive
   */
  exports.prototype['userPool.maxActive'] = undefined;
  /**
   * @member {module:model/ConfigNodePropertyBoolean} userPool.lookupOnValidate
   */
  exports.prototype['userPool.lookupOnValidate'] = undefined;
  /**
   * @member {module:model/ConfigNodePropertyString} user.baseDN
   */
  exports.prototype['user.baseDN'] = undefined;
  /**
   * @member {module:model/ConfigNodePropertyArray} user.objectclass
   */
  exports.prototype['user.objectclass'] = undefined;
  /**
   * @member {module:model/ConfigNodePropertyString} user.idAttribute
   */
  exports.prototype['user.idAttribute'] = undefined;
  /**
   * @member {module:model/ConfigNodePropertyString} user.extraFilter
   */
  exports.prototype['user.extraFilter'] = undefined;
  /**
   * @member {module:model/ConfigNodePropertyBoolean} user.makeDnPath
   */
  exports.prototype['user.makeDnPath'] = undefined;
  /**
   * @member {module:model/ConfigNodePropertyString} group.baseDN
   */
  exports.prototype['group.baseDN'] = undefined;
  /**
   * @member {module:model/ConfigNodePropertyArray} group.objectclass
   */
  exports.prototype['group.objectclass'] = undefined;
  /**
   * @member {module:model/ConfigNodePropertyString} group.nameAttribute
   */
  exports.prototype['group.nameAttribute'] = undefined;
  /**
   * @member {module:model/ConfigNodePropertyString} group.extraFilter
   */
  exports.prototype['group.extraFilter'] = undefined;
  /**
   * @member {module:model/ConfigNodePropertyBoolean} group.makeDnPath
   */
  exports.prototype['group.makeDnPath'] = undefined;
  /**
   * @member {module:model/ConfigNodePropertyString} group.memberAttribute
   */
  exports.prototype['group.memberAttribute'] = undefined;
  /**
   * @member {module:model/ConfigNodePropertyBoolean} useUidForExtId
   */
  exports.prototype['useUidForExtId'] = undefined;
  /**
   * @member {module:model/ConfigNodePropertyArray} customattributes
   */
  exports.prototype['customattributes'] = undefined;



  return exports;
}));


