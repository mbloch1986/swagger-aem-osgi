/**
* Adobe Experience Manager OSGI config (AEM) API
* Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
*
* OpenAPI spec version: 1.0.0-pre.0
* Contact: opensource@shinesolutions.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/


#include "OrgApacheJackrabbitOakPluginsIndexSolrOsgiEmbeddedSolrServerCoProperties.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

OrgApacheJackrabbitOakPluginsIndexSolrOsgiEmbeddedSolrServerCoProperties::OrgApacheJackrabbitOakPluginsIndexSolrOsgiEmbeddedSolrServerCoProperties()
{
    m_Solr_home_pathIsSet = false;
    m_Solr_core_nameIsSet = false;
    
}

OrgApacheJackrabbitOakPluginsIndexSolrOsgiEmbeddedSolrServerCoProperties::~OrgApacheJackrabbitOakPluginsIndexSolrOsgiEmbeddedSolrServerCoProperties()
{
}

void OrgApacheJackrabbitOakPluginsIndexSolrOsgiEmbeddedSolrServerCoProperties::validate()
{
    // TODO: implement validation
}

nlohmann::json OrgApacheJackrabbitOakPluginsIndexSolrOsgiEmbeddedSolrServerCoProperties::toJson() const
{
    nlohmann::json val = nlohmann::json::object();

    if(m_Solr_home_pathIsSet)
    {
        val["solr.home.path"] = ModelBase::toJson(m_Solr_home_path);
    }
    if(m_Solr_core_nameIsSet)
    {
        val["solr.core.name"] = ModelBase::toJson(m_Solr_core_name);
    }
    

    return val;
}

void OrgApacheJackrabbitOakPluginsIndexSolrOsgiEmbeddedSolrServerCoProperties::fromJson(nlohmann::json& val)
{
    if(val.find("solr.home.path") != val.end())
    {
        if(!val["solr.home.path"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["solr.home.path"]);
            setSolrHomePath( newItem );
        }
        
    }
    if(val.find("solr.core.name") != val.end())
    {
        if(!val["solr.core.name"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["solr.core.name"]);
            setSolrCoreName( newItem );
        }
        
    }
    
}


ConfigNodePropertyString OrgApacheJackrabbitOakPluginsIndexSolrOsgiEmbeddedSolrServerCoProperties::getSolrHomePath() const
{
    return m_Solr_home_path;
}
void OrgApacheJackrabbitOakPluginsIndexSolrOsgiEmbeddedSolrServerCoProperties::setSolrHomePath(ConfigNodePropertyString const& value)
{
    m_Solr_home_path = value;
    m_Solr_home_pathIsSet = true;
}
bool OrgApacheJackrabbitOakPluginsIndexSolrOsgiEmbeddedSolrServerCoProperties::solrHomePathIsSet() const
{
    return m_Solr_home_pathIsSet;
}
void OrgApacheJackrabbitOakPluginsIndexSolrOsgiEmbeddedSolrServerCoProperties::unsetSolr_home_path()
{
    m_Solr_home_pathIsSet = false;
}
ConfigNodePropertyString OrgApacheJackrabbitOakPluginsIndexSolrOsgiEmbeddedSolrServerCoProperties::getSolrCoreName() const
{
    return m_Solr_core_name;
}
void OrgApacheJackrabbitOakPluginsIndexSolrOsgiEmbeddedSolrServerCoProperties::setSolrCoreName(ConfigNodePropertyString const& value)
{
    m_Solr_core_name = value;
    m_Solr_core_nameIsSet = true;
}
bool OrgApacheJackrabbitOakPluginsIndexSolrOsgiEmbeddedSolrServerCoProperties::solrCoreNameIsSet() const
{
    return m_Solr_core_nameIsSet;
}
void OrgApacheJackrabbitOakPluginsIndexSolrOsgiEmbeddedSolrServerCoProperties::unsetSolr_core_name()
{
    m_Solr_core_nameIsSet = false;
}

}
}
}
}

