/* 
 * Adobe Experience Manager OSGI config (AEM) API
 *
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 * Generated by: https://openapi-generator.tech
 */


#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct ComAdobeCqUpgradesCleanupImplUpgradeContentCleanupProperties {
  #[serde(rename = "delete.path.regexps")]
  delete_path_regexps: Option<::models::ConfigNodePropertyArray>,
  #[serde(rename = "delete.sql2.query")]
  delete_sql2_query: Option<::models::ConfigNodePropertyString>
}

impl ComAdobeCqUpgradesCleanupImplUpgradeContentCleanupProperties {
  pub fn new() -> ComAdobeCqUpgradesCleanupImplUpgradeContentCleanupProperties {
    ComAdobeCqUpgradesCleanupImplUpgradeContentCleanupProperties {
      delete_path_regexps: None,
      delete_sql2_query: None
    }
  }

  pub fn set_delete_path_regexps(&mut self, delete_path_regexps: ::models::ConfigNodePropertyArray) {
    self.delete_path_regexps = Some(delete_path_regexps);
  }

  pub fn with_delete_path_regexps(mut self, delete_path_regexps: ::models::ConfigNodePropertyArray) -> ComAdobeCqUpgradesCleanupImplUpgradeContentCleanupProperties {
    self.delete_path_regexps = Some(delete_path_regexps);
    self
  }

  pub fn delete_path_regexps(&self) -> Option<&::models::ConfigNodePropertyArray> {
    self.delete_path_regexps.as_ref()
  }

  pub fn reset_delete_path_regexps(&mut self) {
    self.delete_path_regexps = None;
  }

  pub fn set_delete_sql2_query(&mut self, delete_sql2_query: ::models::ConfigNodePropertyString) {
    self.delete_sql2_query = Some(delete_sql2_query);
  }

  pub fn with_delete_sql2_query(mut self, delete_sql2_query: ::models::ConfigNodePropertyString) -> ComAdobeCqUpgradesCleanupImplUpgradeContentCleanupProperties {
    self.delete_sql2_query = Some(delete_sql2_query);
    self
  }

  pub fn delete_sql2_query(&self) -> Option<&::models::ConfigNodePropertyString> {
    self.delete_sql2_query.as_ref()
  }

  pub fn reset_delete_sql2_query(&mut self) {
    self.delete_sql2_query = None;
  }

}



