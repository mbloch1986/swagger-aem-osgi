/**
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 3.2.1-SNAPSHOT.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */



#include "ComAdobeGraniteOffloadingImplTransporterOffloadingDefaultTranspoProperties.h"

#include <string>
#include <sstream>
#include <boost/property_tree/ptree.hpp>
#include <boost/property_tree/json_parser.hpp>

using boost::property_tree::ptree;
using boost::property_tree::read_json;
using boost::property_tree::write_json;

namespace org {
namespace openapitools {
namespace server {
namespace model {

ComAdobeGraniteOffloadingImplTransporterOffloadingDefaultTranspoProperties::ComAdobeGraniteOffloadingImplTransporterOffloadingDefaultTranspoProperties()
{
    
}

ComAdobeGraniteOffloadingImplTransporterOffloadingDefaultTranspoProperties::~ComAdobeGraniteOffloadingImplTransporterOffloadingDefaultTranspoProperties()
{
}

std::string ComAdobeGraniteOffloadingImplTransporterOffloadingDefaultTranspoProperties::toJsonString()
{
	std::stringstream ss;
	ptree pt;
	write_json(ss, pt, false);
	return ss.str();
}

void ComAdobeGraniteOffloadingImplTransporterOffloadingDefaultTranspoProperties::fromJsonString(std::string const& jsonString)
{
	std::stringstream ss(jsonString);
	ptree pt;
	read_json(ss,pt);
}

std::shared_ptr<ConfigNodePropertyString> ComAdobeGraniteOffloadingImplTransporterOffloadingDefaultTranspoProperties::getDefaultTransportAgentToWorkerPrefix() const
{
    return m_Default_transport_agent_to_worker_prefix;
}
void ComAdobeGraniteOffloadingImplTransporterOffloadingDefaultTranspoProperties::setDefaultTransportAgentToWorkerPrefix(std::shared_ptr<ConfigNodePropertyString> value)
{
    m_Default_transport_agent_to_worker_prefix = value;
}
std::shared_ptr<ConfigNodePropertyString> ComAdobeGraniteOffloadingImplTransporterOffloadingDefaultTranspoProperties::getDefaultTransportAgentToMasterPrefix() const
{
    return m_Default_transport_agent_to_master_prefix;
}
void ComAdobeGraniteOffloadingImplTransporterOffloadingDefaultTranspoProperties::setDefaultTransportAgentToMasterPrefix(std::shared_ptr<ConfigNodePropertyString> value)
{
    m_Default_transport_agent_to_master_prefix = value;
}
std::shared_ptr<ConfigNodePropertyString> ComAdobeGraniteOffloadingImplTransporterOffloadingDefaultTranspoProperties::getDefaultTransportInputPackage() const
{
    return m_Default_transport_input_package;
}
void ComAdobeGraniteOffloadingImplTransporterOffloadingDefaultTranspoProperties::setDefaultTransportInputPackage(std::shared_ptr<ConfigNodePropertyString> value)
{
    m_Default_transport_input_package = value;
}
std::shared_ptr<ConfigNodePropertyString> ComAdobeGraniteOffloadingImplTransporterOffloadingDefaultTranspoProperties::getDefaultTransportOutputPackage() const
{
    return m_Default_transport_output_package;
}
void ComAdobeGraniteOffloadingImplTransporterOffloadingDefaultTranspoProperties::setDefaultTransportOutputPackage(std::shared_ptr<ConfigNodePropertyString> value)
{
    m_Default_transport_output_package = value;
}
std::shared_ptr<ConfigNodePropertyBoolean> ComAdobeGraniteOffloadingImplTransporterOffloadingDefaultTranspoProperties::getDefaultTransportReplicationSynchronous() const
{
    return m_Default_transport_replication_synchronous;
}
void ComAdobeGraniteOffloadingImplTransporterOffloadingDefaultTranspoProperties::setDefaultTransportReplicationSynchronous(std::shared_ptr<ConfigNodePropertyBoolean> value)
{
    m_Default_transport_replication_synchronous = value;
}
std::shared_ptr<ConfigNodePropertyBoolean> ComAdobeGraniteOffloadingImplTransporterOffloadingDefaultTranspoProperties::getDefaultTransportContentpackage() const
{
    return m_Default_transport_contentpackage;
}
void ComAdobeGraniteOffloadingImplTransporterOffloadingDefaultTranspoProperties::setDefaultTransportContentpackage(std::shared_ptr<ConfigNodePropertyBoolean> value)
{
    m_Default_transport_contentpackage = value;
}
std::shared_ptr<ConfigNodePropertyBoolean> ComAdobeGraniteOffloadingImplTransporterOffloadingDefaultTranspoProperties::getOffloadingTransporterDefaultEnabled() const
{
    return m_Offloading_transporter_default_enabled;
}
void ComAdobeGraniteOffloadingImplTransporterOffloadingDefaultTranspoProperties::setOffloadingTransporterDefaultEnabled(std::shared_ptr<ConfigNodePropertyBoolean> value)
{
    m_Offloading_transporter_default_enabled = value;
}

}
}
}
}

