=begin comment

Adobe Experience Manager OSGI config (AEM) API

Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API

OpenAPI spec version: 1.0.0-pre.0
Contact: opensource@shinesolutions.com
Generated by: https://openapi-generator.tech

=end comment

=cut

#
# NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
# Do not edit the class manually.
# Ref: https://openapi-generator.tech
#
package WWW::OpenAPIClient::Object::ComAdobeCqScreensMqActivemqImplArtemisJMSProviderProperties;

require 5.6.0;
use strict;
use warnings;
use utf8;
use JSON qw(decode_json);
use Data::Dumper;
use Module::Runtime qw(use_module);
use Log::Any qw($log);
use Date::Parse;
use DateTime;

use WWW::OpenAPIClient::Object::ConfigNodePropertyArray;
use WWW::OpenAPIClient::Object::ConfigNodePropertyBoolean;
use WWW::OpenAPIClient::Object::ConfigNodePropertyDropDown;
use WWW::OpenAPIClient::Object::ConfigNodePropertyFloat;
use WWW::OpenAPIClient::Object::ConfigNodePropertyInteger;
use WWW::OpenAPIClient::Object::ConfigNodePropertyString;

use base ("Class::Accessor", "Class::Data::Inheritable");


#
#
#
# NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech). Do not edit the class manually.
# REF: https://openapi-generator.tech
#

=begin comment

Adobe Experience Manager OSGI config (AEM) API

Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API

OpenAPI spec version: 1.0.0-pre.0
Contact: opensource@shinesolutions.com
Generated by: https://openapi-generator.tech

=end comment

=cut

#
# NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
# Do not edit the class manually.
# Ref: https://openapi-generator.tech
#
__PACKAGE__->mk_classdata('attribute_map' => {});
__PACKAGE__->mk_classdata('openapi_types' => {});
__PACKAGE__->mk_classdata('method_documentation' => {}); 
__PACKAGE__->mk_classdata('class_documentation' => {});

# new object
sub new { 
    my ($class, %args) = @_; 

	my $self = bless {}, $class;
	
	foreach my $attribute (keys %{$class->attribute_map}) {
		my $args_key = $class->attribute_map->{$attribute};
		$self->$attribute( $args{ $args_key } );
	}
	
	return $self;
}  

# return perl hash
sub to_hash {
    return decode_json(JSON->new->convert_blessed->encode( shift ));
}

# used by JSON for serialization
sub TO_JSON { 
    my $self = shift;
    my $_data = {};
    foreach my $_key (keys %{$self->attribute_map}) {
        if (defined $self->{$_key}) {
            $_data->{$self->attribute_map->{$_key}} = $self->{$_key};
        }
    }
    return $_data;
}

# from Perl hashref
sub from_hash {
    my ($self, $hash) = @_;

    # loop through attributes and use openapi_types to deserialize the data
    while ( my ($_key, $_type) = each %{$self->openapi_types} ) {
    	my $_json_attribute = $self->attribute_map->{$_key}; 
        if ($_type =~ /^array\[/i) { # array
            my $_subclass = substr($_type, 6, -1);
            my @_array = ();
            foreach my $_element (@{$hash->{$_json_attribute}}) {
                push @_array, $self->_deserialize($_subclass, $_element);
            }
            $self->{$_key} = \@_array;
        } elsif (exists $hash->{$_json_attribute}) { #hash(model), primitive, datetime
            $self->{$_key} = $self->_deserialize($_type, $hash->{$_json_attribute});
        } else {
        	$log->debugf("Warning: %s (%s) does not exist in input hash\n", $_key, $_json_attribute);
        }
    }
  
    return $self;
}

# deserialize non-array data
sub _deserialize {
    my ($self, $type, $data) = @_;
    $log->debugf("deserializing %s with %s",Dumper($data), $type);
        
    if ($type eq 'DateTime') {
        return DateTime->from_epoch(epoch => str2time($data));
    } elsif ( grep( /^$type$/, ('int', 'double', 'string', 'boolean'))) {
        return $data;
    } else { # hash(model)
        my $_instance = eval "WWW::OpenAPIClient::Object::$type->new()";
        return $_instance->from_hash($data);
    }
}



__PACKAGE__->class_documentation({description => '',
                                  class => 'ComAdobeCqScreensMqActivemqImplArtemisJMSProviderProperties',
                                  required => [], # TODO
}                                 );

__PACKAGE__->method_documentation({
    'service/ranking' => {
    	datatype => 'ConfigNodePropertyInteger',
    	base_name => 'service.ranking',
    	description => '',
    	format => '',
    	read_only => '',
    		},
    'global/size' => {
    	datatype => 'ConfigNodePropertyInteger',
    	base_name => 'global.size',
    	description => '',
    	format => '',
    	read_only => '',
    		},
    'max/disk/usage' => {
    	datatype => 'ConfigNodePropertyInteger',
    	base_name => 'max.disk.usage',
    	description => '',
    	format => '',
    	read_only => '',
    		},
    'persistence/enabled' => {
    	datatype => 'ConfigNodePropertyBoolean',
    	base_name => 'persistence.enabled',
    	description => '',
    	format => '',
    	read_only => '',
    		},
    'thread/pool/max/size' => {
    	datatype => 'ConfigNodePropertyInteger',
    	base_name => 'thread.pool.max.size',
    	description => '',
    	format => '',
    	read_only => '',
    		},
    'scheduled/thread/pool/max/size' => {
    	datatype => 'ConfigNodePropertyInteger',
    	base_name => 'scheduled.thread.pool.max.size',
    	description => '',
    	format => '',
    	read_only => '',
    		},
    'graceful/shutdown/timeout' => {
    	datatype => 'ConfigNodePropertyInteger',
    	base_name => 'graceful.shutdown.timeout',
    	description => '',
    	format => '',
    	read_only => '',
    		},
    'queues' => {
    	datatype => 'ConfigNodePropertyArray',
    	base_name => 'queues',
    	description => '',
    	format => '',
    	read_only => '',
    		},
    'topics' => {
    	datatype => 'ConfigNodePropertyArray',
    	base_name => 'topics',
    	description => '',
    	format => '',
    	read_only => '',
    		},
    'addresses/max/delivery/attempts' => {
    	datatype => 'ConfigNodePropertyInteger',
    	base_name => 'addresses.max.delivery.attempts',
    	description => '',
    	format => '',
    	read_only => '',
    		},
    'addresses/expiry/delay' => {
    	datatype => 'ConfigNodePropertyInteger',
    	base_name => 'addresses.expiry.delay',
    	description => '',
    	format => '',
    	read_only => '',
    		},
    'addresses/address/full/message/policy' => {
    	datatype => 'ConfigNodePropertyDropDown',
    	base_name => 'addresses.address.full.message.policy',
    	description => '',
    	format => '',
    	read_only => '',
    		},
    'addresses/max/size/bytes' => {
    	datatype => 'ConfigNodePropertyInteger',
    	base_name => 'addresses.max.size.bytes',
    	description => '',
    	format => '',
    	read_only => '',
    		},
    'addresses/page/size/bytes' => {
    	datatype => 'ConfigNodePropertyInteger',
    	base_name => 'addresses.page.size.bytes',
    	description => '',
    	format => '',
    	read_only => '',
    		},
    'addresses/page/cache/max/size' => {
    	datatype => 'ConfigNodePropertyInteger',
    	base_name => 'addresses.page.cache.max.size',
    	description => '',
    	format => '',
    	read_only => '',
    		},
    'cluster/user' => {
    	datatype => 'ConfigNodePropertyString',
    	base_name => 'cluster.user',
    	description => '',
    	format => '',
    	read_only => '',
    		},
    'cluster/password' => {
    	datatype => 'ConfigNodePropertyString',
    	base_name => 'cluster.password',
    	description => '',
    	format => '',
    	read_only => '',
    		},
    'cluster/call/timeout' => {
    	datatype => 'ConfigNodePropertyInteger',
    	base_name => 'cluster.call.timeout',
    	description => '',
    	format => '',
    	read_only => '',
    		},
    'cluster/call/failover/timeout' => {
    	datatype => 'ConfigNodePropertyInteger',
    	base_name => 'cluster.call.failover.timeout',
    	description => '',
    	format => '',
    	read_only => '',
    		},
    'cluster/client/failure/check/period' => {
    	datatype => 'ConfigNodePropertyInteger',
    	base_name => 'cluster.client.failure.check.period',
    	description => '',
    	format => '',
    	read_only => '',
    		},
    'cluster/notification/attempts' => {
    	datatype => 'ConfigNodePropertyInteger',
    	base_name => 'cluster.notification.attempts',
    	description => '',
    	format => '',
    	read_only => '',
    		},
    'cluster/notification/interval' => {
    	datatype => 'ConfigNodePropertyInteger',
    	base_name => 'cluster.notification.interval',
    	description => '',
    	format => '',
    	read_only => '',
    		},
    'id/cache/size' => {
    	datatype => 'ConfigNodePropertyInteger',
    	base_name => 'id.cache.size',
    	description => '',
    	format => '',
    	read_only => '',
    		},
    'cluster/confirmation/window/size' => {
    	datatype => 'ConfigNodePropertyInteger',
    	base_name => 'cluster.confirmation.window.size',
    	description => '',
    	format => '',
    	read_only => '',
    		},
    'cluster/connection/ttl' => {
    	datatype => 'ConfigNodePropertyInteger',
    	base_name => 'cluster.connection.ttl',
    	description => '',
    	format => '',
    	read_only => '',
    		},
    'cluster/duplicate/detection' => {
    	datatype => 'ConfigNodePropertyBoolean',
    	base_name => 'cluster.duplicate.detection',
    	description => '',
    	format => '',
    	read_only => '',
    		},
    'cluster/initial/connect/attempts' => {
    	datatype => 'ConfigNodePropertyInteger',
    	base_name => 'cluster.initial.connect.attempts',
    	description => '',
    	format => '',
    	read_only => '',
    		},
    'cluster/max/retry/interval' => {
    	datatype => 'ConfigNodePropertyInteger',
    	base_name => 'cluster.max.retry.interval',
    	description => '',
    	format => '',
    	read_only => '',
    		},
    'cluster/min/large/message/size' => {
    	datatype => 'ConfigNodePropertyInteger',
    	base_name => 'cluster.min.large.message.size',
    	description => '',
    	format => '',
    	read_only => '',
    		},
    'cluster/producer/window/size' => {
    	datatype => 'ConfigNodePropertyInteger',
    	base_name => 'cluster.producer.window.size',
    	description => '',
    	format => '',
    	read_only => '',
    		},
    'cluster/reconnect/attempts' => {
    	datatype => 'ConfigNodePropertyInteger',
    	base_name => 'cluster.reconnect.attempts',
    	description => '',
    	format => '',
    	read_only => '',
    		},
    'cluster/retry/interval' => {
    	datatype => 'ConfigNodePropertyInteger',
    	base_name => 'cluster.retry.interval',
    	description => '',
    	format => '',
    	read_only => '',
    		},
    'cluster/retry/interval/multiplier' => {
    	datatype => 'ConfigNodePropertyFloat',
    	base_name => 'cluster.retry.interval.multiplier',
    	description => '',
    	format => '',
    	read_only => '',
    		},
});

__PACKAGE__->openapi_types( {
    'service/ranking' => 'ConfigNodePropertyInteger',
    'global/size' => 'ConfigNodePropertyInteger',
    'max/disk/usage' => 'ConfigNodePropertyInteger',
    'persistence/enabled' => 'ConfigNodePropertyBoolean',
    'thread/pool/max/size' => 'ConfigNodePropertyInteger',
    'scheduled/thread/pool/max/size' => 'ConfigNodePropertyInteger',
    'graceful/shutdown/timeout' => 'ConfigNodePropertyInteger',
    'queues' => 'ConfigNodePropertyArray',
    'topics' => 'ConfigNodePropertyArray',
    'addresses/max/delivery/attempts' => 'ConfigNodePropertyInteger',
    'addresses/expiry/delay' => 'ConfigNodePropertyInteger',
    'addresses/address/full/message/policy' => 'ConfigNodePropertyDropDown',
    'addresses/max/size/bytes' => 'ConfigNodePropertyInteger',
    'addresses/page/size/bytes' => 'ConfigNodePropertyInteger',
    'addresses/page/cache/max/size' => 'ConfigNodePropertyInteger',
    'cluster/user' => 'ConfigNodePropertyString',
    'cluster/password' => 'ConfigNodePropertyString',
    'cluster/call/timeout' => 'ConfigNodePropertyInteger',
    'cluster/call/failover/timeout' => 'ConfigNodePropertyInteger',
    'cluster/client/failure/check/period' => 'ConfigNodePropertyInteger',
    'cluster/notification/attempts' => 'ConfigNodePropertyInteger',
    'cluster/notification/interval' => 'ConfigNodePropertyInteger',
    'id/cache/size' => 'ConfigNodePropertyInteger',
    'cluster/confirmation/window/size' => 'ConfigNodePropertyInteger',
    'cluster/connection/ttl' => 'ConfigNodePropertyInteger',
    'cluster/duplicate/detection' => 'ConfigNodePropertyBoolean',
    'cluster/initial/connect/attempts' => 'ConfigNodePropertyInteger',
    'cluster/max/retry/interval' => 'ConfigNodePropertyInteger',
    'cluster/min/large/message/size' => 'ConfigNodePropertyInteger',
    'cluster/producer/window/size' => 'ConfigNodePropertyInteger',
    'cluster/reconnect/attempts' => 'ConfigNodePropertyInteger',
    'cluster/retry/interval' => 'ConfigNodePropertyInteger',
    'cluster/retry/interval/multiplier' => 'ConfigNodePropertyFloat'
} );

__PACKAGE__->attribute_map( {
    'service/ranking' => 'service.ranking',
    'global/size' => 'global.size',
    'max/disk/usage' => 'max.disk.usage',
    'persistence/enabled' => 'persistence.enabled',
    'thread/pool/max/size' => 'thread.pool.max.size',
    'scheduled/thread/pool/max/size' => 'scheduled.thread.pool.max.size',
    'graceful/shutdown/timeout' => 'graceful.shutdown.timeout',
    'queues' => 'queues',
    'topics' => 'topics',
    'addresses/max/delivery/attempts' => 'addresses.max.delivery.attempts',
    'addresses/expiry/delay' => 'addresses.expiry.delay',
    'addresses/address/full/message/policy' => 'addresses.address.full.message.policy',
    'addresses/max/size/bytes' => 'addresses.max.size.bytes',
    'addresses/page/size/bytes' => 'addresses.page.size.bytes',
    'addresses/page/cache/max/size' => 'addresses.page.cache.max.size',
    'cluster/user' => 'cluster.user',
    'cluster/password' => 'cluster.password',
    'cluster/call/timeout' => 'cluster.call.timeout',
    'cluster/call/failover/timeout' => 'cluster.call.failover.timeout',
    'cluster/client/failure/check/period' => 'cluster.client.failure.check.period',
    'cluster/notification/attempts' => 'cluster.notification.attempts',
    'cluster/notification/interval' => 'cluster.notification.interval',
    'id/cache/size' => 'id.cache.size',
    'cluster/confirmation/window/size' => 'cluster.confirmation.window.size',
    'cluster/connection/ttl' => 'cluster.connection.ttl',
    'cluster/duplicate/detection' => 'cluster.duplicate.detection',
    'cluster/initial/connect/attempts' => 'cluster.initial.connect.attempts',
    'cluster/max/retry/interval' => 'cluster.max.retry.interval',
    'cluster/min/large/message/size' => 'cluster.min.large.message.size',
    'cluster/producer/window/size' => 'cluster.producer.window.size',
    'cluster/reconnect/attempts' => 'cluster.reconnect.attempts',
    'cluster/retry/interval' => 'cluster.retry.interval',
    'cluster/retry/interval/multiplier' => 'cluster.retry.interval.multiplier'
} );

__PACKAGE__->mk_accessors(keys %{__PACKAGE__->attribute_map});


1;
