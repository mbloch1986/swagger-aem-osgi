/**
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 3.2.1-SNAPSHOT.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */



#include "ComDayCqWcmCoreImplLinkCheckerConfigurationFactoryImplProperties.h"

#include <string>
#include <sstream>
#include <boost/property_tree/ptree.hpp>
#include <boost/property_tree/json_parser.hpp>

using boost::property_tree::ptree;
using boost::property_tree::read_json;
using boost::property_tree::write_json;

namespace org {
namespace openapitools {
namespace server {
namespace model {

ComDayCqWcmCoreImplLinkCheckerConfigurationFactoryImplProperties::ComDayCqWcmCoreImplLinkCheckerConfigurationFactoryImplProperties()
{
    
}

ComDayCqWcmCoreImplLinkCheckerConfigurationFactoryImplProperties::~ComDayCqWcmCoreImplLinkCheckerConfigurationFactoryImplProperties()
{
}

std::string ComDayCqWcmCoreImplLinkCheckerConfigurationFactoryImplProperties::toJsonString()
{
	std::stringstream ss;
	ptree pt;
	write_json(ss, pt, false);
	return ss.str();
}

void ComDayCqWcmCoreImplLinkCheckerConfigurationFactoryImplProperties::fromJsonString(std::string const& jsonString)
{
	std::stringstream ss(jsonString);
	ptree pt;
	read_json(ss,pt);
}

std::shared_ptr<ConfigNodePropertyString> ComDayCqWcmCoreImplLinkCheckerConfigurationFactoryImplProperties::getLinkExpiredPrefix() const
{
    return m_Link_expired_prefix;
}
void ComDayCqWcmCoreImplLinkCheckerConfigurationFactoryImplProperties::setLinkExpiredPrefix(std::shared_ptr<ConfigNodePropertyString> value)
{
    m_Link_expired_prefix = value;
}
std::shared_ptr<ConfigNodePropertyBoolean> ComDayCqWcmCoreImplLinkCheckerConfigurationFactoryImplProperties::getLinkExpiredRemove() const
{
    return m_Link_expired_remove;
}
void ComDayCqWcmCoreImplLinkCheckerConfigurationFactoryImplProperties::setLinkExpiredRemove(std::shared_ptr<ConfigNodePropertyBoolean> value)
{
    m_Link_expired_remove = value;
}
std::shared_ptr<ConfigNodePropertyString> ComDayCqWcmCoreImplLinkCheckerConfigurationFactoryImplProperties::getLinkExpiredSuffix() const
{
    return m_Link_expired_suffix;
}
void ComDayCqWcmCoreImplLinkCheckerConfigurationFactoryImplProperties::setLinkExpiredSuffix(std::shared_ptr<ConfigNodePropertyString> value)
{
    m_Link_expired_suffix = value;
}
std::shared_ptr<ConfigNodePropertyString> ComDayCqWcmCoreImplLinkCheckerConfigurationFactoryImplProperties::getLinkInvalidPrefix() const
{
    return m_Link_invalid_prefix;
}
void ComDayCqWcmCoreImplLinkCheckerConfigurationFactoryImplProperties::setLinkInvalidPrefix(std::shared_ptr<ConfigNodePropertyString> value)
{
    m_Link_invalid_prefix = value;
}
std::shared_ptr<ConfigNodePropertyBoolean> ComDayCqWcmCoreImplLinkCheckerConfigurationFactoryImplProperties::getLinkInvalidRemove() const
{
    return m_Link_invalid_remove;
}
void ComDayCqWcmCoreImplLinkCheckerConfigurationFactoryImplProperties::setLinkInvalidRemove(std::shared_ptr<ConfigNodePropertyBoolean> value)
{
    m_Link_invalid_remove = value;
}
std::shared_ptr<ConfigNodePropertyString> ComDayCqWcmCoreImplLinkCheckerConfigurationFactoryImplProperties::getLinkInvalidSuffix() const
{
    return m_Link_invalid_suffix;
}
void ComDayCqWcmCoreImplLinkCheckerConfigurationFactoryImplProperties::setLinkInvalidSuffix(std::shared_ptr<ConfigNodePropertyString> value)
{
    m_Link_invalid_suffix = value;
}
std::shared_ptr<ConfigNodePropertyString> ComDayCqWcmCoreImplLinkCheckerConfigurationFactoryImplProperties::getLinkPredatedPrefix() const
{
    return m_Link_predated_prefix;
}
void ComDayCqWcmCoreImplLinkCheckerConfigurationFactoryImplProperties::setLinkPredatedPrefix(std::shared_ptr<ConfigNodePropertyString> value)
{
    m_Link_predated_prefix = value;
}
std::shared_ptr<ConfigNodePropertyBoolean> ComDayCqWcmCoreImplLinkCheckerConfigurationFactoryImplProperties::getLinkPredatedRemove() const
{
    return m_Link_predated_remove;
}
void ComDayCqWcmCoreImplLinkCheckerConfigurationFactoryImplProperties::setLinkPredatedRemove(std::shared_ptr<ConfigNodePropertyBoolean> value)
{
    m_Link_predated_remove = value;
}
std::shared_ptr<ConfigNodePropertyString> ComDayCqWcmCoreImplLinkCheckerConfigurationFactoryImplProperties::getLinkPredatedSuffix() const
{
    return m_Link_predated_suffix;
}
void ComDayCqWcmCoreImplLinkCheckerConfigurationFactoryImplProperties::setLinkPredatedSuffix(std::shared_ptr<ConfigNodePropertyString> value)
{
    m_Link_predated_suffix = value;
}
std::shared_ptr<ConfigNodePropertyArray> ComDayCqWcmCoreImplLinkCheckerConfigurationFactoryImplProperties::getLinkWcmmodes() const
{
    return m_Link_wcmmodes;
}
void ComDayCqWcmCoreImplLinkCheckerConfigurationFactoryImplProperties::setLinkWcmmodes(std::shared_ptr<ConfigNodePropertyArray> value)
{
    m_Link_wcmmodes = value;
}

}
}
}
}

