/**
* Adobe Experience Manager OSGI config (AEM) API
* Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
*
* OpenAPI spec version: 1.0.0-pre.0
* Contact: opensource@shinesolutions.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
/*
 * ComDayCqWidgetImplHtmlLibraryManagerImplProperties.h
 *
 * 
 */

#ifndef ComDayCqWidgetImplHtmlLibraryManagerImplProperties_H_
#define ComDayCqWidgetImplHtmlLibraryManagerImplProperties_H_


#include "ModelBase.h"

#include "ConfigNodePropertyBoolean.h"
#include "ConfigNodePropertyInteger.h"
#include "ConfigNodePropertyArray.h"
#include "ConfigNodePropertyString.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
/// 
/// </summary>
class  ComDayCqWidgetImplHtmlLibraryManagerImplProperties
    : public ModelBase
{
public:
    ComDayCqWidgetImplHtmlLibraryManagerImplProperties();
    virtual ~ComDayCqWidgetImplHtmlLibraryManagerImplProperties();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    nlohmann::json toJson() const override;
    void fromJson(nlohmann::json& json) override;

    /////////////////////////////////////////////
    /// ComDayCqWidgetImplHtmlLibraryManagerImplProperties members

    /// <summary>
    /// 
    /// </summary>
    ConfigNodePropertyString getHtmllibmanagerClientmanager() const;
    void setHtmllibmanagerClientmanager(ConfigNodePropertyString const& value);
    bool htmllibmanagerClientmanagerIsSet() const;
    void unsetHtmllibmanager_clientmanager();
    /// <summary>
    /// 
    /// </summary>
    ConfigNodePropertyBoolean getHtmllibmanagerDebug() const;
    void setHtmllibmanagerDebug(ConfigNodePropertyBoolean const& value);
    bool htmllibmanagerDebugIsSet() const;
    void unsetHtmllibmanager_debug();
    /// <summary>
    /// 
    /// </summary>
    ConfigNodePropertyBoolean getHtmllibmanagerDebugConsole() const;
    void setHtmllibmanagerDebugConsole(ConfigNodePropertyBoolean const& value);
    bool htmllibmanagerDebugConsoleIsSet() const;
    void unsetHtmllibmanager_debug_console();
    /// <summary>
    /// 
    /// </summary>
    ConfigNodePropertyString getHtmllibmanagerDebugInitJs() const;
    void setHtmllibmanagerDebugInitJs(ConfigNodePropertyString const& value);
    bool htmllibmanagerDebugInitJsIsSet() const;
    void unsetHtmllibmanager_debug_init_js();
    /// <summary>
    /// 
    /// </summary>
    ConfigNodePropertyString getHtmllibmanagerDefaultthemename() const;
    void setHtmllibmanagerDefaultthemename(ConfigNodePropertyString const& value);
    bool htmllibmanagerDefaultthemenameIsSet() const;
    void unsetHtmllibmanager_defaultthemename();
    /// <summary>
    /// 
    /// </summary>
    ConfigNodePropertyString getHtmllibmanagerDefaultuserthemename() const;
    void setHtmllibmanagerDefaultuserthemename(ConfigNodePropertyString const& value);
    bool htmllibmanagerDefaultuserthemenameIsSet() const;
    void unsetHtmllibmanager_defaultuserthemename();
    /// <summary>
    /// 
    /// </summary>
    ConfigNodePropertyString getHtmllibmanagerFirebuglitePath() const;
    void setHtmllibmanagerFirebuglitePath(ConfigNodePropertyString const& value);
    bool htmllibmanagerFirebuglitePathIsSet() const;
    void unsetHtmllibmanager_firebuglite_path();
    /// <summary>
    /// 
    /// </summary>
    ConfigNodePropertyBoolean getHtmllibmanagerForceCQUrlInfo() const;
    void setHtmllibmanagerForceCQUrlInfo(ConfigNodePropertyBoolean const& value);
    bool htmllibmanagerForceCQUrlInfoIsSet() const;
    void unsetHtmllibmanager_forceCQUrlInfo();
    /// <summary>
    /// 
    /// </summary>
    ConfigNodePropertyBoolean getHtmllibmanagerGzip() const;
    void setHtmllibmanagerGzip(ConfigNodePropertyBoolean const& value);
    bool htmllibmanagerGzipIsSet() const;
    void unsetHtmllibmanager_gzip();
    /// <summary>
    /// 
    /// </summary>
    ConfigNodePropertyInteger getHtmllibmanagerMaxage() const;
    void setHtmllibmanagerMaxage(ConfigNodePropertyInteger const& value);
    bool htmllibmanagerMaxageIsSet() const;
    void unsetHtmllibmanager_maxage();
    /// <summary>
    /// 
    /// </summary>
    ConfigNodePropertyInteger getHtmllibmanagerMaxDataUriSize() const;
    void setHtmllibmanagerMaxDataUriSize(ConfigNodePropertyInteger const& value);
    bool htmllibmanagerMaxDataUriSizeIsSet() const;
    void unsetHtmllibmanager_maxDataUriSize();
    /// <summary>
    /// 
    /// </summary>
    ConfigNodePropertyBoolean getHtmllibmanagerMinify() const;
    void setHtmllibmanagerMinify(ConfigNodePropertyBoolean const& value);
    bool htmllibmanagerMinifyIsSet() const;
    void unsetHtmllibmanager_minify();
    /// <summary>
    /// 
    /// </summary>
    ConfigNodePropertyArray getHtmllibmanagerPathList() const;
    void setHtmllibmanagerPathList(ConfigNodePropertyArray const& value);
    bool htmllibmanagerPathListIsSet() const;
    void unsetHtmllibmanager_path_list();
    /// <summary>
    /// 
    /// </summary>
    ConfigNodePropertyBoolean getHtmllibmanagerTiming() const;
    void setHtmllibmanagerTiming(ConfigNodePropertyBoolean const& value);
    bool htmllibmanagerTimingIsSet() const;
    void unsetHtmllibmanager_timing();

protected:
    ConfigNodePropertyString m_Htmllibmanager_clientmanager;
    bool m_Htmllibmanager_clientmanagerIsSet;
    ConfigNodePropertyBoolean m_Htmllibmanager_debug;
    bool m_Htmllibmanager_debugIsSet;
    ConfigNodePropertyBoolean m_Htmllibmanager_debug_console;
    bool m_Htmllibmanager_debug_consoleIsSet;
    ConfigNodePropertyString m_Htmllibmanager_debug_init_js;
    bool m_Htmllibmanager_debug_init_jsIsSet;
    ConfigNodePropertyString m_Htmllibmanager_defaultthemename;
    bool m_Htmllibmanager_defaultthemenameIsSet;
    ConfigNodePropertyString m_Htmllibmanager_defaultuserthemename;
    bool m_Htmllibmanager_defaultuserthemenameIsSet;
    ConfigNodePropertyString m_Htmllibmanager_firebuglite_path;
    bool m_Htmllibmanager_firebuglite_pathIsSet;
    ConfigNodePropertyBoolean m_Htmllibmanager_forceCQUrlInfo;
    bool m_Htmllibmanager_forceCQUrlInfoIsSet;
    ConfigNodePropertyBoolean m_Htmllibmanager_gzip;
    bool m_Htmllibmanager_gzipIsSet;
    ConfigNodePropertyInteger m_Htmllibmanager_maxage;
    bool m_Htmllibmanager_maxageIsSet;
    ConfigNodePropertyInteger m_Htmllibmanager_maxDataUriSize;
    bool m_Htmllibmanager_maxDataUriSizeIsSet;
    ConfigNodePropertyBoolean m_Htmllibmanager_minify;
    bool m_Htmllibmanager_minifyIsSet;
    ConfigNodePropertyArray m_Htmllibmanager_path_list;
    bool m_Htmllibmanager_path_listIsSet;
    ConfigNodePropertyBoolean m_Htmllibmanager_timing;
    bool m_Htmllibmanager_timingIsSet;
};

}
}
}
}

#endif /* ComDayCqWidgetImplHtmlLibraryManagerImplProperties_H_ */
