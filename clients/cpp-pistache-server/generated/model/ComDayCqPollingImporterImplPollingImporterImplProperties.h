/**
* Adobe Experience Manager OSGI config (AEM) API
* Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
*
* OpenAPI spec version: 1.0.0-pre.0
* Contact: opensource@shinesolutions.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
/*
 * ComDayCqPollingImporterImplPollingImporterImplProperties.h
 *
 * 
 */

#ifndef ComDayCqPollingImporterImplPollingImporterImplProperties_H_
#define ComDayCqPollingImporterImplPollingImporterImplProperties_H_


#include "ModelBase.h"

#include "ConfigNodePropertyInteger.h"
#include "ConfigNodePropertyArray.h"
#include "ConfigNodePropertyString.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
/// 
/// </summary>
class  ComDayCqPollingImporterImplPollingImporterImplProperties
    : public ModelBase
{
public:
    ComDayCqPollingImporterImplPollingImporterImplProperties();
    virtual ~ComDayCqPollingImporterImplPollingImporterImplProperties();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    nlohmann::json toJson() const override;
    void fromJson(nlohmann::json& json) override;

    /////////////////////////////////////////////
    /// ComDayCqPollingImporterImplPollingImporterImplProperties members

    /// <summary>
    /// 
    /// </summary>
    ConfigNodePropertyInteger getImporterMinInterval() const;
    void setImporterMinInterval(ConfigNodePropertyInteger const& value);
    bool importerMinIntervalIsSet() const;
    void unsetImporter_min_interval();
    /// <summary>
    /// 
    /// </summary>
    ConfigNodePropertyString getImporterUser() const;
    void setImporterUser(ConfigNodePropertyString const& value);
    bool importerUserIsSet() const;
    void unsetImporter_user();
    /// <summary>
    /// 
    /// </summary>
    ConfigNodePropertyArray getExcludePaths() const;
    void setExcludePaths(ConfigNodePropertyArray const& value);
    bool excludePathsIsSet() const;
    void unsetExclude_paths();
    /// <summary>
    /// 
    /// </summary>
    ConfigNodePropertyArray getIncludePaths() const;
    void setIncludePaths(ConfigNodePropertyArray const& value);
    bool includePathsIsSet() const;
    void unsetInclude_paths();

protected:
    ConfigNodePropertyInteger m_Importer_min_interval;
    bool m_Importer_min_intervalIsSet;
    ConfigNodePropertyString m_Importer_user;
    bool m_Importer_userIsSet;
    ConfigNodePropertyArray m_Exclude_paths;
    bool m_Exclude_pathsIsSet;
    ConfigNodePropertyArray m_Include_paths;
    bool m_Include_pathsIsSet;
};

}
}
}
}

#endif /* ComDayCqPollingImporterImplPollingImporterImplProperties_H_ */
