/**
* Adobe Experience Manager OSGI config (AEM) API
* Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
*
* OpenAPI spec version: 1.0.0-pre.0
* Contact: opensource@shinesolutions.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
/*
 * ComDayCqPollingImporterImplManagedPollConfigImplProperties.h
 *
 * 
 */

#ifndef ComDayCqPollingImporterImplManagedPollConfigImplProperties_H_
#define ComDayCqPollingImporterImplManagedPollConfigImplProperties_H_


#include "ModelBase.h"

#include "ConfigNodePropertyBoolean.h"
#include "ConfigNodePropertyInteger.h"
#include "ConfigNodePropertyString.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
/// 
/// </summary>
class  ComDayCqPollingImporterImplManagedPollConfigImplProperties
    : public ModelBase
{
public:
    ComDayCqPollingImporterImplManagedPollConfigImplProperties();
    virtual ~ComDayCqPollingImporterImplManagedPollConfigImplProperties();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    nlohmann::json toJson() const override;
    void fromJson(nlohmann::json& json) override;

    /////////////////////////////////////////////
    /// ComDayCqPollingImporterImplManagedPollConfigImplProperties members

    /// <summary>
    /// 
    /// </summary>
    ConfigNodePropertyString getId() const;
    void setId(ConfigNodePropertyString const& value);
    bool idIsSet() const;
    void unsetId();
    /// <summary>
    /// 
    /// </summary>
    ConfigNodePropertyBoolean getEnabled() const;
    void setEnabled(ConfigNodePropertyBoolean const& value);
    bool enabledIsSet() const;
    void unsetEnabled();
    /// <summary>
    /// 
    /// </summary>
    ConfigNodePropertyBoolean getReference() const;
    void setReference(ConfigNodePropertyBoolean const& value);
    bool referenceIsSet() const;
    void unsetReference();
    /// <summary>
    /// 
    /// </summary>
    ConfigNodePropertyInteger getInterval() const;
    void setInterval(ConfigNodePropertyInteger const& value);
    bool intervalIsSet() const;
    void unsetInterval();
    /// <summary>
    /// 
    /// </summary>
    ConfigNodePropertyString getExpression() const;
    void setExpression(ConfigNodePropertyString const& value);
    bool expressionIsSet() const;
    void unsetExpression();
    /// <summary>
    /// 
    /// </summary>
    ConfigNodePropertyString getSource() const;
    void setSource(ConfigNodePropertyString const& value);
    bool sourceIsSet() const;
    void unsetSource();
    /// <summary>
    /// 
    /// </summary>
    ConfigNodePropertyString getTarget() const;
    void setTarget(ConfigNodePropertyString const& value);
    bool targetIsSet() const;
    void unsetTarget();
    /// <summary>
    /// 
    /// </summary>
    ConfigNodePropertyString getLogin() const;
    void setLogin(ConfigNodePropertyString const& value);
    bool loginIsSet() const;
    void unsetLogin();
    /// <summary>
    /// 
    /// </summary>
    ConfigNodePropertyString getPassword() const;
    void setPassword(ConfigNodePropertyString const& value);
    bool passwordIsSet() const;
    void unsetPassword();

protected:
    ConfigNodePropertyString m_Id;
    bool m_IdIsSet;
    ConfigNodePropertyBoolean m_Enabled;
    bool m_EnabledIsSet;
    ConfigNodePropertyBoolean m_Reference;
    bool m_ReferenceIsSet;
    ConfigNodePropertyInteger m_Interval;
    bool m_IntervalIsSet;
    ConfigNodePropertyString m_Expression;
    bool m_ExpressionIsSet;
    ConfigNodePropertyString m_Source;
    bool m_SourceIsSet;
    ConfigNodePropertyString m_Target;
    bool m_TargetIsSet;
    ConfigNodePropertyString m_Login;
    bool m_LoginIsSet;
    ConfigNodePropertyString m_Password;
    bool m_PasswordIsSet;
};

}
}
}
}

#endif /* ComDayCqPollingImporterImplManagedPollConfigImplProperties_H_ */
