/**
* Adobe Experience Manager OSGI config (AEM) API
* Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
*
* OpenAPI spec version: 1.0.0-pre.0
* Contact: opensource@shinesolutions.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/


#include "ComAdobeCqSocialCommonsEmailreplyImplCommentEmailEventListenerProperties.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

ComAdobeCqSocialCommonsEmailreplyImplCommentEmailEventListenerProperties::ComAdobeCqSocialCommonsEmailreplyImplCommentEmailEventListenerProperties()
{
    m_Event_topicsIsSet = false;
    
}

ComAdobeCqSocialCommonsEmailreplyImplCommentEmailEventListenerProperties::~ComAdobeCqSocialCommonsEmailreplyImplCommentEmailEventListenerProperties()
{
}

void ComAdobeCqSocialCommonsEmailreplyImplCommentEmailEventListenerProperties::validate()
{
    // TODO: implement validation
}

nlohmann::json ComAdobeCqSocialCommonsEmailreplyImplCommentEmailEventListenerProperties::toJson() const
{
    nlohmann::json val = nlohmann::json::object();

    if(m_Event_topicsIsSet)
    {
        val["event.topics"] = ModelBase::toJson(m_Event_topics);
    }
    

    return val;
}

void ComAdobeCqSocialCommonsEmailreplyImplCommentEmailEventListenerProperties::fromJson(nlohmann::json& val)
{
    if(val.find("event.topics") != val.end())
    {
        if(!val["event.topics"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["event.topics"]);
            setEventTopics( newItem );
        }
        
    }
    
}


ConfigNodePropertyString ComAdobeCqSocialCommonsEmailreplyImplCommentEmailEventListenerProperties::getEventTopics() const
{
    return m_Event_topics;
}
void ComAdobeCqSocialCommonsEmailreplyImplCommentEmailEventListenerProperties::setEventTopics(ConfigNodePropertyString const& value)
{
    m_Event_topics = value;
    m_Event_topicsIsSet = true;
}
bool ComAdobeCqSocialCommonsEmailreplyImplCommentEmailEventListenerProperties::eventTopicsIsSet() const
{
    return m_Event_topicsIsSet;
}
void ComAdobeCqSocialCommonsEmailreplyImplCommentEmailEventListenerProperties::unsetEvent_topics()
{
    m_Event_topicsIsSet = false;
}

}
}
}
}

