/**
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.client.model;

import org.openapitools.client.model.ConfigNodePropertyArray;
import org.openapitools.client.model.ConfigNodePropertyBoolean;
import org.openapitools.client.model.ConfigNodePropertyDropDown;
import org.openapitools.client.model.ConfigNodePropertyInteger;
import org.openapitools.client.model.ConfigNodePropertyString;
import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

@ApiModel(description = "")
public class OrgApacheSlingDistributionSerializationImplVltVaultDistributionProperties {
  
  @SerializedName("name")
  private ConfigNodePropertyString name = null;
  @SerializedName("type")
  private ConfigNodePropertyDropDown type = null;
  @SerializedName("importMode")
  private ConfigNodePropertyString importMode = null;
  @SerializedName("aclHandling")
  private ConfigNodePropertyString aclHandling = null;
  @SerializedName("package.roots")
  private ConfigNodePropertyString packageRoots = null;
  @SerializedName("package.filters")
  private ConfigNodePropertyArray packageFilters = null;
  @SerializedName("property.filters")
  private ConfigNodePropertyArray propertyFilters = null;
  @SerializedName("tempFsFolder")
  private ConfigNodePropertyString tempFsFolder = null;
  @SerializedName("useBinaryReferences")
  private ConfigNodePropertyBoolean useBinaryReferences = null;
  @SerializedName("autoSaveThreshold")
  private ConfigNodePropertyInteger autoSaveThreshold = null;
  @SerializedName("cleanupDelay")
  private ConfigNodePropertyInteger cleanupDelay = null;
  @SerializedName("fileThreshold")
  private ConfigNodePropertyInteger fileThreshold = null;
  @SerializedName("MEGA_BYTES")
  private ConfigNodePropertyDropDown MEGA_BYTES = null;
  @SerializedName("useOffHeapMemory")
  private ConfigNodePropertyBoolean useOffHeapMemory = null;
  @SerializedName("digestAlgorithm")
  private ConfigNodePropertyDropDown digestAlgorithm = null;
  @SerializedName("monitoringQueueSize")
  private ConfigNodePropertyInteger monitoringQueueSize = null;
  @SerializedName("pathsMapping")
  private ConfigNodePropertyArray pathsMapping = null;
  @SerializedName("strictImport")
  private ConfigNodePropertyBoolean strictImport = null;

  /**
   **/
  @ApiModelProperty(value = "")
  public ConfigNodePropertyString getName() {
    return name;
  }
  public void setName(ConfigNodePropertyString name) {
    this.name = name;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public ConfigNodePropertyDropDown getType() {
    return type;
  }
  public void setType(ConfigNodePropertyDropDown type) {
    this.type = type;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public ConfigNodePropertyString getImportMode() {
    return importMode;
  }
  public void setImportMode(ConfigNodePropertyString importMode) {
    this.importMode = importMode;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public ConfigNodePropertyString getAclHandling() {
    return aclHandling;
  }
  public void setAclHandling(ConfigNodePropertyString aclHandling) {
    this.aclHandling = aclHandling;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public ConfigNodePropertyString getPackageRoots() {
    return packageRoots;
  }
  public void setPackageRoots(ConfigNodePropertyString packageRoots) {
    this.packageRoots = packageRoots;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public ConfigNodePropertyArray getPackageFilters() {
    return packageFilters;
  }
  public void setPackageFilters(ConfigNodePropertyArray packageFilters) {
    this.packageFilters = packageFilters;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public ConfigNodePropertyArray getPropertyFilters() {
    return propertyFilters;
  }
  public void setPropertyFilters(ConfigNodePropertyArray propertyFilters) {
    this.propertyFilters = propertyFilters;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public ConfigNodePropertyString getTempFsFolder() {
    return tempFsFolder;
  }
  public void setTempFsFolder(ConfigNodePropertyString tempFsFolder) {
    this.tempFsFolder = tempFsFolder;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public ConfigNodePropertyBoolean getUseBinaryReferences() {
    return useBinaryReferences;
  }
  public void setUseBinaryReferences(ConfigNodePropertyBoolean useBinaryReferences) {
    this.useBinaryReferences = useBinaryReferences;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public ConfigNodePropertyInteger getAutoSaveThreshold() {
    return autoSaveThreshold;
  }
  public void setAutoSaveThreshold(ConfigNodePropertyInteger autoSaveThreshold) {
    this.autoSaveThreshold = autoSaveThreshold;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public ConfigNodePropertyInteger getCleanupDelay() {
    return cleanupDelay;
  }
  public void setCleanupDelay(ConfigNodePropertyInteger cleanupDelay) {
    this.cleanupDelay = cleanupDelay;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public ConfigNodePropertyInteger getFileThreshold() {
    return fileThreshold;
  }
  public void setFileThreshold(ConfigNodePropertyInteger fileThreshold) {
    this.fileThreshold = fileThreshold;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public ConfigNodePropertyDropDown getMEGABYTES() {
    return MEGA_BYTES;
  }
  public void setMEGABYTES(ConfigNodePropertyDropDown MEGA_BYTES) {
    this.MEGA_BYTES = MEGA_BYTES;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public ConfigNodePropertyBoolean getUseOffHeapMemory() {
    return useOffHeapMemory;
  }
  public void setUseOffHeapMemory(ConfigNodePropertyBoolean useOffHeapMemory) {
    this.useOffHeapMemory = useOffHeapMemory;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public ConfigNodePropertyDropDown getDigestAlgorithm() {
    return digestAlgorithm;
  }
  public void setDigestAlgorithm(ConfigNodePropertyDropDown digestAlgorithm) {
    this.digestAlgorithm = digestAlgorithm;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public ConfigNodePropertyInteger getMonitoringQueueSize() {
    return monitoringQueueSize;
  }
  public void setMonitoringQueueSize(ConfigNodePropertyInteger monitoringQueueSize) {
    this.monitoringQueueSize = monitoringQueueSize;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public ConfigNodePropertyArray getPathsMapping() {
    return pathsMapping;
  }
  public void setPathsMapping(ConfigNodePropertyArray pathsMapping) {
    this.pathsMapping = pathsMapping;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public ConfigNodePropertyBoolean getStrictImport() {
    return strictImport;
  }
  public void setStrictImport(ConfigNodePropertyBoolean strictImport) {
    this.strictImport = strictImport;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    OrgApacheSlingDistributionSerializationImplVltVaultDistributionProperties orgApacheSlingDistributionSerializationImplVltVaultDistributionProperties = (OrgApacheSlingDistributionSerializationImplVltVaultDistributionProperties) o;
    return (this.name == null ? orgApacheSlingDistributionSerializationImplVltVaultDistributionProperties.name == null : this.name.equals(orgApacheSlingDistributionSerializationImplVltVaultDistributionProperties.name)) &&
        (this.type == null ? orgApacheSlingDistributionSerializationImplVltVaultDistributionProperties.type == null : this.type.equals(orgApacheSlingDistributionSerializationImplVltVaultDistributionProperties.type)) &&
        (this.importMode == null ? orgApacheSlingDistributionSerializationImplVltVaultDistributionProperties.importMode == null : this.importMode.equals(orgApacheSlingDistributionSerializationImplVltVaultDistributionProperties.importMode)) &&
        (this.aclHandling == null ? orgApacheSlingDistributionSerializationImplVltVaultDistributionProperties.aclHandling == null : this.aclHandling.equals(orgApacheSlingDistributionSerializationImplVltVaultDistributionProperties.aclHandling)) &&
        (this.packageRoots == null ? orgApacheSlingDistributionSerializationImplVltVaultDistributionProperties.packageRoots == null : this.packageRoots.equals(orgApacheSlingDistributionSerializationImplVltVaultDistributionProperties.packageRoots)) &&
        (this.packageFilters == null ? orgApacheSlingDistributionSerializationImplVltVaultDistributionProperties.packageFilters == null : this.packageFilters.equals(orgApacheSlingDistributionSerializationImplVltVaultDistributionProperties.packageFilters)) &&
        (this.propertyFilters == null ? orgApacheSlingDistributionSerializationImplVltVaultDistributionProperties.propertyFilters == null : this.propertyFilters.equals(orgApacheSlingDistributionSerializationImplVltVaultDistributionProperties.propertyFilters)) &&
        (this.tempFsFolder == null ? orgApacheSlingDistributionSerializationImplVltVaultDistributionProperties.tempFsFolder == null : this.tempFsFolder.equals(orgApacheSlingDistributionSerializationImplVltVaultDistributionProperties.tempFsFolder)) &&
        (this.useBinaryReferences == null ? orgApacheSlingDistributionSerializationImplVltVaultDistributionProperties.useBinaryReferences == null : this.useBinaryReferences.equals(orgApacheSlingDistributionSerializationImplVltVaultDistributionProperties.useBinaryReferences)) &&
        (this.autoSaveThreshold == null ? orgApacheSlingDistributionSerializationImplVltVaultDistributionProperties.autoSaveThreshold == null : this.autoSaveThreshold.equals(orgApacheSlingDistributionSerializationImplVltVaultDistributionProperties.autoSaveThreshold)) &&
        (this.cleanupDelay == null ? orgApacheSlingDistributionSerializationImplVltVaultDistributionProperties.cleanupDelay == null : this.cleanupDelay.equals(orgApacheSlingDistributionSerializationImplVltVaultDistributionProperties.cleanupDelay)) &&
        (this.fileThreshold == null ? orgApacheSlingDistributionSerializationImplVltVaultDistributionProperties.fileThreshold == null : this.fileThreshold.equals(orgApacheSlingDistributionSerializationImplVltVaultDistributionProperties.fileThreshold)) &&
        (this.MEGA_BYTES == null ? orgApacheSlingDistributionSerializationImplVltVaultDistributionProperties.MEGA_BYTES == null : this.MEGA_BYTES.equals(orgApacheSlingDistributionSerializationImplVltVaultDistributionProperties.MEGA_BYTES)) &&
        (this.useOffHeapMemory == null ? orgApacheSlingDistributionSerializationImplVltVaultDistributionProperties.useOffHeapMemory == null : this.useOffHeapMemory.equals(orgApacheSlingDistributionSerializationImplVltVaultDistributionProperties.useOffHeapMemory)) &&
        (this.digestAlgorithm == null ? orgApacheSlingDistributionSerializationImplVltVaultDistributionProperties.digestAlgorithm == null : this.digestAlgorithm.equals(orgApacheSlingDistributionSerializationImplVltVaultDistributionProperties.digestAlgorithm)) &&
        (this.monitoringQueueSize == null ? orgApacheSlingDistributionSerializationImplVltVaultDistributionProperties.monitoringQueueSize == null : this.monitoringQueueSize.equals(orgApacheSlingDistributionSerializationImplVltVaultDistributionProperties.monitoringQueueSize)) &&
        (this.pathsMapping == null ? orgApacheSlingDistributionSerializationImplVltVaultDistributionProperties.pathsMapping == null : this.pathsMapping.equals(orgApacheSlingDistributionSerializationImplVltVaultDistributionProperties.pathsMapping)) &&
        (this.strictImport == null ? orgApacheSlingDistributionSerializationImplVltVaultDistributionProperties.strictImport == null : this.strictImport.equals(orgApacheSlingDistributionSerializationImplVltVaultDistributionProperties.strictImport));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.name == null ? 0: this.name.hashCode());
    result = 31 * result + (this.type == null ? 0: this.type.hashCode());
    result = 31 * result + (this.importMode == null ? 0: this.importMode.hashCode());
    result = 31 * result + (this.aclHandling == null ? 0: this.aclHandling.hashCode());
    result = 31 * result + (this.packageRoots == null ? 0: this.packageRoots.hashCode());
    result = 31 * result + (this.packageFilters == null ? 0: this.packageFilters.hashCode());
    result = 31 * result + (this.propertyFilters == null ? 0: this.propertyFilters.hashCode());
    result = 31 * result + (this.tempFsFolder == null ? 0: this.tempFsFolder.hashCode());
    result = 31 * result + (this.useBinaryReferences == null ? 0: this.useBinaryReferences.hashCode());
    result = 31 * result + (this.autoSaveThreshold == null ? 0: this.autoSaveThreshold.hashCode());
    result = 31 * result + (this.cleanupDelay == null ? 0: this.cleanupDelay.hashCode());
    result = 31 * result + (this.fileThreshold == null ? 0: this.fileThreshold.hashCode());
    result = 31 * result + (this.MEGA_BYTES == null ? 0: this.MEGA_BYTES.hashCode());
    result = 31 * result + (this.useOffHeapMemory == null ? 0: this.useOffHeapMemory.hashCode());
    result = 31 * result + (this.digestAlgorithm == null ? 0: this.digestAlgorithm.hashCode());
    result = 31 * result + (this.monitoringQueueSize == null ? 0: this.monitoringQueueSize.hashCode());
    result = 31 * result + (this.pathsMapping == null ? 0: this.pathsMapping.hashCode());
    result = 31 * result + (this.strictImport == null ? 0: this.strictImport.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class OrgApacheSlingDistributionSerializationImplVltVaultDistributionProperties {\n");
    
    sb.append("  name: ").append(name).append("\n");
    sb.append("  type: ").append(type).append("\n");
    sb.append("  importMode: ").append(importMode).append("\n");
    sb.append("  aclHandling: ").append(aclHandling).append("\n");
    sb.append("  packageRoots: ").append(packageRoots).append("\n");
    sb.append("  packageFilters: ").append(packageFilters).append("\n");
    sb.append("  propertyFilters: ").append(propertyFilters).append("\n");
    sb.append("  tempFsFolder: ").append(tempFsFolder).append("\n");
    sb.append("  useBinaryReferences: ").append(useBinaryReferences).append("\n");
    sb.append("  autoSaveThreshold: ").append(autoSaveThreshold).append("\n");
    sb.append("  cleanupDelay: ").append(cleanupDelay).append("\n");
    sb.append("  fileThreshold: ").append(fileThreshold).append("\n");
    sb.append("  MEGA_BYTES: ").append(MEGA_BYTES).append("\n");
    sb.append("  useOffHeapMemory: ").append(useOffHeapMemory).append("\n");
    sb.append("  digestAlgorithm: ").append(digestAlgorithm).append("\n");
    sb.append("  monitoringQueueSize: ").append(monitoringQueueSize).append("\n");
    sb.append("  pathsMapping: ").append(pathsMapping).append("\n");
    sb.append("  strictImport: ").append(strictImport).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
