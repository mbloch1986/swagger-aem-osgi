/**
* Adobe Experience Manager OSGI config (AEM) API
* Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
*
* OpenAPI spec version: 1.0.0-pre.0
* Contact: opensource@shinesolutions.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
/*
 * ComAdobeOctopusNcommBootstrapProperties.h
 *
 * 
 */

#ifndef ComAdobeOctopusNcommBootstrapProperties_H_
#define ComAdobeOctopusNcommBootstrapProperties_H_


#include "ModelBase.h"

#include "ConfigNodePropertyInteger.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
/// 
/// </summary>
class  ComAdobeOctopusNcommBootstrapProperties
    : public ModelBase
{
public:
    ComAdobeOctopusNcommBootstrapProperties();
    virtual ~ComAdobeOctopusNcommBootstrapProperties();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    nlohmann::json toJson() const override;
    void fromJson(nlohmann::json& json) override;

    /////////////////////////////////////////////
    /// ComAdobeOctopusNcommBootstrapProperties members

    /// <summary>
    /// 
    /// </summary>
    ConfigNodePropertyInteger getMaxConnections() const;
    void setMaxConnections(ConfigNodePropertyInteger const& value);
    bool maxConnectionsIsSet() const;
    void unsetMaxConnections();
    /// <summary>
    /// 
    /// </summary>
    ConfigNodePropertyInteger getMaxRequests() const;
    void setMaxRequests(ConfigNodePropertyInteger const& value);
    bool maxRequestsIsSet() const;
    void unsetMaxRequests();
    /// <summary>
    /// 
    /// </summary>
    ConfigNodePropertyInteger getRequestTimeout() const;
    void setRequestTimeout(ConfigNodePropertyInteger const& value);
    bool requestTimeoutIsSet() const;
    void unsetRequestTimeout();
    /// <summary>
    /// 
    /// </summary>
    ConfigNodePropertyInteger getRequestRetries() const;
    void setRequestRetries(ConfigNodePropertyInteger const& value);
    bool requestRetriesIsSet() const;
    void unsetRequestRetries();
    /// <summary>
    /// 
    /// </summary>
    ConfigNodePropertyInteger getLaunchTimeout() const;
    void setLaunchTimeout(ConfigNodePropertyInteger const& value);
    bool launchTimeoutIsSet() const;
    void unsetLaunchTimeout();

protected:
    ConfigNodePropertyInteger m_MaxConnections;
    bool m_MaxConnectionsIsSet;
    ConfigNodePropertyInteger m_MaxRequests;
    bool m_MaxRequestsIsSet;
    ConfigNodePropertyInteger m_RequestTimeout;
    bool m_RequestTimeoutIsSet;
    ConfigNodePropertyInteger m_RequestRetries;
    bool m_RequestRetriesIsSet;
    ConfigNodePropertyInteger m_LaunchTimeout;
    bool m_LaunchTimeoutIsSet;
};

}
}
}
}

#endif /* ComAdobeOctopusNcommBootstrapProperties_H_ */
