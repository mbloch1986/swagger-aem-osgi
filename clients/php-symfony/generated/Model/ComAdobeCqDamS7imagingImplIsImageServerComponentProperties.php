<?php
/**
 * ComAdobeCqDamS7imagingImplIsImageServerComponentProperties
 *
 * PHP version 5
 *
 * @category Class
 * @package  OpenAPI\Server\Model
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * Adobe Experience Manager OSGI config (AEM) API
 *
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 *
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Do not edit the class manually.
 */

namespace OpenAPI\Server\Model;

use Symfony\Component\Validator\Constraints as Assert;
use JMS\Serializer\Annotation\Type;
use JMS\Serializer\Annotation\SerializedName;

/**
 * Class representing the ComAdobeCqDamS7imagingImplIsImageServerComponentProperties model.
 *
 * @package OpenAPI\Server\Model
 * @author  OpenAPI Generator team
 */
class ComAdobeCqDamS7imagingImplIsImageServerComponentProperties 
{
        /**
     * @var OpenAPI\Server\Model\ConfigNodePropertyString|null
     * @SerializedName("TcpPort")
     * @Assert\Type("OpenAPI\Server\Model\ConfigNodePropertyString")
     * @Type("OpenAPI\Server\Model\ConfigNodePropertyString")
     */
    protected $tcpPort;

    /**
     * @var OpenAPI\Server\Model\ConfigNodePropertyBoolean|null
     * @SerializedName("AllowRemoteAccess")
     * @Assert\Type("OpenAPI\Server\Model\ConfigNodePropertyBoolean")
     * @Type("OpenAPI\Server\Model\ConfigNodePropertyBoolean")
     */
    protected $allowRemoteAccess;

    /**
     * @var OpenAPI\Server\Model\ConfigNodePropertyString|null
     * @SerializedName("MaxRenderRgnPixels")
     * @Assert\Type("OpenAPI\Server\Model\ConfigNodePropertyString")
     * @Type("OpenAPI\Server\Model\ConfigNodePropertyString")
     */
    protected $maxRenderRgnPixels;

    /**
     * @var OpenAPI\Server\Model\ConfigNodePropertyString|null
     * @SerializedName("MaxMessageSize")
     * @Assert\Type("OpenAPI\Server\Model\ConfigNodePropertyString")
     * @Type("OpenAPI\Server\Model\ConfigNodePropertyString")
     */
    protected $maxMessageSize;

    /**
     * @var OpenAPI\Server\Model\ConfigNodePropertyInteger|null
     * @SerializedName("RandomAccessUrlTimeout")
     * @Assert\Type("OpenAPI\Server\Model\ConfigNodePropertyInteger")
     * @Type("OpenAPI\Server\Model\ConfigNodePropertyInteger")
     */
    protected $randomAccessUrlTimeout;

    /**
     * @var OpenAPI\Server\Model\ConfigNodePropertyInteger|null
     * @SerializedName("WorkerThreads")
     * @Assert\Type("OpenAPI\Server\Model\ConfigNodePropertyInteger")
     * @Type("OpenAPI\Server\Model\ConfigNodePropertyInteger")
     */
    protected $workerThreads;

    /**
     * Constructor
     * @param mixed[] $data Associated array of property values initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->tcpPort = isset($data['tcpPort']) ? $data['tcpPort'] : null;
        $this->allowRemoteAccess = isset($data['allowRemoteAccess']) ? $data['allowRemoteAccess'] : null;
        $this->maxRenderRgnPixels = isset($data['maxRenderRgnPixels']) ? $data['maxRenderRgnPixels'] : null;
        $this->maxMessageSize = isset($data['maxMessageSize']) ? $data['maxMessageSize'] : null;
        $this->randomAccessUrlTimeout = isset($data['randomAccessUrlTimeout']) ? $data['randomAccessUrlTimeout'] : null;
        $this->workerThreads = isset($data['workerThreads']) ? $data['workerThreads'] : null;
    }

    /**
     * Gets tcpPort.
     *
     * @return OpenAPI\Server\Model\ConfigNodePropertyString|null
     */
    public function getTcpPort()
    {
        return $this->tcpPort;
    }

    /**
     * Sets tcpPort.
     *
     * @param OpenAPI\Server\Model\ConfigNodePropertyString|null $tcpPort
     *
     * @return $this
     */
    public function setTcpPort(ConfigNodePropertyString $tcpPort = null)
    {
        $this->tcpPort = $tcpPort;

        return $this;
    }

    /**
     * Gets allowRemoteAccess.
     *
     * @return OpenAPI\Server\Model\ConfigNodePropertyBoolean|null
     */
    public function getAllowRemoteAccess()
    {
        return $this->allowRemoteAccess;
    }

    /**
     * Sets allowRemoteAccess.
     *
     * @param OpenAPI\Server\Model\ConfigNodePropertyBoolean|null $allowRemoteAccess
     *
     * @return $this
     */
    public function setAllowRemoteAccess(ConfigNodePropertyBoolean $allowRemoteAccess = null)
    {
        $this->allowRemoteAccess = $allowRemoteAccess;

        return $this;
    }

    /**
     * Gets maxRenderRgnPixels.
     *
     * @return OpenAPI\Server\Model\ConfigNodePropertyString|null
     */
    public function getMaxRenderRgnPixels()
    {
        return $this->maxRenderRgnPixels;
    }

    /**
     * Sets maxRenderRgnPixels.
     *
     * @param OpenAPI\Server\Model\ConfigNodePropertyString|null $maxRenderRgnPixels
     *
     * @return $this
     */
    public function setMaxRenderRgnPixels(ConfigNodePropertyString $maxRenderRgnPixels = null)
    {
        $this->maxRenderRgnPixels = $maxRenderRgnPixels;

        return $this;
    }

    /**
     * Gets maxMessageSize.
     *
     * @return OpenAPI\Server\Model\ConfigNodePropertyString|null
     */
    public function getMaxMessageSize()
    {
        return $this->maxMessageSize;
    }

    /**
     * Sets maxMessageSize.
     *
     * @param OpenAPI\Server\Model\ConfigNodePropertyString|null $maxMessageSize
     *
     * @return $this
     */
    public function setMaxMessageSize(ConfigNodePropertyString $maxMessageSize = null)
    {
        $this->maxMessageSize = $maxMessageSize;

        return $this;
    }

    /**
     * Gets randomAccessUrlTimeout.
     *
     * @return OpenAPI\Server\Model\ConfigNodePropertyInteger|null
     */
    public function getRandomAccessUrlTimeout()
    {
        return $this->randomAccessUrlTimeout;
    }

    /**
     * Sets randomAccessUrlTimeout.
     *
     * @param OpenAPI\Server\Model\ConfigNodePropertyInteger|null $randomAccessUrlTimeout
     *
     * @return $this
     */
    public function setRandomAccessUrlTimeout(ConfigNodePropertyInteger $randomAccessUrlTimeout = null)
    {
        $this->randomAccessUrlTimeout = $randomAccessUrlTimeout;

        return $this;
    }

    /**
     * Gets workerThreads.
     *
     * @return OpenAPI\Server\Model\ConfigNodePropertyInteger|null
     */
    public function getWorkerThreads()
    {
        return $this->workerThreads;
    }

    /**
     * Sets workerThreads.
     *
     * @param OpenAPI\Server\Model\ConfigNodePropertyInteger|null $workerThreads
     *
     * @return $this
     */
    public function setWorkerThreads(ConfigNodePropertyInteger $workerThreads = null)
    {
        $this->workerThreads = $workerThreads;

        return $this;
    }
}


