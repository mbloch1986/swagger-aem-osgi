package org.openapitools.client.api

import argonaut._
import argonaut.EncodeJson._
import argonaut.DecodeJson._

import org.http4s.{EntityDecoder, EntityEncoder}
import org.http4s.argonaut._
import org.joda.time.DateTime
import OrgApacheJackrabbitOakPluginsIndexSolrOsgiSolrServerProviderSeInfo._

case class OrgApacheJackrabbitOakPluginsIndexSolrOsgiSolrServerProviderSeInfo (
  pid: Option[String],
title: Option[String],
description: Option[String],
properties: Option[OrgApacheJackrabbitOakPluginsIndexSolrOsgiSolrServerProviderSeProperties])

object OrgApacheJackrabbitOakPluginsIndexSolrOsgiSolrServerProviderSeInfo {
  import DateTimeCodecs._

  implicit val OrgApacheJackrabbitOakPluginsIndexSolrOsgiSolrServerProviderSeInfoCodecJson: CodecJson[OrgApacheJackrabbitOakPluginsIndexSolrOsgiSolrServerProviderSeInfo] = CodecJson.derive[OrgApacheJackrabbitOakPluginsIndexSolrOsgiSolrServerProviderSeInfo]
  implicit val OrgApacheJackrabbitOakPluginsIndexSolrOsgiSolrServerProviderSeInfoDecoder: EntityDecoder[OrgApacheJackrabbitOakPluginsIndexSolrOsgiSolrServerProviderSeInfo] = jsonOf[OrgApacheJackrabbitOakPluginsIndexSolrOsgiSolrServerProviderSeInfo]
  implicit val OrgApacheJackrabbitOakPluginsIndexSolrOsgiSolrServerProviderSeInfoEncoder: EntityEncoder[OrgApacheJackrabbitOakPluginsIndexSolrOsgiSolrServerProviderSeInfo] = jsonEncoderOf[OrgApacheJackrabbitOakPluginsIndexSolrOsgiSolrServerProviderSeInfo]
}
