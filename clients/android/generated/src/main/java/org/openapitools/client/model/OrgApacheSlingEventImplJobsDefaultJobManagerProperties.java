/**
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.client.model;

import org.openapitools.client.model.ConfigNodePropertyDropDown;
import org.openapitools.client.model.ConfigNodePropertyInteger;
import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

@ApiModel(description = "")
public class OrgApacheSlingEventImplJobsDefaultJobManagerProperties {
  
  @SerializedName("queue.priority")
  private ConfigNodePropertyDropDown queuePriority = null;
  @SerializedName("queue.retries")
  private ConfigNodePropertyInteger queueRetries = null;
  @SerializedName("queue.retrydelay")
  private ConfigNodePropertyInteger queueRetrydelay = null;
  @SerializedName("queue.maxparallel")
  private ConfigNodePropertyInteger queueMaxparallel = null;

  /**
   **/
  @ApiModelProperty(value = "")
  public ConfigNodePropertyDropDown getQueuePriority() {
    return queuePriority;
  }
  public void setQueuePriority(ConfigNodePropertyDropDown queuePriority) {
    this.queuePriority = queuePriority;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public ConfigNodePropertyInteger getQueueRetries() {
    return queueRetries;
  }
  public void setQueueRetries(ConfigNodePropertyInteger queueRetries) {
    this.queueRetries = queueRetries;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public ConfigNodePropertyInteger getQueueRetrydelay() {
    return queueRetrydelay;
  }
  public void setQueueRetrydelay(ConfigNodePropertyInteger queueRetrydelay) {
    this.queueRetrydelay = queueRetrydelay;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public ConfigNodePropertyInteger getQueueMaxparallel() {
    return queueMaxparallel;
  }
  public void setQueueMaxparallel(ConfigNodePropertyInteger queueMaxparallel) {
    this.queueMaxparallel = queueMaxparallel;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    OrgApacheSlingEventImplJobsDefaultJobManagerProperties orgApacheSlingEventImplJobsDefaultJobManagerProperties = (OrgApacheSlingEventImplJobsDefaultJobManagerProperties) o;
    return (this.queuePriority == null ? orgApacheSlingEventImplJobsDefaultJobManagerProperties.queuePriority == null : this.queuePriority.equals(orgApacheSlingEventImplJobsDefaultJobManagerProperties.queuePriority)) &&
        (this.queueRetries == null ? orgApacheSlingEventImplJobsDefaultJobManagerProperties.queueRetries == null : this.queueRetries.equals(orgApacheSlingEventImplJobsDefaultJobManagerProperties.queueRetries)) &&
        (this.queueRetrydelay == null ? orgApacheSlingEventImplJobsDefaultJobManagerProperties.queueRetrydelay == null : this.queueRetrydelay.equals(orgApacheSlingEventImplJobsDefaultJobManagerProperties.queueRetrydelay)) &&
        (this.queueMaxparallel == null ? orgApacheSlingEventImplJobsDefaultJobManagerProperties.queueMaxparallel == null : this.queueMaxparallel.equals(orgApacheSlingEventImplJobsDefaultJobManagerProperties.queueMaxparallel));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.queuePriority == null ? 0: this.queuePriority.hashCode());
    result = 31 * result + (this.queueRetries == null ? 0: this.queueRetries.hashCode());
    result = 31 * result + (this.queueRetrydelay == null ? 0: this.queueRetrydelay.hashCode());
    result = 31 * result + (this.queueMaxparallel == null ? 0: this.queueMaxparallel.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class OrgApacheSlingEventImplJobsDefaultJobManagerProperties {\n");
    
    sb.append("  queuePriority: ").append(queuePriority).append("\n");
    sb.append("  queueRetries: ").append(queueRetries).append("\n");
    sb.append("  queueRetrydelay: ").append(queueRetrydelay).append("\n");
    sb.append("  queueMaxparallel: ").append(queueMaxparallel).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
