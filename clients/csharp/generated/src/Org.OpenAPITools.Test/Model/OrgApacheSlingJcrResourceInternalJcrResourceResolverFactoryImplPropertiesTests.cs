/* 
 * Adobe Experience Manager OSGI config (AEM) API
 *
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using NUnit.Framework;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using Org.OpenAPITools.Api;
using Org.OpenAPITools.Model;
using Org.OpenAPITools.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace Org.OpenAPITools.Test
{
    /// <summary>
    ///  Class for testing OrgApacheSlingJcrResourceInternalJcrResourceResolverFactoryImplProperties
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    [TestFixture]
    public class OrgApacheSlingJcrResourceInternalJcrResourceResolverFactoryImplPropertiesTests
    {
        // TODO uncomment below to declare an instance variable for OrgApacheSlingJcrResourceInternalJcrResourceResolverFactoryImplProperties
        //private OrgApacheSlingJcrResourceInternalJcrResourceResolverFactoryImplProperties instance;

        /// <summary>
        /// Setup before each test
        /// </summary>
        [SetUp]
        public void Init()
        {
            // TODO uncomment below to create an instance of OrgApacheSlingJcrResourceInternalJcrResourceResolverFactoryImplProperties
            //instance = new OrgApacheSlingJcrResourceInternalJcrResourceResolverFactoryImplProperties();
        }

        /// <summary>
        /// Clean up after each test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of OrgApacheSlingJcrResourceInternalJcrResourceResolverFactoryImplProperties
        /// </summary>
        [Test]
        public void OrgApacheSlingJcrResourceInternalJcrResourceResolverFactoryImplPropertiesInstanceTest()
        {
            // TODO uncomment below to test "IsInstanceOfType" OrgApacheSlingJcrResourceInternalJcrResourceResolverFactoryImplProperties
            //Assert.IsInstanceOfType<OrgApacheSlingJcrResourceInternalJcrResourceResolverFactoryImplProperties> (instance, "variable 'instance' is a OrgApacheSlingJcrResourceInternalJcrResourceResolverFactoryImplProperties");
        }


        /// <summary>
        /// Test the property 'ResourceResolverSearchpath'
        /// </summary>
        [Test]
        public void ResourceResolverSearchpathTest()
        {
            // TODO unit test for the property 'ResourceResolverSearchpath'
        }
        /// <summary>
        /// Test the property 'ResourceResolverManglenamespaces'
        /// </summary>
        [Test]
        public void ResourceResolverManglenamespacesTest()
        {
            // TODO unit test for the property 'ResourceResolverManglenamespaces'
        }
        /// <summary>
        /// Test the property 'ResourceResolverAllowDirect'
        /// </summary>
        [Test]
        public void ResourceResolverAllowDirectTest()
        {
            // TODO unit test for the property 'ResourceResolverAllowDirect'
        }
        /// <summary>
        /// Test the property 'ResourceResolverRequiredProviders'
        /// </summary>
        [Test]
        public void ResourceResolverRequiredProvidersTest()
        {
            // TODO unit test for the property 'ResourceResolverRequiredProviders'
        }
        /// <summary>
        /// Test the property 'ResourceResolverRequiredProvidernames'
        /// </summary>
        [Test]
        public void ResourceResolverRequiredProvidernamesTest()
        {
            // TODO unit test for the property 'ResourceResolverRequiredProvidernames'
        }
        /// <summary>
        /// Test the property 'ResourceResolverVirtual'
        /// </summary>
        [Test]
        public void ResourceResolverVirtualTest()
        {
            // TODO unit test for the property 'ResourceResolverVirtual'
        }
        /// <summary>
        /// Test the property 'ResourceResolverMapping'
        /// </summary>
        [Test]
        public void ResourceResolverMappingTest()
        {
            // TODO unit test for the property 'ResourceResolverMapping'
        }
        /// <summary>
        /// Test the property 'ResourceResolverMapLocation'
        /// </summary>
        [Test]
        public void ResourceResolverMapLocationTest()
        {
            // TODO unit test for the property 'ResourceResolverMapLocation'
        }
        /// <summary>
        /// Test the property 'ResourceResolverMapObservation'
        /// </summary>
        [Test]
        public void ResourceResolverMapObservationTest()
        {
            // TODO unit test for the property 'ResourceResolverMapObservation'
        }
        /// <summary>
        /// Test the property 'ResourceResolverDefaultVanityRedirectStatus'
        /// </summary>
        [Test]
        public void ResourceResolverDefaultVanityRedirectStatusTest()
        {
            // TODO unit test for the property 'ResourceResolverDefaultVanityRedirectStatus'
        }
        /// <summary>
        /// Test the property 'ResourceResolverEnableVanitypath'
        /// </summary>
        [Test]
        public void ResourceResolverEnableVanitypathTest()
        {
            // TODO unit test for the property 'ResourceResolverEnableVanitypath'
        }
        /// <summary>
        /// Test the property 'ResourceResolverVanitypathMaxEntries'
        /// </summary>
        [Test]
        public void ResourceResolverVanitypathMaxEntriesTest()
        {
            // TODO unit test for the property 'ResourceResolverVanitypathMaxEntries'
        }
        /// <summary>
        /// Test the property 'ResourceResolverVanitypathMaxEntriesStartup'
        /// </summary>
        [Test]
        public void ResourceResolverVanitypathMaxEntriesStartupTest()
        {
            // TODO unit test for the property 'ResourceResolverVanitypathMaxEntriesStartup'
        }
        /// <summary>
        /// Test the property 'ResourceResolverVanitypathBloomfilterMaxBytes'
        /// </summary>
        [Test]
        public void ResourceResolverVanitypathBloomfilterMaxBytesTest()
        {
            // TODO unit test for the property 'ResourceResolverVanitypathBloomfilterMaxBytes'
        }
        /// <summary>
        /// Test the property 'ResourceResolverOptimizeAliasResolution'
        /// </summary>
        [Test]
        public void ResourceResolverOptimizeAliasResolutionTest()
        {
            // TODO unit test for the property 'ResourceResolverOptimizeAliasResolution'
        }
        /// <summary>
        /// Test the property 'ResourceResolverVanitypathWhitelist'
        /// </summary>
        [Test]
        public void ResourceResolverVanitypathWhitelistTest()
        {
            // TODO unit test for the property 'ResourceResolverVanitypathWhitelist'
        }
        /// <summary>
        /// Test the property 'ResourceResolverVanitypathBlacklist'
        /// </summary>
        [Test]
        public void ResourceResolverVanitypathBlacklistTest()
        {
            // TODO unit test for the property 'ResourceResolverVanitypathBlacklist'
        }
        /// <summary>
        /// Test the property 'ResourceResolverVanityPrecedence'
        /// </summary>
        [Test]
        public void ResourceResolverVanityPrecedenceTest()
        {
            // TODO unit test for the property 'ResourceResolverVanityPrecedence'
        }
        /// <summary>
        /// Test the property 'ResourceResolverProviderhandlingParanoid'
        /// </summary>
        [Test]
        public void ResourceResolverProviderhandlingParanoidTest()
        {
            // TODO unit test for the property 'ResourceResolverProviderhandlingParanoid'
        }
        /// <summary>
        /// Test the property 'ResourceResolverLogClosing'
        /// </summary>
        [Test]
        public void ResourceResolverLogClosingTest()
        {
            // TODO unit test for the property 'ResourceResolverLogClosing'
        }
        /// <summary>
        /// Test the property 'ResourceResolverLogUnclosed'
        /// </summary>
        [Test]
        public void ResourceResolverLogUnclosedTest()
        {
            // TODO unit test for the property 'ResourceResolverLogUnclosed'
        }

    }

}
