/**
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIOrgApacheJackrabbitOakSegmentSegmentNodeStoreFactoryProperties.h
 *
 * 
 */

#ifndef OAIOrgApacheJackrabbitOakSegmentSegmentNodeStoreFactoryProperties_H_
#define OAIOrgApacheJackrabbitOakSegmentSegmentNodeStoreFactoryProperties_H_

#include <QJsonObject>


#include "OAIOAIConfigNodePropertyBoolean.h"
#include "OAIOAIConfigNodePropertyInteger.h"
#include "OAIOAIConfigNodePropertyString.h"

#include "OAIObject.h"

namespace OpenAPI {

class OAIOrgApacheJackrabbitOakSegmentSegmentNodeStoreFactoryProperties: public OAIObject {
public:
    OAIOrgApacheJackrabbitOakSegmentSegmentNodeStoreFactoryProperties();
    OAIOrgApacheJackrabbitOakSegmentSegmentNodeStoreFactoryProperties(QString json);
    ~OAIOrgApacheJackrabbitOakSegmentSegmentNodeStoreFactoryProperties();
    void init();
    void cleanup();

    QString asJson () override;
    QJsonObject asJsonObject() override;
    void fromJsonObject(QJsonObject json) override;
    OAIOrgApacheJackrabbitOakSegmentSegmentNodeStoreFactoryProperties* fromJson(QString jsonString) override;

    OAIConfigNodePropertyString* getRepositoryHome();
    void setRepositoryHome(OAIConfigNodePropertyString* repository_home);

    OAIConfigNodePropertyString* getTarmkMode();
    void setTarmkMode(OAIConfigNodePropertyString* tarmk_mode);

    OAIConfigNodePropertyInteger* getTarmkSize();
    void setTarmkSize(OAIConfigNodePropertyInteger* tarmk_size);

    OAIConfigNodePropertyInteger* getSegmentCacheSize();
    void setSegmentCacheSize(OAIConfigNodePropertyInteger* segment_cache_size);

    OAIConfigNodePropertyInteger* getStringCacheSize();
    void setStringCacheSize(OAIConfigNodePropertyInteger* string_cache_size);

    OAIConfigNodePropertyInteger* getTemplateCacheSize();
    void setTemplateCacheSize(OAIConfigNodePropertyInteger* template_cache_size);

    OAIConfigNodePropertyInteger* getStringDeduplicationCacheSize();
    void setStringDeduplicationCacheSize(OAIConfigNodePropertyInteger* string_deduplication_cache_size);

    OAIConfigNodePropertyInteger* getTemplateDeduplicationCacheSize();
    void setTemplateDeduplicationCacheSize(OAIConfigNodePropertyInteger* template_deduplication_cache_size);

    OAIConfigNodePropertyInteger* getNodeDeduplicationCacheSize();
    void setNodeDeduplicationCacheSize(OAIConfigNodePropertyInteger* node_deduplication_cache_size);

    OAIConfigNodePropertyBoolean* getPauseCompaction();
    void setPauseCompaction(OAIConfigNodePropertyBoolean* pause_compaction);

    OAIConfigNodePropertyInteger* getCompactionRetryCount();
    void setCompactionRetryCount(OAIConfigNodePropertyInteger* compaction_retry_count);

    OAIConfigNodePropertyInteger* getCompactionForceTimeout();
    void setCompactionForceTimeout(OAIConfigNodePropertyInteger* compaction_force_timeout);

    OAIConfigNodePropertyInteger* getCompactionSizeDeltaEstimation();
    void setCompactionSizeDeltaEstimation(OAIConfigNodePropertyInteger* compaction_size_delta_estimation);

    OAIConfigNodePropertyBoolean* getCompactionDisableEstimation();
    void setCompactionDisableEstimation(OAIConfigNodePropertyBoolean* compaction_disable_estimation);

    OAIConfigNodePropertyInteger* getCompactionRetainedGenerations();
    void setCompactionRetainedGenerations(OAIConfigNodePropertyInteger* compaction_retained_generations);

    OAIConfigNodePropertyInteger* getCompactionMemoryThreshold();
    void setCompactionMemoryThreshold(OAIConfigNodePropertyInteger* compaction_memory_threshold);

    OAIConfigNodePropertyInteger* getCompactionProgressLog();
    void setCompactionProgressLog(OAIConfigNodePropertyInteger* compaction_progress_log);

    OAIConfigNodePropertyBoolean* getStandby();
    void setStandby(OAIConfigNodePropertyBoolean* standby);

    OAIConfigNodePropertyBoolean* getCustomBlobStore();
    void setCustomBlobStore(OAIConfigNodePropertyBoolean* custom_blob_store);

    OAIConfigNodePropertyBoolean* getCustomSegmentStore();
    void setCustomSegmentStore(OAIConfigNodePropertyBoolean* custom_segment_store);

    OAIConfigNodePropertyBoolean* getSplitPersistence();
    void setSplitPersistence(OAIConfigNodePropertyBoolean* split_persistence);

    OAIConfigNodePropertyString* getRepositoryBackupDir();
    void setRepositoryBackupDir(OAIConfigNodePropertyString* repository_backup_dir);

    OAIConfigNodePropertyInteger* getBlobGcMaxAgeInSecs();
    void setBlobGcMaxAgeInSecs(OAIConfigNodePropertyInteger* blob_gc_max_age_in_secs);

    OAIConfigNodePropertyInteger* getBlobTrackSnapshotIntervalInSecs();
    void setBlobTrackSnapshotIntervalInSecs(OAIConfigNodePropertyInteger* blob_track_snapshot_interval_in_secs);

    OAIConfigNodePropertyString* getRole();
    void setRole(OAIConfigNodePropertyString* role);

    OAIConfigNodePropertyBoolean* getRegisterDescriptors();
    void setRegisterDescriptors(OAIConfigNodePropertyBoolean* register_descriptors);

    OAIConfigNodePropertyBoolean* getDispatchChanges();
    void setDispatchChanges(OAIConfigNodePropertyBoolean* dispatch_changes);


    virtual bool isSet() override;

private:
    OAIConfigNodePropertyString* repository_home;
    bool m_repository_home_isSet;

    OAIConfigNodePropertyString* tarmk_mode;
    bool m_tarmk_mode_isSet;

    OAIConfigNodePropertyInteger* tarmk_size;
    bool m_tarmk_size_isSet;

    OAIConfigNodePropertyInteger* segment_cache_size;
    bool m_segment_cache_size_isSet;

    OAIConfigNodePropertyInteger* string_cache_size;
    bool m_string_cache_size_isSet;

    OAIConfigNodePropertyInteger* template_cache_size;
    bool m_template_cache_size_isSet;

    OAIConfigNodePropertyInteger* string_deduplication_cache_size;
    bool m_string_deduplication_cache_size_isSet;

    OAIConfigNodePropertyInteger* template_deduplication_cache_size;
    bool m_template_deduplication_cache_size_isSet;

    OAIConfigNodePropertyInteger* node_deduplication_cache_size;
    bool m_node_deduplication_cache_size_isSet;

    OAIConfigNodePropertyBoolean* pause_compaction;
    bool m_pause_compaction_isSet;

    OAIConfigNodePropertyInteger* compaction_retry_count;
    bool m_compaction_retry_count_isSet;

    OAIConfigNodePropertyInteger* compaction_force_timeout;
    bool m_compaction_force_timeout_isSet;

    OAIConfigNodePropertyInteger* compaction_size_delta_estimation;
    bool m_compaction_size_delta_estimation_isSet;

    OAIConfigNodePropertyBoolean* compaction_disable_estimation;
    bool m_compaction_disable_estimation_isSet;

    OAIConfigNodePropertyInteger* compaction_retained_generations;
    bool m_compaction_retained_generations_isSet;

    OAIConfigNodePropertyInteger* compaction_memory_threshold;
    bool m_compaction_memory_threshold_isSet;

    OAIConfigNodePropertyInteger* compaction_progress_log;
    bool m_compaction_progress_log_isSet;

    OAIConfigNodePropertyBoolean* standby;
    bool m_standby_isSet;

    OAIConfigNodePropertyBoolean* custom_blob_store;
    bool m_custom_blob_store_isSet;

    OAIConfigNodePropertyBoolean* custom_segment_store;
    bool m_custom_segment_store_isSet;

    OAIConfigNodePropertyBoolean* split_persistence;
    bool m_split_persistence_isSet;

    OAIConfigNodePropertyString* repository_backup_dir;
    bool m_repository_backup_dir_isSet;

    OAIConfigNodePropertyInteger* blob_gc_max_age_in_secs;
    bool m_blob_gc_max_age_in_secs_isSet;

    OAIConfigNodePropertyInteger* blob_track_snapshot_interval_in_secs;
    bool m_blob_track_snapshot_interval_in_secs_isSet;

    OAIConfigNodePropertyString* role;
    bool m_role_isSet;

    OAIConfigNodePropertyBoolean* register_descriptors;
    bool m_register_descriptors_isSet;

    OAIConfigNodePropertyBoolean* dispatch_changes;
    bool m_dispatch_changes_isSet;

};

}

#endif /* OAIOrgApacheJackrabbitOakSegmentSegmentNodeStoreFactoryProperties_H_ */
