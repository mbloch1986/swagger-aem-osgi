/**
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 3.2.1-SNAPSHOT.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */



#include "ComAdobeGraniteUiClientlibsImplHtmlLibraryManagerImplProperties.h"

#include <string>
#include <sstream>
#include <boost/property_tree/ptree.hpp>
#include <boost/property_tree/json_parser.hpp>

using boost::property_tree::ptree;
using boost::property_tree::read_json;
using boost::property_tree::write_json;

namespace org {
namespace openapitools {
namespace server {
namespace model {

ComAdobeGraniteUiClientlibsImplHtmlLibraryManagerImplProperties::ComAdobeGraniteUiClientlibsImplHtmlLibraryManagerImplProperties()
{
    
}

ComAdobeGraniteUiClientlibsImplHtmlLibraryManagerImplProperties::~ComAdobeGraniteUiClientlibsImplHtmlLibraryManagerImplProperties()
{
}

std::string ComAdobeGraniteUiClientlibsImplHtmlLibraryManagerImplProperties::toJsonString()
{
	std::stringstream ss;
	ptree pt;
	write_json(ss, pt, false);
	return ss.str();
}

void ComAdobeGraniteUiClientlibsImplHtmlLibraryManagerImplProperties::fromJsonString(std::string const& jsonString)
{
	std::stringstream ss(jsonString);
	ptree pt;
	read_json(ss,pt);
}

std::shared_ptr<ConfigNodePropertyBoolean> ComAdobeGraniteUiClientlibsImplHtmlLibraryManagerImplProperties::getHtmllibmanagerTiming() const
{
    return m_Htmllibmanager_timing;
}
void ComAdobeGraniteUiClientlibsImplHtmlLibraryManagerImplProperties::setHtmllibmanagerTiming(std::shared_ptr<ConfigNodePropertyBoolean> value)
{
    m_Htmllibmanager_timing = value;
}
std::shared_ptr<ConfigNodePropertyString> ComAdobeGraniteUiClientlibsImplHtmlLibraryManagerImplProperties::getHtmllibmanagerDebugInitJs() const
{
    return m_Htmllibmanager_debug_init_js;
}
void ComAdobeGraniteUiClientlibsImplHtmlLibraryManagerImplProperties::setHtmllibmanagerDebugInitJs(std::shared_ptr<ConfigNodePropertyString> value)
{
    m_Htmllibmanager_debug_init_js = value;
}
std::shared_ptr<ConfigNodePropertyBoolean> ComAdobeGraniteUiClientlibsImplHtmlLibraryManagerImplProperties::getHtmllibmanagerMinify() const
{
    return m_Htmllibmanager_minify;
}
void ComAdobeGraniteUiClientlibsImplHtmlLibraryManagerImplProperties::setHtmllibmanagerMinify(std::shared_ptr<ConfigNodePropertyBoolean> value)
{
    m_Htmllibmanager_minify = value;
}
std::shared_ptr<ConfigNodePropertyBoolean> ComAdobeGraniteUiClientlibsImplHtmlLibraryManagerImplProperties::getHtmllibmanagerDebug() const
{
    return m_Htmllibmanager_debug;
}
void ComAdobeGraniteUiClientlibsImplHtmlLibraryManagerImplProperties::setHtmllibmanagerDebug(std::shared_ptr<ConfigNodePropertyBoolean> value)
{
    m_Htmllibmanager_debug = value;
}
std::shared_ptr<ConfigNodePropertyBoolean> ComAdobeGraniteUiClientlibsImplHtmlLibraryManagerImplProperties::getHtmllibmanagerGzip() const
{
    return m_Htmllibmanager_gzip;
}
void ComAdobeGraniteUiClientlibsImplHtmlLibraryManagerImplProperties::setHtmllibmanagerGzip(std::shared_ptr<ConfigNodePropertyBoolean> value)
{
    m_Htmllibmanager_gzip = value;
}
std::shared_ptr<ConfigNodePropertyInteger> ComAdobeGraniteUiClientlibsImplHtmlLibraryManagerImplProperties::getHtmllibmanagerMaxDataUriSize() const
{
    return m_Htmllibmanager_maxDataUriSize;
}
void ComAdobeGraniteUiClientlibsImplHtmlLibraryManagerImplProperties::setHtmllibmanagerMaxDataUriSize(std::shared_ptr<ConfigNodePropertyInteger> value)
{
    m_Htmllibmanager_maxDataUriSize = value;
}
std::shared_ptr<ConfigNodePropertyInteger> ComAdobeGraniteUiClientlibsImplHtmlLibraryManagerImplProperties::getHtmllibmanagerMaxage() const
{
    return m_Htmllibmanager_maxage;
}
void ComAdobeGraniteUiClientlibsImplHtmlLibraryManagerImplProperties::setHtmllibmanagerMaxage(std::shared_ptr<ConfigNodePropertyInteger> value)
{
    m_Htmllibmanager_maxage = value;
}
std::shared_ptr<ConfigNodePropertyBoolean> ComAdobeGraniteUiClientlibsImplHtmlLibraryManagerImplProperties::getHtmllibmanagerForceCQUrlInfo() const
{
    return m_Htmllibmanager_forceCQUrlInfo;
}
void ComAdobeGraniteUiClientlibsImplHtmlLibraryManagerImplProperties::setHtmllibmanagerForceCQUrlInfo(std::shared_ptr<ConfigNodePropertyBoolean> value)
{
    m_Htmllibmanager_forceCQUrlInfo = value;
}
std::shared_ptr<ConfigNodePropertyString> ComAdobeGraniteUiClientlibsImplHtmlLibraryManagerImplProperties::getHtmllibmanagerDefaultthemename() const
{
    return m_Htmllibmanager_defaultthemename;
}
void ComAdobeGraniteUiClientlibsImplHtmlLibraryManagerImplProperties::setHtmllibmanagerDefaultthemename(std::shared_ptr<ConfigNodePropertyString> value)
{
    m_Htmllibmanager_defaultthemename = value;
}
std::shared_ptr<ConfigNodePropertyString> ComAdobeGraniteUiClientlibsImplHtmlLibraryManagerImplProperties::getHtmllibmanagerDefaultuserthemename() const
{
    return m_Htmllibmanager_defaultuserthemename;
}
void ComAdobeGraniteUiClientlibsImplHtmlLibraryManagerImplProperties::setHtmllibmanagerDefaultuserthemename(std::shared_ptr<ConfigNodePropertyString> value)
{
    m_Htmllibmanager_defaultuserthemename = value;
}
std::shared_ptr<ConfigNodePropertyString> ComAdobeGraniteUiClientlibsImplHtmlLibraryManagerImplProperties::getHtmllibmanagerClientmanager() const
{
    return m_Htmllibmanager_clientmanager;
}
void ComAdobeGraniteUiClientlibsImplHtmlLibraryManagerImplProperties::setHtmllibmanagerClientmanager(std::shared_ptr<ConfigNodePropertyString> value)
{
    m_Htmllibmanager_clientmanager = value;
}
std::shared_ptr<ConfigNodePropertyArray> ComAdobeGraniteUiClientlibsImplHtmlLibraryManagerImplProperties::getHtmllibmanagerPathList() const
{
    return m_Htmllibmanager_path_list;
}
void ComAdobeGraniteUiClientlibsImplHtmlLibraryManagerImplProperties::setHtmllibmanagerPathList(std::shared_ptr<ConfigNodePropertyArray> value)
{
    m_Htmllibmanager_path_list = value;
}
std::shared_ptr<ConfigNodePropertyArray> ComAdobeGraniteUiClientlibsImplHtmlLibraryManagerImplProperties::getHtmllibmanagerExcludedPathList() const
{
    return m_Htmllibmanager_excluded_path_list;
}
void ComAdobeGraniteUiClientlibsImplHtmlLibraryManagerImplProperties::setHtmllibmanagerExcludedPathList(std::shared_ptr<ConfigNodePropertyArray> value)
{
    m_Htmllibmanager_excluded_path_list = value;
}
std::shared_ptr<ConfigNodePropertyArray> ComAdobeGraniteUiClientlibsImplHtmlLibraryManagerImplProperties::getHtmllibmanagerProcessorJs() const
{
    return m_Htmllibmanager_processor_js;
}
void ComAdobeGraniteUiClientlibsImplHtmlLibraryManagerImplProperties::setHtmllibmanagerProcessorJs(std::shared_ptr<ConfigNodePropertyArray> value)
{
    m_Htmllibmanager_processor_js = value;
}
std::shared_ptr<ConfigNodePropertyArray> ComAdobeGraniteUiClientlibsImplHtmlLibraryManagerImplProperties::getHtmllibmanagerProcessorCss() const
{
    return m_Htmllibmanager_processor_css;
}
void ComAdobeGraniteUiClientlibsImplHtmlLibraryManagerImplProperties::setHtmllibmanagerProcessorCss(std::shared_ptr<ConfigNodePropertyArray> value)
{
    m_Htmllibmanager_processor_css = value;
}
std::shared_ptr<ConfigNodePropertyArray> ComAdobeGraniteUiClientlibsImplHtmlLibraryManagerImplProperties::getHtmllibmanagerLongcachePatterns() const
{
    return m_Htmllibmanager_longcache_patterns;
}
void ComAdobeGraniteUiClientlibsImplHtmlLibraryManagerImplProperties::setHtmllibmanagerLongcachePatterns(std::shared_ptr<ConfigNodePropertyArray> value)
{
    m_Htmllibmanager_longcache_patterns = value;
}
std::shared_ptr<ConfigNodePropertyString> ComAdobeGraniteUiClientlibsImplHtmlLibraryManagerImplProperties::getHtmllibmanagerLongcacheFormat() const
{
    return m_Htmllibmanager_longcache_format;
}
void ComAdobeGraniteUiClientlibsImplHtmlLibraryManagerImplProperties::setHtmllibmanagerLongcacheFormat(std::shared_ptr<ConfigNodePropertyString> value)
{
    m_Htmllibmanager_longcache_format = value;
}
std::shared_ptr<ConfigNodePropertyBoolean> ComAdobeGraniteUiClientlibsImplHtmlLibraryManagerImplProperties::getHtmllibmanagerUseFileSystemOutputCache() const
{
    return m_Htmllibmanager_useFileSystemOutputCache;
}
void ComAdobeGraniteUiClientlibsImplHtmlLibraryManagerImplProperties::setHtmllibmanagerUseFileSystemOutputCache(std::shared_ptr<ConfigNodePropertyBoolean> value)
{
    m_Htmllibmanager_useFileSystemOutputCache = value;
}
std::shared_ptr<ConfigNodePropertyString> ComAdobeGraniteUiClientlibsImplHtmlLibraryManagerImplProperties::getHtmllibmanagerFileSystemOutputCacheLocation() const
{
    return m_Htmllibmanager_fileSystemOutputCacheLocation;
}
void ComAdobeGraniteUiClientlibsImplHtmlLibraryManagerImplProperties::setHtmllibmanagerFileSystemOutputCacheLocation(std::shared_ptr<ConfigNodePropertyString> value)
{
    m_Htmllibmanager_fileSystemOutputCacheLocation = value;
}
std::shared_ptr<ConfigNodePropertyArray> ComAdobeGraniteUiClientlibsImplHtmlLibraryManagerImplProperties::getHtmllibmanagerDisableReplacement() const
{
    return m_Htmllibmanager_disable_replacement;
}
void ComAdobeGraniteUiClientlibsImplHtmlLibraryManagerImplProperties::setHtmllibmanagerDisableReplacement(std::shared_ptr<ConfigNodePropertyArray> value)
{
    m_Htmllibmanager_disable_replacement = value;
}

}
}
}
}

