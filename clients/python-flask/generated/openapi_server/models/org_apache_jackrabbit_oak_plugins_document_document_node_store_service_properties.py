# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server.models.config_node_property_array import ConfigNodePropertyArray  # noqa: F401,E501
from openapi_server.models.config_node_property_boolean import ConfigNodePropertyBoolean  # noqa: F401,E501
from openapi_server.models.config_node_property_drop_down import ConfigNodePropertyDropDown  # noqa: F401,E501
from openapi_server.models.config_node_property_integer import ConfigNodePropertyInteger  # noqa: F401,E501
from openapi_server.models.config_node_property_string import ConfigNodePropertyString  # noqa: F401,E501
from openapi_server import util


class OrgApacheJackrabbitOakPluginsDocumentDocumentNodeStoreServiceProperties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, mongouri: ConfigNodePropertyString=None, db: ConfigNodePropertyString=None, socket_keep_alive: ConfigNodePropertyBoolean=None, cache: ConfigNodePropertyInteger=None, node_cache_percentage: ConfigNodePropertyInteger=None, prev_doc_cache_percentage: ConfigNodePropertyInteger=None, children_cache_percentage: ConfigNodePropertyInteger=None, diff_cache_percentage: ConfigNodePropertyInteger=None, cache_segment_count: ConfigNodePropertyInteger=None, cache_stack_move_distance: ConfigNodePropertyInteger=None, blob_cache_size: ConfigNodePropertyInteger=None, persistent_cache: ConfigNodePropertyString=None, journal_cache: ConfigNodePropertyString=None, custom_blob_store: ConfigNodePropertyBoolean=None, journal_gc_interval: ConfigNodePropertyInteger=None, journal_gc_max_age: ConfigNodePropertyInteger=None, prefetch_external_changes: ConfigNodePropertyBoolean=None, role: ConfigNodePropertyString=None, version_gc_max_age_in_secs: ConfigNodePropertyInteger=None, version_gc_expression: ConfigNodePropertyString=None, version_gc_time_limit_in_secs: ConfigNodePropertyInteger=None, blob_gc_max_age_in_secs: ConfigNodePropertyInteger=None, blob_track_snapshot_interval_in_secs: ConfigNodePropertyInteger=None, repository_home: ConfigNodePropertyString=None, max_replication_lag_in_secs: ConfigNodePropertyInteger=None, document_store_type: ConfigNodePropertyDropDown=None, bundling_disabled: ConfigNodePropertyBoolean=None, update_limit: ConfigNodePropertyInteger=None, persistent_cache_includes: ConfigNodePropertyArray=None, lease_check_mode: ConfigNodePropertyDropDown=None):  # noqa: E501
        """OrgApacheJackrabbitOakPluginsDocumentDocumentNodeStoreServiceProperties - a model defined in OpenAPI

        :param mongouri: The mongouri of this OrgApacheJackrabbitOakPluginsDocumentDocumentNodeStoreServiceProperties.  # noqa: E501
        :type mongouri: ConfigNodePropertyString
        :param db: The db of this OrgApacheJackrabbitOakPluginsDocumentDocumentNodeStoreServiceProperties.  # noqa: E501
        :type db: ConfigNodePropertyString
        :param socket_keep_alive: The socket_keep_alive of this OrgApacheJackrabbitOakPluginsDocumentDocumentNodeStoreServiceProperties.  # noqa: E501
        :type socket_keep_alive: ConfigNodePropertyBoolean
        :param cache: The cache of this OrgApacheJackrabbitOakPluginsDocumentDocumentNodeStoreServiceProperties.  # noqa: E501
        :type cache: ConfigNodePropertyInteger
        :param node_cache_percentage: The node_cache_percentage of this OrgApacheJackrabbitOakPluginsDocumentDocumentNodeStoreServiceProperties.  # noqa: E501
        :type node_cache_percentage: ConfigNodePropertyInteger
        :param prev_doc_cache_percentage: The prev_doc_cache_percentage of this OrgApacheJackrabbitOakPluginsDocumentDocumentNodeStoreServiceProperties.  # noqa: E501
        :type prev_doc_cache_percentage: ConfigNodePropertyInteger
        :param children_cache_percentage: The children_cache_percentage of this OrgApacheJackrabbitOakPluginsDocumentDocumentNodeStoreServiceProperties.  # noqa: E501
        :type children_cache_percentage: ConfigNodePropertyInteger
        :param diff_cache_percentage: The diff_cache_percentage of this OrgApacheJackrabbitOakPluginsDocumentDocumentNodeStoreServiceProperties.  # noqa: E501
        :type diff_cache_percentage: ConfigNodePropertyInteger
        :param cache_segment_count: The cache_segment_count of this OrgApacheJackrabbitOakPluginsDocumentDocumentNodeStoreServiceProperties.  # noqa: E501
        :type cache_segment_count: ConfigNodePropertyInteger
        :param cache_stack_move_distance: The cache_stack_move_distance of this OrgApacheJackrabbitOakPluginsDocumentDocumentNodeStoreServiceProperties.  # noqa: E501
        :type cache_stack_move_distance: ConfigNodePropertyInteger
        :param blob_cache_size: The blob_cache_size of this OrgApacheJackrabbitOakPluginsDocumentDocumentNodeStoreServiceProperties.  # noqa: E501
        :type blob_cache_size: ConfigNodePropertyInteger
        :param persistent_cache: The persistent_cache of this OrgApacheJackrabbitOakPluginsDocumentDocumentNodeStoreServiceProperties.  # noqa: E501
        :type persistent_cache: ConfigNodePropertyString
        :param journal_cache: The journal_cache of this OrgApacheJackrabbitOakPluginsDocumentDocumentNodeStoreServiceProperties.  # noqa: E501
        :type journal_cache: ConfigNodePropertyString
        :param custom_blob_store: The custom_blob_store of this OrgApacheJackrabbitOakPluginsDocumentDocumentNodeStoreServiceProperties.  # noqa: E501
        :type custom_blob_store: ConfigNodePropertyBoolean
        :param journal_gc_interval: The journal_gc_interval of this OrgApacheJackrabbitOakPluginsDocumentDocumentNodeStoreServiceProperties.  # noqa: E501
        :type journal_gc_interval: ConfigNodePropertyInteger
        :param journal_gc_max_age: The journal_gc_max_age of this OrgApacheJackrabbitOakPluginsDocumentDocumentNodeStoreServiceProperties.  # noqa: E501
        :type journal_gc_max_age: ConfigNodePropertyInteger
        :param prefetch_external_changes: The prefetch_external_changes of this OrgApacheJackrabbitOakPluginsDocumentDocumentNodeStoreServiceProperties.  # noqa: E501
        :type prefetch_external_changes: ConfigNodePropertyBoolean
        :param role: The role of this OrgApacheJackrabbitOakPluginsDocumentDocumentNodeStoreServiceProperties.  # noqa: E501
        :type role: ConfigNodePropertyString
        :param version_gc_max_age_in_secs: The version_gc_max_age_in_secs of this OrgApacheJackrabbitOakPluginsDocumentDocumentNodeStoreServiceProperties.  # noqa: E501
        :type version_gc_max_age_in_secs: ConfigNodePropertyInteger
        :param version_gc_expression: The version_gc_expression of this OrgApacheJackrabbitOakPluginsDocumentDocumentNodeStoreServiceProperties.  # noqa: E501
        :type version_gc_expression: ConfigNodePropertyString
        :param version_gc_time_limit_in_secs: The version_gc_time_limit_in_secs of this OrgApacheJackrabbitOakPluginsDocumentDocumentNodeStoreServiceProperties.  # noqa: E501
        :type version_gc_time_limit_in_secs: ConfigNodePropertyInteger
        :param blob_gc_max_age_in_secs: The blob_gc_max_age_in_secs of this OrgApacheJackrabbitOakPluginsDocumentDocumentNodeStoreServiceProperties.  # noqa: E501
        :type blob_gc_max_age_in_secs: ConfigNodePropertyInteger
        :param blob_track_snapshot_interval_in_secs: The blob_track_snapshot_interval_in_secs of this OrgApacheJackrabbitOakPluginsDocumentDocumentNodeStoreServiceProperties.  # noqa: E501
        :type blob_track_snapshot_interval_in_secs: ConfigNodePropertyInteger
        :param repository_home: The repository_home of this OrgApacheJackrabbitOakPluginsDocumentDocumentNodeStoreServiceProperties.  # noqa: E501
        :type repository_home: ConfigNodePropertyString
        :param max_replication_lag_in_secs: The max_replication_lag_in_secs of this OrgApacheJackrabbitOakPluginsDocumentDocumentNodeStoreServiceProperties.  # noqa: E501
        :type max_replication_lag_in_secs: ConfigNodePropertyInteger
        :param document_store_type: The document_store_type of this OrgApacheJackrabbitOakPluginsDocumentDocumentNodeStoreServiceProperties.  # noqa: E501
        :type document_store_type: ConfigNodePropertyDropDown
        :param bundling_disabled: The bundling_disabled of this OrgApacheJackrabbitOakPluginsDocumentDocumentNodeStoreServiceProperties.  # noqa: E501
        :type bundling_disabled: ConfigNodePropertyBoolean
        :param update_limit: The update_limit of this OrgApacheJackrabbitOakPluginsDocumentDocumentNodeStoreServiceProperties.  # noqa: E501
        :type update_limit: ConfigNodePropertyInteger
        :param persistent_cache_includes: The persistent_cache_includes of this OrgApacheJackrabbitOakPluginsDocumentDocumentNodeStoreServiceProperties.  # noqa: E501
        :type persistent_cache_includes: ConfigNodePropertyArray
        :param lease_check_mode: The lease_check_mode of this OrgApacheJackrabbitOakPluginsDocumentDocumentNodeStoreServiceProperties.  # noqa: E501
        :type lease_check_mode: ConfigNodePropertyDropDown
        """
        self.openapi_types = {
            'mongouri': ConfigNodePropertyString,
            'db': ConfigNodePropertyString,
            'socket_keep_alive': ConfigNodePropertyBoolean,
            'cache': ConfigNodePropertyInteger,
            'node_cache_percentage': ConfigNodePropertyInteger,
            'prev_doc_cache_percentage': ConfigNodePropertyInteger,
            'children_cache_percentage': ConfigNodePropertyInteger,
            'diff_cache_percentage': ConfigNodePropertyInteger,
            'cache_segment_count': ConfigNodePropertyInteger,
            'cache_stack_move_distance': ConfigNodePropertyInteger,
            'blob_cache_size': ConfigNodePropertyInteger,
            'persistent_cache': ConfigNodePropertyString,
            'journal_cache': ConfigNodePropertyString,
            'custom_blob_store': ConfigNodePropertyBoolean,
            'journal_gc_interval': ConfigNodePropertyInteger,
            'journal_gc_max_age': ConfigNodePropertyInteger,
            'prefetch_external_changes': ConfigNodePropertyBoolean,
            'role': ConfigNodePropertyString,
            'version_gc_max_age_in_secs': ConfigNodePropertyInteger,
            'version_gc_expression': ConfigNodePropertyString,
            'version_gc_time_limit_in_secs': ConfigNodePropertyInteger,
            'blob_gc_max_age_in_secs': ConfigNodePropertyInteger,
            'blob_track_snapshot_interval_in_secs': ConfigNodePropertyInteger,
            'repository_home': ConfigNodePropertyString,
            'max_replication_lag_in_secs': ConfigNodePropertyInteger,
            'document_store_type': ConfigNodePropertyDropDown,
            'bundling_disabled': ConfigNodePropertyBoolean,
            'update_limit': ConfigNodePropertyInteger,
            'persistent_cache_includes': ConfigNodePropertyArray,
            'lease_check_mode': ConfigNodePropertyDropDown
        }

        self.attribute_map = {
            'mongouri': 'mongouri',
            'db': 'db',
            'socket_keep_alive': 'socketKeepAlive',
            'cache': 'cache',
            'node_cache_percentage': 'nodeCachePercentage',
            'prev_doc_cache_percentage': 'prevDocCachePercentage',
            'children_cache_percentage': 'childrenCachePercentage',
            'diff_cache_percentage': 'diffCachePercentage',
            'cache_segment_count': 'cacheSegmentCount',
            'cache_stack_move_distance': 'cacheStackMoveDistance',
            'blob_cache_size': 'blobCacheSize',
            'persistent_cache': 'persistentCache',
            'journal_cache': 'journalCache',
            'custom_blob_store': 'customBlobStore',
            'journal_gc_interval': 'journalGCInterval',
            'journal_gc_max_age': 'journalGCMaxAge',
            'prefetch_external_changes': 'prefetchExternalChanges',
            'role': 'role',
            'version_gc_max_age_in_secs': 'versionGcMaxAgeInSecs',
            'version_gc_expression': 'versionGCExpression',
            'version_gc_time_limit_in_secs': 'versionGCTimeLimitInSecs',
            'blob_gc_max_age_in_secs': 'blobGcMaxAgeInSecs',
            'blob_track_snapshot_interval_in_secs': 'blobTrackSnapshotIntervalInSecs',
            'repository_home': 'repository.home',
            'max_replication_lag_in_secs': 'maxReplicationLagInSecs',
            'document_store_type': 'documentStoreType',
            'bundling_disabled': 'bundlingDisabled',
            'update_limit': 'updateLimit',
            'persistent_cache_includes': 'persistentCacheIncludes',
            'lease_check_mode': 'leaseCheckMode'
        }

        self._mongouri = mongouri
        self._db = db
        self._socket_keep_alive = socket_keep_alive
        self._cache = cache
        self._node_cache_percentage = node_cache_percentage
        self._prev_doc_cache_percentage = prev_doc_cache_percentage
        self._children_cache_percentage = children_cache_percentage
        self._diff_cache_percentage = diff_cache_percentage
        self._cache_segment_count = cache_segment_count
        self._cache_stack_move_distance = cache_stack_move_distance
        self._blob_cache_size = blob_cache_size
        self._persistent_cache = persistent_cache
        self._journal_cache = journal_cache
        self._custom_blob_store = custom_blob_store
        self._journal_gc_interval = journal_gc_interval
        self._journal_gc_max_age = journal_gc_max_age
        self._prefetch_external_changes = prefetch_external_changes
        self._role = role
        self._version_gc_max_age_in_secs = version_gc_max_age_in_secs
        self._version_gc_expression = version_gc_expression
        self._version_gc_time_limit_in_secs = version_gc_time_limit_in_secs
        self._blob_gc_max_age_in_secs = blob_gc_max_age_in_secs
        self._blob_track_snapshot_interval_in_secs = blob_track_snapshot_interval_in_secs
        self._repository_home = repository_home
        self._max_replication_lag_in_secs = max_replication_lag_in_secs
        self._document_store_type = document_store_type
        self._bundling_disabled = bundling_disabled
        self._update_limit = update_limit
        self._persistent_cache_includes = persistent_cache_includes
        self._lease_check_mode = lease_check_mode

    @classmethod
    def from_dict(cls, dikt) -> 'OrgApacheJackrabbitOakPluginsDocumentDocumentNodeStoreServiceProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The orgApacheJackrabbitOakPluginsDocumentDocumentNodeStoreServiceProperties of this OrgApacheJackrabbitOakPluginsDocumentDocumentNodeStoreServiceProperties.  # noqa: E501
        :rtype: OrgApacheJackrabbitOakPluginsDocumentDocumentNodeStoreServiceProperties
        """
        return util.deserialize_model(dikt, cls)

    @property
    def mongouri(self) -> ConfigNodePropertyString:
        """Gets the mongouri of this OrgApacheJackrabbitOakPluginsDocumentDocumentNodeStoreServiceProperties.


        :return: The mongouri of this OrgApacheJackrabbitOakPluginsDocumentDocumentNodeStoreServiceProperties.
        :rtype: ConfigNodePropertyString
        """
        return self._mongouri

    @mongouri.setter
    def mongouri(self, mongouri: ConfigNodePropertyString):
        """Sets the mongouri of this OrgApacheJackrabbitOakPluginsDocumentDocumentNodeStoreServiceProperties.


        :param mongouri: The mongouri of this OrgApacheJackrabbitOakPluginsDocumentDocumentNodeStoreServiceProperties.
        :type mongouri: ConfigNodePropertyString
        """

        self._mongouri = mongouri

    @property
    def db(self) -> ConfigNodePropertyString:
        """Gets the db of this OrgApacheJackrabbitOakPluginsDocumentDocumentNodeStoreServiceProperties.


        :return: The db of this OrgApacheJackrabbitOakPluginsDocumentDocumentNodeStoreServiceProperties.
        :rtype: ConfigNodePropertyString
        """
        return self._db

    @db.setter
    def db(self, db: ConfigNodePropertyString):
        """Sets the db of this OrgApacheJackrabbitOakPluginsDocumentDocumentNodeStoreServiceProperties.


        :param db: The db of this OrgApacheJackrabbitOakPluginsDocumentDocumentNodeStoreServiceProperties.
        :type db: ConfigNodePropertyString
        """

        self._db = db

    @property
    def socket_keep_alive(self) -> ConfigNodePropertyBoolean:
        """Gets the socket_keep_alive of this OrgApacheJackrabbitOakPluginsDocumentDocumentNodeStoreServiceProperties.


        :return: The socket_keep_alive of this OrgApacheJackrabbitOakPluginsDocumentDocumentNodeStoreServiceProperties.
        :rtype: ConfigNodePropertyBoolean
        """
        return self._socket_keep_alive

    @socket_keep_alive.setter
    def socket_keep_alive(self, socket_keep_alive: ConfigNodePropertyBoolean):
        """Sets the socket_keep_alive of this OrgApacheJackrabbitOakPluginsDocumentDocumentNodeStoreServiceProperties.


        :param socket_keep_alive: The socket_keep_alive of this OrgApacheJackrabbitOakPluginsDocumentDocumentNodeStoreServiceProperties.
        :type socket_keep_alive: ConfigNodePropertyBoolean
        """

        self._socket_keep_alive = socket_keep_alive

    @property
    def cache(self) -> ConfigNodePropertyInteger:
        """Gets the cache of this OrgApacheJackrabbitOakPluginsDocumentDocumentNodeStoreServiceProperties.


        :return: The cache of this OrgApacheJackrabbitOakPluginsDocumentDocumentNodeStoreServiceProperties.
        :rtype: ConfigNodePropertyInteger
        """
        return self._cache

    @cache.setter
    def cache(self, cache: ConfigNodePropertyInteger):
        """Sets the cache of this OrgApacheJackrabbitOakPluginsDocumentDocumentNodeStoreServiceProperties.


        :param cache: The cache of this OrgApacheJackrabbitOakPluginsDocumentDocumentNodeStoreServiceProperties.
        :type cache: ConfigNodePropertyInteger
        """

        self._cache = cache

    @property
    def node_cache_percentage(self) -> ConfigNodePropertyInteger:
        """Gets the node_cache_percentage of this OrgApacheJackrabbitOakPluginsDocumentDocumentNodeStoreServiceProperties.


        :return: The node_cache_percentage of this OrgApacheJackrabbitOakPluginsDocumentDocumentNodeStoreServiceProperties.
        :rtype: ConfigNodePropertyInteger
        """
        return self._node_cache_percentage

    @node_cache_percentage.setter
    def node_cache_percentage(self, node_cache_percentage: ConfigNodePropertyInteger):
        """Sets the node_cache_percentage of this OrgApacheJackrabbitOakPluginsDocumentDocumentNodeStoreServiceProperties.


        :param node_cache_percentage: The node_cache_percentage of this OrgApacheJackrabbitOakPluginsDocumentDocumentNodeStoreServiceProperties.
        :type node_cache_percentage: ConfigNodePropertyInteger
        """

        self._node_cache_percentage = node_cache_percentage

    @property
    def prev_doc_cache_percentage(self) -> ConfigNodePropertyInteger:
        """Gets the prev_doc_cache_percentage of this OrgApacheJackrabbitOakPluginsDocumentDocumentNodeStoreServiceProperties.


        :return: The prev_doc_cache_percentage of this OrgApacheJackrabbitOakPluginsDocumentDocumentNodeStoreServiceProperties.
        :rtype: ConfigNodePropertyInteger
        """
        return self._prev_doc_cache_percentage

    @prev_doc_cache_percentage.setter
    def prev_doc_cache_percentage(self, prev_doc_cache_percentage: ConfigNodePropertyInteger):
        """Sets the prev_doc_cache_percentage of this OrgApacheJackrabbitOakPluginsDocumentDocumentNodeStoreServiceProperties.


        :param prev_doc_cache_percentage: The prev_doc_cache_percentage of this OrgApacheJackrabbitOakPluginsDocumentDocumentNodeStoreServiceProperties.
        :type prev_doc_cache_percentage: ConfigNodePropertyInteger
        """

        self._prev_doc_cache_percentage = prev_doc_cache_percentage

    @property
    def children_cache_percentage(self) -> ConfigNodePropertyInteger:
        """Gets the children_cache_percentage of this OrgApacheJackrabbitOakPluginsDocumentDocumentNodeStoreServiceProperties.


        :return: The children_cache_percentage of this OrgApacheJackrabbitOakPluginsDocumentDocumentNodeStoreServiceProperties.
        :rtype: ConfigNodePropertyInteger
        """
        return self._children_cache_percentage

    @children_cache_percentage.setter
    def children_cache_percentage(self, children_cache_percentage: ConfigNodePropertyInteger):
        """Sets the children_cache_percentage of this OrgApacheJackrabbitOakPluginsDocumentDocumentNodeStoreServiceProperties.


        :param children_cache_percentage: The children_cache_percentage of this OrgApacheJackrabbitOakPluginsDocumentDocumentNodeStoreServiceProperties.
        :type children_cache_percentage: ConfigNodePropertyInteger
        """

        self._children_cache_percentage = children_cache_percentage

    @property
    def diff_cache_percentage(self) -> ConfigNodePropertyInteger:
        """Gets the diff_cache_percentage of this OrgApacheJackrabbitOakPluginsDocumentDocumentNodeStoreServiceProperties.


        :return: The diff_cache_percentage of this OrgApacheJackrabbitOakPluginsDocumentDocumentNodeStoreServiceProperties.
        :rtype: ConfigNodePropertyInteger
        """
        return self._diff_cache_percentage

    @diff_cache_percentage.setter
    def diff_cache_percentage(self, diff_cache_percentage: ConfigNodePropertyInteger):
        """Sets the diff_cache_percentage of this OrgApacheJackrabbitOakPluginsDocumentDocumentNodeStoreServiceProperties.


        :param diff_cache_percentage: The diff_cache_percentage of this OrgApacheJackrabbitOakPluginsDocumentDocumentNodeStoreServiceProperties.
        :type diff_cache_percentage: ConfigNodePropertyInteger
        """

        self._diff_cache_percentage = diff_cache_percentage

    @property
    def cache_segment_count(self) -> ConfigNodePropertyInteger:
        """Gets the cache_segment_count of this OrgApacheJackrabbitOakPluginsDocumentDocumentNodeStoreServiceProperties.


        :return: The cache_segment_count of this OrgApacheJackrabbitOakPluginsDocumentDocumentNodeStoreServiceProperties.
        :rtype: ConfigNodePropertyInteger
        """
        return self._cache_segment_count

    @cache_segment_count.setter
    def cache_segment_count(self, cache_segment_count: ConfigNodePropertyInteger):
        """Sets the cache_segment_count of this OrgApacheJackrabbitOakPluginsDocumentDocumentNodeStoreServiceProperties.


        :param cache_segment_count: The cache_segment_count of this OrgApacheJackrabbitOakPluginsDocumentDocumentNodeStoreServiceProperties.
        :type cache_segment_count: ConfigNodePropertyInteger
        """

        self._cache_segment_count = cache_segment_count

    @property
    def cache_stack_move_distance(self) -> ConfigNodePropertyInteger:
        """Gets the cache_stack_move_distance of this OrgApacheJackrabbitOakPluginsDocumentDocumentNodeStoreServiceProperties.


        :return: The cache_stack_move_distance of this OrgApacheJackrabbitOakPluginsDocumentDocumentNodeStoreServiceProperties.
        :rtype: ConfigNodePropertyInteger
        """
        return self._cache_stack_move_distance

    @cache_stack_move_distance.setter
    def cache_stack_move_distance(self, cache_stack_move_distance: ConfigNodePropertyInteger):
        """Sets the cache_stack_move_distance of this OrgApacheJackrabbitOakPluginsDocumentDocumentNodeStoreServiceProperties.


        :param cache_stack_move_distance: The cache_stack_move_distance of this OrgApacheJackrabbitOakPluginsDocumentDocumentNodeStoreServiceProperties.
        :type cache_stack_move_distance: ConfigNodePropertyInteger
        """

        self._cache_stack_move_distance = cache_stack_move_distance

    @property
    def blob_cache_size(self) -> ConfigNodePropertyInteger:
        """Gets the blob_cache_size of this OrgApacheJackrabbitOakPluginsDocumentDocumentNodeStoreServiceProperties.


        :return: The blob_cache_size of this OrgApacheJackrabbitOakPluginsDocumentDocumentNodeStoreServiceProperties.
        :rtype: ConfigNodePropertyInteger
        """
        return self._blob_cache_size

    @blob_cache_size.setter
    def blob_cache_size(self, blob_cache_size: ConfigNodePropertyInteger):
        """Sets the blob_cache_size of this OrgApacheJackrabbitOakPluginsDocumentDocumentNodeStoreServiceProperties.


        :param blob_cache_size: The blob_cache_size of this OrgApacheJackrabbitOakPluginsDocumentDocumentNodeStoreServiceProperties.
        :type blob_cache_size: ConfigNodePropertyInteger
        """

        self._blob_cache_size = blob_cache_size

    @property
    def persistent_cache(self) -> ConfigNodePropertyString:
        """Gets the persistent_cache of this OrgApacheJackrabbitOakPluginsDocumentDocumentNodeStoreServiceProperties.


        :return: The persistent_cache of this OrgApacheJackrabbitOakPluginsDocumentDocumentNodeStoreServiceProperties.
        :rtype: ConfigNodePropertyString
        """
        return self._persistent_cache

    @persistent_cache.setter
    def persistent_cache(self, persistent_cache: ConfigNodePropertyString):
        """Sets the persistent_cache of this OrgApacheJackrabbitOakPluginsDocumentDocumentNodeStoreServiceProperties.


        :param persistent_cache: The persistent_cache of this OrgApacheJackrabbitOakPluginsDocumentDocumentNodeStoreServiceProperties.
        :type persistent_cache: ConfigNodePropertyString
        """

        self._persistent_cache = persistent_cache

    @property
    def journal_cache(self) -> ConfigNodePropertyString:
        """Gets the journal_cache of this OrgApacheJackrabbitOakPluginsDocumentDocumentNodeStoreServiceProperties.


        :return: The journal_cache of this OrgApacheJackrabbitOakPluginsDocumentDocumentNodeStoreServiceProperties.
        :rtype: ConfigNodePropertyString
        """
        return self._journal_cache

    @journal_cache.setter
    def journal_cache(self, journal_cache: ConfigNodePropertyString):
        """Sets the journal_cache of this OrgApacheJackrabbitOakPluginsDocumentDocumentNodeStoreServiceProperties.


        :param journal_cache: The journal_cache of this OrgApacheJackrabbitOakPluginsDocumentDocumentNodeStoreServiceProperties.
        :type journal_cache: ConfigNodePropertyString
        """

        self._journal_cache = journal_cache

    @property
    def custom_blob_store(self) -> ConfigNodePropertyBoolean:
        """Gets the custom_blob_store of this OrgApacheJackrabbitOakPluginsDocumentDocumentNodeStoreServiceProperties.


        :return: The custom_blob_store of this OrgApacheJackrabbitOakPluginsDocumentDocumentNodeStoreServiceProperties.
        :rtype: ConfigNodePropertyBoolean
        """
        return self._custom_blob_store

    @custom_blob_store.setter
    def custom_blob_store(self, custom_blob_store: ConfigNodePropertyBoolean):
        """Sets the custom_blob_store of this OrgApacheJackrabbitOakPluginsDocumentDocumentNodeStoreServiceProperties.


        :param custom_blob_store: The custom_blob_store of this OrgApacheJackrabbitOakPluginsDocumentDocumentNodeStoreServiceProperties.
        :type custom_blob_store: ConfigNodePropertyBoolean
        """

        self._custom_blob_store = custom_blob_store

    @property
    def journal_gc_interval(self) -> ConfigNodePropertyInteger:
        """Gets the journal_gc_interval of this OrgApacheJackrabbitOakPluginsDocumentDocumentNodeStoreServiceProperties.


        :return: The journal_gc_interval of this OrgApacheJackrabbitOakPluginsDocumentDocumentNodeStoreServiceProperties.
        :rtype: ConfigNodePropertyInteger
        """
        return self._journal_gc_interval

    @journal_gc_interval.setter
    def journal_gc_interval(self, journal_gc_interval: ConfigNodePropertyInteger):
        """Sets the journal_gc_interval of this OrgApacheJackrabbitOakPluginsDocumentDocumentNodeStoreServiceProperties.


        :param journal_gc_interval: The journal_gc_interval of this OrgApacheJackrabbitOakPluginsDocumentDocumentNodeStoreServiceProperties.
        :type journal_gc_interval: ConfigNodePropertyInteger
        """

        self._journal_gc_interval = journal_gc_interval

    @property
    def journal_gc_max_age(self) -> ConfigNodePropertyInteger:
        """Gets the journal_gc_max_age of this OrgApacheJackrabbitOakPluginsDocumentDocumentNodeStoreServiceProperties.


        :return: The journal_gc_max_age of this OrgApacheJackrabbitOakPluginsDocumentDocumentNodeStoreServiceProperties.
        :rtype: ConfigNodePropertyInteger
        """
        return self._journal_gc_max_age

    @journal_gc_max_age.setter
    def journal_gc_max_age(self, journal_gc_max_age: ConfigNodePropertyInteger):
        """Sets the journal_gc_max_age of this OrgApacheJackrabbitOakPluginsDocumentDocumentNodeStoreServiceProperties.


        :param journal_gc_max_age: The journal_gc_max_age of this OrgApacheJackrabbitOakPluginsDocumentDocumentNodeStoreServiceProperties.
        :type journal_gc_max_age: ConfigNodePropertyInteger
        """

        self._journal_gc_max_age = journal_gc_max_age

    @property
    def prefetch_external_changes(self) -> ConfigNodePropertyBoolean:
        """Gets the prefetch_external_changes of this OrgApacheJackrabbitOakPluginsDocumentDocumentNodeStoreServiceProperties.


        :return: The prefetch_external_changes of this OrgApacheJackrabbitOakPluginsDocumentDocumentNodeStoreServiceProperties.
        :rtype: ConfigNodePropertyBoolean
        """
        return self._prefetch_external_changes

    @prefetch_external_changes.setter
    def prefetch_external_changes(self, prefetch_external_changes: ConfigNodePropertyBoolean):
        """Sets the prefetch_external_changes of this OrgApacheJackrabbitOakPluginsDocumentDocumentNodeStoreServiceProperties.


        :param prefetch_external_changes: The prefetch_external_changes of this OrgApacheJackrabbitOakPluginsDocumentDocumentNodeStoreServiceProperties.
        :type prefetch_external_changes: ConfigNodePropertyBoolean
        """

        self._prefetch_external_changes = prefetch_external_changes

    @property
    def role(self) -> ConfigNodePropertyString:
        """Gets the role of this OrgApacheJackrabbitOakPluginsDocumentDocumentNodeStoreServiceProperties.


        :return: The role of this OrgApacheJackrabbitOakPluginsDocumentDocumentNodeStoreServiceProperties.
        :rtype: ConfigNodePropertyString
        """
        return self._role

    @role.setter
    def role(self, role: ConfigNodePropertyString):
        """Sets the role of this OrgApacheJackrabbitOakPluginsDocumentDocumentNodeStoreServiceProperties.


        :param role: The role of this OrgApacheJackrabbitOakPluginsDocumentDocumentNodeStoreServiceProperties.
        :type role: ConfigNodePropertyString
        """

        self._role = role

    @property
    def version_gc_max_age_in_secs(self) -> ConfigNodePropertyInteger:
        """Gets the version_gc_max_age_in_secs of this OrgApacheJackrabbitOakPluginsDocumentDocumentNodeStoreServiceProperties.


        :return: The version_gc_max_age_in_secs of this OrgApacheJackrabbitOakPluginsDocumentDocumentNodeStoreServiceProperties.
        :rtype: ConfigNodePropertyInteger
        """
        return self._version_gc_max_age_in_secs

    @version_gc_max_age_in_secs.setter
    def version_gc_max_age_in_secs(self, version_gc_max_age_in_secs: ConfigNodePropertyInteger):
        """Sets the version_gc_max_age_in_secs of this OrgApacheJackrabbitOakPluginsDocumentDocumentNodeStoreServiceProperties.


        :param version_gc_max_age_in_secs: The version_gc_max_age_in_secs of this OrgApacheJackrabbitOakPluginsDocumentDocumentNodeStoreServiceProperties.
        :type version_gc_max_age_in_secs: ConfigNodePropertyInteger
        """

        self._version_gc_max_age_in_secs = version_gc_max_age_in_secs

    @property
    def version_gc_expression(self) -> ConfigNodePropertyString:
        """Gets the version_gc_expression of this OrgApacheJackrabbitOakPluginsDocumentDocumentNodeStoreServiceProperties.


        :return: The version_gc_expression of this OrgApacheJackrabbitOakPluginsDocumentDocumentNodeStoreServiceProperties.
        :rtype: ConfigNodePropertyString
        """
        return self._version_gc_expression

    @version_gc_expression.setter
    def version_gc_expression(self, version_gc_expression: ConfigNodePropertyString):
        """Sets the version_gc_expression of this OrgApacheJackrabbitOakPluginsDocumentDocumentNodeStoreServiceProperties.


        :param version_gc_expression: The version_gc_expression of this OrgApacheJackrabbitOakPluginsDocumentDocumentNodeStoreServiceProperties.
        :type version_gc_expression: ConfigNodePropertyString
        """

        self._version_gc_expression = version_gc_expression

    @property
    def version_gc_time_limit_in_secs(self) -> ConfigNodePropertyInteger:
        """Gets the version_gc_time_limit_in_secs of this OrgApacheJackrabbitOakPluginsDocumentDocumentNodeStoreServiceProperties.


        :return: The version_gc_time_limit_in_secs of this OrgApacheJackrabbitOakPluginsDocumentDocumentNodeStoreServiceProperties.
        :rtype: ConfigNodePropertyInteger
        """
        return self._version_gc_time_limit_in_secs

    @version_gc_time_limit_in_secs.setter
    def version_gc_time_limit_in_secs(self, version_gc_time_limit_in_secs: ConfigNodePropertyInteger):
        """Sets the version_gc_time_limit_in_secs of this OrgApacheJackrabbitOakPluginsDocumentDocumentNodeStoreServiceProperties.


        :param version_gc_time_limit_in_secs: The version_gc_time_limit_in_secs of this OrgApacheJackrabbitOakPluginsDocumentDocumentNodeStoreServiceProperties.
        :type version_gc_time_limit_in_secs: ConfigNodePropertyInteger
        """

        self._version_gc_time_limit_in_secs = version_gc_time_limit_in_secs

    @property
    def blob_gc_max_age_in_secs(self) -> ConfigNodePropertyInteger:
        """Gets the blob_gc_max_age_in_secs of this OrgApacheJackrabbitOakPluginsDocumentDocumentNodeStoreServiceProperties.


        :return: The blob_gc_max_age_in_secs of this OrgApacheJackrabbitOakPluginsDocumentDocumentNodeStoreServiceProperties.
        :rtype: ConfigNodePropertyInteger
        """
        return self._blob_gc_max_age_in_secs

    @blob_gc_max_age_in_secs.setter
    def blob_gc_max_age_in_secs(self, blob_gc_max_age_in_secs: ConfigNodePropertyInteger):
        """Sets the blob_gc_max_age_in_secs of this OrgApacheJackrabbitOakPluginsDocumentDocumentNodeStoreServiceProperties.


        :param blob_gc_max_age_in_secs: The blob_gc_max_age_in_secs of this OrgApacheJackrabbitOakPluginsDocumentDocumentNodeStoreServiceProperties.
        :type blob_gc_max_age_in_secs: ConfigNodePropertyInteger
        """

        self._blob_gc_max_age_in_secs = blob_gc_max_age_in_secs

    @property
    def blob_track_snapshot_interval_in_secs(self) -> ConfigNodePropertyInteger:
        """Gets the blob_track_snapshot_interval_in_secs of this OrgApacheJackrabbitOakPluginsDocumentDocumentNodeStoreServiceProperties.


        :return: The blob_track_snapshot_interval_in_secs of this OrgApacheJackrabbitOakPluginsDocumentDocumentNodeStoreServiceProperties.
        :rtype: ConfigNodePropertyInteger
        """
        return self._blob_track_snapshot_interval_in_secs

    @blob_track_snapshot_interval_in_secs.setter
    def blob_track_snapshot_interval_in_secs(self, blob_track_snapshot_interval_in_secs: ConfigNodePropertyInteger):
        """Sets the blob_track_snapshot_interval_in_secs of this OrgApacheJackrabbitOakPluginsDocumentDocumentNodeStoreServiceProperties.


        :param blob_track_snapshot_interval_in_secs: The blob_track_snapshot_interval_in_secs of this OrgApacheJackrabbitOakPluginsDocumentDocumentNodeStoreServiceProperties.
        :type blob_track_snapshot_interval_in_secs: ConfigNodePropertyInteger
        """

        self._blob_track_snapshot_interval_in_secs = blob_track_snapshot_interval_in_secs

    @property
    def repository_home(self) -> ConfigNodePropertyString:
        """Gets the repository_home of this OrgApacheJackrabbitOakPluginsDocumentDocumentNodeStoreServiceProperties.


        :return: The repository_home of this OrgApacheJackrabbitOakPluginsDocumentDocumentNodeStoreServiceProperties.
        :rtype: ConfigNodePropertyString
        """
        return self._repository_home

    @repository_home.setter
    def repository_home(self, repository_home: ConfigNodePropertyString):
        """Sets the repository_home of this OrgApacheJackrabbitOakPluginsDocumentDocumentNodeStoreServiceProperties.


        :param repository_home: The repository_home of this OrgApacheJackrabbitOakPluginsDocumentDocumentNodeStoreServiceProperties.
        :type repository_home: ConfigNodePropertyString
        """

        self._repository_home = repository_home

    @property
    def max_replication_lag_in_secs(self) -> ConfigNodePropertyInteger:
        """Gets the max_replication_lag_in_secs of this OrgApacheJackrabbitOakPluginsDocumentDocumentNodeStoreServiceProperties.


        :return: The max_replication_lag_in_secs of this OrgApacheJackrabbitOakPluginsDocumentDocumentNodeStoreServiceProperties.
        :rtype: ConfigNodePropertyInteger
        """
        return self._max_replication_lag_in_secs

    @max_replication_lag_in_secs.setter
    def max_replication_lag_in_secs(self, max_replication_lag_in_secs: ConfigNodePropertyInteger):
        """Sets the max_replication_lag_in_secs of this OrgApacheJackrabbitOakPluginsDocumentDocumentNodeStoreServiceProperties.


        :param max_replication_lag_in_secs: The max_replication_lag_in_secs of this OrgApacheJackrabbitOakPluginsDocumentDocumentNodeStoreServiceProperties.
        :type max_replication_lag_in_secs: ConfigNodePropertyInteger
        """

        self._max_replication_lag_in_secs = max_replication_lag_in_secs

    @property
    def document_store_type(self) -> ConfigNodePropertyDropDown:
        """Gets the document_store_type of this OrgApacheJackrabbitOakPluginsDocumentDocumentNodeStoreServiceProperties.


        :return: The document_store_type of this OrgApacheJackrabbitOakPluginsDocumentDocumentNodeStoreServiceProperties.
        :rtype: ConfigNodePropertyDropDown
        """
        return self._document_store_type

    @document_store_type.setter
    def document_store_type(self, document_store_type: ConfigNodePropertyDropDown):
        """Sets the document_store_type of this OrgApacheJackrabbitOakPluginsDocumentDocumentNodeStoreServiceProperties.


        :param document_store_type: The document_store_type of this OrgApacheJackrabbitOakPluginsDocumentDocumentNodeStoreServiceProperties.
        :type document_store_type: ConfigNodePropertyDropDown
        """

        self._document_store_type = document_store_type

    @property
    def bundling_disabled(self) -> ConfigNodePropertyBoolean:
        """Gets the bundling_disabled of this OrgApacheJackrabbitOakPluginsDocumentDocumentNodeStoreServiceProperties.


        :return: The bundling_disabled of this OrgApacheJackrabbitOakPluginsDocumentDocumentNodeStoreServiceProperties.
        :rtype: ConfigNodePropertyBoolean
        """
        return self._bundling_disabled

    @bundling_disabled.setter
    def bundling_disabled(self, bundling_disabled: ConfigNodePropertyBoolean):
        """Sets the bundling_disabled of this OrgApacheJackrabbitOakPluginsDocumentDocumentNodeStoreServiceProperties.


        :param bundling_disabled: The bundling_disabled of this OrgApacheJackrabbitOakPluginsDocumentDocumentNodeStoreServiceProperties.
        :type bundling_disabled: ConfigNodePropertyBoolean
        """

        self._bundling_disabled = bundling_disabled

    @property
    def update_limit(self) -> ConfigNodePropertyInteger:
        """Gets the update_limit of this OrgApacheJackrabbitOakPluginsDocumentDocumentNodeStoreServiceProperties.


        :return: The update_limit of this OrgApacheJackrabbitOakPluginsDocumentDocumentNodeStoreServiceProperties.
        :rtype: ConfigNodePropertyInteger
        """
        return self._update_limit

    @update_limit.setter
    def update_limit(self, update_limit: ConfigNodePropertyInteger):
        """Sets the update_limit of this OrgApacheJackrabbitOakPluginsDocumentDocumentNodeStoreServiceProperties.


        :param update_limit: The update_limit of this OrgApacheJackrabbitOakPluginsDocumentDocumentNodeStoreServiceProperties.
        :type update_limit: ConfigNodePropertyInteger
        """

        self._update_limit = update_limit

    @property
    def persistent_cache_includes(self) -> ConfigNodePropertyArray:
        """Gets the persistent_cache_includes of this OrgApacheJackrabbitOakPluginsDocumentDocumentNodeStoreServiceProperties.


        :return: The persistent_cache_includes of this OrgApacheJackrabbitOakPluginsDocumentDocumentNodeStoreServiceProperties.
        :rtype: ConfigNodePropertyArray
        """
        return self._persistent_cache_includes

    @persistent_cache_includes.setter
    def persistent_cache_includes(self, persistent_cache_includes: ConfigNodePropertyArray):
        """Sets the persistent_cache_includes of this OrgApacheJackrabbitOakPluginsDocumentDocumentNodeStoreServiceProperties.


        :param persistent_cache_includes: The persistent_cache_includes of this OrgApacheJackrabbitOakPluginsDocumentDocumentNodeStoreServiceProperties.
        :type persistent_cache_includes: ConfigNodePropertyArray
        """

        self._persistent_cache_includes = persistent_cache_includes

    @property
    def lease_check_mode(self) -> ConfigNodePropertyDropDown:
        """Gets the lease_check_mode of this OrgApacheJackrabbitOakPluginsDocumentDocumentNodeStoreServiceProperties.


        :return: The lease_check_mode of this OrgApacheJackrabbitOakPluginsDocumentDocumentNodeStoreServiceProperties.
        :rtype: ConfigNodePropertyDropDown
        """
        return self._lease_check_mode

    @lease_check_mode.setter
    def lease_check_mode(self, lease_check_mode: ConfigNodePropertyDropDown):
        """Sets the lease_check_mode of this OrgApacheJackrabbitOakPluginsDocumentDocumentNodeStoreServiceProperties.


        :param lease_check_mode: The lease_check_mode of this OrgApacheJackrabbitOakPluginsDocumentDocumentNodeStoreServiceProperties.
        :type lease_check_mode: ConfigNodePropertyDropDown
        """

        self._lease_check_mode = lease_check_mode
