/**
* Adobe Experience Manager OSGI config (AEM) API
* Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
*
* OpenAPI spec version: 1.0.0-pre.0
* Contact: opensource@shinesolutions.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/


#include "ComAdobeGraniteWorkflowCoreJobExternalProcessJobHandlerProperties.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

ComAdobeGraniteWorkflowCoreJobExternalProcessJobHandlerProperties::ComAdobeGraniteWorkflowCoreJobExternalProcessJobHandlerProperties()
{
    m_Default_timeoutIsSet = false;
    m_Max_timeoutIsSet = false;
    m_Default_periodIsSet = false;
    
}

ComAdobeGraniteWorkflowCoreJobExternalProcessJobHandlerProperties::~ComAdobeGraniteWorkflowCoreJobExternalProcessJobHandlerProperties()
{
}

void ComAdobeGraniteWorkflowCoreJobExternalProcessJobHandlerProperties::validate()
{
    // TODO: implement validation
}

nlohmann::json ComAdobeGraniteWorkflowCoreJobExternalProcessJobHandlerProperties::toJson() const
{
    nlohmann::json val = nlohmann::json::object();

    if(m_Default_timeoutIsSet)
    {
        val["default.timeout"] = ModelBase::toJson(m_Default_timeout);
    }
    if(m_Max_timeoutIsSet)
    {
        val["max.timeout"] = ModelBase::toJson(m_Max_timeout);
    }
    if(m_Default_periodIsSet)
    {
        val["default.period"] = ModelBase::toJson(m_Default_period);
    }
    

    return val;
}

void ComAdobeGraniteWorkflowCoreJobExternalProcessJobHandlerProperties::fromJson(nlohmann::json& val)
{
    if(val.find("default.timeout") != val.end())
    {
        if(!val["default.timeout"].is_null())
        {
            ConfigNodePropertyInteger newItem;
            newItem.fromJson(val["default.timeout"]);
            setDefaultTimeout( newItem );
        }
        
    }
    if(val.find("max.timeout") != val.end())
    {
        if(!val["max.timeout"].is_null())
        {
            ConfigNodePropertyInteger newItem;
            newItem.fromJson(val["max.timeout"]);
            setMaxTimeout( newItem );
        }
        
    }
    if(val.find("default.period") != val.end())
    {
        if(!val["default.period"].is_null())
        {
            ConfigNodePropertyInteger newItem;
            newItem.fromJson(val["default.period"]);
            setDefaultPeriod( newItem );
        }
        
    }
    
}


ConfigNodePropertyInteger ComAdobeGraniteWorkflowCoreJobExternalProcessJobHandlerProperties::getDefaultTimeout() const
{
    return m_Default_timeout;
}
void ComAdobeGraniteWorkflowCoreJobExternalProcessJobHandlerProperties::setDefaultTimeout(ConfigNodePropertyInteger const& value)
{
    m_Default_timeout = value;
    m_Default_timeoutIsSet = true;
}
bool ComAdobeGraniteWorkflowCoreJobExternalProcessJobHandlerProperties::defaultTimeoutIsSet() const
{
    return m_Default_timeoutIsSet;
}
void ComAdobeGraniteWorkflowCoreJobExternalProcessJobHandlerProperties::unsetDefault_timeout()
{
    m_Default_timeoutIsSet = false;
}
ConfigNodePropertyInteger ComAdobeGraniteWorkflowCoreJobExternalProcessJobHandlerProperties::getMaxTimeout() const
{
    return m_Max_timeout;
}
void ComAdobeGraniteWorkflowCoreJobExternalProcessJobHandlerProperties::setMaxTimeout(ConfigNodePropertyInteger const& value)
{
    m_Max_timeout = value;
    m_Max_timeoutIsSet = true;
}
bool ComAdobeGraniteWorkflowCoreJobExternalProcessJobHandlerProperties::maxTimeoutIsSet() const
{
    return m_Max_timeoutIsSet;
}
void ComAdobeGraniteWorkflowCoreJobExternalProcessJobHandlerProperties::unsetMax_timeout()
{
    m_Max_timeoutIsSet = false;
}
ConfigNodePropertyInteger ComAdobeGraniteWorkflowCoreJobExternalProcessJobHandlerProperties::getDefaultPeriod() const
{
    return m_Default_period;
}
void ComAdobeGraniteWorkflowCoreJobExternalProcessJobHandlerProperties::setDefaultPeriod(ConfigNodePropertyInteger const& value)
{
    m_Default_period = value;
    m_Default_periodIsSet = true;
}
bool ComAdobeGraniteWorkflowCoreJobExternalProcessJobHandlerProperties::defaultPeriodIsSet() const
{
    return m_Default_periodIsSet;
}
void ComAdobeGraniteWorkflowCoreJobExternalProcessJobHandlerProperties::unsetDefault_period()
{
    m_Default_periodIsSet = false;
}

}
}
}
}

