package org.openapitools.client.api

import argonaut._
import argonaut.EncodeJson._
import argonaut.DecodeJson._

import org.http4s.{EntityDecoder, EntityEncoder}
import org.http4s.argonaut._
import org.joda.time.DateTime
import ComAdobeCqScheduledExporterImplScheduledExporterImplInfo._

case class ComAdobeCqScheduledExporterImplScheduledExporterImplInfo (
  pid: Option[String],
title: Option[String],
description: Option[String],
properties: Option[ComAdobeCqScheduledExporterImplScheduledExporterImplProperties])

object ComAdobeCqScheduledExporterImplScheduledExporterImplInfo {
  import DateTimeCodecs._

  implicit val ComAdobeCqScheduledExporterImplScheduledExporterImplInfoCodecJson: CodecJson[ComAdobeCqScheduledExporterImplScheduledExporterImplInfo] = CodecJson.derive[ComAdobeCqScheduledExporterImplScheduledExporterImplInfo]
  implicit val ComAdobeCqScheduledExporterImplScheduledExporterImplInfoDecoder: EntityDecoder[ComAdobeCqScheduledExporterImplScheduledExporterImplInfo] = jsonOf[ComAdobeCqScheduledExporterImplScheduledExporterImplInfo]
  implicit val ComAdobeCqScheduledExporterImplScheduledExporterImplInfoEncoder: EntityEncoder[ComAdobeCqScheduledExporterImplScheduledExporterImplInfo] = jsonEncoderOf[ComAdobeCqScheduledExporterImplScheduledExporterImplInfo]
}
