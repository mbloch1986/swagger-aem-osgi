/**
* Adobe Experience Manager OSGI config (AEM) API
* Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
*
* OpenAPI spec version: 1.0.0-pre.0
* Contact: opensource@shinesolutions.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/


#include "OrgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplDeProperties.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

OrgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplDeProperties::OrgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplDeProperties()
{
    m_Handler_nameIsSet = false;
    m_User_expirationTimeIsSet = false;
    m_User_autoMembershipIsSet = false;
    m_User_propertyMappingIsSet = false;
    m_User_pathPrefixIsSet = false;
    m_User_membershipExpTimeIsSet = false;
    m_User_membershipNestingDepthIsSet = false;
    m_User_dynamicMembershipIsSet = false;
    m_User_disableMissingIsSet = false;
    m_Group_expirationTimeIsSet = false;
    m_Group_autoMembershipIsSet = false;
    m_Group_propertyMappingIsSet = false;
    m_Group_pathPrefixIsSet = false;
    m_EnableRFC7613UsercaseMappedProfileIsSet = false;
    
}

OrgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplDeProperties::~OrgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplDeProperties()
{
}

void OrgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplDeProperties::validate()
{
    // TODO: implement validation
}

nlohmann::json OrgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplDeProperties::toJson() const
{
    nlohmann::json val = nlohmann::json::object();

    if(m_Handler_nameIsSet)
    {
        val["handler.name"] = ModelBase::toJson(m_Handler_name);
    }
    if(m_User_expirationTimeIsSet)
    {
        val["user.expirationTime"] = ModelBase::toJson(m_User_expirationTime);
    }
    if(m_User_autoMembershipIsSet)
    {
        val["user.autoMembership"] = ModelBase::toJson(m_User_autoMembership);
    }
    if(m_User_propertyMappingIsSet)
    {
        val["user.propertyMapping"] = ModelBase::toJson(m_User_propertyMapping);
    }
    if(m_User_pathPrefixIsSet)
    {
        val["user.pathPrefix"] = ModelBase::toJson(m_User_pathPrefix);
    }
    if(m_User_membershipExpTimeIsSet)
    {
        val["user.membershipExpTime"] = ModelBase::toJson(m_User_membershipExpTime);
    }
    if(m_User_membershipNestingDepthIsSet)
    {
        val["user.membershipNestingDepth"] = ModelBase::toJson(m_User_membershipNestingDepth);
    }
    if(m_User_dynamicMembershipIsSet)
    {
        val["user.dynamicMembership"] = ModelBase::toJson(m_User_dynamicMembership);
    }
    if(m_User_disableMissingIsSet)
    {
        val["user.disableMissing"] = ModelBase::toJson(m_User_disableMissing);
    }
    if(m_Group_expirationTimeIsSet)
    {
        val["group.expirationTime"] = ModelBase::toJson(m_Group_expirationTime);
    }
    if(m_Group_autoMembershipIsSet)
    {
        val["group.autoMembership"] = ModelBase::toJson(m_Group_autoMembership);
    }
    if(m_Group_propertyMappingIsSet)
    {
        val["group.propertyMapping"] = ModelBase::toJson(m_Group_propertyMapping);
    }
    if(m_Group_pathPrefixIsSet)
    {
        val["group.pathPrefix"] = ModelBase::toJson(m_Group_pathPrefix);
    }
    if(m_EnableRFC7613UsercaseMappedProfileIsSet)
    {
        val["enableRFC7613UsercaseMappedProfile"] = ModelBase::toJson(m_EnableRFC7613UsercaseMappedProfile);
    }
    

    return val;
}

void OrgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplDeProperties::fromJson(nlohmann::json& val)
{
    if(val.find("handler.name") != val.end())
    {
        if(!val["handler.name"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["handler.name"]);
            setHandlerName( newItem );
        }
        
    }
    if(val.find("user.expirationTime") != val.end())
    {
        if(!val["user.expirationTime"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["user.expirationTime"]);
            setUserExpirationTime( newItem );
        }
        
    }
    if(val.find("user.autoMembership") != val.end())
    {
        if(!val["user.autoMembership"].is_null())
        {
            ConfigNodePropertyArray newItem;
            newItem.fromJson(val["user.autoMembership"]);
            setUserAutoMembership( newItem );
        }
        
    }
    if(val.find("user.propertyMapping") != val.end())
    {
        if(!val["user.propertyMapping"].is_null())
        {
            ConfigNodePropertyArray newItem;
            newItem.fromJson(val["user.propertyMapping"]);
            setUserPropertyMapping( newItem );
        }
        
    }
    if(val.find("user.pathPrefix") != val.end())
    {
        if(!val["user.pathPrefix"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["user.pathPrefix"]);
            setUserPathPrefix( newItem );
        }
        
    }
    if(val.find("user.membershipExpTime") != val.end())
    {
        if(!val["user.membershipExpTime"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["user.membershipExpTime"]);
            setUserMembershipExpTime( newItem );
        }
        
    }
    if(val.find("user.membershipNestingDepth") != val.end())
    {
        if(!val["user.membershipNestingDepth"].is_null())
        {
            ConfigNodePropertyInteger newItem;
            newItem.fromJson(val["user.membershipNestingDepth"]);
            setUserMembershipNestingDepth( newItem );
        }
        
    }
    if(val.find("user.dynamicMembership") != val.end())
    {
        if(!val["user.dynamicMembership"].is_null())
        {
            ConfigNodePropertyBoolean newItem;
            newItem.fromJson(val["user.dynamicMembership"]);
            setUserDynamicMembership( newItem );
        }
        
    }
    if(val.find("user.disableMissing") != val.end())
    {
        if(!val["user.disableMissing"].is_null())
        {
            ConfigNodePropertyBoolean newItem;
            newItem.fromJson(val["user.disableMissing"]);
            setUserDisableMissing( newItem );
        }
        
    }
    if(val.find("group.expirationTime") != val.end())
    {
        if(!val["group.expirationTime"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["group.expirationTime"]);
            setGroupExpirationTime( newItem );
        }
        
    }
    if(val.find("group.autoMembership") != val.end())
    {
        if(!val["group.autoMembership"].is_null())
        {
            ConfigNodePropertyArray newItem;
            newItem.fromJson(val["group.autoMembership"]);
            setGroupAutoMembership( newItem );
        }
        
    }
    if(val.find("group.propertyMapping") != val.end())
    {
        if(!val["group.propertyMapping"].is_null())
        {
            ConfigNodePropertyArray newItem;
            newItem.fromJson(val["group.propertyMapping"]);
            setGroupPropertyMapping( newItem );
        }
        
    }
    if(val.find("group.pathPrefix") != val.end())
    {
        if(!val["group.pathPrefix"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["group.pathPrefix"]);
            setGroupPathPrefix( newItem );
        }
        
    }
    if(val.find("enableRFC7613UsercaseMappedProfile") != val.end())
    {
        if(!val["enableRFC7613UsercaseMappedProfile"].is_null())
        {
            ConfigNodePropertyBoolean newItem;
            newItem.fromJson(val["enableRFC7613UsercaseMappedProfile"]);
            setEnableRFC7613UsercaseMappedProfile( newItem );
        }
        
    }
    
}


ConfigNodePropertyString OrgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplDeProperties::getHandlerName() const
{
    return m_Handler_name;
}
void OrgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplDeProperties::setHandlerName(ConfigNodePropertyString const& value)
{
    m_Handler_name = value;
    m_Handler_nameIsSet = true;
}
bool OrgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplDeProperties::handlerNameIsSet() const
{
    return m_Handler_nameIsSet;
}
void OrgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplDeProperties::unsetHandler_name()
{
    m_Handler_nameIsSet = false;
}
ConfigNodePropertyString OrgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplDeProperties::getUserExpirationTime() const
{
    return m_User_expirationTime;
}
void OrgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplDeProperties::setUserExpirationTime(ConfigNodePropertyString const& value)
{
    m_User_expirationTime = value;
    m_User_expirationTimeIsSet = true;
}
bool OrgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplDeProperties::userExpirationTimeIsSet() const
{
    return m_User_expirationTimeIsSet;
}
void OrgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplDeProperties::unsetUser_expirationTime()
{
    m_User_expirationTimeIsSet = false;
}
ConfigNodePropertyArray OrgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplDeProperties::getUserAutoMembership() const
{
    return m_User_autoMembership;
}
void OrgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplDeProperties::setUserAutoMembership(ConfigNodePropertyArray const& value)
{
    m_User_autoMembership = value;
    m_User_autoMembershipIsSet = true;
}
bool OrgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplDeProperties::userAutoMembershipIsSet() const
{
    return m_User_autoMembershipIsSet;
}
void OrgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplDeProperties::unsetUser_autoMembership()
{
    m_User_autoMembershipIsSet = false;
}
ConfigNodePropertyArray OrgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplDeProperties::getUserPropertyMapping() const
{
    return m_User_propertyMapping;
}
void OrgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplDeProperties::setUserPropertyMapping(ConfigNodePropertyArray const& value)
{
    m_User_propertyMapping = value;
    m_User_propertyMappingIsSet = true;
}
bool OrgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplDeProperties::userPropertyMappingIsSet() const
{
    return m_User_propertyMappingIsSet;
}
void OrgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplDeProperties::unsetUser_propertyMapping()
{
    m_User_propertyMappingIsSet = false;
}
ConfigNodePropertyString OrgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplDeProperties::getUserPathPrefix() const
{
    return m_User_pathPrefix;
}
void OrgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplDeProperties::setUserPathPrefix(ConfigNodePropertyString const& value)
{
    m_User_pathPrefix = value;
    m_User_pathPrefixIsSet = true;
}
bool OrgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplDeProperties::userPathPrefixIsSet() const
{
    return m_User_pathPrefixIsSet;
}
void OrgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplDeProperties::unsetUser_pathPrefix()
{
    m_User_pathPrefixIsSet = false;
}
ConfigNodePropertyString OrgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplDeProperties::getUserMembershipExpTime() const
{
    return m_User_membershipExpTime;
}
void OrgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplDeProperties::setUserMembershipExpTime(ConfigNodePropertyString const& value)
{
    m_User_membershipExpTime = value;
    m_User_membershipExpTimeIsSet = true;
}
bool OrgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplDeProperties::userMembershipExpTimeIsSet() const
{
    return m_User_membershipExpTimeIsSet;
}
void OrgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplDeProperties::unsetUser_membershipExpTime()
{
    m_User_membershipExpTimeIsSet = false;
}
ConfigNodePropertyInteger OrgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplDeProperties::getUserMembershipNestingDepth() const
{
    return m_User_membershipNestingDepth;
}
void OrgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplDeProperties::setUserMembershipNestingDepth(ConfigNodePropertyInteger const& value)
{
    m_User_membershipNestingDepth = value;
    m_User_membershipNestingDepthIsSet = true;
}
bool OrgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplDeProperties::userMembershipNestingDepthIsSet() const
{
    return m_User_membershipNestingDepthIsSet;
}
void OrgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplDeProperties::unsetUser_membershipNestingDepth()
{
    m_User_membershipNestingDepthIsSet = false;
}
ConfigNodePropertyBoolean OrgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplDeProperties::getUserDynamicMembership() const
{
    return m_User_dynamicMembership;
}
void OrgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplDeProperties::setUserDynamicMembership(ConfigNodePropertyBoolean const& value)
{
    m_User_dynamicMembership = value;
    m_User_dynamicMembershipIsSet = true;
}
bool OrgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplDeProperties::userDynamicMembershipIsSet() const
{
    return m_User_dynamicMembershipIsSet;
}
void OrgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplDeProperties::unsetUser_dynamicMembership()
{
    m_User_dynamicMembershipIsSet = false;
}
ConfigNodePropertyBoolean OrgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplDeProperties::getUserDisableMissing() const
{
    return m_User_disableMissing;
}
void OrgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplDeProperties::setUserDisableMissing(ConfigNodePropertyBoolean const& value)
{
    m_User_disableMissing = value;
    m_User_disableMissingIsSet = true;
}
bool OrgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplDeProperties::userDisableMissingIsSet() const
{
    return m_User_disableMissingIsSet;
}
void OrgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplDeProperties::unsetUser_disableMissing()
{
    m_User_disableMissingIsSet = false;
}
ConfigNodePropertyString OrgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplDeProperties::getGroupExpirationTime() const
{
    return m_Group_expirationTime;
}
void OrgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplDeProperties::setGroupExpirationTime(ConfigNodePropertyString const& value)
{
    m_Group_expirationTime = value;
    m_Group_expirationTimeIsSet = true;
}
bool OrgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplDeProperties::groupExpirationTimeIsSet() const
{
    return m_Group_expirationTimeIsSet;
}
void OrgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplDeProperties::unsetGroup_expirationTime()
{
    m_Group_expirationTimeIsSet = false;
}
ConfigNodePropertyArray OrgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplDeProperties::getGroupAutoMembership() const
{
    return m_Group_autoMembership;
}
void OrgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplDeProperties::setGroupAutoMembership(ConfigNodePropertyArray const& value)
{
    m_Group_autoMembership = value;
    m_Group_autoMembershipIsSet = true;
}
bool OrgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplDeProperties::groupAutoMembershipIsSet() const
{
    return m_Group_autoMembershipIsSet;
}
void OrgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplDeProperties::unsetGroup_autoMembership()
{
    m_Group_autoMembershipIsSet = false;
}
ConfigNodePropertyArray OrgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplDeProperties::getGroupPropertyMapping() const
{
    return m_Group_propertyMapping;
}
void OrgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplDeProperties::setGroupPropertyMapping(ConfigNodePropertyArray const& value)
{
    m_Group_propertyMapping = value;
    m_Group_propertyMappingIsSet = true;
}
bool OrgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplDeProperties::groupPropertyMappingIsSet() const
{
    return m_Group_propertyMappingIsSet;
}
void OrgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplDeProperties::unsetGroup_propertyMapping()
{
    m_Group_propertyMappingIsSet = false;
}
ConfigNodePropertyString OrgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplDeProperties::getGroupPathPrefix() const
{
    return m_Group_pathPrefix;
}
void OrgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplDeProperties::setGroupPathPrefix(ConfigNodePropertyString const& value)
{
    m_Group_pathPrefix = value;
    m_Group_pathPrefixIsSet = true;
}
bool OrgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplDeProperties::groupPathPrefixIsSet() const
{
    return m_Group_pathPrefixIsSet;
}
void OrgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplDeProperties::unsetGroup_pathPrefix()
{
    m_Group_pathPrefixIsSet = false;
}
ConfigNodePropertyBoolean OrgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplDeProperties::getEnableRFC7613UsercaseMappedProfile() const
{
    return m_EnableRFC7613UsercaseMappedProfile;
}
void OrgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplDeProperties::setEnableRFC7613UsercaseMappedProfile(ConfigNodePropertyBoolean const& value)
{
    m_EnableRFC7613UsercaseMappedProfile = value;
    m_EnableRFC7613UsercaseMappedProfileIsSet = true;
}
bool OrgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplDeProperties::enableRFC7613UsercaseMappedProfileIsSet() const
{
    return m_EnableRFC7613UsercaseMappedProfileIsSet;
}
void OrgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplDeProperties::unsetEnableRFC7613UsercaseMappedProfile()
{
    m_EnableRFC7613UsercaseMappedProfileIsSet = false;
}

}
}
}
}

