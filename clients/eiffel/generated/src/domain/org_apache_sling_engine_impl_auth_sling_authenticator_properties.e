note
 description:"[
		Adobe Experience Manager OSGI config (AEM) API
 		Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
  		OpenAPI spec version: 1.0.0-pre.0
 	    Contact: opensource@shinesolutions.com

  	NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

 		 Do not edit the class manually.
 	]"
	date: "$Date$"
	revision: "$Revision$"
	EIS:"Eiffel openapi generator", "src=https://openapi-generator.tech", "protocol=uri"
class ORG_APACHE_SLING_ENGINE_IMPL_AUTH_SLING_AUTHENTICATOR_PROPERTIES 

inherit

  ANY
      redefine
          out 
      end


feature --Access

    osgi_http_whiteboard_context_select: detachable CONFIG_NODE_PROPERTY_STRING 
      
    osgi_http_whiteboard_listener: detachable CONFIG_NODE_PROPERTY_STRING 
      
    auth_sudo_cookie: detachable CONFIG_NODE_PROPERTY_STRING 
      
    auth_sudo_parameter: detachable CONFIG_NODE_PROPERTY_STRING 
      
    auth_annonymous: detachable CONFIG_NODE_PROPERTY_BOOLEAN 
      
    sling_auth_requirements: detachable CONFIG_NODE_PROPERTY_ARRAY 
      
    sling_auth_anonymous_user: detachable CONFIG_NODE_PROPERTY_STRING 
      
    sling_auth_anonymous_password: detachable CONFIG_NODE_PROPERTY_STRING 
      
    auth_http: detachable CONFIG_NODE_PROPERTY_DROP_DOWN 
      
    auth_http_realm: detachable CONFIG_NODE_PROPERTY_STRING 
      
    auth_uri_suffix: detachable CONFIG_NODE_PROPERTY_ARRAY 
      

feature -- Change Element  
 
    set_osgi_http_whiteboard_context_select (a_name: like osgi_http_whiteboard_context_select)
        -- Set 'osgi_http_whiteboard_context_select' with 'a_name'.
      do
        osgi_http_whiteboard_context_select := a_name
      ensure
        osgi_http_whiteboard_context_select_set: osgi_http_whiteboard_context_select = a_name		
      end

    set_osgi_http_whiteboard_listener (a_name: like osgi_http_whiteboard_listener)
        -- Set 'osgi_http_whiteboard_listener' with 'a_name'.
      do
        osgi_http_whiteboard_listener := a_name
      ensure
        osgi_http_whiteboard_listener_set: osgi_http_whiteboard_listener = a_name		
      end

    set_auth_sudo_cookie (a_name: like auth_sudo_cookie)
        -- Set 'auth_sudo_cookie' with 'a_name'.
      do
        auth_sudo_cookie := a_name
      ensure
        auth_sudo_cookie_set: auth_sudo_cookie = a_name		
      end

    set_auth_sudo_parameter (a_name: like auth_sudo_parameter)
        -- Set 'auth_sudo_parameter' with 'a_name'.
      do
        auth_sudo_parameter := a_name
      ensure
        auth_sudo_parameter_set: auth_sudo_parameter = a_name		
      end

    set_auth_annonymous (a_name: like auth_annonymous)
        -- Set 'auth_annonymous' with 'a_name'.
      do
        auth_annonymous := a_name
      ensure
        auth_annonymous_set: auth_annonymous = a_name		
      end

    set_sling_auth_requirements (a_name: like sling_auth_requirements)
        -- Set 'sling_auth_requirements' with 'a_name'.
      do
        sling_auth_requirements := a_name
      ensure
        sling_auth_requirements_set: sling_auth_requirements = a_name		
      end

    set_sling_auth_anonymous_user (a_name: like sling_auth_anonymous_user)
        -- Set 'sling_auth_anonymous_user' with 'a_name'.
      do
        sling_auth_anonymous_user := a_name
      ensure
        sling_auth_anonymous_user_set: sling_auth_anonymous_user = a_name		
      end

    set_sling_auth_anonymous_password (a_name: like sling_auth_anonymous_password)
        -- Set 'sling_auth_anonymous_password' with 'a_name'.
      do
        sling_auth_anonymous_password := a_name
      ensure
        sling_auth_anonymous_password_set: sling_auth_anonymous_password = a_name		
      end

    set_auth_http (a_name: like auth_http)
        -- Set 'auth_http' with 'a_name'.
      do
        auth_http := a_name
      ensure
        auth_http_set: auth_http = a_name		
      end

    set_auth_http_realm (a_name: like auth_http_realm)
        -- Set 'auth_http_realm' with 'a_name'.
      do
        auth_http_realm := a_name
      ensure
        auth_http_realm_set: auth_http_realm = a_name		
      end

    set_auth_uri_suffix (a_name: like auth_uri_suffix)
        -- Set 'auth_uri_suffix' with 'a_name'.
      do
        auth_uri_suffix := a_name
      ensure
        auth_uri_suffix_set: auth_uri_suffix = a_name		
      end


 feature -- Status Report

    out: STRING
          -- <Precursor>
      do
        create Result.make_empty
        Result.append("%Nclass ORG_APACHE_SLING_ENGINE_IMPL_AUTH_SLING_AUTHENTICATOR_PROPERTIES%N")
        if attached osgi_http_whiteboard_context_select as l_osgi_http_whiteboard_context_select then
          Result.append ("%Nosgi_http_whiteboard_context_select:")
          Result.append (l_osgi_http_whiteboard_context_select.out)
          Result.append ("%N")    
        end  
        if attached osgi_http_whiteboard_listener as l_osgi_http_whiteboard_listener then
          Result.append ("%Nosgi_http_whiteboard_listener:")
          Result.append (l_osgi_http_whiteboard_listener.out)
          Result.append ("%N")    
        end  
        if attached auth_sudo_cookie as l_auth_sudo_cookie then
          Result.append ("%Nauth_sudo_cookie:")
          Result.append (l_auth_sudo_cookie.out)
          Result.append ("%N")    
        end  
        if attached auth_sudo_parameter as l_auth_sudo_parameter then
          Result.append ("%Nauth_sudo_parameter:")
          Result.append (l_auth_sudo_parameter.out)
          Result.append ("%N")    
        end  
        if attached auth_annonymous as l_auth_annonymous then
          Result.append ("%Nauth_annonymous:")
          Result.append (l_auth_annonymous.out)
          Result.append ("%N")    
        end  
        if attached sling_auth_requirements as l_sling_auth_requirements then
          Result.append ("%Nsling_auth_requirements:")
          Result.append (l_sling_auth_requirements.out)
          Result.append ("%N")    
        end  
        if attached sling_auth_anonymous_user as l_sling_auth_anonymous_user then
          Result.append ("%Nsling_auth_anonymous_user:")
          Result.append (l_sling_auth_anonymous_user.out)
          Result.append ("%N")    
        end  
        if attached sling_auth_anonymous_password as l_sling_auth_anonymous_password then
          Result.append ("%Nsling_auth_anonymous_password:")
          Result.append (l_sling_auth_anonymous_password.out)
          Result.append ("%N")    
        end  
        if attached auth_http as l_auth_http then
          Result.append ("%Nauth_http:")
          Result.append (l_auth_http.out)
          Result.append ("%N")    
        end  
        if attached auth_http_realm as l_auth_http_realm then
          Result.append ("%Nauth_http_realm:")
          Result.append (l_auth_http_realm.out)
          Result.append ("%N")    
        end  
        if attached auth_uri_suffix as l_auth_uri_suffix then
          Result.append ("%Nauth_uri_suffix:")
          Result.append (l_auth_uri_suffix.out)
          Result.append ("%N")    
        end  
      end
end


