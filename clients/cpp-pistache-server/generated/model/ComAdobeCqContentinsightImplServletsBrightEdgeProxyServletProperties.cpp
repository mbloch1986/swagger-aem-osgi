/**
* Adobe Experience Manager OSGI config (AEM) API
* Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
*
* OpenAPI spec version: 1.0.0-pre.0
* Contact: opensource@shinesolutions.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/


#include "ComAdobeCqContentinsightImplServletsBrightEdgeProxyServletProperties.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

ComAdobeCqContentinsightImplServletsBrightEdgeProxyServletProperties::ComAdobeCqContentinsightImplServletsBrightEdgeProxyServletProperties()
{
    m_Brightedge_urlIsSet = false;
    
}

ComAdobeCqContentinsightImplServletsBrightEdgeProxyServletProperties::~ComAdobeCqContentinsightImplServletsBrightEdgeProxyServletProperties()
{
}

void ComAdobeCqContentinsightImplServletsBrightEdgeProxyServletProperties::validate()
{
    // TODO: implement validation
}

nlohmann::json ComAdobeCqContentinsightImplServletsBrightEdgeProxyServletProperties::toJson() const
{
    nlohmann::json val = nlohmann::json::object();

    if(m_Brightedge_urlIsSet)
    {
        val["brightedge.url"] = ModelBase::toJson(m_Brightedge_url);
    }
    

    return val;
}

void ComAdobeCqContentinsightImplServletsBrightEdgeProxyServletProperties::fromJson(nlohmann::json& val)
{
    if(val.find("brightedge.url") != val.end())
    {
        if(!val["brightedge.url"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["brightedge.url"]);
            setBrightedgeUrl( newItem );
        }
        
    }
    
}


ConfigNodePropertyString ComAdobeCqContentinsightImplServletsBrightEdgeProxyServletProperties::getBrightedgeUrl() const
{
    return m_Brightedge_url;
}
void ComAdobeCqContentinsightImplServletsBrightEdgeProxyServletProperties::setBrightedgeUrl(ConfigNodePropertyString const& value)
{
    m_Brightedge_url = value;
    m_Brightedge_urlIsSet = true;
}
bool ComAdobeCqContentinsightImplServletsBrightEdgeProxyServletProperties::brightedgeUrlIsSet() const
{
    return m_Brightedge_urlIsSet;
}
void ComAdobeCqContentinsightImplServletsBrightEdgeProxyServletProperties::unsetBrightedge_url()
{
    m_Brightedge_urlIsSet = false;
}

}
}
}
}

