package org.openapitools.client.api

import argonaut._
import argonaut.EncodeJson._
import argonaut.DecodeJson._

import org.http4s.{EntityDecoder, EntityEncoder}
import org.http4s.argonaut._
import org.joda.time.DateTime
import ComAdobeCqSocialContentFragmentsServicesImplCommunitiesFragmenProperties._

case class ComAdobeCqSocialContentFragmentsServicesImplCommunitiesFragmenProperties (
  cqSocialContentFragmentsServicesEnabled: Option[ConfigNodePropertyBoolean],
cqSocialContentFragmentsServicesWaitTimeSeconds: Option[ConfigNodePropertyInteger])

object ComAdobeCqSocialContentFragmentsServicesImplCommunitiesFragmenProperties {
  import DateTimeCodecs._

  implicit val ComAdobeCqSocialContentFragmentsServicesImplCommunitiesFragmenPropertiesCodecJson: CodecJson[ComAdobeCqSocialContentFragmentsServicesImplCommunitiesFragmenProperties] = CodecJson.derive[ComAdobeCqSocialContentFragmentsServicesImplCommunitiesFragmenProperties]
  implicit val ComAdobeCqSocialContentFragmentsServicesImplCommunitiesFragmenPropertiesDecoder: EntityDecoder[ComAdobeCqSocialContentFragmentsServicesImplCommunitiesFragmenProperties] = jsonOf[ComAdobeCqSocialContentFragmentsServicesImplCommunitiesFragmenProperties]
  implicit val ComAdobeCqSocialContentFragmentsServicesImplCommunitiesFragmenPropertiesEncoder: EntityEncoder[ComAdobeCqSocialContentFragmentsServicesImplCommunitiesFragmenProperties] = jsonEncoderOf[ComAdobeCqSocialContentFragmentsServicesImplCommunitiesFragmenProperties]
}
