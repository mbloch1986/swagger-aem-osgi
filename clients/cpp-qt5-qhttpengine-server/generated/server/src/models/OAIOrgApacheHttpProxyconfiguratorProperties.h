/**
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIOrgApacheHttpProxyconfiguratorProperties.h
 *
 * 
 */

#ifndef OAIOrgApacheHttpProxyconfiguratorProperties_H
#define OAIOrgApacheHttpProxyconfiguratorProperties_H

#include <QJsonObject>


#include "OAIConfigNodePropertyArray.h"
#include "OAIConfigNodePropertyBoolean.h"
#include "OAIConfigNodePropertyInteger.h"
#include "OAIConfigNodePropertyString.h"

#include "OAIObject.h"

namespace OpenAPI {

class OAIOrgApacheHttpProxyconfiguratorProperties: public OAIObject {
public:
    OAIOrgApacheHttpProxyconfiguratorProperties();
    OAIOrgApacheHttpProxyconfiguratorProperties(QString json);
    ~OAIOrgApacheHttpProxyconfiguratorProperties() override;
    void init();

    QString asJson () const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIConfigNodePropertyBoolean getProxyEnabled() const;
    void setProxyEnabled(const OAIConfigNodePropertyBoolean &proxy_enabled);

    OAIConfigNodePropertyString getProxyHost() const;
    void setProxyHost(const OAIConfigNodePropertyString &proxy_host);

    OAIConfigNodePropertyInteger getProxyPort() const;
    void setProxyPort(const OAIConfigNodePropertyInteger &proxy_port);

    OAIConfigNodePropertyString getProxyUser() const;
    void setProxyUser(const OAIConfigNodePropertyString &proxy_user);

    OAIConfigNodePropertyString getProxyPassword() const;
    void setProxyPassword(const OAIConfigNodePropertyString &proxy_password);

    OAIConfigNodePropertyArray getProxyExceptions() const;
    void setProxyExceptions(const OAIConfigNodePropertyArray &proxy_exceptions);

    virtual bool isSet() const override;

private:
    OAIConfigNodePropertyBoolean proxy_enabled;
    bool m_proxy_enabled_isSet;

    OAIConfigNodePropertyString proxy_host;
    bool m_proxy_host_isSet;

    OAIConfigNodePropertyInteger proxy_port;
    bool m_proxy_port_isSet;

    OAIConfigNodePropertyString proxy_user;
    bool m_proxy_user_isSet;

    OAIConfigNodePropertyString proxy_password;
    bool m_proxy_password_isSet;

    OAIConfigNodePropertyArray proxy_exceptions;
    bool m_proxy_exceptions_isSet;

};

}

#endif // OAIOrgApacheHttpProxyconfiguratorProperties_H
