/**
* Adobe Experience Manager OSGI config (AEM) API
* Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
*
* OpenAPI spec version: 1.0.0-pre.0
* Contact: opensource@shinesolutions.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/


#include "ComAdobeCqSocialGroupImplGroupServiceImplProperties.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

ComAdobeCqSocialGroupImplGroupServiceImplProperties::ComAdobeCqSocialGroupImplGroupServiceImplProperties()
{
    m_MaxWaitTimeIsSet = false;
    m_MinWaitBetweenRetriesIsSet = false;
    
}

ComAdobeCqSocialGroupImplGroupServiceImplProperties::~ComAdobeCqSocialGroupImplGroupServiceImplProperties()
{
}

void ComAdobeCqSocialGroupImplGroupServiceImplProperties::validate()
{
    // TODO: implement validation
}

nlohmann::json ComAdobeCqSocialGroupImplGroupServiceImplProperties::toJson() const
{
    nlohmann::json val = nlohmann::json::object();

    if(m_MaxWaitTimeIsSet)
    {
        val["maxWaitTime"] = ModelBase::toJson(m_MaxWaitTime);
    }
    if(m_MinWaitBetweenRetriesIsSet)
    {
        val["minWaitBetweenRetries"] = ModelBase::toJson(m_MinWaitBetweenRetries);
    }
    

    return val;
}

void ComAdobeCqSocialGroupImplGroupServiceImplProperties::fromJson(nlohmann::json& val)
{
    if(val.find("maxWaitTime") != val.end())
    {
        if(!val["maxWaitTime"].is_null())
        {
            ConfigNodePropertyInteger newItem;
            newItem.fromJson(val["maxWaitTime"]);
            setMaxWaitTime( newItem );
        }
        
    }
    if(val.find("minWaitBetweenRetries") != val.end())
    {
        if(!val["minWaitBetweenRetries"].is_null())
        {
            ConfigNodePropertyInteger newItem;
            newItem.fromJson(val["minWaitBetweenRetries"]);
            setMinWaitBetweenRetries( newItem );
        }
        
    }
    
}


ConfigNodePropertyInteger ComAdobeCqSocialGroupImplGroupServiceImplProperties::getMaxWaitTime() const
{
    return m_MaxWaitTime;
}
void ComAdobeCqSocialGroupImplGroupServiceImplProperties::setMaxWaitTime(ConfigNodePropertyInteger const& value)
{
    m_MaxWaitTime = value;
    m_MaxWaitTimeIsSet = true;
}
bool ComAdobeCqSocialGroupImplGroupServiceImplProperties::maxWaitTimeIsSet() const
{
    return m_MaxWaitTimeIsSet;
}
void ComAdobeCqSocialGroupImplGroupServiceImplProperties::unsetMaxWaitTime()
{
    m_MaxWaitTimeIsSet = false;
}
ConfigNodePropertyInteger ComAdobeCqSocialGroupImplGroupServiceImplProperties::getMinWaitBetweenRetries() const
{
    return m_MinWaitBetweenRetries;
}
void ComAdobeCqSocialGroupImplGroupServiceImplProperties::setMinWaitBetweenRetries(ConfigNodePropertyInteger const& value)
{
    m_MinWaitBetweenRetries = value;
    m_MinWaitBetweenRetriesIsSet = true;
}
bool ComAdobeCqSocialGroupImplGroupServiceImplProperties::minWaitBetweenRetriesIsSet() const
{
    return m_MinWaitBetweenRetriesIsSet;
}
void ComAdobeCqSocialGroupImplGroupServiceImplProperties::unsetMinWaitBetweenRetries()
{
    m_MinWaitBetweenRetriesIsSet = false;
}

}
}
}
}

