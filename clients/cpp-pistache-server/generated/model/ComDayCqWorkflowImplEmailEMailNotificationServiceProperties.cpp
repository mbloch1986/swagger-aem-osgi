/**
* Adobe Experience Manager OSGI config (AEM) API
* Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
*
* OpenAPI spec version: 1.0.0-pre.0
* Contact: opensource@shinesolutions.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/


#include "ComDayCqWorkflowImplEmailEMailNotificationServiceProperties.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

ComDayCqWorkflowImplEmailEMailNotificationServiceProperties::ComDayCqWorkflowImplEmailEMailNotificationServiceProperties()
{
    m_From_addressIsSet = false;
    m_Host_prefixIsSet = false;
    m_Notify_onabortIsSet = false;
    m_Notify_oncompleteIsSet = false;
    m_Notify_oncontainercompleteIsSet = false;
    m_Notify_useronlyIsSet = false;
    
}

ComDayCqWorkflowImplEmailEMailNotificationServiceProperties::~ComDayCqWorkflowImplEmailEMailNotificationServiceProperties()
{
}

void ComDayCqWorkflowImplEmailEMailNotificationServiceProperties::validate()
{
    // TODO: implement validation
}

nlohmann::json ComDayCqWorkflowImplEmailEMailNotificationServiceProperties::toJson() const
{
    nlohmann::json val = nlohmann::json::object();

    if(m_From_addressIsSet)
    {
        val["from.address"] = ModelBase::toJson(m_From_address);
    }
    if(m_Host_prefixIsSet)
    {
        val["host.prefix"] = ModelBase::toJson(m_Host_prefix);
    }
    if(m_Notify_onabortIsSet)
    {
        val["notify.onabort"] = ModelBase::toJson(m_Notify_onabort);
    }
    if(m_Notify_oncompleteIsSet)
    {
        val["notify.oncomplete"] = ModelBase::toJson(m_Notify_oncomplete);
    }
    if(m_Notify_oncontainercompleteIsSet)
    {
        val["notify.oncontainercomplete"] = ModelBase::toJson(m_Notify_oncontainercomplete);
    }
    if(m_Notify_useronlyIsSet)
    {
        val["notify.useronly"] = ModelBase::toJson(m_Notify_useronly);
    }
    

    return val;
}

void ComDayCqWorkflowImplEmailEMailNotificationServiceProperties::fromJson(nlohmann::json& val)
{
    if(val.find("from.address") != val.end())
    {
        if(!val["from.address"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["from.address"]);
            setFromAddress( newItem );
        }
        
    }
    if(val.find("host.prefix") != val.end())
    {
        if(!val["host.prefix"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["host.prefix"]);
            setHostPrefix( newItem );
        }
        
    }
    if(val.find("notify.onabort") != val.end())
    {
        if(!val["notify.onabort"].is_null())
        {
            ConfigNodePropertyBoolean newItem;
            newItem.fromJson(val["notify.onabort"]);
            setNotifyOnabort( newItem );
        }
        
    }
    if(val.find("notify.oncomplete") != val.end())
    {
        if(!val["notify.oncomplete"].is_null())
        {
            ConfigNodePropertyBoolean newItem;
            newItem.fromJson(val["notify.oncomplete"]);
            setNotifyOncomplete( newItem );
        }
        
    }
    if(val.find("notify.oncontainercomplete") != val.end())
    {
        if(!val["notify.oncontainercomplete"].is_null())
        {
            ConfigNodePropertyBoolean newItem;
            newItem.fromJson(val["notify.oncontainercomplete"]);
            setNotifyOncontainercomplete( newItem );
        }
        
    }
    if(val.find("notify.useronly") != val.end())
    {
        if(!val["notify.useronly"].is_null())
        {
            ConfigNodePropertyBoolean newItem;
            newItem.fromJson(val["notify.useronly"]);
            setNotifyUseronly( newItem );
        }
        
    }
    
}


ConfigNodePropertyString ComDayCqWorkflowImplEmailEMailNotificationServiceProperties::getFromAddress() const
{
    return m_From_address;
}
void ComDayCqWorkflowImplEmailEMailNotificationServiceProperties::setFromAddress(ConfigNodePropertyString const& value)
{
    m_From_address = value;
    m_From_addressIsSet = true;
}
bool ComDayCqWorkflowImplEmailEMailNotificationServiceProperties::fromAddressIsSet() const
{
    return m_From_addressIsSet;
}
void ComDayCqWorkflowImplEmailEMailNotificationServiceProperties::unsetFrom_address()
{
    m_From_addressIsSet = false;
}
ConfigNodePropertyString ComDayCqWorkflowImplEmailEMailNotificationServiceProperties::getHostPrefix() const
{
    return m_Host_prefix;
}
void ComDayCqWorkflowImplEmailEMailNotificationServiceProperties::setHostPrefix(ConfigNodePropertyString const& value)
{
    m_Host_prefix = value;
    m_Host_prefixIsSet = true;
}
bool ComDayCqWorkflowImplEmailEMailNotificationServiceProperties::hostPrefixIsSet() const
{
    return m_Host_prefixIsSet;
}
void ComDayCqWorkflowImplEmailEMailNotificationServiceProperties::unsetHost_prefix()
{
    m_Host_prefixIsSet = false;
}
ConfigNodePropertyBoolean ComDayCqWorkflowImplEmailEMailNotificationServiceProperties::getNotifyOnabort() const
{
    return m_Notify_onabort;
}
void ComDayCqWorkflowImplEmailEMailNotificationServiceProperties::setNotifyOnabort(ConfigNodePropertyBoolean const& value)
{
    m_Notify_onabort = value;
    m_Notify_onabortIsSet = true;
}
bool ComDayCqWorkflowImplEmailEMailNotificationServiceProperties::notifyOnabortIsSet() const
{
    return m_Notify_onabortIsSet;
}
void ComDayCqWorkflowImplEmailEMailNotificationServiceProperties::unsetNotify_onabort()
{
    m_Notify_onabortIsSet = false;
}
ConfigNodePropertyBoolean ComDayCqWorkflowImplEmailEMailNotificationServiceProperties::getNotifyOncomplete() const
{
    return m_Notify_oncomplete;
}
void ComDayCqWorkflowImplEmailEMailNotificationServiceProperties::setNotifyOncomplete(ConfigNodePropertyBoolean const& value)
{
    m_Notify_oncomplete = value;
    m_Notify_oncompleteIsSet = true;
}
bool ComDayCqWorkflowImplEmailEMailNotificationServiceProperties::notifyOncompleteIsSet() const
{
    return m_Notify_oncompleteIsSet;
}
void ComDayCqWorkflowImplEmailEMailNotificationServiceProperties::unsetNotify_oncomplete()
{
    m_Notify_oncompleteIsSet = false;
}
ConfigNodePropertyBoolean ComDayCqWorkflowImplEmailEMailNotificationServiceProperties::getNotifyOncontainercomplete() const
{
    return m_Notify_oncontainercomplete;
}
void ComDayCqWorkflowImplEmailEMailNotificationServiceProperties::setNotifyOncontainercomplete(ConfigNodePropertyBoolean const& value)
{
    m_Notify_oncontainercomplete = value;
    m_Notify_oncontainercompleteIsSet = true;
}
bool ComDayCqWorkflowImplEmailEMailNotificationServiceProperties::notifyOncontainercompleteIsSet() const
{
    return m_Notify_oncontainercompleteIsSet;
}
void ComDayCqWorkflowImplEmailEMailNotificationServiceProperties::unsetNotify_oncontainercomplete()
{
    m_Notify_oncontainercompleteIsSet = false;
}
ConfigNodePropertyBoolean ComDayCqWorkflowImplEmailEMailNotificationServiceProperties::getNotifyUseronly() const
{
    return m_Notify_useronly;
}
void ComDayCqWorkflowImplEmailEMailNotificationServiceProperties::setNotifyUseronly(ConfigNodePropertyBoolean const& value)
{
    m_Notify_useronly = value;
    m_Notify_useronlyIsSet = true;
}
bool ComDayCqWorkflowImplEmailEMailNotificationServiceProperties::notifyUseronlyIsSet() const
{
    return m_Notify_useronlyIsSet;
}
void ComDayCqWorkflowImplEmailEMailNotificationServiceProperties::unsetNotify_useronly()
{
    m_Notify_useronlyIsSet = false;
}

}
}
}
}

