/*
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OAS-api/OAS-codegen.git
 * Do not edit the class manually.
 */

/**
 * OASOrgApacheSlingEngineParametersPro
 */
public class OASOrgApacheSlingEngineParametersPro implements OAS.MappedProperties {
    /**
     * Get slingDefaultParameterEncoding
     * @return slingDefaultParameterEncoding
     */
    public OASConfigNodePropertyString slingDefaultParameterEncoding { get; set; }

    /**
     * Get slingDefaultMaxParameters
     * @return slingDefaultMaxParameters
     */
    public OASConfigNodePropertyInteger slingDefaultMaxParameters { get; set; }

    /**
     * Get fileLocation
     * @return fileLocation
     */
    public OASConfigNodePropertyString fileLocation { get; set; }

    /**
     * Get fileThreshold
     * @return fileThreshold
     */
    public OASConfigNodePropertyInteger fileThreshold { get; set; }

    /**
     * Get fileMax
     * @return fileMax
     */
    public OASConfigNodePropertyInteger fileMax { get; set; }

    /**
     * Get requestMax
     * @return requestMax
     */
    public OASConfigNodePropertyInteger requestMax { get; set; }

    /**
     * Get slingDefaultParameterCheckForAdditionalContainerParameters
     * @return slingDefaultParameterCheckForAdditionalContainerParameters
     */
    public OASConfigNodePropertyBoolean slingDefaultParameterCheckForAdditionalContainerParameters { get; set; }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'sling.default.parameter.encoding' => 'slingDefaultParameterEncoding',
        'sling.default.max.parameters' => 'slingDefaultMaxParameters',
        'file.location' => 'fileLocation',
        'file.threshold' => 'fileThreshold',
        'file.max' => 'fileMax',
        'request.max' => 'requestMax',
        'sling.default.parameter.checkForAdditionalContainerParameters' => 'slingDefaultParameterCheckForAdditionalContainerParameters'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    public static OASOrgApacheSlingEngineParametersPro getExample() {
        OASOrgApacheSlingEngineParametersPro orgApacheSlingEngineParametersProperties = new OASOrgApacheSlingEngineParametersPro();
          orgApacheSlingEngineParametersProperties.slingDefaultParameterEncoding = OASConfigNodePropertyString.getExample();
          orgApacheSlingEngineParametersProperties.slingDefaultMaxParameters = OASConfigNodePropertyInteger.getExample();
          orgApacheSlingEngineParametersProperties.fileLocation = OASConfigNodePropertyString.getExample();
          orgApacheSlingEngineParametersProperties.fileThreshold = OASConfigNodePropertyInteger.getExample();
          orgApacheSlingEngineParametersProperties.fileMax = OASConfigNodePropertyInteger.getExample();
          orgApacheSlingEngineParametersProperties.requestMax = OASConfigNodePropertyInteger.getExample();
          orgApacheSlingEngineParametersProperties.slingDefaultParameterCheckForAdditionalContainerParameters = OASConfigNodePropertyBoolean.getExample();
        return orgApacheSlingEngineParametersProperties;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof OASOrgApacheSlingEngineParametersPro) {           
            OASOrgApacheSlingEngineParametersPro orgApacheSlingEngineParametersProperties = (OASOrgApacheSlingEngineParametersPro) obj;
            return this.slingDefaultParameterEncoding == orgApacheSlingEngineParametersProperties.slingDefaultParameterEncoding
                && this.slingDefaultMaxParameters == orgApacheSlingEngineParametersProperties.slingDefaultMaxParameters
                && this.fileLocation == orgApacheSlingEngineParametersProperties.fileLocation
                && this.fileThreshold == orgApacheSlingEngineParametersProperties.fileThreshold
                && this.fileMax == orgApacheSlingEngineParametersProperties.fileMax
                && this.requestMax == orgApacheSlingEngineParametersProperties.requestMax
                && this.slingDefaultParameterCheckForAdditionalContainerParameters == orgApacheSlingEngineParametersProperties.slingDefaultParameterCheckForAdditionalContainerParameters;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (slingDefaultParameterEncoding == null ? 0 : System.hashCode(slingDefaultParameterEncoding));
        hashCode = (17 * hashCode) + (slingDefaultMaxParameters == null ? 0 : System.hashCode(slingDefaultMaxParameters));
        hashCode = (17 * hashCode) + (fileLocation == null ? 0 : System.hashCode(fileLocation));
        hashCode = (17 * hashCode) + (fileThreshold == null ? 0 : System.hashCode(fileThreshold));
        hashCode = (17 * hashCode) + (fileMax == null ? 0 : System.hashCode(fileMax));
        hashCode = (17 * hashCode) + (requestMax == null ? 0 : System.hashCode(requestMax));
        hashCode = (17 * hashCode) + (slingDefaultParameterCheckForAdditionalContainerParameters == null ? 0 : System.hashCode(slingDefaultParameterCheckForAdditionalContainerParameters));
        return hashCode;
    }
}

