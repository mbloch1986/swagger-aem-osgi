/**
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIComDayCqStatisticsImplStatisticsServiceImplProperties.h
 *
 * 
 */

#ifndef OAIComDayCqStatisticsImplStatisticsServiceImplProperties_H_
#define OAIComDayCqStatisticsImplStatisticsServiceImplProperties_H_

#include <QJsonObject>


#include "OAIOAIConfigNodePropertyBoolean.h"
#include "OAIOAIConfigNodePropertyInteger.h"
#include "OAIOAIConfigNodePropertyString.h"

#include "OAIObject.h"

namespace OpenAPI {

class OAIComDayCqStatisticsImplStatisticsServiceImplProperties: public OAIObject {
public:
    OAIComDayCqStatisticsImplStatisticsServiceImplProperties();
    OAIComDayCqStatisticsImplStatisticsServiceImplProperties(QString json);
    ~OAIComDayCqStatisticsImplStatisticsServiceImplProperties();
    void init();
    void cleanup();

    QString asJson () override;
    QJsonObject asJsonObject() override;
    void fromJsonObject(QJsonObject json) override;
    OAIComDayCqStatisticsImplStatisticsServiceImplProperties* fromJson(QString jsonString) override;

    OAIConfigNodePropertyInteger* getSchedulerPeriod();
    void setSchedulerPeriod(OAIConfigNodePropertyInteger* scheduler_period);

    OAIConfigNodePropertyBoolean* getSchedulerConcurrent();
    void setSchedulerConcurrent(OAIConfigNodePropertyBoolean* scheduler_concurrent);

    OAIConfigNodePropertyString* getPath();
    void setPath(OAIConfigNodePropertyString* path);

    OAIConfigNodePropertyString* getWorkspace();
    void setWorkspace(OAIConfigNodePropertyString* workspace);

    OAIConfigNodePropertyString* getKeywordsPath();
    void setKeywordsPath(OAIConfigNodePropertyString* keywords_path);

    OAIConfigNodePropertyBoolean* getAsyncEntries();
    void setAsyncEntries(OAIConfigNodePropertyBoolean* async_entries);


    virtual bool isSet() override;

private:
    OAIConfigNodePropertyInteger* scheduler_period;
    bool m_scheduler_period_isSet;

    OAIConfigNodePropertyBoolean* scheduler_concurrent;
    bool m_scheduler_concurrent_isSet;

    OAIConfigNodePropertyString* path;
    bool m_path_isSet;

    OAIConfigNodePropertyString* workspace;
    bool m_workspace_isSet;

    OAIConfigNodePropertyString* keywords_path;
    bool m_keywords_path_isSet;

    OAIConfigNodePropertyBoolean* async_entries;
    bool m_async_entries_isSet;

};

}

#endif /* OAIComDayCqStatisticsImplStatisticsServiceImplProperties_H_ */
