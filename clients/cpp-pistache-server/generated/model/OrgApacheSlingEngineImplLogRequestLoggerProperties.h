/**
* Adobe Experience Manager OSGI config (AEM) API
* Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
*
* OpenAPI spec version: 1.0.0-pre.0
* Contact: opensource@shinesolutions.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
/*
 * OrgApacheSlingEngineImplLogRequestLoggerProperties.h
 *
 * 
 */

#ifndef OrgApacheSlingEngineImplLogRequestLoggerProperties_H_
#define OrgApacheSlingEngineImplLogRequestLoggerProperties_H_


#include "ModelBase.h"

#include "ConfigNodePropertyBoolean.h"
#include "ConfigNodePropertyDropDown.h"
#include "ConfigNodePropertyString.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
/// 
/// </summary>
class  OrgApacheSlingEngineImplLogRequestLoggerProperties
    : public ModelBase
{
public:
    OrgApacheSlingEngineImplLogRequestLoggerProperties();
    virtual ~OrgApacheSlingEngineImplLogRequestLoggerProperties();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    nlohmann::json toJson() const override;
    void fromJson(nlohmann::json& json) override;

    /////////////////////////////////////////////
    /// OrgApacheSlingEngineImplLogRequestLoggerProperties members

    /// <summary>
    /// 
    /// </summary>
    ConfigNodePropertyString getRequestLogOutput() const;
    void setRequestLogOutput(ConfigNodePropertyString const& value);
    bool requestLogOutputIsSet() const;
    void unsetRequest_log_output();
    /// <summary>
    /// 
    /// </summary>
    ConfigNodePropertyDropDown getRequestLogOutputtype() const;
    void setRequestLogOutputtype(ConfigNodePropertyDropDown const& value);
    bool requestLogOutputtypeIsSet() const;
    void unsetRequest_log_outputtype();
    /// <summary>
    /// 
    /// </summary>
    ConfigNodePropertyBoolean getRequestLogEnabled() const;
    void setRequestLogEnabled(ConfigNodePropertyBoolean const& value);
    bool requestLogEnabledIsSet() const;
    void unsetRequest_log_enabled();
    /// <summary>
    /// 
    /// </summary>
    ConfigNodePropertyString getAccessLogOutput() const;
    void setAccessLogOutput(ConfigNodePropertyString const& value);
    bool accessLogOutputIsSet() const;
    void unsetAccess_log_output();
    /// <summary>
    /// 
    /// </summary>
    ConfigNodePropertyDropDown getAccessLogOutputtype() const;
    void setAccessLogOutputtype(ConfigNodePropertyDropDown const& value);
    bool accessLogOutputtypeIsSet() const;
    void unsetAccess_log_outputtype();
    /// <summary>
    /// 
    /// </summary>
    ConfigNodePropertyBoolean getAccessLogEnabled() const;
    void setAccessLogEnabled(ConfigNodePropertyBoolean const& value);
    bool accessLogEnabledIsSet() const;
    void unsetAccess_log_enabled();

protected:
    ConfigNodePropertyString m_Request_log_output;
    bool m_Request_log_outputIsSet;
    ConfigNodePropertyDropDown m_Request_log_outputtype;
    bool m_Request_log_outputtypeIsSet;
    ConfigNodePropertyBoolean m_Request_log_enabled;
    bool m_Request_log_enabledIsSet;
    ConfigNodePropertyString m_Access_log_output;
    bool m_Access_log_outputIsSet;
    ConfigNodePropertyDropDown m_Access_log_outputtype;
    bool m_Access_log_outputtypeIsSet;
    ConfigNodePropertyBoolean m_Access_log_enabled;
    bool m_Access_log_enabledIsSet;
};

}
}
}
}

#endif /* OrgApacheSlingEngineImplLogRequestLoggerProperties_H_ */
