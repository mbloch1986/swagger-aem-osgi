/**
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIComDayCommonsHttpclientProperties.h
 *
 * 
 */

#ifndef OAIComDayCommonsHttpclientProperties_H_
#define OAIComDayCommonsHttpclientProperties_H_

#include <QJsonObject>


#include "OAIOAIConfigNodePropertyArray.h"
#include "OAIOAIConfigNodePropertyBoolean.h"
#include "OAIOAIConfigNodePropertyString.h"

#include "OAIObject.h"

namespace OpenAPI {

class OAIComDayCommonsHttpclientProperties: public OAIObject {
public:
    OAIComDayCommonsHttpclientProperties();
    OAIComDayCommonsHttpclientProperties(QString json);
    ~OAIComDayCommonsHttpclientProperties();
    void init();
    void cleanup();

    QString asJson () override;
    QJsonObject asJsonObject() override;
    void fromJsonObject(QJsonObject json) override;
    OAIComDayCommonsHttpclientProperties* fromJson(QString jsonString) override;

    OAIConfigNodePropertyBoolean* getProxyEnabled();
    void setProxyEnabled(OAIConfigNodePropertyBoolean* proxy_enabled);

    OAIConfigNodePropertyString* getProxyHost();
    void setProxyHost(OAIConfigNodePropertyString* proxy_host);

    OAIConfigNodePropertyString* getProxyUser();
    void setProxyUser(OAIConfigNodePropertyString* proxy_user);

    OAIConfigNodePropertyString* getProxyPassword();
    void setProxyPassword(OAIConfigNodePropertyString* proxy_password);

    OAIConfigNodePropertyString* getProxyNtlmHost();
    void setProxyNtlmHost(OAIConfigNodePropertyString* proxy_ntlm_host);

    OAIConfigNodePropertyString* getProxyNtlmDomain();
    void setProxyNtlmDomain(OAIConfigNodePropertyString* proxy_ntlm_domain);

    OAIConfigNodePropertyArray* getProxyExceptions();
    void setProxyExceptions(OAIConfigNodePropertyArray* proxy_exceptions);


    virtual bool isSet() override;

private:
    OAIConfigNodePropertyBoolean* proxy_enabled;
    bool m_proxy_enabled_isSet;

    OAIConfigNodePropertyString* proxy_host;
    bool m_proxy_host_isSet;

    OAIConfigNodePropertyString* proxy_user;
    bool m_proxy_user_isSet;

    OAIConfigNodePropertyString* proxy_password;
    bool m_proxy_password_isSet;

    OAIConfigNodePropertyString* proxy_ntlm_host;
    bool m_proxy_ntlm_host_isSet;

    OAIConfigNodePropertyString* proxy_ntlm_domain;
    bool m_proxy_ntlm_domain_isSet;

    OAIConfigNodePropertyArray* proxy_exceptions;
    bool m_proxy_exceptions_isSet;

};

}

#endif /* OAIComDayCommonsHttpclientProperties_H_ */
