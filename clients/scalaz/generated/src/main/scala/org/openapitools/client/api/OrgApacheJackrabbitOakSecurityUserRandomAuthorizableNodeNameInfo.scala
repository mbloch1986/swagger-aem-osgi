package org.openapitools.client.api

import argonaut._
import argonaut.EncodeJson._
import argonaut.DecodeJson._

import org.http4s.{EntityDecoder, EntityEncoder}
import org.http4s.argonaut._
import org.joda.time.DateTime
import OrgApacheJackrabbitOakSecurityUserRandomAuthorizableNodeNameInfo._

case class OrgApacheJackrabbitOakSecurityUserRandomAuthorizableNodeNameInfo (
  pid: Option[String],
title: Option[String],
description: Option[String],
properties: Option[OrgApacheJackrabbitOakSecurityUserRandomAuthorizableNodeNameProperties],
bundleLocation: Option[String],
serviceLocation: Option[String])

object OrgApacheJackrabbitOakSecurityUserRandomAuthorizableNodeNameInfo {
  import DateTimeCodecs._

  implicit val OrgApacheJackrabbitOakSecurityUserRandomAuthorizableNodeNameInfoCodecJson: CodecJson[OrgApacheJackrabbitOakSecurityUserRandomAuthorizableNodeNameInfo] = CodecJson.derive[OrgApacheJackrabbitOakSecurityUserRandomAuthorizableNodeNameInfo]
  implicit val OrgApacheJackrabbitOakSecurityUserRandomAuthorizableNodeNameInfoDecoder: EntityDecoder[OrgApacheJackrabbitOakSecurityUserRandomAuthorizableNodeNameInfo] = jsonOf[OrgApacheJackrabbitOakSecurityUserRandomAuthorizableNodeNameInfo]
  implicit val OrgApacheJackrabbitOakSecurityUserRandomAuthorizableNodeNameInfoEncoder: EntityEncoder[OrgApacheJackrabbitOakSecurityUserRandomAuthorizableNodeNameInfo] = jsonEncoderOf[OrgApacheJackrabbitOakSecurityUserRandomAuthorizableNodeNameInfo]
}
