# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server.models.config_node_property_string import ConfigNodePropertyString  # noqa: F401,E501
from openapi_server import util


class ComAdobeXmpWorkerFilesNcommXMPFilesNCommProperties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, max_connections: ConfigNodePropertyString=None, max_requests: ConfigNodePropertyString=None, request_timeout: ConfigNodePropertyString=None, log_dir: ConfigNodePropertyString=None):  # noqa: E501
        """ComAdobeXmpWorkerFilesNcommXMPFilesNCommProperties - a model defined in OpenAPI

        :param max_connections: The max_connections of this ComAdobeXmpWorkerFilesNcommXMPFilesNCommProperties.  # noqa: E501
        :type max_connections: ConfigNodePropertyString
        :param max_requests: The max_requests of this ComAdobeXmpWorkerFilesNcommXMPFilesNCommProperties.  # noqa: E501
        :type max_requests: ConfigNodePropertyString
        :param request_timeout: The request_timeout of this ComAdobeXmpWorkerFilesNcommXMPFilesNCommProperties.  # noqa: E501
        :type request_timeout: ConfigNodePropertyString
        :param log_dir: The log_dir of this ComAdobeXmpWorkerFilesNcommXMPFilesNCommProperties.  # noqa: E501
        :type log_dir: ConfigNodePropertyString
        """
        self.openapi_types = {
            'max_connections': ConfigNodePropertyString,
            'max_requests': ConfigNodePropertyString,
            'request_timeout': ConfigNodePropertyString,
            'log_dir': ConfigNodePropertyString
        }

        self.attribute_map = {
            'max_connections': 'maxConnections',
            'max_requests': 'maxRequests',
            'request_timeout': 'requestTimeout',
            'log_dir': 'logDir'
        }

        self._max_connections = max_connections
        self._max_requests = max_requests
        self._request_timeout = request_timeout
        self._log_dir = log_dir

    @classmethod
    def from_dict(cls, dikt) -> 'ComAdobeXmpWorkerFilesNcommXMPFilesNCommProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The comAdobeXmpWorkerFilesNcommXMPFilesNCommProperties of this ComAdobeXmpWorkerFilesNcommXMPFilesNCommProperties.  # noqa: E501
        :rtype: ComAdobeXmpWorkerFilesNcommXMPFilesNCommProperties
        """
        return util.deserialize_model(dikt, cls)

    @property
    def max_connections(self) -> ConfigNodePropertyString:
        """Gets the max_connections of this ComAdobeXmpWorkerFilesNcommXMPFilesNCommProperties.


        :return: The max_connections of this ComAdobeXmpWorkerFilesNcommXMPFilesNCommProperties.
        :rtype: ConfigNodePropertyString
        """
        return self._max_connections

    @max_connections.setter
    def max_connections(self, max_connections: ConfigNodePropertyString):
        """Sets the max_connections of this ComAdobeXmpWorkerFilesNcommXMPFilesNCommProperties.


        :param max_connections: The max_connections of this ComAdobeXmpWorkerFilesNcommXMPFilesNCommProperties.
        :type max_connections: ConfigNodePropertyString
        """

        self._max_connections = max_connections

    @property
    def max_requests(self) -> ConfigNodePropertyString:
        """Gets the max_requests of this ComAdobeXmpWorkerFilesNcommXMPFilesNCommProperties.


        :return: The max_requests of this ComAdobeXmpWorkerFilesNcommXMPFilesNCommProperties.
        :rtype: ConfigNodePropertyString
        """
        return self._max_requests

    @max_requests.setter
    def max_requests(self, max_requests: ConfigNodePropertyString):
        """Sets the max_requests of this ComAdobeXmpWorkerFilesNcommXMPFilesNCommProperties.


        :param max_requests: The max_requests of this ComAdobeXmpWorkerFilesNcommXMPFilesNCommProperties.
        :type max_requests: ConfigNodePropertyString
        """

        self._max_requests = max_requests

    @property
    def request_timeout(self) -> ConfigNodePropertyString:
        """Gets the request_timeout of this ComAdobeXmpWorkerFilesNcommXMPFilesNCommProperties.


        :return: The request_timeout of this ComAdobeXmpWorkerFilesNcommXMPFilesNCommProperties.
        :rtype: ConfigNodePropertyString
        """
        return self._request_timeout

    @request_timeout.setter
    def request_timeout(self, request_timeout: ConfigNodePropertyString):
        """Sets the request_timeout of this ComAdobeXmpWorkerFilesNcommXMPFilesNCommProperties.


        :param request_timeout: The request_timeout of this ComAdobeXmpWorkerFilesNcommXMPFilesNCommProperties.
        :type request_timeout: ConfigNodePropertyString
        """

        self._request_timeout = request_timeout

    @property
    def log_dir(self) -> ConfigNodePropertyString:
        """Gets the log_dir of this ComAdobeXmpWorkerFilesNcommXMPFilesNCommProperties.


        :return: The log_dir of this ComAdobeXmpWorkerFilesNcommXMPFilesNCommProperties.
        :rtype: ConfigNodePropertyString
        """
        return self._log_dir

    @log_dir.setter
    def log_dir(self, log_dir: ConfigNodePropertyString):
        """Sets the log_dir of this ComAdobeXmpWorkerFilesNcommXMPFilesNCommProperties.


        :param log_dir: The log_dir of this ComAdobeXmpWorkerFilesNcommXMPFilesNCommProperties.
        :type log_dir: ConfigNodePropertyString
        """

        self._log_dir = log_dir
