/**
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


#include "OAIOrgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplExProperties.h"

#include "OAIHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace OpenAPI {

OAIOrgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplExProperties::OAIOrgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplExProperties(QString json) {
    this->fromJson(json);
}

OAIOrgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplExProperties::OAIOrgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplExProperties() {
    this->init();
}

OAIOrgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplExProperties::~OAIOrgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplExProperties() {
    
}

void
OAIOrgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplExProperties::init() {
    m_jaas_ranking_isSet = false;
    m_jaas_control_flag_isSet = false;
    m_jaas_realm_name_isSet = false;
    m_idp_name_isSet = false;
    m_sync_handler_name_isSet = false;
}

void
OAIOrgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplExProperties::fromJson(QString jsonString) {
    QByteArray array (jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void
OAIOrgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplExProperties::fromJsonObject(QJsonObject json) {
    ::OpenAPI::fromJsonValue(jaas_ranking, json[QString("jaas.ranking")]);
    
    ::OpenAPI::fromJsonValue(jaas_control_flag, json[QString("jaas.controlFlag")]);
    
    ::OpenAPI::fromJsonValue(jaas_realm_name, json[QString("jaas.realmName")]);
    
    ::OpenAPI::fromJsonValue(idp_name, json[QString("idp.name")]);
    
    ::OpenAPI::fromJsonValue(sync_handler_name, json[QString("sync.handlerName")]);
    
}

QString
OAIOrgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplExProperties::asJson () const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject
OAIOrgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplExProperties::asJsonObject() const {
    QJsonObject obj;
	if(jaas_ranking.isSet()){
        obj.insert(QString("jaas.ranking"), ::OpenAPI::toJsonValue(jaas_ranking));
    }
	if(jaas_control_flag.isSet()){
        obj.insert(QString("jaas.controlFlag"), ::OpenAPI::toJsonValue(jaas_control_flag));
    }
	if(jaas_realm_name.isSet()){
        obj.insert(QString("jaas.realmName"), ::OpenAPI::toJsonValue(jaas_realm_name));
    }
	if(idp_name.isSet()){
        obj.insert(QString("idp.name"), ::OpenAPI::toJsonValue(idp_name));
    }
	if(sync_handler_name.isSet()){
        obj.insert(QString("sync.handlerName"), ::OpenAPI::toJsonValue(sync_handler_name));
    }
    return obj;
}

OAIConfigNodePropertyInteger
OAIOrgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplExProperties::getJaasRanking() const {
    return jaas_ranking;
}
void
OAIOrgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplExProperties::setJaasRanking(const OAIConfigNodePropertyInteger &jaas_ranking) {
    this->jaas_ranking = jaas_ranking;
    this->m_jaas_ranking_isSet = true;
}

OAIConfigNodePropertyString
OAIOrgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplExProperties::getJaasControlFlag() const {
    return jaas_control_flag;
}
void
OAIOrgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplExProperties::setJaasControlFlag(const OAIConfigNodePropertyString &jaas_control_flag) {
    this->jaas_control_flag = jaas_control_flag;
    this->m_jaas_control_flag_isSet = true;
}

OAIConfigNodePropertyString
OAIOrgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplExProperties::getJaasRealmName() const {
    return jaas_realm_name;
}
void
OAIOrgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplExProperties::setJaasRealmName(const OAIConfigNodePropertyString &jaas_realm_name) {
    this->jaas_realm_name = jaas_realm_name;
    this->m_jaas_realm_name_isSet = true;
}

OAIConfigNodePropertyString
OAIOrgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplExProperties::getIdpName() const {
    return idp_name;
}
void
OAIOrgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplExProperties::setIdpName(const OAIConfigNodePropertyString &idp_name) {
    this->idp_name = idp_name;
    this->m_idp_name_isSet = true;
}

OAIConfigNodePropertyString
OAIOrgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplExProperties::getSyncHandlerName() const {
    return sync_handler_name;
}
void
OAIOrgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplExProperties::setSyncHandlerName(const OAIConfigNodePropertyString &sync_handler_name) {
    this->sync_handler_name = sync_handler_name;
    this->m_sync_handler_name_isSet = true;
}


bool
OAIOrgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplExProperties::isSet() const {
    bool isObjectUpdated = false;
    do{ 
        if(jaas_ranking.isSet()){ isObjectUpdated = true; break;}
    
        if(jaas_control_flag.isSet()){ isObjectUpdated = true; break;}
    
        if(jaas_realm_name.isSet()){ isObjectUpdated = true; break;}
    
        if(idp_name.isSet()){ isObjectUpdated = true; break;}
    
        if(sync_handler_name.isSet()){ isObjectUpdated = true; break;}
    }while(false);
    return isObjectUpdated;
}

}

