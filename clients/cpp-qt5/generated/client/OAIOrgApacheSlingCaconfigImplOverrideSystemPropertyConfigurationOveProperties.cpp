/**
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


#include "OAIOrgApacheSlingCaconfigImplOverrideSystemPropertyConfigurationOveProperties.h"

#include "OAIHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace OpenAPI {

OAIOrgApacheSlingCaconfigImplOverrideSystemPropertyConfigurationOveProperties::OAIOrgApacheSlingCaconfigImplOverrideSystemPropertyConfigurationOveProperties(QString json) {
    init();
    this->fromJson(json);
}

OAIOrgApacheSlingCaconfigImplOverrideSystemPropertyConfigurationOveProperties::OAIOrgApacheSlingCaconfigImplOverrideSystemPropertyConfigurationOveProperties() {
    init();
}

OAIOrgApacheSlingCaconfigImplOverrideSystemPropertyConfigurationOveProperties::~OAIOrgApacheSlingCaconfigImplOverrideSystemPropertyConfigurationOveProperties() {
    this->cleanup();
}

void
OAIOrgApacheSlingCaconfigImplOverrideSystemPropertyConfigurationOveProperties::init() {
    enabled = new OAIConfigNodePropertyBoolean();
    m_enabled_isSet = false;
    service_ranking = new OAIConfigNodePropertyInteger();
    m_service_ranking_isSet = false;
}

void
OAIOrgApacheSlingCaconfigImplOverrideSystemPropertyConfigurationOveProperties::cleanup() {
    if(enabled != nullptr) { 
        delete enabled;
    }
    if(service_ranking != nullptr) { 
        delete service_ranking;
    }
}

OAIOrgApacheSlingCaconfigImplOverrideSystemPropertyConfigurationOveProperties*
OAIOrgApacheSlingCaconfigImplOverrideSystemPropertyConfigurationOveProperties::fromJson(QString json) {
    QByteArray array (json.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
    return this;
}

void
OAIOrgApacheSlingCaconfigImplOverrideSystemPropertyConfigurationOveProperties::fromJsonObject(QJsonObject pJson) {
    ::OpenAPI::setValue(&enabled, pJson["enabled"], "OAIConfigNodePropertyBoolean", "OAIConfigNodePropertyBoolean");
    
    ::OpenAPI::setValue(&service_ranking, pJson["service.ranking"], "OAIConfigNodePropertyInteger", "OAIConfigNodePropertyInteger");
    
}

QString
OAIOrgApacheSlingCaconfigImplOverrideSystemPropertyConfigurationOveProperties::asJson ()
{
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject
OAIOrgApacheSlingCaconfigImplOverrideSystemPropertyConfigurationOveProperties::asJsonObject() {
    QJsonObject obj;
    if((enabled != nullptr) && (enabled->isSet())){
        toJsonValue(QString("enabled"), enabled, obj, QString("OAIConfigNodePropertyBoolean"));
    }
    if((service_ranking != nullptr) && (service_ranking->isSet())){
        toJsonValue(QString("service.ranking"), service_ranking, obj, QString("OAIConfigNodePropertyInteger"));
    }

    return obj;
}

OAIConfigNodePropertyBoolean*
OAIOrgApacheSlingCaconfigImplOverrideSystemPropertyConfigurationOveProperties::getEnabled() {
    return enabled;
}
void
OAIOrgApacheSlingCaconfigImplOverrideSystemPropertyConfigurationOveProperties::setEnabled(OAIConfigNodePropertyBoolean* enabled) {
    this->enabled = enabled;
    this->m_enabled_isSet = true;
}

OAIConfigNodePropertyInteger*
OAIOrgApacheSlingCaconfigImplOverrideSystemPropertyConfigurationOveProperties::getServiceRanking() {
    return service_ranking;
}
void
OAIOrgApacheSlingCaconfigImplOverrideSystemPropertyConfigurationOveProperties::setServiceRanking(OAIConfigNodePropertyInteger* service_ranking) {
    this->service_ranking = service_ranking;
    this->m_service_ranking_isSet = true;
}


bool
OAIOrgApacheSlingCaconfigImplOverrideSystemPropertyConfigurationOveProperties::isSet(){
    bool isObjectUpdated = false;
    do{
        if(enabled != nullptr && enabled->isSet()){ isObjectUpdated = true; break;}
        if(service_ranking != nullptr && service_ranking->isSet()){ isObjectUpdated = true; break;}
    }while(false);
    return isObjectUpdated;
}
}

