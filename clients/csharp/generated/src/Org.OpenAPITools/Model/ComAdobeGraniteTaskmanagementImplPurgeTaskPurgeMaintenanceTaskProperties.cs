/* 
 * Adobe Experience Manager OSGI config (AEM) API
 *
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Org.OpenAPITools.Client.OpenAPIDateConverter;

namespace Org.OpenAPITools.Model
{
    /// <summary>
    /// ComAdobeGraniteTaskmanagementImplPurgeTaskPurgeMaintenanceTaskProperties
    /// </summary>
    [DataContract]
    public partial class ComAdobeGraniteTaskmanagementImplPurgeTaskPurgeMaintenanceTaskProperties :  IEquatable<ComAdobeGraniteTaskmanagementImplPurgeTaskPurgeMaintenanceTaskProperties>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ComAdobeGraniteTaskmanagementImplPurgeTaskPurgeMaintenanceTaskProperties" /> class.
        /// </summary>
        /// <param name="purgeCompleted">purgeCompleted.</param>
        /// <param name="completedAge">completedAge.</param>
        /// <param name="purgeActive">purgeActive.</param>
        /// <param name="activeAge">activeAge.</param>
        /// <param name="saveThreshold">saveThreshold.</param>
        public ComAdobeGraniteTaskmanagementImplPurgeTaskPurgeMaintenanceTaskProperties(ConfigNodePropertyBoolean purgeCompleted = default(ConfigNodePropertyBoolean), ConfigNodePropertyInteger completedAge = default(ConfigNodePropertyInteger), ConfigNodePropertyBoolean purgeActive = default(ConfigNodePropertyBoolean), ConfigNodePropertyInteger activeAge = default(ConfigNodePropertyInteger), ConfigNodePropertyInteger saveThreshold = default(ConfigNodePropertyInteger))
        {
            this.PurgeCompleted = purgeCompleted;
            this.CompletedAge = completedAge;
            this.PurgeActive = purgeActive;
            this.ActiveAge = activeAge;
            this.SaveThreshold = saveThreshold;
        }
        
        /// <summary>
        /// Gets or Sets PurgeCompleted
        /// </summary>
        [DataMember(Name="purgeCompleted", EmitDefaultValue=false)]
        public ConfigNodePropertyBoolean PurgeCompleted { get; set; }

        /// <summary>
        /// Gets or Sets CompletedAge
        /// </summary>
        [DataMember(Name="completedAge", EmitDefaultValue=false)]
        public ConfigNodePropertyInteger CompletedAge { get; set; }

        /// <summary>
        /// Gets or Sets PurgeActive
        /// </summary>
        [DataMember(Name="purgeActive", EmitDefaultValue=false)]
        public ConfigNodePropertyBoolean PurgeActive { get; set; }

        /// <summary>
        /// Gets or Sets ActiveAge
        /// </summary>
        [DataMember(Name="activeAge", EmitDefaultValue=false)]
        public ConfigNodePropertyInteger ActiveAge { get; set; }

        /// <summary>
        /// Gets or Sets SaveThreshold
        /// </summary>
        [DataMember(Name="saveThreshold", EmitDefaultValue=false)]
        public ConfigNodePropertyInteger SaveThreshold { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class ComAdobeGraniteTaskmanagementImplPurgeTaskPurgeMaintenanceTaskProperties {\n");
            sb.Append("  PurgeCompleted: ").Append(PurgeCompleted).Append("\n");
            sb.Append("  CompletedAge: ").Append(CompletedAge).Append("\n");
            sb.Append("  PurgeActive: ").Append(PurgeActive).Append("\n");
            sb.Append("  ActiveAge: ").Append(ActiveAge).Append("\n");
            sb.Append("  SaveThreshold: ").Append(SaveThreshold).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as ComAdobeGraniteTaskmanagementImplPurgeTaskPurgeMaintenanceTaskProperties);
        }

        /// <summary>
        /// Returns true if ComAdobeGraniteTaskmanagementImplPurgeTaskPurgeMaintenanceTaskProperties instances are equal
        /// </summary>
        /// <param name="input">Instance of ComAdobeGraniteTaskmanagementImplPurgeTaskPurgeMaintenanceTaskProperties to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(ComAdobeGraniteTaskmanagementImplPurgeTaskPurgeMaintenanceTaskProperties input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.PurgeCompleted == input.PurgeCompleted ||
                    (this.PurgeCompleted != null &&
                    this.PurgeCompleted.Equals(input.PurgeCompleted))
                ) && 
                (
                    this.CompletedAge == input.CompletedAge ||
                    (this.CompletedAge != null &&
                    this.CompletedAge.Equals(input.CompletedAge))
                ) && 
                (
                    this.PurgeActive == input.PurgeActive ||
                    (this.PurgeActive != null &&
                    this.PurgeActive.Equals(input.PurgeActive))
                ) && 
                (
                    this.ActiveAge == input.ActiveAge ||
                    (this.ActiveAge != null &&
                    this.ActiveAge.Equals(input.ActiveAge))
                ) && 
                (
                    this.SaveThreshold == input.SaveThreshold ||
                    (this.SaveThreshold != null &&
                    this.SaveThreshold.Equals(input.SaveThreshold))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.PurgeCompleted != null)
                    hashCode = hashCode * 59 + this.PurgeCompleted.GetHashCode();
                if (this.CompletedAge != null)
                    hashCode = hashCode * 59 + this.CompletedAge.GetHashCode();
                if (this.PurgeActive != null)
                    hashCode = hashCode * 59 + this.PurgeActive.GetHashCode();
                if (this.ActiveAge != null)
                    hashCode = hashCode * 59 + this.ActiveAge.GetHashCode();
                if (this.SaveThreshold != null)
                    hashCode = hashCode * 59 + this.SaveThreshold.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
