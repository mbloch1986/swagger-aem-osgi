/**
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIOrgApacheSlingJcrWebdavImplServletsSimpleWebDavServletProperties.h
 *
 * 
 */

#ifndef OAIOrgApacheSlingJcrWebdavImplServletsSimpleWebDavServletProperties_H_
#define OAIOrgApacheSlingJcrWebdavImplServletsSimpleWebDavServletProperties_H_

#include <QJsonObject>


#include "OAIOAIConfigNodePropertyArray.h"
#include "OAIOAIConfigNodePropertyBoolean.h"
#include "OAIOAIConfigNodePropertyString.h"

#include "OAIObject.h"

namespace OpenAPI {

class OAIOrgApacheSlingJcrWebdavImplServletsSimpleWebDavServletProperties: public OAIObject {
public:
    OAIOrgApacheSlingJcrWebdavImplServletsSimpleWebDavServletProperties();
    OAIOrgApacheSlingJcrWebdavImplServletsSimpleWebDavServletProperties(QString json);
    ~OAIOrgApacheSlingJcrWebdavImplServletsSimpleWebDavServletProperties();
    void init();
    void cleanup();

    QString asJson () override;
    QJsonObject asJsonObject() override;
    void fromJsonObject(QJsonObject json) override;
    OAIOrgApacheSlingJcrWebdavImplServletsSimpleWebDavServletProperties* fromJson(QString jsonString) override;

    OAIConfigNodePropertyString* getDavRoot();
    void setDavRoot(OAIConfigNodePropertyString* dav_root);

    OAIConfigNodePropertyBoolean* getDavCreateAbsoluteUri();
    void setDavCreateAbsoluteUri(OAIConfigNodePropertyBoolean* dav_create_absolute_uri);

    OAIConfigNodePropertyString* getDavRealm();
    void setDavRealm(OAIConfigNodePropertyString* dav_realm);

    OAIConfigNodePropertyArray* getCollectionTypes();
    void setCollectionTypes(OAIConfigNodePropertyArray* collection_types);

    OAIConfigNodePropertyArray* getFilterPrefixes();
    void setFilterPrefixes(OAIConfigNodePropertyArray* filter_prefixes);

    OAIConfigNodePropertyString* getFilterTypes();
    void setFilterTypes(OAIConfigNodePropertyString* filter_types);

    OAIConfigNodePropertyString* getFilterUris();
    void setFilterUris(OAIConfigNodePropertyString* filter_uris);

    OAIConfigNodePropertyString* getTypeCollections();
    void setTypeCollections(OAIConfigNodePropertyString* type_collections);

    OAIConfigNodePropertyString* getTypeNoncollections();
    void setTypeNoncollections(OAIConfigNodePropertyString* type_noncollections);

    OAIConfigNodePropertyString* getTypeContent();
    void setTypeContent(OAIConfigNodePropertyString* type_content);


    virtual bool isSet() override;

private:
    OAIConfigNodePropertyString* dav_root;
    bool m_dav_root_isSet;

    OAIConfigNodePropertyBoolean* dav_create_absolute_uri;
    bool m_dav_create_absolute_uri_isSet;

    OAIConfigNodePropertyString* dav_realm;
    bool m_dav_realm_isSet;

    OAIConfigNodePropertyArray* collection_types;
    bool m_collection_types_isSet;

    OAIConfigNodePropertyArray* filter_prefixes;
    bool m_filter_prefixes_isSet;

    OAIConfigNodePropertyString* filter_types;
    bool m_filter_types_isSet;

    OAIConfigNodePropertyString* filter_uris;
    bool m_filter_uris_isSet;

    OAIConfigNodePropertyString* type_collections;
    bool m_type_collections_isSet;

    OAIConfigNodePropertyString* type_noncollections;
    bool m_type_noncollections_isSet;

    OAIConfigNodePropertyString* type_content;
    bool m_type_content_isSet;

};

}

#endif /* OAIOrgApacheSlingJcrWebdavImplServletsSimpleWebDavServletProperties_H_ */
