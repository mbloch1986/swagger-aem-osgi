//
// OrgApacheSlingJcrWebdavImplServletsSimpleWebDavServletProperties.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation



public struct OrgApacheSlingJcrWebdavImplServletsSimpleWebDavServletProperties: Codable {

    public var davRoot: ConfigNodePropertyString?
    public var davCreateAbsoluteUri: ConfigNodePropertyBoolean?
    public var davRealm: ConfigNodePropertyString?
    public var collectionTypes: ConfigNodePropertyArray?
    public var filterPrefixes: ConfigNodePropertyArray?
    public var filterTypes: ConfigNodePropertyString?
    public var filterUris: ConfigNodePropertyString?
    public var typeCollections: ConfigNodePropertyString?
    public var typeNoncollections: ConfigNodePropertyString?
    public var typeContent: ConfigNodePropertyString?

    public init(davRoot: ConfigNodePropertyString?, davCreateAbsoluteUri: ConfigNodePropertyBoolean?, davRealm: ConfigNodePropertyString?, collectionTypes: ConfigNodePropertyArray?, filterPrefixes: ConfigNodePropertyArray?, filterTypes: ConfigNodePropertyString?, filterUris: ConfigNodePropertyString?, typeCollections: ConfigNodePropertyString?, typeNoncollections: ConfigNodePropertyString?, typeContent: ConfigNodePropertyString?) {
        self.davRoot = davRoot
        self.davCreateAbsoluteUri = davCreateAbsoluteUri
        self.davRealm = davRealm
        self.collectionTypes = collectionTypes
        self.filterPrefixes = filterPrefixes
        self.filterTypes = filterTypes
        self.filterUris = filterUris
        self.typeCollections = typeCollections
        self.typeNoncollections = typeNoncollections
        self.typeContent = typeContent
    }

    public enum CodingKeys: String, CodingKey { 
        case davRoot = "dav.root"
        case davCreateAbsoluteUri = "dav.create-absolute-uri"
        case davRealm = "dav.realm"
        case collectionTypes = "collection.types"
        case filterPrefixes = "filter.prefixes"
        case filterTypes = "filter.types"
        case filterUris = "filter.uris"
        case typeCollections = "type.collections"
        case typeNoncollections = "type.noncollections"
        case typeContent = "type.content"
    }


}

