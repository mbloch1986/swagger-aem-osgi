/**
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIComDayCqDamCoreImplExpiryNotificationJobImplProperties.h
 *
 * 
 */

#ifndef OAIComDayCqDamCoreImplExpiryNotificationJobImplProperties_H_
#define OAIComDayCqDamCoreImplExpiryNotificationJobImplProperties_H_

#include <QJsonObject>


#include "OAIOAIConfigNodePropertyBoolean.h"
#include "OAIOAIConfigNodePropertyInteger.h"
#include "OAIOAIConfigNodePropertyString.h"

#include "OAIObject.h"

namespace OpenAPI {

class OAIComDayCqDamCoreImplExpiryNotificationJobImplProperties: public OAIObject {
public:
    OAIComDayCqDamCoreImplExpiryNotificationJobImplProperties();
    OAIComDayCqDamCoreImplExpiryNotificationJobImplProperties(QString json);
    ~OAIComDayCqDamCoreImplExpiryNotificationJobImplProperties();
    void init();
    void cleanup();

    QString asJson () override;
    QJsonObject asJsonObject() override;
    void fromJsonObject(QJsonObject json) override;
    OAIComDayCqDamCoreImplExpiryNotificationJobImplProperties* fromJson(QString jsonString) override;

    OAIConfigNodePropertyBoolean* getCqDamExpiryNotificationSchedulerIstimebased();
    void setCqDamExpiryNotificationSchedulerIstimebased(OAIConfigNodePropertyBoolean* cq_dam_expiry_notification_scheduler_istimebased);

    OAIConfigNodePropertyString* getCqDamExpiryNotificationSchedulerTimebasedRule();
    void setCqDamExpiryNotificationSchedulerTimebasedRule(OAIConfigNodePropertyString* cq_dam_expiry_notification_scheduler_timebased_rule);

    OAIConfigNodePropertyInteger* getCqDamExpiryNotificationSchedulerPeriodRule();
    void setCqDamExpiryNotificationSchedulerPeriodRule(OAIConfigNodePropertyInteger* cq_dam_expiry_notification_scheduler_period_rule);

    OAIConfigNodePropertyBoolean* getSendEmail();
    void setSendEmail(OAIConfigNodePropertyBoolean* send_email);

    OAIConfigNodePropertyInteger* getAssetExpiredLimit();
    void setAssetExpiredLimit(OAIConfigNodePropertyInteger* asset_expired_limit);

    OAIConfigNodePropertyInteger* getPriorNotificationSeconds();
    void setPriorNotificationSeconds(OAIConfigNodePropertyInteger* prior_notification_seconds);

    OAIConfigNodePropertyString* getCqDamExpiryNotificationUrlProtocol();
    void setCqDamExpiryNotificationUrlProtocol(OAIConfigNodePropertyString* cq_dam_expiry_notification_url_protocol);


    virtual bool isSet() override;

private:
    OAIConfigNodePropertyBoolean* cq_dam_expiry_notification_scheduler_istimebased;
    bool m_cq_dam_expiry_notification_scheduler_istimebased_isSet;

    OAIConfigNodePropertyString* cq_dam_expiry_notification_scheduler_timebased_rule;
    bool m_cq_dam_expiry_notification_scheduler_timebased_rule_isSet;

    OAIConfigNodePropertyInteger* cq_dam_expiry_notification_scheduler_period_rule;
    bool m_cq_dam_expiry_notification_scheduler_period_rule_isSet;

    OAIConfigNodePropertyBoolean* send_email;
    bool m_send_email_isSet;

    OAIConfigNodePropertyInteger* asset_expired_limit;
    bool m_asset_expired_limit_isSet;

    OAIConfigNodePropertyInteger* prior_notification_seconds;
    bool m_prior_notification_seconds_isSet;

    OAIConfigNodePropertyString* cq_dam_expiry_notification_url_protocol;
    bool m_cq_dam_expiry_notification_url_protocol_isSet;

};

}

#endif /* OAIComDayCqDamCoreImplExpiryNotificationJobImplProperties_H_ */
