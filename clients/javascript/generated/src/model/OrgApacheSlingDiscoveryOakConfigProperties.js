/**
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 *
 * OpenAPI Generator version: 3.2.1-SNAPSHOT
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/ConfigNodePropertyArray', 'model/ConfigNodePropertyBoolean', 'model/ConfigNodePropertyInteger', 'model/ConfigNodePropertyString'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./ConfigNodePropertyArray'), require('./ConfigNodePropertyBoolean'), require('./ConfigNodePropertyInteger'), require('./ConfigNodePropertyString'));
  } else {
    // Browser globals (root is window)
    if (!root.NodeSwaggerAemOsgi) {
      root.NodeSwaggerAemOsgi = {};
    }
    root.NodeSwaggerAemOsgi.OrgApacheSlingDiscoveryOakConfigProperties = factory(root.NodeSwaggerAemOsgi.ApiClient, root.NodeSwaggerAemOsgi.ConfigNodePropertyArray, root.NodeSwaggerAemOsgi.ConfigNodePropertyBoolean, root.NodeSwaggerAemOsgi.ConfigNodePropertyInteger, root.NodeSwaggerAemOsgi.ConfigNodePropertyString);
  }
}(this, function(ApiClient, ConfigNodePropertyArray, ConfigNodePropertyBoolean, ConfigNodePropertyInteger, ConfigNodePropertyString) {
  'use strict';




  /**
   * The OrgApacheSlingDiscoveryOakConfigProperties model module.
   * @module model/OrgApacheSlingDiscoveryOakConfigProperties
   * @version 1.0.0
   */

  /**
   * Constructs a new <code>OrgApacheSlingDiscoveryOakConfigProperties</code>.
   * @alias module:model/OrgApacheSlingDiscoveryOakConfigProperties
   * @class
   */
  var exports = function() {
    var _this = this;




















  };

  /**
   * Constructs a <code>OrgApacheSlingDiscoveryOakConfigProperties</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/OrgApacheSlingDiscoveryOakConfigProperties} obj Optional instance to populate.
   * @return {module:model/OrgApacheSlingDiscoveryOakConfigProperties} The populated <code>OrgApacheSlingDiscoveryOakConfigProperties</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('connectorPingTimeout')) {
        obj['connectorPingTimeout'] = ConfigNodePropertyInteger.constructFromObject(data['connectorPingTimeout']);
      }
      if (data.hasOwnProperty('connectorPingInterval')) {
        obj['connectorPingInterval'] = ConfigNodePropertyInteger.constructFromObject(data['connectorPingInterval']);
      }
      if (data.hasOwnProperty('discoveryLiteCheckInterval')) {
        obj['discoveryLiteCheckInterval'] = ConfigNodePropertyInteger.constructFromObject(data['discoveryLiteCheckInterval']);
      }
      if (data.hasOwnProperty('clusterSyncServiceTimeout')) {
        obj['clusterSyncServiceTimeout'] = ConfigNodePropertyInteger.constructFromObject(data['clusterSyncServiceTimeout']);
      }
      if (data.hasOwnProperty('clusterSyncServiceInterval')) {
        obj['clusterSyncServiceInterval'] = ConfigNodePropertyInteger.constructFromObject(data['clusterSyncServiceInterval']);
      }
      if (data.hasOwnProperty('enableSyncToken')) {
        obj['enableSyncToken'] = ConfigNodePropertyBoolean.constructFromObject(data['enableSyncToken']);
      }
      if (data.hasOwnProperty('minEventDelay')) {
        obj['minEventDelay'] = ConfigNodePropertyInteger.constructFromObject(data['minEventDelay']);
      }
      if (data.hasOwnProperty('socketConnectTimeout')) {
        obj['socketConnectTimeout'] = ConfigNodePropertyInteger.constructFromObject(data['socketConnectTimeout']);
      }
      if (data.hasOwnProperty('soTimeout')) {
        obj['soTimeout'] = ConfigNodePropertyInteger.constructFromObject(data['soTimeout']);
      }
      if (data.hasOwnProperty('topologyConnectorUrls')) {
        obj['topologyConnectorUrls'] = ConfigNodePropertyArray.constructFromObject(data['topologyConnectorUrls']);
      }
      if (data.hasOwnProperty('topologyConnectorWhitelist')) {
        obj['topologyConnectorWhitelist'] = ConfigNodePropertyArray.constructFromObject(data['topologyConnectorWhitelist']);
      }
      if (data.hasOwnProperty('autoStopLocalLoopEnabled')) {
        obj['autoStopLocalLoopEnabled'] = ConfigNodePropertyBoolean.constructFromObject(data['autoStopLocalLoopEnabled']);
      }
      if (data.hasOwnProperty('gzipConnectorRequestsEnabled')) {
        obj['gzipConnectorRequestsEnabled'] = ConfigNodePropertyBoolean.constructFromObject(data['gzipConnectorRequestsEnabled']);
      }
      if (data.hasOwnProperty('hmacEnabled')) {
        obj['hmacEnabled'] = ConfigNodePropertyBoolean.constructFromObject(data['hmacEnabled']);
      }
      if (data.hasOwnProperty('enableEncryption')) {
        obj['enableEncryption'] = ConfigNodePropertyBoolean.constructFromObject(data['enableEncryption']);
      }
      if (data.hasOwnProperty('sharedKey')) {
        obj['sharedKey'] = ConfigNodePropertyString.constructFromObject(data['sharedKey']);
      }
      if (data.hasOwnProperty('hmacSharedKeyTTL')) {
        obj['hmacSharedKeyTTL'] = ConfigNodePropertyInteger.constructFromObject(data['hmacSharedKeyTTL']);
      }
      if (data.hasOwnProperty('backoffStandbyFactor')) {
        obj['backoffStandbyFactor'] = ConfigNodePropertyString.constructFromObject(data['backoffStandbyFactor']);
      }
      if (data.hasOwnProperty('backoffStableFactor')) {
        obj['backoffStableFactor'] = ConfigNodePropertyString.constructFromObject(data['backoffStableFactor']);
      }
    }
    return obj;
  }

  /**
   * @member {module:model/ConfigNodePropertyInteger} connectorPingTimeout
   */
  exports.prototype['connectorPingTimeout'] = undefined;
  /**
   * @member {module:model/ConfigNodePropertyInteger} connectorPingInterval
   */
  exports.prototype['connectorPingInterval'] = undefined;
  /**
   * @member {module:model/ConfigNodePropertyInteger} discoveryLiteCheckInterval
   */
  exports.prototype['discoveryLiteCheckInterval'] = undefined;
  /**
   * @member {module:model/ConfigNodePropertyInteger} clusterSyncServiceTimeout
   */
  exports.prototype['clusterSyncServiceTimeout'] = undefined;
  /**
   * @member {module:model/ConfigNodePropertyInteger} clusterSyncServiceInterval
   */
  exports.prototype['clusterSyncServiceInterval'] = undefined;
  /**
   * @member {module:model/ConfigNodePropertyBoolean} enableSyncToken
   */
  exports.prototype['enableSyncToken'] = undefined;
  /**
   * @member {module:model/ConfigNodePropertyInteger} minEventDelay
   */
  exports.prototype['minEventDelay'] = undefined;
  /**
   * @member {module:model/ConfigNodePropertyInteger} socketConnectTimeout
   */
  exports.prototype['socketConnectTimeout'] = undefined;
  /**
   * @member {module:model/ConfigNodePropertyInteger} soTimeout
   */
  exports.prototype['soTimeout'] = undefined;
  /**
   * @member {module:model/ConfigNodePropertyArray} topologyConnectorUrls
   */
  exports.prototype['topologyConnectorUrls'] = undefined;
  /**
   * @member {module:model/ConfigNodePropertyArray} topologyConnectorWhitelist
   */
  exports.prototype['topologyConnectorWhitelist'] = undefined;
  /**
   * @member {module:model/ConfigNodePropertyBoolean} autoStopLocalLoopEnabled
   */
  exports.prototype['autoStopLocalLoopEnabled'] = undefined;
  /**
   * @member {module:model/ConfigNodePropertyBoolean} gzipConnectorRequestsEnabled
   */
  exports.prototype['gzipConnectorRequestsEnabled'] = undefined;
  /**
   * @member {module:model/ConfigNodePropertyBoolean} hmacEnabled
   */
  exports.prototype['hmacEnabled'] = undefined;
  /**
   * @member {module:model/ConfigNodePropertyBoolean} enableEncryption
   */
  exports.prototype['enableEncryption'] = undefined;
  /**
   * @member {module:model/ConfigNodePropertyString} sharedKey
   */
  exports.prototype['sharedKey'] = undefined;
  /**
   * @member {module:model/ConfigNodePropertyInteger} hmacSharedKeyTTL
   */
  exports.prototype['hmacSharedKeyTTL'] = undefined;
  /**
   * @member {module:model/ConfigNodePropertyString} backoffStandbyFactor
   */
  exports.prototype['backoffStandbyFactor'] = undefined;
  /**
   * @member {module:model/ConfigNodePropertyString} backoffStableFactor
   */
  exports.prototype['backoffStableFactor'] = undefined;



  return exports;
}));


