/**
* Adobe Experience Manager OSGI config (AEM) API
* Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
*
* OpenAPI spec version: 1.0.0-pre.0
* Contact: opensource@shinesolutions.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/


#include "ComAdobeCqCommercePimImplCataloggeneratorCatalogGeneratorImplProperties.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

ComAdobeCqCommercePimImplCataloggeneratorCatalogGeneratorImplProperties::ComAdobeCqCommercePimImplCataloggeneratorCatalogGeneratorImplProperties()
{
    m_Cq_commerce_cataloggenerator_bucketsizeIsSet = false;
    m_Cq_commerce_cataloggenerator_bucketnameIsSet = false;
    m_Cq_commerce_cataloggenerator_excludedtemplatepropertiesIsSet = false;
    
}

ComAdobeCqCommercePimImplCataloggeneratorCatalogGeneratorImplProperties::~ComAdobeCqCommercePimImplCataloggeneratorCatalogGeneratorImplProperties()
{
}

void ComAdobeCqCommercePimImplCataloggeneratorCatalogGeneratorImplProperties::validate()
{
    // TODO: implement validation
}

nlohmann::json ComAdobeCqCommercePimImplCataloggeneratorCatalogGeneratorImplProperties::toJson() const
{
    nlohmann::json val = nlohmann::json::object();

    if(m_Cq_commerce_cataloggenerator_bucketsizeIsSet)
    {
        val["cq.commerce.cataloggenerator.bucketsize"] = ModelBase::toJson(m_Cq_commerce_cataloggenerator_bucketsize);
    }
    if(m_Cq_commerce_cataloggenerator_bucketnameIsSet)
    {
        val["cq.commerce.cataloggenerator.bucketname"] = ModelBase::toJson(m_Cq_commerce_cataloggenerator_bucketname);
    }
    if(m_Cq_commerce_cataloggenerator_excludedtemplatepropertiesIsSet)
    {
        val["cq.commerce.cataloggenerator.excludedtemplateproperties"] = ModelBase::toJson(m_Cq_commerce_cataloggenerator_excludedtemplateproperties);
    }
    

    return val;
}

void ComAdobeCqCommercePimImplCataloggeneratorCatalogGeneratorImplProperties::fromJson(nlohmann::json& val)
{
    if(val.find("cq.commerce.cataloggenerator.bucketsize") != val.end())
    {
        if(!val["cq.commerce.cataloggenerator.bucketsize"].is_null())
        {
            ConfigNodePropertyInteger newItem;
            newItem.fromJson(val["cq.commerce.cataloggenerator.bucketsize"]);
            setCqCommerceCataloggeneratorBucketsize( newItem );
        }
        
    }
    if(val.find("cq.commerce.cataloggenerator.bucketname") != val.end())
    {
        if(!val["cq.commerce.cataloggenerator.bucketname"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["cq.commerce.cataloggenerator.bucketname"]);
            setCqCommerceCataloggeneratorBucketname( newItem );
        }
        
    }
    if(val.find("cq.commerce.cataloggenerator.excludedtemplateproperties") != val.end())
    {
        if(!val["cq.commerce.cataloggenerator.excludedtemplateproperties"].is_null())
        {
            ConfigNodePropertyArray newItem;
            newItem.fromJson(val["cq.commerce.cataloggenerator.excludedtemplateproperties"]);
            setCqCommerceCataloggeneratorExcludedtemplateproperties( newItem );
        }
        
    }
    
}


ConfigNodePropertyInteger ComAdobeCqCommercePimImplCataloggeneratorCatalogGeneratorImplProperties::getCqCommerceCataloggeneratorBucketsize() const
{
    return m_Cq_commerce_cataloggenerator_bucketsize;
}
void ComAdobeCqCommercePimImplCataloggeneratorCatalogGeneratorImplProperties::setCqCommerceCataloggeneratorBucketsize(ConfigNodePropertyInteger const& value)
{
    m_Cq_commerce_cataloggenerator_bucketsize = value;
    m_Cq_commerce_cataloggenerator_bucketsizeIsSet = true;
}
bool ComAdobeCqCommercePimImplCataloggeneratorCatalogGeneratorImplProperties::cqCommerceCataloggeneratorBucketsizeIsSet() const
{
    return m_Cq_commerce_cataloggenerator_bucketsizeIsSet;
}
void ComAdobeCqCommercePimImplCataloggeneratorCatalogGeneratorImplProperties::unsetCq_commerce_cataloggenerator_bucketsize()
{
    m_Cq_commerce_cataloggenerator_bucketsizeIsSet = false;
}
ConfigNodePropertyString ComAdobeCqCommercePimImplCataloggeneratorCatalogGeneratorImplProperties::getCqCommerceCataloggeneratorBucketname() const
{
    return m_Cq_commerce_cataloggenerator_bucketname;
}
void ComAdobeCqCommercePimImplCataloggeneratorCatalogGeneratorImplProperties::setCqCommerceCataloggeneratorBucketname(ConfigNodePropertyString const& value)
{
    m_Cq_commerce_cataloggenerator_bucketname = value;
    m_Cq_commerce_cataloggenerator_bucketnameIsSet = true;
}
bool ComAdobeCqCommercePimImplCataloggeneratorCatalogGeneratorImplProperties::cqCommerceCataloggeneratorBucketnameIsSet() const
{
    return m_Cq_commerce_cataloggenerator_bucketnameIsSet;
}
void ComAdobeCqCommercePimImplCataloggeneratorCatalogGeneratorImplProperties::unsetCq_commerce_cataloggenerator_bucketname()
{
    m_Cq_commerce_cataloggenerator_bucketnameIsSet = false;
}
ConfigNodePropertyArray ComAdobeCqCommercePimImplCataloggeneratorCatalogGeneratorImplProperties::getCqCommerceCataloggeneratorExcludedtemplateproperties() const
{
    return m_Cq_commerce_cataloggenerator_excludedtemplateproperties;
}
void ComAdobeCqCommercePimImplCataloggeneratorCatalogGeneratorImplProperties::setCqCommerceCataloggeneratorExcludedtemplateproperties(ConfigNodePropertyArray const& value)
{
    m_Cq_commerce_cataloggenerator_excludedtemplateproperties = value;
    m_Cq_commerce_cataloggenerator_excludedtemplatepropertiesIsSet = true;
}
bool ComAdobeCqCommercePimImplCataloggeneratorCatalogGeneratorImplProperties::cqCommerceCataloggeneratorExcludedtemplatepropertiesIsSet() const
{
    return m_Cq_commerce_cataloggenerator_excludedtemplatepropertiesIsSet;
}
void ComAdobeCqCommercePimImplCataloggeneratorCatalogGeneratorImplProperties::unsetCq_commerce_cataloggenerator_excludedtemplateproperties()
{
    m_Cq_commerce_cataloggenerator_excludedtemplatepropertiesIsSet = false;
}

}
}
}
}

