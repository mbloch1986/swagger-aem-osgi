/**
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 3.2.1-SNAPSHOT.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * ComDayCqRewriterLinkcheckerImplLinkCheckerTransformerFactoryProperties.h
 *
 * 
 */

#ifndef ORG_OPENAPITOOLS_CLIENT_MODEL_ComDayCqRewriterLinkcheckerImplLinkCheckerTransformerFactoryProperties_H_
#define ORG_OPENAPITOOLS_CLIENT_MODEL_ComDayCqRewriterLinkcheckerImplLinkCheckerTransformerFactoryProperties_H_


#include "../ModelBase.h"

#include "ConfigNodePropertyBoolean.h"
#include "ConfigNodePropertyInteger.h"
#include "ConfigNodePropertyArray.h"

namespace org {
namespace openapitools {
namespace client {
namespace model {

/// <summary>
/// 
/// </summary>
class  ComDayCqRewriterLinkcheckerImplLinkCheckerTransformerFactoryProperties
    : public ModelBase
{
public:
    ComDayCqRewriterLinkcheckerImplLinkCheckerTransformerFactoryProperties();
    virtual ~ComDayCqRewriterLinkcheckerImplLinkCheckerTransformerFactoryProperties();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    void fromJson(web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    void fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// ComDayCqRewriterLinkcheckerImplLinkCheckerTransformerFactoryProperties members

    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyBoolean> getLinkcheckertransformerDisableRewriting() const;
    bool linkcheckertransformerDisableRewritingIsSet() const;
    void unsetLinkcheckertransformer_disableRewriting();
    void setLinkcheckertransformerDisableRewriting(std::shared_ptr<ConfigNodePropertyBoolean> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyBoolean> getLinkcheckertransformerDisableChecking() const;
    bool linkcheckertransformerDisableCheckingIsSet() const;
    void unsetLinkcheckertransformer_disableChecking();
    void setLinkcheckertransformerDisableChecking(std::shared_ptr<ConfigNodePropertyBoolean> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyInteger> getLinkcheckertransformerMapCacheSize() const;
    bool linkcheckertransformerMapCacheSizeIsSet() const;
    void unsetLinkcheckertransformer_mapCacheSize();
    void setLinkcheckertransformerMapCacheSize(std::shared_ptr<ConfigNodePropertyInteger> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyBoolean> getLinkcheckertransformerStrictExtensionCheck() const;
    bool linkcheckertransformerStrictExtensionCheckIsSet() const;
    void unsetLinkcheckertransformer_strictExtensionCheck();
    void setLinkcheckertransformerStrictExtensionCheck(std::shared_ptr<ConfigNodePropertyBoolean> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyBoolean> getLinkcheckertransformerStripHtmltExtension() const;
    bool linkcheckertransformerStripHtmltExtensionIsSet() const;
    void unsetLinkcheckertransformer_stripHtmltExtension();
    void setLinkcheckertransformerStripHtmltExtension(std::shared_ptr<ConfigNodePropertyBoolean> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyArray> getLinkcheckertransformerRewriteElements() const;
    bool linkcheckertransformerRewriteElementsIsSet() const;
    void unsetLinkcheckertransformer_rewriteElements();
    void setLinkcheckertransformerRewriteElements(std::shared_ptr<ConfigNodePropertyArray> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyArray> getLinkcheckertransformerStripExtensionPathBlacklist() const;
    bool linkcheckertransformerStripExtensionPathBlacklistIsSet() const;
    void unsetLinkcheckertransformer_stripExtensionPathBlacklist();
    void setLinkcheckertransformerStripExtensionPathBlacklist(std::shared_ptr<ConfigNodePropertyArray> value);

protected:
    std::shared_ptr<ConfigNodePropertyBoolean> m_Linkcheckertransformer_disableRewriting;
    bool m_Linkcheckertransformer_disableRewritingIsSet;
    std::shared_ptr<ConfigNodePropertyBoolean> m_Linkcheckertransformer_disableChecking;
    bool m_Linkcheckertransformer_disableCheckingIsSet;
    std::shared_ptr<ConfigNodePropertyInteger> m_Linkcheckertransformer_mapCacheSize;
    bool m_Linkcheckertransformer_mapCacheSizeIsSet;
    std::shared_ptr<ConfigNodePropertyBoolean> m_Linkcheckertransformer_strictExtensionCheck;
    bool m_Linkcheckertransformer_strictExtensionCheckIsSet;
    std::shared_ptr<ConfigNodePropertyBoolean> m_Linkcheckertransformer_stripHtmltExtension;
    bool m_Linkcheckertransformer_stripHtmltExtensionIsSet;
    std::shared_ptr<ConfigNodePropertyArray> m_Linkcheckertransformer_rewriteElements;
    bool m_Linkcheckertransformer_rewriteElementsIsSet;
    std::shared_ptr<ConfigNodePropertyArray> m_Linkcheckertransformer_stripExtensionPathBlacklist;
    bool m_Linkcheckertransformer_stripExtensionPathBlacklistIsSet;
};

}
}
}
}

#endif /* ORG_OPENAPITOOLS_CLIENT_MODEL_ComDayCqRewriterLinkcheckerImplLinkCheckerTransformerFactoryProperties_H_ */
