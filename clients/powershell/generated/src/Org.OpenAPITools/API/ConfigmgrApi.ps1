function Invoke-ConfigmgrApiAdaptiveFormAndInteractiveCommunicationWebChannelConfiguration {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${showPlaceholder},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${maximumCacheEntries},
        [Parameter(Position = 8, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${afPeriodscriptingPeriodcompatversion},
        [Parameter(Position = 9, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${makeFileNameUnique},
        [Parameter(Position = 10, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${generatingCompliantData}
    )

    Process {
        'Calling method: ConfigmgrApi-AdaptiveFormAndInteractiveCommunicationWebChannelConfiguration' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.AdaptiveFormAndInteractiveCommunicationWebChannelConfiguration(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${showPlaceholder},
            ${maximumCacheEntries},
            ${afPeriodscriptingPeriodcompatversion},
            ${makeFileNameUnique},
            ${generatingCompliantData}
        )
    }
}

function Invoke-ConfigmgrApiAdaptiveFormAndInteractiveCommunicationWebChannelThemeConfigur {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${fontList}
    )

    Process {
        'Calling method: ConfigmgrApi-AdaptiveFormAndInteractiveCommunicationWebChannelThemeConfigur' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.AdaptiveFormAndInteractiveCommunicationWebChannelThemeConfigur(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${fontList}
        )
    }
}

function Invoke-ConfigmgrApiAnalyticsComponentQueryCacheService {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${cqPeriodanalyticsPeriodcomponentPeriodqueryPeriodcachePeriodsize}
    )

    Process {
        'Calling method: ConfigmgrApi-AnalyticsComponentQueryCacheService' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.AnalyticsComponentQueryCacheService(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${cqPeriodanalyticsPeriodcomponentPeriodqueryPeriodcachePeriodsize}
        )
    }
}

function Invoke-ConfigmgrApiApacheSlingHealthCheckResultHTMLSerializer {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${styleString}
    )

    Process {
        'Calling method: ConfigmgrApi-ApacheSlingHealthCheckResultHTMLSerializer' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ApacheSlingHealthCheckResultHTMLSerializer(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${styleString}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeAemFormsndocumentsConfigAEMFormsManagerConfiguration {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${formsManagerConfigPeriodincludeOOTBTemplates},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${formsManagerConfigPeriodincludeDeprecatedTemplates}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeAemFormsndocumentsConfigAEMFormsManagerConfiguration' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeAemFormsndocumentsConfigAEMFormsManagerConfiguration(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${formsManagerConfigPeriodincludeOOTBTemplates},
            ${formsManagerConfigPeriodincludeDeprecatedTemplates}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeAemTransactionCoreImplTransactionRecorder {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${isTransactionRecordingEnabled}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeAemTransactionCoreImplTransactionRecorder' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeAemTransactionCoreImplTransactionRecorder(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${isTransactionRecordingEnabled}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeAemUpgradePrechecksHcImplDeprecateIndexesHC {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${hcPeriodname},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${hcPeriodtags},
        [Parameter(Position = 8, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${hcPeriodmbeanPeriodname}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeAemUpgradePrechecksHcImplDeprecateIndexesHC' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeAemUpgradePrechecksHcImplDeprecateIndexesHC(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${hcPeriodname},
            ${hcPeriodtags},
            ${hcPeriodmbeanPeriodname}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeAemUpgradePrechecksHcImplReplicationAgentsDisabledHC {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${hcPeriodname},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${hcPeriodtags},
        [Parameter(Position = 8, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${hcPeriodmbeanPeriodname}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeAemUpgradePrechecksHcImplReplicationAgentsDisabledHC' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeAemUpgradePrechecksHcImplReplicationAgentsDisabledHC(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${hcPeriodname},
            ${hcPeriodtags},
            ${hcPeriodmbeanPeriodname}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeAemUpgradePrechecksMbeanImplPreUpgradeTasksMBeanImpl {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${preUpgradePeriodmaintenancePeriodtasks},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${preUpgradePeriodhcPeriodtags}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeAemUpgradePrechecksMbeanImplPreUpgradeTasksMBeanImpl' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeAemUpgradePrechecksMbeanImplPreUpgradeTasksMBeanImpl(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${preUpgradePeriodmaintenancePeriodtasks},
            ${preUpgradePeriodhcPeriodtags}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeAemUpgradePrechecksTasksImplConsistencyCheckTaskImpl {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${rootPeriodpath},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${fixPeriodinconsistencies}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeAemUpgradePrechecksTasksImplConsistencyCheckTaskImpl' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeAemUpgradePrechecksTasksImplConsistencyCheckTaskImpl(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${rootPeriodpath},
            ${fixPeriodinconsistencies}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeCqAccountApiAccountManagementService {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${cqPeriodaccountmanagerPeriodtokenPeriodvalidityPeriodperiod},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${cqPeriodaccountmanagerPeriodconfigPeriodrequestnewaccountPeriodmail},
        [Parameter(Position = 8, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${cqPeriodaccountmanagerPeriodconfigPeriodrequestnewpwdPeriodmail}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeCqAccountApiAccountManagementService' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeCqAccountApiAccountManagementService(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${cqPeriodaccountmanagerPeriodtokenPeriodvalidityPeriodperiod},
            ${cqPeriodaccountmanagerPeriodconfigPeriodrequestnewaccountPeriodmail},
            ${cqPeriodaccountmanagerPeriodconfigPeriodrequestnewpwdPeriodmail}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeCqAccountImplAccountManagementServlet {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${cqPeriodaccountmanagerPeriodconfigPeriodinformnewaccountPeriodmail},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${cqPeriodaccountmanagerPeriodconfigPeriodinformnewpwdPeriodmail}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeCqAccountImplAccountManagementServlet' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeCqAccountImplAccountManagementServlet(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${cqPeriodaccountmanagerPeriodconfigPeriodinformnewaccountPeriodmail},
            ${cqPeriodaccountmanagerPeriodconfigPeriodinformnewpwdPeriodmail}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeCqAddressImplLocationLocationListServlet {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${cqPeriodaddressPeriodlocationPerioddefaultPeriodmaxResults}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeCqAddressImplLocationLocationListServlet' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeCqAddressImplLocationLocationListServlet(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${cqPeriodaddressPeriodlocationPerioddefaultPeriodmaxResults}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeCqAuditPurgeDam {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${auditlogPeriodrulePeriodname},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${auditlogPeriodrulePeriodcontentpath},
        [Parameter(Position = 8, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${auditlogPeriodrulePeriodminimumage},
        [Parameter(Position = 9, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${auditlogPeriodrulePeriodtypes}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeCqAuditPurgeDam' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeCqAuditPurgeDam(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${auditlogPeriodrulePeriodname},
            ${auditlogPeriodrulePeriodcontentpath},
            ${auditlogPeriodrulePeriodminimumage},
            ${auditlogPeriodrulePeriodtypes}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeCqAuditPurgePages {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${auditlogPeriodrulePeriodname},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${auditlogPeriodrulePeriodcontentpath},
        [Parameter(Position = 8, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${auditlogPeriodrulePeriodminimumage},
        [Parameter(Position = 9, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${auditlogPeriodrulePeriodtypes}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeCqAuditPurgePages' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeCqAuditPurgePages(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${auditlogPeriodrulePeriodname},
            ${auditlogPeriodrulePeriodcontentpath},
            ${auditlogPeriodrulePeriodminimumage},
            ${auditlogPeriodrulePeriodtypes}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeCqAuditPurgeReplication {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${auditlogPeriodrulePeriodname},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${auditlogPeriodrulePeriodcontentpath},
        [Parameter(Position = 8, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${auditlogPeriodrulePeriodminimumage},
        [Parameter(Position = 9, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${auditlogPeriodrulePeriodtypes}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeCqAuditPurgeReplication' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeCqAuditPurgeReplication(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${auditlogPeriodrulePeriodname},
            ${auditlogPeriodrulePeriodcontentpath},
            ${auditlogPeriodrulePeriodminimumage},
            ${auditlogPeriodrulePeriodtypes}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeCqCdnRewriterImplAWSCloudFrontRewriter {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${servicePeriodranking},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${keypairPeriodid},
        [Parameter(Position = 8, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${keypairPeriodalias},
        [Parameter(Position = 9, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${cdnrewriterPeriodattributes},
        [Parameter(Position = 10, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${cdnPeriodrewriterPerioddistributionPerioddomain}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeCqCdnRewriterImplAWSCloudFrontRewriter' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeCqCdnRewriterImplAWSCloudFrontRewriter(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${servicePeriodranking},
            ${keypairPeriodid},
            ${keypairPeriodalias},
            ${cdnrewriterPeriodattributes},
            ${cdnPeriodrewriterPerioddistributionPerioddomain}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeCqCdnRewriterImplCDNConfigServiceImpl {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${cdnPeriodconfigPerioddistributionPerioddomain},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${cdnPeriodconfigPeriodenablePeriodrewriting},
        [Parameter(Position = 8, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${cdnPeriodconfigPeriodpathPeriodprefixes},
        [Parameter(Position = 9, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${cdnPeriodconfigPeriodcdnttl},
        [Parameter(Position = 10, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${cdnPeriodconfigPeriodapplicationPeriodprotocol}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeCqCdnRewriterImplCDNConfigServiceImpl' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeCqCdnRewriterImplCDNConfigServiceImpl(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${cdnPeriodconfigPerioddistributionPerioddomain},
            ${cdnPeriodconfigPeriodenablePeriodrewriting},
            ${cdnPeriodconfigPeriodpathPeriodprefixes},
            ${cdnPeriodconfigPeriodcdnttl},
            ${cdnPeriodconfigPeriodapplicationPeriodprotocol}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeCqCdnRewriterImplCDNRewriter {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${servicePeriodranking},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${cdnrewriterPeriodattributes},
        [Parameter(Position = 8, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${cdnPeriodrewriterPerioddistributionPerioddomain}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeCqCdnRewriterImplCDNRewriter' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeCqCdnRewriterImplCDNRewriter(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${servicePeriodranking},
            ${cdnrewriterPeriodattributes},
            ${cdnPeriodrewriterPerioddistributionPerioddomain}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeCqCloudconfigCoreImplConfigurationReplicationEventHandle {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${flushPeriodagents}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeCqCloudconfigCoreImplConfigurationReplicationEventHandle' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeCqCloudconfigCoreImplConfigurationReplicationEventHandle(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${flushPeriodagents}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeCqCommerceImplAssetDynamicImageHandler {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${cqPeriodcommercePeriodassetPeriodhandlerPeriodactive},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${cqPeriodcommercePeriodassetPeriodhandlerPeriodname}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeCqCommerceImplAssetDynamicImageHandler' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeCqCommerceImplAssetDynamicImageHandler(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${cqPeriodcommercePeriodassetPeriodhandlerPeriodactive},
            ${cqPeriodcommercePeriodassetPeriodhandlerPeriodname}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeCqCommerceImplAssetProductAssetHandlerProviderImpl {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${cqPeriodcommercePeriodassetPeriodhandlerPeriodfallback}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeCqCommerceImplAssetProductAssetHandlerProviderImpl' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeCqCommerceImplAssetProductAssetHandlerProviderImpl(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${cqPeriodcommercePeriodassetPeriodhandlerPeriodfallback}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeCqCommerceImplAssetStaticImageHandler {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${cqPeriodcommercePeriodassetPeriodhandlerPeriodactive},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${cqPeriodcommercePeriodassetPeriodhandlerPeriodname}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeCqCommerceImplAssetStaticImageHandler' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeCqCommerceImplAssetStaticImageHandler(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${cqPeriodcommercePeriodassetPeriodhandlerPeriodactive},
            ${cqPeriodcommercePeriodassetPeriodhandlerPeriodname}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeCqCommerceImplAssetVideoHandler {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${cqPeriodcommercePeriodassetPeriodhandlerPeriodactive},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${cqPeriodcommercePeriodassetPeriodhandlerPeriodname}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeCqCommerceImplAssetVideoHandler' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeCqCommerceImplAssetVideoHandler(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${cqPeriodcommercePeriodassetPeriodhandlerPeriodactive},
            ${cqPeriodcommercePeriodassetPeriodhandlerPeriodname}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeCqCommerceImplPromotionPromotionManagerImpl {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${cqPeriodcommercePeriodpromotionPeriodroot}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeCqCommerceImplPromotionPromotionManagerImpl' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeCqCommerceImplPromotionPromotionManagerImpl(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${cqPeriodcommercePeriodpromotionPeriodroot}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeCqCommercePimImplCataloggeneratorCatalogGeneratorImpl {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${cqPeriodcommercePeriodcataloggeneratorPeriodbucketsize},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${cqPeriodcommercePeriodcataloggeneratorPeriodbucketname},
        [Parameter(Position = 8, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${cqPeriodcommercePeriodcataloggeneratorPeriodexcludedtemplateproperties}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeCqCommercePimImplCataloggeneratorCatalogGeneratorImpl' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeCqCommercePimImplCataloggeneratorCatalogGeneratorImpl(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${cqPeriodcommercePeriodcataloggeneratorPeriodbucketsize},
            ${cqPeriodcommercePeriodcataloggeneratorPeriodbucketname},
            ${cqPeriodcommercePeriodcataloggeneratorPeriodexcludedtemplateproperties}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeCqCommercePimImplPageEventListener {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${cqPeriodcommercePeriodpageeventlistenerPeriodenabled}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeCqCommercePimImplPageEventListener' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeCqCommercePimImplPageEventListener(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${cqPeriodcommercePeriodpageeventlistenerPeriodenabled}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeCqCommercePimImplProductfeedProductFeedServiceImpl {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${feed generator algorithm}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeCqCommercePimImplProductfeedProductFeedServiceImpl' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeCqCommercePimImplProductfeedProductFeedServiceImpl(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${feed generator algorithm}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeCqContentinsightImplReportingServicesSettingsProvider {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${reportingservicesPeriodurl}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeCqContentinsightImplReportingServicesSettingsProvider' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeCqContentinsightImplReportingServicesSettingsProvider(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${reportingservicesPeriodurl}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeCqContentinsightImplServletsBrightEdgeProxyServlet {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${brightedgePeriodurl}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeCqContentinsightImplServletsBrightEdgeProxyServlet' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeCqContentinsightImplServletsBrightEdgeProxyServlet(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${brightedgePeriodurl}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeCqContentinsightImplServletsReportingServicesProxyServle {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${reportingservicesPeriodproxyPeriodwhitelist}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeCqContentinsightImplServletsReportingServicesProxyServle' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeCqContentinsightImplServletsReportingServicesProxyServle(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${reportingservicesPeriodproxyPeriodwhitelist}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeCqDamCfmImplComponentComponentConfigImpl {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${damPeriodcfmPeriodcomponentPeriodresourceType},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${damPeriodcfmPeriodcomponentPeriodfileReferenceProp},
        [Parameter(Position = 8, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${damPeriodcfmPeriodcomponentPeriodelementsProp},
        [Parameter(Position = 9, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${damPeriodcfmPeriodcomponentPeriodvariationProp}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeCqDamCfmImplComponentComponentConfigImpl' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeCqDamCfmImplComponentComponentConfigImpl(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${damPeriodcfmPeriodcomponentPeriodresourceType},
            ${damPeriodcfmPeriodcomponentPeriodfileReferenceProp},
            ${damPeriodcfmPeriodcomponentPeriodelementsProp},
            ${damPeriodcfmPeriodcomponentPeriodvariationProp}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeCqDamCfmImplConfFeatureConfigImpl {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${damPeriodcfmPeriodresourceTypes},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${damPeriodcfmPeriodreferenceProperties}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeCqDamCfmImplConfFeatureConfigImpl' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeCqDamCfmImplConfFeatureConfigImpl(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${damPeriodcfmPeriodresourceTypes},
            ${damPeriodcfmPeriodreferenceProperties}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeCqDamCfmImplContentRewriterAssetProcessor {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${pipelinePeriodtype}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeCqDamCfmImplContentRewriterAssetProcessor' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeCqDamCfmImplContentRewriterAssetProcessor(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${pipelinePeriodtype}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeCqDamCfmImplContentRewriterParRangeFilter {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${pipelinePeriodtype}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeCqDamCfmImplContentRewriterParRangeFilter' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeCqDamCfmImplContentRewriterParRangeFilter(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${pipelinePeriodtype}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeCqDamCfmImplContentRewriterPayloadFilter {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${pipelinePeriodtype}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeCqDamCfmImplContentRewriterPayloadFilter' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeCqDamCfmImplContentRewriterPayloadFilter(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${pipelinePeriodtype}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeCqDamDmProcessImagePTiffManagerImpl {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${maxMemory}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeCqDamDmProcessImagePTiffManagerImpl' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeCqDamDmProcessImagePTiffManagerImpl(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${maxMemory}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeCqDamIpsImplReplicationTriggerReplicateOnModifyWorker {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${dmreplicateonmodifyPeriodenabled},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${dmreplicateonmodifyPeriodforcesyncdeletes}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeCqDamIpsImplReplicationTriggerReplicateOnModifyWorker' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeCqDamIpsImplReplicationTriggerReplicateOnModifyWorker(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${dmreplicateonmodifyPeriodenabled},
            ${dmreplicateonmodifyPeriodforcesyncdeletes}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeCqDamMacSyncHelperImplMACSyncClientImpl {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${comPeriodadobePerioddamPeriodmacPeriodsyncPeriodclientPeriodsoPeriodtimeout}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeCqDamMacSyncHelperImplMACSyncClientImpl' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeCqDamMacSyncHelperImplMACSyncClientImpl(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${comPeriodadobePerioddamPeriodmacPeriodsyncPeriodclientPeriodsoPeriodtimeout}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeCqDamMacSyncImplDAMSyncServiceImpl {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${comPeriodadobePeriodcqPerioddamPeriodmacPeriodsyncPerioddamsyncservicePeriodregisteredPaths},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${comPeriodadobePeriodcqPerioddamPeriodmacPeriodsyncPerioddamsyncservicePeriodsyncPeriodrenditions},
        [Parameter(Position = 8, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${comPeriodadobePeriodcqPerioddamPeriodmacPeriodsyncPerioddamsyncservicePeriodreplicatePeriodthreadPeriodwaitPeriodms},
        [Parameter(Position = 9, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${comPeriodadobePeriodcqPerioddamPeriodmacPeriodsyncPerioddamsyncservicePeriodplatform}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeCqDamMacSyncImplDAMSyncServiceImpl' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeCqDamMacSyncImplDAMSyncServiceImpl(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${comPeriodadobePeriodcqPerioddamPeriodmacPeriodsyncPerioddamsyncservicePeriodregisteredPaths},
            ${comPeriodadobePeriodcqPerioddamPeriodmacPeriodsyncPerioddamsyncservicePeriodsyncPeriodrenditions},
            ${comPeriodadobePeriodcqPerioddamPeriodmacPeriodsyncPerioddamsyncservicePeriodreplicatePeriodthreadPeriodwaitPeriodms},
            ${comPeriodadobePeriodcqPerioddamPeriodmacPeriodsyncPerioddamsyncservicePeriodplatform}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeCqDamProcessorNuiImplNuiAssetProcessor {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${nuiEnabled},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${nuiServiceUrl},
        [Parameter(Position = 8, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${nuiApiKey}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeCqDamProcessorNuiImplNuiAssetProcessor' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeCqDamProcessorNuiImplNuiAssetProcessor(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${nuiEnabled},
            ${nuiServiceUrl},
            ${nuiApiKey}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeCqDamS7imagingImplIsImageServerComponent {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${tcpPort},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${allowRemoteAccess},
        [Parameter(Position = 8, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${maxRenderRgnPixels},
        [Parameter(Position = 9, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${maxMessageSize},
        [Parameter(Position = 10, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${randomAccessUrlTimeout},
        [Parameter(Position = 11, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${workerThreads}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeCqDamS7imagingImplIsImageServerComponent' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeCqDamS7imagingImplIsImageServerComponent(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${tcpPort},
            ${allowRemoteAccess},
            ${maxRenderRgnPixels},
            ${maxMessageSize},
            ${randomAccessUrlTimeout},
            ${workerThreads}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeCqDamS7imagingImplPsPlatformServerServlet {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${cachePeriodenable},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${cachePeriodrootPaths},
        [Parameter(Position = 8, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${cachePeriodmaxSize},
        [Parameter(Position = 9, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${cachePeriodmaxEntries}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeCqDamS7imagingImplPsPlatformServerServlet' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeCqDamS7imagingImplPsPlatformServerServlet(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${cachePeriodenable},
            ${cachePeriodrootPaths},
            ${cachePeriodmaxSize},
            ${cachePeriodmaxEntries}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeCqDamWebdavImplIoAssetIOHandler {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${servicePeriodranking},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${pathPrefix},
        [Parameter(Position = 8, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${createVersion}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeCqDamWebdavImplIoAssetIOHandler' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeCqDamWebdavImplIoAssetIOHandler(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${servicePeriodranking},
            ${pathPrefix},
            ${createVersion}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeCqDamWebdavImplIoDamWebdavVersionLinkingJob {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${cqPerioddamPeriodwebdavPeriodversionPeriodlinkingPeriodenable},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${cqPerioddamPeriodwebdavPeriodversionPeriodlinkingPeriodschedulerPeriodperiod},
        [Parameter(Position = 8, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${cqPerioddamPeriodwebdavPeriodversionPeriodlinkingPeriodstagingPeriodtimeout}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeCqDamWebdavImplIoDamWebdavVersionLinkingJob' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeCqDamWebdavImplIoDamWebdavVersionLinkingJob(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${cqPerioddamPeriodwebdavPeriodversionPeriodlinkingPeriodenable},
            ${cqPerioddamPeriodwebdavPeriodversionPeriodlinkingPeriodschedulerPeriodperiod},
            ${cqPerioddamPeriodwebdavPeriodversionPeriodlinkingPeriodstagingPeriodtimeout}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeCqDamWebdavImplIoSpecialFilesHandler {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${comPerioddayPeriodcqPerioddamPeriodcorePeriodimplPeriodioPeriodSpecialFilesHandlerPeriodfilepatters}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeCqDamWebdavImplIoSpecialFilesHandler' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeCqDamWebdavImplIoSpecialFilesHandler(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${comPerioddayPeriodcqPerioddamPeriodcorePeriodimplPeriodioPeriodSpecialFilesHandlerPeriodfilepatters}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeCqDeserfwImplDeserializationFirewallImpl {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${firewallPerioddeserializationPeriodwhitelist},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${firewallPerioddeserializationPeriodblacklist},
        [Parameter(Position = 8, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${firewallPerioddeserializationPerioddiagnostics}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeCqDeserfwImplDeserializationFirewallImpl' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeCqDeserfwImplDeserializationFirewallImpl(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${firewallPerioddeserializationPeriodwhitelist},
            ${firewallPerioddeserializationPeriodblacklist},
            ${firewallPerioddeserializationPerioddiagnostics}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeCqDtmImplServiceDTMWebServiceImpl {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${connectionPeriodtimeout},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${socketPeriodtimeout}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeCqDtmImplServiceDTMWebServiceImpl' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeCqDtmImplServiceDTMWebServiceImpl(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${connectionPeriodtimeout},
            ${socketPeriodtimeout}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeCqDtmImplServletsDTMDeployHookServlet {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${dtmPeriodstagingPeriodipPeriodwhitelist},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${dtmPeriodproductionPeriodipPeriodwhitelist}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeCqDtmImplServletsDTMDeployHookServlet' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeCqDtmImplServletsDTMDeployHookServlet(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${dtmPeriodstagingPeriodipPeriodwhitelist},
            ${dtmPeriodproductionPeriodipPeriodwhitelist}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeCqDtmReactorImplServiceWebServiceImpl {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${endpointUri},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${connectionTimeout},
        [Parameter(Position = 8, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${socketTimeout}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeCqDtmReactorImplServiceWebServiceImpl' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeCqDtmReactorImplServiceWebServiceImpl(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${endpointUri},
            ${connectionTimeout},
            ${socketTimeout}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeCqExperiencelogImplExperienceLogConfigServlet {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${enabled},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${disabledForGroups}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeCqExperiencelogImplExperienceLogConfigServlet' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeCqExperiencelogImplExperienceLogConfigServlet(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${enabled},
            ${disabledForGroups}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeCqHcContentPackagesHealthCheck {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${hcPeriodname},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${hcPeriodtags},
        [Parameter(Position = 8, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${hcPeriodmbeanPeriodname},
        [Parameter(Position = 9, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${packagePeriodnames}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeCqHcContentPackagesHealthCheck' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeCqHcContentPackagesHealthCheck(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${hcPeriodname},
            ${hcPeriodtags},
            ${hcPeriodmbeanPeriodname},
            ${packagePeriodnames}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeCqHistoryImplHistoryRequestFilter {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${historyPeriodrequestFilterPeriodexcludedSelectors},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${historyPeriodrequestFilterPeriodexcludedExtensions}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeCqHistoryImplHistoryRequestFilter' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeCqHistoryImplHistoryRequestFilter(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${historyPeriodrequestFilterPeriodexcludedSelectors},
            ${historyPeriodrequestFilterPeriodexcludedExtensions}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeCqHistoryImplHistoryServiceImpl {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${historyPeriodservicePeriodresourceTypes},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${historyPeriodservicePeriodpathFilter}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeCqHistoryImplHistoryServiceImpl' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeCqHistoryImplHistoryServiceImpl(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${historyPeriodservicePeriodresourceTypes},
            ${historyPeriodservicePeriodpathFilter}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeCqInboxImplTypeproviderItemTypeProvider {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${inboxPeriodimplPeriodtypeproviderPeriodregistrypaths},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${inboxPeriodimplPeriodtypeproviderPeriodlegacypaths},
        [Parameter(Position = 8, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${inboxPeriodimplPeriodtypeproviderPerioddefaulturlPeriodfailureitem},
        [Parameter(Position = 9, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${inboxPeriodimplPeriodtypeproviderPerioddefaulturlPeriodworkitem},
        [Parameter(Position = 10, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${inboxPeriodimplPeriodtypeproviderPerioddefaulturlPeriodtask}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeCqInboxImplTypeproviderItemTypeProvider' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeCqInboxImplTypeproviderItemTypeProvider(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${inboxPeriodimplPeriodtypeproviderPeriodregistrypaths},
            ${inboxPeriodimplPeriodtypeproviderPeriodlegacypaths},
            ${inboxPeriodimplPeriodtypeproviderPerioddefaulturlPeriodfailureitem},
            ${inboxPeriodimplPeriodtypeproviderPerioddefaulturlPeriodworkitem},
            ${inboxPeriodimplPeriodtypeproviderPerioddefaulturlPeriodtask}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeCqProjectsImplServletProjectImageServlet {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${imagePeriodquality},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${imagePeriodsupportedPeriodresolutions}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeCqProjectsImplServletProjectImageServlet' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeCqProjectsImplServletProjectImageServlet(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${imagePeriodquality},
            ${imagePeriodsupportedPeriodresolutions}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeCqProjectsPurgeScheduler {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${scheduledpurgePeriodname},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${scheduledpurgePeriodpurgeActive},
        [Parameter(Position = 8, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${scheduledpurgePeriodtemplates},
        [Parameter(Position = 9, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${scheduledpurgePeriodpurgeGroups},
        [Parameter(Position = 10, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${scheduledpurgePeriodpurgeAssets},
        [Parameter(Position = 11, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${scheduledpurgePeriodterminateRunningWorkflows},
        [Parameter(Position = 12, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${scheduledpurgePerioddaysold},
        [Parameter(Position = 13, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${scheduledpurgePeriodsaveThreshold}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeCqProjectsPurgeScheduler' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeCqProjectsPurgeScheduler(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${scheduledpurgePeriodname},
            ${scheduledpurgePeriodpurgeActive},
            ${scheduledpurgePeriodtemplates},
            ${scheduledpurgePeriodpurgeGroups},
            ${scheduledpurgePeriodpurgeAssets},
            ${scheduledpurgePeriodterminateRunningWorkflows},
            ${scheduledpurgePerioddaysold},
            ${scheduledpurgePeriodsaveThreshold}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeCqScheduledExporterImplScheduledExporterImpl {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${includePeriodpaths},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${exporterPerioduser}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeCqScheduledExporterImplScheduledExporterImpl' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeCqScheduledExporterImplScheduledExporterImpl(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${includePeriodpaths},
            ${exporterPerioduser}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeCqScreensAnalyticsImplScreensAnalyticsServiceImpl {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${comPeriodadobePeriodcqPeriodscreensPeriodanalyticsPeriodimplPeriodurl},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${comPeriodadobePeriodcqPeriodscreensPeriodanalyticsPeriodimplPeriodapikey},
        [Parameter(Position = 8, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${comPeriodadobePeriodcqPeriodscreensPeriodanalyticsPeriodimplPeriodproject},
        [Parameter(Position = 9, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${comPeriodadobePeriodcqPeriodscreensPeriodanalyticsPeriodimplPeriodenvironment},
        [Parameter(Position = 10, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${comPeriodadobePeriodcqPeriodscreensPeriodanalyticsPeriodimplPeriodsendFrequency}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeCqScreensAnalyticsImplScreensAnalyticsServiceImpl' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeCqScreensAnalyticsImplScreensAnalyticsServiceImpl(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${comPeriodadobePeriodcqPeriodscreensPeriodanalyticsPeriodimplPeriodurl},
            ${comPeriodadobePeriodcqPeriodscreensPeriodanalyticsPeriodimplPeriodapikey},
            ${comPeriodadobePeriodcqPeriodscreensPeriodanalyticsPeriodimplPeriodproject},
            ${comPeriodadobePeriodcqPeriodscreensPeriodanalyticsPeriodimplPeriodenvironment},
            ${comPeriodadobePeriodcqPeriodscreensPeriodanalyticsPeriodimplPeriodsendFrequency}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeCqScreensDeviceImplDeviceService {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${comPeriodadobePeriodaemPeriodscreensPeriodplayerPeriodpingfrequency},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${comPeriodadobePeriodaemPeriodscreensPerioddevicePeriodpaswordPeriodspecialchars},
        [Parameter(Position = 8, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${comPeriodadobePeriodaemPeriodscreensPerioddevicePeriodpaswordPeriodminlowercasechars},
        [Parameter(Position = 9, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${comPeriodadobePeriodaemPeriodscreensPerioddevicePeriodpaswordPeriodminuppercasechars},
        [Parameter(Position = 10, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${comPeriodadobePeriodaemPeriodscreensPerioddevicePeriodpaswordPeriodminnumberchars},
        [Parameter(Position = 11, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${comPeriodadobePeriodaemPeriodscreensPerioddevicePeriodpaswordPeriodminspecialchars},
        [Parameter(Position = 12, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${comPeriodadobePeriodaemPeriodscreensPerioddevicePeriodpaswordPeriodminlength}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeCqScreensDeviceImplDeviceService' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeCqScreensDeviceImplDeviceService(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${comPeriodadobePeriodaemPeriodscreensPeriodplayerPeriodpingfrequency},
            ${comPeriodadobePeriodaemPeriodscreensPerioddevicePeriodpaswordPeriodspecialchars},
            ${comPeriodadobePeriodaemPeriodscreensPerioddevicePeriodpaswordPeriodminlowercasechars},
            ${comPeriodadobePeriodaemPeriodscreensPerioddevicePeriodpaswordPeriodminuppercasechars},
            ${comPeriodadobePeriodaemPeriodscreensPerioddevicePeriodpaswordPeriodminnumberchars},
            ${comPeriodadobePeriodaemPeriodscreensPerioddevicePeriodpaswordPeriodminspecialchars},
            ${comPeriodadobePeriodaemPeriodscreensPerioddevicePeriodpaswordPeriodminlength}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeCqScreensDeviceRegistrationImplRegistrationServiceImpl {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${deviceRegistrationTimeout}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeCqScreensDeviceRegistrationImplRegistrationServiceImpl' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeCqScreensDeviceRegistrationImplRegistrationServiceImpl(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${deviceRegistrationTimeout}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeCqScreensImplHandlerChannelsUpdateHandler {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${cqPeriodpagesupdatehandlerPeriodimageresourcetypes},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${cqPeriodpagesupdatehandlerPeriodproductresourcetypes},
        [Parameter(Position = 8, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${cqPeriodpagesupdatehandlerPeriodvideoresourcetypes},
        [Parameter(Position = 9, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${cqPeriodpagesupdatehandlerPerioddynamicsequenceresourcetypes},
        [Parameter(Position = 10, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${cqPeriodpagesupdatehandlerPeriodpreviewmodepaths}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeCqScreensImplHandlerChannelsUpdateHandler' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeCqScreensImplHandlerChannelsUpdateHandler(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${cqPeriodpagesupdatehandlerPeriodimageresourcetypes},
            ${cqPeriodpagesupdatehandlerPeriodproductresourcetypes},
            ${cqPeriodpagesupdatehandlerPeriodvideoresourcetypes},
            ${cqPeriodpagesupdatehandlerPerioddynamicsequenceresourcetypes},
            ${cqPeriodpagesupdatehandlerPeriodpreviewmodepaths}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeCqScreensImplJobsDistributedDevicesStatiUpdateJob {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${schedulerPeriodexpression}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeCqScreensImplJobsDistributedDevicesStatiUpdateJob' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeCqScreensImplJobsDistributedDevicesStatiUpdateJob(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${schedulerPeriodexpression}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeCqScreensImplRemoteImplDistributedHttpClientImpl {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${comPeriodadobePeriodaemPeriodscreensPeriodimplPeriodremotePeriodrequestTimeout}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeCqScreensImplRemoteImplDistributedHttpClientImpl' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeCqScreensImplRemoteImplDistributedHttpClientImpl(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${comPeriodadobePeriodaemPeriodscreensPeriodimplPeriodremotePeriodrequestTimeout}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeCqScreensImplScreensChannelPostProcessor {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${screensPeriodchannelsPeriodpropertiesPeriodtoPeriodremove}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeCqScreensImplScreensChannelPostProcessor' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeCqScreensImplScreensChannelPostProcessor(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${screensPeriodchannelsPeriodpropertiesPeriodtoPeriodremove}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeCqScreensMonitoringImplScreensMonitoringServiceImpl {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${comPeriodadobePeriodcqPeriodscreensPeriodmonitoringPeriodimplPeriodScreensMonitoringServiceImplPeriodprojectPath},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${comPeriodadobePeriodcqPeriodscreensPeriodmonitoringPeriodimplPeriodScreensMonitoringServiceImplPeriodscheduleFrequency},
        [Parameter(Position = 8, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${comPeriodadobePeriodcqPeriodscreensPeriodmonitoringPeriodimplPeriodScreensMonitoringServiceImplPeriodpingTimeout},
        [Parameter(Position = 9, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${comPeriodadobePeriodcqPeriodscreensPeriodmonitoringPeriodimplPeriodScreensMonitoringServiceImplPeriodrecipients},
        [Parameter(Position = 10, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${comPeriodadobePeriodcqPeriodscreensPeriodmonitoringPeriodimplPeriodScreensMonitoringServiceImplPeriodsmtpserver},
        [Parameter(Position = 11, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${comPeriodadobePeriodcqPeriodscreensPeriodmonitoringPeriodimplPeriodScreensMonitoringServiceImplPeriodsmtpport},
        [Parameter(Position = 12, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${comPeriodadobePeriodcqPeriodscreensPeriodmonitoringPeriodimplPeriodScreensMonitoringServiceImplPeriodusetls},
        [Parameter(Position = 13, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${comPeriodadobePeriodcqPeriodscreensPeriodmonitoringPeriodimplPeriodScreensMonitoringServiceImplPeriodusername},
        [Parameter(Position = 14, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${comPeriodadobePeriodcqPeriodscreensPeriodmonitoringPeriodimplPeriodScreensMonitoringServiceImplPeriodpassword}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeCqScreensMonitoringImplScreensMonitoringServiceImpl' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeCqScreensMonitoringImplScreensMonitoringServiceImpl(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${comPeriodadobePeriodcqPeriodscreensPeriodmonitoringPeriodimplPeriodScreensMonitoringServiceImplPeriodprojectPath},
            ${comPeriodadobePeriodcqPeriodscreensPeriodmonitoringPeriodimplPeriodScreensMonitoringServiceImplPeriodscheduleFrequency},
            ${comPeriodadobePeriodcqPeriodscreensPeriodmonitoringPeriodimplPeriodScreensMonitoringServiceImplPeriodpingTimeout},
            ${comPeriodadobePeriodcqPeriodscreensPeriodmonitoringPeriodimplPeriodScreensMonitoringServiceImplPeriodrecipients},
            ${comPeriodadobePeriodcqPeriodscreensPeriodmonitoringPeriodimplPeriodScreensMonitoringServiceImplPeriodsmtpserver},
            ${comPeriodadobePeriodcqPeriodscreensPeriodmonitoringPeriodimplPeriodScreensMonitoringServiceImplPeriodsmtpport},
            ${comPeriodadobePeriodcqPeriodscreensPeriodmonitoringPeriodimplPeriodScreensMonitoringServiceImplPeriodusetls},
            ${comPeriodadobePeriodcqPeriodscreensPeriodmonitoringPeriodimplPeriodScreensMonitoringServiceImplPeriodusername},
            ${comPeriodadobePeriodcqPeriodscreensPeriodmonitoringPeriodimplPeriodScreensMonitoringServiceImplPeriodpassword}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeCqScreensMqActivemqImplArtemisJMSProvider {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${servicePeriodranking},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${globalPeriodsize},
        [Parameter(Position = 8, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${maxPerioddiskPeriodusage},
        [Parameter(Position = 9, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${persistencePeriodenabled},
        [Parameter(Position = 10, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${threadPeriodpoolPeriodmaxPeriodsize},
        [Parameter(Position = 11, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${scheduledPeriodthreadPeriodpoolPeriodmaxPeriodsize},
        [Parameter(Position = 12, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${gracefulPeriodshutdownPeriodtimeout},
        [Parameter(Position = 13, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${queues},
        [Parameter(Position = 14, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${topics},
        [Parameter(Position = 15, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${addressesPeriodmaxPerioddeliveryPeriodattempts},
        [Parameter(Position = 16, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${addressesPeriodexpiryPerioddelay},
        [Parameter(Position = 17, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${addressesPeriodaddressPeriodfullPeriodmessagePeriodpolicy},
        [Parameter(Position = 18, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${addressesPeriodmaxPeriodsizePeriodbytes},
        [Parameter(Position = 19, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${addressesPeriodpagePeriodsizePeriodbytes},
        [Parameter(Position = 20, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${addressesPeriodpagePeriodcachePeriodmaxPeriodsize},
        [Parameter(Position = 21, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${clusterPerioduser},
        [Parameter(Position = 22, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${clusterPeriodpassword},
        [Parameter(Position = 23, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${clusterPeriodcallPeriodtimeout},
        [Parameter(Position = 24, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${clusterPeriodcallPeriodfailoverPeriodtimeout},
        [Parameter(Position = 25, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${clusterPeriodclientPeriodfailurePeriodcheckPeriodperiod},
        [Parameter(Position = 26, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${clusterPeriodnotificationPeriodattempts},
        [Parameter(Position = 27, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${clusterPeriodnotificationPeriodinterval},
        [Parameter(Position = 28, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${idPeriodcachePeriodsize},
        [Parameter(Position = 29, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${clusterPeriodconfirmationPeriodwindowPeriodsize},
        [Parameter(Position = 30, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${clusterPeriodconnectionPeriodttl},
        [Parameter(Position = 31, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${clusterPeriodduplicatePerioddetection},
        [Parameter(Position = 32, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${clusterPeriodinitialPeriodconnectPeriodattempts},
        [Parameter(Position = 33, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${clusterPeriodmaxPeriodretryPeriodinterval},
        [Parameter(Position = 34, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${clusterPeriodminPeriodlargePeriodmessagePeriodsize},
        [Parameter(Position = 35, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${clusterPeriodproducerPeriodwindowPeriodsize},
        [Parameter(Position = 36, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${clusterPeriodreconnectPeriodattempts},
        [Parameter(Position = 37, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${clusterPeriodretryPeriodinterval},
        [Parameter(Position = 38, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Decimal]
        ${clusterPeriodretryPeriodintervalPeriodmultiplier}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeCqScreensMqActivemqImplArtemisJMSProvider' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeCqScreensMqActivemqImplArtemisJMSProvider(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${servicePeriodranking},
            ${globalPeriodsize},
            ${maxPerioddiskPeriodusage},
            ${persistencePeriodenabled},
            ${threadPeriodpoolPeriodmaxPeriodsize},
            ${scheduledPeriodthreadPeriodpoolPeriodmaxPeriodsize},
            ${gracefulPeriodshutdownPeriodtimeout},
            ${queues},
            ${topics},
            ${addressesPeriodmaxPerioddeliveryPeriodattempts},
            ${addressesPeriodexpiryPerioddelay},
            ${addressesPeriodaddressPeriodfullPeriodmessagePeriodpolicy},
            ${addressesPeriodmaxPeriodsizePeriodbytes},
            ${addressesPeriodpagePeriodsizePeriodbytes},
            ${addressesPeriodpagePeriodcachePeriodmaxPeriodsize},
            ${clusterPerioduser},
            ${clusterPeriodpassword},
            ${clusterPeriodcallPeriodtimeout},
            ${clusterPeriodcallPeriodfailoverPeriodtimeout},
            ${clusterPeriodclientPeriodfailurePeriodcheckPeriodperiod},
            ${clusterPeriodnotificationPeriodattempts},
            ${clusterPeriodnotificationPeriodinterval},
            ${idPeriodcachePeriodsize},
            ${clusterPeriodconfirmationPeriodwindowPeriodsize},
            ${clusterPeriodconnectionPeriodttl},
            ${clusterPeriodduplicatePerioddetection},
            ${clusterPeriodinitialPeriodconnectPeriodattempts},
            ${clusterPeriodmaxPeriodretryPeriodinterval},
            ${clusterPeriodminPeriodlargePeriodmessagePeriodsize},
            ${clusterPeriodproducerPeriodwindowPeriodsize},
            ${clusterPeriodreconnectPeriodattempts},
            ${clusterPeriodretryPeriodinterval},
            ${clusterPeriodretryPeriodintervalPeriodmultiplier}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeCqScreensOfflinecontentImplBulkOfflineUpdateServiceImpl {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${comPeriodadobePeriodcqPeriodscreensPeriodofflinecontentPeriodimplPeriodBulkOfflineUpdateServiceImplPeriodprojectPath},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${comPeriodadobePeriodcqPeriodscreensPeriodofflinecontentPeriodimplPeriodBulkOfflineUpdateServiceImplPeriodscheduleFrequency}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeCqScreensOfflinecontentImplBulkOfflineUpdateServiceImpl' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeCqScreensOfflinecontentImplBulkOfflineUpdateServiceImpl(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${comPeriodadobePeriodcqPeriodscreensPeriodofflinecontentPeriodimplPeriodBulkOfflineUpdateServiceImplPeriodprojectPath},
            ${comPeriodadobePeriodcqPeriodscreensPeriodofflinecontentPeriodimplPeriodBulkOfflineUpdateServiceImplPeriodscheduleFrequency}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeCqScreensOfflinecontentImplOfflineContentServiceImpl {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${disableSmartSync}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeCqScreensOfflinecontentImplOfflineContentServiceImpl' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeCqScreensOfflinecontentImplOfflineContentServiceImpl(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${disableSmartSync}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeCqScreensSegmentationImplSegmentationFeatureFlag {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${enableDataTriggeredContent}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeCqScreensSegmentationImplSegmentationFeatureFlag' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeCqScreensSegmentationImplSegmentationFeatureFlag(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${enableDataTriggeredContent}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeCqSecurityHcBundlesImplHtmlLibraryManagerConfigHealthCh {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${hcPeriodtags}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeCqSecurityHcBundlesImplHtmlLibraryManagerConfigHealthCh' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeCqSecurityHcBundlesImplHtmlLibraryManagerConfigHealthCh(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${hcPeriodtags}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeCqSecurityHcBundlesImplWcmFilterHealthCheck {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${hcPeriodtags}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeCqSecurityHcBundlesImplWcmFilterHealthCheck' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeCqSecurityHcBundlesImplWcmFilterHealthCheck(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${hcPeriodtags}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeCqSecurityHcDispatcherImplDispatcherAccessHealthCheck {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${hcPeriodtags},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${dispatcherPeriodaddress},
        [Parameter(Position = 8, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${dispatcherPeriodfilterPeriodallowed},
        [Parameter(Position = 9, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${dispatcherPeriodfilterPeriodblocked}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeCqSecurityHcDispatcherImplDispatcherAccessHealthCheck' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeCqSecurityHcDispatcherImplDispatcherAccessHealthCheck(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${hcPeriodtags},
            ${dispatcherPeriodaddress},
            ${dispatcherPeriodfilterPeriodallowed},
            ${dispatcherPeriodfilterPeriodblocked}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeCqSecurityHcPackagesImplExampleContentHealthCheck {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${hcPeriodtags}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeCqSecurityHcPackagesImplExampleContentHealthCheck' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeCqSecurityHcPackagesImplExampleContentHealthCheck(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${hcPeriodtags}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeCqSecurityHcWebserverImplClickjackingHealthCheck {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${hcPeriodtags},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${webserverPeriodaddress}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeCqSecurityHcWebserverImplClickjackingHealthCheck' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeCqSecurityHcWebserverImplClickjackingHealthCheck(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${hcPeriodtags},
            ${webserverPeriodaddress}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeCqSocialAccountverificationImplAccountManagementConfigIm {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${enable},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${ttl1},
        [Parameter(Position = 8, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${ttl2}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeCqSocialAccountverificationImplAccountManagementConfigIm' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeCqSocialAccountverificationImplAccountManagementConfigIm(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${enable},
            ${ttl1},
            ${ttl2}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeCqSocialActivitystreamsClientImplSocialActivityComponen {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${priority}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeCqSocialActivitystreamsClientImplSocialActivityComponen' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeCqSocialActivitystreamsClientImplSocialActivityComponen(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${priority}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeCqSocialActivitystreamsClientImplSocialActivityStreamCo {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${priority}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeCqSocialActivitystreamsClientImplSocialActivityStreamCo' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeCqSocialActivitystreamsClientImplSocialActivityStreamCo(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${priority}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeCqSocialActivitystreamsListenerImplEventListenerHandler {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${eventPeriodtopics},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${eventPeriodfilter}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeCqSocialActivitystreamsListenerImplEventListenerHandler' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeCqSocialActivitystreamsListenerImplEventListenerHandler(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${eventPeriodtopics},
            ${eventPeriodfilter}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeCqSocialActivitystreamsListenerImplModerationEventExten {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${accepted},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${ranked}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeCqSocialActivitystreamsListenerImplModerationEventExten' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeCqSocialActivitystreamsListenerImplModerationEventExten(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${accepted},
            ${ranked}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeCqSocialActivitystreamsListenerImplRatingEventActivityS {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${ranking},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${enable}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeCqSocialActivitystreamsListenerImplRatingEventActivityS' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeCqSocialActivitystreamsListenerImplRatingEventActivityS(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${ranking},
            ${enable}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeCqSocialActivitystreamsListenerImplResourceActivityStre {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${streamPath},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${streamName}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeCqSocialActivitystreamsListenerImplResourceActivityStre' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeCqSocialActivitystreamsListenerImplResourceActivityStre(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${streamPath},
            ${streamName}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeCqSocialCalendarClientEndpointsImplCalendarOperationsI {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${maxRetry},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${fieldWhitelist},
        [Parameter(Position = 8, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${attachmentTypeBlacklist}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeCqSocialCalendarClientEndpointsImplCalendarOperationsI' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeCqSocialCalendarClientEndpointsImplCalendarOperationsI(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${maxRetry},
            ${fieldWhitelist},
            ${attachmentTypeBlacklist}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeCqSocialCalendarClientOperationextensionsEventAttachmen {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${attachmentTypeBlacklist},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${extensionPeriodorder}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeCqSocialCalendarClientOperationextensionsEventAttachmen' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeCqSocialCalendarClientOperationextensionsEventAttachmen(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${attachmentTypeBlacklist},
            ${extensionPeriodorder}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeCqSocialCalendarServletsTimeZoneServlet {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${timezonesPeriodexpirytime}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeCqSocialCalendarServletsTimeZoneServlet' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeCqSocialCalendarServletsTimeZoneServlet(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${timezonesPeriodexpirytime}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeCqSocialCommonsCommentsEndpointsImplCommentDeleteEvent {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${ranking}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeCqSocialCommonsCommentsEndpointsImplCommentDeleteEvent' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeCqSocialCommonsCommentsEndpointsImplCommentDeleteEvent(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${ranking}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeCqSocialCommonsCommentsEndpointsImplCommentOperationSe {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${fieldWhitelist},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${attachmentTypeBlacklist}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeCqSocialCommonsCommentsEndpointsImplCommentOperationSe' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeCqSocialCommonsCommentsEndpointsImplCommentOperationSe(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${fieldWhitelist},
            ${attachmentTypeBlacklist}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeCqSocialCommonsCommentsEndpointsImplTranslationOperati {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${fieldWhitelist},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${attachmentTypeBlacklist}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeCqSocialCommonsCommentsEndpointsImplTranslationOperati' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeCqSocialCommonsCommentsEndpointsImplTranslationOperati(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${fieldWhitelist},
            ${attachmentTypeBlacklist}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeCqSocialCommonsCommentsListingImplSearchCommentSocialC {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${numUserLimit}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeCqSocialCommonsCommentsListingImplSearchCommentSocialC' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeCqSocialCommonsCommentsListingImplSearchCommentSocialC(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${numUserLimit}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeCqSocialCommonsCommentsSchedulerImplSearchScheduledPos {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${enableScheduledPostsSearch},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${numberOfMinutes},
        [Parameter(Position = 8, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${maxSearchLimit}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeCqSocialCommonsCommentsSchedulerImplSearchScheduledPos' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeCqSocialCommonsCommentsSchedulerImplSearchScheduledPos(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${enableScheduledPostsSearch},
            ${numberOfMinutes},
            ${maxSearchLimit}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeCqSocialCommonsCorsCORSAuthenticationFilter {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${corsPeriodenabling}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeCqSocialCommonsCorsCORSAuthenticationFilter' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeCqSocialCommonsCorsCORSAuthenticationFilter(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${corsPeriodenabling}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeCqSocialCommonsEmailreplyImplAndroidEmailClientProvider {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${priorityOrder},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${replyEmailPatterns}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeCqSocialCommonsEmailreplyImplAndroidEmailClientProvider' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeCqSocialCommonsEmailreplyImplAndroidEmailClientProvider(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${priorityOrder},
            ${replyEmailPatterns}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeCqSocialCommonsEmailreplyImplCommentEmailBuilderImpl {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${contextPeriodpath}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeCqSocialCommonsEmailreplyImplCommentEmailBuilderImpl' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeCqSocialCommonsEmailreplyImplCommentEmailBuilderImpl(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${contextPeriodpath}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeCqSocialCommonsEmailreplyImplCommentEmailEventListener {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${eventPeriodtopics}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeCqSocialCommonsEmailreplyImplCommentEmailEventListener' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeCqSocialCommonsEmailreplyImplCommentEmailEventListener(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${eventPeriodtopics}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeCqSocialCommonsEmailreplyImplCustomEmailClientProvider {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${priorityOrder},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${replyEmailPatterns}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeCqSocialCommonsEmailreplyImplCustomEmailClientProvider' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeCqSocialCommonsEmailreplyImplCustomEmailClientProvider(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${priorityOrder},
            ${replyEmailPatterns}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeCqSocialCommonsEmailreplyImplEmailQuotedTextPatternsImp {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${patternPeriodtime},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${patternPeriodnewline},
        [Parameter(Position = 8, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${patternPerioddayOfMonth},
        [Parameter(Position = 9, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${patternPeriodmonth},
        [Parameter(Position = 10, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${patternPeriodyear},
        [Parameter(Position = 11, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${patternPerioddate},
        [Parameter(Position = 12, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${patternPerioddateTime},
        [Parameter(Position = 13, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${patternPeriodemail}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeCqSocialCommonsEmailreplyImplEmailQuotedTextPatternsImp' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeCqSocialCommonsEmailreplyImplEmailQuotedTextPatternsImp(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${patternPeriodtime},
            ${patternPeriodnewline},
            ${patternPerioddayOfMonth},
            ${patternPeriodmonth},
            ${patternPeriodyear},
            ${patternPerioddate},
            ${patternPerioddateTime},
            ${patternPeriodemail}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeCqSocialCommonsEmailreplyImplEmailReplyConfigurationImp {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${emailPeriodname},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${emailPeriodcreatePostFromReply},
        [Parameter(Position = 8, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${emailPeriodaddCommentIdTo},
        [Parameter(Position = 9, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${emailPeriodsubjectMaximumLength},
        [Parameter(Position = 10, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${emailPeriodreplyToAddress},
        [Parameter(Position = 11, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${emailPeriodreplyToDelimiter},
        [Parameter(Position = 12, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${emailPeriodtrackerIdPrefixInSubject},
        [Parameter(Position = 13, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${emailPeriodtrackerIdPrefixInBody},
        [Parameter(Position = 14, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${emailPeriodasHTML},
        [Parameter(Position = 15, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${emailPerioddefaultUserName},
        [Parameter(Position = 16, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${emailPeriodtemplatesPeriodrootPath}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeCqSocialCommonsEmailreplyImplEmailReplyConfigurationImp' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeCqSocialCommonsEmailreplyImplEmailReplyConfigurationImp(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${emailPeriodname},
            ${emailPeriodcreatePostFromReply},
            ${emailPeriodaddCommentIdTo},
            ${emailPeriodsubjectMaximumLength},
            ${emailPeriodreplyToAddress},
            ${emailPeriodreplyToDelimiter},
            ${emailPeriodtrackerIdPrefixInSubject},
            ${emailPeriodtrackerIdPrefixInBody},
            ${emailPeriodasHTML},
            ${emailPerioddefaultUserName},
            ${emailPeriodtemplatesPeriodrootPath}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeCqSocialCommonsEmailreplyImplEmailReplyImporter {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${connectProtocol}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeCqSocialCommonsEmailreplyImplEmailReplyImporter' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeCqSocialCommonsEmailreplyImplEmailReplyImporter(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${connectProtocol}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeCqSocialCommonsEmailreplyImplGmailEmailClientProvider {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${priorityOrder},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${replyEmailPatterns}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeCqSocialCommonsEmailreplyImplGmailEmailClientProvider' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeCqSocialCommonsEmailreplyImplGmailEmailClientProvider(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${priorityOrder},
            ${replyEmailPatterns}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeCqSocialCommonsEmailreplyImplIOSEmailClientProvider {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${priorityOrder},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${replyEmailPatterns}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeCqSocialCommonsEmailreplyImplIOSEmailClientProvider' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeCqSocialCommonsEmailreplyImplIOSEmailClientProvider(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${priorityOrder},
            ${replyEmailPatterns}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeCqSocialCommonsEmailreplyImplMacmailEmailClientProvider {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${priorityOrder},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${replyEmailPatterns}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeCqSocialCommonsEmailreplyImplMacmailEmailClientProvider' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeCqSocialCommonsEmailreplyImplMacmailEmailClientProvider(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${priorityOrder},
            ${replyEmailPatterns}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeCqSocialCommonsEmailreplyImplOutLookEmailClientProvider {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${priorityOrder},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${replyEmailPatterns}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeCqSocialCommonsEmailreplyImplOutLookEmailClientProvider' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeCqSocialCommonsEmailreplyImplOutLookEmailClientProvider(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${priorityOrder},
            ${replyEmailPatterns}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeCqSocialCommonsEmailreplyImplUnknownEmailClientProvider {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${replyEmailPatterns},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${priorityOrder}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeCqSocialCommonsEmailreplyImplUnknownEmailClientProvider' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeCqSocialCommonsEmailreplyImplUnknownEmailClientProvider(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${replyEmailPatterns},
            ${priorityOrder}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeCqSocialCommonsEmailreplyImplYahooEmailClientProvider {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${priorityOrder},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${replyEmailPatterns}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeCqSocialCommonsEmailreplyImplYahooEmailClientProvider' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeCqSocialCommonsEmailreplyImplYahooEmailClientProvider(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${priorityOrder},
            ${replyEmailPatterns}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeCqSocialCommonsMaintainanceImplDeleteTempUGCImageUpload {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${numberOfDays},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${ageOfFile}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeCqSocialCommonsMaintainanceImplDeleteTempUGCImageUpload' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeCqSocialCommonsMaintainanceImplDeleteTempUGCImageUpload(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${numberOfDays},
            ${ageOfFile}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeCqSocialCommonsUgclimiterImplUGCLimiterServiceImpl {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${eventPeriodtopics},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${eventPeriodfilter},
        [Parameter(Position = 8, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${verbs}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeCqSocialCommonsUgclimiterImplUGCLimiterServiceImpl' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeCqSocialCommonsUgclimiterImplUGCLimiterServiceImpl(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${eventPeriodtopics},
            ${eventPeriodfilter},
            ${verbs}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeCqSocialCommonsUgclimitsconfigImplCommunityUserUGCLimit {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${enable},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${uGCLimit},
        [Parameter(Position = 8, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${ugcLimitDuration},
        [Parameter(Position = 9, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${domains},
        [Parameter(Position = 10, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${toList}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeCqSocialCommonsUgclimitsconfigImplCommunityUserUGCLimit' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeCqSocialCommonsUgclimitsconfigImplCommunityUserUGCLimit(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${enable},
            ${uGCLimit},
            ${ugcLimitDuration},
            ${domains},
            ${toList}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeCqSocialConnectOauthImplFacebookProviderImpl {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${oauthPeriodproviderPeriodid},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${oauthPeriodcloudPeriodconfigPeriodroot},
        [Parameter(Position = 8, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${providerPeriodconfigPeriodroot},
        [Parameter(Position = 9, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${providerPeriodconfigPeriodcreatePeriodtagsPeriodenabled},
        [Parameter(Position = 10, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${providerPeriodconfigPerioduserPeriodfolder},
        [Parameter(Position = 11, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${providerPeriodconfigPeriodfacebookPeriodfetchPeriodfields},
        [Parameter(Position = 12, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${providerPeriodconfigPeriodfacebookPeriodfields},
        [Parameter(Position = 13, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${providerPeriodconfigPeriodrefreshPerioduserdataPeriodenabled}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeCqSocialConnectOauthImplFacebookProviderImpl' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeCqSocialConnectOauthImplFacebookProviderImpl(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${oauthPeriodproviderPeriodid},
            ${oauthPeriodcloudPeriodconfigPeriodroot},
            ${providerPeriodconfigPeriodroot},
            ${providerPeriodconfigPeriodcreatePeriodtagsPeriodenabled},
            ${providerPeriodconfigPerioduserPeriodfolder},
            ${providerPeriodconfigPeriodfacebookPeriodfetchPeriodfields},
            ${providerPeriodconfigPeriodfacebookPeriodfields},
            ${providerPeriodconfigPeriodrefreshPerioduserdataPeriodenabled}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeCqSocialConnectOauthImplSocialOAuthAuthenticationHandle {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${path},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${servicePeriodranking}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeCqSocialConnectOauthImplSocialOAuthAuthenticationHandle' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeCqSocialConnectOauthImplSocialOAuthAuthenticationHandle(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${path},
            ${servicePeriodranking}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeCqSocialConnectOauthImplSocialOAuthUserProfileMapper {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${facebook},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${twitter},
        [Parameter(Position = 8, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${providerPeriodconfigPerioduserPeriodfolder}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeCqSocialConnectOauthImplSocialOAuthUserProfileMapper' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeCqSocialConnectOauthImplSocialOAuthUserProfileMapper(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${facebook},
            ${twitter},
            ${providerPeriodconfigPerioduserPeriodfolder}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeCqSocialConnectOauthImplTwitterProviderImpl {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${oauthPeriodproviderPeriodid},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${oauthPeriodcloudPeriodconfigPeriodroot},
        [Parameter(Position = 8, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${providerPeriodconfigPeriodroot},
        [Parameter(Position = 9, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${providerPeriodconfigPerioduserPeriodfolder},
        [Parameter(Position = 10, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${providerPeriodconfigPeriodtwitterPeriodenablePeriodparams},
        [Parameter(Position = 11, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${providerPeriodconfigPeriodtwitterPeriodparams},
        [Parameter(Position = 12, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${providerPeriodconfigPeriodrefreshPerioduserdataPeriodenabled}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeCqSocialConnectOauthImplTwitterProviderImpl' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeCqSocialConnectOauthImplTwitterProviderImpl(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${oauthPeriodproviderPeriodid},
            ${oauthPeriodcloudPeriodconfigPeriodroot},
            ${providerPeriodconfigPeriodroot},
            ${providerPeriodconfigPerioduserPeriodfolder},
            ${providerPeriodconfigPeriodtwitterPeriodenablePeriodparams},
            ${providerPeriodconfigPeriodtwitterPeriodparams},
            ${providerPeriodconfigPeriodrefreshPerioduserdataPeriodenabled}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeCqSocialContentFragmentsServicesImplCommunitiesFragmen {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${cqPeriodsocialPeriodcontentPeriodfragmentsPeriodservicesPeriodenabled},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${cqPeriodsocialPeriodcontentPeriodfragmentsPeriodservicesPeriodwaitTimeSeconds}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeCqSocialContentFragmentsServicesImplCommunitiesFragmen' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeCqSocialContentFragmentsServicesImplCommunitiesFragmen(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${cqPeriodsocialPeriodcontentPeriodfragmentsPeriodservicesPeriodenabled},
            ${cqPeriodsocialPeriodcontentPeriodfragmentsPeriodservicesPeriodwaitTimeSeconds}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeCqSocialDatastoreAsImplASResourceProviderFactory {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${versionPeriodid},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${cachePeriodon},
        [Parameter(Position = 8, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${concurrencyPeriodlevel},
        [Parameter(Position = 9, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${cachePeriodstartPeriodsize},
        [Parameter(Position = 10, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${cachePeriodttl},
        [Parameter(Position = 11, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${cachePeriodsize},
        [Parameter(Position = 12, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${timePeriodlimit}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeCqSocialDatastoreAsImplASResourceProviderFactory' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeCqSocialDatastoreAsImplASResourceProviderFactory(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${versionPeriodid},
            ${cachePeriodon},
            ${concurrencyPeriodlevel},
            ${cachePeriodstartPeriodsize},
            ${cachePeriodttl},
            ${cachePeriodsize},
            ${timePeriodlimit}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeCqSocialDatastoreOpImplSocialMSResourceProviderFactory {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${solrPeriodzkPeriodtimeout},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${solrPeriodcommit},
        [Parameter(Position = 8, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${cachePeriodon},
        [Parameter(Position = 9, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${concurrencyPeriodlevel},
        [Parameter(Position = 10, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${cachePeriodstartPeriodsize},
        [Parameter(Position = 11, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${cachePeriodttl},
        [Parameter(Position = 12, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${cachePeriodsize}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeCqSocialDatastoreOpImplSocialMSResourceProviderFactory' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeCqSocialDatastoreOpImplSocialMSResourceProviderFactory(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${solrPeriodzkPeriodtimeout},
            ${solrPeriodcommit},
            ${cachePeriodon},
            ${concurrencyPeriodlevel},
            ${cachePeriodstartPeriodsize},
            ${cachePeriodttl},
            ${cachePeriodsize}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeCqSocialDatastoreRdbImplSocialRDBResourceProviderFactor {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${solrPeriodzkPeriodtimeout},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${solrPeriodcommit},
        [Parameter(Position = 8, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${cachePeriodon},
        [Parameter(Position = 9, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${concurrencyPeriodlevel},
        [Parameter(Position = 10, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${cachePeriodstartPeriodsize},
        [Parameter(Position = 11, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${cachePeriodttl},
        [Parameter(Position = 12, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${cachePeriodsize}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeCqSocialDatastoreRdbImplSocialRDBResourceProviderFactor' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeCqSocialDatastoreRdbImplSocialRDBResourceProviderFactor(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${solrPeriodzkPeriodtimeout},
            ${solrPeriodcommit},
            ${cachePeriodon},
            ${concurrencyPeriodlevel},
            ${cachePeriodstartPeriodsize},
            ${cachePeriodttl},
            ${cachePeriodsize}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeCqSocialEnablementAdaptorsEnablementLearningPathAdaptorF {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${isMemberCheck}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeCqSocialEnablementAdaptorsEnablementLearningPathAdaptorF' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeCqSocialEnablementAdaptorsEnablementLearningPathAdaptorF(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${isMemberCheck}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeCqSocialEnablementAdaptorsEnablementResourceAdaptorFacto {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${isMemberCheck}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeCqSocialEnablementAdaptorsEnablementResourceAdaptorFacto' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeCqSocialEnablementAdaptorsEnablementResourceAdaptorFacto(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${isMemberCheck}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeCqSocialEnablementLearningpathEndpointsImplEnablementL {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${fieldWhitelist}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeCqSocialEnablementLearningpathEndpointsImplEnablementL' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeCqSocialEnablementLearningpathEndpointsImplEnablementL(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${fieldWhitelist}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeCqSocialEnablementResourceEndpointsImplEnablementResou {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${fieldWhitelist}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeCqSocialEnablementResourceEndpointsImplEnablementResou' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeCqSocialEnablementResourceEndpointsImplEnablementResou(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${fieldWhitelist}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeCqSocialEnablementServicesImplAuthorMarkerImpl {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${servicePeriodranking}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeCqSocialEnablementServicesImplAuthorMarkerImpl' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeCqSocialEnablementServicesImplAuthorMarkerImpl(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${servicePeriodranking}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeCqSocialFilelibraryClientEndpointsFilelibraryDownloadGe {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${slingPeriodservletPeriodselectors},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${slingPeriodservletPeriodextensions}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeCqSocialFilelibraryClientEndpointsFilelibraryDownloadGe' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeCqSocialFilelibraryClientEndpointsFilelibraryDownloadGe(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${slingPeriodservletPeriodselectors},
            ${slingPeriodservletPeriodextensions}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeCqSocialFilelibraryClientEndpointsImplFileLibraryOpera {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${fieldWhitelist},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${attachmentTypeBlacklist}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeCqSocialFilelibraryClientEndpointsImplFileLibraryOpera' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeCqSocialFilelibraryClientEndpointsImplFileLibraryOpera(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${fieldWhitelist},
            ${attachmentTypeBlacklist}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeCqSocialForumClientEndpointsImplForumOperationsService {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${fieldWhitelist},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${attachmentTypeBlacklist}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeCqSocialForumClientEndpointsImplForumOperationsService' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeCqSocialForumClientEndpointsImplForumOperationsService(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${fieldWhitelist},
            ${attachmentTypeBlacklist}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeCqSocialForumDispatcherImplFlushOperations {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${extensionPeriodorder},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${flushPeriodforumontopic}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeCqSocialForumDispatcherImplFlushOperations' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeCqSocialForumDispatcherImplFlushOperations(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${extensionPeriodorder},
            ${flushPeriodforumontopic}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeCqSocialGroupClientImplCommunityGroupCollectionComponen {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${groupPeriodlistingPeriodpaginationPeriodenable},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${groupPeriodlistingPeriodlazyloadingPeriodenable},
        [Parameter(Position = 8, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${pagePeriodsize},
        [Parameter(Position = 9, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${priority}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeCqSocialGroupClientImplCommunityGroupCollectionComponen' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeCqSocialGroupClientImplCommunityGroupCollectionComponen(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${groupPeriodlistingPeriodpaginationPeriodenable},
            ${groupPeriodlistingPeriodlazyloadingPeriodenable},
            ${pagePeriodsize},
            ${priority}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeCqSocialGroupImplGroupServiceImpl {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${maxWaitTime},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${minWaitBetweenRetries}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeCqSocialGroupImplGroupServiceImpl' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeCqSocialGroupImplGroupServiceImpl(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${maxWaitTime},
            ${minWaitBetweenRetries}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeCqSocialHandlebarsGuavaTemplateCacheImpl {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${parameterPeriodguavaPeriodcachePeriodenabled},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${parameterPeriodguavaPeriodcachePeriodparams},
        [Parameter(Position = 8, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${parameterPeriodguavaPeriodcachePeriodreload},
        [Parameter(Position = 9, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${servicePeriodranking}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeCqSocialHandlebarsGuavaTemplateCacheImpl' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeCqSocialHandlebarsGuavaTemplateCacheImpl(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${parameterPeriodguavaPeriodcachePeriodenabled},
            ${parameterPeriodguavaPeriodcachePeriodparams},
            ${parameterPeriodguavaPeriodcachePeriodreload},
            ${servicePeriodranking}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeCqSocialIdeationClientEndpointsImplIdeationOperationsS {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${fieldWhitelist},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${attachmentTypeBlacklist}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeCqSocialIdeationClientEndpointsImplIdeationOperationsS' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeCqSocialIdeationClientEndpointsImplIdeationOperationsS(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${fieldWhitelist},
            ${attachmentTypeBlacklist}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeCqSocialJournalClientEndpointsImplJournalOperationsSer {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${fieldWhitelist},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${attachmentTypeBlacklist}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeCqSocialJournalClientEndpointsImplJournalOperationsSer' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeCqSocialJournalClientEndpointsImplJournalOperationsSer(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${fieldWhitelist},
            ${attachmentTypeBlacklist}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeCqSocialMembersEndpointsImplCommunityMemberGroupProfile {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${fieldWhitelist}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeCqSocialMembersEndpointsImplCommunityMemberGroupProfile' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeCqSocialMembersEndpointsImplCommunityMemberGroupProfile(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${fieldWhitelist}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeCqSocialMembersEndpointsImplCommunityMemberUserProfileO {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${fieldWhitelist}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeCqSocialMembersEndpointsImplCommunityMemberUserProfileO' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeCqSocialMembersEndpointsImplCommunityMemberUserProfileO(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${fieldWhitelist}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeCqSocialMembersImplCommunityMemberGroupProfileComponentF {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${everyoneLimit},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${priority}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeCqSocialMembersImplCommunityMemberGroupProfileComponentF' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeCqSocialMembersImplCommunityMemberGroupProfileComponentF(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${everyoneLimit},
            ${priority}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeCqSocialMessagingClientEndpointsImplMessagingOperation {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${messagePeriodproperties},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${messageBoxSizeLimit},
        [Parameter(Position = 8, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${messageCountLimit},
        [Parameter(Position = 9, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${notifyFailure},
        [Parameter(Position = 10, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${failureMessageFrom},
        [Parameter(Position = 11, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${failureTemplatePath},
        [Parameter(Position = 12, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${maxRetries},
        [Parameter(Position = 13, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${minWaitBetweenRetries},
        [Parameter(Position = 14, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${countUpdatePoolSize},
        [Parameter(Position = 15, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${inboxPeriodpath},
        [Parameter(Position = 16, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${sentitemsPeriodpath},
        [Parameter(Position = 17, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${supportAttachments},
        [Parameter(Position = 18, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${supportGroupMessaging},
        [Parameter(Position = 19, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${maxTotalRecipients},
        [Parameter(Position = 20, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${batchSize},
        [Parameter(Position = 21, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${maxTotalAttachmentSize},
        [Parameter(Position = 22, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${attachmentTypeBlacklist},
        [Parameter(Position = 23, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${allowedAttachmentTypes},
        [Parameter(Position = 24, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${serviceSelector},
        [Parameter(Position = 25, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${fieldWhitelist}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeCqSocialMessagingClientEndpointsImplMessagingOperation' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeCqSocialMessagingClientEndpointsImplMessagingOperation(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${messagePeriodproperties},
            ${messageBoxSizeLimit},
            ${messageCountLimit},
            ${notifyFailure},
            ${failureMessageFrom},
            ${failureTemplatePath},
            ${maxRetries},
            ${minWaitBetweenRetries},
            ${countUpdatePoolSize},
            ${inboxPeriodpath},
            ${sentitemsPeriodpath},
            ${supportAttachments},
            ${supportGroupMessaging},
            ${maxTotalRecipients},
            ${batchSize},
            ${maxTotalAttachmentSize},
            ${attachmentTypeBlacklist},
            ${allowedAttachmentTypes},
            ${serviceSelector},
            ${fieldWhitelist}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeCqSocialModerationDashboardApiFilterGroupSocialComponen {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${resourceTypePeriodfilters},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${priority}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeCqSocialModerationDashboardApiFilterGroupSocialComponen' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeCqSocialModerationDashboardApiFilterGroupSocialComponen(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${resourceTypePeriodfilters},
            ${priority}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeCqSocialModerationDashboardApiModerationDashboardSocial {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${priority}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeCqSocialModerationDashboardApiModerationDashboardSocial' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeCqSocialModerationDashboardApiModerationDashboardSocial(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${priority}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeCqSocialModerationDashboardApiUserDetailsSocialComponen {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${priority}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeCqSocialModerationDashboardApiUserDetailsSocialComponen' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeCqSocialModerationDashboardApiUserDetailsSocialComponen(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${priority}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeCqSocialModerationDashboardInternalImplFilterGroupSoci {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${resourceTypePeriodfilters},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${priority}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeCqSocialModerationDashboardInternalImplFilterGroupSoci' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeCqSocialModerationDashboardInternalImplFilterGroupSoci(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${resourceTypePeriodfilters},
            ${priority}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeCqSocialNotificationsImplMentionsRouter {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${eventPeriodtopics},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${eventPeriodfilter}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeCqSocialNotificationsImplMentionsRouter' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeCqSocialNotificationsImplMentionsRouter(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${eventPeriodtopics},
            ${eventPeriodfilter}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeCqSocialNotificationsImplNotificationManagerImpl {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${maxPeriodunreadPeriodnotificationPeriodcount}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeCqSocialNotificationsImplNotificationManagerImpl' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeCqSocialNotificationsImplNotificationManagerImpl(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${maxPeriodunreadPeriodnotificationPeriodcount}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeCqSocialNotificationsImplNotificationsRouter {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${eventPeriodtopics},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${eventPeriodfilter}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeCqSocialNotificationsImplNotificationsRouter' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeCqSocialNotificationsImplNotificationsRouter(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${eventPeriodtopics},
            ${eventPeriodfilter}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeCqSocialQnaClientEndpointsImplQnaForumOperationsServic {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${fieldWhitelist},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${attachmentTypeBlacklist}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeCqSocialQnaClientEndpointsImplQnaForumOperationsServic' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeCqSocialQnaClientEndpointsImplQnaForumOperationsServic(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${fieldWhitelist},
            ${attachmentTypeBlacklist}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeCqSocialReportingAnalyticsServicesImplAnalyticsReportI {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${cqPeriodsocialPeriodreportingPeriodanalyticsPeriodpollingPeriodimporterPeriodinterval},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${cqPeriodsocialPeriodreportingPeriodanalyticsPeriodpollingPeriodimporterPeriodpageSize}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeCqSocialReportingAnalyticsServicesImplAnalyticsReportI' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeCqSocialReportingAnalyticsServicesImplAnalyticsReportI(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${cqPeriodsocialPeriodreportingPeriodanalyticsPeriodpollingPeriodimporterPeriodinterval},
            ${cqPeriodsocialPeriodreportingPeriodanalyticsPeriodpollingPeriodimporterPeriodpageSize}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeCqSocialReportingAnalyticsServicesImplAnalyticsReportM {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${reportPeriodfetchPerioddelay}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeCqSocialReportingAnalyticsServicesImplAnalyticsReportM' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeCqSocialReportingAnalyticsServicesImplAnalyticsReportM(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${reportPeriodfetchPerioddelay}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeCqSocialReportingAnalyticsServicesImplSiteTrendReportS {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${cqPeriodsocialPeriodconsolePeriodanalyticsPeriodsitesPeriodmapping},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${priority}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeCqSocialReportingAnalyticsServicesImplSiteTrendReportS' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeCqSocialReportingAnalyticsServicesImplSiteTrendReportS(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${cqPeriodsocialPeriodconsolePeriodanalyticsPeriodsitesPeriodmapping},
            ${priority}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeCqSocialReviewClientEndpointsImplReviewOperationsServi {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${fieldWhitelist},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${attachmentTypeBlacklist}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeCqSocialReviewClientEndpointsImplReviewOperationsServi' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeCqSocialReviewClientEndpointsImplReviewOperationsServi(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${fieldWhitelist},
            ${attachmentTypeBlacklist}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeCqSocialScfCoreOperationsImplSocialOperationsServlet {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${slingPeriodservletPeriodselectors},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${slingPeriodservletPeriodextensions}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeCqSocialScfCoreOperationsImplSocialOperationsServlet' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeCqSocialScfCoreOperationsImplSocialOperationsServlet(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${slingPeriodservletPeriodselectors},
            ${slingPeriodservletPeriodextensions}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeCqSocialScfEndpointsImplDefaultSocialGetServlet {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${slingPeriodservletPeriodselectors},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${slingPeriodservletPeriodextensions}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeCqSocialScfEndpointsImplDefaultSocialGetServlet' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeCqSocialScfEndpointsImplDefaultSocialGetServlet(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${slingPeriodservletPeriodselectors},
            ${slingPeriodservletPeriodextensions}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeCqSocialScoringImplScoringEventListener {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${eventPeriodtopics},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${eventPeriodfilter}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeCqSocialScoringImplScoringEventListener' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeCqSocialScoringImplScoringEventListener(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${eventPeriodtopics},
            ${eventPeriodfilter}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeCqSocialServiceusersInternalImplServiceUserWrapperImpl {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${enableFallback}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeCqSocialServiceusersInternalImplServiceUserWrapperImpl' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeCqSocialServiceusersInternalImplServiceUserWrapperImpl(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${enableFallback}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeCqSocialSiteEndpointsImplSiteOperationService {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${fieldWhitelist},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${sitePathFilters},
        [Parameter(Position = 8, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${sitePackageGroup}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeCqSocialSiteEndpointsImplSiteOperationService' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeCqSocialSiteEndpointsImplSiteOperationService(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${fieldWhitelist},
            ${sitePathFilters},
            ${sitePackageGroup}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeCqSocialSiteImplAnalyticsComponentConfigurationServiceIm {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${cqPeriodsocialPeriodconsolePeriodanalyticsPeriodcomponents}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeCqSocialSiteImplAnalyticsComponentConfigurationServiceIm' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeCqSocialSiteImplAnalyticsComponentConfigurationServiceIm(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${cqPeriodsocialPeriodconsolePeriodanalyticsPeriodcomponents}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeCqSocialSiteImplSiteConfiguratorImpl {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${componentsUsingTags}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeCqSocialSiteImplSiteConfiguratorImpl' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeCqSocialSiteImplSiteConfiguratorImpl(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${componentsUsingTags}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeCqSocialSrpImplSocialSolrConnector {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${srpPeriodtype}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeCqSocialSrpImplSocialSolrConnector' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeCqSocialSrpImplSocialSolrConnector(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${srpPeriodtype}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeCqSocialSyncImplDiffChangesObserver {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${enabled},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${agentName},
        [Parameter(Position = 8, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${diffPath},
        [Parameter(Position = 9, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${propertyNames}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeCqSocialSyncImplDiffChangesObserver' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeCqSocialSyncImplDiffChangesObserver(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${enabled},
            ${agentName},
            ${diffPath},
            ${propertyNames}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeCqSocialSyncImplGroupSyncListenerImpl {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${nodetypes},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${ignorableprops},
        [Parameter(Position = 8, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${ignorablenodes},
        [Parameter(Position = 9, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${enabled},
        [Parameter(Position = 10, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${distfolders}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeCqSocialSyncImplGroupSyncListenerImpl' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeCqSocialSyncImplGroupSyncListenerImpl(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${nodetypes},
            ${ignorableprops},
            ${ignorablenodes},
            ${enabled},
            ${distfolders}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeCqSocialSyncImplPublisherSyncServiceImpl {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${activeRunModes}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeCqSocialSyncImplPublisherSyncServiceImpl' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeCqSocialSyncImplPublisherSyncServiceImpl(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${activeRunModes}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeCqSocialSyncImplUserSyncListenerImpl {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${nodetypes},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${ignorableprops},
        [Parameter(Position = 8, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${ignorablenodes},
        [Parameter(Position = 9, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${enabled},
        [Parameter(Position = 10, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${distfolders}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeCqSocialSyncImplUserSyncListenerImpl' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeCqSocialSyncImplUserSyncListenerImpl(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${nodetypes},
            ${ignorableprops},
            ${ignorablenodes},
            ${enabled},
            ${distfolders}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeCqSocialTranslationImplTranslationServiceConfigManager {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${translatePeriodlanguage},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${translatePerioddisplay},
        [Parameter(Position = 8, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${translatePeriodattribution},
        [Parameter(Position = 9, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${translatePeriodcaching},
        [Parameter(Position = 10, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${translatePeriodsmartPeriodrendering},
        [Parameter(Position = 11, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${translatePeriodcachingPeriodduration},
        [Parameter(Position = 12, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${translatePeriodsessionPeriodsavePeriodinterval},
        [Parameter(Position = 13, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${translatePeriodsessionPeriodsavePeriodbatchLimit}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeCqSocialTranslationImplTranslationServiceConfigManager' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeCqSocialTranslationImplTranslationServiceConfigManager(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${translatePeriodlanguage},
            ${translatePerioddisplay},
            ${translatePeriodattribution},
            ${translatePeriodcaching},
            ${translatePeriodsmartPeriodrendering},
            ${translatePeriodcachingPeriodduration},
            ${translatePeriodsessionPeriodsavePeriodinterval},
            ${translatePeriodsessionPeriodsavePeriodbatchLimit}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeCqSocialTranslationImplUGCLanguageDetector {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${eventPeriodtopics},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${eventPeriodfilter},
        [Parameter(Position = 8, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${translatePeriodlistenerPeriodtype},
        [Parameter(Position = 9, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${translatePeriodpropertyPeriodlist},
        [Parameter(Position = 10, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${poolSize},
        [Parameter(Position = 11, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${maxPoolSize},
        [Parameter(Position = 12, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${queueSize},
        [Parameter(Position = 13, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${keepAliveTime}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeCqSocialTranslationImplUGCLanguageDetector' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeCqSocialTranslationImplUGCLanguageDetector(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${eventPeriodtopics},
            ${eventPeriodfilter},
            ${translatePeriodlistenerPeriodtype},
            ${translatePeriodpropertyPeriodlist},
            ${poolSize},
            ${maxPoolSize},
            ${queueSize},
            ${keepAliveTime}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeCqSocialUgcbaseDispatcherImplFlushServiceImpl {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${threadPoolSize},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${delayTime},
        [Parameter(Position = 8, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${workerSleepTime}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeCqSocialUgcbaseDispatcherImplFlushServiceImpl' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeCqSocialUgcbaseDispatcherImplFlushServiceImpl(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${threadPoolSize},
            ${delayTime},
            ${workerSleepTime}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeCqSocialUgcbaseImplAysncReverseReplicatorImpl {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${poolSize},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${maxPoolSize},
        [Parameter(Position = 8, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${queueSize},
        [Parameter(Position = 9, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${keepAliveTime}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeCqSocialUgcbaseImplAysncReverseReplicatorImpl' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeCqSocialUgcbaseImplAysncReverseReplicatorImpl(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${poolSize},
            ${maxPoolSize},
            ${queueSize},
            ${keepAliveTime}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeCqSocialUgcbaseImplPublisherConfigurationImpl {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${isPrimaryPublisher}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeCqSocialUgcbaseImplPublisherConfigurationImpl' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeCqSocialUgcbaseImplPublisherConfigurationImpl(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${isPrimaryPublisher}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeCqSocialUgcbaseImplSocialUtilsImpl {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${legacyCloudUGCPathMapping}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeCqSocialUgcbaseImplSocialUtilsImpl' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeCqSocialUgcbaseImplSocialUtilsImpl(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${legacyCloudUGCPathMapping}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeCqSocialUgcbaseModerationImplAutoModerationImpl {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${automoderationPeriodsequence},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${automoderationPeriodonfailurestop}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeCqSocialUgcbaseModerationImplAutoModerationImpl' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeCqSocialUgcbaseModerationImplAutoModerationImpl(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${automoderationPeriodsequence},
            ${automoderationPeriodonfailurestop}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeCqSocialUgcbaseModerationImplSentimentProcess {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${watchwordsPeriodpositive},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${watchwordsPeriodnegative},
        [Parameter(Position = 8, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${watchwordsPeriodpath},
        [Parameter(Position = 9, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${sentimentPeriodpath}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeCqSocialUgcbaseModerationImplSentimentProcess' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeCqSocialUgcbaseModerationImplSentimentProcess(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${watchwordsPeriodpositive},
            ${watchwordsPeriodnegative},
            ${watchwordsPeriodpath},
            ${sentimentPeriodpath}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeCqSocialUgcbaseSecurityImplDefaultAttachmentTypeBlackli {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${defaultPeriodattachmentPeriodtypePeriodblacklist},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${baselinePeriodattachmentPeriodtypePeriodblacklist}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeCqSocialUgcbaseSecurityImplDefaultAttachmentTypeBlackli' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeCqSocialUgcbaseSecurityImplDefaultAttachmentTypeBlackli(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${defaultPeriodattachmentPeriodtypePeriodblacklist},
            ${baselinePeriodattachmentPeriodtypePeriodblacklist}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeCqSocialUgcbaseSecurityImplSaferSlingPostValidatorImpl {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${parameterPeriodwhitelist},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${parameterPeriodwhitelistPeriodprefixes},
        [Parameter(Position = 8, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${binaryPeriodparameterPeriodwhitelist},
        [Parameter(Position = 9, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${modifierPeriodwhitelist},
        [Parameter(Position = 10, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${operationPeriodwhitelist},
        [Parameter(Position = 11, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${operationPeriodwhitelistPeriodprefixes},
        [Parameter(Position = 12, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${typehintPeriodwhitelist},
        [Parameter(Position = 13, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${resourcetypePeriodwhitelist}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeCqSocialUgcbaseSecurityImplSaferSlingPostValidatorImpl' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeCqSocialUgcbaseSecurityImplSaferSlingPostValidatorImpl(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${parameterPeriodwhitelist},
            ${parameterPeriodwhitelistPeriodprefixes},
            ${binaryPeriodparameterPeriodwhitelist},
            ${modifierPeriodwhitelist},
            ${operationPeriodwhitelist},
            ${operationPeriodwhitelistPeriodprefixes},
            ${typehintPeriodwhitelist},
            ${resourcetypePeriodwhitelist}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeCqSocialUserEndpointsImplUsersGroupFromPublishServlet {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${slingPeriodservletPeriodextensions},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${slingPeriodservletPeriodpaths},
        [Parameter(Position = 8, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${slingPeriodservletPeriodmethods}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeCqSocialUserEndpointsImplUsersGroupFromPublishServlet' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeCqSocialUserEndpointsImplUsersGroupFromPublishServlet(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${slingPeriodservletPeriodextensions},
            ${slingPeriodservletPeriodpaths},
            ${slingPeriodservletPeriodmethods}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeCqSocialUserImplTransportHttpToPublisher {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${enable},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${agentPeriodconfiguration},
        [Parameter(Position = 8, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${contextPeriodpath},
        [Parameter(Position = 9, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${disabledPeriodcipherPeriodsuites},
        [Parameter(Position = 10, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${enabledPeriodcipherPeriodsuites}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeCqSocialUserImplTransportHttpToPublisher' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeCqSocialUserImplTransportHttpToPublisher(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${enable},
            ${agentPeriodconfiguration},
            ${contextPeriodpath},
            ${disabledPeriodcipherPeriodsuites},
            ${enabledPeriodcipherPeriodsuites}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeCqUiWcmCommonsInternalServletsRteRTEFilterServletFact {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${resourcePeriodtypes}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeCqUiWcmCommonsInternalServletsRteRTEFilterServletFact' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeCqUiWcmCommonsInternalServletsRteRTEFilterServletFact(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${resourcePeriodtypes}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeCqUpgradesCleanupImplUpgradeContentCleanup {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${deletePeriodpathPeriodregexps},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${deletePeriodsql2Periodquery}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeCqUpgradesCleanupImplUpgradeContentCleanup' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeCqUpgradesCleanupImplUpgradeContentCleanup(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${deletePeriodpathPeriodregexps},
            ${deletePeriodsql2Periodquery}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeCqUpgradesCleanupImplUpgradeInstallFolderCleanup {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${deletePeriodnamePeriodregexps}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeCqUpgradesCleanupImplUpgradeInstallFolderCleanup' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeCqUpgradesCleanupImplUpgradeInstallFolderCleanup(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${deletePeriodnamePeriodregexps}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeCqWcmJobsAsyncImplAsyncDeleteConfigProviderService {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${threshold},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${jobTopicName},
        [Parameter(Position = 8, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${emailEnabled}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeCqWcmJobsAsyncImplAsyncDeleteConfigProviderService' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeCqWcmJobsAsyncImplAsyncDeleteConfigProviderService(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${threshold},
            ${jobTopicName},
            ${emailEnabled}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeCqWcmJobsAsyncImplAsyncJobCleanUpTask {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${schedulerPeriodexpression},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${jobPeriodpurgePeriodthreshold},
        [Parameter(Position = 8, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${jobPeriodpurgePeriodmaxPeriodjobs}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeCqWcmJobsAsyncImplAsyncJobCleanUpTask' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeCqWcmJobsAsyncImplAsyncJobCleanUpTask(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${schedulerPeriodexpression},
            ${jobPeriodpurgePeriodthreshold},
            ${jobPeriodpurgePeriodmaxPeriodjobs}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeCqWcmJobsAsyncImplAsyncMoveConfigProviderService {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${threshold},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${jobTopicName},
        [Parameter(Position = 8, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${emailEnabled}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeCqWcmJobsAsyncImplAsyncMoveConfigProviderService' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeCqWcmJobsAsyncImplAsyncMoveConfigProviderService(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${threshold},
            ${jobTopicName},
            ${emailEnabled}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeCqWcmJobsAsyncImplAsyncPageMoveConfigProviderService {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${threshold},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${jobTopicName},
        [Parameter(Position = 8, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${emailEnabled}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeCqWcmJobsAsyncImplAsyncPageMoveConfigProviderService' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeCqWcmJobsAsyncImplAsyncPageMoveConfigProviderService(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${threshold},
            ${jobTopicName},
            ${emailEnabled}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeCqWcmLaunchesImplLaunchesEventHandler {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${eventPeriodfilter},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${launchesPeriodeventhandlerPeriodthreadpoolPeriodmaxsize},
        [Parameter(Position = 8, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${launchesPeriodeventhandlerPeriodthreadpoolPeriodpriority},
        [Parameter(Position = 9, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${launchesPeriodeventhandlerPeriodupdatelastmodification}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeCqWcmLaunchesImplLaunchesEventHandler' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeCqWcmLaunchesImplLaunchesEventHandler(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${eventPeriodfilter},
            ${launchesPeriodeventhandlerPeriodthreadpoolPeriodmaxsize},
            ${launchesPeriodeventhandlerPeriodthreadpoolPeriodpriority},
            ${launchesPeriodeventhandlerPeriodupdatelastmodification}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeCqWcmMobileQrcodeServletQRCodeImageGenerator {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${cqPeriodwcmPeriodqrcodePeriodservletPeriodwhitelist}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeCqWcmMobileQrcodeServletQRCodeImageGenerator' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeCqWcmMobileQrcodeServletQRCodeImageGenerator(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${cqPeriodwcmPeriodqrcodePeriodservletPeriodwhitelist}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeCqWcmStyleInternalComponentStyleInfoCacheImpl {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${size}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeCqWcmStyleInternalComponentStyleInfoCacheImpl' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeCqWcmStyleInternalComponentStyleInfoCacheImpl(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${size}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeCqWcmTranslationImplTranslationPlatformConfigurationImpl {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${syncTranslationStatePeriodschedulingFormat},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${schedulingRepeatTranslationPeriodschedulingFormat},
        [Parameter(Position = 8, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${syncTranslationStatePeriodlockTimeoutInMinutes},
        [Parameter(Position = 9, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${exportPeriodformat}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeCqWcmTranslationImplTranslationPlatformConfigurationImpl' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeCqWcmTranslationImplTranslationPlatformConfigurationImpl(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${syncTranslationStatePeriodschedulingFormat},
            ${schedulingRepeatTranslationPeriodschedulingFormat},
            ${syncTranslationStatePeriodlockTimeoutInMinutes},
            ${exportPeriodformat}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeFdFpConfigFormsPortalDraftsandSubmissionConfigService {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${portalPeriodoutboxes},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${draftPerioddataPeriodservice},
        [Parameter(Position = 8, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${draftPeriodmetadataPeriodservice},
        [Parameter(Position = 9, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${submitPerioddataPeriodservice},
        [Parameter(Position = 10, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${submitPeriodmetadataPeriodservice},
        [Parameter(Position = 11, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${pendingSignPerioddataPeriodservice},
        [Parameter(Position = 12, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${pendingSignPeriodmetadataPeriodservice}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeFdFpConfigFormsPortalDraftsandSubmissionConfigService' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeFdFpConfigFormsPortalDraftsandSubmissionConfigService(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${portalPeriodoutboxes},
            ${draftPerioddataPeriodservice},
            ${draftPeriodmetadataPeriodservice},
            ${submitPerioddataPeriodservice},
            ${submitPeriodmetadataPeriodservice},
            ${pendingSignPerioddataPeriodservice},
            ${pendingSignPeriodmetadataPeriodservice}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeFdFpConfigFormsPortalSchedulerService {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${formportalPeriodinterval}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeFdFpConfigFormsPortalSchedulerService' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeFdFpConfigFormsPortalSchedulerService(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${formportalPeriodinterval}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeFormsCommonServiceImplDefaultDataProvider {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${alloweddataFileLocations}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeFormsCommonServiceImplDefaultDataProvider' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeFormsCommonServiceImplDefaultDataProvider(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${alloweddataFileLocations}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeFormsCommonServiceImplFormsCommonConfigurationServiceImp {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${tempStorageConfig}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeFormsCommonServiceImplFormsCommonConfigurationServiceImp' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeFormsCommonServiceImplFormsCommonConfigurationServiceImp(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${tempStorageConfig}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeFormsCommonServletTempCleanUpTask {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${schedulerPeriodexpression},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${duration for Temporary Storage},
        [Parameter(Position = 8, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${duration for Anonymous Storage}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeFormsCommonServletTempCleanUpTask' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeFormsCommonServletTempCleanUpTask(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${schedulerPeriodexpression},
            ${duration for Temporary Storage},
            ${duration for Anonymous Storage}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeGraniteAcpPlatformPlatformServlet {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${queryPeriodlimit},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${filePeriodtypePeriodextensionPeriodmap}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeGraniteAcpPlatformPlatformServlet' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeGraniteAcpPlatformPlatformServlet(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${queryPeriodlimit},
            ${filePeriodtypePeriodextensionPeriodmap}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeGraniteActivitystreamsImplActivityManagerImpl {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${aggregatePeriodrelationships},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${aggregatePerioddescendPeriodvirtual}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeGraniteActivitystreamsImplActivityManagerImpl' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeGraniteActivitystreamsImplActivityManagerImpl(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${aggregatePeriodrelationships},
            ${aggregatePerioddescendPeriodvirtual}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeGraniteAnalyzerBaseSystemStatusServlet {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${disabled}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeGraniteAnalyzerBaseSystemStatusServlet' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeGraniteAnalyzerBaseSystemStatusServlet(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${disabled}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeGraniteAnalyzerScriptsCompileAllScriptsCompilerServlet {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${disabled}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeGraniteAnalyzerScriptsCompileAllScriptsCompilerServlet' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeGraniteAnalyzerScriptsCompileAllScriptsCompilerServlet(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${disabled}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeGraniteApicontrollerFilterResolverHookFactory {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${comPeriodadobePeriodcqPeriodcdnPeriodcdnRewriter},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${comPeriodadobePeriodcqPeriodcloudConfigPeriodcomponents},
        [Parameter(Position = 8, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${comPeriodadobePeriodcqPeriodcloudConfigPeriodcore},
        [Parameter(Position = 9, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${comPeriodadobePeriodcqPeriodcloudConfigPeriodui},
        [Parameter(Position = 10, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${comPeriodadobePeriodcqPeriodcomPeriodadobePeriodcqPeriodeditor},
        [Parameter(Position = 11, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${comPeriodadobePeriodcqPeriodcomPeriodadobePeriodcqPeriodprojectsPeriodcore},
        [Parameter(Position = 12, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${comPeriodadobePeriodcqPeriodcomPeriodadobePeriodcqPeriodprojectsPeriodwcmPeriodcore},
        [Parameter(Position = 13, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${comPeriodadobePeriodcqPeriodcomPeriodadobePeriodcqPerioduiPeriodcommons},
        [Parameter(Position = 14, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${comPeriodadobePeriodcqPeriodcomPeriodadobePeriodcqPeriodwcmPeriodstyle},
        [Parameter(Position = 15, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${comPeriodadobePeriodcqPeriodcqActivitymapIntegration},
        [Parameter(Position = 16, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${comPeriodadobePeriodcqPeriodcqContexthubCommons},
        [Parameter(Position = 17, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${comPeriodadobePeriodcqPeriodcqDtm},
        [Parameter(Position = 18, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${comPeriodadobePeriodcqPeriodcqHealthcheck},
        [Parameter(Position = 19, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${comPeriodadobePeriodcqPeriodcqMultisiteTargeting},
        [Parameter(Position = 20, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${comPeriodadobePeriodcqPeriodcqPreUpgradeCleanup},
        [Parameter(Position = 21, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${comPeriodadobePeriodcqPeriodcqProductInfoProvider},
        [Parameter(Position = 22, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${comPeriodadobePeriodcqPeriodcqRestSites},
        [Parameter(Position = 23, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${comPeriodadobePeriodcqPeriodcqSecurityHc},
        [Parameter(Position = 24, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${comPeriodadobePeriodcqPerioddamPeriodcqDamSvgHandler},
        [Parameter(Position = 25, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${comPeriodadobePeriodcqPerioddamPeriodcqScene7Imaging},
        [Parameter(Position = 26, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${comPeriodadobePeriodcqPerioddtmReactorPeriodcore},
        [Parameter(Position = 27, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${comPeriodadobePeriodcqPerioddtmReactorPeriodui},
        [Parameter(Position = 28, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${comPeriodadobePeriodcqPeriodexpJspelResolver},
        [Parameter(Position = 29, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${comPeriodadobePeriodcqPeriodinboxPeriodcqInbox},
        [Parameter(Position = 30, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${comPeriodadobePeriodcqPeriodjsonSchemaParser},
        [Parameter(Position = 31, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${comPeriodadobePeriodcqPeriodmediaPeriodcqMediaPublishingDpsFpCore},
        [Parameter(Position = 32, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${comPeriodadobePeriodcqPeriodmobilePeriodcqMobileCaas},
        [Parameter(Position = 33, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${comPeriodadobePeriodcqPeriodmobilePeriodcqMobileIndexBuilder},
        [Parameter(Position = 34, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${comPeriodadobePeriodcqPeriodmobilePeriodcqMobilePhonegapBuild},
        [Parameter(Position = 35, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${comPeriodadobePeriodcqPeriodmyspell},
        [Parameter(Position = 36, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${comPeriodadobePeriodcqPeriodsamplePeriodwePeriodretailPeriodcore},
        [Parameter(Position = 37, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${comPeriodadobePeriodcqPeriodscreensPeriodcomPeriodadobePeriodcqPeriodscreensPerioddcc},
        [Parameter(Position = 38, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${comPeriodadobePeriodcqPeriodscreensPeriodcomPeriodadobePeriodcqPeriodscreensPeriodmqPeriodcore},
        [Parameter(Position = 39, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${comPeriodadobePeriodcqPeriodsocialPeriodcqSocialAsProvider},
        [Parameter(Position = 40, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${comPeriodadobePeriodcqPeriodsocialPeriodcqSocialBadgingBasicImpl},
        [Parameter(Position = 41, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${comPeriodadobePeriodcqPeriodsocialPeriodcqSocialBadgingImpl},
        [Parameter(Position = 42, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${comPeriodadobePeriodcqPeriodsocialPeriodcqSocialCalendarImpl},
        [Parameter(Position = 43, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${comPeriodadobePeriodcqPeriodsocialPeriodcqSocialContentFragmentsImpl},
        [Parameter(Position = 44, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${comPeriodadobePeriodcqPeriodsocialPeriodcqSocialEnablementImpl},
        [Parameter(Position = 45, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${comPeriodadobePeriodcqPeriodsocialPeriodcqSocialGraphImpl},
        [Parameter(Position = 46, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${comPeriodadobePeriodcqPeriodsocialPeriodcqSocialIdeationImpl},
        [Parameter(Position = 47, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${comPeriodadobePeriodcqPeriodsocialPeriodcqSocialJcrProvider},
        [Parameter(Position = 48, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${comPeriodadobePeriodcqPeriodsocialPeriodcqSocialMembersImpl},
        [Parameter(Position = 49, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${comPeriodadobePeriodcqPeriodsocialPeriodcqSocialMsProvider},
        [Parameter(Position = 50, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${comPeriodadobePeriodcqPeriodsocialPeriodcqSocialNotificationsChannelsWeb},
        [Parameter(Position = 51, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${comPeriodadobePeriodcqPeriodsocialPeriodcqSocialNotificationsImpl},
        [Parameter(Position = 52, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${comPeriodadobePeriodcqPeriodsocialPeriodcqSocialRdbProvider},
        [Parameter(Position = 53, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${comPeriodadobePeriodcqPeriodsocialPeriodcqSocialScfImpl},
        [Parameter(Position = 54, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${comPeriodadobePeriodcqPeriodsocialPeriodcqSocialScoringBasicImpl},
        [Parameter(Position = 55, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${comPeriodadobePeriodcqPeriodsocialPeriodcqSocialScoringImpl},
        [Parameter(Position = 56, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${comPeriodadobePeriodcqPeriodsocialPeriodcqSocialServiceusersImpl},
        [Parameter(Position = 57, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${comPeriodadobePeriodcqPeriodsocialPeriodcqSocialSrpImpl},
        [Parameter(Position = 58, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${comPeriodadobePeriodcqPeriodsocialPeriodcqSocialUgcbaseImpl},
        [Parameter(Position = 59, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${comPeriodadobePerioddamPeriodcqDamCfmImpl},
        [Parameter(Position = 60, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${comPeriodadobePeriodformsPeriodfoundationFormsFoundationBase},
        [Parameter(Position = 61, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${comPeriodadobePeriodgranitePeriodapicontroller},
        [Parameter(Position = 62, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${comPeriodadobePeriodgranitePeriodassetPeriodcore},
        [Parameter(Position = 63, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${comPeriodadobePeriodgranitePeriodauthPeriodsso},
        [Parameter(Position = 64, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${comPeriodadobePeriodgranitePeriodbundlesPeriodhcPeriodimpl},
        [Parameter(Position = 65, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${comPeriodadobePeriodgranitePeriodcompatRouter},
        [Parameter(Position = 66, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${comPeriodadobePeriodgranitePeriodconf},
        [Parameter(Position = 67, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${comPeriodadobePeriodgranitePeriodconfPerioduiPeriodcore},
        [Parameter(Position = 68, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${comPeriodadobePeriodgranitePeriodcors},
        [Parameter(Position = 69, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${comPeriodadobePeriodgranitePeriodcrxExplorer},
        [Parameter(Position = 70, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${comPeriodadobePeriodgranitePeriodcrxdeLite},
        [Parameter(Position = 71, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${comPeriodadobePeriodgranitePeriodcryptoPeriodconfig},
        [Parameter(Position = 72, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${comPeriodadobePeriodgranitePeriodcryptoPeriodextension},
        [Parameter(Position = 73, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${comPeriodadobePeriodgranitePeriodcryptoPeriodfile},
        [Parameter(Position = 74, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${comPeriodadobePeriodgranitePeriodcryptoPeriodjcr},
        [Parameter(Position = 75, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${comPeriodadobePeriodgranitePeriodcsrf},
        [Parameter(Position = 76, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${comPeriodadobePeriodgranitePerioddistributionPeriodcore},
        [Parameter(Position = 77, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${comPeriodadobePeriodgranitePerioddropwizardPeriodmetrics},
        [Parameter(Position = 78, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${comPeriodadobePeriodgranitePeriodfragsPeriodimpl},
        [Parameter(Position = 79, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${comPeriodadobePeriodgranitePeriodgibson},
        [Parameter(Position = 80, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${comPeriodadobePeriodgranitePeriodinfocollector},
        [Parameter(Position = 81, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${comPeriodadobePeriodgranitePeriodinstallerPeriodfactoryPeriodpackages},
        [Parameter(Position = 82, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${comPeriodadobePeriodgranitePeriodjettyPeriodssl},
        [Parameter(Position = 83, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${comPeriodadobePeriodgranitePeriodjobsPeriodasync},
        [Parameter(Position = 84, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${comPeriodadobePeriodgranitePeriodmaintenancePeriodoak},
        [Parameter(Position = 85, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${comPeriodadobePeriodgranitePeriodmonitoringPeriodcore},
        [Parameter(Position = 86, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${comPeriodadobePeriodgranitePeriodqueries},
        [Parameter(Position = 87, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${comPeriodadobePeriodgranitePeriodreplicationPeriodhcPeriodimpl},
        [Parameter(Position = 88, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${comPeriodadobePeriodgranitePeriodrepositoryPeriodchecker},
        [Parameter(Position = 89, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${comPeriodadobePeriodgranitePeriodrepositoryPeriodhcPeriodimpl},
        [Parameter(Position = 90, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${comPeriodadobePeriodgranitePeriodrestPeriodassets},
        [Parameter(Position = 91, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${comPeriodadobePeriodgranitePeriodsecurityPeriodui},
        [Parameter(Position = 92, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${comPeriodadobePeriodgranitePeriodstartup},
        [Parameter(Position = 93, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${comPeriodadobePeriodgranitePeriodtagsoup},
        [Parameter(Position = 94, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${comPeriodadobePeriodgranitePeriodtaskmanagementPeriodcore},
        [Parameter(Position = 95, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${comPeriodadobePeriodgranitePeriodtaskmanagementPeriodworkflow},
        [Parameter(Position = 96, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${comPeriodadobePeriodgranitePerioduiPeriodclientlibsPeriodcompilerPeriodless},
        [Parameter(Position = 97, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${comPeriodadobePeriodgranitePerioduiPeriodclientlibsPeriodprocessorPeriodgcc},
        [Parameter(Position = 98, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${comPeriodadobePeriodgranitePeriodwebconsolePeriodplugins},
        [Parameter(Position = 99, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${comPeriodadobePeriodgranitePeriodworkflowPeriodconsole},
        [Parameter(Position = 100, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${comPeriodadobePeriodxmpPeriodworkerPeriodfilesPeriodnativePeriodfragmentPeriodlinux},
        [Parameter(Position = 101, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${comPeriodadobePeriodxmpPeriodworkerPeriodfilesPeriodnativePeriodfragmentPeriodmacosx},
        [Parameter(Position = 102, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${comPeriodadobePeriodxmpPeriodworkerPeriodfilesPeriodnativePeriodfragmentPeriodwin},
        [Parameter(Position = 103, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${comPerioddayPeriodcommonsPeriodosgiPeriodwrapperPeriodsimpleJndi},
        [Parameter(Position = 104, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${comPerioddayPeriodcqPeriodcqAuthhandler},
        [Parameter(Position = 105, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${comPerioddayPeriodcqPeriodcqCompatConfigupdate},
        [Parameter(Position = 106, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${comPerioddayPeriodcqPeriodcqLicensebranding},
        [Parameter(Position = 107, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${comPerioddayPeriodcqPeriodcqNotifcationImpl},
        [Parameter(Position = 108, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${comPerioddayPeriodcqPeriodcqReplicationAudit},
        [Parameter(Position = 109, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${comPerioddayPeriodcqPeriodcqSearchExt},
        [Parameter(Position = 110, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${comPerioddayPeriodcqPerioddamPeriodcqDamAnnotationPrint},
        [Parameter(Position = 111, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${comPerioddayPeriodcqPerioddamPeriodcqDamAssetUsage},
        [Parameter(Position = 112, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${comPerioddayPeriodcqPerioddamPeriodcqDamS7dam},
        [Parameter(Position = 113, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${comPerioddayPeriodcqPerioddamPeriodcqDamSimilaritysearch},
        [Parameter(Position = 114, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${comPerioddayPeriodcqPerioddamPerioddamWebdavSupport},
        [Parameter(Position = 115, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${comPerioddayPeriodcqPeriodpreUpgradeTasks},
        [Parameter(Position = 116, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${comPerioddayPeriodcqPeriodreplicationPeriodextensions},
        [Parameter(Position = 117, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${comPerioddayPeriodcqPeriodwcmPeriodcqMsmCore},
        [Parameter(Position = 118, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${comPerioddayPeriodcqPeriodwcmPeriodcqWcmTranslation},
        [Parameter(Position = 119, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${dayCommonsJrawio},
        [Parameter(Position = 120, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${orgPeriodapachePeriodariesPeriodjmxPeriodwhiteboard},
        [Parameter(Position = 121, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${orgPeriodapachePeriodfelixPeriodhttpPeriodsslfilter},
        [Parameter(Position = 122, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${orgPeriodapachePeriodfelixPeriodorgPeriodapachePeriodfelixPeriodthreaddump},
        [Parameter(Position = 123, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${orgPeriodapachePeriodfelixPeriodwebconsolePeriodpluginsPeriodds},
        [Parameter(Position = 124, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${orgPeriodapachePeriodfelixPeriodwebconsolePeriodpluginsPeriodevent},
        [Parameter(Position = 125, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${orgPeriodapachePeriodfelixPeriodwebconsolePeriodpluginsPeriodmemoryusage},
        [Parameter(Position = 126, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${orgPeriodapachePeriodfelixPeriodwebconsolePeriodpluginsPeriodpackageadmin},
        [Parameter(Position = 127, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${orgPeriodapachePeriodjackrabbitPeriodoakAuthLdap},
        [Parameter(Position = 128, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${orgPeriodapachePeriodjackrabbitPeriodoakSegmentTar},
        [Parameter(Position = 129, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${orgPeriodapachePeriodjackrabbitPeriodoakSolrOsgi},
        [Parameter(Position = 130, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${orgPeriodapachePeriodslingPeriodbundleresourcePeriodimpl},
        [Parameter(Position = 131, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${orgPeriodapachePeriodslingPeriodcommonsPeriodfsclassloader},
        [Parameter(Position = 132, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${orgPeriodapachePeriodslingPeriodcommonsPeriodlogPeriodwebconsole},
        [Parameter(Position = 133, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${orgPeriodapachePeriodslingPerioddatasource},
        [Parameter(Position = 134, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${orgPeriodapachePeriodslingPerioddiscoveryPeriodbase},
        [Parameter(Position = 135, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${orgPeriodapachePeriodslingPerioddiscoveryPeriodoak},
        [Parameter(Position = 136, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${orgPeriodapachePeriodslingPerioddiscoveryPeriodsupport},
        [Parameter(Position = 137, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${orgPeriodapachePeriodslingPerioddistributionPeriodapi},
        [Parameter(Position = 138, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${orgPeriodapachePeriodslingPerioddistributionPeriodcore},
        [Parameter(Position = 139, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${orgPeriodapachePeriodslingPeriodextensionsPeriodwebconsolesecurityprovider},
        [Parameter(Position = 140, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${orgPeriodapachePeriodslingPeriodhcPeriodwebconsole},
        [Parameter(Position = 141, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${orgPeriodapachePeriodslingPeriodinstallerPeriodconsole},
        [Parameter(Position = 142, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${orgPeriodapachePeriodslingPeriodinstallerPeriodproviderPeriodfile},
        [Parameter(Position = 143, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${orgPeriodapachePeriodslingPeriodinstallerPeriodproviderPeriodjcr},
        [Parameter(Position = 144, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${orgPeriodapachePeriodslingPeriodjcrPerioddavex},
        [Parameter(Position = 145, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${orgPeriodapachePeriodslingPeriodjcrPeriodresourcesecurity},
        [Parameter(Position = 146, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${orgPeriodapachePeriodslingPeriodjmxPeriodprovider},
        [Parameter(Position = 147, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${orgPeriodapachePeriodslingPeriodlaunchpadPeriodinstaller},
        [Parameter(Position = 148, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${orgPeriodapachePeriodslingPeriodmodelsPeriodimpl},
        [Parameter(Position = 149, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${orgPeriodapachePeriodslingPeriodrepoinitPeriodparser},
        [Parameter(Position = 150, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${orgPeriodapachePeriodslingPeriodresourcePeriodinventory},
        [Parameter(Position = 151, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${orgPeriodapachePeriodslingPeriodresourceresolver},
        [Parameter(Position = 152, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${orgPeriodapachePeriodslingPeriodscriptingPeriodjavascript},
        [Parameter(Position = 153, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${orgPeriodapachePeriodslingPeriodscriptingPeriodjst},
        [Parameter(Position = 154, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${orgPeriodapachePeriodslingPeriodscriptingPeriodsightlyPeriodjsPeriodprovider},
        [Parameter(Position = 155, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${orgPeriodapachePeriodslingPeriodscriptingPeriodsightlyPeriodmodelsPeriodprovider},
        [Parameter(Position = 156, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${orgPeriodapachePeriodslingPeriodsecurity},
        [Parameter(Position = 157, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${orgPeriodapachePeriodslingPeriodservletsPeriodcompat},
        [Parameter(Position = 158, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${orgPeriodapachePeriodslingPeriodservletsPeriodget},
        [Parameter(Position = 159, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${orgPeriodapachePeriodslingPeriodstartupfilterPerioddisabler},
        [Parameter(Position = 160, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${orgPeriodapachePeriodslingPeriodtracer},
        [Parameter(Position = 161, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${wePeriodretailPeriodclientPeriodappPeriodcore}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeGraniteApicontrollerFilterResolverHookFactory' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeGraniteApicontrollerFilterResolverHookFactory(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${comPeriodadobePeriodcqPeriodcdnPeriodcdnRewriter},
            ${comPeriodadobePeriodcqPeriodcloudConfigPeriodcomponents},
            ${comPeriodadobePeriodcqPeriodcloudConfigPeriodcore},
            ${comPeriodadobePeriodcqPeriodcloudConfigPeriodui},
            ${comPeriodadobePeriodcqPeriodcomPeriodadobePeriodcqPeriodeditor},
            ${comPeriodadobePeriodcqPeriodcomPeriodadobePeriodcqPeriodprojectsPeriodcore},
            ${comPeriodadobePeriodcqPeriodcomPeriodadobePeriodcqPeriodprojectsPeriodwcmPeriodcore},
            ${comPeriodadobePeriodcqPeriodcomPeriodadobePeriodcqPerioduiPeriodcommons},
            ${comPeriodadobePeriodcqPeriodcomPeriodadobePeriodcqPeriodwcmPeriodstyle},
            ${comPeriodadobePeriodcqPeriodcqActivitymapIntegration},
            ${comPeriodadobePeriodcqPeriodcqContexthubCommons},
            ${comPeriodadobePeriodcqPeriodcqDtm},
            ${comPeriodadobePeriodcqPeriodcqHealthcheck},
            ${comPeriodadobePeriodcqPeriodcqMultisiteTargeting},
            ${comPeriodadobePeriodcqPeriodcqPreUpgradeCleanup},
            ${comPeriodadobePeriodcqPeriodcqProductInfoProvider},
            ${comPeriodadobePeriodcqPeriodcqRestSites},
            ${comPeriodadobePeriodcqPeriodcqSecurityHc},
            ${comPeriodadobePeriodcqPerioddamPeriodcqDamSvgHandler},
            ${comPeriodadobePeriodcqPerioddamPeriodcqScene7Imaging},
            ${comPeriodadobePeriodcqPerioddtmReactorPeriodcore},
            ${comPeriodadobePeriodcqPerioddtmReactorPeriodui},
            ${comPeriodadobePeriodcqPeriodexpJspelResolver},
            ${comPeriodadobePeriodcqPeriodinboxPeriodcqInbox},
            ${comPeriodadobePeriodcqPeriodjsonSchemaParser},
            ${comPeriodadobePeriodcqPeriodmediaPeriodcqMediaPublishingDpsFpCore},
            ${comPeriodadobePeriodcqPeriodmobilePeriodcqMobileCaas},
            ${comPeriodadobePeriodcqPeriodmobilePeriodcqMobileIndexBuilder},
            ${comPeriodadobePeriodcqPeriodmobilePeriodcqMobilePhonegapBuild},
            ${comPeriodadobePeriodcqPeriodmyspell},
            ${comPeriodadobePeriodcqPeriodsamplePeriodwePeriodretailPeriodcore},
            ${comPeriodadobePeriodcqPeriodscreensPeriodcomPeriodadobePeriodcqPeriodscreensPerioddcc},
            ${comPeriodadobePeriodcqPeriodscreensPeriodcomPeriodadobePeriodcqPeriodscreensPeriodmqPeriodcore},
            ${comPeriodadobePeriodcqPeriodsocialPeriodcqSocialAsProvider},
            ${comPeriodadobePeriodcqPeriodsocialPeriodcqSocialBadgingBasicImpl},
            ${comPeriodadobePeriodcqPeriodsocialPeriodcqSocialBadgingImpl},
            ${comPeriodadobePeriodcqPeriodsocialPeriodcqSocialCalendarImpl},
            ${comPeriodadobePeriodcqPeriodsocialPeriodcqSocialContentFragmentsImpl},
            ${comPeriodadobePeriodcqPeriodsocialPeriodcqSocialEnablementImpl},
            ${comPeriodadobePeriodcqPeriodsocialPeriodcqSocialGraphImpl},
            ${comPeriodadobePeriodcqPeriodsocialPeriodcqSocialIdeationImpl},
            ${comPeriodadobePeriodcqPeriodsocialPeriodcqSocialJcrProvider},
            ${comPeriodadobePeriodcqPeriodsocialPeriodcqSocialMembersImpl},
            ${comPeriodadobePeriodcqPeriodsocialPeriodcqSocialMsProvider},
            ${comPeriodadobePeriodcqPeriodsocialPeriodcqSocialNotificationsChannelsWeb},
            ${comPeriodadobePeriodcqPeriodsocialPeriodcqSocialNotificationsImpl},
            ${comPeriodadobePeriodcqPeriodsocialPeriodcqSocialRdbProvider},
            ${comPeriodadobePeriodcqPeriodsocialPeriodcqSocialScfImpl},
            ${comPeriodadobePeriodcqPeriodsocialPeriodcqSocialScoringBasicImpl},
            ${comPeriodadobePeriodcqPeriodsocialPeriodcqSocialScoringImpl},
            ${comPeriodadobePeriodcqPeriodsocialPeriodcqSocialServiceusersImpl},
            ${comPeriodadobePeriodcqPeriodsocialPeriodcqSocialSrpImpl},
            ${comPeriodadobePeriodcqPeriodsocialPeriodcqSocialUgcbaseImpl},
            ${comPeriodadobePerioddamPeriodcqDamCfmImpl},
            ${comPeriodadobePeriodformsPeriodfoundationFormsFoundationBase},
            ${comPeriodadobePeriodgranitePeriodapicontroller},
            ${comPeriodadobePeriodgranitePeriodassetPeriodcore},
            ${comPeriodadobePeriodgranitePeriodauthPeriodsso},
            ${comPeriodadobePeriodgranitePeriodbundlesPeriodhcPeriodimpl},
            ${comPeriodadobePeriodgranitePeriodcompatRouter},
            ${comPeriodadobePeriodgranitePeriodconf},
            ${comPeriodadobePeriodgranitePeriodconfPerioduiPeriodcore},
            ${comPeriodadobePeriodgranitePeriodcors},
            ${comPeriodadobePeriodgranitePeriodcrxExplorer},
            ${comPeriodadobePeriodgranitePeriodcrxdeLite},
            ${comPeriodadobePeriodgranitePeriodcryptoPeriodconfig},
            ${comPeriodadobePeriodgranitePeriodcryptoPeriodextension},
            ${comPeriodadobePeriodgranitePeriodcryptoPeriodfile},
            ${comPeriodadobePeriodgranitePeriodcryptoPeriodjcr},
            ${comPeriodadobePeriodgranitePeriodcsrf},
            ${comPeriodadobePeriodgranitePerioddistributionPeriodcore},
            ${comPeriodadobePeriodgranitePerioddropwizardPeriodmetrics},
            ${comPeriodadobePeriodgranitePeriodfragsPeriodimpl},
            ${comPeriodadobePeriodgranitePeriodgibson},
            ${comPeriodadobePeriodgranitePeriodinfocollector},
            ${comPeriodadobePeriodgranitePeriodinstallerPeriodfactoryPeriodpackages},
            ${comPeriodadobePeriodgranitePeriodjettyPeriodssl},
            ${comPeriodadobePeriodgranitePeriodjobsPeriodasync},
            ${comPeriodadobePeriodgranitePeriodmaintenancePeriodoak},
            ${comPeriodadobePeriodgranitePeriodmonitoringPeriodcore},
            ${comPeriodadobePeriodgranitePeriodqueries},
            ${comPeriodadobePeriodgranitePeriodreplicationPeriodhcPeriodimpl},
            ${comPeriodadobePeriodgranitePeriodrepositoryPeriodchecker},
            ${comPeriodadobePeriodgranitePeriodrepositoryPeriodhcPeriodimpl},
            ${comPeriodadobePeriodgranitePeriodrestPeriodassets},
            ${comPeriodadobePeriodgranitePeriodsecurityPeriodui},
            ${comPeriodadobePeriodgranitePeriodstartup},
            ${comPeriodadobePeriodgranitePeriodtagsoup},
            ${comPeriodadobePeriodgranitePeriodtaskmanagementPeriodcore},
            ${comPeriodadobePeriodgranitePeriodtaskmanagementPeriodworkflow},
            ${comPeriodadobePeriodgranitePerioduiPeriodclientlibsPeriodcompilerPeriodless},
            ${comPeriodadobePeriodgranitePerioduiPeriodclientlibsPeriodprocessorPeriodgcc},
            ${comPeriodadobePeriodgranitePeriodwebconsolePeriodplugins},
            ${comPeriodadobePeriodgranitePeriodworkflowPeriodconsole},
            ${comPeriodadobePeriodxmpPeriodworkerPeriodfilesPeriodnativePeriodfragmentPeriodlinux},
            ${comPeriodadobePeriodxmpPeriodworkerPeriodfilesPeriodnativePeriodfragmentPeriodmacosx},
            ${comPeriodadobePeriodxmpPeriodworkerPeriodfilesPeriodnativePeriodfragmentPeriodwin},
            ${comPerioddayPeriodcommonsPeriodosgiPeriodwrapperPeriodsimpleJndi},
            ${comPerioddayPeriodcqPeriodcqAuthhandler},
            ${comPerioddayPeriodcqPeriodcqCompatConfigupdate},
            ${comPerioddayPeriodcqPeriodcqLicensebranding},
            ${comPerioddayPeriodcqPeriodcqNotifcationImpl},
            ${comPerioddayPeriodcqPeriodcqReplicationAudit},
            ${comPerioddayPeriodcqPeriodcqSearchExt},
            ${comPerioddayPeriodcqPerioddamPeriodcqDamAnnotationPrint},
            ${comPerioddayPeriodcqPerioddamPeriodcqDamAssetUsage},
            ${comPerioddayPeriodcqPerioddamPeriodcqDamS7dam},
            ${comPerioddayPeriodcqPerioddamPeriodcqDamSimilaritysearch},
            ${comPerioddayPeriodcqPerioddamPerioddamWebdavSupport},
            ${comPerioddayPeriodcqPeriodpreUpgradeTasks},
            ${comPerioddayPeriodcqPeriodreplicationPeriodextensions},
            ${comPerioddayPeriodcqPeriodwcmPeriodcqMsmCore},
            ${comPerioddayPeriodcqPeriodwcmPeriodcqWcmTranslation},
            ${dayCommonsJrawio},
            ${orgPeriodapachePeriodariesPeriodjmxPeriodwhiteboard},
            ${orgPeriodapachePeriodfelixPeriodhttpPeriodsslfilter},
            ${orgPeriodapachePeriodfelixPeriodorgPeriodapachePeriodfelixPeriodthreaddump},
            ${orgPeriodapachePeriodfelixPeriodwebconsolePeriodpluginsPeriodds},
            ${orgPeriodapachePeriodfelixPeriodwebconsolePeriodpluginsPeriodevent},
            ${orgPeriodapachePeriodfelixPeriodwebconsolePeriodpluginsPeriodmemoryusage},
            ${orgPeriodapachePeriodfelixPeriodwebconsolePeriodpluginsPeriodpackageadmin},
            ${orgPeriodapachePeriodjackrabbitPeriodoakAuthLdap},
            ${orgPeriodapachePeriodjackrabbitPeriodoakSegmentTar},
            ${orgPeriodapachePeriodjackrabbitPeriodoakSolrOsgi},
            ${orgPeriodapachePeriodslingPeriodbundleresourcePeriodimpl},
            ${orgPeriodapachePeriodslingPeriodcommonsPeriodfsclassloader},
            ${orgPeriodapachePeriodslingPeriodcommonsPeriodlogPeriodwebconsole},
            ${orgPeriodapachePeriodslingPerioddatasource},
            ${orgPeriodapachePeriodslingPerioddiscoveryPeriodbase},
            ${orgPeriodapachePeriodslingPerioddiscoveryPeriodoak},
            ${orgPeriodapachePeriodslingPerioddiscoveryPeriodsupport},
            ${orgPeriodapachePeriodslingPerioddistributionPeriodapi},
            ${orgPeriodapachePeriodslingPerioddistributionPeriodcore},
            ${orgPeriodapachePeriodslingPeriodextensionsPeriodwebconsolesecurityprovider},
            ${orgPeriodapachePeriodslingPeriodhcPeriodwebconsole},
            ${orgPeriodapachePeriodslingPeriodinstallerPeriodconsole},
            ${orgPeriodapachePeriodslingPeriodinstallerPeriodproviderPeriodfile},
            ${orgPeriodapachePeriodslingPeriodinstallerPeriodproviderPeriodjcr},
            ${orgPeriodapachePeriodslingPeriodjcrPerioddavex},
            ${orgPeriodapachePeriodslingPeriodjcrPeriodresourcesecurity},
            ${orgPeriodapachePeriodslingPeriodjmxPeriodprovider},
            ${orgPeriodapachePeriodslingPeriodlaunchpadPeriodinstaller},
            ${orgPeriodapachePeriodslingPeriodmodelsPeriodimpl},
            ${orgPeriodapachePeriodslingPeriodrepoinitPeriodparser},
            ${orgPeriodapachePeriodslingPeriodresourcePeriodinventory},
            ${orgPeriodapachePeriodslingPeriodresourceresolver},
            ${orgPeriodapachePeriodslingPeriodscriptingPeriodjavascript},
            ${orgPeriodapachePeriodslingPeriodscriptingPeriodjst},
            ${orgPeriodapachePeriodslingPeriodscriptingPeriodsightlyPeriodjsPeriodprovider},
            ${orgPeriodapachePeriodslingPeriodscriptingPeriodsightlyPeriodmodelsPeriodprovider},
            ${orgPeriodapachePeriodslingPeriodsecurity},
            ${orgPeriodapachePeriodslingPeriodservletsPeriodcompat},
            ${orgPeriodapachePeriodslingPeriodservletsPeriodget},
            ${orgPeriodapachePeriodslingPeriodstartupfilterPerioddisabler},
            ${orgPeriodapachePeriodslingPeriodtracer},
            ${wePeriodretailPeriodclientPeriodappPeriodcore}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeGraniteAuthCertImplClientCertAuthHandler {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${path},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${servicePeriodranking}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeGraniteAuthCertImplClientCertAuthHandler' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeGraniteAuthCertImplClientCertAuthHandler(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${path},
            ${servicePeriodranking}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeGraniteAuthIms {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${configid},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${scope}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeGraniteAuthIms' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeGraniteAuthIms(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${configid},
            ${scope}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeGraniteAuthImsImplExternalUserIdMappingProviderExtension {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${oauthPeriodproviderPeriodid}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeGraniteAuthImsImplExternalUserIdMappingProviderExtension' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeGraniteAuthImsImplExternalUserIdMappingProviderExtension(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${oauthPeriodproviderPeriodid}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeGraniteAuthImsImplIMSAccessTokenRequestCustomizerImpl {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${authPeriodimsPeriodclientPeriodsecret},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${customizerPeriodtype}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeGraniteAuthImsImplIMSAccessTokenRequestCustomizerImpl' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeGraniteAuthImsImplIMSAccessTokenRequestCustomizerImpl(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${authPeriodimsPeriodclientPeriodsecret},
            ${customizerPeriodtype}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeGraniteAuthImsImplIMSInstanceCredentialsValidator {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${oauthPeriodproviderPeriodid}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeGraniteAuthImsImplIMSInstanceCredentialsValidator' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeGraniteAuthImsImplIMSInstanceCredentialsValidator(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${oauthPeriodproviderPeriodid}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeGraniteAuthImsImplIMSProviderImpl {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${oauthPeriodproviderPeriodid},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${oauthPeriodproviderPeriodimsPeriodauthorizationPeriodurl},
        [Parameter(Position = 8, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${oauthPeriodproviderPeriodimsPeriodtokenPeriodurl},
        [Parameter(Position = 9, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${oauthPeriodproviderPeriodimsPeriodprofilePeriodurl},
        [Parameter(Position = 10, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${oauthPeriodproviderPeriodimsPeriodextendedPerioddetailsPeriodurls},
        [Parameter(Position = 11, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${oauthPeriodproviderPeriodimsPeriodvalidatePeriodtokenPeriodurl},
        [Parameter(Position = 12, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${oauthPeriodproviderPeriodimsPeriodsessionPeriodproperty},
        [Parameter(Position = 13, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${oauthPeriodproviderPeriodimsPeriodservicePeriodtokenPeriodclientPeriodid},
        [Parameter(Position = 14, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${oauthPeriodproviderPeriodimsPeriodservicePeriodtokenPeriodclientPeriodsecret},
        [Parameter(Position = 15, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${oauthPeriodproviderPeriodimsPeriodservicePeriodtoken},
        [Parameter(Position = 16, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${imsPeriodorgPeriodref},
        [Parameter(Position = 17, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${imsPeriodgroupPeriodmapping},
        [Parameter(Position = 18, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${oauthPeriodproviderPeriodimsPeriodonlyPeriodlicensePeriodgroup}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeGraniteAuthImsImplIMSProviderImpl' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeGraniteAuthImsImplIMSProviderImpl(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${oauthPeriodproviderPeriodid},
            ${oauthPeriodproviderPeriodimsPeriodauthorizationPeriodurl},
            ${oauthPeriodproviderPeriodimsPeriodtokenPeriodurl},
            ${oauthPeriodproviderPeriodimsPeriodprofilePeriodurl},
            ${oauthPeriodproviderPeriodimsPeriodextendedPerioddetailsPeriodurls},
            ${oauthPeriodproviderPeriodimsPeriodvalidatePeriodtokenPeriodurl},
            ${oauthPeriodproviderPeriodimsPeriodsessionPeriodproperty},
            ${oauthPeriodproviderPeriodimsPeriodservicePeriodtokenPeriodclientPeriodid},
            ${oauthPeriodproviderPeriodimsPeriodservicePeriodtokenPeriodclientPeriodsecret},
            ${oauthPeriodproviderPeriodimsPeriodservicePeriodtoken},
            ${imsPeriodorgPeriodref},
            ${imsPeriodgroupPeriodmapping},
            ${oauthPeriodproviderPeriodimsPeriodonlyPeriodlicensePeriodgroup}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeGraniteAuthImsImplImsConfigProviderImpl {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${oauthPeriodconfigmanagerPeriodimsPeriodconfigid},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${imsPeriodowningEntity},
        [Parameter(Position = 8, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${aemPeriodinstanceId},
        [Parameter(Position = 9, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${imsPeriodserviceCode}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeGraniteAuthImsImplImsConfigProviderImpl' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeGraniteAuthImsImplImsConfigProviderImpl(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${oauthPeriodconfigmanagerPeriodimsPeriodconfigid},
            ${imsPeriodowningEntity},
            ${aemPeriodinstanceId},
            ${imsPeriodserviceCode}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeGraniteAuthOauthAccesstokenProvider {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${name},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${authPeriodtokenPeriodproviderPeriodtitle},
        [Parameter(Position = 8, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${authPeriodtokenPeriodproviderPerioddefaultPeriodclaims},
        [Parameter(Position = 9, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${authPeriodtokenPeriodproviderPeriodendpoint},
        [Parameter(Position = 10, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${authPeriodaccessPeriodtokenPeriodrequest},
        [Parameter(Position = 11, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${authPeriodtokenPeriodproviderPeriodkeypairPeriodalias},
        [Parameter(Position = 12, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${authPeriodtokenPeriodproviderPeriodconnPeriodtimeout},
        [Parameter(Position = 13, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${authPeriodtokenPeriodproviderPeriodsoPeriodtimeout},
        [Parameter(Position = 14, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${authPeriodtokenPeriodproviderPeriodclientPeriodid},
        [Parameter(Position = 15, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${authPeriodtokenPeriodproviderPeriodscope},
        [Parameter(Position = 16, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${authPeriodtokenPeriodproviderPeriodreusePeriodaccessPeriodtoken},
        [Parameter(Position = 17, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${authPeriodtokenPeriodproviderPeriodrelaxedPeriodssl},
        [Parameter(Position = 18, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${tokenPeriodrequestPeriodcustomizerPeriodtype},
        [Parameter(Position = 19, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${authPeriodtokenPeriodvalidatorPeriodtype}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeGraniteAuthOauthAccesstokenProvider' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeGraniteAuthOauthAccesstokenProvider(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${name},
            ${authPeriodtokenPeriodproviderPeriodtitle},
            ${authPeriodtokenPeriodproviderPerioddefaultPeriodclaims},
            ${authPeriodtokenPeriodproviderPeriodendpoint},
            ${authPeriodaccessPeriodtokenPeriodrequest},
            ${authPeriodtokenPeriodproviderPeriodkeypairPeriodalias},
            ${authPeriodtokenPeriodproviderPeriodconnPeriodtimeout},
            ${authPeriodtokenPeriodproviderPeriodsoPeriodtimeout},
            ${authPeriodtokenPeriodproviderPeriodclientPeriodid},
            ${authPeriodtokenPeriodproviderPeriodscope},
            ${authPeriodtokenPeriodproviderPeriodreusePeriodaccessPeriodtoken},
            ${authPeriodtokenPeriodproviderPeriodrelaxedPeriodssl},
            ${tokenPeriodrequestPeriodcustomizerPeriodtype},
            ${authPeriodtokenPeriodvalidatorPeriodtype}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeGraniteAuthOauthImplBearerAuthenticationHandler {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${path},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${oauthPeriodclientIdsPeriodallowed},
        [Parameter(Position = 8, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${authPeriodbearerPeriodsyncPeriodims},
        [Parameter(Position = 9, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${authPeriodtokenRequestParameter},
        [Parameter(Position = 10, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${oauthPeriodbearerPeriodconfigid},
        [Parameter(Position = 11, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${oauthPeriodjwtPeriodsupport}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeGraniteAuthOauthImplBearerAuthenticationHandler' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeGraniteAuthOauthImplBearerAuthenticationHandler(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${path},
            ${oauthPeriodclientIdsPeriodallowed},
            ${authPeriodbearerPeriodsyncPeriodims},
            ${authPeriodtokenRequestParameter},
            ${oauthPeriodbearerPeriodconfigid},
            ${oauthPeriodjwtPeriodsupport}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeGraniteAuthOauthImplDefaultTokenValidatorImpl {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${authPeriodtokenPeriodvalidatorPeriodtype}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeGraniteAuthOauthImplDefaultTokenValidatorImpl' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeGraniteAuthOauthImplDefaultTokenValidatorImpl(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${authPeriodtokenPeriodvalidatorPeriodtype}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeGraniteAuthOauthImplFacebookProviderImpl {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${oauthPeriodproviderPeriodid}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeGraniteAuthOauthImplFacebookProviderImpl' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeGraniteAuthOauthImplFacebookProviderImpl(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${oauthPeriodproviderPeriodid}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeGraniteAuthOauthImplGithubProviderImpl {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${oauthPeriodproviderPeriodid},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${oauthPeriodproviderPeriodgithubPeriodauthorizationPeriodurl},
        [Parameter(Position = 8, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${oauthPeriodproviderPeriodgithubPeriodtokenPeriodurl},
        [Parameter(Position = 9, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${oauthPeriodproviderPeriodgithubPeriodprofilePeriodurl}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeGraniteAuthOauthImplGithubProviderImpl' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeGraniteAuthOauthImplGithubProviderImpl(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${oauthPeriodproviderPeriodid},
            ${oauthPeriodproviderPeriodgithubPeriodauthorizationPeriodurl},
            ${oauthPeriodproviderPeriodgithubPeriodtokenPeriodurl},
            ${oauthPeriodproviderPeriodgithubPeriodprofilePeriodurl}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeGraniteAuthOauthImplGraniteProvider {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${oauthPeriodproviderPeriodid},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${oauthPeriodproviderPeriodgranitePeriodauthorizationPeriodurl},
        [Parameter(Position = 8, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${oauthPeriodproviderPeriodgranitePeriodtokenPeriodurl},
        [Parameter(Position = 9, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${oauthPeriodproviderPeriodgranitePeriodprofilePeriodurl},
        [Parameter(Position = 10, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${oauthPeriodproviderPeriodgranitePeriodextendedPerioddetailsPeriodurls}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeGraniteAuthOauthImplGraniteProvider' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeGraniteAuthOauthImplGraniteProvider(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${oauthPeriodproviderPeriodid},
            ${oauthPeriodproviderPeriodgranitePeriodauthorizationPeriodurl},
            ${oauthPeriodproviderPeriodgranitePeriodtokenPeriodurl},
            ${oauthPeriodproviderPeriodgranitePeriodprofilePeriodurl},
            ${oauthPeriodproviderPeriodgranitePeriodextendedPerioddetailsPeriodurls}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeGraniteAuthOauthImplHelperProviderConfigManager {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${oauthPeriodcookiePeriodloginPeriodtimeout},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${oauthPeriodcookiePeriodmaxPeriodage}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeGraniteAuthOauthImplHelperProviderConfigManager' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeGraniteAuthOauthImplHelperProviderConfigManager(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${oauthPeriodcookiePeriodloginPeriodtimeout},
            ${oauthPeriodcookiePeriodmaxPeriodage}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeGraniteAuthOauthImplHelperProviderConfigManagerInternal {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${oauthPeriodcookiePeriodloginPeriodtimeout},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${oauthPeriodcookiePeriodmaxPeriodage}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeGraniteAuthOauthImplHelperProviderConfigManagerInternal' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeGraniteAuthOauthImplHelperProviderConfigManagerInternal(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${oauthPeriodcookiePeriodloginPeriodtimeout},
            ${oauthPeriodcookiePeriodmaxPeriodage}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeGraniteAuthOauthImplOAuthAuthenticationHandler {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${path}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeGraniteAuthOauthImplOAuthAuthenticationHandler' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeGraniteAuthOauthImplOAuthAuthenticationHandler(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${path}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeGraniteAuthOauthImplTwitterProviderImpl {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${oauthPeriodproviderPeriodid}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeGraniteAuthOauthImplTwitterProviderImpl' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeGraniteAuthOauthImplTwitterProviderImpl(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${oauthPeriodproviderPeriodid}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeGraniteAuthOauthProvider {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${oauthPeriodconfigPeriodid},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${oauthPeriodclientPeriodid},
        [Parameter(Position = 8, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${oauthPeriodclientPeriodsecret},
        [Parameter(Position = 9, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${oauthPeriodscope},
        [Parameter(Position = 10, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${oauthPeriodconfigPeriodproviderPeriodid},
        [Parameter(Position = 11, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${oauthPeriodcreatePeriodusers},
        [Parameter(Position = 12, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${oauthPerioduseridPeriodproperty},
        [Parameter(Position = 13, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${forcePeriodstrictPeriodusernamePeriodmatching},
        [Parameter(Position = 14, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${oauthPeriodencodePerioduserids},
        [Parameter(Position = 15, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${oauthPeriodhashPerioduserids},
        [Parameter(Position = 16, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${oauthPeriodcallBackUrl},
        [Parameter(Position = 17, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${oauthPeriodaccessPeriodtokenPeriodpersist},
        [Parameter(Position = 18, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${oauthPeriodaccessPeriodtokenPeriodpersistPeriodcookie},
        [Parameter(Position = 19, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${oauthPeriodcsrfPeriodstatePeriodprotection},
        [Parameter(Position = 20, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${oauthPeriodredirectPeriodrequestPeriodparams},
        [Parameter(Position = 21, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${oauthPeriodconfigPeriodsiblingsPeriodallow}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeGraniteAuthOauthProvider' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeGraniteAuthOauthProvider(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${oauthPeriodconfigPeriodid},
            ${oauthPeriodclientPeriodid},
            ${oauthPeriodclientPeriodsecret},
            ${oauthPeriodscope},
            ${oauthPeriodconfigPeriodproviderPeriodid},
            ${oauthPeriodcreatePeriodusers},
            ${oauthPerioduseridPeriodproperty},
            ${forcePeriodstrictPeriodusernamePeriodmatching},
            ${oauthPeriodencodePerioduserids},
            ${oauthPeriodhashPerioduserids},
            ${oauthPeriodcallBackUrl},
            ${oauthPeriodaccessPeriodtokenPeriodpersist},
            ${oauthPeriodaccessPeriodtokenPeriodpersistPeriodcookie},
            ${oauthPeriodcsrfPeriodstatePeriodprotection},
            ${oauthPeriodredirectPeriodrequestPeriodparams},
            ${oauthPeriodconfigPeriodsiblingsPeriodallow}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeGraniteAuthRequirementImplDefaultRequirementHandler {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${supportedPaths}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeGraniteAuthRequirementImplDefaultRequirementHandler' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeGraniteAuthRequirementImplDefaultRequirementHandler(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${supportedPaths}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeGraniteAuthSamlSamlAuthenticationHandler {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${path},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${servicePeriodranking},
        [Parameter(Position = 8, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${idpUrl},
        [Parameter(Position = 9, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${idpCertAlias},
        [Parameter(Position = 10, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${idpHttpRedirect},
        [Parameter(Position = 11, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${serviceProviderEntityId},
        [Parameter(Position = 12, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${assertionConsumerServiceURL},
        [Parameter(Position = 13, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${spPrivateKeyAlias},
        [Parameter(Position = 14, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${keyStorePassword},
        [Parameter(Position = 15, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${defaultRedirectUrl},
        [Parameter(Position = 16, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${userIDAttribute},
        [Parameter(Position = 17, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${useEncryption},
        [Parameter(Position = 18, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${createUser},
        [Parameter(Position = 19, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${userIntermediatePath},
        [Parameter(Position = 20, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${addGroupMemberships},
        [Parameter(Position = 21, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${groupMembershipAttribute},
        [Parameter(Position = 22, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${defaultGroups},
        [Parameter(Position = 23, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${nameIdFormat},
        [Parameter(Position = 24, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${synchronizeAttributes},
        [Parameter(Position = 25, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${handleLogout},
        [Parameter(Position = 26, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${logoutUrl},
        [Parameter(Position = 27, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${clockTolerance},
        [Parameter(Position = 28, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${digestMethod},
        [Parameter(Position = 29, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${signatureMethod},
        [Parameter(Position = 30, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${identitySyncType},
        [Parameter(Position = 31, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${idpIdentifier}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeGraniteAuthSamlSamlAuthenticationHandler' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeGraniteAuthSamlSamlAuthenticationHandler(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${path},
            ${servicePeriodranking},
            ${idpUrl},
            ${idpCertAlias},
            ${idpHttpRedirect},
            ${serviceProviderEntityId},
            ${assertionConsumerServiceURL},
            ${spPrivateKeyAlias},
            ${keyStorePassword},
            ${defaultRedirectUrl},
            ${userIDAttribute},
            ${useEncryption},
            ${createUser},
            ${userIntermediatePath},
            ${addGroupMemberships},
            ${groupMembershipAttribute},
            ${defaultGroups},
            ${nameIdFormat},
            ${synchronizeAttributes},
            ${handleLogout},
            ${logoutUrl},
            ${clockTolerance},
            ${digestMethod},
            ${signatureMethod},
            ${identitySyncType},
            ${idpIdentifier}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeGraniteAuthSsoImplSsoAuthenticationHandler {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${path},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${servicePeriodranking},
        [Parameter(Position = 8, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${jaasPeriodcontrolFlag},
        [Parameter(Position = 9, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${jaasPeriodrealmName},
        [Parameter(Position = 10, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${jaasPeriodranking},
        [Parameter(Position = 11, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${headers},
        [Parameter(Position = 12, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${cookies},
        [Parameter(Position = 13, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${parameters},
        [Parameter(Position = 14, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${usermap},
        [Parameter(Position = 15, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${format},
        [Parameter(Position = 16, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${trustedCredentialsAttribute}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeGraniteAuthSsoImplSsoAuthenticationHandler' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeGraniteAuthSsoImplSsoAuthenticationHandler(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${path},
            ${servicePeriodranking},
            ${jaasPeriodcontrolFlag},
            ${jaasPeriodrealmName},
            ${jaasPeriodranking},
            ${headers},
            ${cookies},
            ${parameters},
            ${usermap},
            ${format},
            ${trustedCredentialsAttribute}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeGraniteBundlesHcImplCodeCacheHealthCheck {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${hcPeriodtags},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${minimumPeriodcodePeriodcachePeriodsize}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeGraniteBundlesHcImplCodeCacheHealthCheck' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeGraniteBundlesHcImplCodeCacheHealthCheck(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${hcPeriodtags},
            ${minimumPeriodcodePeriodcachePeriodsize}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeGraniteBundlesHcImplCrxdeSupportBundleHealthCheck {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${hcPeriodtags}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeGraniteBundlesHcImplCrxdeSupportBundleHealthCheck' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeGraniteBundlesHcImplCrxdeSupportBundleHealthCheck(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${hcPeriodtags}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeGraniteBundlesHcImplDavExBundleHealthCheck {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${hcPeriodtags}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeGraniteBundlesHcImplDavExBundleHealthCheck' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeGraniteBundlesHcImplDavExBundleHealthCheck(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${hcPeriodtags}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeGraniteBundlesHcImplInactiveBundlesHealthCheck {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${hcPeriodtags},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${ignoredPeriodbundles}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeGraniteBundlesHcImplInactiveBundlesHealthCheck' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeGraniteBundlesHcImplInactiveBundlesHealthCheck(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${hcPeriodtags},
            ${ignoredPeriodbundles}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeGraniteBundlesHcImplJobsHealthCheck {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${hcPeriodtags},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${maxPeriodqueuedPeriodjobs}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeGraniteBundlesHcImplJobsHealthCheck' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeGraniteBundlesHcImplJobsHealthCheck(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${hcPeriodtags},
            ${maxPeriodqueuedPeriodjobs}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeGraniteBundlesHcImplSlingGetServletHealthCheck {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${hcPeriodtags}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeGraniteBundlesHcImplSlingGetServletHealthCheck' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeGraniteBundlesHcImplSlingGetServletHealthCheck(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${hcPeriodtags}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeGraniteBundlesHcImplSlingJavaScriptHandlerHealthCheck {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${hcPeriodtags}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeGraniteBundlesHcImplSlingJavaScriptHandlerHealthCheck' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeGraniteBundlesHcImplSlingJavaScriptHandlerHealthCheck(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${hcPeriodtags}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeGraniteBundlesHcImplSlingJspScriptHandlerHealthCheck {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${hcPeriodtags}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeGraniteBundlesHcImplSlingJspScriptHandlerHealthCheck' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeGraniteBundlesHcImplSlingJspScriptHandlerHealthCheck(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${hcPeriodtags}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeGraniteBundlesHcImplSlingReferrerFilterHealthCheck {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${hcPeriodtags}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeGraniteBundlesHcImplSlingReferrerFilterHealthCheck' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeGraniteBundlesHcImplSlingReferrerFilterHealthCheck(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${hcPeriodtags}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeGraniteBundlesHcImplWebDavBundleHealthCheck {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${hcPeriodtags}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeGraniteBundlesHcImplWebDavBundleHealthCheck' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeGraniteBundlesHcImplWebDavBundleHealthCheck(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${hcPeriodtags}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeGraniteCommentsInternalCommentReplicationContentFilterFac {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${replicatePeriodcommentPeriodresourceTypes}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeGraniteCommentsInternalCommentReplicationContentFilterFac' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeGraniteCommentsInternalCommentReplicationContentFilterFac(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${replicatePeriodcommentPeriodresourceTypes}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeGraniteCompatrouterImplCompatSwitchingServiceImpl {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${compatgroups},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${enabled}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeGraniteCompatrouterImplCompatSwitchingServiceImpl' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeGraniteCompatrouterImplCompatSwitchingServiceImpl(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${compatgroups},
            ${enabled}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeGraniteCompatrouterImplRoutingConfig {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${id},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${compatPath},
        [Parameter(Position = 8, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${newPath}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeGraniteCompatrouterImplRoutingConfig' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeGraniteCompatrouterImplRoutingConfig(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${id},
            ${compatPath},
            ${newPath}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeGraniteCompatrouterImplSwitchMappingConfig {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${group},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${ids}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeGraniteCompatrouterImplSwitchMappingConfig' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeGraniteCompatrouterImplSwitchMappingConfig(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${group},
            ${ids}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeGraniteConfImplRuntimeAwareConfigurationResourceResolving {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${enabled},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${fallbackPaths}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeGraniteConfImplRuntimeAwareConfigurationResourceResolving' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeGraniteConfImplRuntimeAwareConfigurationResourceResolving(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${enabled},
            ${fallbackPaths}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeGraniteContexthubImplContextHubImpl {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${comPeriodadobePeriodgranitePeriodcontexthubPeriodsilentMode},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${comPeriodadobePeriodgranitePeriodcontexthubPeriodshowUi}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeGraniteContexthubImplContextHubImpl' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeGraniteContexthubImplContextHubImpl(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${comPeriodadobePeriodgranitePeriodcontexthubPeriodsilentMode},
            ${comPeriodadobePeriodgranitePeriodcontexthubPeriodshowUi}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeGraniteCorsImplCORSPolicyImpl {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${alloworigin},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${alloworiginregexp},
        [Parameter(Position = 8, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${allowedpaths},
        [Parameter(Position = 9, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${exposedheaders},
        [Parameter(Position = 10, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${maxage},
        [Parameter(Position = 11, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${supportedheaders},
        [Parameter(Position = 12, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${supportedmethods},
        [Parameter(Position = 13, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${supportscredentials}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeGraniteCorsImplCORSPolicyImpl' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeGraniteCorsImplCORSPolicyImpl(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${alloworigin},
            ${alloworiginregexp},
            ${allowedpaths},
            ${exposedheaders},
            ${maxage},
            ${supportedheaders},
            ${supportedmethods},
            ${supportscredentials}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeGraniteCsrfImplCSRFFilter {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${filterPeriodmethods},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${filterPeriodenablePeriodsafePerioduserPeriodagents},
        [Parameter(Position = 8, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${filterPeriodsafePerioduserPeriodagents},
        [Parameter(Position = 9, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${filterPeriodexcludedPeriodpaths}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeGraniteCsrfImplCSRFFilter' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeGraniteCsrfImplCSRFFilter(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${filterPeriodmethods},
            ${filterPeriodenablePeriodsafePerioduserPeriodagents},
            ${filterPeriodsafePerioduserPeriodagents},
            ${filterPeriodexcludedPeriodpaths}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeGraniteCsrfImplCSRFServlet {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${csrfPeriodtokenPeriodexpiresPeriodin},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${slingPeriodauthPeriodrequirements}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeGraniteCsrfImplCSRFServlet' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeGraniteCsrfImplCSRFServlet(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${csrfPeriodtokenPeriodexpiresPeriodin},
            ${slingPeriodauthPeriodrequirements}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeGraniteDistributionCoreImplCryptoDistributionTransportSe {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${name},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${username},
        [Parameter(Position = 8, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${encryptedPassword}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeGraniteDistributionCoreImplCryptoDistributionTransportSe' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeGraniteDistributionCoreImplCryptoDistributionTransportSe(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${name},
            ${username},
            ${encryptedPassword}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeGraniteDistributionCoreImplDiffDiffChangesObserver {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${enabled},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${agentName},
        [Parameter(Position = 8, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${diffPath},
        [Parameter(Position = 9, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${observedPath},
        [Parameter(Position = 10, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${serviceName},
        [Parameter(Position = 11, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${propertyNames},
        [Parameter(Position = 12, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${distributionDelay},
        [Parameter(Position = 13, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${serviceUserPeriodtarget}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeGraniteDistributionCoreImplDiffDiffChangesObserver' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeGraniteDistributionCoreImplDiffDiffChangesObserver(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${enabled},
            ${agentName},
            ${diffPath},
            ${observedPath},
            ${serviceName},
            ${propertyNames},
            ${distributionDelay},
            ${serviceUserPeriodtarget}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeGraniteDistributionCoreImplDiffDiffEventListener {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${diffPath},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${serviceName},
        [Parameter(Position = 8, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${serviceUserPeriodtarget}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeGraniteDistributionCoreImplDiffDiffEventListener' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeGraniteDistributionCoreImplDiffDiffEventListener(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${diffPath},
            ${serviceName},
            ${serviceUserPeriodtarget}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeGraniteDistributionCoreImplDistributionToReplicationEven {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${importerPeriodname}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeGraniteDistributionCoreImplDistributionToReplicationEven' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeGraniteDistributionCoreImplDistributionToReplicationEven(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${importerPeriodname}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeGraniteDistributionCoreImplReplicationAdaptersReplicat {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${providerName},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${forwardPeriodrequests}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeGraniteDistributionCoreImplReplicationAdaptersReplicat' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeGraniteDistributionCoreImplReplicationAdaptersReplicat(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${providerName},
            ${forwardPeriodrequests}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeGraniteDistributionCoreImplReplicationDistributionTrans {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${forwardPeriodrequests}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeGraniteDistributionCoreImplReplicationDistributionTrans' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeGraniteDistributionCoreImplReplicationDistributionTrans(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${forwardPeriodrequests}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeGraniteDistributionCoreImplTransportAccessTokenDistribu {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${name},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${serviceName},
        [Parameter(Position = 8, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${userId},
        [Parameter(Position = 9, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${accessTokenProviderPeriodtarget}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeGraniteDistributionCoreImplTransportAccessTokenDistribu' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeGraniteDistributionCoreImplTransportAccessTokenDistribu(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${name},
            ${serviceName},
            ${userId},
            ${accessTokenProviderPeriodtarget}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeGraniteFragsImplCheckHttpHeaderFlag {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${featurePeriodname},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${featurePerioddescription},
        [Parameter(Position = 8, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${httpPeriodheaderPeriodname},
        [Parameter(Position = 9, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${httpPeriodheaderPeriodvaluepattern}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeGraniteFragsImplCheckHttpHeaderFlag' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeGraniteFragsImplCheckHttpHeaderFlag(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${featurePeriodname},
            ${featurePerioddescription},
            ${httpPeriodheaderPeriodname},
            ${httpPeriodheaderPeriodvaluepattern}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeGraniteFragsImplRandomFeature {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${featurePeriodname},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${featurePerioddescription},
        [Parameter(Position = 8, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${activePeriodpercentage},
        [Parameter(Position = 9, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${cookiePeriodname},
        [Parameter(Position = 10, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${cookiePeriodmaxAge}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeGraniteFragsImplRandomFeature' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeGraniteFragsImplRandomFeature(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${featurePeriodname},
            ${featurePerioddescription},
            ${activePeriodpercentage},
            ${cookiePeriodname},
            ${cookiePeriodmaxAge}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeGraniteHttpcacheFileFileCacheStore {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${comPeriodadobePeriodgranitePeriodhttpcachePeriodfilePerioddocumentRoot},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${comPeriodadobePeriodgranitePeriodhttpcachePeriodfilePeriodincludeHost}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeGraniteHttpcacheFileFileCacheStore' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeGraniteHttpcacheFileFileCacheStore(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${comPeriodadobePeriodgranitePeriodhttpcachePeriodfilePerioddocumentRoot},
            ${comPeriodadobePeriodgranitePeriodhttpcachePeriodfilePeriodincludeHost}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeGraniteHttpcacheImplOuterCacheFilter {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${comPeriodadobePeriodgranitePeriodhttpcachePeriodurlPeriodpaths}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeGraniteHttpcacheImplOuterCacheFilter' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeGraniteHttpcacheImplOuterCacheFilter(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${comPeriodadobePeriodgranitePeriodhttpcachePeriodurlPeriodpaths}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeGraniteI18nImplBundlePseudoTranslations {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${pseudoPeriodpatterns}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeGraniteI18nImplBundlePseudoTranslations' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeGraniteI18nImplBundlePseudoTranslations(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${pseudoPeriodpatterns}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeGraniteI18nImplPreferencesLocaleResolverService {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${securityPeriodpreferencesPeriodname}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeGraniteI18nImplPreferencesLocaleResolverService' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeGraniteI18nImplPreferencesLocaleResolverService(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${securityPeriodpreferencesPeriodname}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeGraniteInfocollectorInfoCollector {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${granitePeriodinfocollectorPeriodincludeThreadDumps},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${granitePeriodinfocollectorPeriodincludeHeapDump}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeGraniteInfocollectorInfoCollector' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeGraniteInfocollectorInfoCollector(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${granitePeriodinfocollectorPeriodincludeThreadDumps},
            ${granitePeriodinfocollectorPeriodincludeHeapDump}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeGraniteJettySslInternalGraniteSslConnectorFactory {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${comPeriodadobePeriodgranitePeriodjettyPeriodsslPeriodport},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${comPeriodadobePeriodgranitePeriodjettyPeriodsslPeriodkeystorePerioduser},
        [Parameter(Position = 8, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${comPeriodadobePeriodgranitePeriodjettyPeriodsslPeriodkeystorePeriodpassword},
        [Parameter(Position = 9, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${comPeriodadobePeriodgranitePeriodjettyPeriodsslPeriodciphersuitesPeriodexcluded},
        [Parameter(Position = 10, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${comPeriodadobePeriodgranitePeriodjettyPeriodsslPeriodciphersuitesPeriodincluded},
        [Parameter(Position = 11, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${comPeriodadobePeriodgranitePeriodjettyPeriodsslPeriodclientPeriodcertificate}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeGraniteJettySslInternalGraniteSslConnectorFactory' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeGraniteJettySslInternalGraniteSslConnectorFactory(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${comPeriodadobePeriodgranitePeriodjettyPeriodsslPeriodport},
            ${comPeriodadobePeriodgranitePeriodjettyPeriodsslPeriodkeystorePerioduser},
            ${comPeriodadobePeriodgranitePeriodjettyPeriodsslPeriodkeystorePeriodpassword},
            ${comPeriodadobePeriodgranitePeriodjettyPeriodsslPeriodciphersuitesPeriodexcluded},
            ${comPeriodadobePeriodgranitePeriodjettyPeriodsslPeriodciphersuitesPeriodincluded},
            ${comPeriodadobePeriodgranitePeriodjettyPeriodsslPeriodclientPeriodcertificate}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeGraniteLicenseImplLicenseCheckFilter {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${checkInternval},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${excludeIds},
        [Parameter(Position = 8, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${encryptPing}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeGraniteLicenseImplLicenseCheckFilter' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeGraniteLicenseImplLicenseCheckFilter(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${checkInternval},
            ${excludeIds},
            ${encryptPing}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeGraniteLoggingImplLogAnalyserImpl {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${messagesPeriodqueuePeriodsize},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${loggerPeriodconfig},
        [Parameter(Position = 8, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${messagesPeriodsize}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeGraniteLoggingImplLogAnalyserImpl' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeGraniteLoggingImplLogAnalyserImpl(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${messagesPeriodqueuePeriodsize},
            ${loggerPeriodconfig},
            ${messagesPeriodsize}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeGraniteLoggingImplLogErrorHealthCheck {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${hcPeriodtags}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeGraniteLoggingImplLogErrorHealthCheck' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeGraniteLoggingImplLogErrorHealthCheck(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${hcPeriodtags}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeGraniteMaintenanceCrxImplDataStoreGarbageCollectionTask {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${granitePeriodmaintenancePeriodmandatory},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${jobPeriodtopics}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeGraniteMaintenanceCrxImplDataStoreGarbageCollectionTask' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeGraniteMaintenanceCrxImplDataStoreGarbageCollectionTask(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${granitePeriodmaintenancePeriodmandatory},
            ${jobPeriodtopics}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeGraniteMaintenanceCrxImplLuceneBinariesCleanupTask {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${jobPeriodtopics}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeGraniteMaintenanceCrxImplLuceneBinariesCleanupTask' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeGraniteMaintenanceCrxImplLuceneBinariesCleanupTask(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${jobPeriodtopics}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeGraniteMaintenanceCrxImplRevisionCleanupTask {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${fullPeriodgcPerioddays}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeGraniteMaintenanceCrxImplRevisionCleanupTask' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeGraniteMaintenanceCrxImplRevisionCleanupTask(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${fullPeriodgcPerioddays}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeGraniteMonitoringImplScriptConfigImpl {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${scriptPeriodfilename},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${scriptPerioddisplay},
        [Parameter(Position = 8, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${scriptPeriodpath},
        [Parameter(Position = 9, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${scriptPeriodplatform},
        [Parameter(Position = 10, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${interval},
        [Parameter(Position = 11, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${jmxdomain}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeGraniteMonitoringImplScriptConfigImpl' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeGraniteMonitoringImplScriptConfigImpl(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${scriptPeriodfilename},
            ${scriptPerioddisplay},
            ${scriptPeriodpath},
            ${scriptPeriodplatform},
            ${interval},
            ${jmxdomain}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeGraniteOauthServerAuthImplOAuth2ServerAuthenticationHan {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${path},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${jaasPeriodcontrolFlag},
        [Parameter(Position = 8, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${jaasPeriodrealmName},
        [Parameter(Position = 9, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${jaasPeriodranking},
        [Parameter(Position = 10, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${oauthPeriodofflinePeriodvalidation}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeGraniteOauthServerAuthImplOAuth2ServerAuthenticationHan' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeGraniteOauthServerAuthImplOAuth2ServerAuthenticationHan(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${path},
            ${jaasPeriodcontrolFlag},
            ${jaasPeriodrealmName},
            ${jaasPeriodranking},
            ${oauthPeriodofflinePeriodvalidation}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeGraniteOauthServerImplAccessTokenCleanupTask {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${schedulerPeriodexpression}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeGraniteOauthServerImplAccessTokenCleanupTask' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeGraniteOauthServerImplAccessTokenCleanupTask(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${schedulerPeriodexpression}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeGraniteOauthServerImplOAuth2ClientRevocationServlet {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${oauthPeriodclientPeriodrevocationPeriodactive}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeGraniteOauthServerImplOAuth2ClientRevocationServlet' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeGraniteOauthServerImplOAuth2ClientRevocationServlet(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${oauthPeriodclientPeriodrevocationPeriodactive}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeGraniteOauthServerImplOAuth2RevocationEndpointServlet {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${slingPeriodservletPeriodpaths},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${oauthPeriodrevocationPeriodactive}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeGraniteOauthServerImplOAuth2RevocationEndpointServlet' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeGraniteOauthServerImplOAuth2RevocationEndpointServlet(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${slingPeriodservletPeriodpaths},
            ${oauthPeriodrevocationPeriodactive}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeGraniteOauthServerImplOAuth2TokenEndpointServlet {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${oauthPeriodissuer},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${oauthPeriodaccessPeriodtokenPeriodexpiresPeriodin},
        [Parameter(Position = 8, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${osgiPeriodhttpPeriodwhiteboardPeriodservletPeriodpattern},
        [Parameter(Position = 9, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${osgiPeriodhttpPeriodwhiteboardPeriodcontextPeriodselect}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeGraniteOauthServerImplOAuth2TokenEndpointServlet' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeGraniteOauthServerImplOAuth2TokenEndpointServlet(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${oauthPeriodissuer},
            ${oauthPeriodaccessPeriodtokenPeriodexpiresPeriodin},
            ${osgiPeriodhttpPeriodwhiteboardPeriodservletPeriodpattern},
            ${osgiPeriodhttpPeriodwhiteboardPeriodcontextPeriodselect}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeGraniteOauthServerImplOAuth2TokenRevocationServlet {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${oauthPeriodtokenPeriodrevocationPeriodactive}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeGraniteOauthServerImplOAuth2TokenRevocationServlet' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeGraniteOauthServerImplOAuth2TokenRevocationServlet(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${oauthPeriodtokenPeriodrevocationPeriodactive}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeGraniteOffloadingImplOffloadingConfigurator {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${offloadingPeriodtransporter},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${offloadingPeriodcleanupPeriodpayload}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeGraniteOffloadingImplOffloadingConfigurator' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeGraniteOffloadingImplOffloadingConfigurator(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${offloadingPeriodtransporter},
            ${offloadingPeriodcleanupPeriodpayload}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeGraniteOffloadingImplOffloadingJobCloner {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${offloadingPeriodjobclonerPeriodenabled}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeGraniteOffloadingImplOffloadingJobCloner' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeGraniteOffloadingImplOffloadingJobCloner(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${offloadingPeriodjobclonerPeriodenabled}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeGraniteOffloadingImplOffloadingJobOffloader {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${offloadingPeriodoffloaderPeriodenabled}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeGraniteOffloadingImplOffloadingJobOffloader' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeGraniteOffloadingImplOffloadingJobOffloader(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${offloadingPeriodoffloaderPeriodenabled}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeGraniteOffloadingImplTransporterOffloadingAgentManager {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${offloadingPeriodagentmanagerPeriodenabled}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeGraniteOffloadingImplTransporterOffloadingAgentManager' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeGraniteOffloadingImplTransporterOffloadingAgentManager(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${offloadingPeriodagentmanagerPeriodenabled}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeGraniteOffloadingImplTransporterOffloadingDefaultTranspo {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${defaultPeriodtransportPeriodagentToWorkerPeriodprefix},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${defaultPeriodtransportPeriodagentToMasterPeriodprefix},
        [Parameter(Position = 8, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${defaultPeriodtransportPeriodinputPeriodpackage},
        [Parameter(Position = 9, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${defaultPeriodtransportPeriodoutputPeriodpackage},
        [Parameter(Position = 10, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${defaultPeriodtransportPeriodreplicationPeriodsynchronous},
        [Parameter(Position = 11, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${defaultPeriodtransportPeriodcontentpackage},
        [Parameter(Position = 12, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${offloadingPeriodtransporterPerioddefaultPeriodenabled}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeGraniteOffloadingImplTransporterOffloadingDefaultTranspo' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeGraniteOffloadingImplTransporterOffloadingDefaultTranspo(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${defaultPeriodtransportPeriodagentToWorkerPeriodprefix},
            ${defaultPeriodtransportPeriodagentToMasterPeriodprefix},
            ${defaultPeriodtransportPeriodinputPeriodpackage},
            ${defaultPeriodtransportPeriodoutputPeriodpackage},
            ${defaultPeriodtransportPeriodreplicationPeriodsynchronous},
            ${defaultPeriodtransportPeriodcontentpackage},
            ${offloadingPeriodtransporterPerioddefaultPeriodenabled}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeGraniteOmnisearchImplCoreOmniSearchServiceImpl {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${omnisearchPeriodsuggestionPeriodrequiretextPeriodmin},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${omnisearchPeriodsuggestionPeriodspellcheckPeriodrequire}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeGraniteOmnisearchImplCoreOmniSearchServiceImpl' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeGraniteOmnisearchImplCoreOmniSearchServiceImpl(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${omnisearchPeriodsuggestionPeriodrequiretextPeriodmin},
            ${omnisearchPeriodsuggestionPeriodspellcheckPeriodrequire}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeGraniteOptoutImplOptOutServiceImpl {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${optoutPeriodcookies},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${optoutPeriodheaders},
        [Parameter(Position = 8, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${optoutPeriodwhitelistPeriodcookies}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeGraniteOptoutImplOptOutServiceImpl' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeGraniteOptoutImplOptOutServiceImpl(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${optoutPeriodcookies},
            ${optoutPeriodheaders},
            ${optoutPeriodwhitelistPeriodcookies}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeGraniteQueriesImplHcAsyncIndexHealthCheck {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${indexingPeriodcriticalPeriodthreshold},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${indexingPeriodwarnPeriodthreshold},
        [Parameter(Position = 8, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${hcPeriodtags}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeGraniteQueriesImplHcAsyncIndexHealthCheck' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeGraniteQueriesImplHcAsyncIndexHealthCheck(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${indexingPeriodcriticalPeriodthreshold},
            ${indexingPeriodwarnPeriodthreshold},
            ${hcPeriodtags}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeGraniteQueriesImplHcLargeIndexHealthCheck {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${largePeriodindexPeriodcriticalPeriodthreshold},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${largePeriodindexPeriodwarnPeriodthreshold},
        [Parameter(Position = 8, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${hcPeriodtags}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeGraniteQueriesImplHcLargeIndexHealthCheck' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeGraniteQueriesImplHcLargeIndexHealthCheck(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${largePeriodindexPeriodcriticalPeriodthreshold},
            ${largePeriodindexPeriodwarnPeriodthreshold},
            ${hcPeriodtags}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeGraniteQueriesImplHcQueriesStatusHealthCheck {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${hcPeriodtags}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeGraniteQueriesImplHcQueriesStatusHealthCheck' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeGraniteQueriesImplHcQueriesStatusHealthCheck(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${hcPeriodtags}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeGraniteQueriesImplHcQueryHealthCheckMetrics {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${getPeriod}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeGraniteQueriesImplHcQueryHealthCheckMetrics' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeGraniteQueriesImplHcQueryHealthCheckMetrics(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${getPeriod}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeGraniteQueriesImplHcQueryLimitsHealthCheck {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${hcPeriodtags}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeGraniteQueriesImplHcQueryLimitsHealthCheck' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeGraniteQueriesImplHcQueryLimitsHealthCheck(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${hcPeriodtags}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeGraniteReplicationHcImplReplicationQueueHealthCheck {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${numberPeriodofPeriodretriesPeriodallowed},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${hcPeriodtags}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeGraniteReplicationHcImplReplicationQueueHealthCheck' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeGraniteReplicationHcImplReplicationQueueHealthCheck(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${numberPeriodofPeriodretriesPeriodallowed},
            ${hcPeriodtags}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeGraniteReplicationHcImplReplicationTransportUsersHealthC {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${hcPeriodtags}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeGraniteReplicationHcImplReplicationTransportUsersHealthC' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeGraniteReplicationHcImplReplicationTransportUsersHealthC(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${hcPeriodtags}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeGraniteRepositoryHcImplAuthorizableNodeNameHealthCheck {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${hcPeriodtags}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeGraniteRepositoryHcImplAuthorizableNodeNameHealthCheck' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeGraniteRepositoryHcImplAuthorizableNodeNameHealthCheck(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${hcPeriodtags}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeGraniteRepositoryHcImplContentSlingSlingContentHealthC {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${hcPeriodtags},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${excludePeriodsearchPeriodpath}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeGraniteRepositoryHcImplContentSlingSlingContentHealthC' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeGraniteRepositoryHcImplContentSlingSlingContentHealthC(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${hcPeriodtags},
            ${excludePeriodsearchPeriodpath}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeGraniteRepositoryHcImplContinuousRGCHealthCheck {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${hcPeriodtags}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeGraniteRepositoryHcImplContinuousRGCHealthCheck' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeGraniteRepositoryHcImplContinuousRGCHealthCheck(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${hcPeriodtags}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeGraniteRepositoryHcImplDefaultAccessUserProfileHealthChe {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${hcPeriodtags}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeGraniteRepositoryHcImplDefaultAccessUserProfileHealthChe' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeGraniteRepositoryHcImplDefaultAccessUserProfileHealthChe(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${hcPeriodtags}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeGraniteRepositoryHcImplDefaultLoginsHealthCheck {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${hcPeriodtags},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${accountPeriodlogins},
        [Parameter(Position = 8, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${consolePeriodlogins}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeGraniteRepositoryHcImplDefaultLoginsHealthCheck' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeGraniteRepositoryHcImplDefaultLoginsHealthCheck(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${hcPeriodtags},
            ${accountPeriodlogins},
            ${consolePeriodlogins}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeGraniteRepositoryHcImplDiskSpaceHealthCheck {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${hcPeriodtags},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${diskPeriodspacePeriodwarnPeriodthreshold},
        [Parameter(Position = 8, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${diskPeriodspacePerioderrorPeriodthreshold}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeGraniteRepositoryHcImplDiskSpaceHealthCheck' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeGraniteRepositoryHcImplDiskSpaceHealthCheck(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${hcPeriodtags},
            ${diskPeriodspacePeriodwarnPeriodthreshold},
            ${diskPeriodspacePerioderrorPeriodthreshold}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeGraniteRepositoryHcImplObservationQueueLengthHealthCheck {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${hcPeriodtags}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeGraniteRepositoryHcImplObservationQueueLengthHealthCheck' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeGraniteRepositoryHcImplObservationQueueLengthHealthCheck(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${hcPeriodtags}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeGraniteRepositoryImplCommitStatsConfig {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${enabled},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${intervalSeconds},
        [Parameter(Position = 8, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${commitsPerIntervalThreshold},
        [Parameter(Position = 9, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${maxLocationLength},
        [Parameter(Position = 10, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${maxDetailsShown},
        [Parameter(Position = 11, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${minDetailsPercentage},
        [Parameter(Position = 12, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${threadMatchers},
        [Parameter(Position = 13, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${maxGreedyDepth},
        [Parameter(Position = 14, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${greedyStackMatchers},
        [Parameter(Position = 15, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${stackFilters},
        [Parameter(Position = 16, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${stackMatchers},
        [Parameter(Position = 17, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${stackCategorizers},
        [Parameter(Position = 18, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${stackShorteners}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeGraniteRepositoryImplCommitStatsConfig' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeGraniteRepositoryImplCommitStatsConfig(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${enabled},
            ${intervalSeconds},
            ${commitsPerIntervalThreshold},
            ${maxLocationLength},
            ${maxDetailsShown},
            ${minDetailsPercentage},
            ${threadMatchers},
            ${maxGreedyDepth},
            ${greedyStackMatchers},
            ${stackFilters},
            ${stackMatchers},
            ${stackCategorizers},
            ${stackShorteners}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeGraniteRepositoryServiceUserConfiguration {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${servicePeriodranking},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${serviceusersPeriodsimpleSubjectPopulation},
        [Parameter(Position = 8, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${serviceusersPeriodlist}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeGraniteRepositoryServiceUserConfiguration' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeGraniteRepositoryServiceUserConfiguration(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${servicePeriodranking},
            ${serviceusersPeriodsimpleSubjectPopulation},
            ${serviceusersPeriodlist}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeGraniteRequestsLoggingImplHcRequestsStatusHealthCheckIm {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${hcPeriodtags}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeGraniteRequestsLoggingImplHcRequestsStatusHealthCheckIm' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeGraniteRequestsLoggingImplHcRequestsStatusHealthCheckIm(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${hcPeriodtags}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeGraniteResourcestatusImplCompositeStatusType {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${name},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${types}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeGraniteResourcestatusImplCompositeStatusType' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeGraniteResourcestatusImplCompositeStatusType(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${name},
            ${types}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeGraniteResourcestatusImplStatusResourceProviderImpl {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${providerPeriodroot}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeGraniteResourcestatusImplStatusResourceProviderImpl' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeGraniteResourcestatusImplStatusResourceProviderImpl(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${providerPeriodroot}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeGraniteRestAssetsImplAssetContentDispositionFilter {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${mimePeriodallowEmpty},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${mimePeriodallowed}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeGraniteRestAssetsImplAssetContentDispositionFilter' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeGraniteRestAssetsImplAssetContentDispositionFilter(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${mimePeriodallowEmpty},
            ${mimePeriodallowed}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeGraniteRestImplApiEndpointResourceProviderFactoryImpl {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${providerPeriodroots}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeGraniteRestImplApiEndpointResourceProviderFactoryImpl' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeGraniteRestImplApiEndpointResourceProviderFactoryImpl(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${providerPeriodroots}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeGraniteRestImplServletDefaultGETServlet {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${defaultPeriodlimit},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${usePeriodabsolutePerioduri}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeGraniteRestImplServletDefaultGETServlet' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeGraniteRestImplServletDefaultGETServlet(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${defaultPeriodlimit},
            ${usePeriodabsolutePerioduri}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeGraniteSecurityUserUiInternalServletsSSLConfigurationS {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${hcPeriodtags}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeGraniteSecurityUserUiInternalServletsSSLConfigurationS' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeGraniteSecurityUserUiInternalServletsSSLConfigurationS(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${hcPeriodtags}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeGraniteSecurityUserUserPropertiesService {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${adapterPeriodcondition},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${granitePerioduserpropertiesPeriodnodetypes},
        [Parameter(Position = 8, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${granitePerioduserpropertiesPeriodresourcetypes}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeGraniteSecurityUserUserPropertiesService' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeGraniteSecurityUserUserPropertiesService(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${adapterPeriodcondition},
            ${granitePerioduserpropertiesPeriodnodetypes},
            ${granitePerioduserpropertiesPeriodresourcetypes}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeGraniteSocialgraphImplSocialGraphFactoryImpl {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${group2memberPeriodrelationshipPeriodoutgoing},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${group2memberPeriodexcludedPeriodoutgoing},
        [Parameter(Position = 8, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${group2memberPeriodrelationshipPeriodincoming},
        [Parameter(Position = 9, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${group2memberPeriodexcludedPeriodincoming}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeGraniteSocialgraphImplSocialGraphFactoryImpl' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeGraniteSocialgraphImplSocialGraphFactoryImpl(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${group2memberPeriodrelationshipPeriodoutgoing},
            ${group2memberPeriodexcludedPeriodoutgoing},
            ${group2memberPeriodrelationshipPeriodincoming},
            ${group2memberPeriodexcludedPeriodincoming}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeGraniteSystemMonitoringImplSystemStatsMBeanImpl {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${schedulerPeriodexpression},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${jmxPeriodobjectname}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeGraniteSystemMonitoringImplSystemStatsMBeanImpl' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeGraniteSystemMonitoringImplSystemStatsMBeanImpl(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${schedulerPeriodexpression},
            ${jmxPeriodobjectname}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeGraniteTaskmanagementImplJcrTaskAdapterFactory {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${adapterPeriodcondition}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeGraniteTaskmanagementImplJcrTaskAdapterFactory' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeGraniteTaskmanagementImplJcrTaskAdapterFactory(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${adapterPeriodcondition}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeGraniteTaskmanagementImplJcrTaskArchiveService {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${archivingPeriodenabled},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${schedulerPeriodexpression},
        [Parameter(Position = 8, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${archivePeriodsincePerioddaysPeriodcompleted}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeGraniteTaskmanagementImplJcrTaskArchiveService' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeGraniteTaskmanagementImplJcrTaskArchiveService(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${archivingPeriodenabled},
            ${schedulerPeriodexpression},
            ${archivePeriodsincePerioddaysPeriodcompleted}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeGraniteTaskmanagementImplPurgeTaskPurgeMaintenanceTask {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${purgeCompleted},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${completedAge},
        [Parameter(Position = 8, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${purgeActive},
        [Parameter(Position = 9, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${activeAge},
        [Parameter(Position = 10, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${saveThreshold}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeGraniteTaskmanagementImplPurgeTaskPurgeMaintenanceTask' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeGraniteTaskmanagementImplPurgeTaskPurgeMaintenanceTask(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${purgeCompleted},
            ${completedAge},
            ${purgeActive},
            ${activeAge},
            ${saveThreshold}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeGraniteTaskmanagementImplServiceTaskManagerAdapterFactor {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${adapterPeriodcondition},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${taskmanagerPeriodadmingroups}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeGraniteTaskmanagementImplServiceTaskManagerAdapterFactor' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeGraniteTaskmanagementImplServiceTaskManagerAdapterFactor(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${adapterPeriodcondition},
            ${taskmanagerPeriodadmingroups}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeGraniteThreaddumpThreadDumpCollector {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${schedulerPeriodperiod},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${schedulerPeriodrunOn},
        [Parameter(Position = 8, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${granitePeriodthreaddumpPeriodenabled},
        [Parameter(Position = 9, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${granitePeriodthreaddumpPerioddumpsPerFile},
        [Parameter(Position = 10, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${granitePeriodthreaddumpPeriodenableGzipCompression},
        [Parameter(Position = 11, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${granitePeriodthreaddumpPeriodenableDirectoriesCompression},
        [Parameter(Position = 12, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${granitePeriodthreaddumpPeriodenableJStack},
        [Parameter(Position = 13, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${granitePeriodthreaddumpPeriodmaxBackupDays},
        [Parameter(Position = 14, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${granitePeriodthreaddumpPeriodbackupCleanTrigger}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeGraniteThreaddumpThreadDumpCollector' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeGraniteThreaddumpThreadDumpCollector(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${schedulerPeriodperiod},
            ${schedulerPeriodrunOn},
            ${granitePeriodthreaddumpPeriodenabled},
            ${granitePeriodthreaddumpPerioddumpsPerFile},
            ${granitePeriodthreaddumpPeriodenableGzipCompression},
            ${granitePeriodthreaddumpPeriodenableDirectoriesCompression},
            ${granitePeriodthreaddumpPeriodenableJStack},
            ${granitePeriodthreaddumpPeriodmaxBackupDays},
            ${granitePeriodthreaddumpPeriodbackupCleanTrigger}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeGraniteTranslationConnectorMsftCoreImplMicrosoftTransl {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${translationFactory},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${defaultConnectorLabel},
        [Parameter(Position = 8, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${defaultConnectorAttribution},
        [Parameter(Position = 9, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${defaultConnectorWorkspaceId},
        [Parameter(Position = 10, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${defaultConnectorSubscriptionKey},
        [Parameter(Position = 11, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${languageMapLocation},
        [Parameter(Position = 12, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${categoryMapLocation},
        [Parameter(Position = 13, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${retryAttempts},
        [Parameter(Position = 14, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${timeoutCount}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeGraniteTranslationConnectorMsftCoreImplMicrosoftTransl' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeGraniteTranslationConnectorMsftCoreImplMicrosoftTransl(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${translationFactory},
            ${defaultConnectorLabel},
            ${defaultConnectorAttribution},
            ${defaultConnectorWorkspaceId},
            ${defaultConnectorSubscriptionKey},
            ${languageMapLocation},
            ${categoryMapLocation},
            ${retryAttempts},
            ${timeoutCount}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeGraniteTranslationCoreImplTranslationManagerImpl {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${defaultConnectorName},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${defaultCategory}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeGraniteTranslationCoreImplTranslationManagerImpl' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeGraniteTranslationCoreImplTranslationManagerImpl(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${defaultConnectorName},
            ${defaultCategory}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeGraniteUiClientlibsImplHtmlLibraryManagerImpl {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${htmllibmanagerPeriodtiming},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${htmllibmanagerPerioddebugPeriodinitPeriodjs},
        [Parameter(Position = 8, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${htmllibmanagerPeriodminify},
        [Parameter(Position = 9, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${htmllibmanagerPerioddebug},
        [Parameter(Position = 10, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${htmllibmanagerPeriodgzip},
        [Parameter(Position = 11, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${htmllibmanagerPeriodmaxDataUriSize},
        [Parameter(Position = 12, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${htmllibmanagerPeriodmaxage},
        [Parameter(Position = 13, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${htmllibmanagerPeriodforceCQUrlInfo},
        [Parameter(Position = 14, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${htmllibmanagerPerioddefaultthemename},
        [Parameter(Position = 15, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${htmllibmanagerPerioddefaultuserthemename},
        [Parameter(Position = 16, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${htmllibmanagerPeriodclientmanager},
        [Parameter(Position = 17, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${htmllibmanagerPeriodpathPeriodlist},
        [Parameter(Position = 18, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${htmllibmanagerPeriodexcludedPeriodpathPeriodlist},
        [Parameter(Position = 19, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${htmllibmanagerPeriodprocessorPeriodjs},
        [Parameter(Position = 20, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${htmllibmanagerPeriodprocessorPeriodcss},
        [Parameter(Position = 21, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${htmllibmanagerPeriodlongcachePeriodpatterns},
        [Parameter(Position = 22, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${htmllibmanagerPeriodlongcachePeriodformat},
        [Parameter(Position = 23, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${htmllibmanagerPerioduseFileSystemOutputCache},
        [Parameter(Position = 24, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${htmllibmanagerPeriodfileSystemOutputCacheLocation},
        [Parameter(Position = 25, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${htmllibmanagerPerioddisablePeriodreplacement}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeGraniteUiClientlibsImplHtmlLibraryManagerImpl' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeGraniteUiClientlibsImplHtmlLibraryManagerImpl(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${htmllibmanagerPeriodtiming},
            ${htmllibmanagerPerioddebugPeriodinitPeriodjs},
            ${htmllibmanagerPeriodminify},
            ${htmllibmanagerPerioddebug},
            ${htmllibmanagerPeriodgzip},
            ${htmllibmanagerPeriodmaxDataUriSize},
            ${htmllibmanagerPeriodmaxage},
            ${htmllibmanagerPeriodforceCQUrlInfo},
            ${htmllibmanagerPerioddefaultthemename},
            ${htmllibmanagerPerioddefaultuserthemename},
            ${htmllibmanagerPeriodclientmanager},
            ${htmllibmanagerPeriodpathPeriodlist},
            ${htmllibmanagerPeriodexcludedPeriodpathPeriodlist},
            ${htmllibmanagerPeriodprocessorPeriodjs},
            ${htmllibmanagerPeriodprocessorPeriodcss},
            ${htmllibmanagerPeriodlongcachePeriodpatterns},
            ${htmllibmanagerPeriodlongcachePeriodformat},
            ${htmllibmanagerPerioduseFileSystemOutputCache},
            ${htmllibmanagerPeriodfileSystemOutputCacheLocation},
            ${htmllibmanagerPerioddisablePeriodreplacement}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeGraniteWorkflowConsoleFragsWorkflowWithdrawFeature {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${enabled}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeGraniteWorkflowConsoleFragsWorkflowWithdrawFeature' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeGraniteWorkflowConsoleFragsWorkflowWithdrawFeature(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${enabled}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeGraniteWorkflowConsolePublishWorkflowPublishEventService {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${granitePeriodworkflowPeriodWorkflowPublishEventServicePeriodenabled}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeGraniteWorkflowConsolePublishWorkflowPublishEventService' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeGraniteWorkflowConsolePublishWorkflowPublishEventService(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${granitePeriodworkflowPeriodWorkflowPublishEventServicePeriodenabled}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeGraniteWorkflowCoreJcrWorkflowBucketManager {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${bucketSize}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeGraniteWorkflowCoreJcrWorkflowBucketManager' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeGraniteWorkflowCoreJcrWorkflowBucketManager(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${bucketSize}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeGraniteWorkflowCoreJobExternalProcessJobHandler {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${defaultPeriodtimeout},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${maxPeriodtimeout},
        [Parameter(Position = 8, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${defaultPeriodperiod}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeGraniteWorkflowCoreJobExternalProcessJobHandler' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeGraniteWorkflowCoreJobExternalProcessJobHandler(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${defaultPeriodtimeout},
            ${maxPeriodtimeout},
            ${defaultPeriodperiod}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeGraniteWorkflowCoreJobJobHandler {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${jobPeriodtopics},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${allowPeriodselfPeriodprocessPeriodtermination}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeGraniteWorkflowCoreJobJobHandler' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeGraniteWorkflowCoreJobJobHandler(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${jobPeriodtopics},
            ${allowPeriodselfPeriodprocessPeriodtermination}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeGraniteWorkflowCoreOffloadingWorkflowOffloadingJobConsum {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${jobPeriodtopics}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeGraniteWorkflowCoreOffloadingWorkflowOffloadingJobConsum' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeGraniteWorkflowCoreOffloadingWorkflowOffloadingJobConsum(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${jobPeriodtopics}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeGraniteWorkflowCorePayloadMapCache {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${getSystemWorkflowModels},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${getPackageRootPath}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeGraniteWorkflowCorePayloadMapCache' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeGraniteWorkflowCorePayloadMapCache(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${getSystemWorkflowModels},
            ${getPackageRootPath}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeGraniteWorkflowCorePayloadmapPayloadMoveListener {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${payloadPeriodmovePeriodwhitePeriodlist},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${payloadPeriodmovePeriodhandlePeriodfromPeriodworkflowPeriodprocess}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeGraniteWorkflowCorePayloadmapPayloadMoveListener' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeGraniteWorkflowCorePayloadmapPayloadMoveListener(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${payloadPeriodmovePeriodwhitePeriodlist},
            ${payloadPeriodmovePeriodhandlePeriodfromPeriodworkflowPeriodprocess}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeGraniteWorkflowCoreWorkflowConfig {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${cqPeriodworkflowPeriodconfigPeriodworkflowPeriodpackagesPeriodrootPeriodpath},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${cqPeriodworkflowPeriodconfigPeriodworkflowPeriodprocessPeriodlegacyPeriodmode},
        [Parameter(Position = 8, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${cqPeriodworkflowPeriodconfigPeriodallowPeriodlocking}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeGraniteWorkflowCoreWorkflowConfig' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeGraniteWorkflowCoreWorkflowConfig(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${cqPeriodworkflowPeriodconfigPeriodworkflowPeriodpackagesPeriodrootPeriodpath},
            ${cqPeriodworkflowPeriodconfigPeriodworkflowPeriodprocessPeriodlegacyPeriodmode},
            ${cqPeriodworkflowPeriodconfigPeriodallowPeriodlocking}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeGraniteWorkflowCoreWorkflowSessionFactory {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${granitePeriodworkflowinboxPeriodsortPeriodpropertyName},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${granitePeriodworkflowinboxPeriodsortPeriodorder},
        [Parameter(Position = 8, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${cqPeriodworkflowPeriodjobPeriodretry},
        [Parameter(Position = 9, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${cqPeriodworkflowPeriodsuperuser},
        [Parameter(Position = 10, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${granitePeriodworkflowPeriodinboxQuerySize},
        [Parameter(Position = 11, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${granitePeriodworkflowPeriodadminUserGroupFilter},
        [Parameter(Position = 12, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${granitePeriodworkflowPeriodenforceWorkitemAssigneePermissions},
        [Parameter(Position = 13, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${granitePeriodworkflowPeriodenforceWorkflowInitiatorPermissions},
        [Parameter(Position = 14, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${granitePeriodworkflowPeriodinjectTenantIdInJobTopics},
        [Parameter(Position = 15, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${granitePeriodworkflowPeriodmaxPurgeSaveThreshold},
        [Parameter(Position = 16, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${granitePeriodworkflowPeriodmaxPurgeQueryCount}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeGraniteWorkflowCoreWorkflowSessionFactory' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeGraniteWorkflowCoreWorkflowSessionFactory(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${granitePeriodworkflowinboxPeriodsortPeriodpropertyName},
            ${granitePeriodworkflowinboxPeriodsortPeriodorder},
            ${cqPeriodworkflowPeriodjobPeriodretry},
            ${cqPeriodworkflowPeriodsuperuser},
            ${granitePeriodworkflowPeriodinboxQuerySize},
            ${granitePeriodworkflowPeriodadminUserGroupFilter},
            ${granitePeriodworkflowPeriodenforceWorkitemAssigneePermissions},
            ${granitePeriodworkflowPeriodenforceWorkflowInitiatorPermissions},
            ${granitePeriodworkflowPeriodinjectTenantIdInJobTopics},
            ${granitePeriodworkflowPeriodmaxPurgeSaveThreshold},
            ${granitePeriodworkflowPeriodmaxPurgeQueryCount}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeGraniteWorkflowPurgeScheduler {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${scheduledpurgePeriodname},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${scheduledpurgePeriodworkflowStatus},
        [Parameter(Position = 8, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${scheduledpurgePeriodmodelIds},
        [Parameter(Position = 9, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${scheduledpurgePerioddaysold}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeGraniteWorkflowPurgeScheduler' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeGraniteWorkflowPurgeScheduler(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${scheduledpurgePeriodname},
            ${scheduledpurgePeriodworkflowStatus},
            ${scheduledpurgePeriodmodelIds},
            ${scheduledpurgePerioddaysold}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeOctopusNcommBootstrap {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${maxConnections},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${maxRequests},
        [Parameter(Position = 8, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${requestTimeout},
        [Parameter(Position = 9, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${requestRetries},
        [Parameter(Position = 10, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${launchTimeout}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeOctopusNcommBootstrap' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeOctopusNcommBootstrap(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${maxConnections},
            ${maxRequests},
            ${requestTimeout},
            ${requestRetries},
            ${launchTimeout}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeSocialIntegrationsLivefyreUserPingforpullImplPingPullS {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${communitiesPeriodintegrationPeriodlivefyrePeriodslingPeriodeventPeriodfilter}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeSocialIntegrationsLivefyreUserPingforpullImplPingPullS' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeSocialIntegrationsLivefyreUserPingforpullImplPingPullS(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${communitiesPeriodintegrationPeriodlivefyrePeriodslingPeriodeventPeriodfilter}
        )
    }
}

function Invoke-ConfigmgrApiComAdobeXmpWorkerFilesNcommXMPFilesNComm {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${maxConnections},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${maxRequests},
        [Parameter(Position = 8, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${requestTimeout},
        [Parameter(Position = 9, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${logDir}
    )

    Process {
        'Calling method: ConfigmgrApi-ComAdobeXmpWorkerFilesNcommXMPFilesNComm' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComAdobeXmpWorkerFilesNcommXMPFilesNComm(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${maxConnections},
            ${maxRequests},
            ${requestTimeout},
            ${logDir}
        )
    }
}

function Invoke-ConfigmgrApiComDayCommonsDatasourceJdbcpoolJdbcPoolService {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${jdbcPerioddriverPeriodclass},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${jdbcPeriodconnectionPerioduri},
        [Parameter(Position = 8, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${jdbcPeriodusername},
        [Parameter(Position = 9, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${jdbcPeriodpassword},
        [Parameter(Position = 10, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${jdbcPeriodvalidationPeriodquery},
        [Parameter(Position = 11, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${defaultPeriodreadonly},
        [Parameter(Position = 12, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${defaultPeriodautocommit},
        [Parameter(Position = 13, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${poolPeriodsize},
        [Parameter(Position = 14, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${poolPeriodmaxPeriodwaitPeriodmsec},
        [Parameter(Position = 15, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${datasourcePeriodname},
        [Parameter(Position = 16, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${datasourcePeriodsvcPeriodproperties}
    )

    Process {
        'Calling method: ConfigmgrApi-ComDayCommonsDatasourceJdbcpoolJdbcPoolService' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComDayCommonsDatasourceJdbcpoolJdbcPoolService(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${jdbcPerioddriverPeriodclass},
            ${jdbcPeriodconnectionPerioduri},
            ${jdbcPeriodusername},
            ${jdbcPeriodpassword},
            ${jdbcPeriodvalidationPeriodquery},
            ${defaultPeriodreadonly},
            ${defaultPeriodautocommit},
            ${poolPeriodsize},
            ${poolPeriodmaxPeriodwaitPeriodmsec},
            ${datasourcePeriodname},
            ${datasourcePeriodsvcPeriodproperties}
        )
    }
}

function Invoke-ConfigmgrApiComDayCommonsHttpclient {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${proxyPeriodenabled},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${proxyPeriodhost},
        [Parameter(Position = 8, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${proxyPerioduser},
        [Parameter(Position = 9, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${proxyPeriodpassword},
        [Parameter(Position = 10, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${proxyPeriodntlmPeriodhost},
        [Parameter(Position = 11, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${proxyPeriodntlmPerioddomain},
        [Parameter(Position = 12, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${proxyPeriodexceptions}
    )

    Process {
        'Calling method: ConfigmgrApi-ComDayCommonsHttpclient' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComDayCommonsHttpclient(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${proxyPeriodenabled},
            ${proxyPeriodhost},
            ${proxyPerioduser},
            ${proxyPeriodpassword},
            ${proxyPeriodntlmPeriodhost},
            ${proxyPeriodntlmPerioddomain},
            ${proxyPeriodexceptions}
        )
    }
}

function Invoke-ConfigmgrApiComDayCqAnalyticsImplStorePropertiesChangeListener {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${cqPeriodstorePeriodlistenerPeriodadditionalStorePaths}
    )

    Process {
        'Calling method: ConfigmgrApi-ComDayCqAnalyticsImplStorePropertiesChangeListener' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComDayCqAnalyticsImplStorePropertiesChangeListener(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${cqPeriodstorePeriodlistenerPeriodadditionalStorePaths}
        )
    }
}

function Invoke-ConfigmgrApiComDayCqAnalyticsSitecatalystImplExporterClassificationsExporte {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${allowedPeriodpaths},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${cqPeriodanalyticsPeriodsaintPeriodexporterPeriodpagesize}
    )

    Process {
        'Calling method: ConfigmgrApi-ComDayCqAnalyticsSitecatalystImplExporterClassificationsExporte' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComDayCqAnalyticsSitecatalystImplExporterClassificationsExporte(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${allowedPeriodpaths},
            ${cqPeriodanalyticsPeriodsaintPeriodexporterPeriodpagesize}
        )
    }
}

function Invoke-ConfigmgrApiComDayCqAnalyticsSitecatalystImplImporterReportImporter {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${reportPeriodfetchPeriodattempts},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${reportPeriodfetchPerioddelay}
    )

    Process {
        'Calling method: ConfigmgrApi-ComDayCqAnalyticsSitecatalystImplImporterReportImporter' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComDayCqAnalyticsSitecatalystImplImporterReportImporter(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${reportPeriodfetchPeriodattempts},
            ${reportPeriodfetchPerioddelay}
        )
    }
}

function Invoke-ConfigmgrApiComDayCqAnalyticsSitecatalystImplSitecatalystAdapterFactory {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${cqPeriodanalyticsPeriodadapterfactoryPeriodcontextstores}
    )

    Process {
        'Calling method: ConfigmgrApi-ComDayCqAnalyticsSitecatalystImplSitecatalystAdapterFactory' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComDayCqAnalyticsSitecatalystImplSitecatalystAdapterFactory(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${cqPeriodanalyticsPeriodadapterfactoryPeriodcontextstores}
        )
    }
}

function Invoke-ConfigmgrApiComDayCqAnalyticsSitecatalystImplSitecatalystHttpClientImpl {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${cqPeriodanalyticsPeriodsitecatalystPeriodservicePerioddatacenterPeriodurl},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${devhostnamepatterns},
        [Parameter(Position = 8, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${connectionPeriodtimeout},
        [Parameter(Position = 9, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${socketPeriodtimeout}
    )

    Process {
        'Calling method: ConfigmgrApi-ComDayCqAnalyticsSitecatalystImplSitecatalystHttpClientImpl' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComDayCqAnalyticsSitecatalystImplSitecatalystHttpClientImpl(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${cqPeriodanalyticsPeriodsitecatalystPeriodservicePerioddatacenterPeriodurl},
            ${devhostnamepatterns},
            ${connectionPeriodtimeout},
            ${socketPeriodtimeout}
        )
    }
}

function Invoke-ConfigmgrApiComDayCqAnalyticsTestandtargetImplAccountOptionsUpdater {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${cqPeriodanalyticsPeriodtestandtargetPeriodaccountoptionsupdaterPeriodenabled}
    )

    Process {
        'Calling method: ConfigmgrApi-ComDayCqAnalyticsTestandtargetImplAccountOptionsUpdater' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComDayCqAnalyticsTestandtargetImplAccountOptionsUpdater(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${cqPeriodanalyticsPeriodtestandtargetPeriodaccountoptionsupdaterPeriodenabled}
        )
    }
}

function Invoke-ConfigmgrApiComDayCqAnalyticsTestandtargetImplDeleteAuthorActivityListener {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${cqPeriodanalyticsPeriodtestandtargetPerioddeleteauthoractivitylistenerPeriodenabled}
    )

    Process {
        'Calling method: ConfigmgrApi-ComDayCqAnalyticsTestandtargetImplDeleteAuthorActivityListener' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComDayCqAnalyticsTestandtargetImplDeleteAuthorActivityListener(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${cqPeriodanalyticsPeriodtestandtargetPerioddeleteauthoractivitylistenerPeriodenabled}
        )
    }
}

function Invoke-ConfigmgrApiComDayCqAnalyticsTestandtargetImplPushAuthorCampaignPageListener {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${cqPeriodanalyticsPeriodtestandtargetPeriodpushauthorcampaignpagelistenerPeriodenabled}
    )

    Process {
        'Calling method: ConfigmgrApi-ComDayCqAnalyticsTestandtargetImplPushAuthorCampaignPageListener' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComDayCqAnalyticsTestandtargetImplPushAuthorCampaignPageListener(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${cqPeriodanalyticsPeriodtestandtargetPeriodpushauthorcampaignpagelistenerPeriodenabled}
        )
    }
}

function Invoke-ConfigmgrApiComDayCqAnalyticsTestandtargetImplSegmentImporter {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${cqPeriodanalyticsPeriodtestandtargetPeriodsegmentimporterPeriodenabled}
    )

    Process {
        'Calling method: ConfigmgrApi-ComDayCqAnalyticsTestandtargetImplSegmentImporter' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComDayCqAnalyticsTestandtargetImplSegmentImporter(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${cqPeriodanalyticsPeriodtestandtargetPeriodsegmentimporterPeriodenabled}
        )
    }
}

function Invoke-ConfigmgrApiComDayCqAnalyticsTestandtargetImplServiceWebServiceImpl {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${endpointUri},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${connectionTimeout},
        [Parameter(Position = 8, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${socketTimeout}
    )

    Process {
        'Calling method: ConfigmgrApi-ComDayCqAnalyticsTestandtargetImplServiceWebServiceImpl' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComDayCqAnalyticsTestandtargetImplServiceWebServiceImpl(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${endpointUri},
            ${connectionTimeout},
            ${socketTimeout}
        )
    }
}

function Invoke-ConfigmgrApiComDayCqAnalyticsTestandtargetImplServletsAdminServerServlet {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${testandtargetPeriodendpointPeriodurl}
    )

    Process {
        'Calling method: ConfigmgrApi-ComDayCqAnalyticsTestandtargetImplServletsAdminServerServlet' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComDayCqAnalyticsTestandtargetImplServletsAdminServerServlet(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${testandtargetPeriodendpointPeriodurl}
        )
    }
}

function Invoke-ConfigmgrApiComDayCqAnalyticsTestandtargetImplTestandtargetHttpClientImpl {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${cqPeriodanalyticsPeriodtestandtargetPeriodapiPeriodurl},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${cqPeriodanalyticsPeriodtestandtargetPeriodtimeout},
        [Parameter(Position = 8, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${cqPeriodanalyticsPeriodtestandtargetPeriodsockettimeout},
        [Parameter(Position = 9, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${cqPeriodanalyticsPeriodtestandtargetPeriodrecommendationsPeriodurlPeriodreplace},
        [Parameter(Position = 10, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${cqPeriodanalyticsPeriodtestandtargetPeriodrecommendationsPeriodurlPeriodreplacewith}
    )

    Process {
        'Calling method: ConfigmgrApi-ComDayCqAnalyticsTestandtargetImplTestandtargetHttpClientImpl' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComDayCqAnalyticsTestandtargetImplTestandtargetHttpClientImpl(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${cqPeriodanalyticsPeriodtestandtargetPeriodapiPeriodurl},
            ${cqPeriodanalyticsPeriodtestandtargetPeriodtimeout},
            ${cqPeriodanalyticsPeriodtestandtargetPeriodsockettimeout},
            ${cqPeriodanalyticsPeriodtestandtargetPeriodrecommendationsPeriodurlPeriodreplace},
            ${cqPeriodanalyticsPeriodtestandtargetPeriodrecommendationsPeriodurlPeriodreplacewith}
        )
    }
}

function Invoke-ConfigmgrApiComDayCqAuthImplCugCugSupportImpl {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${cugPeriodexemptedPeriodprincipals},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${cugPeriodenabled},
        [Parameter(Position = 8, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${cugPeriodprincipalsPeriodregex},
        [Parameter(Position = 9, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${cugPeriodprincipalsPeriodreplacement}
    )

    Process {
        'Calling method: ConfigmgrApi-ComDayCqAuthImplCugCugSupportImpl' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComDayCqAuthImplCugCugSupportImpl(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${cugPeriodexemptedPeriodprincipals},
            ${cugPeriodenabled},
            ${cugPeriodprincipalsPeriodregex},
            ${cugPeriodprincipalsPeriodreplacement}
        )
    }
}

function Invoke-ConfigmgrApiComDayCqAuthImplLoginSelectorHandler {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${path},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${servicePeriodranking},
        [Parameter(Position = 8, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${authPeriodloginselectorPeriodmappings},
        [Parameter(Position = 9, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${authPeriodloginselectorPeriodchangepwPeriodmappings},
        [Parameter(Position = 10, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${authPeriodloginselectorPerioddefaultloginpage},
        [Parameter(Position = 11, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${authPeriodloginselectorPerioddefaultchangepwpage},
        [Parameter(Position = 12, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${authPeriodloginselectorPeriodhandle},
        [Parameter(Position = 13, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${authPeriodloginselectorPeriodhandlePeriodallPeriodextensions}
    )

    Process {
        'Calling method: ConfigmgrApi-ComDayCqAuthImplLoginSelectorHandler' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComDayCqAuthImplLoginSelectorHandler(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${path},
            ${servicePeriodranking},
            ${authPeriodloginselectorPeriodmappings},
            ${authPeriodloginselectorPeriodchangepwPeriodmappings},
            ${authPeriodloginselectorPerioddefaultloginpage},
            ${authPeriodloginselectorPerioddefaultchangepwpage},
            ${authPeriodloginselectorPeriodhandle},
            ${authPeriodloginselectorPeriodhandlePeriodallPeriodextensions}
        )
    }
}

function Invoke-ConfigmgrApiComDayCqCommonsImplExternalizerImpl {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${externalizerPerioddomains},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${externalizerPeriodhost},
        [Parameter(Position = 8, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${externalizerPeriodcontextpath},
        [Parameter(Position = 9, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${externalizerPeriodencodedpath}
    )

    Process {
        'Calling method: ConfigmgrApi-ComDayCqCommonsImplExternalizerImpl' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComDayCqCommonsImplExternalizerImpl(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${externalizerPerioddomains},
            ${externalizerPeriodhost},
            ${externalizerPeriodcontextpath},
            ${externalizerPeriodencodedpath}
        )
    }
}

function Invoke-ConfigmgrApiComDayCqCommonsServletsRootMappingServlet {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${rootmappingPeriodtarget}
    )

    Process {
        'Calling method: ConfigmgrApi-ComDayCqCommonsServletsRootMappingServlet' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComDayCqCommonsServletsRootMappingServlet(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${rootmappingPeriodtarget}
        )
    }
}

function Invoke-ConfigmgrApiComDayCqCompatCodeupgradeImplCodeUpgradeExecutionConditionChecke {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${codeupgradetasks},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${codeupgradetaskfilters}
    )

    Process {
        'Calling method: ConfigmgrApi-ComDayCqCompatCodeupgradeImplCodeUpgradeExecutionConditionChecke' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComDayCqCompatCodeupgradeImplCodeUpgradeExecutionConditionChecke(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${codeupgradetasks},
            ${codeupgradetaskfilters}
        )
    }
}

function Invoke-ConfigmgrApiComDayCqCompatCodeupgradeImplUpgradeTaskIgnoreList {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${upgradeTaskIgnoreList}
    )

    Process {
        'Calling method: ConfigmgrApi-ComDayCqCompatCodeupgradeImplUpgradeTaskIgnoreList' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComDayCqCompatCodeupgradeImplUpgradeTaskIgnoreList(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${upgradeTaskIgnoreList}
        )
    }
}

function Invoke-ConfigmgrApiComDayCqCompatCodeupgradeImplVersionRangeTaskIgnorelist {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${effectiveBundleListPath}
    )

    Process {
        'Calling method: ConfigmgrApi-ComDayCqCompatCodeupgradeImplVersionRangeTaskIgnorelist' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComDayCqCompatCodeupgradeImplVersionRangeTaskIgnorelist(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${effectiveBundleListPath}
        )
    }
}

function Invoke-ConfigmgrApiComDayCqContentsyncImplContentSyncManagerImpl {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${contentsyncPeriodfallbackPeriodauthorizable},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${contentsyncPeriodfallbackPeriodupdateuser}
    )

    Process {
        'Calling method: ConfigmgrApi-ComDayCqContentsyncImplContentSyncManagerImpl' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComDayCqContentsyncImplContentSyncManagerImpl(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${contentsyncPeriodfallbackPeriodauthorizable},
            ${contentsyncPeriodfallbackPeriodupdateuser}
        )
    }
}

function Invoke-ConfigmgrApiComDayCqDamCommonsHandlerStandardImageHandler {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${largeFileThreshold},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${largeCommentThreshold},
        [Parameter(Position = 8, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${cqPerioddamPeriodenablePeriodextPeriodmetaPeriodextraction}
    )

    Process {
        'Calling method: ConfigmgrApi-ComDayCqDamCommonsHandlerStandardImageHandler' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComDayCqDamCommonsHandlerStandardImageHandler(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${largeFileThreshold},
            ${largeCommentThreshold},
            ${cqPerioddamPeriodenablePeriodextPeriodmetaPeriodextraction}
        )
    }
}

function Invoke-ConfigmgrApiComDayCqDamCommonsMetadataXmpFilterBlackWhite {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${xmpPeriodfilterPeriodapplyWhitelist},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${xmpPeriodfilterPeriodwhitelist},
        [Parameter(Position = 8, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${xmpPeriodfilterPeriodapplyBlacklist},
        [Parameter(Position = 9, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${xmpPeriodfilterPeriodblacklist}
    )

    Process {
        'Calling method: ConfigmgrApi-ComDayCqDamCommonsMetadataXmpFilterBlackWhite' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComDayCqDamCommonsMetadataXmpFilterBlackWhite(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${xmpPeriodfilterPeriodapplyWhitelist},
            ${xmpPeriodfilterPeriodwhitelist},
            ${xmpPeriodfilterPeriodapplyBlacklist},
            ${xmpPeriodfilterPeriodblacklist}
        )
    }
}

function Invoke-ConfigmgrApiComDayCqDamCommonsUtilImplAssetCacheImpl {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${largePeriodfilePeriodmin},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${cachePeriodapply},
        [Parameter(Position = 8, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${mimePeriodtypes}
    )

    Process {
        'Calling method: ConfigmgrApi-ComDayCqDamCommonsUtilImplAssetCacheImpl' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComDayCqDamCommonsUtilImplAssetCacheImpl(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${largePeriodfilePeriodmin},
            ${cachePeriodapply},
            ${mimePeriodtypes}
        )
    }
}

function Invoke-ConfigmgrApiComDayCqDamCoreImplAnnotationPdfAnnotationPdfConfig {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${cqPerioddamPeriodconfigPeriodannotationPeriodpdfPerioddocumentPeriodwidth},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${cqPerioddamPeriodconfigPeriodannotationPeriodpdfPerioddocumentPeriodheight},
        [Parameter(Position = 8, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${cqPerioddamPeriodconfigPeriodannotationPeriodpdfPerioddocumentPeriodpaddingPeriodhorizontal},
        [Parameter(Position = 9, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${cqPerioddamPeriodconfigPeriodannotationPeriodpdfPerioddocumentPeriodpaddingPeriodvertical},
        [Parameter(Position = 10, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${cqPerioddamPeriodconfigPeriodannotationPeriodpdfPeriodfontPeriodsize},
        [Parameter(Position = 11, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${cqPerioddamPeriodconfigPeriodannotationPeriodpdfPeriodfontPeriodcolor},
        [Parameter(Position = 12, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${cqPerioddamPeriodconfigPeriodannotationPeriodpdfPeriodfontPeriodfamily},
        [Parameter(Position = 13, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${cqPerioddamPeriodconfigPeriodannotationPeriodpdfPeriodfontPeriodlight},
        [Parameter(Position = 14, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${cqPerioddamPeriodconfigPeriodannotationPeriodpdfPeriodmarginTextImage},
        [Parameter(Position = 15, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${cqPerioddamPeriodconfigPeriodannotationPeriodpdfPeriodminImageHeight},
        [Parameter(Position = 16, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${cqPerioddamPeriodconfigPeriodannotationPeriodpdfPeriodreviewStatusPeriodwidth},
        [Parameter(Position = 17, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${cqPerioddamPeriodconfigPeriodannotationPeriodpdfPeriodreviewStatusPeriodcolorPeriodapproved},
        [Parameter(Position = 18, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${cqPerioddamPeriodconfigPeriodannotationPeriodpdfPeriodreviewStatusPeriodcolorPeriodrejected},
        [Parameter(Position = 19, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${cqPerioddamPeriodconfigPeriodannotationPeriodpdfPeriodreviewStatusPeriodcolorPeriodchangesRequested},
        [Parameter(Position = 20, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${cqPerioddamPeriodconfigPeriodannotationPeriodpdfPeriodannotationMarkerPeriodwidth},
        [Parameter(Position = 21, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${cqPerioddamPeriodconfigPeriodannotationPeriodpdfPeriodassetPeriodminheight}
    )

    Process {
        'Calling method: ConfigmgrApi-ComDayCqDamCoreImplAnnotationPdfAnnotationPdfConfig' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComDayCqDamCoreImplAnnotationPdfAnnotationPdfConfig(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${cqPerioddamPeriodconfigPeriodannotationPeriodpdfPerioddocumentPeriodwidth},
            ${cqPerioddamPeriodconfigPeriodannotationPeriodpdfPerioddocumentPeriodheight},
            ${cqPerioddamPeriodconfigPeriodannotationPeriodpdfPerioddocumentPeriodpaddingPeriodhorizontal},
            ${cqPerioddamPeriodconfigPeriodannotationPeriodpdfPerioddocumentPeriodpaddingPeriodvertical},
            ${cqPerioddamPeriodconfigPeriodannotationPeriodpdfPeriodfontPeriodsize},
            ${cqPerioddamPeriodconfigPeriodannotationPeriodpdfPeriodfontPeriodcolor},
            ${cqPerioddamPeriodconfigPeriodannotationPeriodpdfPeriodfontPeriodfamily},
            ${cqPerioddamPeriodconfigPeriodannotationPeriodpdfPeriodfontPeriodlight},
            ${cqPerioddamPeriodconfigPeriodannotationPeriodpdfPeriodmarginTextImage},
            ${cqPerioddamPeriodconfigPeriodannotationPeriodpdfPeriodminImageHeight},
            ${cqPerioddamPeriodconfigPeriodannotationPeriodpdfPeriodreviewStatusPeriodwidth},
            ${cqPerioddamPeriodconfigPeriodannotationPeriodpdfPeriodreviewStatusPeriodcolorPeriodapproved},
            ${cqPerioddamPeriodconfigPeriodannotationPeriodpdfPeriodreviewStatusPeriodcolorPeriodrejected},
            ${cqPerioddamPeriodconfigPeriodannotationPeriodpdfPeriodreviewStatusPeriodcolorPeriodchangesRequested},
            ${cqPerioddamPeriodconfigPeriodannotationPeriodpdfPeriodannotationMarkerPeriodwidth},
            ${cqPerioddamPeriodconfigPeriodannotationPeriodpdfPeriodassetPeriodminheight}
        )
    }
}

function Invoke-ConfigmgrApiComDayCqDamCoreImplAssetMoveListener {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${enabled}
    )

    Process {
        'Calling method: ConfigmgrApi-ComDayCqDamCoreImplAssetMoveListener' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComDayCqDamCoreImplAssetMoveListener(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${enabled}
        )
    }
}

function Invoke-ConfigmgrApiComDayCqDamCoreImplAssethomeAssetHomePageConfiguration {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${isEnabled}
    )

    Process {
        'Calling method: ConfigmgrApi-ComDayCqDamCoreImplAssethomeAssetHomePageConfiguration' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComDayCqDamCoreImplAssethomeAssetHomePageConfiguration(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${isEnabled}
        )
    }
}

function Invoke-ConfigmgrApiComDayCqDamCoreImplAssetlinkshareAdhocAssetShareProxyServlet {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${cqPerioddamPeriodadhocPeriodassetPeriodsharePeriodprezipPeriodmaxcontentsize}
    )

    Process {
        'Calling method: ConfigmgrApi-ComDayCqDamCoreImplAssetlinkshareAdhocAssetShareProxyServlet' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComDayCqDamCoreImplAssetlinkshareAdhocAssetShareProxyServlet(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${cqPerioddamPeriodadhocPeriodassetPeriodsharePeriodprezipPeriodmaxcontentsize}
        )
    }
}

function Invoke-ConfigmgrApiComDayCqDamCoreImplCacheCQBufferedImageCache {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${cqPerioddamPeriodimagePeriodcachePeriodmaxPeriodmemory},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${cqPerioddamPeriodimagePeriodcachePeriodmaxPeriodage},
        [Parameter(Position = 8, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${cqPerioddamPeriodimagePeriodcachePeriodmaxPerioddimension}
    )

    Process {
        'Calling method: ConfigmgrApi-ComDayCqDamCoreImplCacheCQBufferedImageCache' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComDayCqDamCoreImplCacheCQBufferedImageCache(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${cqPerioddamPeriodimagePeriodcachePeriodmaxPeriodmemory},
            ${cqPerioddamPeriodimagePeriodcachePeriodmaxPeriodage},
            ${cqPerioddamPeriodimagePeriodcachePeriodmaxPerioddimension}
        )
    }
}

function Invoke-ConfigmgrApiComDayCqDamCoreImplDamChangeEventListener {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${changeeventlistenerPeriodobservedPeriodpaths}
    )

    Process {
        'Calling method: ConfigmgrApi-ComDayCqDamCoreImplDamChangeEventListener' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComDayCqDamCoreImplDamChangeEventListener(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${changeeventlistenerPeriodobservedPeriodpaths}
        )
    }
}

function Invoke-ConfigmgrApiComDayCqDamCoreImplDamEventPurgeService {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${schedulerPeriodexpression},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${maxSavedActivities},
        [Parameter(Position = 8, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${saveInterval},
        [Parameter(Position = 9, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${enableActivityPurge},
        [Parameter(Position = 10, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${eventTypes}
    )

    Process {
        'Calling method: ConfigmgrApi-ComDayCqDamCoreImplDamEventPurgeService' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComDayCqDamCoreImplDamEventPurgeService(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${schedulerPeriodexpression},
            ${maxSavedActivities},
            ${saveInterval},
            ${enableActivityPurge},
            ${eventTypes}
        )
    }
}

function Invoke-ConfigmgrApiComDayCqDamCoreImplDamEventRecorderImpl {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${eventPeriodfilter},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${eventPeriodqueuePeriodlength},
        [Parameter(Position = 8, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${eventrecorderPeriodenabled},
        [Parameter(Position = 9, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${eventrecorderPeriodblacklist},
        [Parameter(Position = 10, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${eventrecorderPeriodeventtypes}
    )

    Process {
        'Calling method: ConfigmgrApi-ComDayCqDamCoreImplDamEventRecorderImpl' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComDayCqDamCoreImplDamEventRecorderImpl(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${eventPeriodfilter},
            ${eventPeriodqueuePeriodlength},
            ${eventrecorderPeriodenabled},
            ${eventrecorderPeriodblacklist},
            ${eventrecorderPeriodeventtypes}
        )
    }
}

function Invoke-ConfigmgrApiComDayCqDamCoreImplEventDamEventAuditListener {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${eventPeriodfilter},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${enabled}
    )

    Process {
        'Calling method: ConfigmgrApi-ComDayCqDamCoreImplEventDamEventAuditListener' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComDayCqDamCoreImplEventDamEventAuditListener(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${eventPeriodfilter},
            ${enabled}
        )
    }
}

function Invoke-ConfigmgrApiComDayCqDamCoreImplExpiryNotificationJobImpl {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${cqPerioddamPeriodexpiryPeriodnotificationPeriodschedulerPeriodistimebased},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${cqPerioddamPeriodexpiryPeriodnotificationPeriodschedulerPeriodtimebasedPeriodrule},
        [Parameter(Position = 8, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${cqPerioddamPeriodexpiryPeriodnotificationPeriodschedulerPeriodperiodPeriodrule},
        [Parameter(Position = 9, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${sendEmail},
        [Parameter(Position = 10, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${assetExpiredLimit},
        [Parameter(Position = 11, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${priorNotificationSeconds},
        [Parameter(Position = 12, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${cqPerioddamPeriodexpiryPeriodnotificationPeriodurlPeriodprotocol}
    )

    Process {
        'Calling method: ConfigmgrApi-ComDayCqDamCoreImplExpiryNotificationJobImpl' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComDayCqDamCoreImplExpiryNotificationJobImpl(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${cqPerioddamPeriodexpiryPeriodnotificationPeriodschedulerPeriodistimebased},
            ${cqPerioddamPeriodexpiryPeriodnotificationPeriodschedulerPeriodtimebasedPeriodrule},
            ${cqPerioddamPeriodexpiryPeriodnotificationPeriodschedulerPeriodperiodPeriodrule},
            ${sendEmail},
            ${assetExpiredLimit},
            ${priorNotificationSeconds},
            ${cqPerioddamPeriodexpiryPeriodnotificationPeriodurlPeriodprotocol}
        )
    }
}

function Invoke-ConfigmgrApiComDayCqDamCoreImplFoldermetadataschemaFolderMetadataSchemaFeat {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${isEnabled}
    )

    Process {
        'Calling method: ConfigmgrApi-ComDayCqDamCoreImplFoldermetadataschemaFolderMetadataSchemaFeat' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComDayCqDamCoreImplFoldermetadataschemaFolderMetadataSchemaFeat(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${isEnabled}
        )
    }
}

function Invoke-ConfigmgrApiComDayCqDamCoreImplGfxCommonsGfxRenderer {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${skipPeriodbufferedcache}
    )

    Process {
        'Calling method: ConfigmgrApi-ComDayCqDamCoreImplGfxCommonsGfxRenderer' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComDayCqDamCoreImplGfxCommonsGfxRenderer(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${skipPeriodbufferedcache}
        )
    }
}

function Invoke-ConfigmgrApiComDayCqDamCoreImplHandlerEPSFormatHandler {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${mimetype}
    )

    Process {
        'Calling method: ConfigmgrApi-ComDayCqDamCoreImplHandlerEPSFormatHandler' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComDayCqDamCoreImplHandlerEPSFormatHandler(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${mimetype}
        )
    }
}

function Invoke-ConfigmgrApiComDayCqDamCoreImplHandlerIndesignFormatHandler {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${mimetype}
    )

    Process {
        'Calling method: ConfigmgrApi-ComDayCqDamCoreImplHandlerIndesignFormatHandler' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComDayCqDamCoreImplHandlerIndesignFormatHandler(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${mimetype}
        )
    }
}

function Invoke-ConfigmgrApiComDayCqDamCoreImplHandlerJpegHandler {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${cqPerioddamPeriodenablePeriodextPeriodmetaPeriodextraction},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${largeFileThreshold},
        [Parameter(Position = 8, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${largeCommentThreshold}
    )

    Process {
        'Calling method: ConfigmgrApi-ComDayCqDamCoreImplHandlerJpegHandler' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComDayCqDamCoreImplHandlerJpegHandler(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${cqPerioddamPeriodenablePeriodextPeriodmetaPeriodextraction},
            ${largeFileThreshold},
            ${largeCommentThreshold}
        )
    }
}

function Invoke-ConfigmgrApiComDayCqDamCoreImplHandlerXmpNCommXMPHandler {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${xmphandlerPeriodcqPeriodformats}
    )

    Process {
        'Calling method: ConfigmgrApi-ComDayCqDamCoreImplHandlerXmpNCommXMPHandler' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComDayCqDamCoreImplHandlerXmpNCommXMPHandler(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${xmphandlerPeriodcqPeriodformats}
        )
    }
}

function Invoke-ConfigmgrApiComDayCqDamCoreImplJmxAssetIndexUpdateMonitor {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${jmxPeriodobjectname},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${propertyPeriodmeasurePeriodenabled},
        [Parameter(Position = 8, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${propertyPeriodname},
        [Parameter(Position = 9, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${propertyPeriodmaxPeriodwaitPeriodms},
        [Parameter(Position = 10, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Decimal]
        ${propertyPeriodmaxPeriodrate},
        [Parameter(Position = 11, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${fulltextPeriodmeasurePeriodenabled},
        [Parameter(Position = 12, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${fulltextPeriodname},
        [Parameter(Position = 13, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${fulltextPeriodmaxPeriodwaitPeriodms},
        [Parameter(Position = 14, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Decimal]
        ${fulltextPeriodmaxPeriodrate}
    )

    Process {
        'Calling method: ConfigmgrApi-ComDayCqDamCoreImplJmxAssetIndexUpdateMonitor' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComDayCqDamCoreImplJmxAssetIndexUpdateMonitor(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${jmxPeriodobjectname},
            ${propertyPeriodmeasurePeriodenabled},
            ${propertyPeriodname},
            ${propertyPeriodmaxPeriodwaitPeriodms},
            ${propertyPeriodmaxPeriodrate},
            ${fulltextPeriodmeasurePeriodenabled},
            ${fulltextPeriodname},
            ${fulltextPeriodmaxPeriodwaitPeriodms},
            ${fulltextPeriodmaxPeriodrate}
        )
    }
}

function Invoke-ConfigmgrApiComDayCqDamCoreImplJmxAssetMigrationMBeanImpl {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${jmxPeriodobjectname}
    )

    Process {
        'Calling method: ConfigmgrApi-ComDayCqDamCoreImplJmxAssetMigrationMBeanImpl' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComDayCqDamCoreImplJmxAssetMigrationMBeanImpl(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${jmxPeriodobjectname}
        )
    }
}

function Invoke-ConfigmgrApiComDayCqDamCoreImplJmxAssetUpdateMonitorImpl {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${jmxPeriodobjectname},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${active}
    )

    Process {
        'Calling method: ConfigmgrApi-ComDayCqDamCoreImplJmxAssetUpdateMonitorImpl' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComDayCqDamCoreImplJmxAssetUpdateMonitorImpl(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${jmxPeriodobjectname},
            ${active}
        )
    }
}

function Invoke-ConfigmgrApiComDayCqDamCoreImplJobsMetadataexportAsyncMetadataExportConfig {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${operation},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${emailEnabled}
    )

    Process {
        'Calling method: ConfigmgrApi-ComDayCqDamCoreImplJobsMetadataexportAsyncMetadataExportConfig' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComDayCqDamCoreImplJobsMetadataexportAsyncMetadataExportConfig(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${operation},
            ${emailEnabled}
        )
    }
}

function Invoke-ConfigmgrApiComDayCqDamCoreImplJobsMetadataimportAsyncMetadataImportConfig {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${operation},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${operationIcon},
        [Parameter(Position = 8, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${topicName},
        [Parameter(Position = 9, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${emailEnabled}
    )

    Process {
        'Calling method: ConfigmgrApi-ComDayCqDamCoreImplJobsMetadataimportAsyncMetadataImportConfig' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComDayCqDamCoreImplJobsMetadataimportAsyncMetadataImportConfig(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${operation},
            ${operationIcon},
            ${topicName},
            ${emailEnabled}
        )
    }
}

function Invoke-ConfigmgrApiComDayCqDamCoreImplLightboxLightboxServlet {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${slingPeriodservletPeriodpaths},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${slingPeriodservletPeriodmethods},
        [Parameter(Position = 8, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${cqPerioddamPeriodenablePeriodanonymous}
    )

    Process {
        'Calling method: ConfigmgrApi-ComDayCqDamCoreImplLightboxLightboxServlet' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComDayCqDamCoreImplLightboxLightboxServlet(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${slingPeriodservletPeriodpaths},
            ${slingPeriodservletPeriodmethods},
            ${cqPerioddamPeriodenablePeriodanonymous}
        )
    }
}

function Invoke-ConfigmgrApiComDayCqDamCoreImplMetadataEditorSelectComponentHandler {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${graniteData}
    )

    Process {
        'Calling method: ConfigmgrApi-ComDayCqDamCoreImplMetadataEditorSelectComponentHandler' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComDayCqDamCoreImplMetadataEditorSelectComponentHandler(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${graniteData}
        )
    }
}

function Invoke-ConfigmgrApiComDayCqDamCoreImplMimeTypeAssetUploadRestrictionHelper {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${cqPerioddamPeriodallowPeriodallPeriodmime},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${cqPerioddamPeriodallowedPeriodassetPeriodmimes}
    )

    Process {
        'Calling method: ConfigmgrApi-ComDayCqDamCoreImplMimeTypeAssetUploadRestrictionHelper' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComDayCqDamCoreImplMimeTypeAssetUploadRestrictionHelper(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${cqPerioddamPeriodallowPeriodallPeriodmime},
            ${cqPerioddamPeriodallowedPeriodassetPeriodmimes}
        )
    }
}

function Invoke-ConfigmgrApiComDayCqDamCoreImplMimeTypeDamMimeTypeServiceImpl {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${cqPerioddamPerioddetectPeriodassetPeriodmimePeriodfromPeriodcontent}
    )

    Process {
        'Calling method: ConfigmgrApi-ComDayCqDamCoreImplMimeTypeDamMimeTypeServiceImpl' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComDayCqDamCoreImplMimeTypeDamMimeTypeServiceImpl(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${cqPerioddamPerioddetectPeriodassetPeriodmimePeriodfromPeriodcontent}
        )
    }
}

function Invoke-ConfigmgrApiComDayCqDamCoreImplMissingMetadataNotificationJob {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${cqPerioddamPeriodmissingmetadataPeriodnotificationPeriodschedulerPeriodistimebased},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${cqPerioddamPeriodmissingmetadataPeriodnotificationPeriodschedulerPeriodtimebasedPeriodrule},
        [Parameter(Position = 8, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${cqPerioddamPeriodmissingmetadataPeriodnotificationPeriodschedulerPeriodperiodPeriodrule},
        [Parameter(Position = 9, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${cqPerioddamPeriodmissingmetadataPeriodnotificationPeriodrecipient}
    )

    Process {
        'Calling method: ConfigmgrApi-ComDayCqDamCoreImplMissingMetadataNotificationJob' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComDayCqDamCoreImplMissingMetadataNotificationJob(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${cqPerioddamPeriodmissingmetadataPeriodnotificationPeriodschedulerPeriodistimebased},
            ${cqPerioddamPeriodmissingmetadataPeriodnotificationPeriodschedulerPeriodtimebasedPeriodrule},
            ${cqPerioddamPeriodmissingmetadataPeriodnotificationPeriodschedulerPeriodperiodPeriodrule},
            ${cqPerioddamPeriodmissingmetadataPeriodnotificationPeriodrecipient}
        )
    }
}

function Invoke-ConfigmgrApiComDayCqDamCoreImplProcessSendTransientWorkflowCompletedEmailPr {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${processPeriodlabel},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${notify on Complete}
    )

    Process {
        'Calling method: ConfigmgrApi-ComDayCqDamCoreImplProcessSendTransientWorkflowCompletedEmailPr' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComDayCqDamCoreImplProcessSendTransientWorkflowCompletedEmailPr(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${processPeriodlabel},
            ${notify on Complete}
        )
    }
}

function Invoke-ConfigmgrApiComDayCqDamCoreImplProcessTextExtractionProcess {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${mimeTypes},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${maxExtract}
    )

    Process {
        'Calling method: ConfigmgrApi-ComDayCqDamCoreImplProcessTextExtractionProcess' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComDayCqDamCoreImplProcessTextExtractionProcess(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${mimeTypes},
            ${maxExtract}
        )
    }
}

function Invoke-ConfigmgrApiComDayCqDamCoreImplRenditionMakerImpl {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${xmpPeriodpropagate},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${xmpPeriodexcludes}
    )

    Process {
        'Calling method: ConfigmgrApi-ComDayCqDamCoreImplRenditionMakerImpl' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComDayCqDamCoreImplRenditionMakerImpl(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${xmpPeriodpropagate},
            ${xmpPeriodexcludes}
        )
    }
}

function Invoke-ConfigmgrApiComDayCqDamCoreImplReportsReportExportService {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${queryBatchSize}
    )

    Process {
        'Calling method: ConfigmgrApi-ComDayCqDamCoreImplReportsReportExportService' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComDayCqDamCoreImplReportsReportExportService(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${queryBatchSize}
        )
    }
}

function Invoke-ConfigmgrApiComDayCqDamCoreImplReportsReportPurgeService {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${schedulerPeriodexpression},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${maxSavedReports},
        [Parameter(Position = 8, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${timeDuration},
        [Parameter(Position = 9, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${enableReportPurge}
    )

    Process {
        'Calling method: ConfigmgrApi-ComDayCqDamCoreImplReportsReportPurgeService' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComDayCqDamCoreImplReportsReportPurgeService(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${schedulerPeriodexpression},
            ${maxSavedReports},
            ${timeDuration},
            ${enableReportPurge}
        )
    }
}

function Invoke-ConfigmgrApiComDayCqDamCoreImplServletAssetDownloadServlet {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${enabled}
    )

    Process {
        'Calling method: ConfigmgrApi-ComDayCqDamCoreImplServletAssetDownloadServlet' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComDayCqDamCoreImplServletAssetDownloadServlet(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${enabled}
        )
    }
}

function Invoke-ConfigmgrApiComDayCqDamCoreImplServletAssetStatusServlet {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${cqPerioddamPeriodbatchPeriodstatusPeriodmaxassets}
    )

    Process {
        'Calling method: ConfigmgrApi-ComDayCqDamCoreImplServletAssetStatusServlet' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComDayCqDamCoreImplServletAssetStatusServlet(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${cqPerioddamPeriodbatchPeriodstatusPeriodmaxassets}
        )
    }
}

function Invoke-ConfigmgrApiComDayCqDamCoreImplServletAssetXMPSearchServlet {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${cqPerioddamPeriodbatchPeriodindesignPeriodmaxassets}
    )

    Process {
        'Calling method: ConfigmgrApi-ComDayCqDamCoreImplServletAssetXMPSearchServlet' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComDayCqDamCoreImplServletAssetXMPSearchServlet(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${cqPerioddamPeriodbatchPeriodindesignPeriodmaxassets}
        )
    }
}

function Invoke-ConfigmgrApiComDayCqDamCoreImplServletBatchMetadataServlet {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${cqPerioddamPeriodbatchPeriodmetadataPeriodassetPerioddefault},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${cqPerioddamPeriodbatchPeriodmetadataPeriodcollectionPerioddefault},
        [Parameter(Position = 8, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${cqPerioddamPeriodbatchPeriodmetadataPeriodmaxresources}
    )

    Process {
        'Calling method: ConfigmgrApi-ComDayCqDamCoreImplServletBatchMetadataServlet' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComDayCqDamCoreImplServletBatchMetadataServlet(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${cqPerioddamPeriodbatchPeriodmetadataPeriodassetPerioddefault},
            ${cqPerioddamPeriodbatchPeriodmetadataPeriodcollectionPerioddefault},
            ${cqPerioddamPeriodbatchPeriodmetadataPeriodmaxresources}
        )
    }
}

function Invoke-ConfigmgrApiComDayCqDamCoreImplServletBinaryProviderServlet {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${slingPeriodservletPeriodresourceTypes},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${slingPeriodservletPeriodmethods},
        [Parameter(Position = 8, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${cqPerioddamPerioddrmPeriodenable}
    )

    Process {
        'Calling method: ConfigmgrApi-ComDayCqDamCoreImplServletBinaryProviderServlet' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComDayCqDamCoreImplServletBinaryProviderServlet(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${slingPeriodservletPeriodresourceTypes},
            ${slingPeriodservletPeriodmethods},
            ${cqPerioddamPerioddrmPeriodenable}
        )
    }
}

function Invoke-ConfigmgrApiComDayCqDamCoreImplServletCollectionServlet {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${cqPerioddamPeriodbatchPeriodcollectionPeriodproperties},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${cqPerioddamPeriodbatchPeriodcollectionPeriodmaxcollections}
    )

    Process {
        'Calling method: ConfigmgrApi-ComDayCqDamCoreImplServletCollectionServlet' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComDayCqDamCoreImplServletCollectionServlet(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${cqPerioddamPeriodbatchPeriodcollectionPeriodproperties},
            ${cqPerioddamPeriodbatchPeriodcollectionPeriodmaxcollections}
        )
    }
}

function Invoke-ConfigmgrApiComDayCqDamCoreImplServletCollectionsServlet {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${cqPerioddamPeriodbatchPeriodcollectionsPeriodproperties},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${cqPerioddamPeriodbatchPeriodcollectionsPeriodlimit}
    )

    Process {
        'Calling method: ConfigmgrApi-ComDayCqDamCoreImplServletCollectionsServlet' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComDayCqDamCoreImplServletCollectionsServlet(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${cqPerioddamPeriodbatchPeriodcollectionsPeriodproperties},
            ${cqPerioddamPeriodbatchPeriodcollectionsPeriodlimit}
        )
    }
}

function Invoke-ConfigmgrApiComDayCqDamCoreImplServletCompanionServlet {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${more Info},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${SlashmntSlashoverlaySlashdamSlashguiSlashcontentSlashassetsSlashmoreinfoPeriodhtmlSlashDollarLeft_Curly_BracketpathRight_Curly_Bracket}
    )

    Process {
        'Calling method: ConfigmgrApi-ComDayCqDamCoreImplServletCompanionServlet' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComDayCqDamCoreImplServletCompanionServlet(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${more Info},
            ${SlashmntSlashoverlaySlashdamSlashguiSlashcontentSlashassetsSlashmoreinfoPeriodhtmlSlashDollarLeft_Curly_BracketpathRight_Curly_Bracket}
        )
    }
}

function Invoke-ConfigmgrApiComDayCqDamCoreImplServletCreateAssetServlet {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${detectDuplicate}
    )

    Process {
        'Calling method: ConfigmgrApi-ComDayCqDamCoreImplServletCreateAssetServlet' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComDayCqDamCoreImplServletCreateAssetServlet(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${detectDuplicate}
        )
    }
}

function Invoke-ConfigmgrApiComDayCqDamCoreImplServletDamContentDispositionFilter {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${cqPeriodmimePeriodtypePeriodblacklist},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${cqPerioddamPeriodemptyPeriodmime}
    )

    Process {
        'Calling method: ConfigmgrApi-ComDayCqDamCoreImplServletDamContentDispositionFilter' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComDayCqDamCoreImplServletDamContentDispositionFilter(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${cqPeriodmimePeriodtypePeriodblacklist},
            ${cqPerioddamPeriodemptyPeriodmime}
        )
    }
}

function Invoke-ConfigmgrApiComDayCqDamCoreImplServletGuidLookupFilter {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${cqPerioddamPeriodcorePeriodguidlookupfilterPeriodenabled}
    )

    Process {
        'Calling method: ConfigmgrApi-ComDayCqDamCoreImplServletGuidLookupFilter' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComDayCqDamCoreImplServletGuidLookupFilter(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${cqPerioddamPeriodcorePeriodguidlookupfilterPeriodenabled}
        )
    }
}

function Invoke-ConfigmgrApiComDayCqDamCoreImplServletHealthCheckServlet {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${cqPerioddamPeriodsyncPeriodworkflowPeriodid},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${cqPerioddamPeriodsyncPeriodfolderPeriodtypes}
    )

    Process {
        'Calling method: ConfigmgrApi-ComDayCqDamCoreImplServletHealthCheckServlet' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComDayCqDamCoreImplServletHealthCheckServlet(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${cqPerioddamPeriodsyncPeriodworkflowPeriodid},
            ${cqPerioddamPeriodsyncPeriodfolderPeriodtypes}
        )
    }
}

function Invoke-ConfigmgrApiComDayCqDamCoreImplServletMetadataGetServlet {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${slingPeriodservletPeriodresourceTypes},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${slingPeriodservletPeriodmethods},
        [Parameter(Position = 8, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${slingPeriodservletPeriodextensions},
        [Parameter(Position = 9, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${slingPeriodservletPeriodselectors}
    )

    Process {
        'Calling method: ConfigmgrApi-ComDayCqDamCoreImplServletMetadataGetServlet' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComDayCqDamCoreImplServletMetadataGetServlet(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${slingPeriodservletPeriodresourceTypes},
            ${slingPeriodservletPeriodmethods},
            ${slingPeriodservletPeriodextensions},
            ${slingPeriodservletPeriodselectors}
        )
    }
}

function Invoke-ConfigmgrApiComDayCqDamCoreImplServletMultipleLicenseAcceptServlet {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${cqPerioddamPerioddrmPeriodenable}
    )

    Process {
        'Calling method: ConfigmgrApi-ComDayCqDamCoreImplServletMultipleLicenseAcceptServlet' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComDayCqDamCoreImplServletMultipleLicenseAcceptServlet(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${cqPerioddamPerioddrmPeriodenable}
        )
    }
}

function Invoke-ConfigmgrApiComDayCqDamCoreImplServletResourceCollectionServlet {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${slingPeriodservletPeriodresourceTypes},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${slingPeriodservletPeriodmethods},
        [Parameter(Position = 8, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${slingPeriodservletPeriodselectors},
        [Parameter(Position = 9, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${downloadPeriodconfig},
        [Parameter(Position = 10, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${viewPeriodselector},
        [Parameter(Position = 11, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${sendEmail}
    )

    Process {
        'Calling method: ConfigmgrApi-ComDayCqDamCoreImplServletResourceCollectionServlet' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComDayCqDamCoreImplServletResourceCollectionServlet(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${slingPeriodservletPeriodresourceTypes},
            ${slingPeriodservletPeriodmethods},
            ${slingPeriodservletPeriodselectors},
            ${downloadPeriodconfig},
            ${viewPeriodselector},
            ${sendEmail}
        )
    }
}

function Invoke-ConfigmgrApiComDayCqDamCoreImplUiPreviewFolderPreviewUpdaterImpl {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${createPreviewEnabled},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${updatePreviewEnabled},
        [Parameter(Position = 8, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${queueSize},
        [Parameter(Position = 9, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${folderPreviewRenditionRegex}
    )

    Process {
        'Calling method: ConfigmgrApi-ComDayCqDamCoreImplUiPreviewFolderPreviewUpdaterImpl' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComDayCqDamCoreImplUiPreviewFolderPreviewUpdaterImpl(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${createPreviewEnabled},
            ${updatePreviewEnabled},
            ${queueSize},
            ${folderPreviewRenditionRegex}
        )
    }
}

function Invoke-ConfigmgrApiComDayCqDamCoreImplUnzipUnzipConfig {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${cqPerioddamPeriodconfigPeriodunzipPeriodmaxuncompressedsize},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${cqPerioddamPeriodconfigPeriodunzipPeriodencoding}
    )

    Process {
        'Calling method: ConfigmgrApi-ComDayCqDamCoreImplUnzipUnzipConfig' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComDayCqDamCoreImplUnzipUnzipConfig(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${cqPerioddamPeriodconfigPeriodunzipPeriodmaxuncompressedsize},
            ${cqPerioddamPeriodconfigPeriodunzipPeriodencoding}
        )
    }
}

function Invoke-ConfigmgrApiComDayCqDamCoreProcessExifToolExtractMetadataProcess {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${processPeriodlabel},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${cqPerioddamPeriodenablePeriodsha1}
    )

    Process {
        'Calling method: ConfigmgrApi-ComDayCqDamCoreProcessExifToolExtractMetadataProcess' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComDayCqDamCoreProcessExifToolExtractMetadataProcess(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${processPeriodlabel},
            ${cqPerioddamPeriodenablePeriodsha1}
        )
    }
}

function Invoke-ConfigmgrApiComDayCqDamCoreProcessExtractMetadataProcess {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${processPeriodlabel},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${cqPerioddamPeriodenablePeriodsha1}
    )

    Process {
        'Calling method: ConfigmgrApi-ComDayCqDamCoreProcessExtractMetadataProcess' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComDayCqDamCoreProcessExtractMetadataProcess(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${processPeriodlabel},
            ${cqPerioddamPeriodenablePeriodsha1}
        )
    }
}

function Invoke-ConfigmgrApiComDayCqDamCoreProcessMetadataProcessorProcess {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${processPeriodlabel},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${cqPerioddamPeriodenablePeriodsha1},
        [Parameter(Position = 8, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${cqPerioddamPeriodmetadataPeriodxssprotectedPeriodproperties}
    )

    Process {
        'Calling method: ConfigmgrApi-ComDayCqDamCoreProcessMetadataProcessorProcess' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComDayCqDamCoreProcessMetadataProcessorProcess(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${processPeriodlabel},
            ${cqPerioddamPeriodenablePeriodsha1},
            ${cqPerioddamPeriodmetadataPeriodxssprotectedPeriodproperties}
        )
    }
}

function Invoke-ConfigmgrApiComDayCqDamHandlerFfmpegLocatorImpl {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${executablePeriodsearchpath}
    )

    Process {
        'Calling method: ConfigmgrApi-ComDayCqDamHandlerFfmpegLocatorImpl' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComDayCqDamHandlerFfmpegLocatorImpl(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${executablePeriodsearchpath}
        )
    }
}

function Invoke-ConfigmgrApiComDayCqDamHandlerGibsonFontmanagerImplFontManagerServiceImpl {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${eventPeriodfilter},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${fontmgrPeriodsystemPeriodfontPerioddir},
        [Parameter(Position = 8, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${fontmgrPeriodadobePeriodfontPerioddir},
        [Parameter(Position = 9, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${fontmgrPeriodcustomerPeriodfontPerioddir}
    )

    Process {
        'Calling method: ConfigmgrApi-ComDayCqDamHandlerGibsonFontmanagerImplFontManagerServiceImpl' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComDayCqDamHandlerGibsonFontmanagerImplFontManagerServiceImpl(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${eventPeriodfilter},
            ${fontmgrPeriodsystemPeriodfontPerioddir},
            ${fontmgrPeriodadobePeriodfontPerioddir},
            ${fontmgrPeriodcustomerPeriodfontPerioddir}
        )
    }
}

function Invoke-ConfigmgrApiComDayCqDamHandlerStandardPdfPdfHandler {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${rasterPeriodannotation}
    )

    Process {
        'Calling method: ConfigmgrApi-ComDayCqDamHandlerStandardPdfPdfHandler' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComDayCqDamHandlerStandardPdfPdfHandler(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${rasterPeriodannotation}
        )
    }
}

function Invoke-ConfigmgrApiComDayCqDamHandlerStandardPsPostScriptHandler {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${rasterPeriodannotation}
    )

    Process {
        'Calling method: ConfigmgrApi-ComDayCqDamHandlerStandardPsPostScriptHandler' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComDayCqDamHandlerStandardPsPostScriptHandler(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${rasterPeriodannotation}
        )
    }
}

function Invoke-ConfigmgrApiComDayCqDamHandlerStandardPsdPsdHandler {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${largeFileThreshold}
    )

    Process {
        'Calling method: ConfigmgrApi-ComDayCqDamHandlerStandardPsdPsdHandler' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComDayCqDamHandlerStandardPsdPsdHandler(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${largeFileThreshold}
        )
    }
}

function Invoke-ConfigmgrApiComDayCqDamIdsImplIDSJobProcessor {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${enablePeriodmultisession},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${idsPeriodccPeriodenable},
        [Parameter(Position = 8, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${enablePeriodretry},
        [Parameter(Position = 9, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${enablePeriodretryPeriodscripterror},
        [Parameter(Position = 10, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${externalizerPerioddomainPeriodcqhost},
        [Parameter(Position = 11, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${externalizerPerioddomainPeriodhttp}
    )

    Process {
        'Calling method: ConfigmgrApi-ComDayCqDamIdsImplIDSJobProcessor' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComDayCqDamIdsImplIDSJobProcessor(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${enablePeriodmultisession},
            ${idsPeriodccPeriodenable},
            ${enablePeriodretry},
            ${enablePeriodretryPeriodscripterror},
            ${externalizerPerioddomainPeriodcqhost},
            ${externalizerPerioddomainPeriodhttp}
        )
    }
}

function Invoke-ConfigmgrApiComDayCqDamIdsImplIDSPoolManagerImpl {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${maxPerioderrorsPeriodtoPeriodblacklist},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${retryPeriodintervalPeriodtoPeriodwhitelist},
        [Parameter(Position = 8, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${connectPeriodtimeout},
        [Parameter(Position = 9, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${socketPeriodtimeout},
        [Parameter(Position = 10, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${processPeriodlabel},
        [Parameter(Position = 11, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${connectionPeriodusePeriodmax}
    )

    Process {
        'Calling method: ConfigmgrApi-ComDayCqDamIdsImplIDSPoolManagerImpl' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComDayCqDamIdsImplIDSPoolManagerImpl(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${maxPerioderrorsPeriodtoPeriodblacklist},
            ${retryPeriodintervalPeriodtoPeriodwhitelist},
            ${connectPeriodtimeout},
            ${socketPeriodtimeout},
            ${processPeriodlabel},
            ${connectionPeriodusePeriodmax}
        )
    }
}

function Invoke-ConfigmgrApiComDayCqDamInddImplHandlerIndesignXMPHandler {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${processPeriodlabel},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${extractPeriodpages}
    )

    Process {
        'Calling method: ConfigmgrApi-ComDayCqDamInddImplHandlerIndesignXMPHandler' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComDayCqDamInddImplHandlerIndesignXMPHandler(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${processPeriodlabel},
            ${extractPeriodpages}
        )
    }
}

function Invoke-ConfigmgrApiComDayCqDamInddImplServletSnippetCreationServlet {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${snippetcreationPeriodmaxcollections}
    )

    Process {
        'Calling method: ConfigmgrApi-ComDayCqDamInddImplServletSnippetCreationServlet' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComDayCqDamInddImplServletSnippetCreationServlet(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${snippetcreationPeriodmaxcollections}
        )
    }
}

function Invoke-ConfigmgrApiComDayCqDamInddProcessINDDMediaExtractProcess {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${processPeriodlabel},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${cqPerioddamPeriodinddPeriodpagesPeriodregex},
        [Parameter(Position = 8, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${idsPeriodjobPerioddecoupled},
        [Parameter(Position = 9, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${idsPeriodjobPeriodworkflowPeriodmodel}
    )

    Process {
        'Calling method: ConfigmgrApi-ComDayCqDamInddProcessINDDMediaExtractProcess' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComDayCqDamInddProcessINDDMediaExtractProcess(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${processPeriodlabel},
            ${cqPerioddamPeriodinddPeriodpagesPeriodregex},
            ${idsPeriodjobPerioddecoupled},
            ${idsPeriodjobPeriodworkflowPeriodmodel}
        )
    }
}

function Invoke-ConfigmgrApiComDayCqDamPerformanceInternalAssetPerformanceDataHandlerImpl {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${batchPeriodcommitPeriodsize}
    )

    Process {
        'Calling method: ConfigmgrApi-ComDayCqDamPerformanceInternalAssetPerformanceDataHandlerImpl' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComDayCqDamPerformanceInternalAssetPerformanceDataHandlerImpl(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${batchPeriodcommitPeriodsize}
        )
    }
}

function Invoke-ConfigmgrApiComDayCqDamPerformanceInternalAssetPerformanceReportSyncJob {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${schedulerPeriodexpression}
    )

    Process {
        'Calling method: ConfigmgrApi-ComDayCqDamPerformanceInternalAssetPerformanceReportSyncJob' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComDayCqDamPerformanceInternalAssetPerformanceReportSyncJob(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${schedulerPeriodexpression}
        )
    }
}

function Invoke-ConfigmgrApiComDayCqDamPimImplSourcingUploadProcessProductAssetsUploadPro {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${deletePeriodzipPeriodfile}
    )

    Process {
        'Calling method: ConfigmgrApi-ComDayCqDamPimImplSourcingUploadProcessProductAssetsUploadPro' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComDayCqDamPimImplSourcingUploadProcessProductAssetsUploadPro(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${deletePeriodzipPeriodfile}
        )
    }
}

function Invoke-ConfigmgrApiComDayCqDamS7damCommonAnalyticsImplS7damDynamicMediaConfigEven {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${cqPerioddamPeriods7damPerioddynamicmediaconfigeventlistenerPeriodenabled}
    )

    Process {
        'Calling method: ConfigmgrApi-ComDayCqDamS7damCommonAnalyticsImplS7damDynamicMediaConfigEven' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComDayCqDamS7damCommonAnalyticsImplS7damDynamicMediaConfigEven(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${cqPerioddamPeriods7damPerioddynamicmediaconfigeventlistenerPeriodenabled}
        )
    }
}

function Invoke-ConfigmgrApiComDayCqDamS7damCommonAnalyticsImplSiteCatalystReportRunner {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${schedulerPeriodexpression},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${schedulerPeriodconcurrent}
    )

    Process {
        'Calling method: ConfigmgrApi-ComDayCqDamS7damCommonAnalyticsImplSiteCatalystReportRunner' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComDayCqDamS7damCommonAnalyticsImplSiteCatalystReportRunner(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${schedulerPeriodexpression},
            ${schedulerPeriodconcurrent}
        )
    }
}

function Invoke-ConfigmgrApiComDayCqDamS7damCommonPostServletsSetCreateHandler {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${slingPeriodpostPeriodoperation},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${slingPeriodservletPeriodmethods}
    )

    Process {
        'Calling method: ConfigmgrApi-ComDayCqDamS7damCommonPostServletsSetCreateHandler' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComDayCqDamS7damCommonPostServletsSetCreateHandler(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${slingPeriodpostPeriodoperation},
            ${slingPeriodservletPeriodmethods}
        )
    }
}

function Invoke-ConfigmgrApiComDayCqDamS7damCommonPostServletsSetModifyHandler {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${slingPeriodpostPeriodoperation},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${slingPeriodservletPeriodmethods}
    )

    Process {
        'Calling method: ConfigmgrApi-ComDayCqDamS7damCommonPostServletsSetModifyHandler' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComDayCqDamS7damCommonPostServletsSetModifyHandler(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${slingPeriodpostPeriodoperation},
            ${slingPeriodservletPeriodmethods}
        )
    }
}

function Invoke-ConfigmgrApiComDayCqDamS7damCommonProcessVideoThumbnailDownloadProcess {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${processPeriodlabel}
    )

    Process {
        'Calling method: ConfigmgrApi-ComDayCqDamS7damCommonProcessVideoThumbnailDownloadProcess' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComDayCqDamS7damCommonProcessVideoThumbnailDownloadProcess(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${processPeriodlabel}
        )
    }
}

function Invoke-ConfigmgrApiComDayCqDamS7damCommonS7damDamChangeEventListener {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${cqPerioddamPeriods7damPerioddamchangeeventlistenerPeriodenabled}
    )

    Process {
        'Calling method: ConfigmgrApi-ComDayCqDamS7damCommonS7damDamChangeEventListener' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComDayCqDamS7damCommonS7damDamChangeEventListener(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${cqPerioddamPeriods7damPerioddamchangeeventlistenerPeriodenabled}
        )
    }
}

function Invoke-ConfigmgrApiComDayCqDamS7damCommonServletsS7damProductInfoServlet {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${slingPeriodservletPeriodpaths},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${slingPeriodservletPeriodmethods}
    )

    Process {
        'Calling method: ConfigmgrApi-ComDayCqDamS7damCommonServletsS7damProductInfoServlet' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComDayCqDamS7damCommonServletsS7damProductInfoServlet(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${slingPeriodservletPeriodpaths},
            ${slingPeriodservletPeriodmethods}
        )
    }
}

function Invoke-ConfigmgrApiComDayCqDamS7damCommonVideoImplVideoProxyClientServiceImpl {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${cqPerioddamPeriods7damPeriodvideoproxyclientservicePeriodmultipartuploadPeriodminsizePeriodname},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${cqPerioddamPeriods7damPeriodvideoproxyclientservicePeriodmultipartuploadPeriodpartsizePeriodname},
        [Parameter(Position = 8, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${cqPerioddamPeriods7damPeriodvideoproxyclientservicePeriodmultipartuploadPeriodnumthreadPeriodname},
        [Parameter(Position = 9, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${cqPerioddamPeriods7damPeriodvideoproxyclientservicePeriodhttpPeriodreadtimeoutPeriodname},
        [Parameter(Position = 10, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${cqPerioddamPeriods7damPeriodvideoproxyclientservicePeriodhttpPeriodconnectiontimeoutPeriodname},
        [Parameter(Position = 11, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${cqPerioddamPeriods7damPeriodvideoproxyclientservicePeriodhttpPeriodmaxretrycountPeriodname},
        [Parameter(Position = 12, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${cqPerioddamPeriods7damPeriodvideoproxyclientservicePerioduploadprogressPeriodintervalPeriodname}
    )

    Process {
        'Calling method: ConfigmgrApi-ComDayCqDamS7damCommonVideoImplVideoProxyClientServiceImpl' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComDayCqDamS7damCommonVideoImplVideoProxyClientServiceImpl(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${cqPerioddamPeriods7damPeriodvideoproxyclientservicePeriodmultipartuploadPeriodminsizePeriodname},
            ${cqPerioddamPeriods7damPeriodvideoproxyclientservicePeriodmultipartuploadPeriodpartsizePeriodname},
            ${cqPerioddamPeriods7damPeriodvideoproxyclientservicePeriodmultipartuploadPeriodnumthreadPeriodname},
            ${cqPerioddamPeriods7damPeriodvideoproxyclientservicePeriodhttpPeriodreadtimeoutPeriodname},
            ${cqPerioddamPeriods7damPeriodvideoproxyclientservicePeriodhttpPeriodconnectiontimeoutPeriodname},
            ${cqPerioddamPeriods7damPeriodvideoproxyclientservicePeriodhttpPeriodmaxretrycountPeriodname},
            ${cqPerioddamPeriods7damPeriodvideoproxyclientservicePerioduploadprogressPeriodintervalPeriodname}
        )
    }
}

function Invoke-ConfigmgrApiComDayCqDamScene7ImplScene7APIClientImpl {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${cqPerioddamPeriodscene7PeriodapiclientPeriodrecordsperpagePeriodnofilterPeriodname},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${cqPerioddamPeriodscene7PeriodapiclientPeriodrecordsperpagePeriodwithfilterPeriodname}
    )

    Process {
        'Calling method: ConfigmgrApi-ComDayCqDamScene7ImplScene7APIClientImpl' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComDayCqDamScene7ImplScene7APIClientImpl(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${cqPerioddamPeriodscene7PeriodapiclientPeriodrecordsperpagePeriodnofilterPeriodname},
            ${cqPerioddamPeriodscene7PeriodapiclientPeriodrecordsperpagePeriodwithfilterPeriodname}
        )
    }
}

function Invoke-ConfigmgrApiComDayCqDamScene7ImplScene7AssetMimeTypeServiceImpl {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${cqPerioddamPeriodscene7PeriodassetmimetypeservicePeriodmapping}
    )

    Process {
        'Calling method: ConfigmgrApi-ComDayCqDamScene7ImplScene7AssetMimeTypeServiceImpl' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComDayCqDamScene7ImplScene7AssetMimeTypeServiceImpl(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${cqPerioddamPeriodscene7PeriodassetmimetypeservicePeriodmapping}
        )
    }
}

function Invoke-ConfigmgrApiComDayCqDamScene7ImplScene7ConfigurationEventListener {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${cqPerioddamPeriodscene7PeriodconfigurationeventlistenerPeriodenabled}
    )

    Process {
        'Calling method: ConfigmgrApi-ComDayCqDamScene7ImplScene7ConfigurationEventListener' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComDayCqDamScene7ImplScene7ConfigurationEventListener(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${cqPerioddamPeriodscene7PeriodconfigurationeventlistenerPeriodenabled}
        )
    }
}

function Invoke-ConfigmgrApiComDayCqDamScene7ImplScene7DamChangeEventListener {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${cqPerioddamPeriodscene7PerioddamchangeeventlistenerPeriodenabled},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${cqPerioddamPeriodscene7PerioddamchangeeventlistenerPeriodobservedPeriodpaths}
    )

    Process {
        'Calling method: ConfigmgrApi-ComDayCqDamScene7ImplScene7DamChangeEventListener' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComDayCqDamScene7ImplScene7DamChangeEventListener(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${cqPerioddamPeriodscene7PerioddamchangeeventlistenerPeriodenabled},
            ${cqPerioddamPeriodscene7PerioddamchangeeventlistenerPeriodobservedPeriodpaths}
        )
    }
}

function Invoke-ConfigmgrApiComDayCqDamScene7ImplScene7FlashTemplatesServiceImpl {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${scene7FlashTemplatesPeriodrti},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${scene7FlashTemplatesPeriodrsi},
        [Parameter(Position = 8, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${scene7FlashTemplatesPeriodrb},
        [Parameter(Position = 9, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${scene7FlashTemplatesPeriodrurl},
        [Parameter(Position = 10, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${scene7FlashTemplatePeriodurlFormatParameter}
    )

    Process {
        'Calling method: ConfigmgrApi-ComDayCqDamScene7ImplScene7FlashTemplatesServiceImpl' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComDayCqDamScene7ImplScene7FlashTemplatesServiceImpl(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${scene7FlashTemplatesPeriodrti},
            ${scene7FlashTemplatesPeriodrsi},
            ${scene7FlashTemplatesPeriodrb},
            ${scene7FlashTemplatesPeriodrurl},
            ${scene7FlashTemplatePeriodurlFormatParameter}
        )
    }
}

function Invoke-ConfigmgrApiComDayCqDamScene7ImplScene7UploadServiceImpl {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${cqPerioddamPeriodscene7PerioduploadservicePeriodactivejobtimeoutPeriodlabel},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${cqPerioddamPeriodscene7PerioduploadservicePeriodconnectionmaxperroutePeriodlabel}
    )

    Process {
        'Calling method: ConfigmgrApi-ComDayCqDamScene7ImplScene7UploadServiceImpl' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComDayCqDamScene7ImplScene7UploadServiceImpl(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${cqPerioddamPeriodscene7PerioduploadservicePeriodactivejobtimeoutPeriodlabel},
            ${cqPerioddamPeriodscene7PerioduploadservicePeriodconnectionmaxperroutePeriodlabel}
        )
    }
}

function Invoke-ConfigmgrApiComDayCqDamStockIntegrationImplCacheStockCacheConfigurationSer {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${getCacheExpirationUnit},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${getCacheExpirationValue}
    )

    Process {
        'Calling method: ConfigmgrApi-ComDayCqDamStockIntegrationImplCacheStockCacheConfigurationSer' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComDayCqDamStockIntegrationImplCacheStockCacheConfigurationSer(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${getCacheExpirationUnit},
            ${getCacheExpirationValue}
        )
    }
}

function Invoke-ConfigmgrApiComDayCqDamStockIntegrationImplConfigurationStockConfiguration {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${name},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${locale},
        [Parameter(Position = 8, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${imsConfig}
    )

    Process {
        'Calling method: ConfigmgrApi-ComDayCqDamStockIntegrationImplConfigurationStockConfiguration' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComDayCqDamStockIntegrationImplConfigurationStockConfiguration(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${name},
            ${locale},
            ${imsConfig}
        )
    }
}

function Invoke-ConfigmgrApiComDayCqDamVideoImplServletVideoTestServlet {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${enabled}
    )

    Process {
        'Calling method: ConfigmgrApi-ComDayCqDamVideoImplServletVideoTestServlet' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComDayCqDamVideoImplServletVideoTestServlet(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${enabled}
        )
    }
}

function Invoke-ConfigmgrApiComDayCqExtwidgetServletsImageSpriteServlet {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${maxWidth},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${maxHeight}
    )

    Process {
        'Calling method: ConfigmgrApi-ComDayCqExtwidgetServletsImageSpriteServlet' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComDayCqExtwidgetServletsImageSpriteServlet(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${maxWidth},
            ${maxHeight}
        )
    }
}

function Invoke-ConfigmgrApiComDayCqImageInternalFontFontHelper {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${fontpath},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${oversamplingFactor}
    )

    Process {
        'Calling method: ConfigmgrApi-ComDayCqImageInternalFontFontHelper' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComDayCqImageInternalFontFontHelper(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${fontpath},
            ${oversamplingFactor}
        )
    }
}

function Invoke-ConfigmgrApiComDayCqJcrclustersupportClusterStartLevelController {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${clusterPeriodlevelPeriodenable},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${clusterPeriodmasterPeriodlevel},
        [Parameter(Position = 8, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${clusterPeriodslavePeriodlevel}
    )

    Process {
        'Calling method: ConfigmgrApi-ComDayCqJcrclustersupportClusterStartLevelController' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComDayCqJcrclustersupportClusterStartLevelController(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${clusterPeriodlevelPeriodenable},
            ${clusterPeriodmasterPeriodlevel},
            ${clusterPeriodslavePeriodlevel}
        )
    }
}

function Invoke-ConfigmgrApiComDayCqMailerDefaultMailService {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${smtpPeriodhost},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${smtpPeriodport},
        [Parameter(Position = 8, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${smtpPerioduser},
        [Parameter(Position = 9, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${smtpPeriodpassword},
        [Parameter(Position = 10, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${fromPeriodaddress},
        [Parameter(Position = 11, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${smtpPeriodssl},
        [Parameter(Position = 12, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${smtpPeriodstarttls},
        [Parameter(Position = 13, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${debugPeriodemail}
    )

    Process {
        'Calling method: ConfigmgrApi-ComDayCqMailerDefaultMailService' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComDayCqMailerDefaultMailService(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${smtpPeriodhost},
            ${smtpPeriodport},
            ${smtpPerioduser},
            ${smtpPeriodpassword},
            ${fromPeriodaddress},
            ${smtpPeriodssl},
            ${smtpPeriodstarttls},
            ${debugPeriodemail}
        )
    }
}

function Invoke-ConfigmgrApiComDayCqMailerImplCqMailingService {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${maxPeriodrecipientPeriodcount}
    )

    Process {
        'Calling method: ConfigmgrApi-ComDayCqMailerImplCqMailingService' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComDayCqMailerImplCqMailingService(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${maxPeriodrecipientPeriodcount}
        )
    }
}

function Invoke-ConfigmgrApiComDayCqMailerImplEmailCqEmailTemplateFactory {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${mailerPeriodemailPeriodcharset}
    )

    Process {
        'Calling method: ConfigmgrApi-ComDayCqMailerImplEmailCqEmailTemplateFactory' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComDayCqMailerImplEmailCqEmailTemplateFactory(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${mailerPeriodemailPeriodcharset}
        )
    }
}

function Invoke-ConfigmgrApiComDayCqMailerImplEmailCqRetrieverTemplateFactory {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${mailerPeriodemailPeriodembed},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${mailerPeriodemailPeriodcharset},
        [Parameter(Position = 8, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${mailerPeriodemailPeriodretrieverUserID},
        [Parameter(Position = 9, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${mailerPeriodemailPeriodretrieverUserPWD}
    )

    Process {
        'Calling method: ConfigmgrApi-ComDayCqMailerImplEmailCqRetrieverTemplateFactory' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComDayCqMailerImplEmailCqRetrieverTemplateFactory(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${mailerPeriodemailPeriodembed},
            ${mailerPeriodemailPeriodcharset},
            ${mailerPeriodemailPeriodretrieverUserID},
            ${mailerPeriodemailPeriodretrieverUserPWD}
        )
    }
}

function Invoke-ConfigmgrApiComDayCqMcmCampaignImplIntegrationConfigImpl {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${aemPeriodmcmPeriodcampaignPeriodformConstraints},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${aemPeriodmcmPeriodcampaignPeriodpublicUrl},
        [Parameter(Position = 8, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${aemPeriodmcmPeriodcampaignPeriodrelaxedSSL}
    )

    Process {
        'Calling method: ConfigmgrApi-ComDayCqMcmCampaignImplIntegrationConfigImpl' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComDayCqMcmCampaignImplIntegrationConfigImpl(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${aemPeriodmcmPeriodcampaignPeriodformConstraints},
            ${aemPeriodmcmPeriodcampaignPeriodpublicUrl},
            ${aemPeriodmcmPeriodcampaignPeriodrelaxedSSL}
        )
    }
}

function Invoke-ConfigmgrApiComDayCqMcmCampaignImporterPersonalizedTextHandlerFactory {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${servicePeriodranking},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${tagpattern}
    )

    Process {
        'Calling method: ConfigmgrApi-ComDayCqMcmCampaignImporterPersonalizedTextHandlerFactory' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComDayCqMcmCampaignImporterPersonalizedTextHandlerFactory(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${servicePeriodranking},
            ${tagpattern}
        )
    }
}

function Invoke-ConfigmgrApiComDayCqMcmCoreNewsletterNewsletterEmailServiceImpl {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${fromPeriodaddress},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${senderPeriodhost},
        [Parameter(Position = 8, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${maxPeriodbouncePeriodcount}
    )

    Process {
        'Calling method: ConfigmgrApi-ComDayCqMcmCoreNewsletterNewsletterEmailServiceImpl' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComDayCqMcmCoreNewsletterNewsletterEmailServiceImpl(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${fromPeriodaddress},
            ${senderPeriodhost},
            ${maxPeriodbouncePeriodcount}
        )
    }
}

function Invoke-ConfigmgrApiComDayCqMcmImplMCMConfiguration {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${experiencePeriodindirection},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${touchpointPeriodindirection}
    )

    Process {
        'Calling method: ConfigmgrApi-ComDayCqMcmImplMCMConfiguration' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComDayCqMcmImplMCMConfiguration(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${experiencePeriodindirection},
            ${touchpointPeriodindirection}
        )
    }
}

function Invoke-ConfigmgrApiComDayCqMcmLandingpageParserTaghandlersCtaClickThroughComponen {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${servicePeriodranking},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${tagpattern},
        [Parameter(Position = 8, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${componentPeriodresourceType}
    )

    Process {
        'Calling method: ConfigmgrApi-ComDayCqMcmLandingpageParserTaghandlersCtaClickThroughComponen' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComDayCqMcmLandingpageParserTaghandlersCtaClickThroughComponen(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${servicePeriodranking},
            ${tagpattern},
            ${componentPeriodresourceType}
        )
    }
}

function Invoke-ConfigmgrApiComDayCqMcmLandingpageParserTaghandlersCtaGraphicalClickThroug {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${servicePeriodranking},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${tagpattern},
        [Parameter(Position = 8, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${componentPeriodresourceType}
    )

    Process {
        'Calling method: ConfigmgrApi-ComDayCqMcmLandingpageParserTaghandlersCtaGraphicalClickThroug' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComDayCqMcmLandingpageParserTaghandlersCtaGraphicalClickThroug(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${servicePeriodranking},
            ${tagpattern},
            ${componentPeriodresourceType}
        )
    }
}

function Invoke-ConfigmgrApiComDayCqMcmLandingpageParserTaghandlersCtaLeadFormCTAComponent {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${servicePeriodranking},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${tagpattern}
    )

    Process {
        'Calling method: ConfigmgrApi-ComDayCqMcmLandingpageParserTaghandlersCtaLeadFormCTAComponent' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComDayCqMcmLandingpageParserTaghandlersCtaLeadFormCTAComponent(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${servicePeriodranking},
            ${tagpattern}
        )
    }
}

function Invoke-ConfigmgrApiComDayCqMcmLandingpageParserTaghandlersMboxMBoxExperienceTagHa {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${servicePeriodranking},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${tagpattern}
    )

    Process {
        'Calling method: ConfigmgrApi-ComDayCqMcmLandingpageParserTaghandlersMboxMBoxExperienceTagHa' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComDayCqMcmLandingpageParserTaghandlersMboxMBoxExperienceTagHa(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${servicePeriodranking},
            ${tagpattern}
        )
    }
}

function Invoke-ConfigmgrApiComDayCqMcmLandingpageParserTaghandlersMboxTargetComponentTagH {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${servicePeriodranking},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${tagpattern},
        [Parameter(Position = 8, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${componentPeriodresourceType}
    )

    Process {
        'Calling method: ConfigmgrApi-ComDayCqMcmLandingpageParserTaghandlersMboxTargetComponentTagH' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComDayCqMcmLandingpageParserTaghandlersMboxTargetComponentTagH(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${servicePeriodranking},
            ${tagpattern},
            ${componentPeriodresourceType}
        )
    }
}

function Invoke-ConfigmgrApiComDayCqNotificationImplNotificationServiceImpl {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${eventPeriodfilter}
    )

    Process {
        'Calling method: ConfigmgrApi-ComDayCqNotificationImplNotificationServiceImpl' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComDayCqNotificationImplNotificationServiceImpl(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${eventPeriodfilter}
        )
    }
}

function Invoke-ConfigmgrApiComDayCqPersonalizationImplServletsTargetingConfigurationServlet {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${forcelocation}
    )

    Process {
        'Calling method: ConfigmgrApi-ComDayCqPersonalizationImplServletsTargetingConfigurationServlet' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComDayCqPersonalizationImplServletsTargetingConfigurationServlet(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${forcelocation}
        )
    }
}

function Invoke-ConfigmgrApiComDayCqPollingImporterImplManagedPollConfigImpl {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${id},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${enabled},
        [Parameter(Position = 8, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${reference},
        [Parameter(Position = 9, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${interval},
        [Parameter(Position = 10, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${expression},
        [Parameter(Position = 11, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${source},
        [Parameter(Position = 12, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${target},
        [Parameter(Position = 13, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${login},
        [Parameter(Position = 14, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${password}
    )

    Process {
        'Calling method: ConfigmgrApi-ComDayCqPollingImporterImplManagedPollConfigImpl' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComDayCqPollingImporterImplManagedPollConfigImpl(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${id},
            ${enabled},
            ${reference},
            ${interval},
            ${expression},
            ${source},
            ${target},
            ${login},
            ${password}
        )
    }
}

function Invoke-ConfigmgrApiComDayCqPollingImporterImplManagedPollingImporterImpl {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${importerPerioduser}
    )

    Process {
        'Calling method: ConfigmgrApi-ComDayCqPollingImporterImplManagedPollingImporterImpl' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComDayCqPollingImporterImplManagedPollingImporterImpl(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${importerPerioduser}
        )
    }
}

function Invoke-ConfigmgrApiComDayCqPollingImporterImplPollingImporterImpl {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${importerPeriodminPeriodinterval},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${importerPerioduser},
        [Parameter(Position = 8, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${excludePeriodpaths},
        [Parameter(Position = 9, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${includePeriodpaths}
    )

    Process {
        'Calling method: ConfigmgrApi-ComDayCqPollingImporterImplPollingImporterImpl' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComDayCqPollingImporterImplPollingImporterImpl(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${importerPeriodminPeriodinterval},
            ${importerPerioduser},
            ${excludePeriodpaths},
            ${includePeriodpaths}
        )
    }
}

function Invoke-ConfigmgrApiComDayCqReplicationAuditReplicationEventListener {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${servicePeriodranking}
    )

    Process {
        'Calling method: ConfigmgrApi-ComDayCqReplicationAuditReplicationEventListener' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComDayCqReplicationAuditReplicationEventListener(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${servicePeriodranking}
        )
    }
}

function Invoke-ConfigmgrApiComDayCqReplicationContentStaticContentBuilder {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${host},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${port}
    )

    Process {
        'Calling method: ConfigmgrApi-ComDayCqReplicationContentStaticContentBuilder' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComDayCqReplicationContentStaticContentBuilder(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${host},
            ${port}
        )
    }
}

function Invoke-ConfigmgrApiComDayCqReplicationImplAgentManagerImpl {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${jobPeriodtopics},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${serviceUserPeriodtarget},
        [Parameter(Position = 8, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${agentProviderPeriodtarget}
    )

    Process {
        'Calling method: ConfigmgrApi-ComDayCqReplicationImplAgentManagerImpl' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComDayCqReplicationImplAgentManagerImpl(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${jobPeriodtopics},
            ${serviceUserPeriodtarget},
            ${agentProviderPeriodtarget}
        )
    }
}

function Invoke-ConfigmgrApiComDayCqReplicationImplContentDurboBinaryLessContentBuilder {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${binaryPeriodthreshold}
    )

    Process {
        'Calling method: ConfigmgrApi-ComDayCqReplicationImplContentDurboBinaryLessContentBuilder' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComDayCqReplicationImplContentDurboBinaryLessContentBuilder(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${binaryPeriodthreshold}
        )
    }
}

function Invoke-ConfigmgrApiComDayCqReplicationImplContentDurboDurboImportConfigurationProv {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${preservePeriodhierarchyPeriodnodes},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${ignorePeriodversioning},
        [Parameter(Position = 8, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${importPeriodacl},
        [Parameter(Position = 9, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${savePeriodthreshold},
        [Parameter(Position = 10, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${preservePerioduserPeriodpaths},
        [Parameter(Position = 11, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${preservePerioduuid},
        [Parameter(Position = 12, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${preservePerioduuidPeriodnodetypes},
        [Parameter(Position = 13, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${preservePerioduuidPeriodsubtrees},
        [Parameter(Position = 14, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${autoPeriodcommit}
    )

    Process {
        'Calling method: ConfigmgrApi-ComDayCqReplicationImplContentDurboDurboImportConfigurationProv' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComDayCqReplicationImplContentDurboDurboImportConfigurationProv(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${preservePeriodhierarchyPeriodnodes},
            ${ignorePeriodversioning},
            ${importPeriodacl},
            ${savePeriodthreshold},
            ${preservePerioduserPeriodpaths},
            ${preservePerioduuid},
            ${preservePerioduuidPeriodnodetypes},
            ${preservePerioduuidPeriodsubtrees},
            ${autoPeriodcommit}
        )
    }
}

function Invoke-ConfigmgrApiComDayCqReplicationImplReplicationContentFactoryProviderImpl {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${replicationPeriodcontentPerioduseFileStorage},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${replicationPeriodcontentPeriodmaxCommitAttempts}
    )

    Process {
        'Calling method: ConfigmgrApi-ComDayCqReplicationImplReplicationContentFactoryProviderImpl' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComDayCqReplicationImplReplicationContentFactoryProviderImpl(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${replicationPeriodcontentPerioduseFileStorage},
            ${replicationPeriodcontentPeriodmaxCommitAttempts}
        )
    }
}

function Invoke-ConfigmgrApiComDayCqReplicationImplReplicationReceiverImpl {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${receiverPeriodtmpfilePeriodthreshold},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${receiverPeriodpackagesPeriodusePeriodinstall}
    )

    Process {
        'Calling method: ConfigmgrApi-ComDayCqReplicationImplReplicationReceiverImpl' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComDayCqReplicationImplReplicationReceiverImpl(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${receiverPeriodtmpfilePeriodthreshold},
            ${receiverPeriodpackagesPeriodusePeriodinstall}
        )
    }
}

function Invoke-ConfigmgrApiComDayCqReplicationImplReplicatorImpl {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${distributeEvents}
    )

    Process {
        'Calling method: ConfigmgrApi-ComDayCqReplicationImplReplicatorImpl' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComDayCqReplicationImplReplicatorImpl(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${distributeEvents}
        )
    }
}

function Invoke-ConfigmgrApiComDayCqReplicationImplReverseReplicator {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${schedulerPeriodperiod}
    )

    Process {
        'Calling method: ConfigmgrApi-ComDayCqReplicationImplReverseReplicator' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComDayCqReplicationImplReverseReplicator(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${schedulerPeriodperiod}
        )
    }
}

function Invoke-ConfigmgrApiComDayCqReplicationImplTransportBinaryLessTransportHandler {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${disabledPeriodcipherPeriodsuites},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${enabledPeriodcipherPeriodsuites}
    )

    Process {
        'Calling method: ConfigmgrApi-ComDayCqReplicationImplTransportBinaryLessTransportHandler' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComDayCqReplicationImplTransportBinaryLessTransportHandler(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${disabledPeriodcipherPeriodsuites},
            ${enabledPeriodcipherPeriodsuites}
        )
    }
}

function Invoke-ConfigmgrApiComDayCqReplicationImplTransportHttp {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${disabledPeriodcipherPeriodsuites},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${enabledPeriodcipherPeriodsuites}
    )

    Process {
        'Calling method: ConfigmgrApi-ComDayCqReplicationImplTransportHttp' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComDayCqReplicationImplTransportHttp(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${disabledPeriodcipherPeriodsuites},
            ${enabledPeriodcipherPeriodsuites}
        )
    }
}

function Invoke-ConfigmgrApiComDayCqReportingImplCacheCacheImpl {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${repcachePeriodenable},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${repcachePeriodttl},
        [Parameter(Position = 8, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${repcachePeriodmax}
    )

    Process {
        'Calling method: ConfigmgrApi-ComDayCqReportingImplCacheCacheImpl' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComDayCqReportingImplCacheCacheImpl(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${repcachePeriodenable},
            ${repcachePeriodttl},
            ${repcachePeriodmax}
        )
    }
}

function Invoke-ConfigmgrApiComDayCqReportingImplConfigServiceImpl {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${repconfPeriodtimezone},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${repconfPeriodlocale},
        [Parameter(Position = 8, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${repconfPeriodsnapshots},
        [Parameter(Position = 9, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${repconfPeriodrepdir},
        [Parameter(Position = 10, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${repconfPeriodhourofday},
        [Parameter(Position = 11, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${repconfPeriodminofhour},
        [Parameter(Position = 12, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${repconfPeriodmaxrows},
        [Parameter(Position = 13, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${repconfPeriodfakedata},
        [Parameter(Position = 14, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${repconfPeriodsnapshotuser},
        [Parameter(Position = 15, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${repconfPeriodenforcesnapshotuser}
    )

    Process {
        'Calling method: ConfigmgrApi-ComDayCqReportingImplConfigServiceImpl' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComDayCqReportingImplConfigServiceImpl(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${repconfPeriodtimezone},
            ${repconfPeriodlocale},
            ${repconfPeriodsnapshots},
            ${repconfPeriodrepdir},
            ${repconfPeriodhourofday},
            ${repconfPeriodminofhour},
            ${repconfPeriodmaxrows},
            ${repconfPeriodfakedata},
            ${repconfPeriodsnapshotuser},
            ${repconfPeriodenforcesnapshotuser}
        )
    }
}

function Invoke-ConfigmgrApiComDayCqReportingImplRLogAnalyzer {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${requestPeriodlogPeriodoutput}
    )

    Process {
        'Calling method: ConfigmgrApi-ComDayCqReportingImplRLogAnalyzer' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComDayCqReportingImplRLogAnalyzer(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${requestPeriodlogPeriodoutput}
        )
    }
}

function Invoke-ConfigmgrApiComDayCqRewriterLinkcheckerImplLinkCheckerImpl {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${schedulerPeriodperiod},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${schedulerPeriodconcurrent},
        [Parameter(Position = 8, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${servicePeriodbadLinkToleranceInterval},
        [Parameter(Position = 9, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${servicePeriodcheckOverridePatterns},
        [Parameter(Position = 10, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${servicePeriodcacheBrokenInternalLinks},
        [Parameter(Position = 11, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${servicePeriodspecialLinkPrefix},
        [Parameter(Position = 12, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${servicePeriodspecialLinkPatterns}
    )

    Process {
        'Calling method: ConfigmgrApi-ComDayCqRewriterLinkcheckerImplLinkCheckerImpl' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComDayCqRewriterLinkcheckerImplLinkCheckerImpl(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${schedulerPeriodperiod},
            ${schedulerPeriodconcurrent},
            ${servicePeriodbadLinkToleranceInterval},
            ${servicePeriodcheckOverridePatterns},
            ${servicePeriodcacheBrokenInternalLinks},
            ${servicePeriodspecialLinkPrefix},
            ${servicePeriodspecialLinkPatterns}
        )
    }
}

function Invoke-ConfigmgrApiComDayCqRewriterLinkcheckerImplLinkCheckerTask {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${schedulerPeriodperiod},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${schedulerPeriodconcurrent},
        [Parameter(Position = 8, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${goodLinkTestInterval},
        [Parameter(Position = 9, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${badLinkTestInterval},
        [Parameter(Position = 10, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${linkUnusedInterval},
        [Parameter(Position = 11, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${connectionPeriodtimeout}
    )

    Process {
        'Calling method: ConfigmgrApi-ComDayCqRewriterLinkcheckerImplLinkCheckerTask' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComDayCqRewriterLinkcheckerImplLinkCheckerTask(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${schedulerPeriodperiod},
            ${schedulerPeriodconcurrent},
            ${goodLinkTestInterval},
            ${badLinkTestInterval},
            ${linkUnusedInterval},
            ${connectionPeriodtimeout}
        )
    }
}

function Invoke-ConfigmgrApiComDayCqRewriterLinkcheckerImplLinkCheckerTransformerFactory {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${linkcheckertransformerPerioddisableRewriting},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${linkcheckertransformerPerioddisableChecking},
        [Parameter(Position = 8, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${linkcheckertransformerPeriodmapCacheSize},
        [Parameter(Position = 9, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${linkcheckertransformerPeriodstrictExtensionCheck},
        [Parameter(Position = 10, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${linkcheckertransformerPeriodstripHtmltExtension},
        [Parameter(Position = 11, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${linkcheckertransformerPeriodrewriteElements},
        [Parameter(Position = 12, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${linkcheckertransformerPeriodstripExtensionPathBlacklist}
    )

    Process {
        'Calling method: ConfigmgrApi-ComDayCqRewriterLinkcheckerImplLinkCheckerTransformerFactory' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComDayCqRewriterLinkcheckerImplLinkCheckerTransformerFactory(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${linkcheckertransformerPerioddisableRewriting},
            ${linkcheckertransformerPerioddisableChecking},
            ${linkcheckertransformerPeriodmapCacheSize},
            ${linkcheckertransformerPeriodstrictExtensionCheck},
            ${linkcheckertransformerPeriodstripHtmltExtension},
            ${linkcheckertransformerPeriodrewriteElements},
            ${linkcheckertransformerPeriodstripExtensionPathBlacklist}
        )
    }
}

function Invoke-ConfigmgrApiComDayCqRewriterLinkcheckerImplLinkInfoStorageImpl {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${servicePeriodmaxLinksPerHost},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${servicePeriodsaveExternalLinkReferences}
    )

    Process {
        'Calling method: ConfigmgrApi-ComDayCqRewriterLinkcheckerImplLinkInfoStorageImpl' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComDayCqRewriterLinkcheckerImplLinkInfoStorageImpl(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${servicePeriodmaxLinksPerHost},
            ${servicePeriodsaveExternalLinkReferences}
        )
    }
}

function Invoke-ConfigmgrApiComDayCqRewriterProcessorImplHtmlParserFactory {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${htmlparserPeriodprocessTags},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${htmlparserPeriodpreserveCamelCase}
    )

    Process {
        'Calling method: ConfigmgrApi-ComDayCqRewriterProcessorImplHtmlParserFactory' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComDayCqRewriterProcessorImplHtmlParserFactory(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${htmlparserPeriodprocessTags},
            ${htmlparserPeriodpreserveCamelCase}
        )
    }
}

function Invoke-ConfigmgrApiComDayCqSearchImplBuilderQueryBuilderImpl {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${excerptPeriodproperties},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${cachePeriodmaxPeriodentries},
        [Parameter(Position = 8, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${cachePeriodentryPeriodlifetime},
        [Parameter(Position = 9, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${xpathPeriodunion}
    )

    Process {
        'Calling method: ConfigmgrApi-ComDayCqSearchImplBuilderQueryBuilderImpl' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComDayCqSearchImplBuilderQueryBuilderImpl(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${excerptPeriodproperties},
            ${cachePeriodmaxPeriodentries},
            ${cachePeriodentryPeriodlifetime},
            ${xpathPeriodunion}
        )
    }
}

function Invoke-ConfigmgrApiComDayCqSearchSuggestImplSuggestionIndexManagerImpl {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${pathBuilderPeriodtarget},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${suggestPeriodbasepath}
    )

    Process {
        'Calling method: ConfigmgrApi-ComDayCqSearchSuggestImplSuggestionIndexManagerImpl' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComDayCqSearchSuggestImplSuggestionIndexManagerImpl(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${pathBuilderPeriodtarget},
            ${suggestPeriodbasepath}
        )
    }
}

function Invoke-ConfigmgrApiComDayCqSearchpromoteImplPublishSearchPromoteConfigHandler {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${cqPeriodsearchpromotePeriodconfighandlerPeriodenabled}
    )

    Process {
        'Calling method: ConfigmgrApi-ComDayCqSearchpromoteImplPublishSearchPromoteConfigHandler' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComDayCqSearchpromoteImplPublishSearchPromoteConfigHandler(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${cqPeriodsearchpromotePeriodconfighandlerPeriodenabled}
        )
    }
}

function Invoke-ConfigmgrApiComDayCqSearchpromoteImplSearchPromoteServiceImpl {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${cqPeriodsearchpromotePeriodconfigurationPeriodserverPerioduri},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${cqPeriodsearchpromotePeriodconfigurationPeriodenvironment},
        [Parameter(Position = 8, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${connectionPeriodtimeout},
        [Parameter(Position = 9, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${socketPeriodtimeout}
    )

    Process {
        'Calling method: ConfigmgrApi-ComDayCqSearchpromoteImplSearchPromoteServiceImpl' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComDayCqSearchpromoteImplSearchPromoteServiceImpl(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${cqPeriodsearchpromotePeriodconfigurationPeriodserverPerioduri},
            ${cqPeriodsearchpromotePeriodconfigurationPeriodenvironment},
            ${connectionPeriodtimeout},
            ${socketPeriodtimeout}
        )
    }
}

function Invoke-ConfigmgrApiComDayCqSecurityACLSetup {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${cqPeriodaclsetupPeriodrules}
    )

    Process {
        'Calling method: ConfigmgrApi-ComDayCqSecurityACLSetup' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComDayCqSecurityACLSetup(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${cqPeriodaclsetupPeriodrules}
        )
    }
}

function Invoke-ConfigmgrApiComDayCqStatisticsImplStatisticsServiceImpl {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${schedulerPeriodperiod},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${schedulerPeriodconcurrent},
        [Parameter(Position = 8, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${path},
        [Parameter(Position = 9, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${workspace},
        [Parameter(Position = 10, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${keywordsPath},
        [Parameter(Position = 11, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${asyncEntries}
    )

    Process {
        'Calling method: ConfigmgrApi-ComDayCqStatisticsImplStatisticsServiceImpl' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComDayCqStatisticsImplStatisticsServiceImpl(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${schedulerPeriodperiod},
            ${schedulerPeriodconcurrent},
            ${path},
            ${workspace},
            ${keywordsPath},
            ${asyncEntries}
        )
    }
}

function Invoke-ConfigmgrApiComDayCqTaggingImplJcrTagManagerFactoryImpl {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${validationPeriodenabled}
    )

    Process {
        'Calling method: ConfigmgrApi-ComDayCqTaggingImplJcrTagManagerFactoryImpl' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComDayCqTaggingImplJcrTagManagerFactoryImpl(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${validationPeriodenabled}
        )
    }
}

function Invoke-ConfigmgrApiComDayCqTaggingImplSearchTagPredicateEvaluator {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${ignorePath}
    )

    Process {
        'Calling method: ConfigmgrApi-ComDayCqTaggingImplSearchTagPredicateEvaluator' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComDayCqTaggingImplSearchTagPredicateEvaluator(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${ignorePath}
        )
    }
}

function Invoke-ConfigmgrApiComDayCqTaggingImplTagGarbageCollector {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${schedulerPeriodexpression}
    )

    Process {
        'Calling method: ConfigmgrApi-ComDayCqTaggingImplTagGarbageCollector' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComDayCqTaggingImplTagGarbageCollector(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${schedulerPeriodexpression}
        )
    }
}

function Invoke-ConfigmgrApiComDayCqWcmContentsyncImplHandlerPagesUpdateHandler {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${cqPeriodpagesupdatehandlerPeriodimageresourcetypes}
    )

    Process {
        'Calling method: ConfigmgrApi-ComDayCqWcmContentsyncImplHandlerPagesUpdateHandler' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComDayCqWcmContentsyncImplHandlerPagesUpdateHandler(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${cqPeriodpagesupdatehandlerPeriodimageresourcetypes}
        )
    }
}

function Invoke-ConfigmgrApiComDayCqWcmContentsyncImplRewriterPathRewriterTransformerFactor {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${cqPeriodcontentsyncPeriodpathrewritertransformerPeriodmappingPeriodlinks},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${cqPeriodcontentsyncPeriodpathrewritertransformerPeriodmappingPeriodclientlibs},
        [Parameter(Position = 8, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${cqPeriodcontentsyncPeriodpathrewritertransformerPeriodmappingPeriodimages},
        [Parameter(Position = 9, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${cqPeriodcontentsyncPeriodpathrewritertransformerPeriodattributePeriodpattern},
        [Parameter(Position = 10, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${cqPeriodcontentsyncPeriodpathrewritertransformerPeriodclientlibraryPeriodpattern},
        [Parameter(Position = 11, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${cqPeriodcontentsyncPeriodpathrewritertransformerPeriodclientlibraryPeriodreplace}
    )

    Process {
        'Calling method: ConfigmgrApi-ComDayCqWcmContentsyncImplRewriterPathRewriterTransformerFactor' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComDayCqWcmContentsyncImplRewriterPathRewriterTransformerFactor(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${cqPeriodcontentsyncPeriodpathrewritertransformerPeriodmappingPeriodlinks},
            ${cqPeriodcontentsyncPeriodpathrewritertransformerPeriodmappingPeriodclientlibs},
            ${cqPeriodcontentsyncPeriodpathrewritertransformerPeriodmappingPeriodimages},
            ${cqPeriodcontentsyncPeriodpathrewritertransformerPeriodattributePeriodpattern},
            ${cqPeriodcontentsyncPeriodpathrewritertransformerPeriodclientlibraryPeriodpattern},
            ${cqPeriodcontentsyncPeriodpathrewritertransformerPeriodclientlibraryPeriodreplace}
        )
    }
}

function Invoke-ConfigmgrApiComDayCqWcmCoreImplAuthoringUIModeServiceImpl {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${authoringUIModeServicePerioddefault}
    )

    Process {
        'Calling method: ConfigmgrApi-ComDayCqWcmCoreImplAuthoringUIModeServiceImpl' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComDayCqWcmCoreImplAuthoringUIModeServiceImpl(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${authoringUIModeServicePerioddefault}
        )
    }
}

function Invoke-ConfigmgrApiComDayCqWcmCoreImplCommandsWCMCommandServlet {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${wcmcommandservletPerioddeleteWhitelist}
    )

    Process {
        'Calling method: ConfigmgrApi-ComDayCqWcmCoreImplCommandsWCMCommandServlet' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComDayCqWcmCoreImplCommandsWCMCommandServlet(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${wcmcommandservletPerioddeleteWhitelist}
        )
    }
}

function Invoke-ConfigmgrApiComDayCqWcmCoreImplDevicedetectionDeviceIdentificationModeImpl {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${dimPerioddefaultPeriodmode},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${dimPeriodappcachePeriodenabled}
    )

    Process {
        'Calling method: ConfigmgrApi-ComDayCqWcmCoreImplDevicedetectionDeviceIdentificationModeImpl' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComDayCqWcmCoreImplDevicedetectionDeviceIdentificationModeImpl(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${dimPerioddefaultPeriodmode},
            ${dimPeriodappcachePeriodenabled}
        )
    }
}

function Invoke-ConfigmgrApiComDayCqWcmCoreImplEventPageEventAuditListener {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${configured}
    )

    Process {
        'Calling method: ConfigmgrApi-ComDayCqWcmCoreImplEventPageEventAuditListener' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComDayCqWcmCoreImplEventPageEventAuditListener(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${configured}
        )
    }
}

function Invoke-ConfigmgrApiComDayCqWcmCoreImplEventPagePostProcessor {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${paths}
    )

    Process {
        'Calling method: ConfigmgrApi-ComDayCqWcmCoreImplEventPagePostProcessor' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComDayCqWcmCoreImplEventPagePostProcessor(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${paths}
        )
    }
}

function Invoke-ConfigmgrApiComDayCqWcmCoreImplEventRepositoryChangeEventListener {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${paths},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${excludedPaths}
    )

    Process {
        'Calling method: ConfigmgrApi-ComDayCqWcmCoreImplEventRepositoryChangeEventListener' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComDayCqWcmCoreImplEventRepositoryChangeEventListener(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${paths},
            ${excludedPaths}
        )
    }
}

function Invoke-ConfigmgrApiComDayCqWcmCoreImplEventTemplatePostProcessor {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${paths}
    )

    Process {
        'Calling method: ConfigmgrApi-ComDayCqWcmCoreImplEventTemplatePostProcessor' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComDayCqWcmCoreImplEventTemplatePostProcessor(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${paths}
        )
    }
}

function Invoke-ConfigmgrApiComDayCqWcmCoreImplLanguageManagerImpl {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${langmgrPeriodlistPeriodpath},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${langmgrPeriodcountryPerioddefault}
    )

    Process {
        'Calling method: ConfigmgrApi-ComDayCqWcmCoreImplLanguageManagerImpl' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComDayCqWcmCoreImplLanguageManagerImpl(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${langmgrPeriodlistPeriodpath},
            ${langmgrPeriodcountryPerioddefault}
        )
    }
}

function Invoke-ConfigmgrApiComDayCqWcmCoreImplLinkCheckerConfigurationFactoryImpl {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${linkPeriodexpiredPeriodprefix},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${linkPeriodexpiredPeriodremove},
        [Parameter(Position = 8, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${linkPeriodexpiredPeriodsuffix},
        [Parameter(Position = 9, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${linkPeriodinvalidPeriodprefix},
        [Parameter(Position = 10, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${linkPeriodinvalidPeriodremove},
        [Parameter(Position = 11, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${linkPeriodinvalidPeriodsuffix},
        [Parameter(Position = 12, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${linkPeriodpredatedPeriodprefix},
        [Parameter(Position = 13, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${linkPeriodpredatedPeriodremove},
        [Parameter(Position = 14, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${linkPeriodpredatedPeriodsuffix},
        [Parameter(Position = 15, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${linkPeriodwcmmodes}
    )

    Process {
        'Calling method: ConfigmgrApi-ComDayCqWcmCoreImplLinkCheckerConfigurationFactoryImpl' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComDayCqWcmCoreImplLinkCheckerConfigurationFactoryImpl(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${linkPeriodexpiredPeriodprefix},
            ${linkPeriodexpiredPeriodremove},
            ${linkPeriodexpiredPeriodsuffix},
            ${linkPeriodinvalidPeriodprefix},
            ${linkPeriodinvalidPeriodremove},
            ${linkPeriodinvalidPeriodsuffix},
            ${linkPeriodpredatedPeriodprefix},
            ${linkPeriodpredatedPeriodremove},
            ${linkPeriodpredatedPeriodsuffix},
            ${linkPeriodwcmmodes}
        )
    }
}

function Invoke-ConfigmgrApiComDayCqWcmCoreImplPagePageInfoAggregatorImpl {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${pagePeriodinfoPeriodproviderPeriodpropertyPeriodregexPerioddefault},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${pagePeriodinfoPeriodproviderPeriodpropertyPeriodname}
    )

    Process {
        'Calling method: ConfigmgrApi-ComDayCqWcmCoreImplPagePageInfoAggregatorImpl' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComDayCqWcmCoreImplPagePageInfoAggregatorImpl(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${pagePeriodinfoPeriodproviderPeriodpropertyPeriodregexPerioddefault},
            ${pagePeriodinfoPeriodproviderPeriodpropertyPeriodname}
        )
    }
}

function Invoke-ConfigmgrApiComDayCqWcmCoreImplPagePageManagerFactoryImpl {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${illegalCharMapping},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${pageSubTreeActivationCheck}
    )

    Process {
        'Calling method: ConfigmgrApi-ComDayCqWcmCoreImplPagePageManagerFactoryImpl' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComDayCqWcmCoreImplPagePageManagerFactoryImpl(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${illegalCharMapping},
            ${pageSubTreeActivationCheck}
        )
    }
}

function Invoke-ConfigmgrApiComDayCqWcmCoreImplReferencesContentContentReferenceConfig {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${contentReferenceConfigPeriodresourceTypes}
    )

    Process {
        'Calling method: ConfigmgrApi-ComDayCqWcmCoreImplReferencesContentContentReferenceConfig' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComDayCqWcmCoreImplReferencesContentContentReferenceConfig(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${contentReferenceConfigPeriodresourceTypes}
        )
    }
}

function Invoke-ConfigmgrApiComDayCqWcmCoreImplServletsContentfinderAssetViewHandler {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${damPeriodshowexpired},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${damPeriodshowhidden},
        [Parameter(Position = 8, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${tagTitleSearch},
        [Parameter(Position = 9, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${guessTotal},
        [Parameter(Position = 10, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${damPeriodexpiryProperty}
    )

    Process {
        'Calling method: ConfigmgrApi-ComDayCqWcmCoreImplServletsContentfinderAssetViewHandler' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComDayCqWcmCoreImplServletsContentfinderAssetViewHandler(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${damPeriodshowexpired},
            ${damPeriodshowhidden},
            ${tagTitleSearch},
            ${guessTotal},
            ${damPeriodexpiryProperty}
        )
    }
}

function Invoke-ConfigmgrApiComDayCqWcmCoreImplServletsContentfinderConnectorConnectorVie {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${itemPeriodresourcePeriodtypes}
    )

    Process {
        'Calling method: ConfigmgrApi-ComDayCqWcmCoreImplServletsContentfinderConnectorConnectorVie' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComDayCqWcmCoreImplServletsContentfinderConnectorConnectorVie(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${itemPeriodresourcePeriodtypes}
        )
    }
}

function Invoke-ConfigmgrApiComDayCqWcmCoreImplServletsContentfinderPageViewHandler {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${guessTotal},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${tagTitleSearch}
    )

    Process {
        'Calling method: ConfigmgrApi-ComDayCqWcmCoreImplServletsContentfinderPageViewHandler' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComDayCqWcmCoreImplServletsContentfinderPageViewHandler(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${guessTotal},
            ${tagTitleSearch}
        )
    }
}

function Invoke-ConfigmgrApiComDayCqWcmCoreImplServletsFindReplaceServlet {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${scope}
    )

    Process {
        'Calling method: ConfigmgrApi-ComDayCqWcmCoreImplServletsFindReplaceServlet' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComDayCqWcmCoreImplServletsFindReplaceServlet(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${scope}
        )
    }
}

function Invoke-ConfigmgrApiComDayCqWcmCoreImplServletsReferenceSearchServlet {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${referencesearchservletPeriodmaxReferencesPerPage},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${referencesearchservletPeriodmaxPages}
    )

    Process {
        'Calling method: ConfigmgrApi-ComDayCqWcmCoreImplServletsReferenceSearchServlet' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComDayCqWcmCoreImplServletsReferenceSearchServlet(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${referencesearchservletPeriodmaxReferencesPerPage},
            ${referencesearchservletPeriodmaxPages}
        )
    }
}

function Invoke-ConfigmgrApiComDayCqWcmCoreImplServletsThumbnailServlet {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${workspace},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${dimensions}
    )

    Process {
        'Calling method: ConfigmgrApi-ComDayCqWcmCoreImplServletsThumbnailServlet' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComDayCqWcmCoreImplServletsThumbnailServlet(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${workspace},
            ${dimensions}
        )
    }
}

function Invoke-ConfigmgrApiComDayCqWcmCoreImplUtilsDefaultPageNameValidator {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${nonValidChars}
    )

    Process {
        'Calling method: ConfigmgrApi-ComDayCqWcmCoreImplUtilsDefaultPageNameValidator' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComDayCqWcmCoreImplUtilsDefaultPageNameValidator(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${nonValidChars}
        )
    }
}

function Invoke-ConfigmgrApiComDayCqWcmCoreImplVariantsPageVariantsProviderImpl {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${defaultPeriodexternalizerPerioddomain}
    )

    Process {
        'Calling method: ConfigmgrApi-ComDayCqWcmCoreImplVariantsPageVariantsProviderImpl' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComDayCqWcmCoreImplVariantsPageVariantsProviderImpl(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${defaultPeriodexternalizerPerioddomain}
        )
    }
}

function Invoke-ConfigmgrApiComDayCqWcmCoreImplVersionManagerImpl {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${versionmanagerPeriodcreateVersionOnActivation},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${versionmanagerPeriodpurgingEnabled},
        [Parameter(Position = 8, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${versionmanagerPeriodpurgePaths},
        [Parameter(Position = 9, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${versionmanagerPeriodivPaths},
        [Parameter(Position = 10, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${versionmanagerPeriodmaxAgeDays},
        [Parameter(Position = 11, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${versionmanagerPeriodmaxNumberVersions},
        [Parameter(Position = 12, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${versionmanagerPeriodminNumberVersions}
    )

    Process {
        'Calling method: ConfigmgrApi-ComDayCqWcmCoreImplVersionManagerImpl' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComDayCqWcmCoreImplVersionManagerImpl(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${versionmanagerPeriodcreateVersionOnActivation},
            ${versionmanagerPeriodpurgingEnabled},
            ${versionmanagerPeriodpurgePaths},
            ${versionmanagerPeriodivPaths},
            ${versionmanagerPeriodmaxAgeDays},
            ${versionmanagerPeriodmaxNumberVersions},
            ${versionmanagerPeriodminNumberVersions}
        )
    }
}

function Invoke-ConfigmgrApiComDayCqWcmCoreImplVersionPurgeTask {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${versionpurgePeriodpaths},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${versionpurgePeriodrecursive},
        [Parameter(Position = 8, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${versionpurgePeriodmaxVersions},
        [Parameter(Position = 9, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${versionpurgePeriodminVersions},
        [Parameter(Position = 10, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${versionpurgePeriodmaxAgeDays}
    )

    Process {
        'Calling method: ConfigmgrApi-ComDayCqWcmCoreImplVersionPurgeTask' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComDayCqWcmCoreImplVersionPurgeTask(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${versionpurgePeriodpaths},
            ${versionpurgePeriodrecursive},
            ${versionpurgePeriodmaxVersions},
            ${versionpurgePeriodminVersions},
            ${versionpurgePeriodmaxAgeDays}
        )
    }
}

function Invoke-ConfigmgrApiComDayCqWcmCoreImplWCMDebugFilter {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${wcmdbgfilterPeriodenabled},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${wcmdbgfilterPeriodjspDebug}
    )

    Process {
        'Calling method: ConfigmgrApi-ComDayCqWcmCoreImplWCMDebugFilter' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComDayCqWcmCoreImplWCMDebugFilter(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${wcmdbgfilterPeriodenabled},
            ${wcmdbgfilterPeriodjspDebug}
        )
    }
}

function Invoke-ConfigmgrApiComDayCqWcmCoreImplWCMDeveloperModeFilter {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${wcmdevmodefilterPeriodenabled}
    )

    Process {
        'Calling method: ConfigmgrApi-ComDayCqWcmCoreImplWCMDeveloperModeFilter' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComDayCqWcmCoreImplWCMDeveloperModeFilter(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${wcmdevmodefilterPeriodenabled}
        )
    }
}

function Invoke-ConfigmgrApiComDayCqWcmCoreImplWarpTimeWarpFilter {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${filterPeriodorder},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${filterPeriodscope}
    )

    Process {
        'Calling method: ConfigmgrApi-ComDayCqWcmCoreImplWarpTimeWarpFilter' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComDayCqWcmCoreImplWarpTimeWarpFilter(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${filterPeriodorder},
            ${filterPeriodscope}
        )
    }
}

function Invoke-ConfigmgrApiComDayCqWcmCoreMvtMVTStatisticsImpl {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${mvtstatisticsPeriodtrackingurl}
    )

    Process {
        'Calling method: ConfigmgrApi-ComDayCqWcmCoreMvtMVTStatisticsImpl' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComDayCqWcmCoreMvtMVTStatisticsImpl(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${mvtstatisticsPeriodtrackingurl}
        )
    }
}

function Invoke-ConfigmgrApiComDayCqWcmCoreStatsPageViewStatisticsImpl {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${pageviewstatisticsPeriodtrackingurl},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${pageviewstatisticsPeriodtrackingscriptPeriodenabled}
    )

    Process {
        'Calling method: ConfigmgrApi-ComDayCqWcmCoreStatsPageViewStatisticsImpl' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComDayCqWcmCoreStatsPageViewStatisticsImpl(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${pageviewstatisticsPeriodtrackingurl},
            ${pageviewstatisticsPeriodtrackingscriptPeriodenabled}
        )
    }
}

function Invoke-ConfigmgrApiComDayCqWcmCoreWCMRequestFilter {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${wcmfilterPeriodmode}
    )

    Process {
        'Calling method: ConfigmgrApi-ComDayCqWcmCoreWCMRequestFilter' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComDayCqWcmCoreWCMRequestFilter(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${wcmfilterPeriodmode}
        )
    }
}

function Invoke-ConfigmgrApiComDayCqWcmDesignimporterDesignPackageImporter {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${extractPeriodfilter}
    )

    Process {
        'Calling method: ConfigmgrApi-ComDayCqWcmDesignimporterDesignPackageImporter' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComDayCqWcmDesignimporterDesignPackageImporter(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${extractPeriodfilter}
        )
    }
}

function Invoke-ConfigmgrApiComDayCqWcmDesignimporterImplCanvasBuilderImpl {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${filepattern},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${buildPeriodpagePeriodnodes},
        [Parameter(Position = 8, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${buildPeriodclientPeriodlibs},
        [Parameter(Position = 9, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${buildPeriodcanvasPeriodcomponent}
    )

    Process {
        'Calling method: ConfigmgrApi-ComDayCqWcmDesignimporterImplCanvasBuilderImpl' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComDayCqWcmDesignimporterImplCanvasBuilderImpl(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${filepattern},
            ${buildPeriodpagePeriodnodes},
            ${buildPeriodclientPeriodlibs},
            ${buildPeriodcanvasPeriodcomponent}
        )
    }
}

function Invoke-ConfigmgrApiComDayCqWcmDesignimporterImplCanvasPageDeleteHandler {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${minThreadPoolSize},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${maxThreadPoolSize}
    )

    Process {
        'Calling method: ConfigmgrApi-ComDayCqWcmDesignimporterImplCanvasPageDeleteHandler' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComDayCqWcmDesignimporterImplCanvasPageDeleteHandler(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${minThreadPoolSize},
            ${maxThreadPoolSize}
        )
    }
}

function Invoke-ConfigmgrApiComDayCqWcmDesignimporterImplEntryPreprocessorImpl {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${searchPeriodpattern},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${replacePeriodpattern}
    )

    Process {
        'Calling method: ConfigmgrApi-ComDayCqWcmDesignimporterImplEntryPreprocessorImpl' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComDayCqWcmDesignimporterImplEntryPreprocessorImpl(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${searchPeriodpattern},
            ${replacePeriodpattern}
        )
    }
}

function Invoke-ConfigmgrApiComDayCqWcmDesignimporterImplMobileCanvasBuilderImpl {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${filepattern},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${devicePeriodgroups},
        [Parameter(Position = 8, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${buildPeriodpagePeriodnodes},
        [Parameter(Position = 9, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${buildPeriodclientPeriodlibs},
        [Parameter(Position = 10, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${buildPeriodcanvasPeriodcomponent}
    )

    Process {
        'Calling method: ConfigmgrApi-ComDayCqWcmDesignimporterImplMobileCanvasBuilderImpl' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComDayCqWcmDesignimporterImplMobileCanvasBuilderImpl(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${filepattern},
            ${devicePeriodgroups},
            ${buildPeriodpagePeriodnodes},
            ${buildPeriodclientPeriodlibs},
            ${buildPeriodcanvasPeriodcomponent}
        )
    }
}

function Invoke-ConfigmgrApiComDayCqWcmDesignimporterParserTaghandlersFactoryCanvasCompone {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${servicePeriodranking},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${tagpattern}
    )

    Process {
        'Calling method: ConfigmgrApi-ComDayCqWcmDesignimporterParserTaghandlersFactoryCanvasCompone' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComDayCqWcmDesignimporterParserTaghandlersFactoryCanvasCompone(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${servicePeriodranking},
            ${tagpattern}
        )
    }
}

function Invoke-ConfigmgrApiComDayCqWcmDesignimporterParserTaghandlersFactoryDefaultCompon {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${servicePeriodranking},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${tagpattern}
    )

    Process {
        'Calling method: ConfigmgrApi-ComDayCqWcmDesignimporterParserTaghandlersFactoryDefaultCompon' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComDayCqWcmDesignimporterParserTaghandlersFactoryDefaultCompon(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${servicePeriodranking},
            ${tagpattern}
        )
    }
}

function Invoke-ConfigmgrApiComDayCqWcmDesignimporterParserTaghandlersFactoryDefaultTagHan {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${servicePeriodranking},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${tagpattern}
    )

    Process {
        'Calling method: ConfigmgrApi-ComDayCqWcmDesignimporterParserTaghandlersFactoryDefaultTagHan' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComDayCqWcmDesignimporterParserTaghandlersFactoryDefaultTagHan(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${servicePeriodranking},
            ${tagpattern}
        )
    }
}

function Invoke-ConfigmgrApiComDayCqWcmDesignimporterParserTaghandlersFactoryHeadTagHandle {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${servicePeriodranking},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${tagpattern}
    )

    Process {
        'Calling method: ConfigmgrApi-ComDayCqWcmDesignimporterParserTaghandlersFactoryHeadTagHandle' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComDayCqWcmDesignimporterParserTaghandlersFactoryHeadTagHandle(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${servicePeriodranking},
            ${tagpattern}
        )
    }
}

function Invoke-ConfigmgrApiComDayCqWcmDesignimporterParserTaghandlersFactoryIFrameTagHand {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${servicePeriodranking},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${tagpattern}
    )

    Process {
        'Calling method: ConfigmgrApi-ComDayCqWcmDesignimporterParserTaghandlersFactoryIFrameTagHand' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComDayCqWcmDesignimporterParserTaghandlersFactoryIFrameTagHand(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${servicePeriodranking},
            ${tagpattern}
        )
    }
}

function Invoke-ConfigmgrApiComDayCqWcmDesignimporterParserTaghandlersFactoryImageComponen {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${servicePeriodranking},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${tagpattern},
        [Parameter(Position = 8, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${componentPeriodresourceType}
    )

    Process {
        'Calling method: ConfigmgrApi-ComDayCqWcmDesignimporterParserTaghandlersFactoryImageComponen' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComDayCqWcmDesignimporterParserTaghandlersFactoryImageComponen(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${servicePeriodranking},
            ${tagpattern},
            ${componentPeriodresourceType}
        )
    }
}

function Invoke-ConfigmgrApiComDayCqWcmDesignimporterParserTaghandlersFactoryImgTagHandler {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${servicePeriodranking},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${tagpattern}
    )

    Process {
        'Calling method: ConfigmgrApi-ComDayCqWcmDesignimporterParserTaghandlersFactoryImgTagHandler' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComDayCqWcmDesignimporterParserTaghandlersFactoryImgTagHandler(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${servicePeriodranking},
            ${tagpattern}
        )
    }
}

function Invoke-ConfigmgrApiComDayCqWcmDesignimporterParserTaghandlersFactoryInlineScriptT {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${servicePeriodranking},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${tagpattern}
    )

    Process {
        'Calling method: ConfigmgrApi-ComDayCqWcmDesignimporterParserTaghandlersFactoryInlineScriptT' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComDayCqWcmDesignimporterParserTaghandlersFactoryInlineScriptT(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${servicePeriodranking},
            ${tagpattern}
        )
    }
}

function Invoke-ConfigmgrApiComDayCqWcmDesignimporterParserTaghandlersFactoryLinkTagHandle {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${servicePeriodranking},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${tagpattern}
    )

    Process {
        'Calling method: ConfigmgrApi-ComDayCqWcmDesignimporterParserTaghandlersFactoryLinkTagHandle' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComDayCqWcmDesignimporterParserTaghandlersFactoryLinkTagHandle(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${servicePeriodranking},
            ${tagpattern}
        )
    }
}

function Invoke-ConfigmgrApiComDayCqWcmDesignimporterParserTaghandlersFactoryMetaTagHandle {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${servicePeriodranking},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${tagpattern}
    )

    Process {
        'Calling method: ConfigmgrApi-ComDayCqWcmDesignimporterParserTaghandlersFactoryMetaTagHandle' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComDayCqWcmDesignimporterParserTaghandlersFactoryMetaTagHandle(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${servicePeriodranking},
            ${tagpattern}
        )
    }
}

function Invoke-ConfigmgrApiComDayCqWcmDesignimporterParserTaghandlersFactoryNonScriptTagH {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${servicePeriodranking},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${tagpattern}
    )

    Process {
        'Calling method: ConfigmgrApi-ComDayCqWcmDesignimporterParserTaghandlersFactoryNonScriptTagH' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComDayCqWcmDesignimporterParserTaghandlersFactoryNonScriptTagH(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${servicePeriodranking},
            ${tagpattern}
        )
    }
}

function Invoke-ConfigmgrApiComDayCqWcmDesignimporterParserTaghandlersFactoryParsysCompone {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${servicePeriodranking},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${tagpattern},
        [Parameter(Position = 8, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${componentPeriodresourceType}
    )

    Process {
        'Calling method: ConfigmgrApi-ComDayCqWcmDesignimporterParserTaghandlersFactoryParsysCompone' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComDayCqWcmDesignimporterParserTaghandlersFactoryParsysCompone(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${servicePeriodranking},
            ${tagpattern},
            ${componentPeriodresourceType}
        )
    }
}

function Invoke-ConfigmgrApiComDayCqWcmDesignimporterParserTaghandlersFactoryScriptTagHand {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${servicePeriodranking},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${tagpattern}
    )

    Process {
        'Calling method: ConfigmgrApi-ComDayCqWcmDesignimporterParserTaghandlersFactoryScriptTagHand' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComDayCqWcmDesignimporterParserTaghandlersFactoryScriptTagHand(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${servicePeriodranking},
            ${tagpattern}
        )
    }
}

function Invoke-ConfigmgrApiComDayCqWcmDesignimporterParserTaghandlersFactoryStyleTagHandl {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${servicePeriodranking},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${tagpattern}
    )

    Process {
        'Calling method: ConfigmgrApi-ComDayCqWcmDesignimporterParserTaghandlersFactoryStyleTagHandl' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComDayCqWcmDesignimporterParserTaghandlersFactoryStyleTagHandl(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${servicePeriodranking},
            ${tagpattern}
        )
    }
}

function Invoke-ConfigmgrApiComDayCqWcmDesignimporterParserTaghandlersFactoryTextComponent {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${servicePeriodranking},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${tagpattern},
        [Parameter(Position = 8, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${componentPeriodresourceType}
    )

    Process {
        'Calling method: ConfigmgrApi-ComDayCqWcmDesignimporterParserTaghandlersFactoryTextComponent' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComDayCqWcmDesignimporterParserTaghandlersFactoryTextComponent(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${servicePeriodranking},
            ${tagpattern},
            ${componentPeriodresourceType}
        )
    }
}

function Invoke-ConfigmgrApiComDayCqWcmDesignimporterParserTaghandlersFactoryTitleComponen {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${servicePeriodranking},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${tagpattern},
        [Parameter(Position = 8, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${componentPeriodresourceType}
    )

    Process {
        'Calling method: ConfigmgrApi-ComDayCqWcmDesignimporterParserTaghandlersFactoryTitleComponen' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComDayCqWcmDesignimporterParserTaghandlersFactoryTitleComponen(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${servicePeriodranking},
            ${tagpattern},
            ${componentPeriodresourceType}
        )
    }
}

function Invoke-ConfigmgrApiComDayCqWcmDesignimporterParserTaghandlersFactoryTitleTagHandl {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${servicePeriodranking},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${tagpattern}
    )

    Process {
        'Calling method: ConfigmgrApi-ComDayCqWcmDesignimporterParserTaghandlersFactoryTitleTagHandl' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComDayCqWcmDesignimporterParserTaghandlersFactoryTitleTagHandl(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${servicePeriodranking},
            ${tagpattern}
        )
    }
}

function Invoke-ConfigmgrApiComDayCqWcmFoundationFormsImplFormChooserServlet {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${servicePeriodname},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${slingPeriodservletPeriodresourceTypes},
        [Parameter(Position = 8, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${slingPeriodservletPeriodselectors},
        [Parameter(Position = 9, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${slingPeriodservletPeriodmethods},
        [Parameter(Position = 10, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${formsPeriodformchooserservletPeriodadvansesearchPeriodrequire}
    )

    Process {
        'Calling method: ConfigmgrApi-ComDayCqWcmFoundationFormsImplFormChooserServlet' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComDayCqWcmFoundationFormsImplFormChooserServlet(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${servicePeriodname},
            ${slingPeriodservletPeriodresourceTypes},
            ${slingPeriodservletPeriodselectors},
            ${slingPeriodservletPeriodmethods},
            ${formsPeriodformchooserservletPeriodadvansesearchPeriodrequire}
        )
    }
}

function Invoke-ConfigmgrApiComDayCqWcmFoundationFormsImplFormParagraphPostProcessor {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${formsPeriodformparagraphpostprocessorPeriodenabled},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${formsPeriodformparagraphpostprocessorPeriodformresourcetypes}
    )

    Process {
        'Calling method: ConfigmgrApi-ComDayCqWcmFoundationFormsImplFormParagraphPostProcessor' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComDayCqWcmFoundationFormsImplFormParagraphPostProcessor(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${formsPeriodformparagraphpostprocessorPeriodenabled},
            ${formsPeriodformparagraphpostprocessorPeriodformresourcetypes}
        )
    }
}

function Invoke-ConfigmgrApiComDayCqWcmFoundationFormsImplFormsHandlingServlet {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${namePeriodwhitelist},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${allowPeriodexpressions}
    )

    Process {
        'Calling method: ConfigmgrApi-ComDayCqWcmFoundationFormsImplFormsHandlingServlet' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComDayCqWcmFoundationFormsImplFormsHandlingServlet(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${namePeriodwhitelist},
            ${allowPeriodexpressions}
        )
    }
}

function Invoke-ConfigmgrApiComDayCqWcmFoundationFormsImplMailServlet {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${slingPeriodservletPeriodresourceTypes},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${slingPeriodservletPeriodselectors},
        [Parameter(Position = 8, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${resourcePeriodwhitelist},
        [Parameter(Position = 9, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${resourcePeriodblacklist}
    )

    Process {
        'Calling method: ConfigmgrApi-ComDayCqWcmFoundationFormsImplMailServlet' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComDayCqWcmFoundationFormsImplMailServlet(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${slingPeriodservletPeriodresourceTypes},
            ${slingPeriodservletPeriodselectors},
            ${resourcePeriodwhitelist},
            ${resourcePeriodblacklist}
        )
    }
}

function Invoke-ConfigmgrApiComDayCqWcmFoundationImplAdaptiveImageComponentServlet {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${adaptPeriodsupportedPeriodwidths}
    )

    Process {
        'Calling method: ConfigmgrApi-ComDayCqWcmFoundationImplAdaptiveImageComponentServlet' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComDayCqWcmFoundationImplAdaptiveImageComponentServlet(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${adaptPeriodsupportedPeriodwidths}
        )
    }
}

function Invoke-ConfigmgrApiComDayCqWcmFoundationImplHTTPAuthHandler {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${path},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${authPeriodhttpPeriodnologin},
        [Parameter(Position = 8, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${authPeriodhttpPeriodrealm},
        [Parameter(Position = 9, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${authPerioddefaultPeriodloginpage},
        [Parameter(Position = 10, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${authPeriodcredPeriodform},
        [Parameter(Position = 11, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${authPeriodcredPeriodutf8}
    )

    Process {
        'Calling method: ConfigmgrApi-ComDayCqWcmFoundationImplHTTPAuthHandler' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComDayCqWcmFoundationImplHTTPAuthHandler(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${path},
            ${authPeriodhttpPeriodnologin},
            ${authPeriodhttpPeriodrealm},
            ${authPerioddefaultPeriodloginpage},
            ${authPeriodcredPeriodform},
            ${authPeriodcredPeriodutf8}
        )
    }
}

function Invoke-ConfigmgrApiComDayCqWcmFoundationImplPageImpressionsTracker {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${slingPeriodauthPeriodrequirements}
    )

    Process {
        'Calling method: ConfigmgrApi-ComDayCqWcmFoundationImplPageImpressionsTracker' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComDayCqWcmFoundationImplPageImpressionsTracker(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${slingPeriodauthPeriodrequirements}
        )
    }
}

function Invoke-ConfigmgrApiComDayCqWcmFoundationImplPageRedirectServlet {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${excludedPeriodresourcePeriodtypes}
    )

    Process {
        'Calling method: ConfigmgrApi-ComDayCqWcmFoundationImplPageRedirectServlet' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComDayCqWcmFoundationImplPageRedirectServlet(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${excludedPeriodresourcePeriodtypes}
        )
    }
}

function Invoke-ConfigmgrApiComDayCqWcmFoundationSecurityImplDefaultAttachmentTypeBlacklist {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${defaultPeriodattachmentPeriodtypePeriodblacklist},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${baselinePeriodattachmentPeriodtypePeriodblacklist}
    )

    Process {
        'Calling method: ConfigmgrApi-ComDayCqWcmFoundationSecurityImplDefaultAttachmentTypeBlacklist' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComDayCqWcmFoundationSecurityImplDefaultAttachmentTypeBlacklist(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${defaultPeriodattachmentPeriodtypePeriodblacklist},
            ${baselinePeriodattachmentPeriodtypePeriodblacklist}
        )
    }
}

function Invoke-ConfigmgrApiComDayCqWcmFoundationSecurityImplSaferSlingPostValidatorImpl {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${parameterPeriodwhitelist},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${parameterPeriodwhitelistPeriodprefixes},
        [Parameter(Position = 8, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${binaryPeriodparameterPeriodwhitelist},
        [Parameter(Position = 9, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${modifierPeriodwhitelist},
        [Parameter(Position = 10, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${operationPeriodwhitelist},
        [Parameter(Position = 11, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${operationPeriodwhitelistPeriodprefixes},
        [Parameter(Position = 12, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${typehintPeriodwhitelist},
        [Parameter(Position = 13, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${resourcetypePeriodwhitelist}
    )

    Process {
        'Calling method: ConfigmgrApi-ComDayCqWcmFoundationSecurityImplSaferSlingPostValidatorImpl' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComDayCqWcmFoundationSecurityImplSaferSlingPostValidatorImpl(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${parameterPeriodwhitelist},
            ${parameterPeriodwhitelistPeriodprefixes},
            ${binaryPeriodparameterPeriodwhitelist},
            ${modifierPeriodwhitelist},
            ${operationPeriodwhitelist},
            ${operationPeriodwhitelistPeriodprefixes},
            ${typehintPeriodwhitelist},
            ${resourcetypePeriodwhitelist}
        )
    }
}

function Invoke-ConfigmgrApiComDayCqWcmMobileCoreImplDeviceDeviceInfoTransformerFactory {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${devicePeriodinfoPeriodtransformerPeriodenabled},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${devicePeriodinfoPeriodtransformerPeriodcssPeriodstyle}
    )

    Process {
        'Calling method: ConfigmgrApi-ComDayCqWcmMobileCoreImplDeviceDeviceInfoTransformerFactory' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComDayCqWcmMobileCoreImplDeviceDeviceInfoTransformerFactory(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${devicePeriodinfoPeriodtransformerPeriodenabled},
            ${devicePeriodinfoPeriodtransformerPeriodcssPeriodstyle}
        )
    }
}

function Invoke-ConfigmgrApiComDayCqWcmMobileCoreImplRedirectRedirectFilter {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${redirectPeriodenabled},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${redirectPeriodstatsPeriodenabled},
        [Parameter(Position = 8, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${redirectPeriodextensions},
        [Parameter(Position = 9, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${redirectPeriodpaths}
    )

    Process {
        'Calling method: ConfigmgrApi-ComDayCqWcmMobileCoreImplRedirectRedirectFilter' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComDayCqWcmMobileCoreImplRedirectRedirectFilter(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${redirectPeriodenabled},
            ${redirectPeriodstatsPeriodenabled},
            ${redirectPeriodextensions},
            ${redirectPeriodpaths}
        )
    }
}

function Invoke-ConfigmgrApiComDayCqWcmMsmImplActionsContentCopyActionFactory {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${cqPeriodwcmPeriodmsmPeriodactionPeriodexcludednodetypes},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${cqPeriodwcmPeriodmsmPeriodactionPeriodexcludedparagraphitems},
        [Parameter(Position = 8, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${cqPeriodwcmPeriodmsmPeriodactionPeriodexcludedprops},
        [Parameter(Position = 9, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${contentcopyactionPeriodorderPeriodstyle}
    )

    Process {
        'Calling method: ConfigmgrApi-ComDayCqWcmMsmImplActionsContentCopyActionFactory' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComDayCqWcmMsmImplActionsContentCopyActionFactory(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${cqPeriodwcmPeriodmsmPeriodactionPeriodexcludednodetypes},
            ${cqPeriodwcmPeriodmsmPeriodactionPeriodexcludedparagraphitems},
            ${cqPeriodwcmPeriodmsmPeriodactionPeriodexcludedprops},
            ${contentcopyactionPeriodorderPeriodstyle}
        )
    }
}

function Invoke-ConfigmgrApiComDayCqWcmMsmImplActionsContentDeleteActionFactory {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${cqPeriodwcmPeriodmsmPeriodactionPeriodexcludednodetypes},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${cqPeriodwcmPeriodmsmPeriodactionPeriodexcludedparagraphitems},
        [Parameter(Position = 8, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${cqPeriodwcmPeriodmsmPeriodactionPeriodexcludedprops}
    )

    Process {
        'Calling method: ConfigmgrApi-ComDayCqWcmMsmImplActionsContentDeleteActionFactory' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComDayCqWcmMsmImplActionsContentDeleteActionFactory(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${cqPeriodwcmPeriodmsmPeriodactionPeriodexcludednodetypes},
            ${cqPeriodwcmPeriodmsmPeriodactionPeriodexcludedparagraphitems},
            ${cqPeriodwcmPeriodmsmPeriodactionPeriodexcludedprops}
        )
    }
}

function Invoke-ConfigmgrApiComDayCqWcmMsmImplActionsContentUpdateActionFactory {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${cqPeriodwcmPeriodmsmPeriodactionPeriodexcludednodetypes},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${cqPeriodwcmPeriodmsmPeriodactionPeriodexcludedparagraphitems},
        [Parameter(Position = 8, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${cqPeriodwcmPeriodmsmPeriodactionPeriodexcludedprops},
        [Parameter(Position = 9, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${cqPeriodwcmPeriodmsmPeriodactionPeriodignoredMixin}
    )

    Process {
        'Calling method: ConfigmgrApi-ComDayCqWcmMsmImplActionsContentUpdateActionFactory' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComDayCqWcmMsmImplActionsContentUpdateActionFactory(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${cqPeriodwcmPeriodmsmPeriodactionPeriodexcludednodetypes},
            ${cqPeriodwcmPeriodmsmPeriodactionPeriodexcludedparagraphitems},
            ${cqPeriodwcmPeriodmsmPeriodactionPeriodexcludedprops},
            ${cqPeriodwcmPeriodmsmPeriodactionPeriodignoredMixin}
        )
    }
}

function Invoke-ConfigmgrApiComDayCqWcmMsmImplActionsOrderChildrenActionFactory {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${cqPeriodwcmPeriodmsmPeriodactionPeriodexcludednodetypes},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${cqPeriodwcmPeriodmsmPeriodactionPeriodexcludedparagraphitems},
        [Parameter(Position = 8, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${cqPeriodwcmPeriodmsmPeriodactionPeriodexcludedprops}
    )

    Process {
        'Calling method: ConfigmgrApi-ComDayCqWcmMsmImplActionsOrderChildrenActionFactory' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComDayCqWcmMsmImplActionsOrderChildrenActionFactory(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${cqPeriodwcmPeriodmsmPeriodactionPeriodexcludednodetypes},
            ${cqPeriodwcmPeriodmsmPeriodactionPeriodexcludedparagraphitems},
            ${cqPeriodwcmPeriodmsmPeriodactionPeriodexcludedprops}
        )
    }
}

function Invoke-ConfigmgrApiComDayCqWcmMsmImplActionsPageMoveActionFactory {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${cqPeriodwcmPeriodmsmPeriodactionPeriodexcludednodetypes},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${cqPeriodwcmPeriodmsmPeriodactionPeriodexcludedparagraphitems},
        [Parameter(Position = 8, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${cqPeriodwcmPeriodmsmPeriodactionPeriodexcludedprops},
        [Parameter(Position = 9, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${cqPeriodwcmPeriodmsmPeriodimplPeriodactionsPeriodpagemovePeriodpropReferenceUpdate}
    )

    Process {
        'Calling method: ConfigmgrApi-ComDayCqWcmMsmImplActionsPageMoveActionFactory' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComDayCqWcmMsmImplActionsPageMoveActionFactory(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${cqPeriodwcmPeriodmsmPeriodactionPeriodexcludednodetypes},
            ${cqPeriodwcmPeriodmsmPeriodactionPeriodexcludedparagraphitems},
            ${cqPeriodwcmPeriodmsmPeriodactionPeriodexcludedprops},
            ${cqPeriodwcmPeriodmsmPeriodimplPeriodactionsPeriodpagemovePeriodpropReferenceUpdate}
        )
    }
}

function Invoke-ConfigmgrApiComDayCqWcmMsmImplActionsReferencesUpdateActionFactory {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${cqPeriodwcmPeriodmsmPeriodactionPeriodexcludednodetypes},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${cqPeriodwcmPeriodmsmPeriodactionPeriodexcludedparagraphitems},
        [Parameter(Position = 8, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${cqPeriodwcmPeriodmsmPeriodactionPeriodexcludedprops},
        [Parameter(Position = 9, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${cqPeriodwcmPeriodmsmPeriodimplPeriodactionPeriodreferencesupdatePeriodpropUpdateNested}
    )

    Process {
        'Calling method: ConfigmgrApi-ComDayCqWcmMsmImplActionsReferencesUpdateActionFactory' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComDayCqWcmMsmImplActionsReferencesUpdateActionFactory(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${cqPeriodwcmPeriodmsmPeriodactionPeriodexcludednodetypes},
            ${cqPeriodwcmPeriodmsmPeriodactionPeriodexcludedparagraphitems},
            ${cqPeriodwcmPeriodmsmPeriodactionPeriodexcludedprops},
            ${cqPeriodwcmPeriodmsmPeriodimplPeriodactionPeriodreferencesupdatePeriodpropUpdateNested}
        )
    }
}

function Invoke-ConfigmgrApiComDayCqWcmMsmImplActionsVersionCopyActionFactory {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${cqPeriodwcmPeriodmsmPeriodactionPeriodexcludednodetypes},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${cqPeriodwcmPeriodmsmPeriodactionPeriodexcludedparagraphitems},
        [Parameter(Position = 8, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${cqPeriodwcmPeriodmsmPeriodactionPeriodexcludedprops}
    )

    Process {
        'Calling method: ConfigmgrApi-ComDayCqWcmMsmImplActionsVersionCopyActionFactory' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComDayCqWcmMsmImplActionsVersionCopyActionFactory(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${cqPeriodwcmPeriodmsmPeriodactionPeriodexcludednodetypes},
            ${cqPeriodwcmPeriodmsmPeriodactionPeriodexcludedparagraphitems},
            ${cqPeriodwcmPeriodmsmPeriodactionPeriodexcludedprops}
        )
    }
}

function Invoke-ConfigmgrApiComDayCqWcmMsmImplLiveRelationshipManagerImpl {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${liverelationshipmgrPeriodrelationsconfigPerioddefault}
    )

    Process {
        'Calling method: ConfigmgrApi-ComDayCqWcmMsmImplLiveRelationshipManagerImpl' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComDayCqWcmMsmImplLiveRelationshipManagerImpl(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${liverelationshipmgrPeriodrelationsconfigPerioddefault}
        )
    }
}

function Invoke-ConfigmgrApiComDayCqWcmMsmImplRolloutManagerImpl {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${eventPeriodfilter},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${rolloutmgrPeriodexcludedpropsPerioddefault},
        [Parameter(Position = 8, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${rolloutmgrPeriodexcludedparagraphpropsPerioddefault},
        [Parameter(Position = 9, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${rolloutmgrPeriodexcludednodetypesPerioddefault},
        [Parameter(Position = 10, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${rolloutmgrPeriodthreadpoolPeriodmaxsize},
        [Parameter(Position = 11, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${rolloutmgrPeriodthreadpoolPeriodmaxshutdowntime},
        [Parameter(Position = 12, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${rolloutmgrPeriodthreadpoolPeriodpriority},
        [Parameter(Position = 13, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${rolloutmgrPeriodcommitPeriodsize},
        [Parameter(Position = 14, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${rolloutmgrPeriodconflicthandlingPeriodenabled}
    )

    Process {
        'Calling method: ConfigmgrApi-ComDayCqWcmMsmImplRolloutManagerImpl' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComDayCqWcmMsmImplRolloutManagerImpl(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${eventPeriodfilter},
            ${rolloutmgrPeriodexcludedpropsPerioddefault},
            ${rolloutmgrPeriodexcludedparagraphpropsPerioddefault},
            ${rolloutmgrPeriodexcludednodetypesPerioddefault},
            ${rolloutmgrPeriodthreadpoolPeriodmaxsize},
            ${rolloutmgrPeriodthreadpoolPeriodmaxshutdowntime},
            ${rolloutmgrPeriodthreadpoolPeriodpriority},
            ${rolloutmgrPeriodcommitPeriodsize},
            ${rolloutmgrPeriodconflicthandlingPeriodenabled}
        )
    }
}

function Invoke-ConfigmgrApiComDayCqWcmMsmImplServletsAuditLogServlet {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${auditlogservletPerioddefaultPeriodeventsPeriodcount},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${auditlogservletPerioddefaultPeriodpath}
    )

    Process {
        'Calling method: ConfigmgrApi-ComDayCqWcmMsmImplServletsAuditLogServlet' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComDayCqWcmMsmImplServletsAuditLogServlet(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${auditlogservletPerioddefaultPeriodeventsPeriodcount},
            ${auditlogservletPerioddefaultPeriodpath}
        )
    }
}

function Invoke-ConfigmgrApiComDayCqWcmNotificationEmailImplEmailChannel {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${emailPeriodfrom}
    )

    Process {
        'Calling method: ConfigmgrApi-ComDayCqWcmNotificationEmailImplEmailChannel' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComDayCqWcmNotificationEmailImplEmailChannel(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${emailPeriodfrom}
        )
    }
}

function Invoke-ConfigmgrApiComDayCqWcmNotificationImplNotificationManagerImpl {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${eventPeriodtopics}
    )

    Process {
        'Calling method: ConfigmgrApi-ComDayCqWcmNotificationImplNotificationManagerImpl' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComDayCqWcmNotificationImplNotificationManagerImpl(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${eventPeriodtopics}
        )
    }
}

function Invoke-ConfigmgrApiComDayCqWcmScriptingImplBVPManager {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${comPerioddayPeriodcqPeriodwcmPeriodscriptingPeriodbvpPeriodscriptPeriodengines}
    )

    Process {
        'Calling method: ConfigmgrApi-ComDayCqWcmScriptingImplBVPManager' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComDayCqWcmScriptingImplBVPManager(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${comPerioddayPeriodcqPeriodwcmPeriodscriptingPeriodbvpPeriodscriptPeriodengines}
        )
    }
}

function Invoke-ConfigmgrApiComDayCqWcmUndoUndoConfig {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${cqPeriodwcmPeriodundoPeriodenabled},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${cqPeriodwcmPeriodundoPeriodpath},
        [Parameter(Position = 8, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${cqPeriodwcmPeriodundoPeriodvalidity},
        [Parameter(Position = 9, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${cqPeriodwcmPeriodundoPeriodsteps},
        [Parameter(Position = 10, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${cqPeriodwcmPeriodundoPeriodpersistence},
        [Parameter(Position = 11, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${cqPeriodwcmPeriodundoPeriodpersistencePeriodmode},
        [Parameter(Position = 12, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${cqPeriodwcmPeriodundoPeriodmarkermode},
        [Parameter(Position = 13, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${cqPeriodwcmPeriodundoPeriodwhitelist},
        [Parameter(Position = 14, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${cqPeriodwcmPeriodundoPeriodblacklist}
    )

    Process {
        'Calling method: ConfigmgrApi-ComDayCqWcmUndoUndoConfig' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComDayCqWcmUndoUndoConfig(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${cqPeriodwcmPeriodundoPeriodenabled},
            ${cqPeriodwcmPeriodundoPeriodpath},
            ${cqPeriodwcmPeriodundoPeriodvalidity},
            ${cqPeriodwcmPeriodundoPeriodsteps},
            ${cqPeriodwcmPeriodundoPeriodpersistence},
            ${cqPeriodwcmPeriodundoPeriodpersistencePeriodmode},
            ${cqPeriodwcmPeriodundoPeriodmarkermode},
            ${cqPeriodwcmPeriodundoPeriodwhitelist},
            ${cqPeriodwcmPeriodundoPeriodblacklist}
        )
    }
}

function Invoke-ConfigmgrApiComDayCqWcmWebservicesupportImplReplicationEventListener {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${flush agents}
    )

    Process {
        'Calling method: ConfigmgrApi-ComDayCqWcmWebservicesupportImplReplicationEventListener' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComDayCqWcmWebservicesupportImplReplicationEventListener(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${flush agents}
        )
    }
}

function Invoke-ConfigmgrApiComDayCqWcmWorkflowImplWcmWorkflowServiceImpl {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${eventPeriodfilter},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${minThreadPoolSize},
        [Parameter(Position = 8, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${maxThreadPoolSize},
        [Parameter(Position = 9, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${cqPeriodwcmPeriodworkflowPeriodterminatePeriodonPeriodactivate},
        [Parameter(Position = 10, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${cqPeriodwcmPeriodworklfowPeriodterminatePeriodexclusionPeriodlist}
    )

    Process {
        'Calling method: ConfigmgrApi-ComDayCqWcmWorkflowImplWcmWorkflowServiceImpl' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComDayCqWcmWorkflowImplWcmWorkflowServiceImpl(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${eventPeriodfilter},
            ${minThreadPoolSize},
            ${maxThreadPoolSize},
            ${cqPeriodwcmPeriodworkflowPeriodterminatePeriodonPeriodactivate},
            ${cqPeriodwcmPeriodworklfowPeriodterminatePeriodexclusionPeriodlist}
        )
    }
}

function Invoke-ConfigmgrApiComDayCqWcmWorkflowImplWorkflowPackageInfoProvider {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${workflowpackageinfoproviderPeriodfilter},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${workflowpackageinfoproviderPeriodfilterPeriodrootpath}
    )

    Process {
        'Calling method: ConfigmgrApi-ComDayCqWcmWorkflowImplWorkflowPackageInfoProvider' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComDayCqWcmWorkflowImplWorkflowPackageInfoProvider(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${workflowpackageinfoproviderPeriodfilter},
            ${workflowpackageinfoproviderPeriodfilterPeriodrootpath}
        )
    }
}

function Invoke-ConfigmgrApiComDayCqWidgetImplHtmlLibraryManagerImpl {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${htmllibmanagerPeriodclientmanager},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${htmllibmanagerPerioddebug},
        [Parameter(Position = 8, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${htmllibmanagerPerioddebugPeriodconsole},
        [Parameter(Position = 9, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${htmllibmanagerPerioddebugPeriodinitPeriodjs},
        [Parameter(Position = 10, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${htmllibmanagerPerioddefaultthemename},
        [Parameter(Position = 11, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${htmllibmanagerPerioddefaultuserthemename},
        [Parameter(Position = 12, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${htmllibmanagerPeriodfirebuglitePeriodpath},
        [Parameter(Position = 13, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${htmllibmanagerPeriodforceCQUrlInfo},
        [Parameter(Position = 14, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${htmllibmanagerPeriodgzip},
        [Parameter(Position = 15, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${htmllibmanagerPeriodmaxage},
        [Parameter(Position = 16, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${htmllibmanagerPeriodmaxDataUriSize},
        [Parameter(Position = 17, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${htmllibmanagerPeriodminify},
        [Parameter(Position = 18, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${htmllibmanagerPeriodpathPeriodlist},
        [Parameter(Position = 19, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${htmllibmanagerPeriodtiming}
    )

    Process {
        'Calling method: ConfigmgrApi-ComDayCqWidgetImplHtmlLibraryManagerImpl' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComDayCqWidgetImplHtmlLibraryManagerImpl(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${htmllibmanagerPeriodclientmanager},
            ${htmllibmanagerPerioddebug},
            ${htmllibmanagerPerioddebugPeriodconsole},
            ${htmllibmanagerPerioddebugPeriodinitPeriodjs},
            ${htmllibmanagerPerioddefaultthemename},
            ${htmllibmanagerPerioddefaultuserthemename},
            ${htmllibmanagerPeriodfirebuglitePeriodpath},
            ${htmllibmanagerPeriodforceCQUrlInfo},
            ${htmllibmanagerPeriodgzip},
            ${htmllibmanagerPeriodmaxage},
            ${htmllibmanagerPeriodmaxDataUriSize},
            ${htmllibmanagerPeriodminify},
            ${htmllibmanagerPeriodpathPeriodlist},
            ${htmllibmanagerPeriodtiming}
        )
    }
}

function Invoke-ConfigmgrApiComDayCqWidgetImplWidgetExtensionProviderImpl {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${extendablePeriodwidgets},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${widgetextensionproviderPerioddebug}
    )

    Process {
        'Calling method: ConfigmgrApi-ComDayCqWidgetImplWidgetExtensionProviderImpl' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComDayCqWidgetImplWidgetExtensionProviderImpl(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${extendablePeriodwidgets},
            ${widgetextensionproviderPerioddebug}
        )
    }
}

function Invoke-ConfigmgrApiComDayCqWorkflowImplEmailEMailNotificationService {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${fromPeriodaddress},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${hostPeriodprefix},
        [Parameter(Position = 8, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${notifyPeriodonabort},
        [Parameter(Position = 9, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${notifyPeriodoncomplete},
        [Parameter(Position = 10, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${notifyPeriodoncontainercomplete},
        [Parameter(Position = 11, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${notifyPerioduseronly}
    )

    Process {
        'Calling method: ConfigmgrApi-ComDayCqWorkflowImplEmailEMailNotificationService' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComDayCqWorkflowImplEmailEMailNotificationService(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${fromPeriodaddress},
            ${hostPeriodprefix},
            ${notifyPeriodonabort},
            ${notifyPeriodoncomplete},
            ${notifyPeriodoncontainercomplete},
            ${notifyPerioduseronly}
        )
    }
}

function Invoke-ConfigmgrApiComDayCqWorkflowImplEmailTaskEMailNotificationService {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${notifyPeriodonupdate},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${notifyPeriodoncomplete}
    )

    Process {
        'Calling method: ConfigmgrApi-ComDayCqWorkflowImplEmailTaskEMailNotificationService' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComDayCqWorkflowImplEmailTaskEMailNotificationService(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${notifyPeriodonupdate},
            ${notifyPeriodoncomplete}
        )
    }
}

function Invoke-ConfigmgrApiComDayCrxSecurityTokenImplImplTokenAuthenticationHandler {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${path},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${tokenPeriodrequiredPeriodattr},
        [Parameter(Position = 8, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${tokenPeriodalternatePeriodurl},
        [Parameter(Position = 9, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${tokenPeriodencapsulated},
        [Parameter(Position = 10, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${skipPeriodtokenPeriodrefresh}
    )

    Process {
        'Calling method: ConfigmgrApi-ComDayCrxSecurityTokenImplImplTokenAuthenticationHandler' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComDayCrxSecurityTokenImplImplTokenAuthenticationHandler(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${path},
            ${tokenPeriodrequiredPeriodattr},
            ${tokenPeriodalternatePeriodurl},
            ${tokenPeriodencapsulated},
            ${skipPeriodtokenPeriodrefresh}
        )
    }
}

function Invoke-ConfigmgrApiComDayCrxSecurityTokenImplTokenCleanupTask {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${enablePeriodtokenPeriodcleanupPeriodtask},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${schedulerPeriodexpression},
        [Parameter(Position = 8, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${batchPeriodsize}
    )

    Process {
        'Calling method: ConfigmgrApi-ComDayCrxSecurityTokenImplTokenCleanupTask' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.ComDayCrxSecurityTokenImplTokenCleanupTask(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${enablePeriodtokenPeriodcleanupPeriodtask},
            ${schedulerPeriodexpression},
            ${batchPeriodsize}
        )
    }
}

function Invoke-ConfigmgrApiGuideLocalizationService {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${supportedLocales},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${localizable Properties}
    )

    Process {
        'Calling method: ConfigmgrApi-GuideLocalizationService' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.GuideLocalizationService(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${supportedLocales},
            ${localizable Properties}
        )
    }
}

function Invoke-ConfigmgrApiMessagingUserComponentFactory {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${priority}
    )

    Process {
        'Calling method: ConfigmgrApi-MessagingUserComponentFactory' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.MessagingUserComponentFactory(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${priority}
        )
    }
}

function Invoke-ConfigmgrApiOrgApacheAriesJmxFrameworkStateConfig {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${attributeChangeNotificationEnabled}
    )

    Process {
        'Calling method: ConfigmgrApi-OrgApacheAriesJmxFrameworkStateConfig' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.OrgApacheAriesJmxFrameworkStateConfig(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${attributeChangeNotificationEnabled}
        )
    }
}

function Invoke-ConfigmgrApiOrgApacheFelixEventadminImplEventAdmin {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${orgPeriodapachePeriodfelixPeriodeventadminPeriodThreadPoolSize},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Decimal]
        ${orgPeriodapachePeriodfelixPeriodeventadminPeriodAsyncToSyncThreadRatio},
        [Parameter(Position = 8, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${orgPeriodapachePeriodfelixPeriodeventadminPeriodTimeout},
        [Parameter(Position = 9, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${orgPeriodapachePeriodfelixPeriodeventadminPeriodRequireTopic},
        [Parameter(Position = 10, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${orgPeriodapachePeriodfelixPeriodeventadminPeriodIgnoreTimeout},
        [Parameter(Position = 11, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${orgPeriodapachePeriodfelixPeriodeventadminPeriodIgnoreTopic}
    )

    Process {
        'Calling method: ConfigmgrApi-OrgApacheFelixEventadminImplEventAdmin' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.OrgApacheFelixEventadminImplEventAdmin(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${orgPeriodapachePeriodfelixPeriodeventadminPeriodThreadPoolSize},
            ${orgPeriodapachePeriodfelixPeriodeventadminPeriodAsyncToSyncThreadRatio},
            ${orgPeriodapachePeriodfelixPeriodeventadminPeriodTimeout},
            ${orgPeriodapachePeriodfelixPeriodeventadminPeriodRequireTopic},
            ${orgPeriodapachePeriodfelixPeriodeventadminPeriodIgnoreTimeout},
            ${orgPeriodapachePeriodfelixPeriodeventadminPeriodIgnoreTopic}
        )
    }
}

function Invoke-ConfigmgrApiOrgApacheFelixHttp {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${orgPeriodapachePeriodfelixPeriodhttpPeriodhost},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${orgPeriodapachePeriodfelixPeriodhttpPeriodenable},
        [Parameter(Position = 8, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${orgPeriodosgiPeriodservicePeriodhttpPeriodport},
        [Parameter(Position = 9, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${orgPeriodapachePeriodfelixPeriodhttpPeriodtimeout},
        [Parameter(Position = 10, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${orgPeriodapachePeriodfelixPeriodhttpsPeriodenable},
        [Parameter(Position = 11, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${orgPeriodosgiPeriodservicePeriodhttpPeriodportPeriodsecure},
        [Parameter(Position = 12, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${orgPeriodapachePeriodfelixPeriodhttpsPeriodkeystore},
        [Parameter(Position = 13, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${orgPeriodapachePeriodfelixPeriodhttpsPeriodkeystorePeriodpassword},
        [Parameter(Position = 14, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${orgPeriodapachePeriodfelixPeriodhttpsPeriodkeystorePeriodkeyPeriodpassword},
        [Parameter(Position = 15, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${orgPeriodapachePeriodfelixPeriodhttpsPeriodtruststore},
        [Parameter(Position = 16, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${orgPeriodapachePeriodfelixPeriodhttpsPeriodtruststorePeriodpassword},
        [Parameter(Position = 17, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${orgPeriodapachePeriodfelixPeriodhttpsPeriodclientcertificate},
        [Parameter(Position = 18, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${orgPeriodapachePeriodfelixPeriodhttpPeriodcontextPath},
        [Parameter(Position = 19, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${orgPeriodapachePeriodfelixPeriodhttpPeriodmbeans},
        [Parameter(Position = 20, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${orgPeriodapachePeriodfelixPeriodhttpPeriodsessionPeriodtimeout},
        [Parameter(Position = 21, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${orgPeriodapachePeriodfelixPeriodhttpPeriodjettyPeriodthreadpoolPeriodmax},
        [Parameter(Position = 22, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${orgPeriodapachePeriodfelixPeriodhttpPeriodjettyPeriodacceptors},
        [Parameter(Position = 23, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${orgPeriodapachePeriodfelixPeriodhttpPeriodjettyPeriodselectors},
        [Parameter(Position = 24, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${orgPeriodapachePeriodfelixPeriodhttpPeriodjettyPeriodheaderBufferSize},
        [Parameter(Position = 25, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${orgPeriodapachePeriodfelixPeriodhttpPeriodjettyPeriodrequestBufferSize},
        [Parameter(Position = 26, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${orgPeriodapachePeriodfelixPeriodhttpPeriodjettyPeriodresponseBufferSize},
        [Parameter(Position = 27, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${orgPeriodapachePeriodfelixPeriodhttpPeriodjettyPeriodmaxFormSize},
        [Parameter(Position = 28, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${orgPeriodapachePeriodfelixPeriodhttpPeriodpathExclusions},
        [Parameter(Position = 29, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${orgPeriodapachePeriodfelixPeriodhttpsPeriodjettyPeriodciphersuitesPeriodexcluded},
        [Parameter(Position = 30, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${orgPeriodapachePeriodfelixPeriodhttpsPeriodjettyPeriodciphersuitesPeriodincluded},
        [Parameter(Position = 31, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${orgPeriodapachePeriodfelixPeriodhttpPeriodjettyPeriodsendServerHeader},
        [Parameter(Position = 32, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${orgPeriodapachePeriodfelixPeriodhttpsPeriodjettyPeriodprotocolsPeriodincluded},
        [Parameter(Position = 33, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${orgPeriodapachePeriodfelixPeriodhttpsPeriodjettyPeriodprotocolsPeriodexcluded},
        [Parameter(Position = 34, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${orgPeriodapachePeriodfelixPeriodproxyPeriodloadPeriodbalancerPeriodconnectionPeriodenable},
        [Parameter(Position = 35, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${orgPeriodapachePeriodfelixPeriodhttpsPeriodjettyPeriodrenegotiateAllowed},
        [Parameter(Position = 36, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${orgPeriodapachePeriodfelixPeriodhttpsPeriodjettyPeriodsessionPeriodcookiePeriodhttpOnly},
        [Parameter(Position = 37, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${orgPeriodapachePeriodfelixPeriodhttpsPeriodjettyPeriodsessionPeriodcookiePeriodsecure},
        [Parameter(Position = 38, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${orgPeriodeclipsePeriodjettyPeriodservletPeriodSessionIdPathParameterName},
        [Parameter(Position = 39, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${orgPeriodeclipsePeriodjettyPeriodservletPeriodCheckingRemoteSessionIdEncoding},
        [Parameter(Position = 40, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${orgPeriodeclipsePeriodjettyPeriodservletPeriodSessionCookie},
        [Parameter(Position = 41, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${orgPeriodeclipsePeriodjettyPeriodservletPeriodSessionDomain},
        [Parameter(Position = 42, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${orgPeriodeclipsePeriodjettyPeriodservletPeriodSessionPath},
        [Parameter(Position = 43, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${orgPeriodeclipsePeriodjettyPeriodservletPeriodMaxAge},
        [Parameter(Position = 44, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${orgPeriodapachePeriodfelixPeriodhttpPeriodname},
        [Parameter(Position = 45, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${orgPeriodapachePeriodfelixPeriodjettyPeriodgziphandlerPeriodenable},
        [Parameter(Position = 46, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${orgPeriodapachePeriodfelixPeriodjettyPeriodgzipPeriodminGzipSize},
        [Parameter(Position = 47, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${orgPeriodapachePeriodfelixPeriodjettyPeriodgzipPeriodcompressionLevel},
        [Parameter(Position = 48, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${orgPeriodapachePeriodfelixPeriodjettyPeriodgzipPeriodinflateBufferSize},
        [Parameter(Position = 49, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${orgPeriodapachePeriodfelixPeriodjettyPeriodgzipPeriodsyncFlush},
        [Parameter(Position = 50, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${orgPeriodapachePeriodfelixPeriodjettyPeriodgzipPeriodexcludedUserAgents},
        [Parameter(Position = 51, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${orgPeriodapachePeriodfelixPeriodjettyPeriodgzipPeriodincludedMethods},
        [Parameter(Position = 52, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${orgPeriodapachePeriodfelixPeriodjettyPeriodgzipPeriodexcludedMethods},
        [Parameter(Position = 53, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${orgPeriodapachePeriodfelixPeriodjettyPeriodgzipPeriodincludedPaths},
        [Parameter(Position = 54, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${orgPeriodapachePeriodfelixPeriodjettyPeriodgzipPeriodexcludedPaths},
        [Parameter(Position = 55, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${orgPeriodapachePeriodfelixPeriodjettyPeriodgzipPeriodincludedMimeTypes},
        [Parameter(Position = 56, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${orgPeriodapachePeriodfelixPeriodjettyPeriodgzipPeriodexcludedMimeTypes},
        [Parameter(Position = 57, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${orgPeriodapachePeriodfelixPeriodhttpPeriodsessionPeriodinvalidate},
        [Parameter(Position = 58, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${orgPeriodapachePeriodfelixPeriodhttpPeriodsessionPerioduniqueid}
    )

    Process {
        'Calling method: ConfigmgrApi-OrgApacheFelixHttp' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.OrgApacheFelixHttp(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${orgPeriodapachePeriodfelixPeriodhttpPeriodhost},
            ${orgPeriodapachePeriodfelixPeriodhttpPeriodenable},
            ${orgPeriodosgiPeriodservicePeriodhttpPeriodport},
            ${orgPeriodapachePeriodfelixPeriodhttpPeriodtimeout},
            ${orgPeriodapachePeriodfelixPeriodhttpsPeriodenable},
            ${orgPeriodosgiPeriodservicePeriodhttpPeriodportPeriodsecure},
            ${orgPeriodapachePeriodfelixPeriodhttpsPeriodkeystore},
            ${orgPeriodapachePeriodfelixPeriodhttpsPeriodkeystorePeriodpassword},
            ${orgPeriodapachePeriodfelixPeriodhttpsPeriodkeystorePeriodkeyPeriodpassword},
            ${orgPeriodapachePeriodfelixPeriodhttpsPeriodtruststore},
            ${orgPeriodapachePeriodfelixPeriodhttpsPeriodtruststorePeriodpassword},
            ${orgPeriodapachePeriodfelixPeriodhttpsPeriodclientcertificate},
            ${orgPeriodapachePeriodfelixPeriodhttpPeriodcontextPath},
            ${orgPeriodapachePeriodfelixPeriodhttpPeriodmbeans},
            ${orgPeriodapachePeriodfelixPeriodhttpPeriodsessionPeriodtimeout},
            ${orgPeriodapachePeriodfelixPeriodhttpPeriodjettyPeriodthreadpoolPeriodmax},
            ${orgPeriodapachePeriodfelixPeriodhttpPeriodjettyPeriodacceptors},
            ${orgPeriodapachePeriodfelixPeriodhttpPeriodjettyPeriodselectors},
            ${orgPeriodapachePeriodfelixPeriodhttpPeriodjettyPeriodheaderBufferSize},
            ${orgPeriodapachePeriodfelixPeriodhttpPeriodjettyPeriodrequestBufferSize},
            ${orgPeriodapachePeriodfelixPeriodhttpPeriodjettyPeriodresponseBufferSize},
            ${orgPeriodapachePeriodfelixPeriodhttpPeriodjettyPeriodmaxFormSize},
            ${orgPeriodapachePeriodfelixPeriodhttpPeriodpathExclusions},
            ${orgPeriodapachePeriodfelixPeriodhttpsPeriodjettyPeriodciphersuitesPeriodexcluded},
            ${orgPeriodapachePeriodfelixPeriodhttpsPeriodjettyPeriodciphersuitesPeriodincluded},
            ${orgPeriodapachePeriodfelixPeriodhttpPeriodjettyPeriodsendServerHeader},
            ${orgPeriodapachePeriodfelixPeriodhttpsPeriodjettyPeriodprotocolsPeriodincluded},
            ${orgPeriodapachePeriodfelixPeriodhttpsPeriodjettyPeriodprotocolsPeriodexcluded},
            ${orgPeriodapachePeriodfelixPeriodproxyPeriodloadPeriodbalancerPeriodconnectionPeriodenable},
            ${orgPeriodapachePeriodfelixPeriodhttpsPeriodjettyPeriodrenegotiateAllowed},
            ${orgPeriodapachePeriodfelixPeriodhttpsPeriodjettyPeriodsessionPeriodcookiePeriodhttpOnly},
            ${orgPeriodapachePeriodfelixPeriodhttpsPeriodjettyPeriodsessionPeriodcookiePeriodsecure},
            ${orgPeriodeclipsePeriodjettyPeriodservletPeriodSessionIdPathParameterName},
            ${orgPeriodeclipsePeriodjettyPeriodservletPeriodCheckingRemoteSessionIdEncoding},
            ${orgPeriodeclipsePeriodjettyPeriodservletPeriodSessionCookie},
            ${orgPeriodeclipsePeriodjettyPeriodservletPeriodSessionDomain},
            ${orgPeriodeclipsePeriodjettyPeriodservletPeriodSessionPath},
            ${orgPeriodeclipsePeriodjettyPeriodservletPeriodMaxAge},
            ${orgPeriodapachePeriodfelixPeriodhttpPeriodname},
            ${orgPeriodapachePeriodfelixPeriodjettyPeriodgziphandlerPeriodenable},
            ${orgPeriodapachePeriodfelixPeriodjettyPeriodgzipPeriodminGzipSize},
            ${orgPeriodapachePeriodfelixPeriodjettyPeriodgzipPeriodcompressionLevel},
            ${orgPeriodapachePeriodfelixPeriodjettyPeriodgzipPeriodinflateBufferSize},
            ${orgPeriodapachePeriodfelixPeriodjettyPeriodgzipPeriodsyncFlush},
            ${orgPeriodapachePeriodfelixPeriodjettyPeriodgzipPeriodexcludedUserAgents},
            ${orgPeriodapachePeriodfelixPeriodjettyPeriodgzipPeriodincludedMethods},
            ${orgPeriodapachePeriodfelixPeriodjettyPeriodgzipPeriodexcludedMethods},
            ${orgPeriodapachePeriodfelixPeriodjettyPeriodgzipPeriodincludedPaths},
            ${orgPeriodapachePeriodfelixPeriodjettyPeriodgzipPeriodexcludedPaths},
            ${orgPeriodapachePeriodfelixPeriodjettyPeriodgzipPeriodincludedMimeTypes},
            ${orgPeriodapachePeriodfelixPeriodjettyPeriodgzipPeriodexcludedMimeTypes},
            ${orgPeriodapachePeriodfelixPeriodhttpPeriodsessionPeriodinvalidate},
            ${orgPeriodapachePeriodfelixPeriodhttpPeriodsessionPerioduniqueid}
        )
    }
}

function Invoke-ConfigmgrApiOrgApacheFelixHttpSslfilterSslFilter {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${sslForwardPeriodheader},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${sslForwardPeriodvalue},
        [Parameter(Position = 8, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${sslForwardCertPeriodheader},
        [Parameter(Position = 9, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${rewritePeriodabsolutePeriodurls}
    )

    Process {
        'Calling method: ConfigmgrApi-OrgApacheFelixHttpSslfilterSslFilter' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.OrgApacheFelixHttpSslfilterSslFilter(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${sslForwardPeriodheader},
            ${sslForwardPeriodvalue},
            ${sslForwardCertPeriodheader},
            ${rewritePeriodabsolutePeriodurls}
        )
    }
}

function Invoke-ConfigmgrApiOrgApacheFelixJaasConfigurationFactory {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${jaasPeriodcontrolFlag},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${jaasPeriodranking},
        [Parameter(Position = 8, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${jaasPeriodrealmName},
        [Parameter(Position = 9, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${jaasPeriodclassname},
        [Parameter(Position = 10, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${jaasPeriodoptions}
    )

    Process {
        'Calling method: ConfigmgrApi-OrgApacheFelixJaasConfigurationFactory' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.OrgApacheFelixJaasConfigurationFactory(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${jaasPeriodcontrolFlag},
            ${jaasPeriodranking},
            ${jaasPeriodrealmName},
            ${jaasPeriodclassname},
            ${jaasPeriodoptions}
        )
    }
}

function Invoke-ConfigmgrApiOrgApacheFelixJaasConfigurationSpi {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${jaasPerioddefaultRealmName},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${jaasPeriodconfigProviderName},
        [Parameter(Position = 8, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${jaasPeriodglobalConfigPolicy}
    )

    Process {
        'Calling method: ConfigmgrApi-OrgApacheFelixJaasConfigurationSpi' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.OrgApacheFelixJaasConfigurationSpi(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${jaasPerioddefaultRealmName},
            ${jaasPeriodconfigProviderName},
            ${jaasPeriodglobalConfigPolicy}
        )
    }
}

function Invoke-ConfigmgrApiOrgApacheFelixScrScrService {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${dsPeriodloglevel},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${dsPeriodfactoryPeriodenabled},
        [Parameter(Position = 8, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${dsPerioddelayedPeriodkeepInstances},
        [Parameter(Position = 9, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${dsPeriodlockPeriodtimeoutPeriodmilliseconds},
        [Parameter(Position = 10, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${dsPeriodstopPeriodtimeoutPeriodmilliseconds},
        [Parameter(Position = 11, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${dsPeriodglobalPeriodextender}
    )

    Process {
        'Calling method: ConfigmgrApi-OrgApacheFelixScrScrService' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.OrgApacheFelixScrScrService(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${dsPeriodloglevel},
            ${dsPeriodfactoryPeriodenabled},
            ${dsPerioddelayedPeriodkeepInstances},
            ${dsPeriodlockPeriodtimeoutPeriodmilliseconds},
            ${dsPeriodstopPeriodtimeoutPeriodmilliseconds},
            ${dsPeriodglobalPeriodextender}
        )
    }
}

function Invoke-ConfigmgrApiOrgApacheFelixSystemreadyImplComponentsCheck {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${componentsPeriodlist},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${type}
    )

    Process {
        'Calling method: ConfigmgrApi-OrgApacheFelixSystemreadyImplComponentsCheck' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.OrgApacheFelixSystemreadyImplComponentsCheck(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${componentsPeriodlist},
            ${type}
        )
    }
}

function Invoke-ConfigmgrApiOrgApacheFelixSystemreadyImplFrameworkStartCheck {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${timeout},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${targetPeriodstartPeriodlevel},
        [Parameter(Position = 8, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${targetPeriodstartPeriodlevelPeriodpropPeriodname},
        [Parameter(Position = 9, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${type}
    )

    Process {
        'Calling method: ConfigmgrApi-OrgApacheFelixSystemreadyImplFrameworkStartCheck' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.OrgApacheFelixSystemreadyImplFrameworkStartCheck(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${timeout},
            ${targetPeriodstartPeriodlevel},
            ${targetPeriodstartPeriodlevelPeriodpropPeriodname},
            ${type}
        )
    }
}

function Invoke-ConfigmgrApiOrgApacheFelixSystemreadyImplServicesCheck {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${servicesPeriodlist},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${type}
    )

    Process {
        'Calling method: ConfigmgrApi-OrgApacheFelixSystemreadyImplServicesCheck' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.OrgApacheFelixSystemreadyImplServicesCheck(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${servicesPeriodlist},
            ${type}
        )
    }
}

function Invoke-ConfigmgrApiOrgApacheFelixSystemreadyImplServletSystemAliveServlet {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${osgiPeriodhttpPeriodwhiteboardPeriodservletPeriodpattern},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${osgiPeriodhttpPeriodwhiteboardPeriodcontextPeriodselect}
    )

    Process {
        'Calling method: ConfigmgrApi-OrgApacheFelixSystemreadyImplServletSystemAliveServlet' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.OrgApacheFelixSystemreadyImplServletSystemAliveServlet(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${osgiPeriodhttpPeriodwhiteboardPeriodservletPeriodpattern},
            ${osgiPeriodhttpPeriodwhiteboardPeriodcontextPeriodselect}
        )
    }
}

function Invoke-ConfigmgrApiOrgApacheFelixSystemreadyImplServletSystemReadyServlet {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${osgiPeriodhttpPeriodwhiteboardPeriodservletPeriodpattern},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${osgiPeriodhttpPeriodwhiteboardPeriodcontextPeriodselect}
    )

    Process {
        'Calling method: ConfigmgrApi-OrgApacheFelixSystemreadyImplServletSystemReadyServlet' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.OrgApacheFelixSystemreadyImplServletSystemReadyServlet(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${osgiPeriodhttpPeriodwhiteboardPeriodservletPeriodpattern},
            ${osgiPeriodhttpPeriodwhiteboardPeriodcontextPeriodselect}
        )
    }
}

function Invoke-ConfigmgrApiOrgApacheFelixSystemreadySystemReadyMonitor {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${pollPeriodinterval}
    )

    Process {
        'Calling method: ConfigmgrApi-OrgApacheFelixSystemreadySystemReadyMonitor' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.OrgApacheFelixSystemreadySystemReadyMonitor(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${pollPeriodinterval}
        )
    }
}

function Invoke-ConfigmgrApiOrgApacheFelixWebconsoleInternalServletOsgiManager {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${managerPeriodroot},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${httpPeriodservicePeriodfilter},
        [Parameter(Position = 8, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${defaultPeriodrender},
        [Parameter(Position = 9, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${realm},
        [Parameter(Position = 10, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${username},
        [Parameter(Position = 11, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${password},
        [Parameter(Position = 12, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${category},
        [Parameter(Position = 13, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${locale},
        [Parameter(Position = 14, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${loglevel},
        [Parameter(Position = 15, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${plugins}
    )

    Process {
        'Calling method: ConfigmgrApi-OrgApacheFelixWebconsoleInternalServletOsgiManager' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.OrgApacheFelixWebconsoleInternalServletOsgiManager(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${managerPeriodroot},
            ${httpPeriodservicePeriodfilter},
            ${defaultPeriodrender},
            ${realm},
            ${username},
            ${password},
            ${category},
            ${locale},
            ${loglevel},
            ${plugins}
        )
    }
}

function Invoke-ConfigmgrApiOrgApacheFelixWebconsolePluginsEventInternalPluginServlet {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${maxPeriodsize}
    )

    Process {
        'Calling method: ConfigmgrApi-OrgApacheFelixWebconsolePluginsEventInternalPluginServlet' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.OrgApacheFelixWebconsolePluginsEventInternalPluginServlet(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${maxPeriodsize}
        )
    }
}

function Invoke-ConfigmgrApiOrgApacheFelixWebconsolePluginsMemoryusageInternalMemoryUsageCo {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${felixPeriodmemoryusagePerioddumpPeriodthreshold},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${felixPeriodmemoryusagePerioddumpPeriodinterval},
        [Parameter(Position = 8, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${felixPeriodmemoryusagePerioddumpPeriodlocation}
    )

    Process {
        'Calling method: ConfigmgrApi-OrgApacheFelixWebconsolePluginsMemoryusageInternalMemoryUsageCo' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.OrgApacheFelixWebconsolePluginsMemoryusageInternalMemoryUsageCo(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${felixPeriodmemoryusagePerioddumpPeriodthreshold},
            ${felixPeriodmemoryusagePerioddumpPeriodinterval},
            ${felixPeriodmemoryusagePerioddumpPeriodlocation}
        )
    }
}

function Invoke-ConfigmgrApiOrgApacheHttpProxyconfigurator {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${proxyPeriodenabled},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${proxyPeriodhost},
        [Parameter(Position = 8, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${proxyPeriodport},
        [Parameter(Position = 9, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${proxyPerioduser},
        [Parameter(Position = 10, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${proxyPeriodpassword},
        [Parameter(Position = 11, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${proxyPeriodexceptions}
    )

    Process {
        'Calling method: ConfigmgrApi-OrgApacheHttpProxyconfigurator' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.OrgApacheHttpProxyconfigurator(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${proxyPeriodenabled},
            ${proxyPeriodhost},
            ${proxyPeriodport},
            ${proxyPerioduser},
            ${proxyPeriodpassword},
            ${proxyPeriodexceptions}
        )
    }
}

function Invoke-ConfigmgrApiOrgApacheJackrabbitOakPluginsBlobDatastoreDataStoreTextProvider {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${dir}
    )

    Process {
        'Calling method: ConfigmgrApi-OrgApacheJackrabbitOakPluginsBlobDatastoreDataStoreTextProvider' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.OrgApacheJackrabbitOakPluginsBlobDatastoreDataStoreTextProvider(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${dir}
        )
    }
}

function Invoke-ConfigmgrApiOrgApacheJackrabbitOakPluginsBlobDatastoreFileDataStore {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${path}
    )

    Process {
        'Calling method: ConfigmgrApi-OrgApacheJackrabbitOakPluginsBlobDatastoreFileDataStore' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.OrgApacheJackrabbitOakPluginsBlobDatastoreFileDataStore(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${path}
        )
    }
}

function Invoke-ConfigmgrApiOrgApacheJackrabbitOakPluginsDocumentDocumentNodeStoreService {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${mongouri},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${db},
        [Parameter(Position = 8, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${socketKeepAlive},
        [Parameter(Position = 9, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${cache},
        [Parameter(Position = 10, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${nodeCachePercentage},
        [Parameter(Position = 11, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${prevDocCachePercentage},
        [Parameter(Position = 12, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${childrenCachePercentage},
        [Parameter(Position = 13, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${diffCachePercentage},
        [Parameter(Position = 14, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${cacheSegmentCount},
        [Parameter(Position = 15, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${cacheStackMoveDistance},
        [Parameter(Position = 16, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${blobCacheSize},
        [Parameter(Position = 17, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${persistentCache},
        [Parameter(Position = 18, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${journalCache},
        [Parameter(Position = 19, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${customBlobStore},
        [Parameter(Position = 20, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${journalGCInterval},
        [Parameter(Position = 21, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${journalGCMaxAge},
        [Parameter(Position = 22, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${prefetchExternalChanges},
        [Parameter(Position = 23, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${role},
        [Parameter(Position = 24, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${versionGcMaxAgeInSecs},
        [Parameter(Position = 25, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${versionGCExpression},
        [Parameter(Position = 26, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${versionGCTimeLimitInSecs},
        [Parameter(Position = 27, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${blobGcMaxAgeInSecs},
        [Parameter(Position = 28, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${blobTrackSnapshotIntervalInSecs},
        [Parameter(Position = 29, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${repositoryPeriodhome},
        [Parameter(Position = 30, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${maxReplicationLagInSecs},
        [Parameter(Position = 31, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${documentStoreType},
        [Parameter(Position = 32, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${bundlingDisabled},
        [Parameter(Position = 33, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${updateLimit},
        [Parameter(Position = 34, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${persistentCacheIncludes},
        [Parameter(Position = 35, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${leaseCheckMode}
    )

    Process {
        'Calling method: ConfigmgrApi-OrgApacheJackrabbitOakPluginsDocumentDocumentNodeStoreService' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.OrgApacheJackrabbitOakPluginsDocumentDocumentNodeStoreService(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${mongouri},
            ${db},
            ${socketKeepAlive},
            ${cache},
            ${nodeCachePercentage},
            ${prevDocCachePercentage},
            ${childrenCachePercentage},
            ${diffCachePercentage},
            ${cacheSegmentCount},
            ${cacheStackMoveDistance},
            ${blobCacheSize},
            ${persistentCache},
            ${journalCache},
            ${customBlobStore},
            ${journalGCInterval},
            ${journalGCMaxAge},
            ${prefetchExternalChanges},
            ${role},
            ${versionGcMaxAgeInSecs},
            ${versionGCExpression},
            ${versionGCTimeLimitInSecs},
            ${blobGcMaxAgeInSecs},
            ${blobTrackSnapshotIntervalInSecs},
            ${repositoryPeriodhome},
            ${maxReplicationLagInSecs},
            ${documentStoreType},
            ${bundlingDisabled},
            ${updateLimit},
            ${persistentCacheIncludes},
            ${leaseCheckMode}
        )
    }
}

function Invoke-ConfigmgrApiOrgApacheJackrabbitOakPluginsDocumentDocumentNodeStoreServicePre {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${persistentCacheIncludes}
    )

    Process {
        'Calling method: ConfigmgrApi-OrgApacheJackrabbitOakPluginsDocumentDocumentNodeStoreServicePre' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.OrgApacheJackrabbitOakPluginsDocumentDocumentNodeStoreServicePre(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${persistentCacheIncludes}
        )
    }
}

function Invoke-ConfigmgrApiOrgApacheJackrabbitOakPluginsDocumentSecondarySecondaryStoreCac {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${includedPaths},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${enableAsyncObserver},
        [Parameter(Position = 8, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${observerQueueSize}
    )

    Process {
        'Calling method: ConfigmgrApi-OrgApacheJackrabbitOakPluginsDocumentSecondarySecondaryStoreCac' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.OrgApacheJackrabbitOakPluginsDocumentSecondarySecondaryStoreCac(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${includedPaths},
            ${enableAsyncObserver},
            ${observerQueueSize}
        )
    }
}

function Invoke-ConfigmgrApiOrgApacheJackrabbitOakPluginsIndexAsyncIndexerService {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${asyncConfigs},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${leaseTimeOutMinutes},
        [Parameter(Position = 8, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${failingIndexTimeoutSeconds},
        [Parameter(Position = 9, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${errorWarnIntervalSeconds}
    )

    Process {
        'Calling method: ConfigmgrApi-OrgApacheJackrabbitOakPluginsIndexAsyncIndexerService' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.OrgApacheJackrabbitOakPluginsIndexAsyncIndexerService(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${asyncConfigs},
            ${leaseTimeOutMinutes},
            ${failingIndexTimeoutSeconds},
            ${errorWarnIntervalSeconds}
        )
    }
}

function Invoke-ConfigmgrApiOrgApacheJackrabbitOakPluginsIndexLuceneLuceneIndexProviderServ {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${disabled},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${debug},
        [Parameter(Position = 8, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${localIndexDir},
        [Parameter(Position = 9, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${enableOpenIndexAsync},
        [Parameter(Position = 10, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${threadPoolSize},
        [Parameter(Position = 11, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${prefetchIndexFiles},
        [Parameter(Position = 12, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${extractedTextCacheSizeInMB},
        [Parameter(Position = 13, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${extractedTextCacheExpiryInSecs},
        [Parameter(Position = 14, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${alwaysUsePreExtractedCache},
        [Parameter(Position = 15, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${booleanClauseLimit},
        [Parameter(Position = 16, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${enableHybridIndexing},
        [Parameter(Position = 17, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${hybridQueueSize},
        [Parameter(Position = 18, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${disableStoredIndexDefinition},
        [Parameter(Position = 19, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${deletedBlobsCollectionEnabled},
        [Parameter(Position = 20, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${propIndexCleanerIntervalInSecs},
        [Parameter(Position = 21, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${enableSingleBlobIndexFiles}
    )

    Process {
        'Calling method: ConfigmgrApi-OrgApacheJackrabbitOakPluginsIndexLuceneLuceneIndexProviderServ' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.OrgApacheJackrabbitOakPluginsIndexLuceneLuceneIndexProviderServ(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${disabled},
            ${debug},
            ${localIndexDir},
            ${enableOpenIndexAsync},
            ${threadPoolSize},
            ${prefetchIndexFiles},
            ${extractedTextCacheSizeInMB},
            ${extractedTextCacheExpiryInSecs},
            ${alwaysUsePreExtractedCache},
            ${booleanClauseLimit},
            ${enableHybridIndexing},
            ${hybridQueueSize},
            ${disableStoredIndexDefinition},
            ${deletedBlobsCollectionEnabled},
            ${propIndexCleanerIntervalInSecs},
            ${enableSingleBlobIndexFiles}
        )
    }
}

function Invoke-ConfigmgrApiOrgApacheJackrabbitOakPluginsIndexSolrOsgiEmbeddedSolrServerCo {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${solrPeriodhomePeriodpath},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${solrPeriodcorePeriodname}
    )

    Process {
        'Calling method: ConfigmgrApi-OrgApacheJackrabbitOakPluginsIndexSolrOsgiEmbeddedSolrServerCo' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.OrgApacheJackrabbitOakPluginsIndexSolrOsgiEmbeddedSolrServerCo(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${solrPeriodhomePeriodpath},
            ${solrPeriodcorePeriodname}
        )
    }
}

function Invoke-ConfigmgrApiOrgApacheJackrabbitOakPluginsIndexSolrOsgiNodeStateSolrServers {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${enabled}
    )

    Process {
        'Calling method: ConfigmgrApi-OrgApacheJackrabbitOakPluginsIndexSolrOsgiNodeStateSolrServers' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.OrgApacheJackrabbitOakPluginsIndexSolrOsgiNodeStateSolrServers(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${enabled}
        )
    }
}

function Invoke-ConfigmgrApiOrgApacheJackrabbitOakPluginsIndexSolrOsgiOakSolrConfiguration {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${pathPerioddescPeriodfield},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${pathPeriodchildPeriodfield},
        [Parameter(Position = 8, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${pathPeriodparentPeriodfield},
        [Parameter(Position = 9, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${pathPeriodexactPeriodfield},
        [Parameter(Position = 10, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${catchPeriodallPeriodfield},
        [Parameter(Position = 11, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${collapsedPeriodpathPeriodfield},
        [Parameter(Position = 12, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${pathPerioddepthPeriodfield},
        [Parameter(Position = 13, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${commitPeriodpolicy},
        [Parameter(Position = 14, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${rows},
        [Parameter(Position = 15, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${pathPeriodrestrictions},
        [Parameter(Position = 16, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${propertyPeriodrestrictions},
        [Parameter(Position = 17, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${primarytypesPeriodrestrictions},
        [Parameter(Position = 18, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${ignoredPeriodproperties},
        [Parameter(Position = 19, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${usedPeriodproperties},
        [Parameter(Position = 20, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${typePeriodmappings},
        [Parameter(Position = 21, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertyPeriodmappings},
        [Parameter(Position = 22, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${collapsePeriodjcrcontentPeriodnodes}
    )

    Process {
        'Calling method: ConfigmgrApi-OrgApacheJackrabbitOakPluginsIndexSolrOsgiOakSolrConfiguration' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.OrgApacheJackrabbitOakPluginsIndexSolrOsgiOakSolrConfiguration(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${pathPerioddescPeriodfield},
            ${pathPeriodchildPeriodfield},
            ${pathPeriodparentPeriodfield},
            ${pathPeriodexactPeriodfield},
            ${catchPeriodallPeriodfield},
            ${collapsedPeriodpathPeriodfield},
            ${pathPerioddepthPeriodfield},
            ${commitPeriodpolicy},
            ${rows},
            ${pathPeriodrestrictions},
            ${propertyPeriodrestrictions},
            ${primarytypesPeriodrestrictions},
            ${ignoredPeriodproperties},
            ${usedPeriodproperties},
            ${typePeriodmappings},
            ${propertyPeriodmappings},
            ${collapsePeriodjcrcontentPeriodnodes}
        )
    }
}

function Invoke-ConfigmgrApiOrgApacheJackrabbitOakPluginsIndexSolrOsgiRemoteSolrServerConf {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${solrPeriodhttpPeriodurl},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${solrPeriodzkPeriodhost},
        [Parameter(Position = 8, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${solrPeriodcollection},
        [Parameter(Position = 9, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${solrPeriodsocketPeriodtimeout},
        [Parameter(Position = 10, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${solrPeriodconnectionPeriodtimeout},
        [Parameter(Position = 11, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${solrPeriodshardsPeriodno},
        [Parameter(Position = 12, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${solrPeriodreplicationPeriodfactor},
        [Parameter(Position = 13, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${solrPeriodconfPerioddir}
    )

    Process {
        'Calling method: ConfigmgrApi-OrgApacheJackrabbitOakPluginsIndexSolrOsgiRemoteSolrServerConf' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.OrgApacheJackrabbitOakPluginsIndexSolrOsgiRemoteSolrServerConf(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${solrPeriodhttpPeriodurl},
            ${solrPeriodzkPeriodhost},
            ${solrPeriodcollection},
            ${solrPeriodsocketPeriodtimeout},
            ${solrPeriodconnectionPeriodtimeout},
            ${solrPeriodshardsPeriodno},
            ${solrPeriodreplicationPeriodfactor},
            ${solrPeriodconfPerioddir}
        )
    }
}

function Invoke-ConfigmgrApiOrgApacheJackrabbitOakPluginsIndexSolrOsgiSolrQueryIndexProvid {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${queryPeriodaggregation}
    )

    Process {
        'Calling method: ConfigmgrApi-OrgApacheJackrabbitOakPluginsIndexSolrOsgiSolrQueryIndexProvid' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.OrgApacheJackrabbitOakPluginsIndexSolrOsgiSolrQueryIndexProvid(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${queryPeriodaggregation}
        )
    }
}

function Invoke-ConfigmgrApiOrgApacheJackrabbitOakPluginsIndexSolrOsgiSolrServerProviderSe {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${serverPeriodtype}
    )

    Process {
        'Calling method: ConfigmgrApi-OrgApacheJackrabbitOakPluginsIndexSolrOsgiSolrServerProviderSe' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.OrgApacheJackrabbitOakPluginsIndexSolrOsgiSolrServerProviderSe(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${serverPeriodtype}
        )
    }
}

function Invoke-ConfigmgrApiOrgApacheJackrabbitOakPluginsMetricStatisticsProviderFactory {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${providerType}
    )

    Process {
        'Calling method: ConfigmgrApi-OrgApacheJackrabbitOakPluginsMetricStatisticsProviderFactory' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.OrgApacheJackrabbitOakPluginsMetricStatisticsProviderFactory(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${providerType}
        )
    }
}

function Invoke-ConfigmgrApiOrgApacheJackrabbitOakPluginsObservationChangeCollectorProvider {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${maxItems},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${maxPathDepth},
        [Parameter(Position = 8, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${enabled}
    )

    Process {
        'Calling method: ConfigmgrApi-OrgApacheJackrabbitOakPluginsObservationChangeCollectorProvider' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.OrgApacheJackrabbitOakPluginsObservationChangeCollectorProvider(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${maxItems},
            ${maxPathDepth},
            ${enabled}
        )
    }
}

function Invoke-ConfigmgrApiOrgApacheJackrabbitOakQueryQueryEngineSettingsService {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${queryLimitInMemory},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${queryLimitReads},
        [Parameter(Position = 8, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${queryFailTraversal},
        [Parameter(Position = 9, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${fastQuerySize}
    )

    Process {
        'Calling method: ConfigmgrApi-OrgApacheJackrabbitOakQueryQueryEngineSettingsService' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.OrgApacheJackrabbitOakQueryQueryEngineSettingsService(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${queryLimitInMemory},
            ${queryLimitReads},
            ${queryFailTraversal},
            ${fastQuerySize}
        )
    }
}

function Invoke-ConfigmgrApiOrgApacheJackrabbitOakSecurityAuthenticationAuthenticationConfig {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${orgPeriodapachePeriodjackrabbitPeriodoakPeriodauthenticationPeriodappName},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${orgPeriodapachePeriodjackrabbitPeriodoakPeriodauthenticationPeriodconfigSpiName}
    )

    Process {
        'Calling method: ConfigmgrApi-OrgApacheJackrabbitOakSecurityAuthenticationAuthenticationConfig' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.OrgApacheJackrabbitOakSecurityAuthenticationAuthenticationConfig(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${orgPeriodapachePeriodjackrabbitPeriodoakPeriodauthenticationPeriodappName},
            ${orgPeriodapachePeriodjackrabbitPeriodoakPeriodauthenticationPeriodconfigSpiName}
        )
    }
}

function Invoke-ConfigmgrApiOrgApacheJackrabbitOakSecurityAuthenticationLdapImplLdapIdenti {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${providerPeriodname},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${hostPeriodname},
        [Parameter(Position = 8, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${hostPeriodport},
        [Parameter(Position = 9, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${hostPeriodssl},
        [Parameter(Position = 10, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${hostPeriodtls},
        [Parameter(Position = 11, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${hostPeriodnoCertCheck},
        [Parameter(Position = 12, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${bindPerioddn},
        [Parameter(Position = 13, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${bindPeriodpassword},
        [Parameter(Position = 14, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${searchTimeout},
        [Parameter(Position = 15, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${adminPoolPeriodmaxActive},
        [Parameter(Position = 16, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${adminPoolPeriodlookupOnValidate},
        [Parameter(Position = 17, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${userPoolPeriodmaxActive},
        [Parameter(Position = 18, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${userPoolPeriodlookupOnValidate},
        [Parameter(Position = 19, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${userPeriodbaseDN},
        [Parameter(Position = 20, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${userPeriodobjectclass},
        [Parameter(Position = 21, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${userPeriodidAttribute},
        [Parameter(Position = 22, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${userPeriodextraFilter},
        [Parameter(Position = 23, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${userPeriodmakeDnPath},
        [Parameter(Position = 24, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${groupPeriodbaseDN},
        [Parameter(Position = 25, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${groupPeriodobjectclass},
        [Parameter(Position = 26, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${groupPeriodnameAttribute},
        [Parameter(Position = 27, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${groupPeriodextraFilter},
        [Parameter(Position = 28, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${groupPeriodmakeDnPath},
        [Parameter(Position = 29, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${groupPeriodmemberAttribute},
        [Parameter(Position = 30, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${useUidForExtId},
        [Parameter(Position = 31, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${customattributes}
    )

    Process {
        'Calling method: ConfigmgrApi-OrgApacheJackrabbitOakSecurityAuthenticationLdapImplLdapIdenti' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.OrgApacheJackrabbitOakSecurityAuthenticationLdapImplLdapIdenti(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${providerPeriodname},
            ${hostPeriodname},
            ${hostPeriodport},
            ${hostPeriodssl},
            ${hostPeriodtls},
            ${hostPeriodnoCertCheck},
            ${bindPerioddn},
            ${bindPeriodpassword},
            ${searchTimeout},
            ${adminPoolPeriodmaxActive},
            ${adminPoolPeriodlookupOnValidate},
            ${userPoolPeriodmaxActive},
            ${userPoolPeriodlookupOnValidate},
            ${userPeriodbaseDN},
            ${userPeriodobjectclass},
            ${userPeriodidAttribute},
            ${userPeriodextraFilter},
            ${userPeriodmakeDnPath},
            ${groupPeriodbaseDN},
            ${groupPeriodobjectclass},
            ${groupPeriodnameAttribute},
            ${groupPeriodextraFilter},
            ${groupPeriodmakeDnPath},
            ${groupPeriodmemberAttribute},
            ${useUidForExtId},
            ${customattributes}
        )
    }
}

function Invoke-ConfigmgrApiOrgApacheJackrabbitOakSecurityAuthenticationTokenTokenConfigura {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${tokenExpiration},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${tokenLength},
        [Parameter(Position = 8, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${tokenRefresh},
        [Parameter(Position = 9, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${tokenCleanupThreshold},
        [Parameter(Position = 10, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${passwordHashAlgorithm},
        [Parameter(Position = 11, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${passwordHashIterations},
        [Parameter(Position = 12, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${passwordSaltSize}
    )

    Process {
        'Calling method: ConfigmgrApi-OrgApacheJackrabbitOakSecurityAuthenticationTokenTokenConfigura' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.OrgApacheJackrabbitOakSecurityAuthenticationTokenTokenConfigura(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${tokenExpiration},
            ${tokenLength},
            ${tokenRefresh},
            ${tokenCleanupThreshold},
            ${passwordHashAlgorithm},
            ${passwordHashIterations},
            ${passwordSaltSize}
        )
    }
}

function Invoke-ConfigmgrApiOrgApacheJackrabbitOakSecurityAuthorizationAuthorizationConfigur {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${permissionsJr2},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${importBehavior},
        [Parameter(Position = 8, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${readPaths},
        [Parameter(Position = 9, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${administrativePrincipals},
        [Parameter(Position = 10, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${configurationRanking}
    )

    Process {
        'Calling method: ConfigmgrApi-OrgApacheJackrabbitOakSecurityAuthorizationAuthorizationConfigur' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.OrgApacheJackrabbitOakSecurityAuthorizationAuthorizationConfigur(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${permissionsJr2},
            ${importBehavior},
            ${readPaths},
            ${administrativePrincipals},
            ${configurationRanking}
        )
    }
}

function Invoke-ConfigmgrApiOrgApacheJackrabbitOakSecurityInternalSecurityProviderRegistrati {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${requiredServicePids},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${authorizationCompositionType}
    )

    Process {
        'Calling method: ConfigmgrApi-OrgApacheJackrabbitOakSecurityInternalSecurityProviderRegistrati' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.OrgApacheJackrabbitOakSecurityInternalSecurityProviderRegistrati(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${requiredServicePids},
            ${authorizationCompositionType}
        )
    }
}

function Invoke-ConfigmgrApiOrgApacheJackrabbitOakSecurityUserRandomAuthorizableNodeName {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${length}
    )

    Process {
        'Calling method: ConfigmgrApi-OrgApacheJackrabbitOakSecurityUserRandomAuthorizableNodeName' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.OrgApacheJackrabbitOakSecurityUserRandomAuthorizableNodeName(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${length}
        )
    }
}

function Invoke-ConfigmgrApiOrgApacheJackrabbitOakSecurityUserUserConfigurationImpl {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${usersPath},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${groupsPath},
        [Parameter(Position = 8, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${systemRelativePath},
        [Parameter(Position = 9, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${defaultDepth},
        [Parameter(Position = 10, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${importBehavior},
        [Parameter(Position = 11, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${passwordHashAlgorithm},
        [Parameter(Position = 12, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${passwordHashIterations},
        [Parameter(Position = 13, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${passwordSaltSize},
        [Parameter(Position = 14, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${omitAdminPw},
        [Parameter(Position = 15, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${supportAutoSave},
        [Parameter(Position = 16, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${passwordMaxAge},
        [Parameter(Position = 17, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${initialPasswordChange},
        [Parameter(Position = 18, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${passwordHistorySize},
        [Parameter(Position = 19, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${passwordExpiryForAdmin},
        [Parameter(Position = 20, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${cacheExpiration},
        [Parameter(Position = 21, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${enableRFC7613UsercaseMappedProfile}
    )

    Process {
        'Calling method: ConfigmgrApi-OrgApacheJackrabbitOakSecurityUserUserConfigurationImpl' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.OrgApacheJackrabbitOakSecurityUserUserConfigurationImpl(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${usersPath},
            ${groupsPath},
            ${systemRelativePath},
            ${defaultDepth},
            ${importBehavior},
            ${passwordHashAlgorithm},
            ${passwordHashIterations},
            ${passwordSaltSize},
            ${omitAdminPw},
            ${supportAutoSave},
            ${passwordMaxAge},
            ${initialPasswordChange},
            ${passwordHistorySize},
            ${passwordExpiryForAdmin},
            ${cacheExpiration},
            ${enableRFC7613UsercaseMappedProfile}
        )
    }
}

function Invoke-ConfigmgrApiOrgApacheJackrabbitOakSegmentAzureAzureSegmentStoreService {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${accountName},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${containerName},
        [Parameter(Position = 8, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${accessKey},
        [Parameter(Position = 9, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${rootPath},
        [Parameter(Position = 10, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${connectionURL}
    )

    Process {
        'Calling method: ConfigmgrApi-OrgApacheJackrabbitOakSegmentAzureAzureSegmentStoreService' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.OrgApacheJackrabbitOakSegmentAzureAzureSegmentStoreService(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${accountName},
            ${containerName},
            ${accessKey},
            ${rootPath},
            ${connectionURL}
        )
    }
}

function Invoke-ConfigmgrApiOrgApacheJackrabbitOakSegmentSegmentNodeStoreFactory {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${repositoryPeriodhome},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${tarmkPeriodmode},
        [Parameter(Position = 8, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${tarmkPeriodsize},
        [Parameter(Position = 9, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${segmentCachePeriodsize},
        [Parameter(Position = 10, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${stringCachePeriodsize},
        [Parameter(Position = 11, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${templateCachePeriodsize},
        [Parameter(Position = 12, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${stringDeduplicationCachePeriodsize},
        [Parameter(Position = 13, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${templateDeduplicationCachePeriodsize},
        [Parameter(Position = 14, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${nodeDeduplicationCachePeriodsize},
        [Parameter(Position = 15, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${pauseCompaction},
        [Parameter(Position = 16, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${compactionPeriodretryCount},
        [Parameter(Position = 17, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${compactionPeriodforcePeriodtimeout},
        [Parameter(Position = 18, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${compactionPeriodsizeDeltaEstimation},
        [Parameter(Position = 19, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${compactionPerioddisableEstimation},
        [Parameter(Position = 20, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${compactionPeriodretainedGenerations},
        [Parameter(Position = 21, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${compactionPeriodmemoryThreshold},
        [Parameter(Position = 22, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${compactionPeriodprogressLog},
        [Parameter(Position = 23, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${standby},
        [Parameter(Position = 24, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${customBlobStore},
        [Parameter(Position = 25, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${customSegmentStore},
        [Parameter(Position = 26, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${splitPersistence},
        [Parameter(Position = 27, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${repositoryPeriodbackupPerioddir},
        [Parameter(Position = 28, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${blobGcMaxAgeInSecs},
        [Parameter(Position = 29, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${blobTrackSnapshotIntervalInSecs},
        [Parameter(Position = 30, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${role},
        [Parameter(Position = 31, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${registerDescriptors},
        [Parameter(Position = 32, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${dispatchChanges}
    )

    Process {
        'Calling method: ConfigmgrApi-OrgApacheJackrabbitOakSegmentSegmentNodeStoreFactory' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.OrgApacheJackrabbitOakSegmentSegmentNodeStoreFactory(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${repositoryPeriodhome},
            ${tarmkPeriodmode},
            ${tarmkPeriodsize},
            ${segmentCachePeriodsize},
            ${stringCachePeriodsize},
            ${templateCachePeriodsize},
            ${stringDeduplicationCachePeriodsize},
            ${templateDeduplicationCachePeriodsize},
            ${nodeDeduplicationCachePeriodsize},
            ${pauseCompaction},
            ${compactionPeriodretryCount},
            ${compactionPeriodforcePeriodtimeout},
            ${compactionPeriodsizeDeltaEstimation},
            ${compactionPerioddisableEstimation},
            ${compactionPeriodretainedGenerations},
            ${compactionPeriodmemoryThreshold},
            ${compactionPeriodprogressLog},
            ${standby},
            ${customBlobStore},
            ${customSegmentStore},
            ${splitPersistence},
            ${repositoryPeriodbackupPerioddir},
            ${blobGcMaxAgeInSecs},
            ${blobTrackSnapshotIntervalInSecs},
            ${role},
            ${registerDescriptors},
            ${dispatchChanges}
        )
    }
}

function Invoke-ConfigmgrApiOrgApacheJackrabbitOakSegmentSegmentNodeStoreMonitorService {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${commitsTrackerWriterGroups}
    )

    Process {
        'Calling method: ConfigmgrApi-OrgApacheJackrabbitOakSegmentSegmentNodeStoreMonitorService' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.OrgApacheJackrabbitOakSegmentSegmentNodeStoreMonitorService(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${commitsTrackerWriterGroups}
        )
    }
}

function Invoke-ConfigmgrApiOrgApacheJackrabbitOakSegmentSegmentNodeStoreService {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${repositoryPeriodhome},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${tarmkPeriodmode},
        [Parameter(Position = 8, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${tarmkPeriodsize},
        [Parameter(Position = 9, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${segmentCachePeriodsize},
        [Parameter(Position = 10, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${stringCachePeriodsize},
        [Parameter(Position = 11, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${templateCachePeriodsize},
        [Parameter(Position = 12, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${stringDeduplicationCachePeriodsize},
        [Parameter(Position = 13, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${templateDeduplicationCachePeriodsize},
        [Parameter(Position = 14, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${nodeDeduplicationCachePeriodsize},
        [Parameter(Position = 15, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${pauseCompaction},
        [Parameter(Position = 16, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${compactionPeriodretryCount},
        [Parameter(Position = 17, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${compactionPeriodforcePeriodtimeout},
        [Parameter(Position = 18, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${compactionPeriodsizeDeltaEstimation},
        [Parameter(Position = 19, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${compactionPerioddisableEstimation},
        [Parameter(Position = 20, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${compactionPeriodretainedGenerations},
        [Parameter(Position = 21, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${compactionPeriodmemoryThreshold},
        [Parameter(Position = 22, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${compactionPeriodprogressLog},
        [Parameter(Position = 23, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${standby},
        [Parameter(Position = 24, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${customBlobStore},
        [Parameter(Position = 25, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${customSegmentStore},
        [Parameter(Position = 26, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${splitPersistence},
        [Parameter(Position = 27, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${repositoryPeriodbackupPerioddir},
        [Parameter(Position = 28, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${blobGcMaxAgeInSecs},
        [Parameter(Position = 29, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${blobTrackSnapshotIntervalInSecs}
    )

    Process {
        'Calling method: ConfigmgrApi-OrgApacheJackrabbitOakSegmentSegmentNodeStoreService' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.OrgApacheJackrabbitOakSegmentSegmentNodeStoreService(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${repositoryPeriodhome},
            ${tarmkPeriodmode},
            ${tarmkPeriodsize},
            ${segmentCachePeriodsize},
            ${stringCachePeriodsize},
            ${templateCachePeriodsize},
            ${stringDeduplicationCachePeriodsize},
            ${templateDeduplicationCachePeriodsize},
            ${nodeDeduplicationCachePeriodsize},
            ${pauseCompaction},
            ${compactionPeriodretryCount},
            ${compactionPeriodforcePeriodtimeout},
            ${compactionPeriodsizeDeltaEstimation},
            ${compactionPerioddisableEstimation},
            ${compactionPeriodretainedGenerations},
            ${compactionPeriodmemoryThreshold},
            ${compactionPeriodprogressLog},
            ${standby},
            ${customBlobStore},
            ${customSegmentStore},
            ${splitPersistence},
            ${repositoryPeriodbackupPerioddir},
            ${blobGcMaxAgeInSecs},
            ${blobTrackSnapshotIntervalInSecs}
        )
    }
}

function Invoke-ConfigmgrApiOrgApacheJackrabbitOakSegmentStandbyStoreStandbyStoreService {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${orgPeriodapachePeriodslingPeriodinstallerPeriodconfigurationPeriodpersist},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${mode},
        [Parameter(Position = 8, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${port},
        [Parameter(Position = 9, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${primaryPeriodhost},
        [Parameter(Position = 10, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${interval},
        [Parameter(Position = 11, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${primaryPeriodallowedClientIpRanges},
        [Parameter(Position = 12, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${secure},
        [Parameter(Position = 13, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${standbyPeriodreadtimeout},
        [Parameter(Position = 14, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${standbyPeriodautoclean}
    )

    Process {
        'Calling method: ConfigmgrApi-OrgApacheJackrabbitOakSegmentStandbyStoreStandbyStoreService' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.OrgApacheJackrabbitOakSegmentStandbyStoreStandbyStoreService(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${orgPeriodapachePeriodslingPeriodinstallerPeriodconfigurationPeriodpersist},
            ${mode},
            ${port},
            ${primaryPeriodhost},
            ${interval},
            ${primaryPeriodallowedClientIpRanges},
            ${secure},
            ${standbyPeriodreadtimeout},
            ${standbyPeriodautoclean}
        )
    }
}

function Invoke-ConfigmgrApiOrgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplDe {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${handlerPeriodname},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${userPeriodexpirationTime},
        [Parameter(Position = 8, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${userPeriodautoMembership},
        [Parameter(Position = 9, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${userPeriodpropertyMapping},
        [Parameter(Position = 10, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${userPeriodpathPrefix},
        [Parameter(Position = 11, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${userPeriodmembershipExpTime},
        [Parameter(Position = 12, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${userPeriodmembershipNestingDepth},
        [Parameter(Position = 13, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${userPerioddynamicMembership},
        [Parameter(Position = 14, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${userPerioddisableMissing},
        [Parameter(Position = 15, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${groupPeriodexpirationTime},
        [Parameter(Position = 16, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${groupPeriodautoMembership},
        [Parameter(Position = 17, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${groupPeriodpropertyMapping},
        [Parameter(Position = 18, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${groupPeriodpathPrefix},
        [Parameter(Position = 19, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${enableRFC7613UsercaseMappedProfile}
    )

    Process {
        'Calling method: ConfigmgrApi-OrgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplDe' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.OrgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplDe(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${handlerPeriodname},
            ${userPeriodexpirationTime},
            ${userPeriodautoMembership},
            ${userPeriodpropertyMapping},
            ${userPeriodpathPrefix},
            ${userPeriodmembershipExpTime},
            ${userPeriodmembershipNestingDepth},
            ${userPerioddynamicMembership},
            ${userPerioddisableMissing},
            ${groupPeriodexpirationTime},
            ${groupPeriodautoMembership},
            ${groupPeriodpropertyMapping},
            ${groupPeriodpathPrefix},
            ${enableRFC7613UsercaseMappedProfile}
        )
    }
}

function Invoke-ConfigmgrApiOrgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplEx {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${jaasPeriodranking},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${jaasPeriodcontrolFlag},
        [Parameter(Position = 8, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${jaasPeriodrealmName},
        [Parameter(Position = 9, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${idpPeriodname},
        [Parameter(Position = 10, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${syncPeriodhandlerName}
    )

    Process {
        'Calling method: ConfigmgrApi-OrgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplEx' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.OrgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplEx(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${jaasPeriodranking},
            ${jaasPeriodcontrolFlag},
            ${jaasPeriodrealmName},
            ${idpPeriodname},
            ${syncPeriodhandlerName}
        )
    }
}

function Invoke-ConfigmgrApiOrgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplPr {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${protectExternalId}
    )

    Process {
        'Calling method: ConfigmgrApi-OrgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplPr' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.OrgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplPr(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${protectExternalId}
        )
    }
}

function Invoke-ConfigmgrApiOrgApacheJackrabbitOakSpiSecurityAuthorizationCugImplCugConfi {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${cugSupportedPaths},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${cugEnabled},
        [Parameter(Position = 8, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${configurationRanking}
    )

    Process {
        'Calling method: ConfigmgrApi-OrgApacheJackrabbitOakSpiSecurityAuthorizationCugImplCugConfi' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.OrgApacheJackrabbitOakSpiSecurityAuthorizationCugImplCugConfi(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${cugSupportedPaths},
            ${cugEnabled},
            ${configurationRanking}
        )
    }
}

function Invoke-ConfigmgrApiOrgApacheJackrabbitOakSpiSecurityAuthorizationCugImplCugExclu {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${principalNames}
    )

    Process {
        'Calling method: ConfigmgrApi-OrgApacheJackrabbitOakSpiSecurityAuthorizationCugImplCugExclu' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.OrgApacheJackrabbitOakSpiSecurityAuthorizationCugImplCugExclu(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${principalNames}
        )
    }
}

function Invoke-ConfigmgrApiOrgApacheJackrabbitOakSpiSecurityUserActionDefaultAuthorizable {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${enabledActions},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${userPrivilegeNames},
        [Parameter(Position = 8, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${groupPrivilegeNames},
        [Parameter(Position = 9, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${constraint}
    )

    Process {
        'Calling method: ConfigmgrApi-OrgApacheJackrabbitOakSpiSecurityUserActionDefaultAuthorizable' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.OrgApacheJackrabbitOakSpiSecurityUserActionDefaultAuthorizable(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${enabledActions},
            ${userPrivilegeNames},
            ${groupPrivilegeNames},
            ${constraint}
        )
    }
}

function Invoke-ConfigmgrApiOrgApacheJackrabbitVaultPackagingImplPackagingImpl {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${packageRoots}
    )

    Process {
        'Calling method: ConfigmgrApi-OrgApacheJackrabbitVaultPackagingImplPackagingImpl' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.OrgApacheJackrabbitVaultPackagingImplPackagingImpl(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${packageRoots}
        )
    }
}

function Invoke-ConfigmgrApiOrgApacheJackrabbitVaultPackagingRegistryImplFSPackageRegistry {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${homePath}
    )

    Process {
        'Calling method: ConfigmgrApi-OrgApacheJackrabbitVaultPackagingRegistryImplFSPackageRegistry' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.OrgApacheJackrabbitVaultPackagingRegistryImplFSPackageRegistry(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${homePath}
        )
    }
}

function Invoke-ConfigmgrApiOrgApacheSlingAuthCoreImplLogoutServlet {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${slingPeriodservletPeriodmethods},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${slingPeriodservletPeriodpaths}
    )

    Process {
        'Calling method: ConfigmgrApi-OrgApacheSlingAuthCoreImplLogoutServlet' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.OrgApacheSlingAuthCoreImplLogoutServlet(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${slingPeriodservletPeriodmethods},
            ${slingPeriodservletPeriodpaths}
        )
    }
}

function Invoke-ConfigmgrApiOrgApacheSlingCaconfigImplConfigurationBindingsValueProvider {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${enabled}
    )

    Process {
        'Calling method: ConfigmgrApi-OrgApacheSlingCaconfigImplConfigurationBindingsValueProvider' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.OrgApacheSlingCaconfigImplConfigurationBindingsValueProvider(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${enabled}
        )
    }
}

function Invoke-ConfigmgrApiOrgApacheSlingCaconfigImplConfigurationResolverImpl {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${configBucketNames}
    )

    Process {
        'Calling method: ConfigmgrApi-OrgApacheSlingCaconfigImplConfigurationResolverImpl' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.OrgApacheSlingCaconfigImplConfigurationResolverImpl(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${configBucketNames}
        )
    }
}

function Invoke-ConfigmgrApiOrgApacheSlingCaconfigImplDefDefaultConfigurationInheritanceStra {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${enabled},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${configPropertyInheritancePropertyNames}
    )

    Process {
        'Calling method: ConfigmgrApi-OrgApacheSlingCaconfigImplDefDefaultConfigurationInheritanceStra' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.OrgApacheSlingCaconfigImplDefDefaultConfigurationInheritanceStra(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${enabled},
            ${configPropertyInheritancePropertyNames}
        )
    }
}

function Invoke-ConfigmgrApiOrgApacheSlingCaconfigImplDefDefaultConfigurationPersistenceStra {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${enabled}
    )

    Process {
        'Calling method: ConfigmgrApi-OrgApacheSlingCaconfigImplDefDefaultConfigurationPersistenceStra' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.OrgApacheSlingCaconfigImplDefDefaultConfigurationPersistenceStra(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${enabled}
        )
    }
}

function Invoke-ConfigmgrApiOrgApacheSlingCaconfigImplOverrideOsgiConfigurationOverrideProvi {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${description},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${overrides},
        [Parameter(Position = 8, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${enabled},
        [Parameter(Position = 9, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${servicePeriodranking}
    )

    Process {
        'Calling method: ConfigmgrApi-OrgApacheSlingCaconfigImplOverrideOsgiConfigurationOverrideProvi' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.OrgApacheSlingCaconfigImplOverrideOsgiConfigurationOverrideProvi(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${description},
            ${overrides},
            ${enabled},
            ${servicePeriodranking}
        )
    }
}

function Invoke-ConfigmgrApiOrgApacheSlingCaconfigImplOverrideSystemPropertyConfigurationOve {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${enabled},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${servicePeriodranking}
    )

    Process {
        'Calling method: ConfigmgrApi-OrgApacheSlingCaconfigImplOverrideSystemPropertyConfigurationOve' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.OrgApacheSlingCaconfigImplOverrideSystemPropertyConfigurationOve(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${enabled},
            ${servicePeriodranking}
        )
    }
}

function Invoke-ConfigmgrApiOrgApacheSlingCaconfigManagementImplConfigurationManagementSetti {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${ignorePropertyNameRegex},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${configCollectionPropertiesResourceNames}
    )

    Process {
        'Calling method: ConfigmgrApi-OrgApacheSlingCaconfigManagementImplConfigurationManagementSetti' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.OrgApacheSlingCaconfigManagementImplConfigurationManagementSetti(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${ignorePropertyNameRegex},
            ${configCollectionPropertiesResourceNames}
        )
    }
}

function Invoke-ConfigmgrApiOrgApacheSlingCaconfigResourceImplDefDefaultConfigurationResour {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${enabled},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${configPath},
        [Parameter(Position = 8, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${fallbackPaths},
        [Parameter(Position = 9, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${configCollectionInheritancePropertyNames}
    )

    Process {
        'Calling method: ConfigmgrApi-OrgApacheSlingCaconfigResourceImplDefDefaultConfigurationResour' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.OrgApacheSlingCaconfigResourceImplDefDefaultConfigurationResour(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${enabled},
            ${configPath},
            ${fallbackPaths},
            ${configCollectionInheritancePropertyNames}
        )
    }
}

function Invoke-ConfigmgrApiOrgApacheSlingCaconfigResourceImplDefDefaultContextPathStrategy {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${enabled},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${configRefResourceNames},
        [Parameter(Position = 8, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${configRefPropertyNames},
        [Parameter(Position = 9, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${servicePeriodranking}
    )

    Process {
        'Calling method: ConfigmgrApi-OrgApacheSlingCaconfigResourceImplDefDefaultContextPathStrategy' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.OrgApacheSlingCaconfigResourceImplDefDefaultContextPathStrategy(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${enabled},
            ${configRefResourceNames},
            ${configRefPropertyNames},
            ${servicePeriodranking}
        )
    }
}

function Invoke-ConfigmgrApiOrgApacheSlingCommonsHtmlInternalTagsoupHtmlParser {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${parserPeriodfeatures}
    )

    Process {
        'Calling method: ConfigmgrApi-OrgApacheSlingCommonsHtmlInternalTagsoupHtmlParser' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.OrgApacheSlingCommonsHtmlInternalTagsoupHtmlParser(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${parserPeriodfeatures}
        )
    }
}

function Invoke-ConfigmgrApiOrgApacheSlingCommonsLogLogManager {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${orgPeriodapachePeriodslingPeriodcommonsPeriodlogPeriodlevel},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${orgPeriodapachePeriodslingPeriodcommonsPeriodlogPeriodfile},
        [Parameter(Position = 8, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${orgPeriodapachePeriodslingPeriodcommonsPeriodlogPeriodfilePeriodnumber},
        [Parameter(Position = 9, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${orgPeriodapachePeriodslingPeriodcommonsPeriodlogPeriodfilePeriodsize},
        [Parameter(Position = 10, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${orgPeriodapachePeriodslingPeriodcommonsPeriodlogPeriodpattern},
        [Parameter(Position = 11, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${orgPeriodapachePeriodslingPeriodcommonsPeriodlogPeriodconfigurationFile},
        [Parameter(Position = 12, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${orgPeriodapachePeriodslingPeriodcommonsPeriodlogPeriodpackagingDataEnabled},
        [Parameter(Position = 13, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${orgPeriodapachePeriodslingPeriodcommonsPeriodlogPeriodmaxCallerDataDepth},
        [Parameter(Position = 14, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${orgPeriodapachePeriodslingPeriodcommonsPeriodlogPeriodmaxOldFileCountInDump},
        [Parameter(Position = 15, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${orgPeriodapachePeriodslingPeriodcommonsPeriodlogPeriodnumOfLines}
    )

    Process {
        'Calling method: ConfigmgrApi-OrgApacheSlingCommonsLogLogManager' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.OrgApacheSlingCommonsLogLogManager(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${orgPeriodapachePeriodslingPeriodcommonsPeriodlogPeriodlevel},
            ${orgPeriodapachePeriodslingPeriodcommonsPeriodlogPeriodfile},
            ${orgPeriodapachePeriodslingPeriodcommonsPeriodlogPeriodfilePeriodnumber},
            ${orgPeriodapachePeriodslingPeriodcommonsPeriodlogPeriodfilePeriodsize},
            ${orgPeriodapachePeriodslingPeriodcommonsPeriodlogPeriodpattern},
            ${orgPeriodapachePeriodslingPeriodcommonsPeriodlogPeriodconfigurationFile},
            ${orgPeriodapachePeriodslingPeriodcommonsPeriodlogPeriodpackagingDataEnabled},
            ${orgPeriodapachePeriodslingPeriodcommonsPeriodlogPeriodmaxCallerDataDepth},
            ${orgPeriodapachePeriodslingPeriodcommonsPeriodlogPeriodmaxOldFileCountInDump},
            ${orgPeriodapachePeriodslingPeriodcommonsPeriodlogPeriodnumOfLines}
        )
    }
}

function Invoke-ConfigmgrApiOrgApacheSlingCommonsLogLogManagerFactoryConfig {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${orgPeriodapachePeriodslingPeriodcommonsPeriodlogPeriodlevel},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${orgPeriodapachePeriodslingPeriodcommonsPeriodlogPeriodfile},
        [Parameter(Position = 8, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${orgPeriodapachePeriodslingPeriodcommonsPeriodlogPeriodpattern},
        [Parameter(Position = 9, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${orgPeriodapachePeriodslingPeriodcommonsPeriodlogPeriodnames},
        [Parameter(Position = 10, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${orgPeriodapachePeriodslingPeriodcommonsPeriodlogPeriodadditiv}
    )

    Process {
        'Calling method: ConfigmgrApi-OrgApacheSlingCommonsLogLogManagerFactoryConfig' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.OrgApacheSlingCommonsLogLogManagerFactoryConfig(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${orgPeriodapachePeriodslingPeriodcommonsPeriodlogPeriodlevel},
            ${orgPeriodapachePeriodslingPeriodcommonsPeriodlogPeriodfile},
            ${orgPeriodapachePeriodslingPeriodcommonsPeriodlogPeriodpattern},
            ${orgPeriodapachePeriodslingPeriodcommonsPeriodlogPeriodnames},
            ${orgPeriodapachePeriodslingPeriodcommonsPeriodlogPeriodadditiv}
        )
    }
}

function Invoke-ConfigmgrApiOrgApacheSlingCommonsLogLogManagerFactoryWriter {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${orgPeriodapachePeriodslingPeriodcommonsPeriodlogPeriodfile},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${orgPeriodapachePeriodslingPeriodcommonsPeriodlogPeriodfilePeriodnumber},
        [Parameter(Position = 8, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${orgPeriodapachePeriodslingPeriodcommonsPeriodlogPeriodfilePeriodsize},
        [Parameter(Position = 9, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${orgPeriodapachePeriodslingPeriodcommonsPeriodlogPeriodfilePeriodbuffered}
    )

    Process {
        'Calling method: ConfigmgrApi-OrgApacheSlingCommonsLogLogManagerFactoryWriter' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.OrgApacheSlingCommonsLogLogManagerFactoryWriter(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${orgPeriodapachePeriodslingPeriodcommonsPeriodlogPeriodfile},
            ${orgPeriodapachePeriodslingPeriodcommonsPeriodlogPeriodfilePeriodnumber},
            ${orgPeriodapachePeriodslingPeriodcommonsPeriodlogPeriodfilePeriodsize},
            ${orgPeriodapachePeriodslingPeriodcommonsPeriodlogPeriodfilePeriodbuffered}
        )
    }
}

function Invoke-ConfigmgrApiOrgApacheSlingCommonsMetricsInternalLogReporter {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${period},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${timeUnit},
        [Parameter(Position = 8, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${level},
        [Parameter(Position = 9, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${loggerName},
        [Parameter(Position = 10, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${prefix},
        [Parameter(Position = 11, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${pattern},
        [Parameter(Position = 12, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${registryName}
    )

    Process {
        'Calling method: ConfigmgrApi-OrgApacheSlingCommonsMetricsInternalLogReporter' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.OrgApacheSlingCommonsMetricsInternalLogReporter(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${period},
            ${timeUnit},
            ${level},
            ${loggerName},
            ${prefix},
            ${pattern},
            ${registryName}
        )
    }
}

function Invoke-ConfigmgrApiOrgApacheSlingCommonsMetricsRrd4jImplCodahaleMetricsReporter {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${datasources},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${step},
        [Parameter(Position = 8, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${archives},
        [Parameter(Position = 9, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${path}
    )

    Process {
        'Calling method: ConfigmgrApi-OrgApacheSlingCommonsMetricsRrd4jImplCodahaleMetricsReporter' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.OrgApacheSlingCommonsMetricsRrd4jImplCodahaleMetricsReporter(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${datasources},
            ${step},
            ${archives},
            ${path}
        )
    }
}

function Invoke-ConfigmgrApiOrgApacheSlingCommonsMimeInternalMimeTypeServiceImpl {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${mimePeriodtypes}
    )

    Process {
        'Calling method: ConfigmgrApi-OrgApacheSlingCommonsMimeInternalMimeTypeServiceImpl' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.OrgApacheSlingCommonsMimeInternalMimeTypeServiceImpl(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${mimePeriodtypes}
        )
    }
}

function Invoke-ConfigmgrApiOrgApacheSlingCommonsSchedulerImplQuartzScheduler {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${poolName},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${allowedPoolNames},
        [Parameter(Position = 8, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${schedulerPerioduseleaderforsingle},
        [Parameter(Position = 9, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${metricsPeriodfilters},
        [Parameter(Position = 10, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${slowThresholdMillis}
    )

    Process {
        'Calling method: ConfigmgrApi-OrgApacheSlingCommonsSchedulerImplQuartzScheduler' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.OrgApacheSlingCommonsSchedulerImplQuartzScheduler(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${poolName},
            ${allowedPoolNames},
            ${schedulerPerioduseleaderforsingle},
            ${metricsPeriodfilters},
            ${slowThresholdMillis}
        )
    }
}

function Invoke-ConfigmgrApiOrgApacheSlingCommonsSchedulerImplSchedulerHealthCheck {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${maxPeriodquartzJobPerioddurationPeriodacceptable}
    )

    Process {
        'Calling method: ConfigmgrApi-OrgApacheSlingCommonsSchedulerImplSchedulerHealthCheck' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.OrgApacheSlingCommonsSchedulerImplSchedulerHealthCheck(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${maxPeriodquartzJobPerioddurationPeriodacceptable}
        )
    }
}

function Invoke-ConfigmgrApiOrgApacheSlingCommonsThreadsImplDefaultThreadPoolFactory {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${name},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${minPoolSize},
        [Parameter(Position = 8, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${maxPoolSize},
        [Parameter(Position = 9, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${queueSize},
        [Parameter(Position = 10, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${maxThreadAge},
        [Parameter(Position = 11, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${keepAliveTime},
        [Parameter(Position = 12, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${blockPolicy},
        [Parameter(Position = 13, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${shutdownGraceful},
        [Parameter(Position = 14, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${daemon},
        [Parameter(Position = 15, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${shutdownWaitTime},
        [Parameter(Position = 16, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${priority}
    )

    Process {
        'Calling method: ConfigmgrApi-OrgApacheSlingCommonsThreadsImplDefaultThreadPoolFactory' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.OrgApacheSlingCommonsThreadsImplDefaultThreadPoolFactory(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${name},
            ${minPoolSize},
            ${maxPoolSize},
            ${queueSize},
            ${maxThreadAge},
            ${keepAliveTime},
            ${blockPolicy},
            ${shutdownGraceful},
            ${daemon},
            ${shutdownWaitTime},
            ${priority}
        )
    }
}

function Invoke-ConfigmgrApiOrgApacheSlingDatasourceDataSourceFactory {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${datasourcePeriodname},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${datasourcePeriodsvcPeriodpropPeriodname},
        [Parameter(Position = 8, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${driverClassName},
        [Parameter(Position = 9, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${url},
        [Parameter(Position = 10, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${username},
        [Parameter(Position = 11, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${password},
        [Parameter(Position = 12, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${defaultAutoCommit},
        [Parameter(Position = 13, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${defaultReadOnly},
        [Parameter(Position = 14, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${defaultTransactionIsolation},
        [Parameter(Position = 15, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${defaultCatalog},
        [Parameter(Position = 16, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${maxActive},
        [Parameter(Position = 17, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${maxIdle},
        [Parameter(Position = 18, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${minIdle},
        [Parameter(Position = 19, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${initialSize},
        [Parameter(Position = 20, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${maxWait},
        [Parameter(Position = 21, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${maxAge},
        [Parameter(Position = 22, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${testOnBorrow},
        [Parameter(Position = 23, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${testOnReturn},
        [Parameter(Position = 24, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${testWhileIdle},
        [Parameter(Position = 25, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${validationQuery},
        [Parameter(Position = 26, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${validationQueryTimeout},
        [Parameter(Position = 27, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${timeBetweenEvictionRunsMillis},
        [Parameter(Position = 28, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${minEvictableIdleTimeMillis},
        [Parameter(Position = 29, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${connectionProperties},
        [Parameter(Position = 30, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${initSQL},
        [Parameter(Position = 31, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${jdbcInterceptors},
        [Parameter(Position = 32, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${validationInterval},
        [Parameter(Position = 33, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${logValidationErrors},
        [Parameter(Position = 34, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${datasourcePeriodsvcPeriodproperties}
    )

    Process {
        'Calling method: ConfigmgrApi-OrgApacheSlingDatasourceDataSourceFactory' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.OrgApacheSlingDatasourceDataSourceFactory(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${datasourcePeriodname},
            ${datasourcePeriodsvcPeriodpropPeriodname},
            ${driverClassName},
            ${url},
            ${username},
            ${password},
            ${defaultAutoCommit},
            ${defaultReadOnly},
            ${defaultTransactionIsolation},
            ${defaultCatalog},
            ${maxActive},
            ${maxIdle},
            ${minIdle},
            ${initialSize},
            ${maxWait},
            ${maxAge},
            ${testOnBorrow},
            ${testOnReturn},
            ${testWhileIdle},
            ${validationQuery},
            ${validationQueryTimeout},
            ${timeBetweenEvictionRunsMillis},
            ${minEvictableIdleTimeMillis},
            ${connectionProperties},
            ${initSQL},
            ${jdbcInterceptors},
            ${validationInterval},
            ${logValidationErrors},
            ${datasourcePeriodsvcPeriodproperties}
        )
    }
}

function Invoke-ConfigmgrApiOrgApacheSlingDatasourceJNDIDataSourceFactory {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${datasourcePeriodname},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${datasourcePeriodsvcPeriodpropPeriodname},
        [Parameter(Position = 8, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${datasourcePeriodjndiPeriodname},
        [Parameter(Position = 9, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${jndiPeriodproperties}
    )

    Process {
        'Calling method: ConfigmgrApi-OrgApacheSlingDatasourceJNDIDataSourceFactory' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.OrgApacheSlingDatasourceJNDIDataSourceFactory(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${datasourcePeriodname},
            ${datasourcePeriodsvcPeriodpropPeriodname},
            ${datasourcePeriodjndiPeriodname},
            ${jndiPeriodproperties}
        )
    }
}

function Invoke-ConfigmgrApiOrgApacheSlingDiscoveryOakConfig {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${connectorPingTimeout},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${connectorPingInterval},
        [Parameter(Position = 8, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${discoveryLiteCheckInterval},
        [Parameter(Position = 9, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${clusterSyncServiceTimeout},
        [Parameter(Position = 10, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${clusterSyncServiceInterval},
        [Parameter(Position = 11, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${enableSyncToken},
        [Parameter(Position = 12, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${minEventDelay},
        [Parameter(Position = 13, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${socketConnectTimeout},
        [Parameter(Position = 14, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${soTimeout},
        [Parameter(Position = 15, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${topologyConnectorUrls},
        [Parameter(Position = 16, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${topologyConnectorWhitelist},
        [Parameter(Position = 17, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${autoStopLocalLoopEnabled},
        [Parameter(Position = 18, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${gzipConnectorRequestsEnabled},
        [Parameter(Position = 19, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${hmacEnabled},
        [Parameter(Position = 20, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${enableEncryption},
        [Parameter(Position = 21, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${sharedKey},
        [Parameter(Position = 22, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${hmacSharedKeyTTL},
        [Parameter(Position = 23, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${backoffStandbyFactor},
        [Parameter(Position = 24, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${backoffStableFactor}
    )

    Process {
        'Calling method: ConfigmgrApi-OrgApacheSlingDiscoveryOakConfig' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.OrgApacheSlingDiscoveryOakConfig(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${connectorPingTimeout},
            ${connectorPingInterval},
            ${discoveryLiteCheckInterval},
            ${clusterSyncServiceTimeout},
            ${clusterSyncServiceInterval},
            ${enableSyncToken},
            ${minEventDelay},
            ${socketConnectTimeout},
            ${soTimeout},
            ${topologyConnectorUrls},
            ${topologyConnectorWhitelist},
            ${autoStopLocalLoopEnabled},
            ${gzipConnectorRequestsEnabled},
            ${hmacEnabled},
            ${enableEncryption},
            ${sharedKey},
            ${hmacSharedKeyTTL},
            ${backoffStandbyFactor},
            ${backoffStableFactor}
        )
    }
}

function Invoke-ConfigmgrApiOrgApacheSlingDiscoveryOakSynchronizedClocksHealthCheck {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${hcPeriodname},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${hcPeriodtags},
        [Parameter(Position = 8, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${hcPeriodmbeanPeriodname}
    )

    Process {
        'Calling method: ConfigmgrApi-OrgApacheSlingDiscoveryOakSynchronizedClocksHealthCheck' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.OrgApacheSlingDiscoveryOakSynchronizedClocksHealthCheck(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${hcPeriodname},
            ${hcPeriodtags},
            ${hcPeriodmbeanPeriodname}
        )
    }
}

function Invoke-ConfigmgrApiOrgApacheSlingDistributionAgentImplForwardDistributionAgentFacto {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${name},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${title},
        [Parameter(Position = 8, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${details},
        [Parameter(Position = 9, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${enabled},
        [Parameter(Position = 10, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${serviceName},
        [Parameter(Position = 11, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${logPeriodlevel},
        [Parameter(Position = 12, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${allowedPeriodroots},
        [Parameter(Position = 13, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${queuePeriodprocessingPeriodenabled},
        [Parameter(Position = 14, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${packageImporterPeriodendpoints},
        [Parameter(Position = 15, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${passiveQueues},
        [Parameter(Position = 16, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${priorityQueues},
        [Parameter(Position = 17, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${retryPeriodstrategy},
        [Parameter(Position = 18, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${retryPeriodattempts},
        [Parameter(Position = 19, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${requestAuthorizationStrategyPeriodtarget},
        [Parameter(Position = 20, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${transportSecretProviderPeriodtarget},
        [Parameter(Position = 21, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${packageBuilderPeriodtarget},
        [Parameter(Position = 22, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${triggersPeriodtarget},
        [Parameter(Position = 23, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${queuePeriodprovider},
        [Parameter(Position = 24, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${asyncPerioddelivery},
        [Parameter(Position = 25, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${httpPeriodconnPeriodtimeout}
    )

    Process {
        'Calling method: ConfigmgrApi-OrgApacheSlingDistributionAgentImplForwardDistributionAgentFacto' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.OrgApacheSlingDistributionAgentImplForwardDistributionAgentFacto(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${name},
            ${title},
            ${details},
            ${enabled},
            ${serviceName},
            ${logPeriodlevel},
            ${allowedPeriodroots},
            ${queuePeriodprocessingPeriodenabled},
            ${packageImporterPeriodendpoints},
            ${passiveQueues},
            ${priorityQueues},
            ${retryPeriodstrategy},
            ${retryPeriodattempts},
            ${requestAuthorizationStrategyPeriodtarget},
            ${transportSecretProviderPeriodtarget},
            ${packageBuilderPeriodtarget},
            ${triggersPeriodtarget},
            ${queuePeriodprovider},
            ${asyncPerioddelivery},
            ${httpPeriodconnPeriodtimeout}
        )
    }
}

function Invoke-ConfigmgrApiOrgApacheSlingDistributionAgentImplPrivilegeDistributionRequestA {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${name},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${jcrPrivilege}
    )

    Process {
        'Calling method: ConfigmgrApi-OrgApacheSlingDistributionAgentImplPrivilegeDistributionRequestA' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.OrgApacheSlingDistributionAgentImplPrivilegeDistributionRequestA(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${name},
            ${jcrPrivilege}
        )
    }
}

function Invoke-ConfigmgrApiOrgApacheSlingDistributionAgentImplQueueDistributionAgentFactory {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${name},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${title},
        [Parameter(Position = 8, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${details},
        [Parameter(Position = 9, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${enabled},
        [Parameter(Position = 10, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${serviceName},
        [Parameter(Position = 11, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${logPeriodlevel},
        [Parameter(Position = 12, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${allowedPeriodroots},
        [Parameter(Position = 13, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${requestAuthorizationStrategyPeriodtarget},
        [Parameter(Position = 14, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${queueProviderFactoryPeriodtarget},
        [Parameter(Position = 15, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${packageBuilderPeriodtarget},
        [Parameter(Position = 16, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${triggersPeriodtarget},
        [Parameter(Position = 17, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${priorityQueues}
    )

    Process {
        'Calling method: ConfigmgrApi-OrgApacheSlingDistributionAgentImplQueueDistributionAgentFactory' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.OrgApacheSlingDistributionAgentImplQueueDistributionAgentFactory(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${name},
            ${title},
            ${details},
            ${enabled},
            ${serviceName},
            ${logPeriodlevel},
            ${allowedPeriodroots},
            ${requestAuthorizationStrategyPeriodtarget},
            ${queueProviderFactoryPeriodtarget},
            ${packageBuilderPeriodtarget},
            ${triggersPeriodtarget},
            ${priorityQueues}
        )
    }
}

function Invoke-ConfigmgrApiOrgApacheSlingDistributionAgentImplReverseDistributionAgentFacto {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${name},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${title},
        [Parameter(Position = 8, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${details},
        [Parameter(Position = 9, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${enabled},
        [Parameter(Position = 10, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${serviceName},
        [Parameter(Position = 11, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${logPeriodlevel},
        [Parameter(Position = 12, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${queuePeriodprocessingPeriodenabled},
        [Parameter(Position = 13, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${packageExporterPeriodendpoints},
        [Parameter(Position = 14, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${pullPerioditems},
        [Parameter(Position = 15, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${httpPeriodconnPeriodtimeout},
        [Parameter(Position = 16, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${requestAuthorizationStrategyPeriodtarget},
        [Parameter(Position = 17, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${transportSecretProviderPeriodtarget},
        [Parameter(Position = 18, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${packageBuilderPeriodtarget},
        [Parameter(Position = 19, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${triggersPeriodtarget}
    )

    Process {
        'Calling method: ConfigmgrApi-OrgApacheSlingDistributionAgentImplReverseDistributionAgentFacto' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.OrgApacheSlingDistributionAgentImplReverseDistributionAgentFacto(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${name},
            ${title},
            ${details},
            ${enabled},
            ${serviceName},
            ${logPeriodlevel},
            ${queuePeriodprocessingPeriodenabled},
            ${packageExporterPeriodendpoints},
            ${pullPerioditems},
            ${httpPeriodconnPeriodtimeout},
            ${requestAuthorizationStrategyPeriodtarget},
            ${transportSecretProviderPeriodtarget},
            ${packageBuilderPeriodtarget},
            ${triggersPeriodtarget}
        )
    }
}

function Invoke-ConfigmgrApiOrgApacheSlingDistributionAgentImplSimpleDistributionAgentFactor {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${name},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${title},
        [Parameter(Position = 8, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${details},
        [Parameter(Position = 9, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${enabled},
        [Parameter(Position = 10, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${serviceName},
        [Parameter(Position = 11, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${logPeriodlevel},
        [Parameter(Position = 12, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${queuePeriodprocessingPeriodenabled},
        [Parameter(Position = 13, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${packageExporterPeriodtarget},
        [Parameter(Position = 14, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${packageImporterPeriodtarget},
        [Parameter(Position = 15, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${requestAuthorizationStrategyPeriodtarget},
        [Parameter(Position = 16, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${triggersPeriodtarget}
    )

    Process {
        'Calling method: ConfigmgrApi-OrgApacheSlingDistributionAgentImplSimpleDistributionAgentFactor' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.OrgApacheSlingDistributionAgentImplSimpleDistributionAgentFactor(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${name},
            ${title},
            ${details},
            ${enabled},
            ${serviceName},
            ${logPeriodlevel},
            ${queuePeriodprocessingPeriodenabled},
            ${packageExporterPeriodtarget},
            ${packageImporterPeriodtarget},
            ${requestAuthorizationStrategyPeriodtarget},
            ${triggersPeriodtarget}
        )
    }
}

function Invoke-ConfigmgrApiOrgApacheSlingDistributionAgentImplSyncDistributionAgentFactory {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${name},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${title},
        [Parameter(Position = 8, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${details},
        [Parameter(Position = 9, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${enabled},
        [Parameter(Position = 10, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${serviceName},
        [Parameter(Position = 11, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${logPeriodlevel},
        [Parameter(Position = 12, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${queuePeriodprocessingPeriodenabled},
        [Parameter(Position = 13, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${passiveQueues},
        [Parameter(Position = 14, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${packageExporterPeriodendpoints},
        [Parameter(Position = 15, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${packageImporterPeriodendpoints},
        [Parameter(Position = 16, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${retryPeriodstrategy},
        [Parameter(Position = 17, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${retryPeriodattempts},
        [Parameter(Position = 18, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${pullPerioditems},
        [Parameter(Position = 19, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${httpPeriodconnPeriodtimeout},
        [Parameter(Position = 20, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${requestAuthorizationStrategyPeriodtarget},
        [Parameter(Position = 21, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${transportSecretProviderPeriodtarget},
        [Parameter(Position = 22, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${packageBuilderPeriodtarget},
        [Parameter(Position = 23, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${triggersPeriodtarget}
    )

    Process {
        'Calling method: ConfigmgrApi-OrgApacheSlingDistributionAgentImplSyncDistributionAgentFactory' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.OrgApacheSlingDistributionAgentImplSyncDistributionAgentFactory(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${name},
            ${title},
            ${details},
            ${enabled},
            ${serviceName},
            ${logPeriodlevel},
            ${queuePeriodprocessingPeriodenabled},
            ${passiveQueues},
            ${packageExporterPeriodendpoints},
            ${packageImporterPeriodendpoints},
            ${retryPeriodstrategy},
            ${retryPeriodattempts},
            ${pullPerioditems},
            ${httpPeriodconnPeriodtimeout},
            ${requestAuthorizationStrategyPeriodtarget},
            ${transportSecretProviderPeriodtarget},
            ${packageBuilderPeriodtarget},
            ${triggersPeriodtarget}
        )
    }
}

function Invoke-ConfigmgrApiOrgApacheSlingDistributionMonitorDistributionQueueHealthCheck {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${hcPeriodname},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${hcPeriodtags},
        [Parameter(Position = 8, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${hcPeriodmbeanPeriodname},
        [Parameter(Position = 9, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${numberOfRetriesAllowed}
    )

    Process {
        'Calling method: ConfigmgrApi-OrgApacheSlingDistributionMonitorDistributionQueueHealthCheck' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.OrgApacheSlingDistributionMonitorDistributionQueueHealthCheck(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${hcPeriodname},
            ${hcPeriodtags},
            ${hcPeriodmbeanPeriodname},
            ${numberOfRetriesAllowed}
        )
    }
}

function Invoke-ConfigmgrApiOrgApacheSlingDistributionPackagingImplExporterAgentDistributio {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${name},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${queue},
        [Parameter(Position = 8, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${dropPeriodinvalidPerioditems},
        [Parameter(Position = 9, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${agentPeriodtarget}
    )

    Process {
        'Calling method: ConfigmgrApi-OrgApacheSlingDistributionPackagingImplExporterAgentDistributio' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.OrgApacheSlingDistributionPackagingImplExporterAgentDistributio(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${name},
            ${queue},
            ${dropPeriodinvalidPerioditems},
            ${agentPeriodtarget}
        )
    }
}

function Invoke-ConfigmgrApiOrgApacheSlingDistributionPackagingImplExporterLocalDistributio {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${name},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${packageBuilderPeriodtarget}
    )

    Process {
        'Calling method: ConfigmgrApi-OrgApacheSlingDistributionPackagingImplExporterLocalDistributio' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.OrgApacheSlingDistributionPackagingImplExporterLocalDistributio(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${name},
            ${packageBuilderPeriodtarget}
        )
    }
}

function Invoke-ConfigmgrApiOrgApacheSlingDistributionPackagingImplExporterRemoteDistributi {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${name},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${endpoints},
        [Parameter(Position = 8, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${pullPerioditems},
        [Parameter(Position = 9, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${packageBuilderPeriodtarget},
        [Parameter(Position = 10, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${transportSecretProviderPeriodtarget}
    )

    Process {
        'Calling method: ConfigmgrApi-OrgApacheSlingDistributionPackagingImplExporterRemoteDistributi' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.OrgApacheSlingDistributionPackagingImplExporterRemoteDistributi(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${name},
            ${endpoints},
            ${pullPerioditems},
            ${packageBuilderPeriodtarget},
            ${transportSecretProviderPeriodtarget}
        )
    }
}

function Invoke-ConfigmgrApiOrgApacheSlingDistributionPackagingImplImporterLocalDistributio {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${name},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${packageBuilderPeriodtarget}
    )

    Process {
        'Calling method: ConfigmgrApi-OrgApacheSlingDistributionPackagingImplImporterLocalDistributio' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.OrgApacheSlingDistributionPackagingImplImporterLocalDistributio(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${name},
            ${packageBuilderPeriodtarget}
        )
    }
}

function Invoke-ConfigmgrApiOrgApacheSlingDistributionPackagingImplImporterRemoteDistributi {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${name},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${endpoints},
        [Parameter(Position = 8, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${transportSecretProviderPeriodtarget}
    )

    Process {
        'Calling method: ConfigmgrApi-OrgApacheSlingDistributionPackagingImplImporterRemoteDistributi' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.OrgApacheSlingDistributionPackagingImplImporterRemoteDistributi(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${name},
            ${endpoints},
            ${transportSecretProviderPeriodtarget}
        )
    }
}

function Invoke-ConfigmgrApiOrgApacheSlingDistributionPackagingImplImporterRepositoryDistri {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${name},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${servicePeriodname},
        [Parameter(Position = 8, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${path},
        [Parameter(Position = 9, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${privilegePeriodname}
    )

    Process {
        'Calling method: ConfigmgrApi-OrgApacheSlingDistributionPackagingImplImporterRepositoryDistri' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.OrgApacheSlingDistributionPackagingImplImporterRepositoryDistri(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${name},
            ${servicePeriodname},
            ${path},
            ${privilegePeriodname}
        )
    }
}

function Invoke-ConfigmgrApiOrgApacheSlingDistributionResourcesImplDistributionConfiguration {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${providerPeriodroots},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${kind}
    )

    Process {
        'Calling method: ConfigmgrApi-OrgApacheSlingDistributionResourcesImplDistributionConfiguration' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.OrgApacheSlingDistributionResourcesImplDistributionConfiguration(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${providerPeriodroots},
            ${kind}
        )
    }
}

function Invoke-ConfigmgrApiOrgApacheSlingDistributionResourcesImplDistributionServiceResour {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${providerPeriodroots},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${kind}
    )

    Process {
        'Calling method: ConfigmgrApi-OrgApacheSlingDistributionResourcesImplDistributionServiceResour' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.OrgApacheSlingDistributionResourcesImplDistributionServiceResour(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${providerPeriodroots},
            ${kind}
        )
    }
}

function Invoke-ConfigmgrApiOrgApacheSlingDistributionSerializationImplDistributionPackageBu {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${name},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${type},
        [Parameter(Position = 8, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${formatPeriodtarget},
        [Parameter(Position = 9, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${tempFsFolder},
        [Parameter(Position = 10, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${fileThreshold},
        [Parameter(Position = 11, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${memoryUnit},
        [Parameter(Position = 12, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${useOffHeapMemory},
        [Parameter(Position = 13, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${digestAlgorithm},
        [Parameter(Position = 14, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${monitoringQueueSize},
        [Parameter(Position = 15, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${cleanupDelay},
        [Parameter(Position = 16, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${packagePeriodfilters},
        [Parameter(Position = 17, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertyPeriodfilters}
    )

    Process {
        'Calling method: ConfigmgrApi-OrgApacheSlingDistributionSerializationImplDistributionPackageBu' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.OrgApacheSlingDistributionSerializationImplDistributionPackageBu(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${name},
            ${type},
            ${formatPeriodtarget},
            ${tempFsFolder},
            ${fileThreshold},
            ${memoryUnit},
            ${useOffHeapMemory},
            ${digestAlgorithm},
            ${monitoringQueueSize},
            ${cleanupDelay},
            ${packagePeriodfilters},
            ${propertyPeriodfilters}
        )
    }
}

function Invoke-ConfigmgrApiOrgApacheSlingDistributionSerializationImplVltVaultDistribution {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${name},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${type},
        [Parameter(Position = 8, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${importMode},
        [Parameter(Position = 9, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${aclHandling},
        [Parameter(Position = 10, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${packagePeriodroots},
        [Parameter(Position = 11, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${packagePeriodfilters},
        [Parameter(Position = 12, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertyPeriodfilters},
        [Parameter(Position = 13, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${tempFsFolder},
        [Parameter(Position = 14, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${useBinaryReferences},
        [Parameter(Position = 15, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${autoSaveThreshold},
        [Parameter(Position = 16, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${cleanupDelay},
        [Parameter(Position = 17, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${fileThreshold},
        [Parameter(Position = 18, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${mEGABYTES},
        [Parameter(Position = 19, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${useOffHeapMemory},
        [Parameter(Position = 20, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${digestAlgorithm},
        [Parameter(Position = 21, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${monitoringQueueSize},
        [Parameter(Position = 22, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${pathsMapping},
        [Parameter(Position = 23, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${strictImport}
    )

    Process {
        'Calling method: ConfigmgrApi-OrgApacheSlingDistributionSerializationImplVltVaultDistribution' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.OrgApacheSlingDistributionSerializationImplVltVaultDistribution(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${name},
            ${type},
            ${importMode},
            ${aclHandling},
            ${packagePeriodroots},
            ${packagePeriodfilters},
            ${propertyPeriodfilters},
            ${tempFsFolder},
            ${useBinaryReferences},
            ${autoSaveThreshold},
            ${cleanupDelay},
            ${fileThreshold},
            ${mEGABYTES},
            ${useOffHeapMemory},
            ${digestAlgorithm},
            ${monitoringQueueSize},
            ${pathsMapping},
            ${strictImport}
        )
    }
}

function Invoke-ConfigmgrApiOrgApacheSlingDistributionTransportImplUserCredentialsDistributi {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${name},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${username},
        [Parameter(Position = 8, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${password}
    )

    Process {
        'Calling method: ConfigmgrApi-OrgApacheSlingDistributionTransportImplUserCredentialsDistributi' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.OrgApacheSlingDistributionTransportImplUserCredentialsDistributi(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${name},
            ${username},
            ${password}
        )
    }
}

function Invoke-ConfigmgrApiOrgApacheSlingDistributionTriggerImplDistributionEventDistribute {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${name},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${path}
    )

    Process {
        'Calling method: ConfigmgrApi-OrgApacheSlingDistributionTriggerImplDistributionEventDistribute' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.OrgApacheSlingDistributionTriggerImplDistributionEventDistribute(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${name},
            ${path}
        )
    }
}

function Invoke-ConfigmgrApiOrgApacheSlingDistributionTriggerImplJcrEventDistributionTrigger {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${name},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${path},
        [Parameter(Position = 8, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${ignoredPathsPatterns},
        [Parameter(Position = 9, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${serviceName},
        [Parameter(Position = 10, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${deep}
    )

    Process {
        'Calling method: ConfigmgrApi-OrgApacheSlingDistributionTriggerImplJcrEventDistributionTrigger' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.OrgApacheSlingDistributionTriggerImplJcrEventDistributionTrigger(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${name},
            ${path},
            ${ignoredPathsPatterns},
            ${serviceName},
            ${deep}
        )
    }
}

function Invoke-ConfigmgrApiOrgApacheSlingDistributionTriggerImplPersistedJcrEventDistributi {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${name},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${path},
        [Parameter(Position = 8, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${serviceName},
        [Parameter(Position = 9, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${nuggetsPath}
    )

    Process {
        'Calling method: ConfigmgrApi-OrgApacheSlingDistributionTriggerImplPersistedJcrEventDistributi' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.OrgApacheSlingDistributionTriggerImplPersistedJcrEventDistributi(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${name},
            ${path},
            ${serviceName},
            ${nuggetsPath}
        )
    }
}

function Invoke-ConfigmgrApiOrgApacheSlingDistributionTriggerImplRemoteEventDistributionTrig {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${name},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${endpoint},
        [Parameter(Position = 8, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${transportSecretProviderPeriodtarget}
    )

    Process {
        'Calling method: ConfigmgrApi-OrgApacheSlingDistributionTriggerImplRemoteEventDistributionTrig' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.OrgApacheSlingDistributionTriggerImplRemoteEventDistributionTrig(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${name},
            ${endpoint},
            ${transportSecretProviderPeriodtarget}
        )
    }
}

function Invoke-ConfigmgrApiOrgApacheSlingDistributionTriggerImplResourceEventDistributionTr {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${name},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${path}
    )

    Process {
        'Calling method: ConfigmgrApi-OrgApacheSlingDistributionTriggerImplResourceEventDistributionTr' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.OrgApacheSlingDistributionTriggerImplResourceEventDistributionTr(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${name},
            ${path}
        )
    }
}

function Invoke-ConfigmgrApiOrgApacheSlingDistributionTriggerImplScheduledDistributionTrigge {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${name},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${path},
        [Parameter(Position = 8, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${seconds},
        [Parameter(Position = 9, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${serviceName}
    )

    Process {
        'Calling method: ConfigmgrApi-OrgApacheSlingDistributionTriggerImplScheduledDistributionTrigge' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.OrgApacheSlingDistributionTriggerImplScheduledDistributionTrigge(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${name},
            ${path},
            ${seconds},
            ${serviceName}
        )
    }
}

function Invoke-ConfigmgrApiOrgApacheSlingEngineImplAuthSlingAuthenticator {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${osgiPeriodhttpPeriodwhiteboardPeriodcontextPeriodselect},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${osgiPeriodhttpPeriodwhiteboardPeriodlistener},
        [Parameter(Position = 8, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${authPeriodsudoPeriodcookie},
        [Parameter(Position = 9, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${authPeriodsudoPeriodparameter},
        [Parameter(Position = 10, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${authPeriodannonymous},
        [Parameter(Position = 11, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${slingPeriodauthPeriodrequirements},
        [Parameter(Position = 12, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${slingPeriodauthPeriodanonymousPerioduser},
        [Parameter(Position = 13, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${slingPeriodauthPeriodanonymousPeriodpassword},
        [Parameter(Position = 14, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${authPeriodhttp},
        [Parameter(Position = 15, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${authPeriodhttpPeriodrealm},
        [Parameter(Position = 16, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${authPerioduriPeriodsuffix}
    )

    Process {
        'Calling method: ConfigmgrApi-OrgApacheSlingEngineImplAuthSlingAuthenticator' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.OrgApacheSlingEngineImplAuthSlingAuthenticator(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${osgiPeriodhttpPeriodwhiteboardPeriodcontextPeriodselect},
            ${osgiPeriodhttpPeriodwhiteboardPeriodlistener},
            ${authPeriodsudoPeriodcookie},
            ${authPeriodsudoPeriodparameter},
            ${authPeriodannonymous},
            ${slingPeriodauthPeriodrequirements},
            ${slingPeriodauthPeriodanonymousPerioduser},
            ${slingPeriodauthPeriodanonymousPeriodpassword},
            ${authPeriodhttp},
            ${authPeriodhttpPeriodrealm},
            ${authPerioduriPeriodsuffix}
        )
    }
}

function Invoke-ConfigmgrApiOrgApacheSlingEngineImplDebugRequestProgressTrackerLogFilter {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${extensions},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${minDurationMs},
        [Parameter(Position = 8, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${maxDurationMs},
        [Parameter(Position = 9, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${compactLogFormat}
    )

    Process {
        'Calling method: ConfigmgrApi-OrgApacheSlingEngineImplDebugRequestProgressTrackerLogFilter' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.OrgApacheSlingEngineImplDebugRequestProgressTrackerLogFilter(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${extensions},
            ${minDurationMs},
            ${maxDurationMs},
            ${compactLogFormat}
        )
    }
}

function Invoke-ConfigmgrApiOrgApacheSlingEngineImplLogRequestLogger {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${requestPeriodlogPeriodoutput},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${requestPeriodlogPeriodoutputtype},
        [Parameter(Position = 8, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${requestPeriodlogPeriodenabled},
        [Parameter(Position = 9, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${accessPeriodlogPeriodoutput},
        [Parameter(Position = 10, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${accessPeriodlogPeriodoutputtype},
        [Parameter(Position = 11, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${accessPeriodlogPeriodenabled}
    )

    Process {
        'Calling method: ConfigmgrApi-OrgApacheSlingEngineImplLogRequestLogger' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.OrgApacheSlingEngineImplLogRequestLogger(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${requestPeriodlogPeriodoutput},
            ${requestPeriodlogPeriodoutputtype},
            ${requestPeriodlogPeriodenabled},
            ${accessPeriodlogPeriodoutput},
            ${accessPeriodlogPeriodoutputtype},
            ${accessPeriodlogPeriodenabled}
        )
    }
}

function Invoke-ConfigmgrApiOrgApacheSlingEngineImplLogRequestLoggerService {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${requestPeriodlogPeriodservicePeriodformat},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${requestPeriodlogPeriodservicePeriodoutput},
        [Parameter(Position = 8, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${requestPeriodlogPeriodservicePeriodoutputtype},
        [Parameter(Position = 9, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${requestPeriodlogPeriodservicePeriodonentry}
    )

    Process {
        'Calling method: ConfigmgrApi-OrgApacheSlingEngineImplLogRequestLoggerService' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.OrgApacheSlingEngineImplLogRequestLoggerService(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${requestPeriodlogPeriodservicePeriodformat},
            ${requestPeriodlogPeriodservicePeriodoutput},
            ${requestPeriodlogPeriodservicePeriodoutputtype},
            ${requestPeriodlogPeriodservicePeriodonentry}
        )
    }
}

function Invoke-ConfigmgrApiOrgApacheSlingEngineImplSlingMainServlet {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${slingPeriodmaxPeriodcalls},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${slingPeriodmaxPeriodinclusions},
        [Parameter(Position = 8, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${slingPeriodtracePeriodallow},
        [Parameter(Position = 9, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${slingPeriodmaxPeriodrecordPeriodrequests},
        [Parameter(Position = 10, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${slingPeriodstorePeriodpatternPeriodrequests},
        [Parameter(Position = 11, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${slingPeriodserverinfo},
        [Parameter(Position = 12, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${slingPeriodadditionalPeriodresponsePeriodheaders}
    )

    Process {
        'Calling method: ConfigmgrApi-OrgApacheSlingEngineImplSlingMainServlet' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.OrgApacheSlingEngineImplSlingMainServlet(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${slingPeriodmaxPeriodcalls},
            ${slingPeriodmaxPeriodinclusions},
            ${slingPeriodtracePeriodallow},
            ${slingPeriodmaxPeriodrecordPeriodrequests},
            ${slingPeriodstorePeriodpatternPeriodrequests},
            ${slingPeriodserverinfo},
            ${slingPeriodadditionalPeriodresponsePeriodheaders}
        )
    }
}

function Invoke-ConfigmgrApiOrgApacheSlingEngineParameters {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${slingPerioddefaultPeriodparameterPeriodencoding},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${slingPerioddefaultPeriodmaxPeriodparameters},
        [Parameter(Position = 8, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${filePeriodlocation},
        [Parameter(Position = 9, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${filePeriodthreshold},
        [Parameter(Position = 10, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${filePeriodmax},
        [Parameter(Position = 11, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${requestPeriodmax},
        [Parameter(Position = 12, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${slingPerioddefaultPeriodparameterPeriodcheckForAdditionalContainerParameters}
    )

    Process {
        'Calling method: ConfigmgrApi-OrgApacheSlingEngineParameters' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.OrgApacheSlingEngineParameters(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${slingPerioddefaultPeriodparameterPeriodencoding},
            ${slingPerioddefaultPeriodmaxPeriodparameters},
            ${filePeriodlocation},
            ${filePeriodthreshold},
            ${filePeriodmax},
            ${requestPeriodmax},
            ${slingPerioddefaultPeriodparameterPeriodcheckForAdditionalContainerParameters}
        )
    }
}

function Invoke-ConfigmgrApiOrgApacheSlingEventImplEventingThreadPool {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${minPoolSize}
    )

    Process {
        'Calling method: ConfigmgrApi-OrgApacheSlingEventImplEventingThreadPool' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.OrgApacheSlingEventImplEventingThreadPool(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${minPoolSize}
        )
    }
}

function Invoke-ConfigmgrApiOrgApacheSlingEventImplJobsDefaultJobManager {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${queuePeriodpriority},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${queuePeriodretries},
        [Parameter(Position = 8, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${queuePeriodretrydelay},
        [Parameter(Position = 9, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${queuePeriodmaxparallel}
    )

    Process {
        'Calling method: ConfigmgrApi-OrgApacheSlingEventImplJobsDefaultJobManager' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.OrgApacheSlingEventImplJobsDefaultJobManager(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${queuePeriodpriority},
            ${queuePeriodretries},
            ${queuePeriodretrydelay},
            ${queuePeriodmaxparallel}
        )
    }
}

function Invoke-ConfigmgrApiOrgApacheSlingEventImplJobsJcrPersistenceHandler {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${jobPeriodconsumermanagerPerioddisableDistribution},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${startupPerioddelay},
        [Parameter(Position = 8, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${cleanupPeriodperiod}
    )

    Process {
        'Calling method: ConfigmgrApi-OrgApacheSlingEventImplJobsJcrPersistenceHandler' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.OrgApacheSlingEventImplJobsJcrPersistenceHandler(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${jobPeriodconsumermanagerPerioddisableDistribution},
            ${startupPerioddelay},
            ${cleanupPeriodperiod}
        )
    }
}

function Invoke-ConfigmgrApiOrgApacheSlingEventImplJobsJobConsumerManager {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${orgPeriodapachePeriodslingPeriodinstallerPeriodconfigurationPeriodpersist},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${jobPeriodconsumermanagerPeriodwhitelist},
        [Parameter(Position = 8, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${jobPeriodconsumermanagerPeriodblacklist}
    )

    Process {
        'Calling method: ConfigmgrApi-OrgApacheSlingEventImplJobsJobConsumerManager' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.OrgApacheSlingEventImplJobsJobConsumerManager(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${orgPeriodapachePeriodslingPeriodinstallerPeriodconfigurationPeriodpersist},
            ${jobPeriodconsumermanagerPeriodwhitelist},
            ${jobPeriodconsumermanagerPeriodblacklist}
        )
    }
}

function Invoke-ConfigmgrApiOrgApacheSlingEventJobsQueueConfiguration {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${queuePeriodname},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${queuePeriodtopics},
        [Parameter(Position = 8, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${queuePeriodtype},
        [Parameter(Position = 9, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${queuePeriodpriority},
        [Parameter(Position = 10, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${queuePeriodretries},
        [Parameter(Position = 11, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${queuePeriodretrydelay},
        [Parameter(Position = 12, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Decimal]
        ${queuePeriodmaxparallel},
        [Parameter(Position = 13, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${queuePeriodkeepJobs},
        [Parameter(Position = 14, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${queuePeriodpreferRunOnCreationInstance},
        [Parameter(Position = 15, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${queuePeriodthreadPoolSize},
        [Parameter(Position = 16, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${servicePeriodranking}
    )

    Process {
        'Calling method: ConfigmgrApi-OrgApacheSlingEventJobsQueueConfiguration' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.OrgApacheSlingEventJobsQueueConfiguration(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${queuePeriodname},
            ${queuePeriodtopics},
            ${queuePeriodtype},
            ${queuePeriodpriority},
            ${queuePeriodretries},
            ${queuePeriodretrydelay},
            ${queuePeriodmaxparallel},
            ${queuePeriodkeepJobs},
            ${queuePeriodpreferRunOnCreationInstance},
            ${queuePeriodthreadPoolSize},
            ${servicePeriodranking}
        )
    }
}

function Invoke-ConfigmgrApiOrgApacheSlingExtensionsWebconsolesecurityproviderInternalSlingW {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${users},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${groups}
    )

    Process {
        'Calling method: ConfigmgrApi-OrgApacheSlingExtensionsWebconsolesecurityproviderInternalSlingW' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.OrgApacheSlingExtensionsWebconsolesecurityproviderInternalSlingW(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${users},
            ${groups}
        )
    }
}

function Invoke-ConfigmgrApiOrgApacheSlingFeatureflagsFeature {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${name},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${description},
        [Parameter(Position = 8, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${enabled}
    )

    Process {
        'Calling method: ConfigmgrApi-OrgApacheSlingFeatureflagsFeature' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.OrgApacheSlingFeatureflagsFeature(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${name},
            ${description},
            ${enabled}
        )
    }
}

function Invoke-ConfigmgrApiOrgApacheSlingFeatureflagsImplConfiguredFeature {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${name},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${description},
        [Parameter(Position = 8, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${enabled}
    )

    Process {
        'Calling method: ConfigmgrApi-OrgApacheSlingFeatureflagsImplConfiguredFeature' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.OrgApacheSlingFeatureflagsImplConfiguredFeature(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${name},
            ${description},
            ${enabled}
        )
    }
}

function Invoke-ConfigmgrApiOrgApacheSlingHapiImplHApiUtilImpl {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${orgPeriodapachePeriodslingPeriodhapiPeriodtoolsPeriodresourcetype},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${orgPeriodapachePeriodslingPeriodhapiPeriodtoolsPeriodcollectionresourcetype},
        [Parameter(Position = 8, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${orgPeriodapachePeriodslingPeriodhapiPeriodtoolsPeriodsearchpaths},
        [Parameter(Position = 9, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${orgPeriodapachePeriodslingPeriodhapiPeriodtoolsPeriodexternalurl},
        [Parameter(Position = 10, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${orgPeriodapachePeriodslingPeriodhapiPeriodtoolsPeriodenabled}
    )

    Process {
        'Calling method: ConfigmgrApi-OrgApacheSlingHapiImplHApiUtilImpl' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.OrgApacheSlingHapiImplHApiUtilImpl(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${orgPeriodapachePeriodslingPeriodhapiPeriodtoolsPeriodresourcetype},
            ${orgPeriodapachePeriodslingPeriodhapiPeriodtoolsPeriodcollectionresourcetype},
            ${orgPeriodapachePeriodslingPeriodhapiPeriodtoolsPeriodsearchpaths},
            ${orgPeriodapachePeriodslingPeriodhapiPeriodtoolsPeriodexternalurl},
            ${orgPeriodapachePeriodslingPeriodhapiPeriodtoolsPeriodenabled}
        )
    }
}

function Invoke-ConfigmgrApiOrgApacheSlingHcCoreImplCompositeHealthCheck {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${hcPeriodname},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${hcPeriodtags},
        [Parameter(Position = 8, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${hcPeriodmbeanPeriodname},
        [Parameter(Position = 9, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${filterPeriodtags},
        [Parameter(Position = 10, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${filterPeriodcombineTagsWithOr}
    )

    Process {
        'Calling method: ConfigmgrApi-OrgApacheSlingHcCoreImplCompositeHealthCheck' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.OrgApacheSlingHcCoreImplCompositeHealthCheck(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${hcPeriodname},
            ${hcPeriodtags},
            ${hcPeriodmbeanPeriodname},
            ${filterPeriodtags},
            ${filterPeriodcombineTagsWithOr}
        )
    }
}

function Invoke-ConfigmgrApiOrgApacheSlingHcCoreImplExecutorHealthCheckExecutorImpl {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${timeoutInMs},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${longRunningFutureThresholdForCriticalMs},
        [Parameter(Position = 8, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${resultCacheTtlInMs}
    )

    Process {
        'Calling method: ConfigmgrApi-OrgApacheSlingHcCoreImplExecutorHealthCheckExecutorImpl' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.OrgApacheSlingHcCoreImplExecutorHealthCheckExecutorImpl(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${timeoutInMs},
            ${longRunningFutureThresholdForCriticalMs},
            ${resultCacheTtlInMs}
        )
    }
}

function Invoke-ConfigmgrApiOrgApacheSlingHcCoreImplJmxAttributeHealthCheck {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${hcPeriodname},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${hcPeriodtags},
        [Parameter(Position = 8, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${hcPeriodmbeanPeriodname},
        [Parameter(Position = 9, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${mbeanPeriodname},
        [Parameter(Position = 10, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${attributePeriodname},
        [Parameter(Position = 11, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${attributePeriodvaluePeriodconstraint}
    )

    Process {
        'Calling method: ConfigmgrApi-OrgApacheSlingHcCoreImplJmxAttributeHealthCheck' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.OrgApacheSlingHcCoreImplJmxAttributeHealthCheck(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${hcPeriodname},
            ${hcPeriodtags},
            ${hcPeriodmbeanPeriodname},
            ${mbeanPeriodname},
            ${attributePeriodname},
            ${attributePeriodvaluePeriodconstraint}
        )
    }
}

function Invoke-ConfigmgrApiOrgApacheSlingHcCoreImplScriptableHealthCheck {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${hcPeriodname},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${hcPeriodtags},
        [Parameter(Position = 8, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${hcPeriodmbeanPeriodname},
        [Parameter(Position = 9, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${expression},
        [Parameter(Position = 10, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${languagePeriodextension}
    )

    Process {
        'Calling method: ConfigmgrApi-OrgApacheSlingHcCoreImplScriptableHealthCheck' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.OrgApacheSlingHcCoreImplScriptableHealthCheck(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${hcPeriodname},
            ${hcPeriodtags},
            ${hcPeriodmbeanPeriodname},
            ${expression},
            ${languagePeriodextension}
        )
    }
}

function Invoke-ConfigmgrApiOrgApacheSlingHcCoreImplServletHealthCheckExecutorServlet {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${servletPath},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${disabled},
        [Parameter(Position = 8, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${corsPeriodaccessControlAllowOrigin}
    )

    Process {
        'Calling method: ConfigmgrApi-OrgApacheSlingHcCoreImplServletHealthCheckExecutorServlet' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.OrgApacheSlingHcCoreImplServletHealthCheckExecutorServlet(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${servletPath},
            ${disabled},
            ${corsPeriodaccessControlAllowOrigin}
        )
    }
}

function Invoke-ConfigmgrApiOrgApacheSlingHcCoreImplServletResultTxtVerboseSerializer {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${totalWidth},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${colWidthName},
        [Parameter(Position = 8, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${colWidthResult},
        [Parameter(Position = 9, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${colWidthTiming}
    )

    Process {
        'Calling method: ConfigmgrApi-OrgApacheSlingHcCoreImplServletResultTxtVerboseSerializer' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.OrgApacheSlingHcCoreImplServletResultTxtVerboseSerializer(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${totalWidth},
            ${colWidthName},
            ${colWidthResult},
            ${colWidthTiming}
        )
    }
}

function Invoke-ConfigmgrApiOrgApacheSlingI18nImplI18NFilter {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${servicePeriodranking},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${slingPeriodfilterPeriodscope}
    )

    Process {
        'Calling method: ConfigmgrApi-OrgApacheSlingI18nImplI18NFilter' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.OrgApacheSlingI18nImplI18NFilter(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${servicePeriodranking},
            ${slingPeriodfilterPeriodscope}
        )
    }
}

function Invoke-ConfigmgrApiOrgApacheSlingI18nImplJcrResourceBundleProvider {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${localePerioddefault},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${preloadPeriodbundles},
        [Parameter(Position = 8, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${invalidationPerioddelay}
    )

    Process {
        'Calling method: ConfigmgrApi-OrgApacheSlingI18nImplJcrResourceBundleProvider' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.OrgApacheSlingI18nImplJcrResourceBundleProvider(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${localePerioddefault},
            ${preloadPeriodbundles},
            ${invalidationPerioddelay}
        )
    }
}

function Invoke-ConfigmgrApiOrgApacheSlingInstallerProviderJcrImplJcrInstaller {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${handlerPeriodschemes},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${slingPeriodjcrinstallPeriodfolderPeriodnamePeriodregexp},
        [Parameter(Position = 8, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${slingPeriodjcrinstallPeriodfolderPeriodmaxPerioddepth},
        [Parameter(Position = 9, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${slingPeriodjcrinstallPeriodsearchPeriodpath},
        [Parameter(Position = 10, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${slingPeriodjcrinstallPeriodnewPeriodconfigPeriodpath},
        [Parameter(Position = 11, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${slingPeriodjcrinstallPeriodsignalPeriodpath},
        [Parameter(Position = 12, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${slingPeriodjcrinstallPeriodenablePeriodwriteback}
    )

    Process {
        'Calling method: ConfigmgrApi-OrgApacheSlingInstallerProviderJcrImplJcrInstaller' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.OrgApacheSlingInstallerProviderJcrImplJcrInstaller(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${handlerPeriodschemes},
            ${slingPeriodjcrinstallPeriodfolderPeriodnamePeriodregexp},
            ${slingPeriodjcrinstallPeriodfolderPeriodmaxPerioddepth},
            ${slingPeriodjcrinstallPeriodsearchPeriodpath},
            ${slingPeriodjcrinstallPeriodnewPeriodconfigPeriodpath},
            ${slingPeriodjcrinstallPeriodsignalPeriodpath},
            ${slingPeriodjcrinstallPeriodenablePeriodwriteback}
        )
    }
}

function Invoke-ConfigmgrApiOrgApacheSlingJcrBaseInternalLoginAdminWhitelist {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${whitelistPeriodbypass},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${whitelistPeriodbundlesPeriodregexp}
    )

    Process {
        'Calling method: ConfigmgrApi-OrgApacheSlingJcrBaseInternalLoginAdminWhitelist' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.OrgApacheSlingJcrBaseInternalLoginAdminWhitelist(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${whitelistPeriodbypass},
            ${whitelistPeriodbundlesPeriodregexp}
        )
    }
}

function Invoke-ConfigmgrApiOrgApacheSlingJcrBaseInternalLoginAdminWhitelistFragment {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${whitelistPeriodname},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${whitelistPeriodbundles}
    )

    Process {
        'Calling method: ConfigmgrApi-OrgApacheSlingJcrBaseInternalLoginAdminWhitelistFragment' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.OrgApacheSlingJcrBaseInternalLoginAdminWhitelistFragment(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${whitelistPeriodname},
            ${whitelistPeriodbundles}
        )
    }
}

function Invoke-ConfigmgrApiOrgApacheSlingJcrDavexImplServletsSlingDavExServlet {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${alias},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${davPeriodcreateAbsoluteUri},
        [Parameter(Position = 8, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${davPeriodprotectedhandlers}
    )

    Process {
        'Calling method: ConfigmgrApi-OrgApacheSlingJcrDavexImplServletsSlingDavExServlet' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.OrgApacheSlingJcrDavexImplServletsSlingDavExServlet(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${alias},
            ${davPeriodcreateAbsoluteUri},
            ${davPeriodprotectedhandlers}
        )
    }
}

function Invoke-ConfigmgrApiOrgApacheSlingJcrJackrabbitServerJndiRegistrationSupport {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${javaPeriodnamingPeriodfactoryPeriodinitial},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${javaPeriodnamingPeriodproviderPeriodurl}
    )

    Process {
        'Calling method: ConfigmgrApi-OrgApacheSlingJcrJackrabbitServerJndiRegistrationSupport' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.OrgApacheSlingJcrJackrabbitServerJndiRegistrationSupport(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${javaPeriodnamingPeriodfactoryPeriodinitial},
            ${javaPeriodnamingPeriodproviderPeriodurl}
        )
    }
}

function Invoke-ConfigmgrApiOrgApacheSlingJcrJackrabbitServerRmiRegistrationSupport {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${port}
    )

    Process {
        'Calling method: ConfigmgrApi-OrgApacheSlingJcrJackrabbitServerRmiRegistrationSupport' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.OrgApacheSlingJcrJackrabbitServerRmiRegistrationSupport(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${port}
        )
    }
}

function Invoke-ConfigmgrApiOrgApacheSlingJcrRepoinitImplRepositoryInitializer {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${references}
    )

    Process {
        'Calling method: ConfigmgrApi-OrgApacheSlingJcrRepoinitImplRepositoryInitializer' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.OrgApacheSlingJcrRepoinitImplRepositoryInitializer(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${references}
        )
    }
}

function Invoke-ConfigmgrApiOrgApacheSlingJcrRepoinitRepositoryInitializer {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${references},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${scripts}
    )

    Process {
        'Calling method: ConfigmgrApi-OrgApacheSlingJcrRepoinitRepositoryInitializer' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.OrgApacheSlingJcrRepoinitRepositoryInitializer(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${references},
            ${scripts}
        )
    }
}

function Invoke-ConfigmgrApiOrgApacheSlingJcrResourceInternalJcrResourceResolverFactoryImpl {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${resourcePeriodresolverPeriodsearchpath},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${resourcePeriodresolverPeriodmanglenamespaces},
        [Parameter(Position = 8, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${resourcePeriodresolverPeriodallowDirect},
        [Parameter(Position = 9, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${resourcePeriodresolverPeriodrequiredPeriodproviders},
        [Parameter(Position = 10, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${resourcePeriodresolverPeriodrequiredPeriodprovidernames},
        [Parameter(Position = 11, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${resourcePeriodresolverPeriodvirtual},
        [Parameter(Position = 12, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${resourcePeriodresolverPeriodmapping},
        [Parameter(Position = 13, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${resourcePeriodresolverPeriodmapPeriodlocation},
        [Parameter(Position = 14, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${resourcePeriodresolverPeriodmapPeriodobservation},
        [Parameter(Position = 15, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${resourcePeriodresolverPerioddefaultPeriodvanityPeriodredirectPeriodstatus},
        [Parameter(Position = 16, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${resourcePeriodresolverPeriodenablePeriodvanitypath},
        [Parameter(Position = 17, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${resourcePeriodresolverPeriodvanitypathPeriodmaxEntries},
        [Parameter(Position = 18, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${resourcePeriodresolverPeriodvanitypathPeriodmaxEntriesPeriodstartup},
        [Parameter(Position = 19, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${resourcePeriodresolverPeriodvanitypathPeriodbloomfilterPeriodmaxBytes},
        [Parameter(Position = 20, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${resourcePeriodresolverPeriodoptimizePeriodaliasPeriodresolution},
        [Parameter(Position = 21, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${resourcePeriodresolverPeriodvanitypathPeriodwhitelist},
        [Parameter(Position = 22, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${resourcePeriodresolverPeriodvanitypathPeriodblacklist},
        [Parameter(Position = 23, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${resourcePeriodresolverPeriodvanityPeriodprecedence},
        [Parameter(Position = 24, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${resourcePeriodresolverPeriodproviderhandlingPeriodparanoid},
        [Parameter(Position = 25, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${resourcePeriodresolverPeriodlogPeriodclosing},
        [Parameter(Position = 26, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${resourcePeriodresolverPeriodlogPeriodunclosed}
    )

    Process {
        'Calling method: ConfigmgrApi-OrgApacheSlingJcrResourceInternalJcrResourceResolverFactoryImpl' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.OrgApacheSlingJcrResourceInternalJcrResourceResolverFactoryImpl(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${resourcePeriodresolverPeriodsearchpath},
            ${resourcePeriodresolverPeriodmanglenamespaces},
            ${resourcePeriodresolverPeriodallowDirect},
            ${resourcePeriodresolverPeriodrequiredPeriodproviders},
            ${resourcePeriodresolverPeriodrequiredPeriodprovidernames},
            ${resourcePeriodresolverPeriodvirtual},
            ${resourcePeriodresolverPeriodmapping},
            ${resourcePeriodresolverPeriodmapPeriodlocation},
            ${resourcePeriodresolverPeriodmapPeriodobservation},
            ${resourcePeriodresolverPerioddefaultPeriodvanityPeriodredirectPeriodstatus},
            ${resourcePeriodresolverPeriodenablePeriodvanitypath},
            ${resourcePeriodresolverPeriodvanitypathPeriodmaxEntries},
            ${resourcePeriodresolverPeriodvanitypathPeriodmaxEntriesPeriodstartup},
            ${resourcePeriodresolverPeriodvanitypathPeriodbloomfilterPeriodmaxBytes},
            ${resourcePeriodresolverPeriodoptimizePeriodaliasPeriodresolution},
            ${resourcePeriodresolverPeriodvanitypathPeriodwhitelist},
            ${resourcePeriodresolverPeriodvanitypathPeriodblacklist},
            ${resourcePeriodresolverPeriodvanityPeriodprecedence},
            ${resourcePeriodresolverPeriodproviderhandlingPeriodparanoid},
            ${resourcePeriodresolverPeriodlogPeriodclosing},
            ${resourcePeriodresolverPeriodlogPeriodunclosed}
        )
    }
}

function Invoke-ConfigmgrApiOrgApacheSlingJcrResourceInternalJcrSystemUserValidator {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${allowPeriodonlyPeriodsystemPerioduser}
    )

    Process {
        'Calling method: ConfigmgrApi-OrgApacheSlingJcrResourceInternalJcrSystemUserValidator' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.OrgApacheSlingJcrResourceInternalJcrSystemUserValidator(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${allowPeriodonlyPeriodsystemPerioduser}
        )
    }
}

function Invoke-ConfigmgrApiOrgApacheSlingJcrResourcesecurityImplResourceAccessGateFactory {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${path},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${checkpathPeriodprefix},
        [Parameter(Position = 8, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${jcrPath}
    )

    Process {
        'Calling method: ConfigmgrApi-OrgApacheSlingJcrResourcesecurityImplResourceAccessGateFactory' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.OrgApacheSlingJcrResourcesecurityImplResourceAccessGateFactory(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${path},
            ${checkpathPeriodprefix},
            ${jcrPath}
        )
    }
}

function Invoke-ConfigmgrApiOrgApacheSlingJcrWebdavImplHandlerDefaultHandlerService {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${servicePeriodranking},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${typePeriodcollections},
        [Parameter(Position = 8, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${typePeriodnoncollections},
        [Parameter(Position = 9, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${typePeriodcontent}
    )

    Process {
        'Calling method: ConfigmgrApi-OrgApacheSlingJcrWebdavImplHandlerDefaultHandlerService' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.OrgApacheSlingJcrWebdavImplHandlerDefaultHandlerService(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${servicePeriodranking},
            ${typePeriodcollections},
            ${typePeriodnoncollections},
            ${typePeriodcontent}
        )
    }
}

function Invoke-ConfigmgrApiOrgApacheSlingJcrWebdavImplHandlerDirListingExportHandlerServic {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${servicePeriodranking}
    )

    Process {
        'Calling method: ConfigmgrApi-OrgApacheSlingJcrWebdavImplHandlerDirListingExportHandlerServic' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.OrgApacheSlingJcrWebdavImplHandlerDirListingExportHandlerServic(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${servicePeriodranking}
        )
    }
}

function Invoke-ConfigmgrApiOrgApacheSlingJcrWebdavImplServletsSimpleWebDavServlet {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${davPeriodroot},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${davPeriodcreateAbsoluteUri},
        [Parameter(Position = 8, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${davPeriodrealm},
        [Parameter(Position = 9, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${collectionPeriodtypes},
        [Parameter(Position = 10, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${filterPeriodprefixes},
        [Parameter(Position = 11, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${filterPeriodtypes},
        [Parameter(Position = 12, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${filterPerioduris},
        [Parameter(Position = 13, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${typePeriodcollections},
        [Parameter(Position = 14, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${typePeriodnoncollections},
        [Parameter(Position = 15, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${typePeriodcontent}
    )

    Process {
        'Calling method: ConfigmgrApi-OrgApacheSlingJcrWebdavImplServletsSimpleWebDavServlet' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.OrgApacheSlingJcrWebdavImplServletsSimpleWebDavServlet(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${davPeriodroot},
            ${davPeriodcreateAbsoluteUri},
            ${davPeriodrealm},
            ${collectionPeriodtypes},
            ${filterPeriodprefixes},
            ${filterPeriodtypes},
            ${filterPerioduris},
            ${typePeriodcollections},
            ${typePeriodnoncollections},
            ${typePeriodcontent}
        )
    }
}

function Invoke-ConfigmgrApiOrgApacheSlingJmxProviderImplJMXResourceProvider {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${providerPeriodroots}
    )

    Process {
        'Calling method: ConfigmgrApi-OrgApacheSlingJmxProviderImplJMXResourceProvider' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.OrgApacheSlingJmxProviderImplJMXResourceProvider(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${providerPeriodroots}
        )
    }
}

function Invoke-ConfigmgrApiOrgApacheSlingModelsImplModelAdapterFactory {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${osgiPeriodhttpPeriodwhiteboardPeriodlistener},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${osgiPeriodhttpPeriodwhiteboardPeriodcontextPeriodselect},
        [Parameter(Position = 8, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${maxPeriodrecursionPerioddepth},
        [Parameter(Position = 9, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${cleanupPeriodjobPeriodperiod}
    )

    Process {
        'Calling method: ConfigmgrApi-OrgApacheSlingModelsImplModelAdapterFactory' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.OrgApacheSlingModelsImplModelAdapterFactory(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${osgiPeriodhttpPeriodwhiteboardPeriodlistener},
            ${osgiPeriodhttpPeriodwhiteboardPeriodcontextPeriodselect},
            ${maxPeriodrecursionPerioddepth},
            ${cleanupPeriodjobPeriodperiod}
        )
    }
}

function Invoke-ConfigmgrApiOrgApacheSlingModelsJacksonexporterImplResourceModuleProvider {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${maxPeriodrecursionPeriodlevels}
    )

    Process {
        'Calling method: ConfigmgrApi-OrgApacheSlingModelsJacksonexporterImplResourceModuleProvider' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.OrgApacheSlingModelsJacksonexporterImplResourceModuleProvider(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${maxPeriodrecursionPeriodlevels}
        )
    }
}

function Invoke-ConfigmgrApiOrgApacheSlingResourceInventoryImplResourceInventoryPrinterFacto {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${felixPeriodinventoryPeriodprinterPeriodname},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${felixPeriodinventoryPeriodprinterPeriodtitle},
        [Parameter(Position = 8, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${path}
    )

    Process {
        'Calling method: ConfigmgrApi-OrgApacheSlingResourceInventoryImplResourceInventoryPrinterFacto' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.OrgApacheSlingResourceInventoryImplResourceInventoryPrinterFacto(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${felixPeriodinventoryPeriodprinterPeriodname},
            ${felixPeriodinventoryPeriodprinterPeriodtitle},
            ${path}
        )
    }
}

function Invoke-ConfigmgrApiOrgApacheSlingResourcemergerImplMergedResourceProviderFactory {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${mergePeriodroot},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${mergePeriodreadOnly}
    )

    Process {
        'Calling method: ConfigmgrApi-OrgApacheSlingResourcemergerImplMergedResourceProviderFactory' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.OrgApacheSlingResourcemergerImplMergedResourceProviderFactory(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${mergePeriodroot},
            ${mergePeriodreadOnly}
        )
    }
}

function Invoke-ConfigmgrApiOrgApacheSlingResourcemergerPickerOverriding {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${mergePeriodroot},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${mergePeriodreadOnly}
    )

    Process {
        'Calling method: ConfigmgrApi-OrgApacheSlingResourcemergerPickerOverriding' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.OrgApacheSlingResourcemergerPickerOverriding(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${mergePeriodroot},
            ${mergePeriodreadOnly}
        )
    }
}

function Invoke-ConfigmgrApiOrgApacheSlingScriptingCoreImplScriptCacheImpl {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${orgPeriodapachePeriodslingPeriodscriptingPeriodcachePeriodsize},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${orgPeriodapachePeriodslingPeriodscriptingPeriodcachePeriodadditionalExtensions}
    )

    Process {
        'Calling method: ConfigmgrApi-OrgApacheSlingScriptingCoreImplScriptCacheImpl' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.OrgApacheSlingScriptingCoreImplScriptCacheImpl(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${orgPeriodapachePeriodslingPeriodscriptingPeriodcachePeriodsize},
            ${orgPeriodapachePeriodslingPeriodscriptingPeriodcachePeriodadditionalExtensions}
        )
    }
}

function Invoke-ConfigmgrApiOrgApacheSlingScriptingCoreImplScriptingResourceResolverProvider {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${logPeriodstacktracePeriodonclose}
    )

    Process {
        'Calling method: ConfigmgrApi-OrgApacheSlingScriptingCoreImplScriptingResourceResolverProvider' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.OrgApacheSlingScriptingCoreImplScriptingResourceResolverProvider(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${logPeriodstacktracePeriodonclose}
        )
    }
}

function Invoke-ConfigmgrApiOrgApacheSlingScriptingJavaImplJavaScriptEngineFactory {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${javaPeriodclassdebuginfo},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${javaPeriodjavaEncoding},
        [Parameter(Position = 8, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${javaPeriodcompilerSourceVM},
        [Parameter(Position = 9, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${javaPeriodcompilerTargetVM}
    )

    Process {
        'Calling method: ConfigmgrApi-OrgApacheSlingScriptingJavaImplJavaScriptEngineFactory' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.OrgApacheSlingScriptingJavaImplJavaScriptEngineFactory(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${javaPeriodclassdebuginfo},
            ${javaPeriodjavaEncoding},
            ${javaPeriodcompilerSourceVM},
            ${javaPeriodcompilerTargetVM}
        )
    }
}

function Invoke-ConfigmgrApiOrgApacheSlingScriptingJavascriptInternalRhinoJavaScriptEngineFa {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${orgPeriodapachePeriodslingPeriodscriptingPeriodjavascriptPeriodrhinoPeriodoptLevel}
    )

    Process {
        'Calling method: ConfigmgrApi-OrgApacheSlingScriptingJavascriptInternalRhinoJavaScriptEngineFa' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.OrgApacheSlingScriptingJavascriptInternalRhinoJavaScriptEngineFa(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${orgPeriodapachePeriodslingPeriodscriptingPeriodjavascriptPeriodrhinoPeriodoptLevel}
        )
    }
}

function Invoke-ConfigmgrApiOrgApacheSlingScriptingJspJspScriptEngineFactory {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${jasperPeriodcompilerTargetVM},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${jasperPeriodcompilerSourceVM},
        [Parameter(Position = 8, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${jasperPeriodclassdebuginfo},
        [Parameter(Position = 9, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${jasperPeriodenablePooling},
        [Parameter(Position = 10, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${jasperPeriodieClassId},
        [Parameter(Position = 11, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${jasperPeriodgenStringAsCharArray},
        [Parameter(Position = 12, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${jasperPeriodkeepgenerated},
        [Parameter(Position = 13, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${jasperPeriodmappedfile},
        [Parameter(Position = 14, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${jasperPeriodtrimSpaces},
        [Parameter(Position = 15, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${jasperPerioddisplaySourceFragments},
        [Parameter(Position = 16, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${defaultPeriodisPeriodsession}
    )

    Process {
        'Calling method: ConfigmgrApi-OrgApacheSlingScriptingJspJspScriptEngineFactory' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.OrgApacheSlingScriptingJspJspScriptEngineFactory(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${jasperPeriodcompilerTargetVM},
            ${jasperPeriodcompilerSourceVM},
            ${jasperPeriodclassdebuginfo},
            ${jasperPeriodenablePooling},
            ${jasperPeriodieClassId},
            ${jasperPeriodgenStringAsCharArray},
            ${jasperPeriodkeepgenerated},
            ${jasperPeriodmappedfile},
            ${jasperPeriodtrimSpaces},
            ${jasperPerioddisplaySourceFragments},
            ${defaultPeriodisPeriodsession}
        )
    }
}

function Invoke-ConfigmgrApiOrgApacheSlingScriptingSightlyJsImplJsapiSlyBindingsValuesProv {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${orgPeriodapachePeriodslingPeriodscriptingPeriodsightlyPeriodjsPeriodbindings}
    )

    Process {
        'Calling method: ConfigmgrApi-OrgApacheSlingScriptingSightlyJsImplJsapiSlyBindingsValuesProv' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.OrgApacheSlingScriptingSightlyJsImplJsapiSlyBindingsValuesProv(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${orgPeriodapachePeriodslingPeriodscriptingPeriodsightlyPeriodjsPeriodbindings}
        )
    }
}

function Invoke-ConfigmgrApiOrgApacheSlingSecurityImplContentDispositionFilter {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${slingPeriodcontentPerioddispositionPeriodpaths},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${slingPeriodcontentPerioddispositionPeriodexcludedPeriodpaths},
        [Parameter(Position = 8, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${slingPeriodcontentPerioddispositionPeriodallPeriodpaths}
    )

    Process {
        'Calling method: ConfigmgrApi-OrgApacheSlingSecurityImplContentDispositionFilter' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.OrgApacheSlingSecurityImplContentDispositionFilter(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${slingPeriodcontentPerioddispositionPeriodpaths},
            ${slingPeriodcontentPerioddispositionPeriodexcludedPeriodpaths},
            ${slingPeriodcontentPerioddispositionPeriodallPeriodpaths}
        )
    }
}

function Invoke-ConfigmgrApiOrgApacheSlingSecurityImplReferrerFilter {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${allowPeriodempty},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${allowPeriodhosts},
        [Parameter(Position = 8, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${allowPeriodhostsPeriodregexp},
        [Parameter(Position = 9, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${filterPeriodmethods},
        [Parameter(Position = 10, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${excludePeriodagentsPeriodregexp}
    )

    Process {
        'Calling method: ConfigmgrApi-OrgApacheSlingSecurityImplReferrerFilter' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.OrgApacheSlingSecurityImplReferrerFilter(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${allowPeriodempty},
            ${allowPeriodhosts},
            ${allowPeriodhostsPeriodregexp},
            ${filterPeriodmethods},
            ${excludePeriodagentsPeriodregexp}
        )
    }
}

function Invoke-ConfigmgrApiOrgApacheSlingServiceusermappingImplServiceUserMapperImpl {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${userPeriodmapping},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${userPerioddefault},
        [Parameter(Position = 8, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${userPeriodenablePerioddefaultPeriodmapping},
        [Parameter(Position = 9, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${requirePeriodvalidation}
    )

    Process {
        'Calling method: ConfigmgrApi-OrgApacheSlingServiceusermappingImplServiceUserMapperImpl' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.OrgApacheSlingServiceusermappingImplServiceUserMapperImpl(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${userPeriodmapping},
            ${userPerioddefault},
            ${userPeriodenablePerioddefaultPeriodmapping},
            ${requirePeriodvalidation}
        )
    }
}

function Invoke-ConfigmgrApiOrgApacheSlingServiceusermappingImplServiceUserMapperImplAmended {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${servicePeriodranking},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${userPeriodmapping}
    )

    Process {
        'Calling method: ConfigmgrApi-OrgApacheSlingServiceusermappingImplServiceUserMapperImplAmended' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.OrgApacheSlingServiceusermappingImplServiceUserMapperImplAmended(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${servicePeriodranking},
            ${userPeriodmapping}
        )
    }
}

function Invoke-ConfigmgrApiOrgApacheSlingServletsGetDefaultGetServlet {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${aliases},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${index},
        [Parameter(Position = 8, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${indexPeriodfiles},
        [Parameter(Position = 9, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${enablePeriodhtml},
        [Parameter(Position = 10, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${enablePeriodjson},
        [Parameter(Position = 11, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${enablePeriodtxt},
        [Parameter(Position = 12, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${enablePeriodxml},
        [Parameter(Position = 13, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${jsonPeriodmaximumresults},
        [Parameter(Position = 14, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${ecmaSuport}
    )

    Process {
        'Calling method: ConfigmgrApi-OrgApacheSlingServletsGetDefaultGetServlet' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.OrgApacheSlingServletsGetDefaultGetServlet(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${aliases},
            ${index},
            ${indexPeriodfiles},
            ${enablePeriodhtml},
            ${enablePeriodjson},
            ${enablePeriodtxt},
            ${enablePeriodxml},
            ${jsonPeriodmaximumresults},
            ${ecmaSuport}
        )
    }
}

function Invoke-ConfigmgrApiOrgApacheSlingServletsGetImplVersionVersionInfoServlet {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${slingPeriodservletPeriodselectors},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${ecmaSuport}
    )

    Process {
        'Calling method: ConfigmgrApi-OrgApacheSlingServletsGetImplVersionVersionInfoServlet' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.OrgApacheSlingServletsGetImplVersionVersionInfoServlet(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${slingPeriodservletPeriodselectors},
            ${ecmaSuport}
        )
    }
}

function Invoke-ConfigmgrApiOrgApacheSlingServletsPostImplHelperChunkCleanUpTask {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${schedulerPeriodexpression},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${schedulerPeriodconcurrent},
        [Parameter(Position = 8, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${chunkPeriodcleanupPeriodage}
    )

    Process {
        'Calling method: ConfigmgrApi-OrgApacheSlingServletsPostImplHelperChunkCleanUpTask' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.OrgApacheSlingServletsPostImplHelperChunkCleanUpTask(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${schedulerPeriodexpression},
            ${schedulerPeriodconcurrent},
            ${chunkPeriodcleanupPeriodage}
        )
    }
}

function Invoke-ConfigmgrApiOrgApacheSlingServletsPostImplSlingPostServlet {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${servletPeriodpostPerioddateFormats},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${servletPeriodpostPeriodnodeNameHints},
        [Parameter(Position = 8, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${servletPeriodpostPeriodnodeNameMaxLength},
        [Parameter(Position = 9, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${servletPeriodpostPeriodcheckinNewVersionableNodes},
        [Parameter(Position = 10, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${servletPeriodpostPeriodautoCheckout},
        [Parameter(Position = 11, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${servletPeriodpostPeriodautoCheckin},
        [Parameter(Position = 12, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${servletPeriodpostPeriodignorePattern}
    )

    Process {
        'Calling method: ConfigmgrApi-OrgApacheSlingServletsPostImplSlingPostServlet' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.OrgApacheSlingServletsPostImplSlingPostServlet(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${servletPeriodpostPerioddateFormats},
            ${servletPeriodpostPeriodnodeNameHints},
            ${servletPeriodpostPeriodnodeNameMaxLength},
            ${servletPeriodpostPeriodcheckinNewVersionableNodes},
            ${servletPeriodpostPeriodautoCheckout},
            ${servletPeriodpostPeriodautoCheckin},
            ${servletPeriodpostPeriodignorePattern}
        )
    }
}

function Invoke-ConfigmgrApiOrgApacheSlingServletsResolverSlingServletResolver {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${servletresolverPeriodservletRoot},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${servletresolverPeriodcacheSize},
        [Parameter(Position = 8, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${servletresolverPeriodpaths},
        [Parameter(Position = 9, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${servletresolverPerioddefaultExtensions}
    )

    Process {
        'Calling method: ConfigmgrApi-OrgApacheSlingServletsResolverSlingServletResolver' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.OrgApacheSlingServletsResolverSlingServletResolver(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${servletresolverPeriodservletRoot},
            ${servletresolverPeriodcacheSize},
            ${servletresolverPeriodpaths},
            ${servletresolverPerioddefaultExtensions}
        )
    }
}

function Invoke-ConfigmgrApiOrgApacheSlingSettingsImplSlingSettingsServiceImpl {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${slingPeriodname},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${slingPerioddescription}
    )

    Process {
        'Calling method: ConfigmgrApi-OrgApacheSlingSettingsImplSlingSettingsServiceImpl' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.OrgApacheSlingSettingsImplSlingSettingsServiceImpl(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${slingPeriodname},
            ${slingPerioddescription}
        )
    }
}

function Invoke-ConfigmgrApiOrgApacheSlingStartupfilterImplStartupFilterImpl {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${activePeriodbyPerioddefault},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${defaultPeriodmessage}
    )

    Process {
        'Calling method: ConfigmgrApi-OrgApacheSlingStartupfilterImplStartupFilterImpl' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.OrgApacheSlingStartupfilterImplStartupFilterImpl(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${activePeriodbyPerioddefault},
            ${defaultPeriodmessage}
        )
    }
}

function Invoke-ConfigmgrApiOrgApacheSlingTenantInternalTenantProviderImpl {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${tenantPeriodroot},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${tenantPeriodpathPeriodmatcher}
    )

    Process {
        'Calling method: ConfigmgrApi-OrgApacheSlingTenantInternalTenantProviderImpl' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.OrgApacheSlingTenantInternalTenantProviderImpl(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${tenantPeriodroot},
            ${tenantPeriodpathPeriodmatcher}
        )
    }
}

function Invoke-ConfigmgrApiOrgApacheSlingTracerInternalLogTracer {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${tracerSets},
        [Parameter(Position = 7, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${enabled},
        [Parameter(Position = 8, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${servletEnabled},
        [Parameter(Position = 9, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${recordingCacheSizeInMB},
        [Parameter(Position = 10, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Int32]
        ${recordingCacheDurationInSecs},
        [Parameter(Position = 11, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${recordingCompressionEnabled},
        [Parameter(Position = 12, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${gzipResponse}
    )

    Process {
        'Calling method: ConfigmgrApi-OrgApacheSlingTracerInternalLogTracer' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.OrgApacheSlingTracerInternalLogTracer(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${tracerSets},
            ${enabled},
            ${servletEnabled},
            ${recordingCacheSizeInMB},
            ${recordingCacheDurationInSecs},
            ${recordingCompressionEnabled},
            ${gzipResponse}
        )
    }
}

function Invoke-ConfigmgrApiOrgApacheSlingXssImplXSSFilterImpl {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${post},
        [Parameter(Position = 1, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${apply},
        [Parameter(Position = 2, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [Boolean]
        ${delete},
        [Parameter(Position = 3, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${action},
        [Parameter(Position = 4, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${Dollarlocation},
        [Parameter(Position = 5, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String[]]
        ${propertylist},
        [Parameter(Position = 6, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = $false)]
        [String]
        ${policyPath}
    )

    Process {
        'Calling method: ConfigmgrApi-OrgApacheSlingXssImplXSSFilterImpl' | Write-Verbose
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $Script:ConfigmgrApi.OrgApacheSlingXssImplXSSFilterImpl(
            ${post},
            ${apply},
            ${delete},
            ${action},
            ${Dollarlocation},
            ${propertylist},
            ${policyPath}
        )
    }
}

