note
 description:"[
		Adobe Experience Manager OSGI config (AEM) API
 		Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
  		OpenAPI spec version: 1.0.0-pre.0
 	    Contact: opensource@shinesolutions.com

  	NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

 		 Do not edit the class manually.
 	]"
	date: "$Date$"
	revision: "$Revision$"
	EIS:"Eiffel openapi generator", "src=https://openapi-generator.tech", "protocol=uri"
class COM_DAY_CQ_DAM_IDS_IMPL_IDS_POOL_MANAGER_IMPL_PROPERTIES 

inherit

  ANY
      redefine
          out 
      end


feature --Access

    max_errors_to_blacklist: detachable CONFIG_NODE_PROPERTY_INTEGER 
      
    retry_interval_to_whitelist: detachable CONFIG_NODE_PROPERTY_INTEGER 
      
    connect_timeout: detachable CONFIG_NODE_PROPERTY_INTEGER 
      
    socket_timeout: detachable CONFIG_NODE_PROPERTY_INTEGER 
      
    process_label: detachable CONFIG_NODE_PROPERTY_STRING 
      
    connection_use_max: detachable CONFIG_NODE_PROPERTY_INTEGER 
      

feature -- Change Element  
 
    set_max_errors_to_blacklist (a_name: like max_errors_to_blacklist)
        -- Set 'max_errors_to_blacklist' with 'a_name'.
      do
        max_errors_to_blacklist := a_name
      ensure
        max_errors_to_blacklist_set: max_errors_to_blacklist = a_name		
      end

    set_retry_interval_to_whitelist (a_name: like retry_interval_to_whitelist)
        -- Set 'retry_interval_to_whitelist' with 'a_name'.
      do
        retry_interval_to_whitelist := a_name
      ensure
        retry_interval_to_whitelist_set: retry_interval_to_whitelist = a_name		
      end

    set_connect_timeout (a_name: like connect_timeout)
        -- Set 'connect_timeout' with 'a_name'.
      do
        connect_timeout := a_name
      ensure
        connect_timeout_set: connect_timeout = a_name		
      end

    set_socket_timeout (a_name: like socket_timeout)
        -- Set 'socket_timeout' with 'a_name'.
      do
        socket_timeout := a_name
      ensure
        socket_timeout_set: socket_timeout = a_name		
      end

    set_process_label (a_name: like process_label)
        -- Set 'process_label' with 'a_name'.
      do
        process_label := a_name
      ensure
        process_label_set: process_label = a_name		
      end

    set_connection_use_max (a_name: like connection_use_max)
        -- Set 'connection_use_max' with 'a_name'.
      do
        connection_use_max := a_name
      ensure
        connection_use_max_set: connection_use_max = a_name		
      end


 feature -- Status Report

    out: STRING
          -- <Precursor>
      do
        create Result.make_empty
        Result.append("%Nclass COM_DAY_CQ_DAM_IDS_IMPL_IDS_POOL_MANAGER_IMPL_PROPERTIES%N")
        if attached max_errors_to_blacklist as l_max_errors_to_blacklist then
          Result.append ("%Nmax_errors_to_blacklist:")
          Result.append (l_max_errors_to_blacklist.out)
          Result.append ("%N")    
        end  
        if attached retry_interval_to_whitelist as l_retry_interval_to_whitelist then
          Result.append ("%Nretry_interval_to_whitelist:")
          Result.append (l_retry_interval_to_whitelist.out)
          Result.append ("%N")    
        end  
        if attached connect_timeout as l_connect_timeout then
          Result.append ("%Nconnect_timeout:")
          Result.append (l_connect_timeout.out)
          Result.append ("%N")    
        end  
        if attached socket_timeout as l_socket_timeout then
          Result.append ("%Nsocket_timeout:")
          Result.append (l_socket_timeout.out)
          Result.append ("%N")    
        end  
        if attached process_label as l_process_label then
          Result.append ("%Nprocess_label:")
          Result.append (l_process_label.out)
          Result.append ("%N")    
        end  
        if attached connection_use_max as l_connection_use_max then
          Result.append ("%Nconnection_use_max:")
          Result.append (l_connection_use_max.out)
          Result.append ("%N")    
        end  
      end
end


