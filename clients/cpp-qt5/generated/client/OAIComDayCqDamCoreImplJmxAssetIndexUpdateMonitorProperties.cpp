/**
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


#include "OAIComDayCqDamCoreImplJmxAssetIndexUpdateMonitorProperties.h"

#include "OAIHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace OpenAPI {

OAIComDayCqDamCoreImplJmxAssetIndexUpdateMonitorProperties::OAIComDayCqDamCoreImplJmxAssetIndexUpdateMonitorProperties(QString json) {
    init();
    this->fromJson(json);
}

OAIComDayCqDamCoreImplJmxAssetIndexUpdateMonitorProperties::OAIComDayCqDamCoreImplJmxAssetIndexUpdateMonitorProperties() {
    init();
}

OAIComDayCqDamCoreImplJmxAssetIndexUpdateMonitorProperties::~OAIComDayCqDamCoreImplJmxAssetIndexUpdateMonitorProperties() {
    this->cleanup();
}

void
OAIComDayCqDamCoreImplJmxAssetIndexUpdateMonitorProperties::init() {
    jmx_objectname = new OAIConfigNodePropertyString();
    m_jmx_objectname_isSet = false;
    property_measure_enabled = new OAIConfigNodePropertyBoolean();
    m_property_measure_enabled_isSet = false;
    property_name = new OAIConfigNodePropertyString();
    m_property_name_isSet = false;
    property_max_wait_ms = new OAIConfigNodePropertyInteger();
    m_property_max_wait_ms_isSet = false;
    property_max_rate = new OAIConfigNodePropertyFloat();
    m_property_max_rate_isSet = false;
    fulltext_measure_enabled = new OAIConfigNodePropertyBoolean();
    m_fulltext_measure_enabled_isSet = false;
    fulltext_name = new OAIConfigNodePropertyString();
    m_fulltext_name_isSet = false;
    fulltext_max_wait_ms = new OAIConfigNodePropertyInteger();
    m_fulltext_max_wait_ms_isSet = false;
    fulltext_max_rate = new OAIConfigNodePropertyFloat();
    m_fulltext_max_rate_isSet = false;
}

void
OAIComDayCqDamCoreImplJmxAssetIndexUpdateMonitorProperties::cleanup() {
    if(jmx_objectname != nullptr) { 
        delete jmx_objectname;
    }
    if(property_measure_enabled != nullptr) { 
        delete property_measure_enabled;
    }
    if(property_name != nullptr) { 
        delete property_name;
    }
    if(property_max_wait_ms != nullptr) { 
        delete property_max_wait_ms;
    }
    if(property_max_rate != nullptr) { 
        delete property_max_rate;
    }
    if(fulltext_measure_enabled != nullptr) { 
        delete fulltext_measure_enabled;
    }
    if(fulltext_name != nullptr) { 
        delete fulltext_name;
    }
    if(fulltext_max_wait_ms != nullptr) { 
        delete fulltext_max_wait_ms;
    }
    if(fulltext_max_rate != nullptr) { 
        delete fulltext_max_rate;
    }
}

OAIComDayCqDamCoreImplJmxAssetIndexUpdateMonitorProperties*
OAIComDayCqDamCoreImplJmxAssetIndexUpdateMonitorProperties::fromJson(QString json) {
    QByteArray array (json.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
    return this;
}

void
OAIComDayCqDamCoreImplJmxAssetIndexUpdateMonitorProperties::fromJsonObject(QJsonObject pJson) {
    ::OpenAPI::setValue(&jmx_objectname, pJson["jmx.objectname"], "OAIConfigNodePropertyString", "OAIConfigNodePropertyString");
    
    ::OpenAPI::setValue(&property_measure_enabled, pJson["property.measure.enabled"], "OAIConfigNodePropertyBoolean", "OAIConfigNodePropertyBoolean");
    
    ::OpenAPI::setValue(&property_name, pJson["property.name"], "OAIConfigNodePropertyString", "OAIConfigNodePropertyString");
    
    ::OpenAPI::setValue(&property_max_wait_ms, pJson["property.max.wait.ms"], "OAIConfigNodePropertyInteger", "OAIConfigNodePropertyInteger");
    
    ::OpenAPI::setValue(&property_max_rate, pJson["property.max.rate"], "OAIConfigNodePropertyFloat", "OAIConfigNodePropertyFloat");
    
    ::OpenAPI::setValue(&fulltext_measure_enabled, pJson["fulltext.measure.enabled"], "OAIConfigNodePropertyBoolean", "OAIConfigNodePropertyBoolean");
    
    ::OpenAPI::setValue(&fulltext_name, pJson["fulltext.name"], "OAIConfigNodePropertyString", "OAIConfigNodePropertyString");
    
    ::OpenAPI::setValue(&fulltext_max_wait_ms, pJson["fulltext.max.wait.ms"], "OAIConfigNodePropertyInteger", "OAIConfigNodePropertyInteger");
    
    ::OpenAPI::setValue(&fulltext_max_rate, pJson["fulltext.max.rate"], "OAIConfigNodePropertyFloat", "OAIConfigNodePropertyFloat");
    
}

QString
OAIComDayCqDamCoreImplJmxAssetIndexUpdateMonitorProperties::asJson ()
{
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject
OAIComDayCqDamCoreImplJmxAssetIndexUpdateMonitorProperties::asJsonObject() {
    QJsonObject obj;
    if((jmx_objectname != nullptr) && (jmx_objectname->isSet())){
        toJsonValue(QString("jmx.objectname"), jmx_objectname, obj, QString("OAIConfigNodePropertyString"));
    }
    if((property_measure_enabled != nullptr) && (property_measure_enabled->isSet())){
        toJsonValue(QString("property.measure.enabled"), property_measure_enabled, obj, QString("OAIConfigNodePropertyBoolean"));
    }
    if((property_name != nullptr) && (property_name->isSet())){
        toJsonValue(QString("property.name"), property_name, obj, QString("OAIConfigNodePropertyString"));
    }
    if((property_max_wait_ms != nullptr) && (property_max_wait_ms->isSet())){
        toJsonValue(QString("property.max.wait.ms"), property_max_wait_ms, obj, QString("OAIConfigNodePropertyInteger"));
    }
    if((property_max_rate != nullptr) && (property_max_rate->isSet())){
        toJsonValue(QString("property.max.rate"), property_max_rate, obj, QString("OAIConfigNodePropertyFloat"));
    }
    if((fulltext_measure_enabled != nullptr) && (fulltext_measure_enabled->isSet())){
        toJsonValue(QString("fulltext.measure.enabled"), fulltext_measure_enabled, obj, QString("OAIConfigNodePropertyBoolean"));
    }
    if((fulltext_name != nullptr) && (fulltext_name->isSet())){
        toJsonValue(QString("fulltext.name"), fulltext_name, obj, QString("OAIConfigNodePropertyString"));
    }
    if((fulltext_max_wait_ms != nullptr) && (fulltext_max_wait_ms->isSet())){
        toJsonValue(QString("fulltext.max.wait.ms"), fulltext_max_wait_ms, obj, QString("OAIConfigNodePropertyInteger"));
    }
    if((fulltext_max_rate != nullptr) && (fulltext_max_rate->isSet())){
        toJsonValue(QString("fulltext.max.rate"), fulltext_max_rate, obj, QString("OAIConfigNodePropertyFloat"));
    }

    return obj;
}

OAIConfigNodePropertyString*
OAIComDayCqDamCoreImplJmxAssetIndexUpdateMonitorProperties::getJmxObjectname() {
    return jmx_objectname;
}
void
OAIComDayCqDamCoreImplJmxAssetIndexUpdateMonitorProperties::setJmxObjectname(OAIConfigNodePropertyString* jmx_objectname) {
    this->jmx_objectname = jmx_objectname;
    this->m_jmx_objectname_isSet = true;
}

OAIConfigNodePropertyBoolean*
OAIComDayCqDamCoreImplJmxAssetIndexUpdateMonitorProperties::getPropertyMeasureEnabled() {
    return property_measure_enabled;
}
void
OAIComDayCqDamCoreImplJmxAssetIndexUpdateMonitorProperties::setPropertyMeasureEnabled(OAIConfigNodePropertyBoolean* property_measure_enabled) {
    this->property_measure_enabled = property_measure_enabled;
    this->m_property_measure_enabled_isSet = true;
}

OAIConfigNodePropertyString*
OAIComDayCqDamCoreImplJmxAssetIndexUpdateMonitorProperties::getPropertyName() {
    return property_name;
}
void
OAIComDayCqDamCoreImplJmxAssetIndexUpdateMonitorProperties::setPropertyName(OAIConfigNodePropertyString* property_name) {
    this->property_name = property_name;
    this->m_property_name_isSet = true;
}

OAIConfigNodePropertyInteger*
OAIComDayCqDamCoreImplJmxAssetIndexUpdateMonitorProperties::getPropertyMaxWaitMs() {
    return property_max_wait_ms;
}
void
OAIComDayCqDamCoreImplJmxAssetIndexUpdateMonitorProperties::setPropertyMaxWaitMs(OAIConfigNodePropertyInteger* property_max_wait_ms) {
    this->property_max_wait_ms = property_max_wait_ms;
    this->m_property_max_wait_ms_isSet = true;
}

OAIConfigNodePropertyFloat*
OAIComDayCqDamCoreImplJmxAssetIndexUpdateMonitorProperties::getPropertyMaxRate() {
    return property_max_rate;
}
void
OAIComDayCqDamCoreImplJmxAssetIndexUpdateMonitorProperties::setPropertyMaxRate(OAIConfigNodePropertyFloat* property_max_rate) {
    this->property_max_rate = property_max_rate;
    this->m_property_max_rate_isSet = true;
}

OAIConfigNodePropertyBoolean*
OAIComDayCqDamCoreImplJmxAssetIndexUpdateMonitorProperties::getFulltextMeasureEnabled() {
    return fulltext_measure_enabled;
}
void
OAIComDayCqDamCoreImplJmxAssetIndexUpdateMonitorProperties::setFulltextMeasureEnabled(OAIConfigNodePropertyBoolean* fulltext_measure_enabled) {
    this->fulltext_measure_enabled = fulltext_measure_enabled;
    this->m_fulltext_measure_enabled_isSet = true;
}

OAIConfigNodePropertyString*
OAIComDayCqDamCoreImplJmxAssetIndexUpdateMonitorProperties::getFulltextName() {
    return fulltext_name;
}
void
OAIComDayCqDamCoreImplJmxAssetIndexUpdateMonitorProperties::setFulltextName(OAIConfigNodePropertyString* fulltext_name) {
    this->fulltext_name = fulltext_name;
    this->m_fulltext_name_isSet = true;
}

OAIConfigNodePropertyInteger*
OAIComDayCqDamCoreImplJmxAssetIndexUpdateMonitorProperties::getFulltextMaxWaitMs() {
    return fulltext_max_wait_ms;
}
void
OAIComDayCqDamCoreImplJmxAssetIndexUpdateMonitorProperties::setFulltextMaxWaitMs(OAIConfigNodePropertyInteger* fulltext_max_wait_ms) {
    this->fulltext_max_wait_ms = fulltext_max_wait_ms;
    this->m_fulltext_max_wait_ms_isSet = true;
}

OAIConfigNodePropertyFloat*
OAIComDayCqDamCoreImplJmxAssetIndexUpdateMonitorProperties::getFulltextMaxRate() {
    return fulltext_max_rate;
}
void
OAIComDayCqDamCoreImplJmxAssetIndexUpdateMonitorProperties::setFulltextMaxRate(OAIConfigNodePropertyFloat* fulltext_max_rate) {
    this->fulltext_max_rate = fulltext_max_rate;
    this->m_fulltext_max_rate_isSet = true;
}


bool
OAIComDayCqDamCoreImplJmxAssetIndexUpdateMonitorProperties::isSet(){
    bool isObjectUpdated = false;
    do{
        if(jmx_objectname != nullptr && jmx_objectname->isSet()){ isObjectUpdated = true; break;}
        if(property_measure_enabled != nullptr && property_measure_enabled->isSet()){ isObjectUpdated = true; break;}
        if(property_name != nullptr && property_name->isSet()){ isObjectUpdated = true; break;}
        if(property_max_wait_ms != nullptr && property_max_wait_ms->isSet()){ isObjectUpdated = true; break;}
        if(property_max_rate != nullptr && property_max_rate->isSet()){ isObjectUpdated = true; break;}
        if(fulltext_measure_enabled != nullptr && fulltext_measure_enabled->isSet()){ isObjectUpdated = true; break;}
        if(fulltext_name != nullptr && fulltext_name->isSet()){ isObjectUpdated = true; break;}
        if(fulltext_max_wait_ms != nullptr && fulltext_max_wait_ms->isSet()){ isObjectUpdated = true; break;}
        if(fulltext_max_rate != nullptr && fulltext_max_rate->isSet()){ isObjectUpdated = true; break;}
    }while(false);
    return isObjectUpdated;
}
}

