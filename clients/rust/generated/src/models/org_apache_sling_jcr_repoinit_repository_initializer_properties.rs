/* 
 * Adobe Experience Manager OSGI config (AEM) API
 *
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 * Generated by: https://openapi-generator.tech
 */


#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct OrgApacheSlingJcrRepoinitRepositoryInitializerProperties {
  #[serde(rename = "references")]
  references: Option<::models::ConfigNodePropertyArray>,
  #[serde(rename = "scripts")]
  scripts: Option<::models::ConfigNodePropertyArray>
}

impl OrgApacheSlingJcrRepoinitRepositoryInitializerProperties {
  pub fn new() -> OrgApacheSlingJcrRepoinitRepositoryInitializerProperties {
    OrgApacheSlingJcrRepoinitRepositoryInitializerProperties {
      references: None,
      scripts: None
    }
  }

  pub fn set_references(&mut self, references: ::models::ConfigNodePropertyArray) {
    self.references = Some(references);
  }

  pub fn with_references(mut self, references: ::models::ConfigNodePropertyArray) -> OrgApacheSlingJcrRepoinitRepositoryInitializerProperties {
    self.references = Some(references);
    self
  }

  pub fn references(&self) -> Option<&::models::ConfigNodePropertyArray> {
    self.references.as_ref()
  }

  pub fn reset_references(&mut self) {
    self.references = None;
  }

  pub fn set_scripts(&mut self, scripts: ::models::ConfigNodePropertyArray) {
    self.scripts = Some(scripts);
  }

  pub fn with_scripts(mut self, scripts: ::models::ConfigNodePropertyArray) -> OrgApacheSlingJcrRepoinitRepositoryInitializerProperties {
    self.scripts = Some(scripts);
    self
  }

  pub fn scripts(&self) -> Option<&::models::ConfigNodePropertyArray> {
    self.scripts.as_ref()
  }

  pub fn reset_scripts(&mut self) {
    self.scripts = None;
  }

}



