package org.openapitools.client.api

import argonaut._
import argonaut.EncodeJson._
import argonaut.DecodeJson._

import org.http4s.{EntityDecoder, EntityEncoder}
import org.http4s.argonaut._
import org.joda.time.DateTime
import ComAdobeFdFpConfigFormsPortalDraftsandSubmissionConfigServiceInfo._

case class ComAdobeFdFpConfigFormsPortalDraftsandSubmissionConfigServiceInfo (
  pid: Option[String],
title: Option[String],
description: Option[String],
properties: Option[ComAdobeFdFpConfigFormsPortalDraftsandSubmissionConfigServiceProperties])

object ComAdobeFdFpConfigFormsPortalDraftsandSubmissionConfigServiceInfo {
  import DateTimeCodecs._

  implicit val ComAdobeFdFpConfigFormsPortalDraftsandSubmissionConfigServiceInfoCodecJson: CodecJson[ComAdobeFdFpConfigFormsPortalDraftsandSubmissionConfigServiceInfo] = CodecJson.derive[ComAdobeFdFpConfigFormsPortalDraftsandSubmissionConfigServiceInfo]
  implicit val ComAdobeFdFpConfigFormsPortalDraftsandSubmissionConfigServiceInfoDecoder: EntityDecoder[ComAdobeFdFpConfigFormsPortalDraftsandSubmissionConfigServiceInfo] = jsonOf[ComAdobeFdFpConfigFormsPortalDraftsandSubmissionConfigServiceInfo]
  implicit val ComAdobeFdFpConfigFormsPortalDraftsandSubmissionConfigServiceInfoEncoder: EntityEncoder[ComAdobeFdFpConfigFormsPortalDraftsandSubmissionConfigServiceInfo] = jsonEncoderOf[ComAdobeFdFpConfigFormsPortalDraftsandSubmissionConfigServiceInfo]
}
