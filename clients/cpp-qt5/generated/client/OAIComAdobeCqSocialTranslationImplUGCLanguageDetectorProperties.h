/**
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIComAdobeCqSocialTranslationImplUGCLanguageDetectorProperties.h
 *
 * 
 */

#ifndef OAIComAdobeCqSocialTranslationImplUGCLanguageDetectorProperties_H_
#define OAIComAdobeCqSocialTranslationImplUGCLanguageDetectorProperties_H_

#include <QJsonObject>


#include "OAIOAIConfigNodePropertyArray.h"
#include "OAIOAIConfigNodePropertyInteger.h"
#include "OAIOAIConfigNodePropertyString.h"

#include "OAIObject.h"

namespace OpenAPI {

class OAIComAdobeCqSocialTranslationImplUGCLanguageDetectorProperties: public OAIObject {
public:
    OAIComAdobeCqSocialTranslationImplUGCLanguageDetectorProperties();
    OAIComAdobeCqSocialTranslationImplUGCLanguageDetectorProperties(QString json);
    ~OAIComAdobeCqSocialTranslationImplUGCLanguageDetectorProperties();
    void init();
    void cleanup();

    QString asJson () override;
    QJsonObject asJsonObject() override;
    void fromJsonObject(QJsonObject json) override;
    OAIComAdobeCqSocialTranslationImplUGCLanguageDetectorProperties* fromJson(QString jsonString) override;

    OAIConfigNodePropertyString* getEventTopics();
    void setEventTopics(OAIConfigNodePropertyString* event_topics);

    OAIConfigNodePropertyString* getEventFilter();
    void setEventFilter(OAIConfigNodePropertyString* event_filter);

    OAIConfigNodePropertyArray* getTranslateListenerType();
    void setTranslateListenerType(OAIConfigNodePropertyArray* translate_listener_type);

    OAIConfigNodePropertyArray* getTranslatePropertyList();
    void setTranslatePropertyList(OAIConfigNodePropertyArray* translate_property_list);

    OAIConfigNodePropertyInteger* getPoolSize();
    void setPoolSize(OAIConfigNodePropertyInteger* pool_size);

    OAIConfigNodePropertyInteger* getMaxPoolSize();
    void setMaxPoolSize(OAIConfigNodePropertyInteger* max_pool_size);

    OAIConfigNodePropertyInteger* getQueueSize();
    void setQueueSize(OAIConfigNodePropertyInteger* queue_size);

    OAIConfigNodePropertyInteger* getKeepAliveTime();
    void setKeepAliveTime(OAIConfigNodePropertyInteger* keep_alive_time);


    virtual bool isSet() override;

private:
    OAIConfigNodePropertyString* event_topics;
    bool m_event_topics_isSet;

    OAIConfigNodePropertyString* event_filter;
    bool m_event_filter_isSet;

    OAIConfigNodePropertyArray* translate_listener_type;
    bool m_translate_listener_type_isSet;

    OAIConfigNodePropertyArray* translate_property_list;
    bool m_translate_property_list_isSet;

    OAIConfigNodePropertyInteger* pool_size;
    bool m_pool_size_isSet;

    OAIConfigNodePropertyInteger* max_pool_size;
    bool m_max_pool_size_isSet;

    OAIConfigNodePropertyInteger* queue_size;
    bool m_queue_size_isSet;

    OAIConfigNodePropertyInteger* keep_alive_time;
    bool m_keep_alive_time_isSet;

};

}

#endif /* OAIComAdobeCqSocialTranslationImplUGCLanguageDetectorProperties_H_ */
