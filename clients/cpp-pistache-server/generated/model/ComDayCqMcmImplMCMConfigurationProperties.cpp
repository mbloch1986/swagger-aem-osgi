/**
* Adobe Experience Manager OSGI config (AEM) API
* Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
*
* OpenAPI spec version: 1.0.0-pre.0
* Contact: opensource@shinesolutions.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/


#include "ComDayCqMcmImplMCMConfigurationProperties.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

ComDayCqMcmImplMCMConfigurationProperties::ComDayCqMcmImplMCMConfigurationProperties()
{
    m_Experience_indirectionIsSet = false;
    m_Touchpoint_indirectionIsSet = false;
    
}

ComDayCqMcmImplMCMConfigurationProperties::~ComDayCqMcmImplMCMConfigurationProperties()
{
}

void ComDayCqMcmImplMCMConfigurationProperties::validate()
{
    // TODO: implement validation
}

nlohmann::json ComDayCqMcmImplMCMConfigurationProperties::toJson() const
{
    nlohmann::json val = nlohmann::json::object();

    if(m_Experience_indirectionIsSet)
    {
        val["experience.indirection"] = ModelBase::toJson(m_Experience_indirection);
    }
    if(m_Touchpoint_indirectionIsSet)
    {
        val["touchpoint.indirection"] = ModelBase::toJson(m_Touchpoint_indirection);
    }
    

    return val;
}

void ComDayCqMcmImplMCMConfigurationProperties::fromJson(nlohmann::json& val)
{
    if(val.find("experience.indirection") != val.end())
    {
        if(!val["experience.indirection"].is_null())
        {
            ConfigNodePropertyArray newItem;
            newItem.fromJson(val["experience.indirection"]);
            setExperienceIndirection( newItem );
        }
        
    }
    if(val.find("touchpoint.indirection") != val.end())
    {
        if(!val["touchpoint.indirection"].is_null())
        {
            ConfigNodePropertyArray newItem;
            newItem.fromJson(val["touchpoint.indirection"]);
            setTouchpointIndirection( newItem );
        }
        
    }
    
}


ConfigNodePropertyArray ComDayCqMcmImplMCMConfigurationProperties::getExperienceIndirection() const
{
    return m_Experience_indirection;
}
void ComDayCqMcmImplMCMConfigurationProperties::setExperienceIndirection(ConfigNodePropertyArray const& value)
{
    m_Experience_indirection = value;
    m_Experience_indirectionIsSet = true;
}
bool ComDayCqMcmImplMCMConfigurationProperties::experienceIndirectionIsSet() const
{
    return m_Experience_indirectionIsSet;
}
void ComDayCqMcmImplMCMConfigurationProperties::unsetExperience_indirection()
{
    m_Experience_indirectionIsSet = false;
}
ConfigNodePropertyArray ComDayCqMcmImplMCMConfigurationProperties::getTouchpointIndirection() const
{
    return m_Touchpoint_indirection;
}
void ComDayCqMcmImplMCMConfigurationProperties::setTouchpointIndirection(ConfigNodePropertyArray const& value)
{
    m_Touchpoint_indirection = value;
    m_Touchpoint_indirectionIsSet = true;
}
bool ComDayCqMcmImplMCMConfigurationProperties::touchpointIndirectionIsSet() const
{
    return m_Touchpoint_indirectionIsSet;
}
void ComDayCqMcmImplMCMConfigurationProperties::unsetTouchpoint_indirection()
{
    m_Touchpoint_indirectionIsSet = false;
}

}
}
}
}

