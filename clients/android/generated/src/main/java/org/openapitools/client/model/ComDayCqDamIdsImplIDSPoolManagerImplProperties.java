/**
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.client.model;

import org.openapitools.client.model.ConfigNodePropertyInteger;
import org.openapitools.client.model.ConfigNodePropertyString;
import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

@ApiModel(description = "")
public class ComDayCqDamIdsImplIDSPoolManagerImplProperties {
  
  @SerializedName("max.errors.to.blacklist")
  private ConfigNodePropertyInteger maxErrorsToBlacklist = null;
  @SerializedName("retry.interval.to.whitelist")
  private ConfigNodePropertyInteger retryIntervalToWhitelist = null;
  @SerializedName("connect.timeout")
  private ConfigNodePropertyInteger connectTimeout = null;
  @SerializedName("socket.timeout")
  private ConfigNodePropertyInteger socketTimeout = null;
  @SerializedName("process.label")
  private ConfigNodePropertyString processLabel = null;
  @SerializedName("connection.use.max")
  private ConfigNodePropertyInteger connectionUseMax = null;

  /**
   **/
  @ApiModelProperty(value = "")
  public ConfigNodePropertyInteger getMaxErrorsToBlacklist() {
    return maxErrorsToBlacklist;
  }
  public void setMaxErrorsToBlacklist(ConfigNodePropertyInteger maxErrorsToBlacklist) {
    this.maxErrorsToBlacklist = maxErrorsToBlacklist;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public ConfigNodePropertyInteger getRetryIntervalToWhitelist() {
    return retryIntervalToWhitelist;
  }
  public void setRetryIntervalToWhitelist(ConfigNodePropertyInteger retryIntervalToWhitelist) {
    this.retryIntervalToWhitelist = retryIntervalToWhitelist;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public ConfigNodePropertyInteger getConnectTimeout() {
    return connectTimeout;
  }
  public void setConnectTimeout(ConfigNodePropertyInteger connectTimeout) {
    this.connectTimeout = connectTimeout;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public ConfigNodePropertyInteger getSocketTimeout() {
    return socketTimeout;
  }
  public void setSocketTimeout(ConfigNodePropertyInteger socketTimeout) {
    this.socketTimeout = socketTimeout;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public ConfigNodePropertyString getProcessLabel() {
    return processLabel;
  }
  public void setProcessLabel(ConfigNodePropertyString processLabel) {
    this.processLabel = processLabel;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public ConfigNodePropertyInteger getConnectionUseMax() {
    return connectionUseMax;
  }
  public void setConnectionUseMax(ConfigNodePropertyInteger connectionUseMax) {
    this.connectionUseMax = connectionUseMax;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ComDayCqDamIdsImplIDSPoolManagerImplProperties comDayCqDamIdsImplIDSPoolManagerImplProperties = (ComDayCqDamIdsImplIDSPoolManagerImplProperties) o;
    return (this.maxErrorsToBlacklist == null ? comDayCqDamIdsImplIDSPoolManagerImplProperties.maxErrorsToBlacklist == null : this.maxErrorsToBlacklist.equals(comDayCqDamIdsImplIDSPoolManagerImplProperties.maxErrorsToBlacklist)) &&
        (this.retryIntervalToWhitelist == null ? comDayCqDamIdsImplIDSPoolManagerImplProperties.retryIntervalToWhitelist == null : this.retryIntervalToWhitelist.equals(comDayCqDamIdsImplIDSPoolManagerImplProperties.retryIntervalToWhitelist)) &&
        (this.connectTimeout == null ? comDayCqDamIdsImplIDSPoolManagerImplProperties.connectTimeout == null : this.connectTimeout.equals(comDayCqDamIdsImplIDSPoolManagerImplProperties.connectTimeout)) &&
        (this.socketTimeout == null ? comDayCqDamIdsImplIDSPoolManagerImplProperties.socketTimeout == null : this.socketTimeout.equals(comDayCqDamIdsImplIDSPoolManagerImplProperties.socketTimeout)) &&
        (this.processLabel == null ? comDayCqDamIdsImplIDSPoolManagerImplProperties.processLabel == null : this.processLabel.equals(comDayCqDamIdsImplIDSPoolManagerImplProperties.processLabel)) &&
        (this.connectionUseMax == null ? comDayCqDamIdsImplIDSPoolManagerImplProperties.connectionUseMax == null : this.connectionUseMax.equals(comDayCqDamIdsImplIDSPoolManagerImplProperties.connectionUseMax));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.maxErrorsToBlacklist == null ? 0: this.maxErrorsToBlacklist.hashCode());
    result = 31 * result + (this.retryIntervalToWhitelist == null ? 0: this.retryIntervalToWhitelist.hashCode());
    result = 31 * result + (this.connectTimeout == null ? 0: this.connectTimeout.hashCode());
    result = 31 * result + (this.socketTimeout == null ? 0: this.socketTimeout.hashCode());
    result = 31 * result + (this.processLabel == null ? 0: this.processLabel.hashCode());
    result = 31 * result + (this.connectionUseMax == null ? 0: this.connectionUseMax.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class ComDayCqDamIdsImplIDSPoolManagerImplProperties {\n");
    
    sb.append("  maxErrorsToBlacklist: ").append(maxErrorsToBlacklist).append("\n");
    sb.append("  retryIntervalToWhitelist: ").append(retryIntervalToWhitelist).append("\n");
    sb.append("  connectTimeout: ").append(connectTimeout).append("\n");
    sb.append("  socketTimeout: ").append(socketTimeout).append("\n");
    sb.append("  processLabel: ").append(processLabel).append("\n");
    sb.append("  connectionUseMax: ").append(connectionUseMax).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
