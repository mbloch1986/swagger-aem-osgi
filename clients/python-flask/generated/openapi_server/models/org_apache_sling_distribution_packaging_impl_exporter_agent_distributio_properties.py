# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server.models.config_node_property_boolean import ConfigNodePropertyBoolean  # noqa: F401,E501
from openapi_server.models.config_node_property_string import ConfigNodePropertyString  # noqa: F401,E501
from openapi_server import util


class OrgApacheSlingDistributionPackagingImplExporterAgentDistributioProperties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, name: ConfigNodePropertyString=None, queue: ConfigNodePropertyString=None, drop_invalid_items: ConfigNodePropertyBoolean=None, agent_target: ConfigNodePropertyString=None):  # noqa: E501
        """OrgApacheSlingDistributionPackagingImplExporterAgentDistributioProperties - a model defined in OpenAPI

        :param name: The name of this OrgApacheSlingDistributionPackagingImplExporterAgentDistributioProperties.  # noqa: E501
        :type name: ConfigNodePropertyString
        :param queue: The queue of this OrgApacheSlingDistributionPackagingImplExporterAgentDistributioProperties.  # noqa: E501
        :type queue: ConfigNodePropertyString
        :param drop_invalid_items: The drop_invalid_items of this OrgApacheSlingDistributionPackagingImplExporterAgentDistributioProperties.  # noqa: E501
        :type drop_invalid_items: ConfigNodePropertyBoolean
        :param agent_target: The agent_target of this OrgApacheSlingDistributionPackagingImplExporterAgentDistributioProperties.  # noqa: E501
        :type agent_target: ConfigNodePropertyString
        """
        self.openapi_types = {
            'name': ConfigNodePropertyString,
            'queue': ConfigNodePropertyString,
            'drop_invalid_items': ConfigNodePropertyBoolean,
            'agent_target': ConfigNodePropertyString
        }

        self.attribute_map = {
            'name': 'name',
            'queue': 'queue',
            'drop_invalid_items': 'drop.invalid.items',
            'agent_target': 'agent.target'
        }

        self._name = name
        self._queue = queue
        self._drop_invalid_items = drop_invalid_items
        self._agent_target = agent_target

    @classmethod
    def from_dict(cls, dikt) -> 'OrgApacheSlingDistributionPackagingImplExporterAgentDistributioProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The orgApacheSlingDistributionPackagingImplExporterAgentDistributioProperties of this OrgApacheSlingDistributionPackagingImplExporterAgentDistributioProperties.  # noqa: E501
        :rtype: OrgApacheSlingDistributionPackagingImplExporterAgentDistributioProperties
        """
        return util.deserialize_model(dikt, cls)

    @property
    def name(self) -> ConfigNodePropertyString:
        """Gets the name of this OrgApacheSlingDistributionPackagingImplExporterAgentDistributioProperties.


        :return: The name of this OrgApacheSlingDistributionPackagingImplExporterAgentDistributioProperties.
        :rtype: ConfigNodePropertyString
        """
        return self._name

    @name.setter
    def name(self, name: ConfigNodePropertyString):
        """Sets the name of this OrgApacheSlingDistributionPackagingImplExporterAgentDistributioProperties.


        :param name: The name of this OrgApacheSlingDistributionPackagingImplExporterAgentDistributioProperties.
        :type name: ConfigNodePropertyString
        """

        self._name = name

    @property
    def queue(self) -> ConfigNodePropertyString:
        """Gets the queue of this OrgApacheSlingDistributionPackagingImplExporterAgentDistributioProperties.


        :return: The queue of this OrgApacheSlingDistributionPackagingImplExporterAgentDistributioProperties.
        :rtype: ConfigNodePropertyString
        """
        return self._queue

    @queue.setter
    def queue(self, queue: ConfigNodePropertyString):
        """Sets the queue of this OrgApacheSlingDistributionPackagingImplExporterAgentDistributioProperties.


        :param queue: The queue of this OrgApacheSlingDistributionPackagingImplExporterAgentDistributioProperties.
        :type queue: ConfigNodePropertyString
        """

        self._queue = queue

    @property
    def drop_invalid_items(self) -> ConfigNodePropertyBoolean:
        """Gets the drop_invalid_items of this OrgApacheSlingDistributionPackagingImplExporterAgentDistributioProperties.


        :return: The drop_invalid_items of this OrgApacheSlingDistributionPackagingImplExporterAgentDistributioProperties.
        :rtype: ConfigNodePropertyBoolean
        """
        return self._drop_invalid_items

    @drop_invalid_items.setter
    def drop_invalid_items(self, drop_invalid_items: ConfigNodePropertyBoolean):
        """Sets the drop_invalid_items of this OrgApacheSlingDistributionPackagingImplExporterAgentDistributioProperties.


        :param drop_invalid_items: The drop_invalid_items of this OrgApacheSlingDistributionPackagingImplExporterAgentDistributioProperties.
        :type drop_invalid_items: ConfigNodePropertyBoolean
        """

        self._drop_invalid_items = drop_invalid_items

    @property
    def agent_target(self) -> ConfigNodePropertyString:
        """Gets the agent_target of this OrgApacheSlingDistributionPackagingImplExporterAgentDistributioProperties.


        :return: The agent_target of this OrgApacheSlingDistributionPackagingImplExporterAgentDistributioProperties.
        :rtype: ConfigNodePropertyString
        """
        return self._agent_target

    @agent_target.setter
    def agent_target(self, agent_target: ConfigNodePropertyString):
        """Sets the agent_target of this OrgApacheSlingDistributionPackagingImplExporterAgentDistributioProperties.


        :param agent_target: The agent_target of this OrgApacheSlingDistributionPackagingImplExporterAgentDistributioProperties.
        :type agent_target: ConfigNodePropertyString
        """

        self._agent_target = agent_target
