/**
* Adobe Experience Manager OSGI config (AEM) API
* Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
*
* OpenAPI spec version: 1.0.0-pre.0
* Contact: opensource@shinesolutions.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/


#include "ComDayCqDamCoreProcessExifToolExtractMetadataProcessProperties.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

ComDayCqDamCoreProcessExifToolExtractMetadataProcessProperties::ComDayCqDamCoreProcessExifToolExtractMetadataProcessProperties()
{
    m_Process_labelIsSet = false;
    m_Cq_dam_enable_sha1IsSet = false;
    
}

ComDayCqDamCoreProcessExifToolExtractMetadataProcessProperties::~ComDayCqDamCoreProcessExifToolExtractMetadataProcessProperties()
{
}

void ComDayCqDamCoreProcessExifToolExtractMetadataProcessProperties::validate()
{
    // TODO: implement validation
}

nlohmann::json ComDayCqDamCoreProcessExifToolExtractMetadataProcessProperties::toJson() const
{
    nlohmann::json val = nlohmann::json::object();

    if(m_Process_labelIsSet)
    {
        val["process.label"] = ModelBase::toJson(m_Process_label);
    }
    if(m_Cq_dam_enable_sha1IsSet)
    {
        val["cq.dam.enable.sha1"] = ModelBase::toJson(m_Cq_dam_enable_sha1);
    }
    

    return val;
}

void ComDayCqDamCoreProcessExifToolExtractMetadataProcessProperties::fromJson(nlohmann::json& val)
{
    if(val.find("process.label") != val.end())
    {
        if(!val["process.label"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["process.label"]);
            setProcessLabel( newItem );
        }
        
    }
    if(val.find("cq.dam.enable.sha1") != val.end())
    {
        if(!val["cq.dam.enable.sha1"].is_null())
        {
            ConfigNodePropertyBoolean newItem;
            newItem.fromJson(val["cq.dam.enable.sha1"]);
            setCqDamEnableSha1( newItem );
        }
        
    }
    
}


ConfigNodePropertyString ComDayCqDamCoreProcessExifToolExtractMetadataProcessProperties::getProcessLabel() const
{
    return m_Process_label;
}
void ComDayCqDamCoreProcessExifToolExtractMetadataProcessProperties::setProcessLabel(ConfigNodePropertyString const& value)
{
    m_Process_label = value;
    m_Process_labelIsSet = true;
}
bool ComDayCqDamCoreProcessExifToolExtractMetadataProcessProperties::processLabelIsSet() const
{
    return m_Process_labelIsSet;
}
void ComDayCqDamCoreProcessExifToolExtractMetadataProcessProperties::unsetProcess_label()
{
    m_Process_labelIsSet = false;
}
ConfigNodePropertyBoolean ComDayCqDamCoreProcessExifToolExtractMetadataProcessProperties::getCqDamEnableSha1() const
{
    return m_Cq_dam_enable_sha1;
}
void ComDayCqDamCoreProcessExifToolExtractMetadataProcessProperties::setCqDamEnableSha1(ConfigNodePropertyBoolean const& value)
{
    m_Cq_dam_enable_sha1 = value;
    m_Cq_dam_enable_sha1IsSet = true;
}
bool ComDayCqDamCoreProcessExifToolExtractMetadataProcessProperties::cqDamEnableSha1IsSet() const
{
    return m_Cq_dam_enable_sha1IsSet;
}
void ComDayCqDamCoreProcessExifToolExtractMetadataProcessProperties::unsetCq_dam_enable_sha1()
{
    m_Cq_dam_enable_sha1IsSet = false;
}

}
}
}
}

