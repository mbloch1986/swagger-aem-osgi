/**
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


#include "OAIComAdobeCqScreensOfflinecontentImplBulkOfflineUpdateServiceImplProperties.h"

#include "OAIHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace OpenAPI {

OAIComAdobeCqScreensOfflinecontentImplBulkOfflineUpdateServiceImplProperties::OAIComAdobeCqScreensOfflinecontentImplBulkOfflineUpdateServiceImplProperties(QString json) {
    init();
    this->fromJson(json);
}

OAIComAdobeCqScreensOfflinecontentImplBulkOfflineUpdateServiceImplProperties::OAIComAdobeCqScreensOfflinecontentImplBulkOfflineUpdateServiceImplProperties() {
    init();
}

OAIComAdobeCqScreensOfflinecontentImplBulkOfflineUpdateServiceImplProperties::~OAIComAdobeCqScreensOfflinecontentImplBulkOfflineUpdateServiceImplProperties() {
    this->cleanup();
}

void
OAIComAdobeCqScreensOfflinecontentImplBulkOfflineUpdateServiceImplProperties::init() {
    com_adobe_cq_screens_offlinecontent_impl_bulk_offline_update_service_impl_project_path = new OAIConfigNodePropertyArray();
    m_com_adobe_cq_screens_offlinecontent_impl_bulk_offline_update_service_impl_project_path_isSet = false;
    com_adobe_cq_screens_offlinecontent_impl_bulk_offline_update_service_impl_schedule_frequency = new OAIConfigNodePropertyString();
    m_com_adobe_cq_screens_offlinecontent_impl_bulk_offline_update_service_impl_schedule_frequency_isSet = false;
}

void
OAIComAdobeCqScreensOfflinecontentImplBulkOfflineUpdateServiceImplProperties::cleanup() {
    if(com_adobe_cq_screens_offlinecontent_impl_bulk_offline_update_service_impl_project_path != nullptr) { 
        delete com_adobe_cq_screens_offlinecontent_impl_bulk_offline_update_service_impl_project_path;
    }
    if(com_adobe_cq_screens_offlinecontent_impl_bulk_offline_update_service_impl_schedule_frequency != nullptr) { 
        delete com_adobe_cq_screens_offlinecontent_impl_bulk_offline_update_service_impl_schedule_frequency;
    }
}

OAIComAdobeCqScreensOfflinecontentImplBulkOfflineUpdateServiceImplProperties*
OAIComAdobeCqScreensOfflinecontentImplBulkOfflineUpdateServiceImplProperties::fromJson(QString json) {
    QByteArray array (json.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
    return this;
}

void
OAIComAdobeCqScreensOfflinecontentImplBulkOfflineUpdateServiceImplProperties::fromJsonObject(QJsonObject pJson) {
    ::OpenAPI::setValue(&com_adobe_cq_screens_offlinecontent_impl_bulk_offline_update_service_impl_project_path, pJson["com.adobe.cq.screens.offlinecontent.impl.BulkOfflineUpdateServiceImpl.projectPath"], "OAIConfigNodePropertyArray", "OAIConfigNodePropertyArray");
    
    ::OpenAPI::setValue(&com_adobe_cq_screens_offlinecontent_impl_bulk_offline_update_service_impl_schedule_frequency, pJson["com.adobe.cq.screens.offlinecontent.impl.BulkOfflineUpdateServiceImpl.scheduleFrequency"], "OAIConfigNodePropertyString", "OAIConfigNodePropertyString");
    
}

QString
OAIComAdobeCqScreensOfflinecontentImplBulkOfflineUpdateServiceImplProperties::asJson ()
{
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject
OAIComAdobeCqScreensOfflinecontentImplBulkOfflineUpdateServiceImplProperties::asJsonObject() {
    QJsonObject obj;
    if((com_adobe_cq_screens_offlinecontent_impl_bulk_offline_update_service_impl_project_path != nullptr) && (com_adobe_cq_screens_offlinecontent_impl_bulk_offline_update_service_impl_project_path->isSet())){
        toJsonValue(QString("com.adobe.cq.screens.offlinecontent.impl.BulkOfflineUpdateServiceImpl.projectPath"), com_adobe_cq_screens_offlinecontent_impl_bulk_offline_update_service_impl_project_path, obj, QString("OAIConfigNodePropertyArray"));
    }
    if((com_adobe_cq_screens_offlinecontent_impl_bulk_offline_update_service_impl_schedule_frequency != nullptr) && (com_adobe_cq_screens_offlinecontent_impl_bulk_offline_update_service_impl_schedule_frequency->isSet())){
        toJsonValue(QString("com.adobe.cq.screens.offlinecontent.impl.BulkOfflineUpdateServiceImpl.scheduleFrequency"), com_adobe_cq_screens_offlinecontent_impl_bulk_offline_update_service_impl_schedule_frequency, obj, QString("OAIConfigNodePropertyString"));
    }

    return obj;
}

OAIConfigNodePropertyArray*
OAIComAdobeCqScreensOfflinecontentImplBulkOfflineUpdateServiceImplProperties::getComAdobeCqScreensOfflinecontentImplBulkOfflineUpdateServiceImplProjectPath() {
    return com_adobe_cq_screens_offlinecontent_impl_bulk_offline_update_service_impl_project_path;
}
void
OAIComAdobeCqScreensOfflinecontentImplBulkOfflineUpdateServiceImplProperties::setComAdobeCqScreensOfflinecontentImplBulkOfflineUpdateServiceImplProjectPath(OAIConfigNodePropertyArray* com_adobe_cq_screens_offlinecontent_impl_bulk_offline_update_service_impl_project_path) {
    this->com_adobe_cq_screens_offlinecontent_impl_bulk_offline_update_service_impl_project_path = com_adobe_cq_screens_offlinecontent_impl_bulk_offline_update_service_impl_project_path;
    this->m_com_adobe_cq_screens_offlinecontent_impl_bulk_offline_update_service_impl_project_path_isSet = true;
}

OAIConfigNodePropertyString*
OAIComAdobeCqScreensOfflinecontentImplBulkOfflineUpdateServiceImplProperties::getComAdobeCqScreensOfflinecontentImplBulkOfflineUpdateServiceImplScheduleFrequency() {
    return com_adobe_cq_screens_offlinecontent_impl_bulk_offline_update_service_impl_schedule_frequency;
}
void
OAIComAdobeCqScreensOfflinecontentImplBulkOfflineUpdateServiceImplProperties::setComAdobeCqScreensOfflinecontentImplBulkOfflineUpdateServiceImplScheduleFrequency(OAIConfigNodePropertyString* com_adobe_cq_screens_offlinecontent_impl_bulk_offline_update_service_impl_schedule_frequency) {
    this->com_adobe_cq_screens_offlinecontent_impl_bulk_offline_update_service_impl_schedule_frequency = com_adobe_cq_screens_offlinecontent_impl_bulk_offline_update_service_impl_schedule_frequency;
    this->m_com_adobe_cq_screens_offlinecontent_impl_bulk_offline_update_service_impl_schedule_frequency_isSet = true;
}


bool
OAIComAdobeCqScreensOfflinecontentImplBulkOfflineUpdateServiceImplProperties::isSet(){
    bool isObjectUpdated = false;
    do{
        if(com_adobe_cq_screens_offlinecontent_impl_bulk_offline_update_service_impl_project_path != nullptr && com_adobe_cq_screens_offlinecontent_impl_bulk_offline_update_service_impl_project_path->isSet()){ isObjectUpdated = true; break;}
        if(com_adobe_cq_screens_offlinecontent_impl_bulk_offline_update_service_impl_schedule_frequency != nullptr && com_adobe_cq_screens_offlinecontent_impl_bulk_offline_update_service_impl_schedule_frequency->isSet()){ isObjectUpdated = true; break;}
    }while(false);
    return isObjectUpdated;
}
}

