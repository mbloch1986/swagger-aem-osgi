/**
* Adobe Experience Manager OSGI config (AEM) API
* Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
*
* OpenAPI spec version: 1.0.0-pre.0
* Contact: opensource@shinesolutions.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
/*
 * OrgApacheSlingJcrWebdavImplServletsSimpleWebDavServletProperties.h
 *
 * 
 */

#ifndef OrgApacheSlingJcrWebdavImplServletsSimpleWebDavServletProperties_H_
#define OrgApacheSlingJcrWebdavImplServletsSimpleWebDavServletProperties_H_


#include "ModelBase.h"

#include "ConfigNodePropertyBoolean.h"
#include "ConfigNodePropertyArray.h"
#include "ConfigNodePropertyString.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
/// 
/// </summary>
class  OrgApacheSlingJcrWebdavImplServletsSimpleWebDavServletProperties
    : public ModelBase
{
public:
    OrgApacheSlingJcrWebdavImplServletsSimpleWebDavServletProperties();
    virtual ~OrgApacheSlingJcrWebdavImplServletsSimpleWebDavServletProperties();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    nlohmann::json toJson() const override;
    void fromJson(nlohmann::json& json) override;

    /////////////////////////////////////////////
    /// OrgApacheSlingJcrWebdavImplServletsSimpleWebDavServletProperties members

    /// <summary>
    /// 
    /// </summary>
    ConfigNodePropertyString getDavRoot() const;
    void setDavRoot(ConfigNodePropertyString const& value);
    bool davRootIsSet() const;
    void unsetDav_root();
    /// <summary>
    /// 
    /// </summary>
    ConfigNodePropertyBoolean getDavCreateAbsoluteUri() const;
    void setDavCreateAbsoluteUri(ConfigNodePropertyBoolean const& value);
    bool davCreateAbsoluteUriIsSet() const;
    void unsetDav_create_absolute_uri();
    /// <summary>
    /// 
    /// </summary>
    ConfigNodePropertyString getDavRealm() const;
    void setDavRealm(ConfigNodePropertyString const& value);
    bool davRealmIsSet() const;
    void unsetDav_realm();
    /// <summary>
    /// 
    /// </summary>
    ConfigNodePropertyArray getCollectionTypes() const;
    void setCollectionTypes(ConfigNodePropertyArray const& value);
    bool collectionTypesIsSet() const;
    void unsetCollection_types();
    /// <summary>
    /// 
    /// </summary>
    ConfigNodePropertyArray getFilterPrefixes() const;
    void setFilterPrefixes(ConfigNodePropertyArray const& value);
    bool filterPrefixesIsSet() const;
    void unsetFilter_prefixes();
    /// <summary>
    /// 
    /// </summary>
    ConfigNodePropertyString getFilterTypes() const;
    void setFilterTypes(ConfigNodePropertyString const& value);
    bool filterTypesIsSet() const;
    void unsetFilter_types();
    /// <summary>
    /// 
    /// </summary>
    ConfigNodePropertyString getFilterUris() const;
    void setFilterUris(ConfigNodePropertyString const& value);
    bool filterUrisIsSet() const;
    void unsetFilter_uris();
    /// <summary>
    /// 
    /// </summary>
    ConfigNodePropertyString getTypeCollections() const;
    void setTypeCollections(ConfigNodePropertyString const& value);
    bool typeCollectionsIsSet() const;
    void unsetType_collections();
    /// <summary>
    /// 
    /// </summary>
    ConfigNodePropertyString getTypeNoncollections() const;
    void setTypeNoncollections(ConfigNodePropertyString const& value);
    bool typeNoncollectionsIsSet() const;
    void unsetType_noncollections();
    /// <summary>
    /// 
    /// </summary>
    ConfigNodePropertyString getTypeContent() const;
    void setTypeContent(ConfigNodePropertyString const& value);
    bool typeContentIsSet() const;
    void unsetType_content();

protected:
    ConfigNodePropertyString m_Dav_root;
    bool m_Dav_rootIsSet;
    ConfigNodePropertyBoolean m_Dav_create_absolute_uri;
    bool m_Dav_create_absolute_uriIsSet;
    ConfigNodePropertyString m_Dav_realm;
    bool m_Dav_realmIsSet;
    ConfigNodePropertyArray m_Collection_types;
    bool m_Collection_typesIsSet;
    ConfigNodePropertyArray m_Filter_prefixes;
    bool m_Filter_prefixesIsSet;
    ConfigNodePropertyString m_Filter_types;
    bool m_Filter_typesIsSet;
    ConfigNodePropertyString m_Filter_uris;
    bool m_Filter_urisIsSet;
    ConfigNodePropertyString m_Type_collections;
    bool m_Type_collectionsIsSet;
    ConfigNodePropertyString m_Type_noncollections;
    bool m_Type_noncollectionsIsSet;
    ConfigNodePropertyString m_Type_content;
    bool m_Type_contentIsSet;
};

}
}
}
}

#endif /* OrgApacheSlingJcrWebdavImplServletsSimpleWebDavServletProperties_H_ */
