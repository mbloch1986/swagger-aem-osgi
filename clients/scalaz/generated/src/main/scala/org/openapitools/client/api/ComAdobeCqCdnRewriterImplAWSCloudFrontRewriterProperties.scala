package org.openapitools.client.api

import argonaut._
import argonaut.EncodeJson._
import argonaut.DecodeJson._

import org.http4s.{EntityDecoder, EntityEncoder}
import org.http4s.argonaut._
import org.joda.time.DateTime
import ComAdobeCqCdnRewriterImplAWSCloudFrontRewriterProperties._

case class ComAdobeCqCdnRewriterImplAWSCloudFrontRewriterProperties (
  serviceRanking: Option[ConfigNodePropertyInteger],
keypairId: Option[ConfigNodePropertyString],
keypairAlias: Option[ConfigNodePropertyString],
cdnrewriterAttributes: Option[ConfigNodePropertyArray],
cdnRewriterDistributionDomain: Option[ConfigNodePropertyString])

object ComAdobeCqCdnRewriterImplAWSCloudFrontRewriterProperties {
  import DateTimeCodecs._

  implicit val ComAdobeCqCdnRewriterImplAWSCloudFrontRewriterPropertiesCodecJson: CodecJson[ComAdobeCqCdnRewriterImplAWSCloudFrontRewriterProperties] = CodecJson.derive[ComAdobeCqCdnRewriterImplAWSCloudFrontRewriterProperties]
  implicit val ComAdobeCqCdnRewriterImplAWSCloudFrontRewriterPropertiesDecoder: EntityDecoder[ComAdobeCqCdnRewriterImplAWSCloudFrontRewriterProperties] = jsonOf[ComAdobeCqCdnRewriterImplAWSCloudFrontRewriterProperties]
  implicit val ComAdobeCqCdnRewriterImplAWSCloudFrontRewriterPropertiesEncoder: EntityEncoder[ComAdobeCqCdnRewriterImplAWSCloudFrontRewriterProperties] = jsonEncoderOf[ComAdobeCqCdnRewriterImplAWSCloudFrontRewriterProperties]
}
