/**
* Adobe Experience Manager OSGI config (AEM) API
* Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
*
* OpenAPI spec version: 1.0.0-pre.0
* Contact: opensource@shinesolutions.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/


#include "OrgApacheJackrabbitOakSpiSecurityAuthorizationCugImplCugConfiProperties.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

OrgApacheJackrabbitOakSpiSecurityAuthorizationCugImplCugConfiProperties::OrgApacheJackrabbitOakSpiSecurityAuthorizationCugImplCugConfiProperties()
{
    m_CugSupportedPathsIsSet = false;
    m_CugEnabledIsSet = false;
    m_ConfigurationRankingIsSet = false;
    
}

OrgApacheJackrabbitOakSpiSecurityAuthorizationCugImplCugConfiProperties::~OrgApacheJackrabbitOakSpiSecurityAuthorizationCugImplCugConfiProperties()
{
}

void OrgApacheJackrabbitOakSpiSecurityAuthorizationCugImplCugConfiProperties::validate()
{
    // TODO: implement validation
}

nlohmann::json OrgApacheJackrabbitOakSpiSecurityAuthorizationCugImplCugConfiProperties::toJson() const
{
    nlohmann::json val = nlohmann::json::object();

    if(m_CugSupportedPathsIsSet)
    {
        val["cugSupportedPaths"] = ModelBase::toJson(m_CugSupportedPaths);
    }
    if(m_CugEnabledIsSet)
    {
        val["cugEnabled"] = ModelBase::toJson(m_CugEnabled);
    }
    if(m_ConfigurationRankingIsSet)
    {
        val["configurationRanking"] = ModelBase::toJson(m_ConfigurationRanking);
    }
    

    return val;
}

void OrgApacheJackrabbitOakSpiSecurityAuthorizationCugImplCugConfiProperties::fromJson(nlohmann::json& val)
{
    if(val.find("cugSupportedPaths") != val.end())
    {
        if(!val["cugSupportedPaths"].is_null())
        {
            ConfigNodePropertyArray newItem;
            newItem.fromJson(val["cugSupportedPaths"]);
            setCugSupportedPaths( newItem );
        }
        
    }
    if(val.find("cugEnabled") != val.end())
    {
        if(!val["cugEnabled"].is_null())
        {
            ConfigNodePropertyBoolean newItem;
            newItem.fromJson(val["cugEnabled"]);
            setCugEnabled( newItem );
        }
        
    }
    if(val.find("configurationRanking") != val.end())
    {
        if(!val["configurationRanking"].is_null())
        {
            ConfigNodePropertyInteger newItem;
            newItem.fromJson(val["configurationRanking"]);
            setConfigurationRanking( newItem );
        }
        
    }
    
}


ConfigNodePropertyArray OrgApacheJackrabbitOakSpiSecurityAuthorizationCugImplCugConfiProperties::getCugSupportedPaths() const
{
    return m_CugSupportedPaths;
}
void OrgApacheJackrabbitOakSpiSecurityAuthorizationCugImplCugConfiProperties::setCugSupportedPaths(ConfigNodePropertyArray const& value)
{
    m_CugSupportedPaths = value;
    m_CugSupportedPathsIsSet = true;
}
bool OrgApacheJackrabbitOakSpiSecurityAuthorizationCugImplCugConfiProperties::cugSupportedPathsIsSet() const
{
    return m_CugSupportedPathsIsSet;
}
void OrgApacheJackrabbitOakSpiSecurityAuthorizationCugImplCugConfiProperties::unsetCugSupportedPaths()
{
    m_CugSupportedPathsIsSet = false;
}
ConfigNodePropertyBoolean OrgApacheJackrabbitOakSpiSecurityAuthorizationCugImplCugConfiProperties::getCugEnabled() const
{
    return m_CugEnabled;
}
void OrgApacheJackrabbitOakSpiSecurityAuthorizationCugImplCugConfiProperties::setCugEnabled(ConfigNodePropertyBoolean const& value)
{
    m_CugEnabled = value;
    m_CugEnabledIsSet = true;
}
bool OrgApacheJackrabbitOakSpiSecurityAuthorizationCugImplCugConfiProperties::cugEnabledIsSet() const
{
    return m_CugEnabledIsSet;
}
void OrgApacheJackrabbitOakSpiSecurityAuthorizationCugImplCugConfiProperties::unsetCugEnabled()
{
    m_CugEnabledIsSet = false;
}
ConfigNodePropertyInteger OrgApacheJackrabbitOakSpiSecurityAuthorizationCugImplCugConfiProperties::getConfigurationRanking() const
{
    return m_ConfigurationRanking;
}
void OrgApacheJackrabbitOakSpiSecurityAuthorizationCugImplCugConfiProperties::setConfigurationRanking(ConfigNodePropertyInteger const& value)
{
    m_ConfigurationRanking = value;
    m_ConfigurationRankingIsSet = true;
}
bool OrgApacheJackrabbitOakSpiSecurityAuthorizationCugImplCugConfiProperties::configurationRankingIsSet() const
{
    return m_ConfigurationRankingIsSet;
}
void OrgApacheJackrabbitOakSpiSecurityAuthorizationCugImplCugConfiProperties::unsetConfigurationRanking()
{
    m_ConfigurationRankingIsSet = false;
}

}
}
}
}

