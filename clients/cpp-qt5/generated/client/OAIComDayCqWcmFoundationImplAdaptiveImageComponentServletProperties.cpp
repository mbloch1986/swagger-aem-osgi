/**
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


#include "OAIComDayCqWcmFoundationImplAdaptiveImageComponentServletProperties.h"

#include "OAIHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace OpenAPI {

OAIComDayCqWcmFoundationImplAdaptiveImageComponentServletProperties::OAIComDayCqWcmFoundationImplAdaptiveImageComponentServletProperties(QString json) {
    init();
    this->fromJson(json);
}

OAIComDayCqWcmFoundationImplAdaptiveImageComponentServletProperties::OAIComDayCqWcmFoundationImplAdaptiveImageComponentServletProperties() {
    init();
}

OAIComDayCqWcmFoundationImplAdaptiveImageComponentServletProperties::~OAIComDayCqWcmFoundationImplAdaptiveImageComponentServletProperties() {
    this->cleanup();
}

void
OAIComDayCqWcmFoundationImplAdaptiveImageComponentServletProperties::init() {
    adapt_supported_widths = new OAIConfigNodePropertyArray();
    m_adapt_supported_widths_isSet = false;
}

void
OAIComDayCqWcmFoundationImplAdaptiveImageComponentServletProperties::cleanup() {
    if(adapt_supported_widths != nullptr) { 
        delete adapt_supported_widths;
    }
}

OAIComDayCqWcmFoundationImplAdaptiveImageComponentServletProperties*
OAIComDayCqWcmFoundationImplAdaptiveImageComponentServletProperties::fromJson(QString json) {
    QByteArray array (json.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
    return this;
}

void
OAIComDayCqWcmFoundationImplAdaptiveImageComponentServletProperties::fromJsonObject(QJsonObject pJson) {
    ::OpenAPI::setValue(&adapt_supported_widths, pJson["adapt.supported.widths"], "OAIConfigNodePropertyArray", "OAIConfigNodePropertyArray");
    
}

QString
OAIComDayCqWcmFoundationImplAdaptiveImageComponentServletProperties::asJson ()
{
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject
OAIComDayCqWcmFoundationImplAdaptiveImageComponentServletProperties::asJsonObject() {
    QJsonObject obj;
    if((adapt_supported_widths != nullptr) && (adapt_supported_widths->isSet())){
        toJsonValue(QString("adapt.supported.widths"), adapt_supported_widths, obj, QString("OAIConfigNodePropertyArray"));
    }

    return obj;
}

OAIConfigNodePropertyArray*
OAIComDayCqWcmFoundationImplAdaptiveImageComponentServletProperties::getAdaptSupportedWidths() {
    return adapt_supported_widths;
}
void
OAIComDayCqWcmFoundationImplAdaptiveImageComponentServletProperties::setAdaptSupportedWidths(OAIConfigNodePropertyArray* adapt_supported_widths) {
    this->adapt_supported_widths = adapt_supported_widths;
    this->m_adapt_supported_widths_isSet = true;
}


bool
OAIComDayCqWcmFoundationImplAdaptiveImageComponentServletProperties::isSet(){
    bool isObjectUpdated = false;
    do{
        if(adapt_supported_widths != nullptr && adapt_supported_widths->isSet()){ isObjectUpdated = true; break;}
    }while(false);
    return isObjectUpdated;
}
}

