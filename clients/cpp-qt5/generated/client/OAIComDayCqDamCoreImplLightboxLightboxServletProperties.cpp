/**
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


#include "OAIComDayCqDamCoreImplLightboxLightboxServletProperties.h"

#include "OAIHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace OpenAPI {

OAIComDayCqDamCoreImplLightboxLightboxServletProperties::OAIComDayCqDamCoreImplLightboxLightboxServletProperties(QString json) {
    init();
    this->fromJson(json);
}

OAIComDayCqDamCoreImplLightboxLightboxServletProperties::OAIComDayCqDamCoreImplLightboxLightboxServletProperties() {
    init();
}

OAIComDayCqDamCoreImplLightboxLightboxServletProperties::~OAIComDayCqDamCoreImplLightboxLightboxServletProperties() {
    this->cleanup();
}

void
OAIComDayCqDamCoreImplLightboxLightboxServletProperties::init() {
    sling_servlet_paths = new OAIConfigNodePropertyString();
    m_sling_servlet_paths_isSet = false;
    sling_servlet_methods = new OAIConfigNodePropertyArray();
    m_sling_servlet_methods_isSet = false;
    cq_dam_enable_anonymous = new OAIConfigNodePropertyBoolean();
    m_cq_dam_enable_anonymous_isSet = false;
}

void
OAIComDayCqDamCoreImplLightboxLightboxServletProperties::cleanup() {
    if(sling_servlet_paths != nullptr) { 
        delete sling_servlet_paths;
    }
    if(sling_servlet_methods != nullptr) { 
        delete sling_servlet_methods;
    }
    if(cq_dam_enable_anonymous != nullptr) { 
        delete cq_dam_enable_anonymous;
    }
}

OAIComDayCqDamCoreImplLightboxLightboxServletProperties*
OAIComDayCqDamCoreImplLightboxLightboxServletProperties::fromJson(QString json) {
    QByteArray array (json.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
    return this;
}

void
OAIComDayCqDamCoreImplLightboxLightboxServletProperties::fromJsonObject(QJsonObject pJson) {
    ::OpenAPI::setValue(&sling_servlet_paths, pJson["sling.servlet.paths"], "OAIConfigNodePropertyString", "OAIConfigNodePropertyString");
    
    ::OpenAPI::setValue(&sling_servlet_methods, pJson["sling.servlet.methods"], "OAIConfigNodePropertyArray", "OAIConfigNodePropertyArray");
    
    ::OpenAPI::setValue(&cq_dam_enable_anonymous, pJson["cq.dam.enable.anonymous"], "OAIConfigNodePropertyBoolean", "OAIConfigNodePropertyBoolean");
    
}

QString
OAIComDayCqDamCoreImplLightboxLightboxServletProperties::asJson ()
{
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject
OAIComDayCqDamCoreImplLightboxLightboxServletProperties::asJsonObject() {
    QJsonObject obj;
    if((sling_servlet_paths != nullptr) && (sling_servlet_paths->isSet())){
        toJsonValue(QString("sling.servlet.paths"), sling_servlet_paths, obj, QString("OAIConfigNodePropertyString"));
    }
    if((sling_servlet_methods != nullptr) && (sling_servlet_methods->isSet())){
        toJsonValue(QString("sling.servlet.methods"), sling_servlet_methods, obj, QString("OAIConfigNodePropertyArray"));
    }
    if((cq_dam_enable_anonymous != nullptr) && (cq_dam_enable_anonymous->isSet())){
        toJsonValue(QString("cq.dam.enable.anonymous"), cq_dam_enable_anonymous, obj, QString("OAIConfigNodePropertyBoolean"));
    }

    return obj;
}

OAIConfigNodePropertyString*
OAIComDayCqDamCoreImplLightboxLightboxServletProperties::getSlingServletPaths() {
    return sling_servlet_paths;
}
void
OAIComDayCqDamCoreImplLightboxLightboxServletProperties::setSlingServletPaths(OAIConfigNodePropertyString* sling_servlet_paths) {
    this->sling_servlet_paths = sling_servlet_paths;
    this->m_sling_servlet_paths_isSet = true;
}

OAIConfigNodePropertyArray*
OAIComDayCqDamCoreImplLightboxLightboxServletProperties::getSlingServletMethods() {
    return sling_servlet_methods;
}
void
OAIComDayCqDamCoreImplLightboxLightboxServletProperties::setSlingServletMethods(OAIConfigNodePropertyArray* sling_servlet_methods) {
    this->sling_servlet_methods = sling_servlet_methods;
    this->m_sling_servlet_methods_isSet = true;
}

OAIConfigNodePropertyBoolean*
OAIComDayCqDamCoreImplLightboxLightboxServletProperties::getCqDamEnableAnonymous() {
    return cq_dam_enable_anonymous;
}
void
OAIComDayCqDamCoreImplLightboxLightboxServletProperties::setCqDamEnableAnonymous(OAIConfigNodePropertyBoolean* cq_dam_enable_anonymous) {
    this->cq_dam_enable_anonymous = cq_dam_enable_anonymous;
    this->m_cq_dam_enable_anonymous_isSet = true;
}


bool
OAIComDayCqDamCoreImplLightboxLightboxServletProperties::isSet(){
    bool isObjectUpdated = false;
    do{
        if(sling_servlet_paths != nullptr && sling_servlet_paths->isSet()){ isObjectUpdated = true; break;}
        if(sling_servlet_methods != nullptr && sling_servlet_methods->isSet()){ isObjectUpdated = true; break;}
        if(cq_dam_enable_anonymous != nullptr && cq_dam_enable_anonymous->isSet()){ isObjectUpdated = true; break;}
    }while(false);
    return isObjectUpdated;
}
}

