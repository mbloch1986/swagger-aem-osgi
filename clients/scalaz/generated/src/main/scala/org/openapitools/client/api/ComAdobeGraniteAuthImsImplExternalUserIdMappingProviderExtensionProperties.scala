package org.openapitools.client.api

import argonaut._
import argonaut.EncodeJson._
import argonaut.DecodeJson._

import org.http4s.{EntityDecoder, EntityEncoder}
import org.http4s.argonaut._
import org.joda.time.DateTime
import ComAdobeGraniteAuthImsImplExternalUserIdMappingProviderExtensionProperties._

case class ComAdobeGraniteAuthImsImplExternalUserIdMappingProviderExtensionProperties (
  oauthProviderId: Option[ConfigNodePropertyString])

object ComAdobeGraniteAuthImsImplExternalUserIdMappingProviderExtensionProperties {
  import DateTimeCodecs._

  implicit val ComAdobeGraniteAuthImsImplExternalUserIdMappingProviderExtensionPropertiesCodecJson: CodecJson[ComAdobeGraniteAuthImsImplExternalUserIdMappingProviderExtensionProperties] = CodecJson.derive[ComAdobeGraniteAuthImsImplExternalUserIdMappingProviderExtensionProperties]
  implicit val ComAdobeGraniteAuthImsImplExternalUserIdMappingProviderExtensionPropertiesDecoder: EntityDecoder[ComAdobeGraniteAuthImsImplExternalUserIdMappingProviderExtensionProperties] = jsonOf[ComAdobeGraniteAuthImsImplExternalUserIdMappingProviderExtensionProperties]
  implicit val ComAdobeGraniteAuthImsImplExternalUserIdMappingProviderExtensionPropertiesEncoder: EntityEncoder[ComAdobeGraniteAuthImsImplExternalUserIdMappingProviderExtensionProperties] = jsonEncoderOf[ComAdobeGraniteAuthImsImplExternalUserIdMappingProviderExtensionProperties]
}
