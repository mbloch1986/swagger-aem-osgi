# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server.models.config_node_property_drop_down import ConfigNodePropertyDropDown  # noqa: F401,E501
from openapi_server import util


class ComAdobeCqSocialCommonsEmailreplyImplEmailReplyImporterProperties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, connect_protocol: ConfigNodePropertyDropDown=None):  # noqa: E501
        """ComAdobeCqSocialCommonsEmailreplyImplEmailReplyImporterProperties - a model defined in OpenAPI

        :param connect_protocol: The connect_protocol of this ComAdobeCqSocialCommonsEmailreplyImplEmailReplyImporterProperties.  # noqa: E501
        :type connect_protocol: ConfigNodePropertyDropDown
        """
        self.openapi_types = {
            'connect_protocol': ConfigNodePropertyDropDown
        }

        self.attribute_map = {
            'connect_protocol': 'connectProtocol'
        }

        self._connect_protocol = connect_protocol

    @classmethod
    def from_dict(cls, dikt) -> 'ComAdobeCqSocialCommonsEmailreplyImplEmailReplyImporterProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The comAdobeCqSocialCommonsEmailreplyImplEmailReplyImporterProperties of this ComAdobeCqSocialCommonsEmailreplyImplEmailReplyImporterProperties.  # noqa: E501
        :rtype: ComAdobeCqSocialCommonsEmailreplyImplEmailReplyImporterProperties
        """
        return util.deserialize_model(dikt, cls)

    @property
    def connect_protocol(self) -> ConfigNodePropertyDropDown:
        """Gets the connect_protocol of this ComAdobeCqSocialCommonsEmailreplyImplEmailReplyImporterProperties.


        :return: The connect_protocol of this ComAdobeCqSocialCommonsEmailreplyImplEmailReplyImporterProperties.
        :rtype: ConfigNodePropertyDropDown
        """
        return self._connect_protocol

    @connect_protocol.setter
    def connect_protocol(self, connect_protocol: ConfigNodePropertyDropDown):
        """Sets the connect_protocol of this ComAdobeCqSocialCommonsEmailreplyImplEmailReplyImporterProperties.


        :param connect_protocol: The connect_protocol of this ComAdobeCqSocialCommonsEmailreplyImplEmailReplyImporterProperties.
        :type connect_protocol: ConfigNodePropertyDropDown
        """

        self._connect_protocol = connect_protocol
