/**
* Adobe Experience Manager OSGI config (AEM) API
* Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
*
* OpenAPI spec version: 1.0.0-pre.0
* Contact: opensource@shinesolutions.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/


#include "OrgApacheSlingI18nImplJcrResourceBundleProviderProperties.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

OrgApacheSlingI18nImplJcrResourceBundleProviderProperties::OrgApacheSlingI18nImplJcrResourceBundleProviderProperties()
{
    m_Locale_defaultIsSet = false;
    m_Preload_bundlesIsSet = false;
    m_Invalidation_delayIsSet = false;
    
}

OrgApacheSlingI18nImplJcrResourceBundleProviderProperties::~OrgApacheSlingI18nImplJcrResourceBundleProviderProperties()
{
}

void OrgApacheSlingI18nImplJcrResourceBundleProviderProperties::validate()
{
    // TODO: implement validation
}

nlohmann::json OrgApacheSlingI18nImplJcrResourceBundleProviderProperties::toJson() const
{
    nlohmann::json val = nlohmann::json::object();

    if(m_Locale_defaultIsSet)
    {
        val["locale.default"] = ModelBase::toJson(m_Locale_default);
    }
    if(m_Preload_bundlesIsSet)
    {
        val["preload.bundles"] = ModelBase::toJson(m_Preload_bundles);
    }
    if(m_Invalidation_delayIsSet)
    {
        val["invalidation.delay"] = ModelBase::toJson(m_Invalidation_delay);
    }
    

    return val;
}

void OrgApacheSlingI18nImplJcrResourceBundleProviderProperties::fromJson(nlohmann::json& val)
{
    if(val.find("locale.default") != val.end())
    {
        if(!val["locale.default"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["locale.default"]);
            setLocaleDefault( newItem );
        }
        
    }
    if(val.find("preload.bundles") != val.end())
    {
        if(!val["preload.bundles"].is_null())
        {
            ConfigNodePropertyBoolean newItem;
            newItem.fromJson(val["preload.bundles"]);
            setPreloadBundles( newItem );
        }
        
    }
    if(val.find("invalidation.delay") != val.end())
    {
        if(!val["invalidation.delay"].is_null())
        {
            ConfigNodePropertyInteger newItem;
            newItem.fromJson(val["invalidation.delay"]);
            setInvalidationDelay( newItem );
        }
        
    }
    
}


ConfigNodePropertyString OrgApacheSlingI18nImplJcrResourceBundleProviderProperties::getLocaleDefault() const
{
    return m_Locale_default;
}
void OrgApacheSlingI18nImplJcrResourceBundleProviderProperties::setLocaleDefault(ConfigNodePropertyString const& value)
{
    m_Locale_default = value;
    m_Locale_defaultIsSet = true;
}
bool OrgApacheSlingI18nImplJcrResourceBundleProviderProperties::localeDefaultIsSet() const
{
    return m_Locale_defaultIsSet;
}
void OrgApacheSlingI18nImplJcrResourceBundleProviderProperties::unsetLocale_default()
{
    m_Locale_defaultIsSet = false;
}
ConfigNodePropertyBoolean OrgApacheSlingI18nImplJcrResourceBundleProviderProperties::getPreloadBundles() const
{
    return m_Preload_bundles;
}
void OrgApacheSlingI18nImplJcrResourceBundleProviderProperties::setPreloadBundles(ConfigNodePropertyBoolean const& value)
{
    m_Preload_bundles = value;
    m_Preload_bundlesIsSet = true;
}
bool OrgApacheSlingI18nImplJcrResourceBundleProviderProperties::preloadBundlesIsSet() const
{
    return m_Preload_bundlesIsSet;
}
void OrgApacheSlingI18nImplJcrResourceBundleProviderProperties::unsetPreload_bundles()
{
    m_Preload_bundlesIsSet = false;
}
ConfigNodePropertyInteger OrgApacheSlingI18nImplJcrResourceBundleProviderProperties::getInvalidationDelay() const
{
    return m_Invalidation_delay;
}
void OrgApacheSlingI18nImplJcrResourceBundleProviderProperties::setInvalidationDelay(ConfigNodePropertyInteger const& value)
{
    m_Invalidation_delay = value;
    m_Invalidation_delayIsSet = true;
}
bool OrgApacheSlingI18nImplJcrResourceBundleProviderProperties::invalidationDelayIsSet() const
{
    return m_Invalidation_delayIsSet;
}
void OrgApacheSlingI18nImplJcrResourceBundleProviderProperties::unsetInvalidation_delay()
{
    m_Invalidation_delayIsSet = false;
}

}
}
}
}

