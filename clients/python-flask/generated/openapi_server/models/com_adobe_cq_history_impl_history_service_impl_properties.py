# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server.models.config_node_property_array import ConfigNodePropertyArray  # noqa: F401,E501
from openapi_server import util


class ComAdobeCqHistoryImplHistoryServiceImplProperties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, history_service_resource_types: ConfigNodePropertyArray=None, history_service_path_filter: ConfigNodePropertyArray=None):  # noqa: E501
        """ComAdobeCqHistoryImplHistoryServiceImplProperties - a model defined in OpenAPI

        :param history_service_resource_types: The history_service_resource_types of this ComAdobeCqHistoryImplHistoryServiceImplProperties.  # noqa: E501
        :type history_service_resource_types: ConfigNodePropertyArray
        :param history_service_path_filter: The history_service_path_filter of this ComAdobeCqHistoryImplHistoryServiceImplProperties.  # noqa: E501
        :type history_service_path_filter: ConfigNodePropertyArray
        """
        self.openapi_types = {
            'history_service_resource_types': ConfigNodePropertyArray,
            'history_service_path_filter': ConfigNodePropertyArray
        }

        self.attribute_map = {
            'history_service_resource_types': 'history.service.resourceTypes',
            'history_service_path_filter': 'history.service.pathFilter'
        }

        self._history_service_resource_types = history_service_resource_types
        self._history_service_path_filter = history_service_path_filter

    @classmethod
    def from_dict(cls, dikt) -> 'ComAdobeCqHistoryImplHistoryServiceImplProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The comAdobeCqHistoryImplHistoryServiceImplProperties of this ComAdobeCqHistoryImplHistoryServiceImplProperties.  # noqa: E501
        :rtype: ComAdobeCqHistoryImplHistoryServiceImplProperties
        """
        return util.deserialize_model(dikt, cls)

    @property
    def history_service_resource_types(self) -> ConfigNodePropertyArray:
        """Gets the history_service_resource_types of this ComAdobeCqHistoryImplHistoryServiceImplProperties.


        :return: The history_service_resource_types of this ComAdobeCqHistoryImplHistoryServiceImplProperties.
        :rtype: ConfigNodePropertyArray
        """
        return self._history_service_resource_types

    @history_service_resource_types.setter
    def history_service_resource_types(self, history_service_resource_types: ConfigNodePropertyArray):
        """Sets the history_service_resource_types of this ComAdobeCqHistoryImplHistoryServiceImplProperties.


        :param history_service_resource_types: The history_service_resource_types of this ComAdobeCqHistoryImplHistoryServiceImplProperties.
        :type history_service_resource_types: ConfigNodePropertyArray
        """

        self._history_service_resource_types = history_service_resource_types

    @property
    def history_service_path_filter(self) -> ConfigNodePropertyArray:
        """Gets the history_service_path_filter of this ComAdobeCqHistoryImplHistoryServiceImplProperties.


        :return: The history_service_path_filter of this ComAdobeCqHistoryImplHistoryServiceImplProperties.
        :rtype: ConfigNodePropertyArray
        """
        return self._history_service_path_filter

    @history_service_path_filter.setter
    def history_service_path_filter(self, history_service_path_filter: ConfigNodePropertyArray):
        """Sets the history_service_path_filter of this ComAdobeCqHistoryImplHistoryServiceImplProperties.


        :param history_service_path_filter: The history_service_path_filter of this ComAdobeCqHistoryImplHistoryServiceImplProperties.
        :type history_service_path_filter: ConfigNodePropertyArray
        """

        self._history_service_path_filter = history_service_path_filter
