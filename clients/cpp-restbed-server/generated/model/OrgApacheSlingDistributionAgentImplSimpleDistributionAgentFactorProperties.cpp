/**
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 3.2.1-SNAPSHOT.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */



#include "OrgApacheSlingDistributionAgentImplSimpleDistributionAgentFactorProperties.h"

#include <string>
#include <sstream>
#include <boost/property_tree/ptree.hpp>
#include <boost/property_tree/json_parser.hpp>

using boost::property_tree::ptree;
using boost::property_tree::read_json;
using boost::property_tree::write_json;

namespace org {
namespace openapitools {
namespace server {
namespace model {

OrgApacheSlingDistributionAgentImplSimpleDistributionAgentFactorProperties::OrgApacheSlingDistributionAgentImplSimpleDistributionAgentFactorProperties()
{
    
}

OrgApacheSlingDistributionAgentImplSimpleDistributionAgentFactorProperties::~OrgApacheSlingDistributionAgentImplSimpleDistributionAgentFactorProperties()
{
}

std::string OrgApacheSlingDistributionAgentImplSimpleDistributionAgentFactorProperties::toJsonString()
{
	std::stringstream ss;
	ptree pt;
	write_json(ss, pt, false);
	return ss.str();
}

void OrgApacheSlingDistributionAgentImplSimpleDistributionAgentFactorProperties::fromJsonString(std::string const& jsonString)
{
	std::stringstream ss(jsonString);
	ptree pt;
	read_json(ss,pt);
}

std::shared_ptr<ConfigNodePropertyString> OrgApacheSlingDistributionAgentImplSimpleDistributionAgentFactorProperties::getName() const
{
    return m_Name;
}
void OrgApacheSlingDistributionAgentImplSimpleDistributionAgentFactorProperties::setName(std::shared_ptr<ConfigNodePropertyString> value)
{
    m_Name = value;
}
std::shared_ptr<ConfigNodePropertyString> OrgApacheSlingDistributionAgentImplSimpleDistributionAgentFactorProperties::getTitle() const
{
    return m_Title;
}
void OrgApacheSlingDistributionAgentImplSimpleDistributionAgentFactorProperties::setTitle(std::shared_ptr<ConfigNodePropertyString> value)
{
    m_Title = value;
}
std::shared_ptr<ConfigNodePropertyString> OrgApacheSlingDistributionAgentImplSimpleDistributionAgentFactorProperties::getDetails() const
{
    return m_Details;
}
void OrgApacheSlingDistributionAgentImplSimpleDistributionAgentFactorProperties::setDetails(std::shared_ptr<ConfigNodePropertyString> value)
{
    m_Details = value;
}
std::shared_ptr<ConfigNodePropertyBoolean> OrgApacheSlingDistributionAgentImplSimpleDistributionAgentFactorProperties::getEnabled() const
{
    return m_Enabled;
}
void OrgApacheSlingDistributionAgentImplSimpleDistributionAgentFactorProperties::setEnabled(std::shared_ptr<ConfigNodePropertyBoolean> value)
{
    m_Enabled = value;
}
std::shared_ptr<ConfigNodePropertyString> OrgApacheSlingDistributionAgentImplSimpleDistributionAgentFactorProperties::getServiceName() const
{
    return m_ServiceName;
}
void OrgApacheSlingDistributionAgentImplSimpleDistributionAgentFactorProperties::setServiceName(std::shared_ptr<ConfigNodePropertyString> value)
{
    m_ServiceName = value;
}
std::shared_ptr<ConfigNodePropertyDropDown> OrgApacheSlingDistributionAgentImplSimpleDistributionAgentFactorProperties::getLogLevel() const
{
    return m_Log_level;
}
void OrgApacheSlingDistributionAgentImplSimpleDistributionAgentFactorProperties::setLogLevel(std::shared_ptr<ConfigNodePropertyDropDown> value)
{
    m_Log_level = value;
}
std::shared_ptr<ConfigNodePropertyBoolean> OrgApacheSlingDistributionAgentImplSimpleDistributionAgentFactorProperties::getQueueProcessingEnabled() const
{
    return m_Queue_processing_enabled;
}
void OrgApacheSlingDistributionAgentImplSimpleDistributionAgentFactorProperties::setQueueProcessingEnabled(std::shared_ptr<ConfigNodePropertyBoolean> value)
{
    m_Queue_processing_enabled = value;
}
std::shared_ptr<ConfigNodePropertyString> OrgApacheSlingDistributionAgentImplSimpleDistributionAgentFactorProperties::getPackageExporterTarget() const
{
    return m_PackageExporter_target;
}
void OrgApacheSlingDistributionAgentImplSimpleDistributionAgentFactorProperties::setPackageExporterTarget(std::shared_ptr<ConfigNodePropertyString> value)
{
    m_PackageExporter_target = value;
}
std::shared_ptr<ConfigNodePropertyString> OrgApacheSlingDistributionAgentImplSimpleDistributionAgentFactorProperties::getPackageImporterTarget() const
{
    return m_PackageImporter_target;
}
void OrgApacheSlingDistributionAgentImplSimpleDistributionAgentFactorProperties::setPackageImporterTarget(std::shared_ptr<ConfigNodePropertyString> value)
{
    m_PackageImporter_target = value;
}
std::shared_ptr<ConfigNodePropertyString> OrgApacheSlingDistributionAgentImplSimpleDistributionAgentFactorProperties::getRequestAuthorizationStrategyTarget() const
{
    return m_RequestAuthorizationStrategy_target;
}
void OrgApacheSlingDistributionAgentImplSimpleDistributionAgentFactorProperties::setRequestAuthorizationStrategyTarget(std::shared_ptr<ConfigNodePropertyString> value)
{
    m_RequestAuthorizationStrategy_target = value;
}
std::shared_ptr<ConfigNodePropertyString> OrgApacheSlingDistributionAgentImplSimpleDistributionAgentFactorProperties::getTriggersTarget() const
{
    return m_Triggers_target;
}
void OrgApacheSlingDistributionAgentImplSimpleDistributionAgentFactorProperties::setTriggersTarget(std::shared_ptr<ConfigNodePropertyString> value)
{
    m_Triggers_target = value;
}

}
}
}
}

