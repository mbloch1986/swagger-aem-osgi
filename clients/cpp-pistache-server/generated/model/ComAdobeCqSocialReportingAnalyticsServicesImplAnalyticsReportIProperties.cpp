/**
* Adobe Experience Manager OSGI config (AEM) API
* Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
*
* OpenAPI spec version: 1.0.0-pre.0
* Contact: opensource@shinesolutions.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/


#include "ComAdobeCqSocialReportingAnalyticsServicesImplAnalyticsReportIProperties.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

ComAdobeCqSocialReportingAnalyticsServicesImplAnalyticsReportIProperties::ComAdobeCqSocialReportingAnalyticsServicesImplAnalyticsReportIProperties()
{
    m_Cq_social_reporting_analytics_polling_importer_intervalIsSet = false;
    m_Cq_social_reporting_analytics_polling_importer_pageSizeIsSet = false;
    
}

ComAdobeCqSocialReportingAnalyticsServicesImplAnalyticsReportIProperties::~ComAdobeCqSocialReportingAnalyticsServicesImplAnalyticsReportIProperties()
{
}

void ComAdobeCqSocialReportingAnalyticsServicesImplAnalyticsReportIProperties::validate()
{
    // TODO: implement validation
}

nlohmann::json ComAdobeCqSocialReportingAnalyticsServicesImplAnalyticsReportIProperties::toJson() const
{
    nlohmann::json val = nlohmann::json::object();

    if(m_Cq_social_reporting_analytics_polling_importer_intervalIsSet)
    {
        val["cq.social.reporting.analytics.polling.importer.interval"] = ModelBase::toJson(m_Cq_social_reporting_analytics_polling_importer_interval);
    }
    if(m_Cq_social_reporting_analytics_polling_importer_pageSizeIsSet)
    {
        val["cq.social.reporting.analytics.polling.importer.pageSize"] = ModelBase::toJson(m_Cq_social_reporting_analytics_polling_importer_pageSize);
    }
    

    return val;
}

void ComAdobeCqSocialReportingAnalyticsServicesImplAnalyticsReportIProperties::fromJson(nlohmann::json& val)
{
    if(val.find("cq.social.reporting.analytics.polling.importer.interval") != val.end())
    {
        if(!val["cq.social.reporting.analytics.polling.importer.interval"].is_null())
        {
            ConfigNodePropertyInteger newItem;
            newItem.fromJson(val["cq.social.reporting.analytics.polling.importer.interval"]);
            setCqSocialReportingAnalyticsPollingImporterInterval( newItem );
        }
        
    }
    if(val.find("cq.social.reporting.analytics.polling.importer.pageSize") != val.end())
    {
        if(!val["cq.social.reporting.analytics.polling.importer.pageSize"].is_null())
        {
            ConfigNodePropertyInteger newItem;
            newItem.fromJson(val["cq.social.reporting.analytics.polling.importer.pageSize"]);
            setCqSocialReportingAnalyticsPollingImporterPageSize( newItem );
        }
        
    }
    
}


ConfigNodePropertyInteger ComAdobeCqSocialReportingAnalyticsServicesImplAnalyticsReportIProperties::getCqSocialReportingAnalyticsPollingImporterInterval() const
{
    return m_Cq_social_reporting_analytics_polling_importer_interval;
}
void ComAdobeCqSocialReportingAnalyticsServicesImplAnalyticsReportIProperties::setCqSocialReportingAnalyticsPollingImporterInterval(ConfigNodePropertyInteger const& value)
{
    m_Cq_social_reporting_analytics_polling_importer_interval = value;
    m_Cq_social_reporting_analytics_polling_importer_intervalIsSet = true;
}
bool ComAdobeCqSocialReportingAnalyticsServicesImplAnalyticsReportIProperties::cqSocialReportingAnalyticsPollingImporterIntervalIsSet() const
{
    return m_Cq_social_reporting_analytics_polling_importer_intervalIsSet;
}
void ComAdobeCqSocialReportingAnalyticsServicesImplAnalyticsReportIProperties::unsetCq_social_reporting_analytics_polling_importer_interval()
{
    m_Cq_social_reporting_analytics_polling_importer_intervalIsSet = false;
}
ConfigNodePropertyInteger ComAdobeCqSocialReportingAnalyticsServicesImplAnalyticsReportIProperties::getCqSocialReportingAnalyticsPollingImporterPageSize() const
{
    return m_Cq_social_reporting_analytics_polling_importer_pageSize;
}
void ComAdobeCqSocialReportingAnalyticsServicesImplAnalyticsReportIProperties::setCqSocialReportingAnalyticsPollingImporterPageSize(ConfigNodePropertyInteger const& value)
{
    m_Cq_social_reporting_analytics_polling_importer_pageSize = value;
    m_Cq_social_reporting_analytics_polling_importer_pageSizeIsSet = true;
}
bool ComAdobeCqSocialReportingAnalyticsServicesImplAnalyticsReportIProperties::cqSocialReportingAnalyticsPollingImporterPageSizeIsSet() const
{
    return m_Cq_social_reporting_analytics_polling_importer_pageSizeIsSet;
}
void ComAdobeCqSocialReportingAnalyticsServicesImplAnalyticsReportIProperties::unsetCq_social_reporting_analytics_polling_importer_pageSize()
{
    m_Cq_social_reporting_analytics_polling_importer_pageSizeIsSet = false;
}

}
}
}
}

