# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server.models.config_node_property_string import ConfigNodePropertyString  # noqa: F401,E501
from openapi_server import util


class OrgApacheJackrabbitOakPluginsIndexSolrOsgiEmbeddedSolrServerCoProperties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, solr_home_path: ConfigNodePropertyString=None, solr_core_name: ConfigNodePropertyString=None):  # noqa: E501
        """OrgApacheJackrabbitOakPluginsIndexSolrOsgiEmbeddedSolrServerCoProperties - a model defined in OpenAPI

        :param solr_home_path: The solr_home_path of this OrgApacheJackrabbitOakPluginsIndexSolrOsgiEmbeddedSolrServerCoProperties.  # noqa: E501
        :type solr_home_path: ConfigNodePropertyString
        :param solr_core_name: The solr_core_name of this OrgApacheJackrabbitOakPluginsIndexSolrOsgiEmbeddedSolrServerCoProperties.  # noqa: E501
        :type solr_core_name: ConfigNodePropertyString
        """
        self.openapi_types = {
            'solr_home_path': ConfigNodePropertyString,
            'solr_core_name': ConfigNodePropertyString
        }

        self.attribute_map = {
            'solr_home_path': 'solr.home.path',
            'solr_core_name': 'solr.core.name'
        }

        self._solr_home_path = solr_home_path
        self._solr_core_name = solr_core_name

    @classmethod
    def from_dict(cls, dikt) -> 'OrgApacheJackrabbitOakPluginsIndexSolrOsgiEmbeddedSolrServerCoProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The orgApacheJackrabbitOakPluginsIndexSolrOsgiEmbeddedSolrServerCoProperties of this OrgApacheJackrabbitOakPluginsIndexSolrOsgiEmbeddedSolrServerCoProperties.  # noqa: E501
        :rtype: OrgApacheJackrabbitOakPluginsIndexSolrOsgiEmbeddedSolrServerCoProperties
        """
        return util.deserialize_model(dikt, cls)

    @property
    def solr_home_path(self) -> ConfigNodePropertyString:
        """Gets the solr_home_path of this OrgApacheJackrabbitOakPluginsIndexSolrOsgiEmbeddedSolrServerCoProperties.


        :return: The solr_home_path of this OrgApacheJackrabbitOakPluginsIndexSolrOsgiEmbeddedSolrServerCoProperties.
        :rtype: ConfigNodePropertyString
        """
        return self._solr_home_path

    @solr_home_path.setter
    def solr_home_path(self, solr_home_path: ConfigNodePropertyString):
        """Sets the solr_home_path of this OrgApacheJackrabbitOakPluginsIndexSolrOsgiEmbeddedSolrServerCoProperties.


        :param solr_home_path: The solr_home_path of this OrgApacheJackrabbitOakPluginsIndexSolrOsgiEmbeddedSolrServerCoProperties.
        :type solr_home_path: ConfigNodePropertyString
        """

        self._solr_home_path = solr_home_path

    @property
    def solr_core_name(self) -> ConfigNodePropertyString:
        """Gets the solr_core_name of this OrgApacheJackrabbitOakPluginsIndexSolrOsgiEmbeddedSolrServerCoProperties.


        :return: The solr_core_name of this OrgApacheJackrabbitOakPluginsIndexSolrOsgiEmbeddedSolrServerCoProperties.
        :rtype: ConfigNodePropertyString
        """
        return self._solr_core_name

    @solr_core_name.setter
    def solr_core_name(self, solr_core_name: ConfigNodePropertyString):
        """Sets the solr_core_name of this OrgApacheJackrabbitOakPluginsIndexSolrOsgiEmbeddedSolrServerCoProperties.


        :param solr_core_name: The solr_core_name of this OrgApacheJackrabbitOakPluginsIndexSolrOsgiEmbeddedSolrServerCoProperties.
        :type solr_core_name: ConfigNodePropertyString
        """

        self._solr_core_name = solr_core_name
