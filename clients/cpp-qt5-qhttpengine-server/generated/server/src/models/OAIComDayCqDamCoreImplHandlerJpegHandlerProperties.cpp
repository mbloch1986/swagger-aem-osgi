/**
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


#include "OAIComDayCqDamCoreImplHandlerJpegHandlerProperties.h"

#include "OAIHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace OpenAPI {

OAIComDayCqDamCoreImplHandlerJpegHandlerProperties::OAIComDayCqDamCoreImplHandlerJpegHandlerProperties(QString json) {
    this->fromJson(json);
}

OAIComDayCqDamCoreImplHandlerJpegHandlerProperties::OAIComDayCqDamCoreImplHandlerJpegHandlerProperties() {
    this->init();
}

OAIComDayCqDamCoreImplHandlerJpegHandlerProperties::~OAIComDayCqDamCoreImplHandlerJpegHandlerProperties() {
    
}

void
OAIComDayCqDamCoreImplHandlerJpegHandlerProperties::init() {
    m_cq_dam_enable_ext_meta_extraction_isSet = false;
    m_large_file_threshold_isSet = false;
    m_large_comment_threshold_isSet = false;
}

void
OAIComDayCqDamCoreImplHandlerJpegHandlerProperties::fromJson(QString jsonString) {
    QByteArray array (jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void
OAIComDayCqDamCoreImplHandlerJpegHandlerProperties::fromJsonObject(QJsonObject json) {
    ::OpenAPI::fromJsonValue(cq_dam_enable_ext_meta_extraction, json[QString("cq.dam.enable.ext.meta.extraction")]);
    
    ::OpenAPI::fromJsonValue(large_file_threshold, json[QString("large_file_threshold")]);
    
    ::OpenAPI::fromJsonValue(large_comment_threshold, json[QString("large_comment_threshold")]);
    
}

QString
OAIComDayCqDamCoreImplHandlerJpegHandlerProperties::asJson () const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject
OAIComDayCqDamCoreImplHandlerJpegHandlerProperties::asJsonObject() const {
    QJsonObject obj;
	if(cq_dam_enable_ext_meta_extraction.isSet()){
        obj.insert(QString("cq.dam.enable.ext.meta.extraction"), ::OpenAPI::toJsonValue(cq_dam_enable_ext_meta_extraction));
    }
	if(large_file_threshold.isSet()){
        obj.insert(QString("large_file_threshold"), ::OpenAPI::toJsonValue(large_file_threshold));
    }
	if(large_comment_threshold.isSet()){
        obj.insert(QString("large_comment_threshold"), ::OpenAPI::toJsonValue(large_comment_threshold));
    }
    return obj;
}

OAIConfigNodePropertyBoolean
OAIComDayCqDamCoreImplHandlerJpegHandlerProperties::getCqDamEnableExtMetaExtraction() const {
    return cq_dam_enable_ext_meta_extraction;
}
void
OAIComDayCqDamCoreImplHandlerJpegHandlerProperties::setCqDamEnableExtMetaExtraction(const OAIConfigNodePropertyBoolean &cq_dam_enable_ext_meta_extraction) {
    this->cq_dam_enable_ext_meta_extraction = cq_dam_enable_ext_meta_extraction;
    this->m_cq_dam_enable_ext_meta_extraction_isSet = true;
}

OAIConfigNodePropertyInteger
OAIComDayCqDamCoreImplHandlerJpegHandlerProperties::getLargeFileThreshold() const {
    return large_file_threshold;
}
void
OAIComDayCqDamCoreImplHandlerJpegHandlerProperties::setLargeFileThreshold(const OAIConfigNodePropertyInteger &large_file_threshold) {
    this->large_file_threshold = large_file_threshold;
    this->m_large_file_threshold_isSet = true;
}

OAIConfigNodePropertyInteger
OAIComDayCqDamCoreImplHandlerJpegHandlerProperties::getLargeCommentThreshold() const {
    return large_comment_threshold;
}
void
OAIComDayCqDamCoreImplHandlerJpegHandlerProperties::setLargeCommentThreshold(const OAIConfigNodePropertyInteger &large_comment_threshold) {
    this->large_comment_threshold = large_comment_threshold;
    this->m_large_comment_threshold_isSet = true;
}


bool
OAIComDayCqDamCoreImplHandlerJpegHandlerProperties::isSet() const {
    bool isObjectUpdated = false;
    do{ 
        if(cq_dam_enable_ext_meta_extraction.isSet()){ isObjectUpdated = true; break;}
    
        if(large_file_threshold.isSet()){ isObjectUpdated = true; break;}
    
        if(large_comment_threshold.isSet()){ isObjectUpdated = true; break;}
    }while(false);
    return isObjectUpdated;
}

}

