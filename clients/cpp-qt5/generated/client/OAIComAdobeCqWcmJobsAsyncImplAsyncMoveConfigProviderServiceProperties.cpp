/**
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


#include "OAIComAdobeCqWcmJobsAsyncImplAsyncMoveConfigProviderServiceProperties.h"

#include "OAIHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace OpenAPI {

OAIComAdobeCqWcmJobsAsyncImplAsyncMoveConfigProviderServiceProperties::OAIComAdobeCqWcmJobsAsyncImplAsyncMoveConfigProviderServiceProperties(QString json) {
    init();
    this->fromJson(json);
}

OAIComAdobeCqWcmJobsAsyncImplAsyncMoveConfigProviderServiceProperties::OAIComAdobeCqWcmJobsAsyncImplAsyncMoveConfigProviderServiceProperties() {
    init();
}

OAIComAdobeCqWcmJobsAsyncImplAsyncMoveConfigProviderServiceProperties::~OAIComAdobeCqWcmJobsAsyncImplAsyncMoveConfigProviderServiceProperties() {
    this->cleanup();
}

void
OAIComAdobeCqWcmJobsAsyncImplAsyncMoveConfigProviderServiceProperties::init() {
    threshold = new OAIConfigNodePropertyInteger();
    m_threshold_isSet = false;
    job_topic_name = new OAIConfigNodePropertyString();
    m_job_topic_name_isSet = false;
    email_enabled = new OAIConfigNodePropertyBoolean();
    m_email_enabled_isSet = false;
}

void
OAIComAdobeCqWcmJobsAsyncImplAsyncMoveConfigProviderServiceProperties::cleanup() {
    if(threshold != nullptr) { 
        delete threshold;
    }
    if(job_topic_name != nullptr) { 
        delete job_topic_name;
    }
    if(email_enabled != nullptr) { 
        delete email_enabled;
    }
}

OAIComAdobeCqWcmJobsAsyncImplAsyncMoveConfigProviderServiceProperties*
OAIComAdobeCqWcmJobsAsyncImplAsyncMoveConfigProviderServiceProperties::fromJson(QString json) {
    QByteArray array (json.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
    return this;
}

void
OAIComAdobeCqWcmJobsAsyncImplAsyncMoveConfigProviderServiceProperties::fromJsonObject(QJsonObject pJson) {
    ::OpenAPI::setValue(&threshold, pJson["threshold"], "OAIConfigNodePropertyInteger", "OAIConfigNodePropertyInteger");
    
    ::OpenAPI::setValue(&job_topic_name, pJson["jobTopicName"], "OAIConfigNodePropertyString", "OAIConfigNodePropertyString");
    
    ::OpenAPI::setValue(&email_enabled, pJson["emailEnabled"], "OAIConfigNodePropertyBoolean", "OAIConfigNodePropertyBoolean");
    
}

QString
OAIComAdobeCqWcmJobsAsyncImplAsyncMoveConfigProviderServiceProperties::asJson ()
{
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject
OAIComAdobeCqWcmJobsAsyncImplAsyncMoveConfigProviderServiceProperties::asJsonObject() {
    QJsonObject obj;
    if((threshold != nullptr) && (threshold->isSet())){
        toJsonValue(QString("threshold"), threshold, obj, QString("OAIConfigNodePropertyInteger"));
    }
    if((job_topic_name != nullptr) && (job_topic_name->isSet())){
        toJsonValue(QString("jobTopicName"), job_topic_name, obj, QString("OAIConfigNodePropertyString"));
    }
    if((email_enabled != nullptr) && (email_enabled->isSet())){
        toJsonValue(QString("emailEnabled"), email_enabled, obj, QString("OAIConfigNodePropertyBoolean"));
    }

    return obj;
}

OAIConfigNodePropertyInteger*
OAIComAdobeCqWcmJobsAsyncImplAsyncMoveConfigProviderServiceProperties::getThreshold() {
    return threshold;
}
void
OAIComAdobeCqWcmJobsAsyncImplAsyncMoveConfigProviderServiceProperties::setThreshold(OAIConfigNodePropertyInteger* threshold) {
    this->threshold = threshold;
    this->m_threshold_isSet = true;
}

OAIConfigNodePropertyString*
OAIComAdobeCqWcmJobsAsyncImplAsyncMoveConfigProviderServiceProperties::getJobTopicName() {
    return job_topic_name;
}
void
OAIComAdobeCqWcmJobsAsyncImplAsyncMoveConfigProviderServiceProperties::setJobTopicName(OAIConfigNodePropertyString* job_topic_name) {
    this->job_topic_name = job_topic_name;
    this->m_job_topic_name_isSet = true;
}

OAIConfigNodePropertyBoolean*
OAIComAdobeCqWcmJobsAsyncImplAsyncMoveConfigProviderServiceProperties::getEmailEnabled() {
    return email_enabled;
}
void
OAIComAdobeCqWcmJobsAsyncImplAsyncMoveConfigProviderServiceProperties::setEmailEnabled(OAIConfigNodePropertyBoolean* email_enabled) {
    this->email_enabled = email_enabled;
    this->m_email_enabled_isSet = true;
}


bool
OAIComAdobeCqWcmJobsAsyncImplAsyncMoveConfigProviderServiceProperties::isSet(){
    bool isObjectUpdated = false;
    do{
        if(threshold != nullptr && threshold->isSet()){ isObjectUpdated = true; break;}
        if(job_topic_name != nullptr && job_topic_name->isSet()){ isObjectUpdated = true; break;}
        if(email_enabled != nullptr && email_enabled->isSet()){ isObjectUpdated = true; break;}
    }while(false);
    return isObjectUpdated;
}
}

