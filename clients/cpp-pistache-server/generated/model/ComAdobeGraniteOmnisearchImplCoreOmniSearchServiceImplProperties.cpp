/**
* Adobe Experience Manager OSGI config (AEM) API
* Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
*
* OpenAPI spec version: 1.0.0-pre.0
* Contact: opensource@shinesolutions.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/


#include "ComAdobeGraniteOmnisearchImplCoreOmniSearchServiceImplProperties.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

ComAdobeGraniteOmnisearchImplCoreOmniSearchServiceImplProperties::ComAdobeGraniteOmnisearchImplCoreOmniSearchServiceImplProperties()
{
    m_Omnisearch_suggestion_requiretext_minIsSet = false;
    m_Omnisearch_suggestion_spellcheck_requireIsSet = false;
    
}

ComAdobeGraniteOmnisearchImplCoreOmniSearchServiceImplProperties::~ComAdobeGraniteOmnisearchImplCoreOmniSearchServiceImplProperties()
{
}

void ComAdobeGraniteOmnisearchImplCoreOmniSearchServiceImplProperties::validate()
{
    // TODO: implement validation
}

nlohmann::json ComAdobeGraniteOmnisearchImplCoreOmniSearchServiceImplProperties::toJson() const
{
    nlohmann::json val = nlohmann::json::object();

    if(m_Omnisearch_suggestion_requiretext_minIsSet)
    {
        val["omnisearch.suggestion.requiretext.min"] = ModelBase::toJson(m_Omnisearch_suggestion_requiretext_min);
    }
    if(m_Omnisearch_suggestion_spellcheck_requireIsSet)
    {
        val["omnisearch.suggestion.spellcheck.require"] = ModelBase::toJson(m_Omnisearch_suggestion_spellcheck_require);
    }
    

    return val;
}

void ComAdobeGraniteOmnisearchImplCoreOmniSearchServiceImplProperties::fromJson(nlohmann::json& val)
{
    if(val.find("omnisearch.suggestion.requiretext.min") != val.end())
    {
        if(!val["omnisearch.suggestion.requiretext.min"].is_null())
        {
            ConfigNodePropertyInteger newItem;
            newItem.fromJson(val["omnisearch.suggestion.requiretext.min"]);
            setOmnisearchSuggestionRequiretextMin( newItem );
        }
        
    }
    if(val.find("omnisearch.suggestion.spellcheck.require") != val.end())
    {
        if(!val["omnisearch.suggestion.spellcheck.require"].is_null())
        {
            ConfigNodePropertyBoolean newItem;
            newItem.fromJson(val["omnisearch.suggestion.spellcheck.require"]);
            setOmnisearchSuggestionSpellcheckRequire( newItem );
        }
        
    }
    
}


ConfigNodePropertyInteger ComAdobeGraniteOmnisearchImplCoreOmniSearchServiceImplProperties::getOmnisearchSuggestionRequiretextMin() const
{
    return m_Omnisearch_suggestion_requiretext_min;
}
void ComAdobeGraniteOmnisearchImplCoreOmniSearchServiceImplProperties::setOmnisearchSuggestionRequiretextMin(ConfigNodePropertyInteger const& value)
{
    m_Omnisearch_suggestion_requiretext_min = value;
    m_Omnisearch_suggestion_requiretext_minIsSet = true;
}
bool ComAdobeGraniteOmnisearchImplCoreOmniSearchServiceImplProperties::omnisearchSuggestionRequiretextMinIsSet() const
{
    return m_Omnisearch_suggestion_requiretext_minIsSet;
}
void ComAdobeGraniteOmnisearchImplCoreOmniSearchServiceImplProperties::unsetOmnisearch_suggestion_requiretext_min()
{
    m_Omnisearch_suggestion_requiretext_minIsSet = false;
}
ConfigNodePropertyBoolean ComAdobeGraniteOmnisearchImplCoreOmniSearchServiceImplProperties::getOmnisearchSuggestionSpellcheckRequire() const
{
    return m_Omnisearch_suggestion_spellcheck_require;
}
void ComAdobeGraniteOmnisearchImplCoreOmniSearchServiceImplProperties::setOmnisearchSuggestionSpellcheckRequire(ConfigNodePropertyBoolean const& value)
{
    m_Omnisearch_suggestion_spellcheck_require = value;
    m_Omnisearch_suggestion_spellcheck_requireIsSet = true;
}
bool ComAdobeGraniteOmnisearchImplCoreOmniSearchServiceImplProperties::omnisearchSuggestionSpellcheckRequireIsSet() const
{
    return m_Omnisearch_suggestion_spellcheck_requireIsSet;
}
void ComAdobeGraniteOmnisearchImplCoreOmniSearchServiceImplProperties::unsetOmnisearch_suggestion_spellcheck_require()
{
    m_Omnisearch_suggestion_spellcheck_requireIsSet = false;
}

}
}
}
}

