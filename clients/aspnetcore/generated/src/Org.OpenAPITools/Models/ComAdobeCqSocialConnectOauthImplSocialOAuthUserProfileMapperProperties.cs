/*
 * Adobe Experience Manager OSGI config (AEM) API
 *
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Linq;
using System.Text;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;

namespace Org.OpenAPITools.Models
{ 
    /// <summary>
    /// 
    /// </summary>
    [DataContract]
    public partial class ComAdobeCqSocialConnectOauthImplSocialOAuthUserProfileMapperProperties : IEquatable<ComAdobeCqSocialConnectOauthImplSocialOAuthUserProfileMapperProperties>
    { 
        /// <summary>
        /// Gets or Sets Facebook
        /// </summary>
        [DataMember(Name="facebook")]
        public ConfigNodePropertyArray Facebook { get; set; }

        /// <summary>
        /// Gets or Sets Twitter
        /// </summary>
        [DataMember(Name="twitter")]
        public ConfigNodePropertyArray Twitter { get; set; }

        /// <summary>
        /// Gets or Sets ProviderConfigUserFolder
        /// </summary>
        [DataMember(Name="provider.config.user.folder")]
        public ConfigNodePropertyString ProviderConfigUserFolder { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class ComAdobeCqSocialConnectOauthImplSocialOAuthUserProfileMapperProperties {\n");
            sb.Append("  Facebook: ").Append(Facebook).Append("\n");
            sb.Append("  Twitter: ").Append(Twitter).Append("\n");
            sb.Append("  ProviderConfigUserFolder: ").Append(ProviderConfigUserFolder).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="obj">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object obj)
        {
            if (obj is null) return false;
            if (ReferenceEquals(this, obj)) return true;
            return obj.GetType() == GetType() && Equals((ComAdobeCqSocialConnectOauthImplSocialOAuthUserProfileMapperProperties)obj);
        }

        /// <summary>
        /// Returns true if ComAdobeCqSocialConnectOauthImplSocialOAuthUserProfileMapperProperties instances are equal
        /// </summary>
        /// <param name="other">Instance of ComAdobeCqSocialConnectOauthImplSocialOAuthUserProfileMapperProperties to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(ComAdobeCqSocialConnectOauthImplSocialOAuthUserProfileMapperProperties other)
        {
            if (other is null) return false;
            if (ReferenceEquals(this, other)) return true;

            return 
                (
                    Facebook == other.Facebook ||
                    Facebook != null &&
                    Facebook.Equals(other.Facebook)
                ) && 
                (
                    Twitter == other.Twitter ||
                    Twitter != null &&
                    Twitter.Equals(other.Twitter)
                ) && 
                (
                    ProviderConfigUserFolder == other.ProviderConfigUserFolder ||
                    ProviderConfigUserFolder != null &&
                    ProviderConfigUserFolder.Equals(other.ProviderConfigUserFolder)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                var hashCode = 41;
                // Suitable nullity checks etc, of course :)
                    if (Facebook != null)
                    hashCode = hashCode * 59 + Facebook.GetHashCode();
                    if (Twitter != null)
                    hashCode = hashCode * 59 + Twitter.GetHashCode();
                    if (ProviderConfigUserFolder != null)
                    hashCode = hashCode * 59 + ProviderConfigUserFolder.GetHashCode();
                return hashCode;
            }
        }

        #region Operators
        #pragma warning disable 1591

        public static bool operator ==(ComAdobeCqSocialConnectOauthImplSocialOAuthUserProfileMapperProperties left, ComAdobeCqSocialConnectOauthImplSocialOAuthUserProfileMapperProperties right)
        {
            return Equals(left, right);
        }

        public static bool operator !=(ComAdobeCqSocialConnectOauthImplSocialOAuthUserProfileMapperProperties left, ComAdobeCqSocialConnectOauthImplSocialOAuthUserProfileMapperProperties right)
        {
            return !Equals(left, right);
        }

        #pragma warning restore 1591
        #endregion Operators
    }
}
