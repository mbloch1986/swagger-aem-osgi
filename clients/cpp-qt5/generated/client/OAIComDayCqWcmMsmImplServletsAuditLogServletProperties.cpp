/**
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


#include "OAIComDayCqWcmMsmImplServletsAuditLogServletProperties.h"

#include "OAIHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace OpenAPI {

OAIComDayCqWcmMsmImplServletsAuditLogServletProperties::OAIComDayCqWcmMsmImplServletsAuditLogServletProperties(QString json) {
    init();
    this->fromJson(json);
}

OAIComDayCqWcmMsmImplServletsAuditLogServletProperties::OAIComDayCqWcmMsmImplServletsAuditLogServletProperties() {
    init();
}

OAIComDayCqWcmMsmImplServletsAuditLogServletProperties::~OAIComDayCqWcmMsmImplServletsAuditLogServletProperties() {
    this->cleanup();
}

void
OAIComDayCqWcmMsmImplServletsAuditLogServletProperties::init() {
    auditlogservlet_default_events_count = new OAIConfigNodePropertyInteger();
    m_auditlogservlet_default_events_count_isSet = false;
    auditlogservlet_default_path = new OAIConfigNodePropertyString();
    m_auditlogservlet_default_path_isSet = false;
}

void
OAIComDayCqWcmMsmImplServletsAuditLogServletProperties::cleanup() {
    if(auditlogservlet_default_events_count != nullptr) { 
        delete auditlogservlet_default_events_count;
    }
    if(auditlogservlet_default_path != nullptr) { 
        delete auditlogservlet_default_path;
    }
}

OAIComDayCqWcmMsmImplServletsAuditLogServletProperties*
OAIComDayCqWcmMsmImplServletsAuditLogServletProperties::fromJson(QString json) {
    QByteArray array (json.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
    return this;
}

void
OAIComDayCqWcmMsmImplServletsAuditLogServletProperties::fromJsonObject(QJsonObject pJson) {
    ::OpenAPI::setValue(&auditlogservlet_default_events_count, pJson["auditlogservlet.default.events.count"], "OAIConfigNodePropertyInteger", "OAIConfigNodePropertyInteger");
    
    ::OpenAPI::setValue(&auditlogservlet_default_path, pJson["auditlogservlet.default.path"], "OAIConfigNodePropertyString", "OAIConfigNodePropertyString");
    
}

QString
OAIComDayCqWcmMsmImplServletsAuditLogServletProperties::asJson ()
{
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject
OAIComDayCqWcmMsmImplServletsAuditLogServletProperties::asJsonObject() {
    QJsonObject obj;
    if((auditlogservlet_default_events_count != nullptr) && (auditlogservlet_default_events_count->isSet())){
        toJsonValue(QString("auditlogservlet.default.events.count"), auditlogservlet_default_events_count, obj, QString("OAIConfigNodePropertyInteger"));
    }
    if((auditlogservlet_default_path != nullptr) && (auditlogservlet_default_path->isSet())){
        toJsonValue(QString("auditlogservlet.default.path"), auditlogservlet_default_path, obj, QString("OAIConfigNodePropertyString"));
    }

    return obj;
}

OAIConfigNodePropertyInteger*
OAIComDayCqWcmMsmImplServletsAuditLogServletProperties::getAuditlogservletDefaultEventsCount() {
    return auditlogservlet_default_events_count;
}
void
OAIComDayCqWcmMsmImplServletsAuditLogServletProperties::setAuditlogservletDefaultEventsCount(OAIConfigNodePropertyInteger* auditlogservlet_default_events_count) {
    this->auditlogservlet_default_events_count = auditlogservlet_default_events_count;
    this->m_auditlogservlet_default_events_count_isSet = true;
}

OAIConfigNodePropertyString*
OAIComDayCqWcmMsmImplServletsAuditLogServletProperties::getAuditlogservletDefaultPath() {
    return auditlogservlet_default_path;
}
void
OAIComDayCqWcmMsmImplServletsAuditLogServletProperties::setAuditlogservletDefaultPath(OAIConfigNodePropertyString* auditlogservlet_default_path) {
    this->auditlogservlet_default_path = auditlogservlet_default_path;
    this->m_auditlogservlet_default_path_isSet = true;
}


bool
OAIComDayCqWcmMsmImplServletsAuditLogServletProperties::isSet(){
    bool isObjectUpdated = false;
    do{
        if(auditlogservlet_default_events_count != nullptr && auditlogservlet_default_events_count->isSet()){ isObjectUpdated = true; break;}
        if(auditlogservlet_default_path != nullptr && auditlogservlet_default_path->isSet()){ isObjectUpdated = true; break;}
    }while(false);
    return isObjectUpdated;
}
}

