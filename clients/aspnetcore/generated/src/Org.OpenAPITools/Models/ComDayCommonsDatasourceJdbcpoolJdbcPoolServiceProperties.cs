/*
 * Adobe Experience Manager OSGI config (AEM) API
 *
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Linq;
using System.Text;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;

namespace Org.OpenAPITools.Models
{ 
    /// <summary>
    /// 
    /// </summary>
    [DataContract]
    public partial class ComDayCommonsDatasourceJdbcpoolJdbcPoolServiceProperties : IEquatable<ComDayCommonsDatasourceJdbcpoolJdbcPoolServiceProperties>
    { 
        /// <summary>
        /// Gets or Sets JdbcDriverClass
        /// </summary>
        [DataMember(Name="jdbc.driver.class")]
        public ConfigNodePropertyString JdbcDriverClass { get; set; }

        /// <summary>
        /// Gets or Sets JdbcConnectionUri
        /// </summary>
        [DataMember(Name="jdbc.connection.uri")]
        public ConfigNodePropertyString JdbcConnectionUri { get; set; }

        /// <summary>
        /// Gets or Sets JdbcUsername
        /// </summary>
        [DataMember(Name="jdbc.username")]
        public ConfigNodePropertyString JdbcUsername { get; set; }

        /// <summary>
        /// Gets or Sets JdbcPassword
        /// </summary>
        [DataMember(Name="jdbc.password")]
        public ConfigNodePropertyString JdbcPassword { get; set; }

        /// <summary>
        /// Gets or Sets JdbcValidationQuery
        /// </summary>
        [DataMember(Name="jdbc.validation.query")]
        public ConfigNodePropertyString JdbcValidationQuery { get; set; }

        /// <summary>
        /// Gets or Sets DefaultReadonly
        /// </summary>
        [DataMember(Name="default.readonly")]
        public ConfigNodePropertyBoolean DefaultReadonly { get; set; }

        /// <summary>
        /// Gets or Sets DefaultAutocommit
        /// </summary>
        [DataMember(Name="default.autocommit")]
        public ConfigNodePropertyBoolean DefaultAutocommit { get; set; }

        /// <summary>
        /// Gets or Sets PoolSize
        /// </summary>
        [DataMember(Name="pool.size")]
        public ConfigNodePropertyInteger PoolSize { get; set; }

        /// <summary>
        /// Gets or Sets PoolMaxWaitMsec
        /// </summary>
        [DataMember(Name="pool.max.wait.msec")]
        public ConfigNodePropertyInteger PoolMaxWaitMsec { get; set; }

        /// <summary>
        /// Gets or Sets DatasourceName
        /// </summary>
        [DataMember(Name="datasource.name")]
        public ConfigNodePropertyString DatasourceName { get; set; }

        /// <summary>
        /// Gets or Sets DatasourceSvcProperties
        /// </summary>
        [DataMember(Name="datasource.svc.properties")]
        public ConfigNodePropertyArray DatasourceSvcProperties { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class ComDayCommonsDatasourceJdbcpoolJdbcPoolServiceProperties {\n");
            sb.Append("  JdbcDriverClass: ").Append(JdbcDriverClass).Append("\n");
            sb.Append("  JdbcConnectionUri: ").Append(JdbcConnectionUri).Append("\n");
            sb.Append("  JdbcUsername: ").Append(JdbcUsername).Append("\n");
            sb.Append("  JdbcPassword: ").Append(JdbcPassword).Append("\n");
            sb.Append("  JdbcValidationQuery: ").Append(JdbcValidationQuery).Append("\n");
            sb.Append("  DefaultReadonly: ").Append(DefaultReadonly).Append("\n");
            sb.Append("  DefaultAutocommit: ").Append(DefaultAutocommit).Append("\n");
            sb.Append("  PoolSize: ").Append(PoolSize).Append("\n");
            sb.Append("  PoolMaxWaitMsec: ").Append(PoolMaxWaitMsec).Append("\n");
            sb.Append("  DatasourceName: ").Append(DatasourceName).Append("\n");
            sb.Append("  DatasourceSvcProperties: ").Append(DatasourceSvcProperties).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="obj">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object obj)
        {
            if (obj is null) return false;
            if (ReferenceEquals(this, obj)) return true;
            return obj.GetType() == GetType() && Equals((ComDayCommonsDatasourceJdbcpoolJdbcPoolServiceProperties)obj);
        }

        /// <summary>
        /// Returns true if ComDayCommonsDatasourceJdbcpoolJdbcPoolServiceProperties instances are equal
        /// </summary>
        /// <param name="other">Instance of ComDayCommonsDatasourceJdbcpoolJdbcPoolServiceProperties to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(ComDayCommonsDatasourceJdbcpoolJdbcPoolServiceProperties other)
        {
            if (other is null) return false;
            if (ReferenceEquals(this, other)) return true;

            return 
                (
                    JdbcDriverClass == other.JdbcDriverClass ||
                    JdbcDriverClass != null &&
                    JdbcDriverClass.Equals(other.JdbcDriverClass)
                ) && 
                (
                    JdbcConnectionUri == other.JdbcConnectionUri ||
                    JdbcConnectionUri != null &&
                    JdbcConnectionUri.Equals(other.JdbcConnectionUri)
                ) && 
                (
                    JdbcUsername == other.JdbcUsername ||
                    JdbcUsername != null &&
                    JdbcUsername.Equals(other.JdbcUsername)
                ) && 
                (
                    JdbcPassword == other.JdbcPassword ||
                    JdbcPassword != null &&
                    JdbcPassword.Equals(other.JdbcPassword)
                ) && 
                (
                    JdbcValidationQuery == other.JdbcValidationQuery ||
                    JdbcValidationQuery != null &&
                    JdbcValidationQuery.Equals(other.JdbcValidationQuery)
                ) && 
                (
                    DefaultReadonly == other.DefaultReadonly ||
                    DefaultReadonly != null &&
                    DefaultReadonly.Equals(other.DefaultReadonly)
                ) && 
                (
                    DefaultAutocommit == other.DefaultAutocommit ||
                    DefaultAutocommit != null &&
                    DefaultAutocommit.Equals(other.DefaultAutocommit)
                ) && 
                (
                    PoolSize == other.PoolSize ||
                    PoolSize != null &&
                    PoolSize.Equals(other.PoolSize)
                ) && 
                (
                    PoolMaxWaitMsec == other.PoolMaxWaitMsec ||
                    PoolMaxWaitMsec != null &&
                    PoolMaxWaitMsec.Equals(other.PoolMaxWaitMsec)
                ) && 
                (
                    DatasourceName == other.DatasourceName ||
                    DatasourceName != null &&
                    DatasourceName.Equals(other.DatasourceName)
                ) && 
                (
                    DatasourceSvcProperties == other.DatasourceSvcProperties ||
                    DatasourceSvcProperties != null &&
                    DatasourceSvcProperties.Equals(other.DatasourceSvcProperties)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                var hashCode = 41;
                // Suitable nullity checks etc, of course :)
                    if (JdbcDriverClass != null)
                    hashCode = hashCode * 59 + JdbcDriverClass.GetHashCode();
                    if (JdbcConnectionUri != null)
                    hashCode = hashCode * 59 + JdbcConnectionUri.GetHashCode();
                    if (JdbcUsername != null)
                    hashCode = hashCode * 59 + JdbcUsername.GetHashCode();
                    if (JdbcPassword != null)
                    hashCode = hashCode * 59 + JdbcPassword.GetHashCode();
                    if (JdbcValidationQuery != null)
                    hashCode = hashCode * 59 + JdbcValidationQuery.GetHashCode();
                    if (DefaultReadonly != null)
                    hashCode = hashCode * 59 + DefaultReadonly.GetHashCode();
                    if (DefaultAutocommit != null)
                    hashCode = hashCode * 59 + DefaultAutocommit.GetHashCode();
                    if (PoolSize != null)
                    hashCode = hashCode * 59 + PoolSize.GetHashCode();
                    if (PoolMaxWaitMsec != null)
                    hashCode = hashCode * 59 + PoolMaxWaitMsec.GetHashCode();
                    if (DatasourceName != null)
                    hashCode = hashCode * 59 + DatasourceName.GetHashCode();
                    if (DatasourceSvcProperties != null)
                    hashCode = hashCode * 59 + DatasourceSvcProperties.GetHashCode();
                return hashCode;
            }
        }

        #region Operators
        #pragma warning disable 1591

        public static bool operator ==(ComDayCommonsDatasourceJdbcpoolJdbcPoolServiceProperties left, ComDayCommonsDatasourceJdbcpoolJdbcPoolServiceProperties right)
        {
            return Equals(left, right);
        }

        public static bool operator !=(ComDayCommonsDatasourceJdbcpoolJdbcPoolServiceProperties left, ComDayCommonsDatasourceJdbcpoolJdbcPoolServiceProperties right)
        {
            return !Equals(left, right);
        }

        #pragma warning restore 1591
        #endregion Operators
    }
}
