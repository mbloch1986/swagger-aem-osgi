<?php
/**
 * ComAdobeGraniteAuthOauthAccesstokenProviderProperties
 *
 * PHP version 5
 *
 * @category Class
 * @package  OpenAPI\Server\Model
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * Adobe Experience Manager OSGI config (AEM) API
 *
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 *
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Do not edit the class manually.
 */

namespace OpenAPI\Server\Model;

use Symfony\Component\Validator\Constraints as Assert;
use JMS\Serializer\Annotation\Type;
use JMS\Serializer\Annotation\SerializedName;

/**
 * Class representing the ComAdobeGraniteAuthOauthAccesstokenProviderProperties model.
 *
 * @package OpenAPI\Server\Model
 * @author  OpenAPI Generator team
 */
class ComAdobeGraniteAuthOauthAccesstokenProviderProperties 
{
        /**
     * @var OpenAPI\Server\Model\ConfigNodePropertyString|null
     * @SerializedName("name")
     * @Assert\Type("OpenAPI\Server\Model\ConfigNodePropertyString")
     * @Type("OpenAPI\Server\Model\ConfigNodePropertyString")
     */
    protected $name;

    /**
     * @var OpenAPI\Server\Model\ConfigNodePropertyString|null
     * @SerializedName("auth.token.provider.title")
     * @Assert\Type("OpenAPI\Server\Model\ConfigNodePropertyString")
     * @Type("OpenAPI\Server\Model\ConfigNodePropertyString")
     */
    protected $authTokenProviderTitle;

    /**
     * @var OpenAPI\Server\Model\ConfigNodePropertyArray|null
     * @SerializedName("auth.token.provider.default.claims")
     * @Assert\Type("OpenAPI\Server\Model\ConfigNodePropertyArray")
     * @Type("OpenAPI\Server\Model\ConfigNodePropertyArray")
     */
    protected $authTokenProviderDefaultClaims;

    /**
     * @var OpenAPI\Server\Model\ConfigNodePropertyString|null
     * @SerializedName("auth.token.provider.endpoint")
     * @Assert\Type("OpenAPI\Server\Model\ConfigNodePropertyString")
     * @Type("OpenAPI\Server\Model\ConfigNodePropertyString")
     */
    protected $authTokenProviderEndpoint;

    /**
     * @var OpenAPI\Server\Model\ConfigNodePropertyString|null
     * @SerializedName("auth.access.token.request")
     * @Assert\Type("OpenAPI\Server\Model\ConfigNodePropertyString")
     * @Type("OpenAPI\Server\Model\ConfigNodePropertyString")
     */
    protected $authAccessTokenRequest;

    /**
     * @var OpenAPI\Server\Model\ConfigNodePropertyString|null
     * @SerializedName("auth.token.provider.keypair.alias")
     * @Assert\Type("OpenAPI\Server\Model\ConfigNodePropertyString")
     * @Type("OpenAPI\Server\Model\ConfigNodePropertyString")
     */
    protected $authTokenProviderKeypairAlias;

    /**
     * @var OpenAPI\Server\Model\ConfigNodePropertyInteger|null
     * @SerializedName("auth.token.provider.conn.timeout")
     * @Assert\Type("OpenAPI\Server\Model\ConfigNodePropertyInteger")
     * @Type("OpenAPI\Server\Model\ConfigNodePropertyInteger")
     */
    protected $authTokenProviderConnTimeout;

    /**
     * @var OpenAPI\Server\Model\ConfigNodePropertyInteger|null
     * @SerializedName("auth.token.provider.so.timeout")
     * @Assert\Type("OpenAPI\Server\Model\ConfigNodePropertyInteger")
     * @Type("OpenAPI\Server\Model\ConfigNodePropertyInteger")
     */
    protected $authTokenProviderSoTimeout;

    /**
     * @var OpenAPI\Server\Model\ConfigNodePropertyString|null
     * @SerializedName("auth.token.provider.client.id")
     * @Assert\Type("OpenAPI\Server\Model\ConfigNodePropertyString")
     * @Type("OpenAPI\Server\Model\ConfigNodePropertyString")
     */
    protected $authTokenProviderClientId;

    /**
     * @var OpenAPI\Server\Model\ConfigNodePropertyString|null
     * @SerializedName("auth.token.provider.scope")
     * @Assert\Type("OpenAPI\Server\Model\ConfigNodePropertyString")
     * @Type("OpenAPI\Server\Model\ConfigNodePropertyString")
     */
    protected $authTokenProviderScope;

    /**
     * @var OpenAPI\Server\Model\ConfigNodePropertyBoolean|null
     * @SerializedName("auth.token.provider.reuse.access.token")
     * @Assert\Type("OpenAPI\Server\Model\ConfigNodePropertyBoolean")
     * @Type("OpenAPI\Server\Model\ConfigNodePropertyBoolean")
     */
    protected $authTokenProviderReuseAccessToken;

    /**
     * @var OpenAPI\Server\Model\ConfigNodePropertyBoolean|null
     * @SerializedName("auth.token.provider.relaxed.ssl")
     * @Assert\Type("OpenAPI\Server\Model\ConfigNodePropertyBoolean")
     * @Type("OpenAPI\Server\Model\ConfigNodePropertyBoolean")
     */
    protected $authTokenProviderRelaxedSsl;

    /**
     * @var OpenAPI\Server\Model\ConfigNodePropertyString|null
     * @SerializedName("token.request.customizer.type")
     * @Assert\Type("OpenAPI\Server\Model\ConfigNodePropertyString")
     * @Type("OpenAPI\Server\Model\ConfigNodePropertyString")
     */
    protected $tokenRequestCustomizerType;

    /**
     * @var OpenAPI\Server\Model\ConfigNodePropertyString|null
     * @SerializedName("auth.token.validator.type")
     * @Assert\Type("OpenAPI\Server\Model\ConfigNodePropertyString")
     * @Type("OpenAPI\Server\Model\ConfigNodePropertyString")
     */
    protected $authTokenValidatorType;

    /**
     * Constructor
     * @param mixed[] $data Associated array of property values initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->name = isset($data['name']) ? $data['name'] : null;
        $this->authTokenProviderTitle = isset($data['authTokenProviderTitle']) ? $data['authTokenProviderTitle'] : null;
        $this->authTokenProviderDefaultClaims = isset($data['authTokenProviderDefaultClaims']) ? $data['authTokenProviderDefaultClaims'] : null;
        $this->authTokenProviderEndpoint = isset($data['authTokenProviderEndpoint']) ? $data['authTokenProviderEndpoint'] : null;
        $this->authAccessTokenRequest = isset($data['authAccessTokenRequest']) ? $data['authAccessTokenRequest'] : null;
        $this->authTokenProviderKeypairAlias = isset($data['authTokenProviderKeypairAlias']) ? $data['authTokenProviderKeypairAlias'] : null;
        $this->authTokenProviderConnTimeout = isset($data['authTokenProviderConnTimeout']) ? $data['authTokenProviderConnTimeout'] : null;
        $this->authTokenProviderSoTimeout = isset($data['authTokenProviderSoTimeout']) ? $data['authTokenProviderSoTimeout'] : null;
        $this->authTokenProviderClientId = isset($data['authTokenProviderClientId']) ? $data['authTokenProviderClientId'] : null;
        $this->authTokenProviderScope = isset($data['authTokenProviderScope']) ? $data['authTokenProviderScope'] : null;
        $this->authTokenProviderReuseAccessToken = isset($data['authTokenProviderReuseAccessToken']) ? $data['authTokenProviderReuseAccessToken'] : null;
        $this->authTokenProviderRelaxedSsl = isset($data['authTokenProviderRelaxedSsl']) ? $data['authTokenProviderRelaxedSsl'] : null;
        $this->tokenRequestCustomizerType = isset($data['tokenRequestCustomizerType']) ? $data['tokenRequestCustomizerType'] : null;
        $this->authTokenValidatorType = isset($data['authTokenValidatorType']) ? $data['authTokenValidatorType'] : null;
    }

    /**
     * Gets name.
     *
     * @return OpenAPI\Server\Model\ConfigNodePropertyString|null
     */
    public function getName()
    {
        return $this->name;
    }

    /**
     * Sets name.
     *
     * @param OpenAPI\Server\Model\ConfigNodePropertyString|null $name
     *
     * @return $this
     */
    public function setName(ConfigNodePropertyString $name = null)
    {
        $this->name = $name;

        return $this;
    }

    /**
     * Gets authTokenProviderTitle.
     *
     * @return OpenAPI\Server\Model\ConfigNodePropertyString|null
     */
    public function getAuthTokenProviderTitle()
    {
        return $this->authTokenProviderTitle;
    }

    /**
     * Sets authTokenProviderTitle.
     *
     * @param OpenAPI\Server\Model\ConfigNodePropertyString|null $authTokenProviderTitle
     *
     * @return $this
     */
    public function setAuthTokenProviderTitle(ConfigNodePropertyString $authTokenProviderTitle = null)
    {
        $this->authTokenProviderTitle = $authTokenProviderTitle;

        return $this;
    }

    /**
     * Gets authTokenProviderDefaultClaims.
     *
     * @return OpenAPI\Server\Model\ConfigNodePropertyArray|null
     */
    public function getAuthTokenProviderDefaultClaims()
    {
        return $this->authTokenProviderDefaultClaims;
    }

    /**
     * Sets authTokenProviderDefaultClaims.
     *
     * @param OpenAPI\Server\Model\ConfigNodePropertyArray|null $authTokenProviderDefaultClaims
     *
     * @return $this
     */
    public function setAuthTokenProviderDefaultClaims(ConfigNodePropertyArray $authTokenProviderDefaultClaims = null)
    {
        $this->authTokenProviderDefaultClaims = $authTokenProviderDefaultClaims;

        return $this;
    }

    /**
     * Gets authTokenProviderEndpoint.
     *
     * @return OpenAPI\Server\Model\ConfigNodePropertyString|null
     */
    public function getAuthTokenProviderEndpoint()
    {
        return $this->authTokenProviderEndpoint;
    }

    /**
     * Sets authTokenProviderEndpoint.
     *
     * @param OpenAPI\Server\Model\ConfigNodePropertyString|null $authTokenProviderEndpoint
     *
     * @return $this
     */
    public function setAuthTokenProviderEndpoint(ConfigNodePropertyString $authTokenProviderEndpoint = null)
    {
        $this->authTokenProviderEndpoint = $authTokenProviderEndpoint;

        return $this;
    }

    /**
     * Gets authAccessTokenRequest.
     *
     * @return OpenAPI\Server\Model\ConfigNodePropertyString|null
     */
    public function getAuthAccessTokenRequest()
    {
        return $this->authAccessTokenRequest;
    }

    /**
     * Sets authAccessTokenRequest.
     *
     * @param OpenAPI\Server\Model\ConfigNodePropertyString|null $authAccessTokenRequest
     *
     * @return $this
     */
    public function setAuthAccessTokenRequest(ConfigNodePropertyString $authAccessTokenRequest = null)
    {
        $this->authAccessTokenRequest = $authAccessTokenRequest;

        return $this;
    }

    /**
     * Gets authTokenProviderKeypairAlias.
     *
     * @return OpenAPI\Server\Model\ConfigNodePropertyString|null
     */
    public function getAuthTokenProviderKeypairAlias()
    {
        return $this->authTokenProviderKeypairAlias;
    }

    /**
     * Sets authTokenProviderKeypairAlias.
     *
     * @param OpenAPI\Server\Model\ConfigNodePropertyString|null $authTokenProviderKeypairAlias
     *
     * @return $this
     */
    public function setAuthTokenProviderKeypairAlias(ConfigNodePropertyString $authTokenProviderKeypairAlias = null)
    {
        $this->authTokenProviderKeypairAlias = $authTokenProviderKeypairAlias;

        return $this;
    }

    /**
     * Gets authTokenProviderConnTimeout.
     *
     * @return OpenAPI\Server\Model\ConfigNodePropertyInteger|null
     */
    public function getAuthTokenProviderConnTimeout()
    {
        return $this->authTokenProviderConnTimeout;
    }

    /**
     * Sets authTokenProviderConnTimeout.
     *
     * @param OpenAPI\Server\Model\ConfigNodePropertyInteger|null $authTokenProviderConnTimeout
     *
     * @return $this
     */
    public function setAuthTokenProviderConnTimeout(ConfigNodePropertyInteger $authTokenProviderConnTimeout = null)
    {
        $this->authTokenProviderConnTimeout = $authTokenProviderConnTimeout;

        return $this;
    }

    /**
     * Gets authTokenProviderSoTimeout.
     *
     * @return OpenAPI\Server\Model\ConfigNodePropertyInteger|null
     */
    public function getAuthTokenProviderSoTimeout()
    {
        return $this->authTokenProviderSoTimeout;
    }

    /**
     * Sets authTokenProviderSoTimeout.
     *
     * @param OpenAPI\Server\Model\ConfigNodePropertyInteger|null $authTokenProviderSoTimeout
     *
     * @return $this
     */
    public function setAuthTokenProviderSoTimeout(ConfigNodePropertyInteger $authTokenProviderSoTimeout = null)
    {
        $this->authTokenProviderSoTimeout = $authTokenProviderSoTimeout;

        return $this;
    }

    /**
     * Gets authTokenProviderClientId.
     *
     * @return OpenAPI\Server\Model\ConfigNodePropertyString|null
     */
    public function getAuthTokenProviderClientId()
    {
        return $this->authTokenProviderClientId;
    }

    /**
     * Sets authTokenProviderClientId.
     *
     * @param OpenAPI\Server\Model\ConfigNodePropertyString|null $authTokenProviderClientId
     *
     * @return $this
     */
    public function setAuthTokenProviderClientId(ConfigNodePropertyString $authTokenProviderClientId = null)
    {
        $this->authTokenProviderClientId = $authTokenProviderClientId;

        return $this;
    }

    /**
     * Gets authTokenProviderScope.
     *
     * @return OpenAPI\Server\Model\ConfigNodePropertyString|null
     */
    public function getAuthTokenProviderScope()
    {
        return $this->authTokenProviderScope;
    }

    /**
     * Sets authTokenProviderScope.
     *
     * @param OpenAPI\Server\Model\ConfigNodePropertyString|null $authTokenProviderScope
     *
     * @return $this
     */
    public function setAuthTokenProviderScope(ConfigNodePropertyString $authTokenProviderScope = null)
    {
        $this->authTokenProviderScope = $authTokenProviderScope;

        return $this;
    }

    /**
     * Gets authTokenProviderReuseAccessToken.
     *
     * @return OpenAPI\Server\Model\ConfigNodePropertyBoolean|null
     */
    public function getAuthTokenProviderReuseAccessToken()
    {
        return $this->authTokenProviderReuseAccessToken;
    }

    /**
     * Sets authTokenProviderReuseAccessToken.
     *
     * @param OpenAPI\Server\Model\ConfigNodePropertyBoolean|null $authTokenProviderReuseAccessToken
     *
     * @return $this
     */
    public function setAuthTokenProviderReuseAccessToken(ConfigNodePropertyBoolean $authTokenProviderReuseAccessToken = null)
    {
        $this->authTokenProviderReuseAccessToken = $authTokenProviderReuseAccessToken;

        return $this;
    }

    /**
     * Gets authTokenProviderRelaxedSsl.
     *
     * @return OpenAPI\Server\Model\ConfigNodePropertyBoolean|null
     */
    public function getAuthTokenProviderRelaxedSsl()
    {
        return $this->authTokenProviderRelaxedSsl;
    }

    /**
     * Sets authTokenProviderRelaxedSsl.
     *
     * @param OpenAPI\Server\Model\ConfigNodePropertyBoolean|null $authTokenProviderRelaxedSsl
     *
     * @return $this
     */
    public function setAuthTokenProviderRelaxedSsl(ConfigNodePropertyBoolean $authTokenProviderRelaxedSsl = null)
    {
        $this->authTokenProviderRelaxedSsl = $authTokenProviderRelaxedSsl;

        return $this;
    }

    /**
     * Gets tokenRequestCustomizerType.
     *
     * @return OpenAPI\Server\Model\ConfigNodePropertyString|null
     */
    public function getTokenRequestCustomizerType()
    {
        return $this->tokenRequestCustomizerType;
    }

    /**
     * Sets tokenRequestCustomizerType.
     *
     * @param OpenAPI\Server\Model\ConfigNodePropertyString|null $tokenRequestCustomizerType
     *
     * @return $this
     */
    public function setTokenRequestCustomizerType(ConfigNodePropertyString $tokenRequestCustomizerType = null)
    {
        $this->tokenRequestCustomizerType = $tokenRequestCustomizerType;

        return $this;
    }

    /**
     * Gets authTokenValidatorType.
     *
     * @return OpenAPI\Server\Model\ConfigNodePropertyString|null
     */
    public function getAuthTokenValidatorType()
    {
        return $this->authTokenValidatorType;
    }

    /**
     * Sets authTokenValidatorType.
     *
     * @param OpenAPI\Server\Model\ConfigNodePropertyString|null $authTokenValidatorType
     *
     * @return $this
     */
    public function setAuthTokenValidatorType(ConfigNodePropertyString $authTokenValidatorType = null)
    {
        $this->authTokenValidatorType = $authTokenValidatorType;

        return $this;
    }
}


