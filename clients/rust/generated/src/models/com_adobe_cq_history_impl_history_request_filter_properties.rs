/* 
 * Adobe Experience Manager OSGI config (AEM) API
 *
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 * Generated by: https://openapi-generator.tech
 */


#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct ComAdobeCqHistoryImplHistoryRequestFilterProperties {
  #[serde(rename = "history.requestFilter.excludedSelectors")]
  history_request_filter_excluded_selectors: Option<::models::ConfigNodePropertyArray>,
  #[serde(rename = "history.requestFilter.excludedExtensions")]
  history_request_filter_excluded_extensions: Option<::models::ConfigNodePropertyArray>
}

impl ComAdobeCqHistoryImplHistoryRequestFilterProperties {
  pub fn new() -> ComAdobeCqHistoryImplHistoryRequestFilterProperties {
    ComAdobeCqHistoryImplHistoryRequestFilterProperties {
      history_request_filter_excluded_selectors: None,
      history_request_filter_excluded_extensions: None
    }
  }

  pub fn set_history_request_filter_excluded_selectors(&mut self, history_request_filter_excluded_selectors: ::models::ConfigNodePropertyArray) {
    self.history_request_filter_excluded_selectors = Some(history_request_filter_excluded_selectors);
  }

  pub fn with_history_request_filter_excluded_selectors(mut self, history_request_filter_excluded_selectors: ::models::ConfigNodePropertyArray) -> ComAdobeCqHistoryImplHistoryRequestFilterProperties {
    self.history_request_filter_excluded_selectors = Some(history_request_filter_excluded_selectors);
    self
  }

  pub fn history_request_filter_excluded_selectors(&self) -> Option<&::models::ConfigNodePropertyArray> {
    self.history_request_filter_excluded_selectors.as_ref()
  }

  pub fn reset_history_request_filter_excluded_selectors(&mut self) {
    self.history_request_filter_excluded_selectors = None;
  }

  pub fn set_history_request_filter_excluded_extensions(&mut self, history_request_filter_excluded_extensions: ::models::ConfigNodePropertyArray) {
    self.history_request_filter_excluded_extensions = Some(history_request_filter_excluded_extensions);
  }

  pub fn with_history_request_filter_excluded_extensions(mut self, history_request_filter_excluded_extensions: ::models::ConfigNodePropertyArray) -> ComAdobeCqHistoryImplHistoryRequestFilterProperties {
    self.history_request_filter_excluded_extensions = Some(history_request_filter_excluded_extensions);
    self
  }

  pub fn history_request_filter_excluded_extensions(&self) -> Option<&::models::ConfigNodePropertyArray> {
    self.history_request_filter_excluded_extensions.as_ref()
  }

  pub fn reset_history_request_filter_excluded_extensions(&mut self) {
    self.history_request_filter_excluded_extensions = None;
  }

}



